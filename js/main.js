/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/d3-array/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/array.js ***!
  \********************************************/
/*! exports provided: slice, map */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
var array = Array.prototype;
var slice = array.slice;
var map = array.map;

/***/ }),

/***/ "./node_modules/d3-array/src/ascending.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/ascending.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
});

/***/ }),

/***/ "./node_modules/d3-array/src/bisect.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/bisect.js ***!
  \*********************************************/
/*! exports provided: bisectRight, bisectLeft, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return bisectRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return bisectLeft; });
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _bisector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisector */ "./node_modules/d3-array/src/bisector.js");


var ascendingBisect = Object(_bisector__WEBPACK_IMPORTED_MODULE_1__["default"])(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"]);
var bisectRight = ascendingBisect.right;
var bisectLeft = ascendingBisect.left;
/* harmony default export */ __webpack_exports__["default"] = (bisectRight);

/***/ }),

/***/ "./node_modules/d3-array/src/bisector.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/bisector.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-array/src/ascending.js");

/* harmony default export */ __webpack_exports__["default"] = (function (compare) {
  if (compare.length === 1) compare = ascendingComparator(compare);
  return {
    left: function left(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;
      }

      return lo;
    },
    right: function right(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;
      }

      return lo;
    }
  };
});

function ascendingComparator(f) {
  return function (d, x) {
    return Object(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"])(f(d), x);
  };
}

/***/ }),

/***/ "./node_modules/d3-array/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-array/src/cross.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/cross.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _pairs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pairs */ "./node_modules/d3-array/src/pairs.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values0, values1, reduce) {
  var n0 = values0.length,
      n1 = values1.length,
      values = new Array(n0 * n1),
      i0,
      i1,
      i,
      value0;
  if (reduce == null) reduce = _pairs__WEBPACK_IMPORTED_MODULE_0__["pair"];

  for (i0 = i = 0; i0 < n0; ++i0) {
    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {
      values[i] = reduce(value0, values1[i1]);
    }
  }

  return values;
});

/***/ }),

/***/ "./node_modules/d3-array/src/descending.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-array/src/descending.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
});

/***/ }),

/***/ "./node_modules/d3-array/src/deviation.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/deviation.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _variance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./variance */ "./node_modules/d3-array/src/variance.js");

/* harmony default export */ __webpack_exports__["default"] = (function (array, f) {
  var v = Object(_variance__WEBPACK_IMPORTED_MODULE_0__["default"])(array, f);
  return v ? Math.sqrt(v) : v;
});

/***/ }),

/***/ "./node_modules/d3-array/src/extent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/extent.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  }

  return [min, max];
});

/***/ }),

/***/ "./node_modules/d3-array/src/histogram.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/histogram.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/d3-array/src/array.js");
/* harmony import */ var _bisect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisect */ "./node_modules/d3-array/src/bisect.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-array/src/constant.js");
/* harmony import */ var _extent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extent */ "./node_modules/d3-array/src/extent.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-array/src/identity.js");
/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./range */ "./node_modules/d3-array/src/range.js");
/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ticks */ "./node_modules/d3-array/src/ticks.js");
/* harmony import */ var _threshold_sturges__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./threshold/sturges */ "./node_modules/d3-array/src/threshold/sturges.js");








/* harmony default export */ __webpack_exports__["default"] = (function () {
  var value = _identity__WEBPACK_IMPORTED_MODULE_4__["default"],
      domain = _extent__WEBPACK_IMPORTED_MODULE_3__["default"],
      threshold = _threshold_sturges__WEBPACK_IMPORTED_MODULE_7__["default"];

  function histogram(data) {
    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      tz = Object(_ticks__WEBPACK_IMPORTED_MODULE_6__["tickStep"])(x0, x1, tz);
      tz = Object(_range__WEBPACK_IMPORTED_MODULE_5__["default"])(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive
    } // Remove any thresholds outside the domain.


    var m = tz.length;

    while (tz[0] <= x0) {
      tz.shift(), --m;
    }

    while (tz[m - 1] > x1) {
      tz.pop(), --m;
    }

    var bins = new Array(m + 1),
        bin; // Initialize bins.

    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    } // Assign data to bins by value, ignoring any outside the domain.


    for (i = 0; i < n; ++i) {
      x = values[i];

      if (x0 <= x && x <= x1) {
        bins[Object(_bisect__WEBPACK_IMPORTED_MODULE_1__["default"])(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : value;
  };

  histogram.domain = function (_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_)) : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : threshold;
  };

  return histogram;
});

/***/ }),

/***/ "./node_modules/d3-array/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/identity.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return x;
});

/***/ }),

/***/ "./node_modules/d3-array/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/index.js ***!
  \********************************************/
/*! exports provided: bisect, bisectRight, bisectLeft, ascending, bisector, cross, descending, deviation, extent, histogram, thresholdFreedmanDiaconis, thresholdScott, thresholdSturges, max, mean, median, merge, min, pairs, permute, quantile, range, scan, shuffle, sum, ticks, tickIncrement, tickStep, transpose, variance, zip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bisect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bisect */ "./node_modules/d3-array/src/bisect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisect", function() { return _bisect__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return _bisect__WEBPACK_IMPORTED_MODULE_0__["bisectRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return _bisect__WEBPACK_IMPORTED_MODULE_0__["bisectLeft"]; });

/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-array/src/ascending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ascending", function() { return _ascending__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _bisector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bisector */ "./node_modules/d3-array/src/bisector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisector", function() { return _bisector__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _cross__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cross */ "./node_modules/d3-array/src/cross.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return _cross__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _descending__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./descending */ "./node_modules/d3-array/src/descending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "descending", function() { return _descending__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _deviation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./deviation */ "./node_modules/d3-array/src/deviation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deviation", function() { return _deviation__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _extent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./extent */ "./node_modules/d3-array/src/extent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return _extent__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _histogram__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./histogram */ "./node_modules/d3-array/src/histogram.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "histogram", function() { return _histogram__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _threshold_freedmanDiaconis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./threshold/freedmanDiaconis */ "./node_modules/d3-array/src/threshold/freedmanDiaconis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdFreedmanDiaconis", function() { return _threshold_freedmanDiaconis__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _threshold_scott__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./threshold/scott */ "./node_modules/d3-array/src/threshold/scott.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdScott", function() { return _threshold_scott__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _threshold_sturges__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./threshold/sturges */ "./node_modules/d3-array/src/threshold/sturges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdSturges", function() { return _threshold_sturges__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _max__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./max */ "./node_modules/d3-array/src/max.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _max__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _mean__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./mean */ "./node_modules/d3-array/src/mean.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return _mean__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _median__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./median */ "./node_modules/d3-array/src/median.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "median", function() { return _median__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./merge */ "./node_modules/d3-array/src/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _merge__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _min__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./min */ "./node_modules/d3-array/src/min.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _min__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _pairs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./pairs */ "./node_modules/d3-array/src/pairs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return _pairs__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _permute__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./permute */ "./node_modules/d3-array/src/permute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permute", function() { return _permute__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./quantile */ "./node_modules/d3-array/src/quantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantile", function() { return _quantile__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./range */ "./node_modules/d3-array/src/range.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _range__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./scan */ "./node_modules/d3-array/src/scan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return _scan__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _shuffle__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./shuffle */ "./node_modules/d3-array/src/shuffle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return _shuffle__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./sum */ "./node_modules/d3-array/src/sum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return _sum__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./ticks */ "./node_modules/d3-array/src/ticks.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ticks", function() { return _ticks__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return _ticks__WEBPACK_IMPORTED_MODULE_23__["tickIncrement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return _ticks__WEBPACK_IMPORTED_MODULE_23__["tickStep"]; });

/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./transpose */ "./node_modules/d3-array/src/transpose.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return _transpose__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _variance__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./variance */ "./node_modules/d3-array/src/variance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "variance", function() { return _variance__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _zip__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./zip */ "./node_modules/d3-array/src/zip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _zip__WEBPACK_IMPORTED_MODULE_26__["default"]; });





























/***/ }),

/***/ "./node_modules/d3-array/src/max.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/max.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      i = -1,
      value,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && value > max) {
            max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && value > max) {
            max = value;
          }
        }
      }
    }
  }

  return max;
});

/***/ }),

/***/ "./node_modules/d3-array/src/mean.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/mean.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-array/src/number.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      m = n,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(values[i]))) sum += value;else --m;
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(valueof(values[i], i, values)))) sum += value;else --m;
    }
  }

  if (m) return sum / m;
});

/***/ }),

/***/ "./node_modules/d3-array/src/median.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/median.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number */ "./node_modules/d3-array/src/number.js");
/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./quantile */ "./node_modules/d3-array/src/quantile.js");



/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      i = -1,
      value,
      numbers = [];

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_1__["default"])(values[i]))) {
        numbers.push(value);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_1__["default"])(valueof(values[i], i, values)))) {
        numbers.push(value);
      }
    }
  }

  return Object(_quantile__WEBPACK_IMPORTED_MODULE_2__["default"])(numbers.sort(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"]), 0.5);
});

/***/ }),

/***/ "./node_modules/d3-array/src/merge.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/merge.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (arrays) {
  var n = arrays.length,
      m,
      i = -1,
      j = 0,
      merged,
      array;

  while (++i < n) {
    j += arrays[i].length;
  }

  merged = new Array(j);

  while (--n >= 0) {
    array = arrays[n];
    m = array.length;

    while (--m >= 0) {
      merged[--j] = array[m];
    }
  }

  return merged;
});

/***/ }),

/***/ "./node_modules/d3-array/src/min.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/min.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && min > value) {
            min = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && min > value) {
            min = value;
          }
        }
      }
    }
  }

  return min;
});

/***/ }),

/***/ "./node_modules/d3-array/src/number.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/number.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return x === null ? NaN : +x;
});

/***/ }),

/***/ "./node_modules/d3-array/src/pairs.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/pairs.js ***!
  \********************************************/
/*! exports provided: default, pair */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pair", function() { return pair; });
/* harmony default export */ __webpack_exports__["default"] = (function (array, f) {
  if (f == null) f = pair;
  var i = 0,
      n = array.length - 1,
      p = array[0],
      pairs = new Array(n < 0 ? 0 : n);

  while (i < n) {
    pairs[i] = f(p, p = array[++i]);
  }

  return pairs;
});
function pair(a, b) {
  return [a, b];
}

/***/ }),

/***/ "./node_modules/d3-array/src/permute.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/permute.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (array, indexes) {
  var i = indexes.length,
      permutes = new Array(i);

  while (i--) {
    permutes[i] = array[indexes[i]];
  }

  return permutes;
});

/***/ }),

/***/ "./node_modules/d3-array/src/quantile.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/quantile.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-array/src/number.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values, p, valueof) {
  if (valueof == null) valueof = _number__WEBPACK_IMPORTED_MODULE_0__["default"];
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
});

/***/ }),

/***/ "./node_modules/d3-array/src/range.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/range.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
});

/***/ }),

/***/ "./node_modules/d3-array/src/scan.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/scan.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-array/src/ascending.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values, compare) {
  if (!(n = values.length)) return;
  var n,
      i = 0,
      j = 0,
      xi,
      xj = values[j];
  if (compare == null) compare = _ascending__WEBPACK_IMPORTED_MODULE_0__["default"];

  while (++i < n) {
    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {
      xj = xi, j = i;
    }
  }

  if (compare(xj, xj) === 0) return j;
});

/***/ }),

/***/ "./node_modules/d3-array/src/shuffle.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/shuffle.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (array, i0, i1) {
  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m + i0];
    array[m + i0] = array[i + i0];
    array[i + i0] = t;
  }

  return array;
});

/***/ }),

/***/ "./node_modules/d3-array/src/sum.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/sum.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.
    }
  } else {
    while (++i < n) {
      if (value = +valueof(values[i], i, values)) sum += value;
    }
  }

  return sum;
});

/***/ }),

/***/ "./node_modules/d3-array/src/threshold/freedmanDiaconis.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/freedmanDiaconis.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array */ "./node_modules/d3-array/src/array.js");
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ascending */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../number */ "./node_modules/d3-array/src/number.js");
/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../quantile */ "./node_modules/d3-array/src/quantile.js");




/* harmony default export */ __webpack_exports__["default"] = (function (values, min, max) {
  values = _array__WEBPACK_IMPORTED_MODULE_0__["map"].call(values, _number__WEBPACK_IMPORTED_MODULE_2__["default"]).sort(_ascending__WEBPACK_IMPORTED_MODULE_1__["default"]);
  return Math.ceil((max - min) / (2 * (Object(_quantile__WEBPACK_IMPORTED_MODULE_3__["default"])(values, 0.75) - Object(_quantile__WEBPACK_IMPORTED_MODULE_3__["default"])(values, 0.25)) * Math.pow(values.length, -1 / 3)));
});

/***/ }),

/***/ "./node_modules/d3-array/src/threshold/scott.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/scott.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _deviation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deviation */ "./node_modules/d3-array/src/deviation.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values, min, max) {
  return Math.ceil((max - min) / (3.5 * Object(_deviation__WEBPACK_IMPORTED_MODULE_0__["default"])(values) * Math.pow(values.length, -1 / 3)));
});

/***/ }),

/***/ "./node_modules/d3-array/src/threshold/sturges.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/sturges.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (values) {
  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
});

/***/ }),

/***/ "./node_modules/d3-array/src/ticks.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/ticks.js ***!
  \********************************************/
/*! exports provided: default, tickIncrement, tickStep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return tickIncrement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return tickStep; });
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);
/* harmony default export */ __webpack_exports__["default"] = (function (start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;
  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    start = Math.ceil(start / step);
    stop = Math.floor(stop / step);
    ticks = new Array(n = Math.ceil(stop - start + 1));

    while (++i < n) {
      ticks[i] = (start + i) * step;
    }
  } else {
    start = Math.floor(start * step);
    stop = Math.ceil(stop * step);
    ticks = new Array(n = Math.ceil(start - stop + 1));

    while (++i < n) {
      ticks[i] = (start - i) / step;
    }
  }

  if (reverse) ticks.reverse();
  return ticks;
});
function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}
function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}

/***/ }),

/***/ "./node_modules/d3-array/src/transpose.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/transpose.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _min__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./min */ "./node_modules/d3-array/src/min.js");

/* harmony default export */ __webpack_exports__["default"] = (function (matrix) {
  if (!(n = matrix.length)) return [];

  for (var i = -1, m = Object(_min__WEBPACK_IMPORTED_MODULE_0__["default"])(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }

  return transpose;
});

function length(d) {
  return d.length;
}

/***/ }),

/***/ "./node_modules/d3-array/src/variance.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/variance.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-array/src/number.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      m = 0,
      i = -1,
      mean = 0,
      value,
      delta,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(values[i]))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(valueof(values[i], i, values)))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  }

  if (m > 1) return sum / (m - 1);
});

/***/ }),

/***/ "./node_modules/d3-array/src/zip.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/zip.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transpose */ "./node_modules/d3-array/src/transpose.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_transpose__WEBPACK_IMPORTED_MODULE_0__["default"])(arguments);
});

/***/ }),

/***/ "./node_modules/d3-axis/src/array.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-axis/src/array.js ***!
  \*******************************************/
/*! exports provided: slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
var slice = Array.prototype.slice;

/***/ }),

/***/ "./node_modules/d3-axis/src/axis.js":
/*!******************************************!*\
  !*** ./node_modules/d3-axis/src/axis.js ***!
  \******************************************/
/*! exports provided: axisTop, axisRight, axisBottom, axisLeft */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "axisTop", function() { return axisTop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "axisRight", function() { return axisRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "axisBottom", function() { return axisBottom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "axisLeft", function() { return axisLeft; });
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/d3-axis/src/array.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-axis/src/identity.js");


var top = 1,
    right = 2,
    bottom = 3,
    left = 4,
    epsilon = 1e-6;

function translateX(x) {
  return "translate(" + (x + 0.5) + ",0)";
}

function translateY(y) {
  return "translate(0," + (y + 0.5) + ")";
}

function number(scale) {
  return function (d) {
    return +scale(d);
  };
}

function center(scale) {
  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.

  if (scale.round()) offset = Math.round(offset);
  return function (d) {
    return +scale(d) + offset;
  };
}

function entering() {
  return !this.__axis;
}

function axis(orient, scale) {
  var tickArguments = [],
      tickValues = null,
      tickFormat = null,
      tickSizeInner = 6,
      tickSizeOuter = 6,
      tickPadding = 3,
      k = orient === top || orient === left ? -1 : 1,
      x = orient === left || orient === right ? "x" : "y",
      transform = orient === top || orient === bottom ? translateX : translateY;

  function axis(context) {
    var values = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues,
        format = tickFormat == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : _identity__WEBPACK_IMPORTED_MODULE_1__["default"] : tickFormat,
        spacing = Math.max(tickSizeInner, 0) + tickPadding,
        range = scale.range(),
        range0 = +range[0] + 0.5,
        range1 = +range[range.length - 1] + 0.5,
        position = (scale.bandwidth ? center : number)(scale.copy()),
        selection = context.selection ? context.selection() : context,
        path = selection.selectAll(".domain").data([null]),
        tick = selection.selectAll(".tick").data(values, scale).order(),
        tickExit = tick.exit(),
        tickEnter = tick.enter().append("g").attr("class", "tick"),
        line = tick.select("line"),
        text = tick.select("text");
    path = path.merge(path.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor"));
    tick = tick.merge(tickEnter);
    line = line.merge(tickEnter.append("line").attr("stroke", "currentColor").attr(x + "2", k * tickSizeInner));
    text = text.merge(tickEnter.append("text").attr("fill", "currentColor").attr(x, k * spacing).attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

    if (context !== selection) {
      path = path.transition(context);
      tick = tick.transition(context);
      line = line.transition(context);
      text = text.transition(context);
      tickExit = tickExit.transition(context).attr("opacity", epsilon).attr("transform", function (d) {
        return isFinite(d = position(d)) ? transform(d) : this.getAttribute("transform");
      });
      tickEnter.attr("opacity", epsilon).attr("transform", function (d) {
        var p = this.parentNode.__axis;
        return transform(p && isFinite(p = p(d)) ? p : position(d));
      });
    }

    tickExit.remove();
    path.attr("d", orient === left || orient == right ? tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter : "M0.5," + range0 + "V" + range1 : tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + ",0.5H" + range1);
    tick.attr("opacity", 1).attr("transform", function (d) {
      return transform(position(d));
    });
    line.attr(x + "2", k * tickSizeInner);
    text.attr(x, k * spacing).text(format);
    selection.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");
    selection.each(function () {
      this.__axis = position;
    });
  }

  axis.scale = function (_) {
    return arguments.length ? (scale = _, axis) : scale;
  };

  axis.ticks = function () {
    return tickArguments = _array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(arguments), axis;
  };

  axis.tickArguments = function (_) {
    return arguments.length ? (tickArguments = _ == null ? [] : _array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_), axis) : tickArguments.slice();
  };

  axis.tickValues = function (_) {
    return arguments.length ? (tickValues = _ == null ? null : _array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_), axis) : tickValues && tickValues.slice();
  };

  axis.tickFormat = function (_) {
    return arguments.length ? (tickFormat = _, axis) : tickFormat;
  };

  axis.tickSize = function (_) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
  };

  axis.tickSizeInner = function (_) {
    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
  };

  axis.tickSizeOuter = function (_) {
    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
  };

  axis.tickPadding = function (_) {
    return arguments.length ? (tickPadding = +_, axis) : tickPadding;
  };

  return axis;
}

function axisTop(scale) {
  return axis(top, scale);
}
function axisRight(scale) {
  return axis(right, scale);
}
function axisBottom(scale) {
  return axis(bottom, scale);
}
function axisLeft(scale) {
  return axis(left, scale);
}

/***/ }),

/***/ "./node_modules/d3-axis/src/identity.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-axis/src/identity.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return x;
});

/***/ }),

/***/ "./node_modules/d3-axis/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-axis/src/index.js ***!
  \*******************************************/
/*! exports provided: axisTop, axisRight, axisBottom, axisLeft */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _axis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./axis */ "./node_modules/d3-axis/src/axis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisTop", function() { return _axis__WEBPACK_IMPORTED_MODULE_0__["axisTop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisRight", function() { return _axis__WEBPACK_IMPORTED_MODULE_0__["axisRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisBottom", function() { return _axis__WEBPACK_IMPORTED_MODULE_0__["axisBottom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisLeft", function() { return _axis__WEBPACK_IMPORTED_MODULE_0__["axisLeft"]; });



/***/ }),

/***/ "./node_modules/d3-brush/src/brush.js":
/*!********************************************!*\
  !*** ./node_modules/d3-brush/src/brush.js ***!
  \********************************************/
/*! exports provided: brushSelection, brushX, brushY, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "brushSelection", function() { return brushSelection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "brushX", function() { return brushX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "brushY", function() { return brushY; });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony import */ var d3_drag__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-drag */ "./node_modules/d3-drag/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-transition */ "./node_modules/d3-transition/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-brush/src/constant.js");
/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./event */ "./node_modules/d3-brush/src/event.js");
/* harmony import */ var _noevent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./noevent */ "./node_modules/d3-brush/src/noevent.js");








var MODE_DRAG = {
  name: "drag"
},
    MODE_SPACE = {
  name: "space"
},
    MODE_HANDLE = {
  name: "handle"
},
    MODE_CENTER = {
  name: "center"
};
var X = {
  name: "x",
  handles: ["e", "w"].map(type),
  input: function input(x, e) {
    return x && [[x[0], e[0][1]], [x[1], e[1][1]]];
  },
  output: function output(xy) {
    return xy && [xy[0][0], xy[1][0]];
  }
};
var Y = {
  name: "y",
  handles: ["n", "s"].map(type),
  input: function input(y, e) {
    return y && [[e[0][0], y[0]], [e[1][0], y[1]]];
  },
  output: function output(xy) {
    return xy && [xy[0][1], xy[1][1]];
  }
};
var XY = {
  name: "xy",
  handles: ["n", "e", "s", "w", "nw", "ne", "se", "sw"].map(type),
  input: function input(xy) {
    return xy;
  },
  output: function output(xy) {
    return xy;
  }
};
var cursors = {
  overlay: "crosshair",
  selection: "move",
  n: "ns-resize",
  e: "ew-resize",
  s: "ns-resize",
  w: "ew-resize",
  nw: "nwse-resize",
  ne: "nesw-resize",
  se: "nwse-resize",
  sw: "nesw-resize"
};
var flipX = {
  e: "w",
  w: "e",
  nw: "ne",
  ne: "nw",
  se: "sw",
  sw: "se"
};
var flipY = {
  n: "s",
  s: "n",
  nw: "sw",
  ne: "se",
  se: "ne",
  sw: "nw"
};
var signsX = {
  overlay: +1,
  selection: +1,
  n: null,
  e: +1,
  s: null,
  w: -1,
  nw: -1,
  ne: +1,
  se: +1,
  sw: -1
};
var signsY = {
  overlay: +1,
  selection: +1,
  n: -1,
  e: null,
  s: +1,
  w: null,
  nw: -1,
  ne: -1,
  se: +1,
  sw: +1
};

function type(t) {
  return {
    type: t
  };
} // Ignore right-click, since that should open the context menu.


function defaultFilter() {
  return !d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].button;
}

function defaultExtent() {
  var svg = this.ownerSVGElement || this;
  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
} // Like d3.local, but with the name “__brush” rather than auto-generated.


function local(node) {
  while (!node.__brush) {
    if (!(node = node.parentNode)) return;
  }

  return node.__brush;
}

function empty(extent) {
  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];
}

function brushSelection(node) {
  var state = node.__brush;
  return state ? state.dim.output(state.selection) : null;
}
function brushX() {
  return brush(X);
}
function brushY() {
  return brush(Y);
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return brush(XY);
});

function brush(dim) {
  var extent = defaultExtent,
      filter = defaultFilter,
      listeners = Object(d3_dispatch__WEBPACK_IMPORTED_MODULE_0__["dispatch"])(brush, "start", "brush", "end"),
      handleSize = 6,
      touchending;

  function brush(group) {
    var overlay = group.property("__brush", initialize).selectAll(".overlay").data([type("overlay")]);
    overlay.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", cursors.overlay).merge(overlay).each(function () {
      var extent = local(this).extent;
      Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(this).attr("x", extent[0][0]).attr("y", extent[0][1]).attr("width", extent[1][0] - extent[0][0]).attr("height", extent[1][1] - extent[0][1]);
    });
    group.selectAll(".selection").data([type("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", cursors.selection).attr("fill", "#777").attr("fill-opacity", 0.3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");
    var handle = group.selectAll(".handle").data(dim.handles, function (d) {
      return d.type;
    });
    handle.exit().remove();
    handle.enter().append("rect").attr("class", function (d) {
      return "handle handle--" + d.type;
    }).attr("cursor", function (d) {
      return cursors[d.type];
    });
    group.each(redraw).attr("fill", "none").attr("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush touchstart.brush", started);
  }

  brush.move = function (group, selection) {
    if (group.selection) {
      group.on("start.brush", function () {
        emitter(this, arguments).beforestart().start();
      }).on("interrupt.brush end.brush", function () {
        emitter(this, arguments).end();
      }).tween("brush", function () {
        var that = this,
            state = that.__brush,
            emit = emitter(that, arguments),
            selection0 = state.selection,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
            i = Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_2__["interpolate"])(selection0, selection1);

        function tween(t) {
          state.selection = t === 1 && empty(selection1) ? null : i(t);
          redraw.call(that);
          emit.brush();
        }

        return selection0 && selection1 ? tween : tween(1);
      });
    } else {
      group.each(function () {
        var that = this,
            args = arguments,
            state = that.__brush,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
            emit = emitter(that, args).beforestart();
        Object(d3_transition__WEBPACK_IMPORTED_MODULE_4__["interrupt"])(that);
        state.selection = selection1 == null || empty(selection1) ? null : selection1;
        redraw.call(that);
        emit.start().brush().end();
      });
    }
  };

  function redraw() {
    var group = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(this),
        selection = local(this).selection;

    if (selection) {
      group.selectAll(".selection").style("display", null).attr("x", selection[0][0]).attr("y", selection[0][1]).attr("width", selection[1][0] - selection[0][0]).attr("height", selection[1][1] - selection[0][1]);
      group.selectAll(".handle").style("display", null).attr("x", function (d) {
        return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;
      }).attr("y", function (d) {
        return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;
      }).attr("width", function (d) {
        return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize;
      }).attr("height", function (d) {
        return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize;
      });
    } else {
      group.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null);
    }
  }

  function emitter(that, args) {
    return that.__brush.emitter || new Emitter(that, args);
  }

  function Emitter(that, args) {
    this.that = that;
    this.args = args;
    this.state = that.__brush;
    this.active = 0;
  }

  Emitter.prototype = {
    beforestart: function beforestart() {
      if (++this.active === 1) this.state.emitter = this, this.starting = true;
      return this;
    },
    start: function start() {
      if (this.starting) this.starting = false, this.emit("start");
      return this;
    },
    brush: function brush() {
      this.emit("brush");
      return this;
    },
    end: function end() {
      if (--this.active === 0) delete this.state.emitter, this.emit("end");
      return this;
    },
    emit: function emit(type) {
      Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["customEvent"])(new _event__WEBPACK_IMPORTED_MODULE_6__["default"](brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function started() {
    if (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].touches) {
      if (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].changedTouches.length < d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].touches.length) return Object(_noevent__WEBPACK_IMPORTED_MODULE_7__["default"])();
    } else if (touchending) return;

    if (!filter.apply(this, arguments)) return;
    var that = this,
        type = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].target.__data__.type,
        mode = (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].altKey ? MODE_CENTER : MODE_HANDLE,
        signX = dim === Y ? null : signsX[type],
        signY = dim === X ? null : signsY[type],
        state = local(that),
        extent = state.extent,
        selection = state.selection,
        W = extent[0][0],
        w0,
        w1,
        N = extent[0][1],
        n0,
        n1,
        E = extent[1][0],
        e0,
        e1,
        S = extent[1][1],
        s0,
        s1,
        dx,
        dy,
        moving,
        shifting = signX && signY && d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].shiftKey,
        lockX,
        lockY,
        point0 = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["mouse"])(that),
        point = point0,
        emit = emitter(that, arguments).beforestart();

    if (type === "overlay") {
      state.selection = selection = [[w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]], [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]];
    } else {
      w0 = selection[0][0];
      n0 = selection[0][1];
      e0 = selection[1][0];
      s0 = selection[1][1];
    }

    w1 = w0;
    n1 = n0;
    e1 = e0;
    s1 = s0;
    var group = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(that).attr("pointer-events", "none");
    var overlay = group.selectAll(".overlay").attr("cursor", cursors[type]);

    if (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].touches) {
      group.on("touchmove.brush", moved, true).on("touchend.brush touchcancel.brush", ended, true);
    } else {
      var view = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].view).on("keydown.brush", keydowned, true).on("keyup.brush", keyupped, true).on("mousemove.brush", moved, true).on("mouseup.brush", ended, true);
      Object(d3_drag__WEBPACK_IMPORTED_MODULE_1__["dragDisable"])(d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].view);
    }

    Object(_noevent__WEBPACK_IMPORTED_MODULE_7__["nopropagation"])();
    Object(d3_transition__WEBPACK_IMPORTED_MODULE_4__["interrupt"])(that);
    redraw.call(that);
    emit.start();

    function moved() {
      var point1 = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["mouse"])(that);

      if (shifting && !lockX && !lockY) {
        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;else lockX = true;
      }

      point = point1;
      moving = true;
      Object(_noevent__WEBPACK_IMPORTED_MODULE_7__["default"])();
      move();
    }

    function move() {
      var t;
      dx = point[0] - point0[0];
      dy = point[1] - point0[1];

      switch (mode) {
        case MODE_SPACE:
        case MODE_DRAG:
          {
            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
            break;
          }

        case MODE_HANDLE:
          {
            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
            break;
          }

        case MODE_CENTER:
          {
            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));
            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));
            break;
          }
      }

      if (e1 < w1) {
        signX *= -1;
        t = w0, w0 = e0, e0 = t;
        t = w1, w1 = e1, e1 = t;
        if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
      }

      if (s1 < n1) {
        signY *= -1;
        t = n0, n0 = s0, s0 = t;
        t = n1, n1 = s1, s1 = t;
        if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
      }

      if (state.selection) selection = state.selection; // May be set by brush.move!

      if (lockX) w1 = selection[0][0], e1 = selection[1][0];
      if (lockY) n1 = selection[0][1], s1 = selection[1][1];

      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {
        state.selection = [[w1, n1], [e1, s1]];
        redraw.call(that);
        emit.brush();
      }
    }

    function ended() {
      Object(_noevent__WEBPACK_IMPORTED_MODULE_7__["nopropagation"])();

      if (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].touches) {
        if (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].touches.length) return;
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function () {
          touchending = null;
        }, 500); // Ghost clicks are delayed!

        group.on("touchmove.brush touchend.brush touchcancel.brush", null);
      } else {
        Object(d3_drag__WEBPACK_IMPORTED_MODULE_1__["dragEnable"])(d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].view, moving);
        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
      }

      group.attr("pointer-events", "all");
      overlay.attr("cursor", cursors.overlay);
      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!

      if (empty(selection)) state.selection = null, redraw.call(that);
      emit.end();
    }

    function keydowned() {
      switch (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].keyCode) {
        case 16:
          {
            // SHIFT
            shifting = signX && signY;
            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_HANDLE) {
              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
              mode = MODE_CENTER;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE; takes priority over ALT
            if (mode === MODE_HANDLE || mode === MODE_CENTER) {
              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;
              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;
              mode = MODE_SPACE;
              overlay.attr("cursor", cursors.selection);
              move();
            }

            break;
          }

        default:
          return;
      }

      Object(_noevent__WEBPACK_IMPORTED_MODULE_7__["default"])();
    }

    function keyupped() {
      switch (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].keyCode) {
        case 16:
          {
            // SHIFT
            if (shifting) {
              lockX = lockY = shifting = false;
              move();
            }

            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_CENTER) {
              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
              mode = MODE_HANDLE;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE
            if (mode === MODE_SPACE) {
              if (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].altKey) {
                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
                mode = MODE_CENTER;
              } else {
                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
                mode = MODE_HANDLE;
              }

              overlay.attr("cursor", cursors[type]);
              move();
            }

            break;
          }

        default:
          return;
      }

      Object(_noevent__WEBPACK_IMPORTED_MODULE_7__["default"])();
    }
  }

  function initialize() {
    var state = this.__brush || {
      selection: null
    };
    state.extent = extent.apply(this, arguments);
    state.dim = dim;
    return state;
  }

  brush.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_5__["default"])([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;
  };

  brush.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_5__["default"])(!!_), brush) : filter;
  };

  brush.handleSize = function (_) {
    return arguments.length ? (handleSize = +_, brush) : handleSize;
  };

  brush.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? brush : value;
  };

  return brush;
}

/***/ }),

/***/ "./node_modules/d3-brush/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-brush/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-brush/src/event.js":
/*!********************************************!*\
  !*** ./node_modules/d3-brush/src/event.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (target, type, selection) {
  this.target = target;
  this.type = type;
  this.selection = selection;
});

/***/ }),

/***/ "./node_modules/d3-brush/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-brush/src/index.js ***!
  \********************************************/
/*! exports provided: brush, brushX, brushY, brushSelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _brush__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./brush */ "./node_modules/d3-brush/src/brush.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brush", function() { return _brush__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brushX", function() { return _brush__WEBPACK_IMPORTED_MODULE_0__["brushX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brushY", function() { return _brush__WEBPACK_IMPORTED_MODULE_0__["brushY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brushSelection", function() { return _brush__WEBPACK_IMPORTED_MODULE_0__["brushSelection"]; });



/***/ }),

/***/ "./node_modules/d3-brush/src/noevent.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-brush/src/noevent.js ***!
  \**********************************************/
/*! exports provided: nopropagation, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nopropagation", function() { return nopropagation; });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");

function nopropagation() {
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].stopImmediatePropagation();
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].preventDefault();
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].stopImmediatePropagation();
});

/***/ }),

/***/ "./node_modules/d3-chord/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-chord/src/array.js ***!
  \********************************************/
/*! exports provided: slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
var slice = Array.prototype.slice;

/***/ }),

/***/ "./node_modules/d3-chord/src/chord.js":
/*!********************************************!*\
  !*** ./node_modules/d3-chord/src/chord.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-chord/src/math.js");



function compareValue(compare) {
  return function (a, b) {
    return compare(a.source.value + a.target.value, b.source.value + b.target.value);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var padAngle = 0,
      sortGroups = null,
      sortSubgroups = null,
      sortChords = null;

  function chord(matrix) {
    var n = matrix.length,
        groupSums = [],
        groupIndex = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(n),
        subgroupIndex = [],
        chords = [],
        groups = chords.groups = new Array(n),
        subgroups = new Array(n * n),
        k,
        x,
        x0,
        dx,
        i,
        j; // Compute the sum.

    k = 0, i = -1;

    while (++i < n) {
      x = 0, j = -1;

      while (++j < n) {
        x += matrix[i][j];
      }

      groupSums.push(x);
      subgroupIndex.push(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(n));
      k += x;
    } // Sort groups…


    if (sortGroups) groupIndex.sort(function (a, b) {
      return sortGroups(groupSums[a], groupSums[b]);
    }); // Sort subgroups…

    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {
      d.sort(function (a, b) {
        return sortSubgroups(matrix[i][a], matrix[i][b]);
      });
    }); // Convert the sum to scaling factor for [0, 2pi].
    // TODO Allow start and end angle to be specified?
    // TODO Allow padding to be specified as percentage?

    k = Object(_math__WEBPACK_IMPORTED_MODULE_1__["max"])(0, _math__WEBPACK_IMPORTED_MODULE_1__["tau"] - padAngle * n) / k;
    dx = k ? padAngle : _math__WEBPACK_IMPORTED_MODULE_1__["tau"] / n; // Compute the start and end angle for each group and subgroup.
    // Note: Opera has a bug reordering object literal properties!

    x = 0, i = -1;

    while (++i < n) {
      x0 = x, j = -1;

      while (++j < n) {
        var di = groupIndex[i],
            dj = subgroupIndex[di][j],
            v = matrix[di][dj],
            a0 = x,
            a1 = x += v * k;
        subgroups[dj * n + di] = {
          index: di,
          subindex: dj,
          startAngle: a0,
          endAngle: a1,
          value: v
        };
      }

      groups[di] = {
        index: di,
        startAngle: x0,
        endAngle: x,
        value: groupSums[di]
      };
      x += dx;
    } // Generate chords for each (non-empty) subgroup-subgroup link.


    i = -1;

    while (++i < n) {
      j = i - 1;

      while (++j < n) {
        var source = subgroups[j * n + i],
            target = subgroups[i * n + j];

        if (source.value || target.value) {
          chords.push(source.value < target.value ? {
            source: target,
            target: source
          } : {
            source: source,
            target: target
          });
        }
      }
    }

    return sortChords ? chords.sort(sortChords) : chords;
  }

  chord.padAngle = function (_) {
    return arguments.length ? (padAngle = Object(_math__WEBPACK_IMPORTED_MODULE_1__["max"])(0, _), chord) : padAngle;
  };

  chord.sortGroups = function (_) {
    return arguments.length ? (sortGroups = _, chord) : sortGroups;
  };

  chord.sortSubgroups = function (_) {
    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
  };

  chord.sortChords = function (_) {
    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
  };

  return chord;
});

/***/ }),

/***/ "./node_modules/d3-chord/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-chord/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-chord/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-chord/src/index.js ***!
  \********************************************/
/*! exports provided: chord, ribbon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _chord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chord */ "./node_modules/d3-chord/src/chord.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chord", function() { return _chord__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _ribbon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ribbon */ "./node_modules/d3-chord/src/ribbon.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ribbon", function() { return _ribbon__WEBPACK_IMPORTED_MODULE_1__["default"]; });




/***/ }),

/***/ "./node_modules/d3-chord/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-chord/src/math.js ***!
  \*******************************************/
/*! exports provided: cos, sin, pi, halfPi, tau, max */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return cos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return sin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return pi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "halfPi", function() { return halfPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return tau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
var cos = Math.cos;
var sin = Math.sin;
var pi = Math.PI;
var halfPi = pi / 2;
var tau = pi * 2;
var max = Math.max;

/***/ }),

/***/ "./node_modules/d3-chord/src/ribbon.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-chord/src/ribbon.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/d3-chord/src/array.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-chord/src/constant.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-chord/src/math.js");
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");





function defaultSource(d) {
  return d.source;
}

function defaultTarget(d) {
  return d.target;
}

function defaultRadius(d) {
  return d.radius;
}

function defaultStartAngle(d) {
  return d.startAngle;
}

function defaultEndAngle(d) {
  return d.endAngle;
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var source = defaultSource,
      target = defaultTarget,
      radius = defaultRadius,
      startAngle = defaultStartAngle,
      endAngle = defaultEndAngle,
      context = null;

  function ribbon() {
    var buffer,
        argv = _array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv),
        sr = +radius.apply(this, (argv[0] = s, argv)),
        sa0 = startAngle.apply(this, argv) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"],
        sa1 = endAngle.apply(this, argv) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"],
        sx0 = sr * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(sa0),
        sy0 = sr * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(sa0),
        tr = +radius.apply(this, (argv[0] = t, argv)),
        ta0 = startAngle.apply(this, argv) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"],
        ta1 = endAngle.apply(this, argv) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"];
    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_3__["path"])();
    context.moveTo(sx0, sy0);
    context.arc(0, 0, sr, sa0, sa1);

    if (sa0 !== ta0 || sa1 !== ta1) {
      // TODO sr !== tr?
      context.quadraticCurveTo(0, 0, tr * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(ta0), tr * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(ta0));
      context.arc(0, 0, tr, ta0, ta1);
    }

    context.quadraticCurveTo(0, 0, sx0, sy0);
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  ribbon.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), ribbon) : radius;
  };

  ribbon.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), ribbon) : startAngle;
  };

  ribbon.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), ribbon) : endAngle;
  };

  ribbon.source = function (_) {
    return arguments.length ? (source = _, ribbon) : source;
  };

  ribbon.target = function (_) {
    return arguments.length ? (target = _, ribbon) : target;
  };

  ribbon.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;
  };

  return ribbon;
});

/***/ }),

/***/ "./node_modules/d3-collection/src/entries.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-collection/src/entries.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (map) {
  var entries = [];

  for (var key in map) {
    entries.push({
      key: key,
      value: map[key]
    });
  }

  return entries;
});

/***/ }),

/***/ "./node_modules/d3-collection/src/index.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-collection/src/index.js ***!
  \*************************************************/
/*! exports provided: nest, set, map, keys, values, entries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _nest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nest */ "./node_modules/d3-collection/src/nest.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nest", function() { return _nest__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./set */ "./node_modules/d3-collection/src/set.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "set", function() { return _set__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./map */ "./node_modules/d3-collection/src/map.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return _map__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./keys */ "./node_modules/d3-collection/src/keys.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keys", function() { return _keys__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _values__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./values */ "./node_modules/d3-collection/src/values.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "values", function() { return _values__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _entries__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./entries */ "./node_modules/d3-collection/src/entries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "entries", function() { return _entries__WEBPACK_IMPORTED_MODULE_5__["default"]; });








/***/ }),

/***/ "./node_modules/d3-collection/src/keys.js":
/*!************************************************!*\
  !*** ./node_modules/d3-collection/src/keys.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (map) {
  var keys = [];

  for (var key in map) {
    keys.push(key);
  }

  return keys;
});

/***/ }),

/***/ "./node_modules/d3-collection/src/map.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-collection/src/map.js ***!
  \***********************************************/
/*! exports provided: prefix, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prefix", function() { return prefix; });
var prefix = "$";

function Map() {}

Map.prototype = map.prototype = {
  constructor: Map,
  has: function has(key) {
    return prefix + key in this;
  },
  get: function get(key) {
    return this[prefix + key];
  },
  set: function set(key, value) {
    this[prefix + key] = value;
    return this;
  },
  remove: function remove(key) {
    var property = prefix + key;
    return property in this && delete this[property];
  },
  clear: function clear() {
    for (var property in this) {
      if (property[0] === prefix) delete this[property];
    }
  },
  keys: function keys() {
    var keys = [];

    for (var property in this) {
      if (property[0] === prefix) keys.push(property.slice(1));
    }

    return keys;
  },
  values: function values() {
    var values = [];

    for (var property in this) {
      if (property[0] === prefix) values.push(this[property]);
    }

    return values;
  },
  entries: function entries() {
    var entries = [];

    for (var property in this) {
      if (property[0] === prefix) entries.push({
        key: property.slice(1),
        value: this[property]
      });
    }

    return entries;
  },
  size: function size() {
    var size = 0;

    for (var property in this) {
      if (property[0] === prefix) ++size;
    }

    return size;
  },
  empty: function empty() {
    for (var property in this) {
      if (property[0] === prefix) return false;
    }

    return true;
  },
  each: function each(f) {
    for (var property in this) {
      if (property[0] === prefix) f(this[property], property.slice(1), this);
    }
  }
};

function map(object, f) {
  var map = new Map(); // Copy constructor.

  if (object instanceof Map) object.each(function (value, key) {
    map.set(key, value);
  }); // Index array by numeric index or specified key function.
  else if (Array.isArray(object)) {
      var i = -1,
          n = object.length,
          o;
      if (f == null) while (++i < n) {
        map.set(i, object[i]);
      } else while (++i < n) {
        map.set(f(o = object[i], i, object), o);
      }
    } // Convert object to map.
    else if (object) for (var key in object) {
        map.set(key, object[key]);
      }
  return map;
}

/* harmony default export */ __webpack_exports__["default"] = (map);

/***/ }),

/***/ "./node_modules/d3-collection/src/nest.js":
/*!************************************************!*\
  !*** ./node_modules/d3-collection/src/nest.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map */ "./node_modules/d3-collection/src/map.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var keys = [],
      _sortKeys = [],
      _sortValues,
      _rollup,
      nest;

  function apply(array, depth, createResult, setResult) {
    if (depth >= keys.length) {
      if (_sortValues != null) array.sort(_sortValues);
      return _rollup != null ? _rollup(array) : array;
    }

    var i = -1,
        n = array.length,
        key = keys[depth++],
        keyValue,
        value,
        valuesByKey = Object(_map__WEBPACK_IMPORTED_MODULE_0__["default"])(),
        values,
        result = createResult();

    while (++i < n) {
      if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
        values.push(value);
      } else {
        valuesByKey.set(keyValue, [value]);
      }
    }

    valuesByKey.each(function (values, key) {
      setResult(result, key, apply(values, depth, createResult, setResult));
    });
    return result;
  }

  function _entries(map, depth) {
    if (++depth > keys.length) return map;
    var array,
        sortKey = _sortKeys[depth - 1];
    if (_rollup != null && depth >= keys.length) array = map.entries();else array = [], map.each(function (v, k) {
      array.push({
        key: k,
        values: _entries(v, depth)
      });
    });
    return sortKey != null ? array.sort(function (a, b) {
      return sortKey(a.key, b.key);
    }) : array;
  }

  return nest = {
    object: function object(array) {
      return apply(array, 0, createObject, setObject);
    },
    map: function map(array) {
      return apply(array, 0, createMap, setMap);
    },
    entries: function entries(array) {
      return _entries(apply(array, 0, createMap, setMap), 0);
    },
    key: function key(d) {
      keys.push(d);
      return nest;
    },
    sortKeys: function sortKeys(order) {
      _sortKeys[keys.length - 1] = order;
      return nest;
    },
    sortValues: function sortValues(order) {
      _sortValues = order;
      return nest;
    },
    rollup: function rollup(f) {
      _rollup = f;
      return nest;
    }
  };
});

function createObject() {
  return {};
}

function setObject(object, key, value) {
  object[key] = value;
}

function createMap() {
  return Object(_map__WEBPACK_IMPORTED_MODULE_0__["default"])();
}

function setMap(map, key, value) {
  map.set(key, value);
}

/***/ }),

/***/ "./node_modules/d3-collection/src/set.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-collection/src/set.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map */ "./node_modules/d3-collection/src/map.js");


function Set() {}

var proto = _map__WEBPACK_IMPORTED_MODULE_0__["default"].prototype;
Set.prototype = set.prototype = {
  constructor: Set,
  has: proto.has,
  add: function add(value) {
    value += "";
    this[_map__WEBPACK_IMPORTED_MODULE_0__["prefix"] + value] = value;
    return this;
  },
  remove: proto.remove,
  clear: proto.clear,
  values: proto.keys,
  size: proto.size,
  empty: proto.empty,
  each: proto.each
};

function set(object, f) {
  var set = new Set(); // Copy constructor.

  if (object instanceof Set) object.each(function (value) {
    set.add(value);
  }); // Otherwise, assume it’s an array.
  else if (object) {
      var i = -1,
          n = object.length;
      if (f == null) while (++i < n) {
        set.add(object[i]);
      } else while (++i < n) {
        set.add(f(object[i], i, object));
      }
    }
  return set;
}

/* harmony default export */ __webpack_exports__["default"] = (set);

/***/ }),

/***/ "./node_modules/d3-collection/src/values.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-collection/src/values.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (map) {
  var values = [];

  for (var key in map) {
    values.push(map[key]);
  }

  return values;
});

/***/ }),

/***/ "./node_modules/d3-color/src/color.js":
/*!********************************************!*\
  !*** ./node_modules/d3-color/src/color.js ***!
  \********************************************/
/*! exports provided: Color, darker, brighter, default, rgbConvert, rgb, Rgb, hslConvert, hsl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Color", function() { return Color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "darker", function() { return _darker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "brighter", function() { return _brighter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbConvert", function() { return rgbConvert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgb", function() { return rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rgb", function() { return Rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hslConvert", function() { return hslConvert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hsl", function() { return hsl; });
/* harmony import */ var _define__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define */ "./node_modules/d3-color/src/define.js");

function Color() {}
var _darker = 0.7;


var _brighter = 1 / _darker;


var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex3 = /^#([0-9a-f]{3})$/,
    reHex6 = /^#([0-9a-f]{6})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};
Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Color, color, {
  displayable: function displayable() {
    return this.rgb().displayable();
  },
  hex: function hex() {
    return this.rgb().hex();
  },
  toString: function toString() {
    return this.rgb() + "";
  }
});
function color(format) {
  var m;
  format = (format + "").trim().toLowerCase();
  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb(m >> 8 & 0xf | m >> 4 & 0x0f0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
  ) : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000
  : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
  : named.hasOwnProperty(format) ? rgbn(named[format]) : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}
function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}
function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}
Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Rgb, rgb, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(Color, {
  brighter: function brighter(k) {
    k = k == null ? _brighter : Math.pow(_brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function darker(k) {
    k = k == null ? _darker : Math.pow(_darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function rgb() {
    return this;
  },
  displayable: function displayable() {
    return 0 <= this.r && this.r <= 255 && 0 <= this.g && this.g <= 255 && 0 <= this.b && this.b <= 255 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: function hex() {
    return "#" + _hex(this.r) + _hex(this.g) + _hex(this.b);
  },
  toString: function toString() {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
  }
}));

function _hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl();
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;

  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }

  return new Hsl(h, s, l, o.opacity);
}
function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Hsl, hsl, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(Color, {
  brighter: function brighter(k) {
    k = k == null ? _brighter : Math.pow(_brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function darker(k) {
    k = k == null ? _darker : Math.pow(_darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function rgb() {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
  },
  displayable: function displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  }
}));
/* From FvD 13.37, CSS Color Module Level 3 */

function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}

/***/ }),

/***/ "./node_modules/d3-color/src/cubehelix.js":
/*!************************************************!*\
  !*** ./node_modules/d3-color/src/cubehelix.js ***!
  \************************************************/
/*! exports provided: default, Cubehelix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return cubehelix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cubehelix", function() { return Cubehelix; });
/* harmony import */ var _define__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define */ "./node_modules/d3-color/src/define.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-color/src/math.js");



var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color__WEBPACK_IMPORTED_MODULE_1__["Rgb"])) o = Object(_color__WEBPACK_IMPORTED_MODULE_1__["rgbConvert"])(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),
      // NaN if l=0 or l=1
  h = s ? Math.atan2(k, bl) * _math__WEBPACK_IMPORTED_MODULE_2__["rad2deg"] - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}
function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}
Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Cubehelix, cubehelix, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function brighter(k) {
    k = k == null ? _color__WEBPACK_IMPORTED_MODULE_1__["brighter"] : Math.pow(_color__WEBPACK_IMPORTED_MODULE_1__["brighter"], k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function darker(k) {
    k = k == null ? _color__WEBPACK_IMPORTED_MODULE_1__["darker"] : Math.pow(_color__WEBPACK_IMPORTED_MODULE_1__["darker"], k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function rgb() {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math__WEBPACK_IMPORTED_MODULE_2__["deg2rad"],
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color__WEBPACK_IMPORTED_MODULE_1__["Rgb"](255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
  }
}));

/***/ }),

/***/ "./node_modules/d3-color/src/define.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-color/src/define.js ***!
  \*********************************************/
/*! exports provided: default, extend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony default export */ __webpack_exports__["default"] = (function (constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
});
function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);

  for (var key in definition) {
    prototype[key] = definition[key];
  }

  return prototype;
}

/***/ }),

/***/ "./node_modules/d3-color/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-color/src/index.js ***!
  \********************************************/
/*! exports provided: color, rgb, hsl, lab, hcl, lch, gray, cubehelix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color */ "./node_modules/d3-color/src/color.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "color", function() { return _color__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rgb", function() { return _color__WEBPACK_IMPORTED_MODULE_0__["rgb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hsl", function() { return _color__WEBPACK_IMPORTED_MODULE_0__["hsl"]; });

/* harmony import */ var _lab__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lab */ "./node_modules/d3-color/src/lab.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lab", function() { return _lab__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hcl", function() { return _lab__WEBPACK_IMPORTED_MODULE_1__["hcl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lch", function() { return _lab__WEBPACK_IMPORTED_MODULE_1__["lch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gray", function() { return _lab__WEBPACK_IMPORTED_MODULE_1__["gray"]; });

/* harmony import */ var _cubehelix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubehelix */ "./node_modules/d3-color/src/cubehelix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cubehelix", function() { return _cubehelix__WEBPACK_IMPORTED_MODULE_2__["default"]; });





/***/ }),

/***/ "./node_modules/d3-color/src/lab.js":
/*!******************************************!*\
  !*** ./node_modules/d3-color/src/lab.js ***!
  \******************************************/
/*! exports provided: gray, default, Lab, lch, hcl, Hcl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gray", function() { return gray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Lab", function() { return Lab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lch", function() { return lch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hcl", function() { return hcl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Hcl", function() { return Hcl; });
/* harmony import */ var _define__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define */ "./node_modules/d3-color/src/define.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-color/src/math.js");


 // https://beta.observablehq.com/@mbostock/lab-and-rgb

var K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);

  if (o instanceof Hcl) {
    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
    var h = o.h * _math__WEBPACK_IMPORTED_MODULE_2__["deg2rad"];
    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
  }

  if (!(o instanceof _color__WEBPACK_IMPORTED_MODULE_1__["Rgb"])) o = Object(_color__WEBPACK_IMPORTED_MODULE_1__["rgbConvert"])(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),
      x,
      z;
  if (r === g && g === b) x = z = y;else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}
function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}
function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}
Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Lab, lab, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function brighter(k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function darker(k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function rgb() {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color__WEBPACK_IMPORTED_MODULE_1__["Rgb"](lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);
  var h = Math.atan2(o.b, o.a) * _math__WEBPACK_IMPORTED_MODULE_2__["rad2deg"];
  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}
function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}
function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}
Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Hcl, hcl, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function brighter(k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function darker(k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function rgb() {
    return labConvert(this).rgb();
  }
}));

/***/ }),

/***/ "./node_modules/d3-color/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-color/src/math.js ***!
  \*******************************************/
/*! exports provided: deg2rad, rad2deg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deg2rad", function() { return deg2rad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rad2deg", function() { return rad2deg; });
var deg2rad = Math.PI / 180;
var rad2deg = 180 / Math.PI;

/***/ }),

/***/ "./node_modules/d3-contour/src/area.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-contour/src/area.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (ring) {
  var i = 0,
      n = ring.length,
      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];

  while (++i < n) {
    area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];
  }

  return area;
});

/***/ }),

/***/ "./node_modules/d3-contour/src/array.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-contour/src/array.js ***!
  \**********************************************/
/*! exports provided: slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
var array = Array.prototype;
var slice = array.slice;

/***/ }),

/***/ "./node_modules/d3-contour/src/ascending.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-contour/src/ascending.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return a - b;
});

/***/ }),

/***/ "./node_modules/d3-contour/src/blur.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-contour/src/blur.js ***!
  \*********************************************/
/*! exports provided: blurX, blurY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blurX", function() { return blurX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blurY", function() { return blurY; });
// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurX(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var j = 0; j < m; ++j) {
    for (var i = 0, sr = 0; i < n + r; ++i) {
      if (i < n) {
        sr += source.data[i + j * n];
      }

      if (i >= r) {
        if (i >= w) {
          sr -= source.data[i - w + j * n];
        }

        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);
      }
    }
  }
} // TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.

function blurY(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var i = 0; i < n; ++i) {
    for (var j = 0, sr = 0; j < m + r; ++j) {
      if (j < m) {
        sr += source.data[i + j * n];
      }

      if (j >= r) {
        if (j >= w) {
          sr -= source.data[i + (j - w) * n];
        }

        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);
      }
    }
  }
}

/***/ }),

/***/ "./node_modules/d3-contour/src/constant.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-contour/src/constant.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-contour/src/contains.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-contour/src/contains.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (ring, hole) {
  var i = -1,
      n = hole.length,
      c;

  while (++i < n) {
    if (c = ringContains(ring, hole[i])) return c;
  }

  return 0;
});

function ringContains(ring, point) {
  var x = point[0],
      y = point[1],
      contains = -1;

  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
    var pi = ring[i],
        xi = pi[0],
        yi = pi[1],
        pj = ring[j],
        xj = pj[0],
        yj = pj[1];
    if (segmentContains(pi, pj, point)) return 0;
    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;
  }

  return contains;
}

function segmentContains(a, b, c) {
  var i;
  return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);
}

function collinear(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);
}

function within(p, q, r) {
  return p <= q && q <= r || r <= q && q <= p;
}

/***/ }),

/***/ "./node_modules/d3-contour/src/contours.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-contour/src/contours.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-contour/src/array.js");
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-contour/src/ascending.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./area */ "./node_modules/d3-contour/src/area.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-contour/src/constant.js");
/* harmony import */ var _contains__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./contains */ "./node_modules/d3-contour/src/contains.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./noop */ "./node_modules/d3-contour/src/noop.js");







var cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []];
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var dx = 1,
      dy = 1,
      threshold = d3_array__WEBPACK_IMPORTED_MODULE_0__["thresholdSturges"],
      smooth = smoothLinear;

  function contours(values) {
    var tz = threshold(values); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var domain = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["extent"])(values),
          start = domain[0],
          stop = domain[1];
      tz = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start, stop, tz);
      tz = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);
    } else {
      tz = tz.slice().sort(_ascending__WEBPACK_IMPORTED_MODULE_2__["default"]);
    }

    return tz.map(function (value) {
      return contour(values, value);
    });
  } // Accumulate, smooth contour rings, assign holes to exterior rings.
  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js


  function contour(values, value) {
    var polygons = [],
        holes = [];
    isorings(values, value, function (ring) {
      smooth(ring, values, value);
      if (Object(_area__WEBPACK_IMPORTED_MODULE_3__["default"])(ring) > 0) polygons.push([ring]);else holes.push(ring);
    });
    holes.forEach(function (hole) {
      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
        if (Object(_contains__WEBPACK_IMPORTED_MODULE_5__["default"])((polygon = polygons[i])[0], hole) !== -1) {
          polygon.push(hole);
          return;
        }
      }
    });
    return {
      type: "MultiPolygon",
      value: value,
      coordinates: polygons
    };
  } // Marching squares with isolines stitched into rings.
  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js


  function isorings(values, value, callback) {
    var fragmentByStart = new Array(),
        fragmentByEnd = new Array(),
        x,
        y,
        t0,
        t1,
        t2,
        t3; // Special case for the first row (y = -1, t2 = t3 = 0).

    x = y = -1;
    t1 = values[0] >= value;
    cases[t1 << 1].forEach(stitch);

    while (++x < dx - 1) {
      t0 = t1, t1 = values[x + 1] >= value;
      cases[t0 | t1 << 1].forEach(stitch);
    }

    cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.

    while (++y < dy - 1) {
      x = -1;
      t1 = values[y * dx + dx] >= value;
      t2 = values[y * dx] >= value;
      cases[t1 << 1 | t2 << 2].forEach(stitch);

      while (++x < dx - 1) {
        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;
        t3 = t2, t2 = values[y * dx + x + 1] >= value;
        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
      }

      cases[t1 | t2 << 3].forEach(stitch);
    } // Special case for the last row (y = dy - 1, t0 = t1 = 0).


    x = -1;
    t2 = values[y * dx] >= value;
    cases[t2 << 2].forEach(stitch);

    while (++x < dx - 1) {
      t3 = t2, t2 = values[y * dx + x + 1] >= value;
      cases[t2 << 2 | t3 << 3].forEach(stitch);
    }

    cases[t2 << 3].forEach(stitch);

    function stitch(line) {
      var start = [line[0][0] + x, line[0][1] + y],
          end = [line[1][0] + x, line[1][1] + y],
          startIndex = index(start),
          endIndex = index(end),
          f,
          g;

      if (f = fragmentByEnd[startIndex]) {
        if (g = fragmentByStart[endIndex]) {
          delete fragmentByEnd[f.end];
          delete fragmentByStart[g.start];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[f.start] = fragmentByEnd[g.end] = {
              start: f.start,
              end: g.end,
              ring: f.ring.concat(g.ring)
            };
          }
        } else {
          delete fragmentByEnd[f.end];
          f.ring.push(end);
          fragmentByEnd[f.end = endIndex] = f;
        }
      } else if (f = fragmentByStart[endIndex]) {
        if (g = fragmentByEnd[startIndex]) {
          delete fragmentByStart[f.start];
          delete fragmentByEnd[g.end];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[g.start] = fragmentByEnd[f.end] = {
              start: g.start,
              end: f.end,
              ring: g.ring.concat(f.ring)
            };
          }
        } else {
          delete fragmentByStart[f.start];
          f.ring.unshift(start);
          fragmentByStart[f.start = startIndex] = f;
        }
      } else {
        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {
          start: startIndex,
          end: endIndex,
          ring: [start, end]
        };
      }
    }
  }

  function index(point) {
    return point[0] * 2 + point[1] * (dx + 1) * 4;
  }

  function smoothLinear(ring, values, value) {
    ring.forEach(function (point) {
      var x = point[0],
          y = point[1],
          xt = x | 0,
          yt = y | 0,
          v0,
          v1 = values[yt * dx + xt];

      if (x > 0 && x < dx && xt === x) {
        v0 = values[yt * dx + xt - 1];
        point[0] = x + (value - v0) / (v1 - v0) - 0.5;
      }

      if (y > 0 && y < dy && yt === y) {
        v0 = values[(yt - 1) * dx + xt];
        point[1] = y + (value - v0) / (v1 - v0) - 0.5;
      }
    });
  }

  contours.contour = contour;

  contours.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 > 0) || !(_1 > 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, contours;
  };

  contours.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(_array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_)) : Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(_), contours) : threshold;
  };

  contours.smooth = function (_) {
    return arguments.length ? (smooth = _ ? smoothLinear : _noop__WEBPACK_IMPORTED_MODULE_6__["default"], contours) : smooth === smoothLinear;
  };

  return contours;
});

/***/ }),

/***/ "./node_modules/d3-contour/src/density.js":
/*!************************************************!*\
  !*** ./node_modules/d3-contour/src/density.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-contour/src/array.js");
/* harmony import */ var _blur__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./blur */ "./node_modules/d3-contour/src/blur.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-contour/src/constant.js");
/* harmony import */ var _contours__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contours */ "./node_modules/d3-contour/src/contours.js");






function defaultX(d) {
  return d[0];
}

function defaultY(d) {
  return d[1];
}

function defaultWeight() {
  return 1;
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var x = defaultX,
      y = defaultY,
      weight = defaultWeight,
      dx = 960,
      dy = 500,
      r = 20,
      // blur radius
  k = 2,
      // log2(grid cell size)
  o = r * 3,
      // grid offset, to pad for blur
  n = dx + o * 2 >> k,
      // grid width
  m = dy + o * 2 >> k,
      // grid height
  threshold = Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(20);

  function density(data) {
    var values0 = new Float32Array(n * m),
        values1 = new Float32Array(n * m);
    data.forEach(function (d, i, data) {
      var xi = +x(d, i, data) + o >> k,
          yi = +y(d, i, data) + o >> k,
          wi = +weight(d, i, data);

      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {
        values0[xi + yi * n] += wi;
      }
    }); // TODO Optimize.

    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurX"])({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurY"])({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurX"])({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurY"])({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurX"])({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurY"])({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    var tz = threshold(values0); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var stop = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["max"])(values0);
      tz = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(0, stop, tz);
      tz = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(0, Math.floor(stop / tz) * tz, tz);
      tz.shift();
    }

    return Object(_contours__WEBPACK_IMPORTED_MODULE_4__["default"])().thresholds(tz).size([n, m])(values0).map(transform);
  }

  function transform(geometry) {
    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.

    geometry.coordinates.forEach(transformPolygon);
    return geometry;
  }

  function transformPolygon(coordinates) {
    coordinates.forEach(transformRing);
  }

  function transformRing(coordinates) {
    coordinates.forEach(transformPoint);
  } // TODO Optimize.


  function transformPoint(coordinates) {
    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
  }

  function resize() {
    o = r * 3;
    n = dx + o * 2 >> k;
    m = dy + o * 2 >> k;
    return density;
  }

  density.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+_), density) : x;
  };

  density.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+_), density) : y;
  };

  density.weight = function (_) {
    return arguments.length ? (weight = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+_), density) : weight;
  };

  density.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, resize();
  };

  density.cellSize = function (_) {
    if (!arguments.length) return 1 << k;
    if (!((_ = +_) >= 1)) throw new Error("invalid cell size");
    return k = Math.floor(Math.log(_) / Math.LN2), resize();
  };

  density.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(_array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_)) : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(_), density) : threshold;
  };

  density.bandwidth = function (_) {
    if (!arguments.length) return Math.sqrt(r * (r + 1));
    if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");
    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
  };

  return density;
});

/***/ }),

/***/ "./node_modules/d3-contour/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-contour/src/index.js ***!
  \**********************************************/
/*! exports provided: contours, contourDensity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _contours__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./contours */ "./node_modules/d3-contour/src/contours.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "contours", function() { return _contours__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _density__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./density */ "./node_modules/d3-contour/src/density.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "contourDensity", function() { return _density__WEBPACK_IMPORTED_MODULE_1__["default"]; });




/***/ }),

/***/ "./node_modules/d3-contour/src/noop.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-contour/src/noop.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {});

/***/ }),

/***/ "./node_modules/d3-dispatch/src/dispatch.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-dispatch/src/dispatch.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var noop = {
  value: function value() {}
};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || t in _) throw new Error("illegal type: " + t);
    _[t] = [];
  }

  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {
      type: t,
      name: name
    };
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function on(typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length; // If no callback was specified, return the callback of the given type and name.

    if (arguments.length < 2) {
      while (++i < n) {
        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
      }

      return;
    } // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.


    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);

    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {
        _[t] = set(_[t], typename.name, null);
      }
    }

    return this;
  },
  copy: function copy() {
    var copy = {},
        _ = this._;

    for (var t in _) {
      copy[t] = _[t].slice();
    }

    return new Dispatch(copy);
  },
  call: function call(type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {
      args[i] = arguments[i + 2];
    }
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {
      t[i].value.apply(that, args);
    }
  },
  apply: function apply(type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {
      t[i].value.apply(that, args);
    }
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }

  if (callback != null) type.push({
    name: name,
    value: callback
  });
  return type;
}

/* harmony default export */ __webpack_exports__["default"] = (dispatch);

/***/ }),

/***/ "./node_modules/d3-dispatch/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-dispatch/src/index.js ***!
  \***********************************************/
/*! exports provided: dispatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dispatch */ "./node_modules/d3-dispatch/src/dispatch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dispatch", function() { return _dispatch__WEBPACK_IMPORTED_MODULE_0__["default"]; });



/***/ }),

/***/ "./node_modules/d3-drag/src/constant.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-drag/src/constant.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-drag/src/drag.js":
/*!******************************************!*\
  !*** ./node_modules/d3-drag/src/drag.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _nodrag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nodrag */ "./node_modules/d3-drag/src/nodrag.js");
/* harmony import */ var _noevent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./noevent */ "./node_modules/d3-drag/src/noevent.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-drag/src/constant.js");
/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./event */ "./node_modules/d3-drag/src/event.js");





 // Ignore right-click, since that should open the context menu.

function defaultFilter() {
  return !d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].button;
}

function defaultContainer() {
  return this.parentNode;
}

function defaultSubject(d) {
  return d == null ? {
    x: d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].x,
    y: d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].y
  } : d;
}

function defaultTouchable() {
  return "ontouchstart" in this;
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var filter = defaultFilter,
      container = defaultContainer,
      subject = defaultSubject,
      touchable = defaultTouchable,
      gestures = {},
      listeners = Object(d3_dispatch__WEBPACK_IMPORTED_MODULE_0__["dispatch"])("start", "drag", "end"),
      active = 0,
      mousedownx,
      mousedowny,
      mousemoving,
      touchending,
      clickDistance2 = 0;

  function drag(selection) {
    selection.on("mousedown.drag", mousedowned).filter(touchable).on("touchstart.drag", touchstarted).on("touchmove.drag", touchmoved).on("touchend.drag touchcancel.drag", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var gesture = beforestart("mouse", container.apply(this, arguments), d3_selection__WEBPACK_IMPORTED_MODULE_1__["mouse"], this, arguments);
    if (!gesture) return;
    Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["select"])(d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
    Object(_nodrag__WEBPACK_IMPORTED_MODULE_2__["default"])(d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].view);
    Object(_noevent__WEBPACK_IMPORTED_MODULE_3__["nopropagation"])();
    mousemoving = false;
    mousedownx = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].clientX;
    mousedowny = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].clientY;
    gesture("start");
  }

  function mousemoved() {
    Object(_noevent__WEBPACK_IMPORTED_MODULE_3__["default"])();

    if (!mousemoving) {
      var dx = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].clientX - mousedownx,
          dy = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].clientY - mousedowny;
      mousemoving = dx * dx + dy * dy > clickDistance2;
    }

    gestures.mouse("drag");
  }

  function mouseupped() {
    Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["select"])(d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].view).on("mousemove.drag mouseup.drag", null);
    Object(_nodrag__WEBPACK_IMPORTED_MODULE_2__["yesdrag"])(d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].view, mousemoving);
    Object(_noevent__WEBPACK_IMPORTED_MODULE_3__["default"])();
    gestures.mouse("end");
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var touches = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].changedTouches,
        c = container.apply(this, arguments),
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = beforestart(touches[i].identifier, c, d3_selection__WEBPACK_IMPORTED_MODULE_1__["touch"], this, arguments)) {
        Object(_noevent__WEBPACK_IMPORTED_MODULE_3__["nopropagation"])();
        gesture("start");
      }
    }
  }

  function touchmoved() {
    var touches = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].changedTouches,
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        Object(_noevent__WEBPACK_IMPORTED_MODULE_3__["default"])();
        gesture("drag");
      }
    }
  }

  function touchended() {
    var touches = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].changedTouches,
        n = touches.length,
        i,
        gesture;
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, 500); // Ghost clicks are delayed!

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        Object(_noevent__WEBPACK_IMPORTED_MODULE_3__["nopropagation"])();
        gesture("end");
      }
    }
  }

  function beforestart(id, container, point, that, args) {
    var p = point(container, id),
        s,
        dx,
        dy,
        sublisteners = listeners.copy();
    if (!Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["customEvent"])(new _event__WEBPACK_IMPORTED_MODULE_5__["default"](drag, "beforestart", s, id, active, p[0], p[1], 0, 0, sublisteners), function () {
      if ((d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].subject = s = subject.apply(that, args)) == null) return false;
      dx = s.x - p[0] || 0;
      dy = s.y - p[1] || 0;
      return true;
    })) return;
    return function gesture(type) {
      var p0 = p,
          n;

      switch (type) {
        case "start":
          gestures[id] = gesture, n = active++;
          break;

        case "end":
          delete gestures[id], --active;
        // nobreak

        case "drag":
          p = point(container, id), n = active;
          break;
      }

      Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["customEvent"])(new _event__WEBPACK_IMPORTED_MODULE_5__["default"](drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);
    };
  }

  drag.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(!!_), drag) : filter;
  };

  drag.container = function (_) {
    return arguments.length ? (container = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(_), drag) : container;
  };

  drag.subject = function (_) {
    return arguments.length ? (subject = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(_), drag) : subject;
  };

  drag.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(!!_), drag) : touchable;
  };

  drag.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? drag : value;
  };

  drag.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
  };

  return drag;
});

/***/ }),

/***/ "./node_modules/d3-drag/src/event.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-drag/src/event.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DragEvent; });
function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {
  this.target = target;
  this.type = type;
  this.subject = subject;
  this.identifier = id;
  this.active = active;
  this.x = x;
  this.y = y;
  this.dx = dx;
  this.dy = dy;
  this._ = dispatch;
}

DragEvent.prototype.on = function () {
  var value = this._.on.apply(this._, arguments);

  return value === this._ ? this : value;
};

/***/ }),

/***/ "./node_modules/d3-drag/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-drag/src/index.js ***!
  \*******************************************/
/*! exports provided: drag, dragDisable, dragEnable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _drag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./drag */ "./node_modules/d3-drag/src/drag.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drag", function() { return _drag__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _nodrag__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nodrag */ "./node_modules/d3-drag/src/nodrag.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dragDisable", function() { return _nodrag__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dragEnable", function() { return _nodrag__WEBPACK_IMPORTED_MODULE_1__["yesdrag"]; });




/***/ }),

/***/ "./node_modules/d3-drag/src/nodrag.js":
/*!********************************************!*\
  !*** ./node_modules/d3-drag/src/nodrag.js ***!
  \********************************************/
/*! exports provided: default, yesdrag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "yesdrag", function() { return yesdrag; });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _noevent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./noevent */ "./node_modules/d3-drag/src/noevent.js");


/* harmony default export */ __webpack_exports__["default"] = (function (view) {
  var root = view.document.documentElement,
      selection = Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["select"])(view).on("dragstart.drag", _noevent__WEBPACK_IMPORTED_MODULE_1__["default"], true);

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", _noevent__WEBPACK_IMPORTED_MODULE_1__["default"], true);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
});
function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["select"])(view).on("dragstart.drag", null);

  if (noclick) {
    selection.on("click.drag", _noevent__WEBPACK_IMPORTED_MODULE_1__["default"], true);
    setTimeout(function () {
      selection.on("click.drag", null);
    }, 0);
  }

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}

/***/ }),

/***/ "./node_modules/d3-drag/src/noevent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-drag/src/noevent.js ***!
  \*********************************************/
/*! exports provided: nopropagation, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nopropagation", function() { return nopropagation; });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");

function nopropagation() {
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].stopImmediatePropagation();
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].preventDefault();
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].stopImmediatePropagation();
});

/***/ }),

/***/ "./node_modules/d3-dsv/src/autoType.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-dsv/src/autoType.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return autoType; });
function autoType(object) {
  for (var key in object) {
    var value = object[key].trim(),
        number;
    if (!value) value = null;else if (value === "true") value = true;else if (value === "false") value = false;else if (value === "NaN") value = NaN;else if (!isNaN(number = +value)) value = number;else if (/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/.test(value)) value = new Date(value);else continue;
    object[key] = value;
  }

  return object;
}

/***/ }),

/***/ "./node_modules/d3-dsv/src/csv.js":
/*!****************************************!*\
  !*** ./node_modules/d3-dsv/src/csv.js ***!
  \****************************************/
/*! exports provided: csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvParse", function() { return csvParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvParseRows", function() { return csvParseRows; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvFormat", function() { return csvFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvFormatBody", function() { return csvFormatBody; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvFormatRows", function() { return csvFormatRows; });
/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv */ "./node_modules/d3-dsv/src/dsv.js");

var csv = Object(_dsv__WEBPACK_IMPORTED_MODULE_0__["default"])(",");
var csvParse = csv.parse;
var csvParseRows = csv.parseRows;
var csvFormat = csv.format;
var csvFormatBody = csv.formatBody;
var csvFormatRows = csv.formatRows;

/***/ }),

/***/ "./node_modules/d3-dsv/src/dsv.js":
/*!****************************************!*\
  !*** ./node_modules/d3-dsv/src/dsv.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var EOL = {},
    EOF = {},
    QUOTE = 34,
    NEWLINE = 10,
    RETURN = 13;

function objectConverter(columns) {
  return new Function("d", "return {" + columns.map(function (name, i) {
    return JSON.stringify(name) + ": d[" + i + "]";
  }).join(",") + "}");
}

function customConverter(columns, f) {
  var object = objectConverter(columns);
  return function (row, i) {
    return f(object(row), i, columns);
  };
} // Compute unique columns in order of discovery.


function inferColumns(rows) {
  var columnSet = Object.create(null),
      columns = [];
  rows.forEach(function (row) {
    for (var column in row) {
      if (!(column in columnSet)) {
        columns.push(columnSet[column] = column);
      }
    }
  });
  return columns;
}

function pad(value, width) {
  var s = value + "",
      length = s.length;
  return length < width ? new Array(width - length + 1).join(0) + s : s;
}

function formatYear(year) {
  return year < 0 ? "-" + pad(-year, 6) : year > 9999 ? "+" + pad(year, 6) : pad(year, 4);
}

function formatDate(date) {
  var hours = date.getUTCHours(),
      minutes = date.getUTCMinutes(),
      seconds = date.getUTCSeconds(),
      milliseconds = date.getUTCMilliseconds();
  return isNaN(date) ? "Invalid Date" : formatYear(date.getUTCFullYear(), 4) + "-" + pad(date.getUTCMonth() + 1, 2) + "-" + pad(date.getUTCDate(), 2) + (milliseconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "." + pad(milliseconds, 3) + "Z" : seconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "Z" : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z" : "");
}

/* harmony default export */ __webpack_exports__["default"] = (function (delimiter) {
  var reFormat = new RegExp("[\"" + delimiter + "\n\r]"),
      DELIMITER = delimiter.charCodeAt(0);

  function parse(text, f) {
    var convert,
        columns,
        rows = parseRows(text, function (row, i) {
      if (convert) return convert(row, i - 1);
      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
    });
    rows.columns = columns || [];
    return rows;
  }

  function parseRows(text, f) {
    var rows = [],
        // output rows
    N = text.length,
        I = 0,
        // current character index
    n = 0,
        // current line number
    t,
        // current token
    eof = N <= 0,
        // current token followed by EOF?
    eol = false; // current token followed by EOL?
    // Strip the trailing newline.

    if (text.charCodeAt(N - 1) === NEWLINE) --N;
    if (text.charCodeAt(N - 1) === RETURN) --N;

    function token() {
      if (eof) return EOF;
      if (eol) return eol = false, EOL; // Unescape quotes.

      var i,
          j = I,
          c;

      if (text.charCodeAt(j) === QUOTE) {
        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE) {
          ;
        }

        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        }
        return text.slice(j + 1, i - 1).replace(/""/g, "\"");
      } // Find next delimiter or newline.


      while (I < N) {
        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        } else if (c !== DELIMITER) continue;
        return text.slice(j, i);
      } // Return last token before EOF.


      return eof = true, text.slice(j, N);
    }

    while ((t = token()) !== EOF) {
      var row = [];

      while (t !== EOL && t !== EOF) {
        row.push(t), t = token();
      }

      if (f && (row = f(row, n++)) == null) continue;
      rows.push(row);
    }

    return rows;
  }

  function preformatBody(rows, columns) {
    return rows.map(function (row) {
      return columns.map(function (column) {
        return formatValue(row[column]);
      }).join(delimiter);
    });
  }

  function format(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
  }

  function formatBody(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return preformatBody(rows, columns).join("\n");
  }

  function formatRows(rows) {
    return rows.map(formatRow).join("\n");
  }

  function formatRow(row) {
    return row.map(formatValue).join(delimiter);
  }

  function formatValue(value) {
    return value == null ? "" : value instanceof Date ? formatDate(value) : reFormat.test(value += "") ? "\"" + value.replace(/"/g, "\"\"") + "\"" : value;
  }

  return {
    parse: parse,
    parseRows: parseRows,
    format: format,
    formatBody: formatBody,
    formatRows: formatRows
  };
});

/***/ }),

/***/ "./node_modules/d3-dsv/src/index.js":
/*!******************************************!*\
  !*** ./node_modules/d3-dsv/src/index.js ***!
  \******************************************/
/*! exports provided: dsvFormat, csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows, tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows, autoType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv */ "./node_modules/d3-dsv/src/dsv.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dsvFormat", function() { return _dsv__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _csv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csv */ "./node_modules/d3-dsv/src/csv.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvParse", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvParseRows", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvParseRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormat", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormatBody", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvFormatBody"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormatRows", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvFormatRows"]; });

/* harmony import */ var _tsv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tsv */ "./node_modules/d3-dsv/src/tsv.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvParse", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvParseRows", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvParseRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormat", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormatBody", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvFormatBody"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormatRows", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvFormatRows"]; });

/* harmony import */ var _autoType__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./autoType */ "./node_modules/d3-dsv/src/autoType.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "autoType", function() { return _autoType__WEBPACK_IMPORTED_MODULE_3__["default"]; });






/***/ }),

/***/ "./node_modules/d3-dsv/src/tsv.js":
/*!****************************************!*\
  !*** ./node_modules/d3-dsv/src/tsv.js ***!
  \****************************************/
/*! exports provided: tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvParse", function() { return tsvParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvParseRows", function() { return tsvParseRows; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvFormat", function() { return tsvFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvFormatBody", function() { return tsvFormatBody; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvFormatRows", function() { return tsvFormatRows; });
/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv */ "./node_modules/d3-dsv/src/dsv.js");

var tsv = Object(_dsv__WEBPACK_IMPORTED_MODULE_0__["default"])("\t");
var tsvParse = tsv.parse;
var tsvParseRows = tsv.parseRows;
var tsvFormat = tsv.format;
var tsvFormatBody = tsv.formatBody;
var tsvFormatRows = tsv.formatRows;

/***/ }),

/***/ "./node_modules/d3-ease/src/back.js":
/*!******************************************!*\
  !*** ./node_modules/d3-ease/src/back.js ***!
  \******************************************/
/*! exports provided: backIn, backOut, backInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "backIn", function() { return backIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "backOut", function() { return backOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "backInOut", function() { return backInOut; });
var overshoot = 1.70158;
var backIn = function custom(s) {
  s = +s;

  function backIn(t) {
    return t * t * ((s + 1) * t - s);
  }

  backIn.overshoot = custom;
  return backIn;
}(overshoot);
var backOut = function custom(s) {
  s = +s;

  function backOut(t) {
    return --t * t * ((s + 1) * t + s) + 1;
  }

  backOut.overshoot = custom;
  return backOut;
}(overshoot);
var backInOut = function custom(s) {
  s = +s;

  function backInOut(t) {
    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
  }

  backInOut.overshoot = custom;
  return backInOut;
}(overshoot);

/***/ }),

/***/ "./node_modules/d3-ease/src/bounce.js":
/*!********************************************!*\
  !*** ./node_modules/d3-ease/src/bounce.js ***!
  \********************************************/
/*! exports provided: bounceIn, bounceOut, bounceInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceIn", function() { return bounceIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceOut", function() { return bounceOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceInOut", function() { return bounceInOut; });
var b1 = 4 / 11,
    b2 = 6 / 11,
    b3 = 8 / 11,
    b4 = 3 / 4,
    b5 = 9 / 11,
    b6 = 10 / 11,
    b7 = 15 / 16,
    b8 = 21 / 22,
    b9 = 63 / 64,
    b0 = 1 / b1 / b1;
function bounceIn(t) {
  return 1 - bounceOut(1 - t);
}
function bounceOut(t) {
  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
}
function bounceInOut(t) {
  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
}

/***/ }),

/***/ "./node_modules/d3-ease/src/circle.js":
/*!********************************************!*\
  !*** ./node_modules/d3-ease/src/circle.js ***!
  \********************************************/
/*! exports provided: circleIn, circleOut, circleInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleIn", function() { return circleIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleOut", function() { return circleOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleInOut", function() { return circleInOut; });
function circleIn(t) {
  return 1 - Math.sqrt(1 - t * t);
}
function circleOut(t) {
  return Math.sqrt(1 - --t * t);
}
function circleInOut(t) {
  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
}

/***/ }),

/***/ "./node_modules/d3-ease/src/cubic.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-ease/src/cubic.js ***!
  \*******************************************/
/*! exports provided: cubicIn, cubicOut, cubicInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicIn", function() { return cubicIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicOut", function() { return cubicOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicInOut", function() { return cubicInOut; });
function cubicIn(t) {
  return t * t * t;
}
function cubicOut(t) {
  return --t * t * t + 1;
}
function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}

/***/ }),

/***/ "./node_modules/d3-ease/src/elastic.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-ease/src/elastic.js ***!
  \*********************************************/
/*! exports provided: elasticIn, elasticOut, elasticInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elasticIn", function() { return elasticIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elasticOut", function() { return elasticOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elasticInOut", function() { return elasticInOut; });
var tau = 2 * Math.PI,
    amplitude = 1,
    period = 0.3;
var elasticIn = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticIn(t) {
    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
  }

  elasticIn.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticIn.period = function (p) {
    return custom(a, p);
  };

  return elasticIn;
}(amplitude, period);
var elasticOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticOut(t) {
    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
  }

  elasticOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticOut.period = function (p) {
    return custom(a, p);
  };

  return elasticOut;
}(amplitude, period);
var elasticInOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticInOut(t) {
    return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
  }

  elasticInOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticInOut.period = function (p) {
    return custom(a, p);
  };

  return elasticInOut;
}(amplitude, period);

/***/ }),

/***/ "./node_modules/d3-ease/src/exp.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-ease/src/exp.js ***!
  \*****************************************/
/*! exports provided: expIn, expOut, expInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expIn", function() { return expIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expOut", function() { return expOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expInOut", function() { return expInOut; });
function expIn(t) {
  return Math.pow(2, 10 * t - 10);
}
function expOut(t) {
  return 1 - Math.pow(2, -10 * t);
}
function expInOut(t) {
  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
}

/***/ }),

/***/ "./node_modules/d3-ease/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-ease/src/index.js ***!
  \*******************************************/
/*! exports provided: easeLinear, easeQuad, easeQuadIn, easeQuadOut, easeQuadInOut, easeCubic, easeCubicIn, easeCubicOut, easeCubicInOut, easePoly, easePolyIn, easePolyOut, easePolyInOut, easeSin, easeSinIn, easeSinOut, easeSinInOut, easeExp, easeExpIn, easeExpOut, easeExpInOut, easeCircle, easeCircleIn, easeCircleOut, easeCircleInOut, easeBounce, easeBounceIn, easeBounceOut, easeBounceInOut, easeBack, easeBackIn, easeBackOut, easeBackInOut, easeElastic, easeElasticIn, easeElasticOut, easeElasticInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-ease/src/linear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeLinear", function() { return _linear__WEBPACK_IMPORTED_MODULE_0__["linear"]; });

/* harmony import */ var _quad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quad */ "./node_modules/d3-ease/src/quad.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuad", function() { return _quad__WEBPACK_IMPORTED_MODULE_1__["quadInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuadIn", function() { return _quad__WEBPACK_IMPORTED_MODULE_1__["quadIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuadOut", function() { return _quad__WEBPACK_IMPORTED_MODULE_1__["quadOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuadInOut", function() { return _quad__WEBPACK_IMPORTED_MODULE_1__["quadInOut"]; });

/* harmony import */ var _cubic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubic */ "./node_modules/d3-ease/src/cubic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubic", function() { return _cubic__WEBPACK_IMPORTED_MODULE_2__["cubicInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubicIn", function() { return _cubic__WEBPACK_IMPORTED_MODULE_2__["cubicIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubicOut", function() { return _cubic__WEBPACK_IMPORTED_MODULE_2__["cubicOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubicInOut", function() { return _cubic__WEBPACK_IMPORTED_MODULE_2__["cubicInOut"]; });

/* harmony import */ var _poly__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./poly */ "./node_modules/d3-ease/src/poly.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePoly", function() { return _poly__WEBPACK_IMPORTED_MODULE_3__["polyInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePolyIn", function() { return _poly__WEBPACK_IMPORTED_MODULE_3__["polyIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePolyOut", function() { return _poly__WEBPACK_IMPORTED_MODULE_3__["polyOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePolyInOut", function() { return _poly__WEBPACK_IMPORTED_MODULE_3__["polyInOut"]; });

/* harmony import */ var _sin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sin */ "./node_modules/d3-ease/src/sin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSin", function() { return _sin__WEBPACK_IMPORTED_MODULE_4__["sinInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSinIn", function() { return _sin__WEBPACK_IMPORTED_MODULE_4__["sinIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSinOut", function() { return _sin__WEBPACK_IMPORTED_MODULE_4__["sinOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSinInOut", function() { return _sin__WEBPACK_IMPORTED_MODULE_4__["sinInOut"]; });

/* harmony import */ var _exp__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exp */ "./node_modules/d3-ease/src/exp.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExp", function() { return _exp__WEBPACK_IMPORTED_MODULE_5__["expInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExpIn", function() { return _exp__WEBPACK_IMPORTED_MODULE_5__["expIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExpOut", function() { return _exp__WEBPACK_IMPORTED_MODULE_5__["expOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExpInOut", function() { return _exp__WEBPACK_IMPORTED_MODULE_5__["expInOut"]; });

/* harmony import */ var _circle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./circle */ "./node_modules/d3-ease/src/circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircle", function() { return _circle__WEBPACK_IMPORTED_MODULE_6__["circleInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircleIn", function() { return _circle__WEBPACK_IMPORTED_MODULE_6__["circleIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircleOut", function() { return _circle__WEBPACK_IMPORTED_MODULE_6__["circleOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircleInOut", function() { return _circle__WEBPACK_IMPORTED_MODULE_6__["circleInOut"]; });

/* harmony import */ var _bounce__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bounce */ "./node_modules/d3-ease/src/bounce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounce", function() { return _bounce__WEBPACK_IMPORTED_MODULE_7__["bounceOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounceIn", function() { return _bounce__WEBPACK_IMPORTED_MODULE_7__["bounceIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounceOut", function() { return _bounce__WEBPACK_IMPORTED_MODULE_7__["bounceOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounceInOut", function() { return _bounce__WEBPACK_IMPORTED_MODULE_7__["bounceInOut"]; });

/* harmony import */ var _back__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./back */ "./node_modules/d3-ease/src/back.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBack", function() { return _back__WEBPACK_IMPORTED_MODULE_8__["backInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBackIn", function() { return _back__WEBPACK_IMPORTED_MODULE_8__["backIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBackOut", function() { return _back__WEBPACK_IMPORTED_MODULE_8__["backOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBackInOut", function() { return _back__WEBPACK_IMPORTED_MODULE_8__["backInOut"]; });

/* harmony import */ var _elastic__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./elastic */ "./node_modules/d3-ease/src/elastic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElastic", function() { return _elastic__WEBPACK_IMPORTED_MODULE_9__["elasticOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElasticIn", function() { return _elastic__WEBPACK_IMPORTED_MODULE_9__["elasticIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElasticOut", function() { return _elastic__WEBPACK_IMPORTED_MODULE_9__["elasticOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElasticInOut", function() { return _elastic__WEBPACK_IMPORTED_MODULE_9__["elasticInOut"]; });












/***/ }),

/***/ "./node_modules/d3-ease/src/linear.js":
/*!********************************************!*\
  !*** ./node_modules/d3-ease/src/linear.js ***!
  \********************************************/
/*! exports provided: linear */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linear", function() { return linear; });
function linear(t) {
  return +t;
}

/***/ }),

/***/ "./node_modules/d3-ease/src/poly.js":
/*!******************************************!*\
  !*** ./node_modules/d3-ease/src/poly.js ***!
  \******************************************/
/*! exports provided: polyIn, polyOut, polyInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyIn", function() { return polyIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyOut", function() { return polyOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyInOut", function() { return polyInOut; });
var exponent = 3;
var polyIn = function custom(e) {
  e = +e;

  function polyIn(t) {
    return Math.pow(t, e);
  }

  polyIn.exponent = custom;
  return polyIn;
}(exponent);
var polyOut = function custom(e) {
  e = +e;

  function polyOut(t) {
    return 1 - Math.pow(1 - t, e);
  }

  polyOut.exponent = custom;
  return polyOut;
}(exponent);
var polyInOut = function custom(e) {
  e = +e;

  function polyInOut(t) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
  }

  polyInOut.exponent = custom;
  return polyInOut;
}(exponent);

/***/ }),

/***/ "./node_modules/d3-ease/src/quad.js":
/*!******************************************!*\
  !*** ./node_modules/d3-ease/src/quad.js ***!
  \******************************************/
/*! exports provided: quadIn, quadOut, quadInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quadIn", function() { return quadIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quadOut", function() { return quadOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quadInOut", function() { return quadInOut; });
function quadIn(t) {
  return t * t;
}
function quadOut(t) {
  return t * (2 - t);
}
function quadInOut(t) {
  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
}

/***/ }),

/***/ "./node_modules/d3-ease/src/sin.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-ease/src/sin.js ***!
  \*****************************************/
/*! exports provided: sinIn, sinOut, sinInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinIn", function() { return sinIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinOut", function() { return sinOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinInOut", function() { return sinInOut; });
var pi = Math.PI,
    halfPi = pi / 2;
function sinIn(t) {
  return 1 - Math.cos(t * halfPi);
}
function sinOut(t) {
  return Math.sin(t * halfPi);
}
function sinInOut(t) {
  return (1 - Math.cos(pi * t)) / 2;
}

/***/ }),

/***/ "./node_modules/d3-fetch/src/blob.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-fetch/src/blob.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function responseBlob(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.blob();
}

/* harmony default export */ __webpack_exports__["default"] = (function (input, init) {
  return fetch(input, init).then(responseBlob);
});

/***/ }),

/***/ "./node_modules/d3-fetch/src/buffer.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-fetch/src/buffer.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function responseArrayBuffer(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.arrayBuffer();
}

/* harmony default export */ __webpack_exports__["default"] = (function (input, init) {
  return fetch(input, init).then(responseArrayBuffer);
});

/***/ }),

/***/ "./node_modules/d3-fetch/src/dsv.js":
/*!******************************************!*\
  !*** ./node_modules/d3-fetch/src/dsv.js ***!
  \******************************************/
/*! exports provided: default, csv, tsv */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return dsv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csv", function() { return csv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsv", function() { return tsv; });
/* harmony import */ var d3_dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dsv */ "./node_modules/d3-dsv/src/index.js");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./text */ "./node_modules/d3-fetch/src/text.js");



function dsvParse(parse) {
  return function (input, init, row) {
    if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;
    return Object(_text__WEBPACK_IMPORTED_MODULE_1__["default"])(input, init).then(function (response) {
      return parse(response, row);
    });
  };
}

function dsv(delimiter, input, init, row) {
  if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;
  var format = Object(d3_dsv__WEBPACK_IMPORTED_MODULE_0__["dsvFormat"])(delimiter);
  return Object(_text__WEBPACK_IMPORTED_MODULE_1__["default"])(input, init).then(function (response) {
    return format.parse(response, row);
  });
}
var csv = dsvParse(d3_dsv__WEBPACK_IMPORTED_MODULE_0__["csvParse"]);
var tsv = dsvParse(d3_dsv__WEBPACK_IMPORTED_MODULE_0__["tsvParse"]);

/***/ }),

/***/ "./node_modules/d3-fetch/src/image.js":
/*!********************************************!*\
  !*** ./node_modules/d3-fetch/src/image.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (input, init) {
  return new Promise(function (resolve, reject) {
    var image = new Image();

    for (var key in init) {
      image[key] = init[key];
    }

    image.onerror = reject;

    image.onload = function () {
      resolve(image);
    };

    image.src = input;
  });
});

/***/ }),

/***/ "./node_modules/d3-fetch/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-fetch/src/index.js ***!
  \********************************************/
/*! exports provided: blob, buffer, dsv, csv, tsv, image, json, text, xml, html, svg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _blob__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blob */ "./node_modules/d3-fetch/src/blob.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blob", function() { return _blob__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer */ "./node_modules/d3-fetch/src/buffer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return _buffer__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dsv */ "./node_modules/d3-fetch/src/dsv.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dsv", function() { return _dsv__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csv", function() { return _dsv__WEBPACK_IMPORTED_MODULE_2__["csv"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsv", function() { return _dsv__WEBPACK_IMPORTED_MODULE_2__["tsv"]; });

/* harmony import */ var _image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./image */ "./node_modules/d3-fetch/src/image.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "image", function() { return _image__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./json */ "./node_modules/d3-fetch/src/json.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "json", function() { return _json__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./text */ "./node_modules/d3-fetch/src/text.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "text", function() { return _text__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _xml__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./xml */ "./node_modules/d3-fetch/src/xml.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xml", function() { return _xml__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "html", function() { return _xml__WEBPACK_IMPORTED_MODULE_6__["html"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "svg", function() { return _xml__WEBPACK_IMPORTED_MODULE_6__["svg"]; });









/***/ }),

/***/ "./node_modules/d3-fetch/src/json.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-fetch/src/json.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function responseJson(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.json();
}

/* harmony default export */ __webpack_exports__["default"] = (function (input, init) {
  return fetch(input, init).then(responseJson);
});

/***/ }),

/***/ "./node_modules/d3-fetch/src/text.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-fetch/src/text.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function responseText(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.text();
}

/* harmony default export */ __webpack_exports__["default"] = (function (input, init) {
  return fetch(input, init).then(responseText);
});

/***/ }),

/***/ "./node_modules/d3-fetch/src/xml.js":
/*!******************************************!*\
  !*** ./node_modules/d3-fetch/src/xml.js ***!
  \******************************************/
/*! exports provided: default, html, svg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "html", function() { return html; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "svg", function() { return svg; });
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./text */ "./node_modules/d3-fetch/src/text.js");


function parser(type) {
  return function (input, init) {
    return Object(_text__WEBPACK_IMPORTED_MODULE_0__["default"])(input, init).then(function (text) {
      return new DOMParser().parseFromString(text, type);
    });
  };
}

/* harmony default export */ __webpack_exports__["default"] = (parser("application/xml"));
var html = parser("text/html");
var svg = parser("image/svg+xml");

/***/ }),

/***/ "./node_modules/d3-force/src/center.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-force/src/center.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x, y) {
  var nodes;
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force() {
    var i,
        n = nodes.length,
        node,
        sx = 0,
        sy = 0;

    for (i = 0; i < n; ++i) {
      node = nodes[i], sx += node.x, sy += node.y;
    }

    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {
      node = nodes[i], node.x -= sx, node.y -= sy;
    }
  }

  force.initialize = function (_) {
    nodes = _;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-force/src/collide.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-force/src/collide.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-force/src/constant.js");
/* harmony import */ var _jiggle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jiggle */ "./node_modules/d3-force/src/jiggle.js");
/* harmony import */ var d3_quadtree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-quadtree */ "./node_modules/d3-quadtree/src/index.js");




function x(d) {
  return d.x + d.vx;
}

function y(d) {
  return d.y + d.vy;
}

/* harmony default export */ __webpack_exports__["default"] = (function (radius) {
  var nodes,
      radii,
      strength = 1,
      iterations = 1;
  if (typeof radius !== "function") radius = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(radius == null ? 1 : +radius);

  function force() {
    var i,
        n = nodes.length,
        tree,
        node,
        xi,
        yi,
        ri,
        ri2;

    for (var k = 0; k < iterations; ++k) {
      tree = Object(d3_quadtree__WEBPACK_IMPORTED_MODULE_2__["quadtree"])(nodes, x, y).visitAfter(prepare);

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        ri = radii[node.index], ri2 = ri * ri;
        xi = node.x + node.vx;
        yi = node.y + node.vy;
        tree.visit(apply);
      }
    }

    function apply(quad, x0, y0, x1, y1) {
      var data = quad.data,
          rj = quad.r,
          r = ri + rj;

      if (data) {
        if (data.index > node.index) {
          var x = xi - data.x - data.vx,
              y = yi - data.y - data.vy,
              l = x * x + y * y;

          if (l < r * r) {
            if (x === 0) x = Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])(), l += x * x;
            if (y === 0) y = Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])(), l += y * y;
            l = (r - (l = Math.sqrt(l))) / l * strength;
            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
            node.vy += (y *= l) * r;
            data.vx -= x * (r = 1 - r);
            data.vy -= y * r;
          }
        }

        return;
      }

      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
    }
  }

  function prepare(quad) {
    if (quad.data) return quad.r = radii[quad.data.index];

    for (var i = quad.r = 0; i < 4; ++i) {
      if (quad[i] && quad[i].r > quad.r) {
        quad.r = quad[i].r;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    radii = new Array(n);

    for (i = 0; i < n; ++i) {
      node = nodes[i], radii[node.index] = +radius(node, i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : radius;
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-force/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-force/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-force/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-force/src/index.js ***!
  \********************************************/
/*! exports provided: forceCenter, forceCollide, forceLink, forceManyBody, forceRadial, forceSimulation, forceX, forceY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _center__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./center */ "./node_modules/d3-force/src/center.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceCenter", function() { return _center__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _collide__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collide */ "./node_modules/d3-force/src/collide.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceCollide", function() { return _collide__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./link */ "./node_modules/d3-force/src/link.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceLink", function() { return _link__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _manyBody__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./manyBody */ "./node_modules/d3-force/src/manyBody.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceManyBody", function() { return _manyBody__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _radial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./radial */ "./node_modules/d3-force/src/radial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceRadial", function() { return _radial__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _simulation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./simulation */ "./node_modules/d3-force/src/simulation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceSimulation", function() { return _simulation__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _x__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./x */ "./node_modules/d3-force/src/x.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceX", function() { return _x__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _y__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./y */ "./node_modules/d3-force/src/y.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceY", function() { return _y__WEBPACK_IMPORTED_MODULE_7__["default"]; });










/***/ }),

/***/ "./node_modules/d3-force/src/jiggle.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-force/src/jiggle.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return (Math.random() - 0.5) * 1e-6;
});

/***/ }),

/***/ "./node_modules/d3-force/src/link.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-force/src/link.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-force/src/constant.js");
/* harmony import */ var _jiggle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jiggle */ "./node_modules/d3-force/src/jiggle.js");
/* harmony import */ var d3_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-collection */ "./node_modules/d3-collection/src/index.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }





function index(d) {
  return d.index;
}

function find(nodeById, nodeId) {
  var node = nodeById.get(nodeId);
  if (!node) throw new Error("missing: " + nodeId);
  return node;
}

/* harmony default export */ __webpack_exports__["default"] = (function (links) {
  var id = index,
      strength = defaultStrength,
      strengths,
      distance = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(30),
      distances,
      nodes,
      count,
      bias,
      iterations = 1;
  if (links == null) links = [];

  function defaultStrength(link) {
    return 1 / Math.min(count[link.source.index], count[link.target.index]);
  }

  function force(alpha) {
    for (var k = 0, n = links.length; k < iterations; ++k) {
      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
        link = links[i], source = link.source, target = link.target;
        x = target.x + target.vx - source.x - source.vx || Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])();
        y = target.y + target.vy - source.y - source.vy || Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])();
        l = Math.sqrt(x * x + y * y);
        l = (l - distances[i]) / l * alpha * strengths[i];
        x *= l, y *= l;
        target.vx -= x * (b = bias[i]);
        target.vy -= y * b;
        source.vx += x * (b = 1 - b);
        source.vy += y * b;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        m = links.length,
        nodeById = Object(d3_collection__WEBPACK_IMPORTED_MODULE_2__["map"])(nodes, id),
        link;

    for (i = 0, count = new Array(n); i < m; ++i) {
      link = links[i], link.index = i;
      if (_typeof(link.source) !== "object") link.source = find(nodeById, link.source);
      if (_typeof(link.target) !== "object") link.target = find(nodeById, link.target);
      count[link.source.index] = (count[link.source.index] || 0) + 1;
      count[link.target.index] = (count[link.target.index] || 0) + 1;
    }

    for (i = 0, bias = new Array(m); i < m; ++i) {
      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
    }

    strengths = new Array(m), initializeStrength();
    distances = new Array(m), initializeDistance();
  }

  function initializeStrength() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      strengths[i] = +strength(links[i], i, links);
    }
  }

  function initializeDistance() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      distances[i] = +distance(links[i], i, links);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.links = function (_) {
    return arguments.length ? (links = _, initialize(), force) : links;
  };

  force.id = function (_) {
    return arguments.length ? (id = _, force) : id;
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initializeStrength(), force) : strength;
  };

  force.distance = function (_) {
    return arguments.length ? (distance = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initializeDistance(), force) : distance;
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-force/src/manyBody.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-force/src/manyBody.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-force/src/constant.js");
/* harmony import */ var _jiggle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jiggle */ "./node_modules/d3-force/src/jiggle.js");
/* harmony import */ var d3_quadtree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-quadtree */ "./node_modules/d3-quadtree/src/index.js");
/* harmony import */ var _simulation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./simulation */ "./node_modules/d3-force/src/simulation.js");




/* harmony default export */ __webpack_exports__["default"] = (function () {
  var nodes,
      node,
      alpha,
      strength = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(-30),
      strengths,
      distanceMin2 = 1,
      distanceMax2 = Infinity,
      theta2 = 0.81;

  function force(_) {
    var i,
        n = nodes.length,
        tree = Object(d3_quadtree__WEBPACK_IMPORTED_MODULE_2__["quadtree"])(nodes, _simulation__WEBPACK_IMPORTED_MODULE_3__["x"], _simulation__WEBPACK_IMPORTED_MODULE_3__["y"]).visitAfter(accumulate);

    for (alpha = _, i = 0; i < n; ++i) {
      node = nodes[i], tree.visit(apply);
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    strengths = new Array(n);

    for (i = 0; i < n; ++i) {
      node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
    }
  }

  function accumulate(quad) {
    var strength = 0,
        q,
        c,
        weight = 0,
        x,
        y,
        i; // For internal nodes, accumulate forces from child quadrants.

    if (quad.length) {
      for (x = y = i = 0; i < 4; ++i) {
        if ((q = quad[i]) && (c = Math.abs(q.value))) {
          strength += q.value, weight += c, x += c * q.x, y += c * q.y;
        }
      }

      quad.x = x / weight;
      quad.y = y / weight;
    } // For leaf nodes, accumulate forces from coincident quadrants.
    else {
        q = quad;
        q.x = q.data.x;
        q.y = q.data.y;

        do {
          strength += strengths[q.data.index];
        } while (q = q.next);
      }

    quad.value = strength;
  }

  function apply(quad, x1, _, x2) {
    if (!quad.value) return true;
    var x = quad.x - node.x,
        y = quad.y - node.y,
        w = x2 - x1,
        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.
    // Limit forces for very close nodes; randomize direction if coincident.

    if (w * w / theta2 < l) {
      if (l < distanceMax2) {
        if (x === 0) x = Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])(), l += x * x;
        if (y === 0) y = Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])(), l += y * y;
        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        node.vx += x * quad.value * alpha / l;
        node.vy += y * quad.value * alpha / l;
      }

      return true;
    } // Otherwise, process points directly.
    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.


    if (quad.data !== node || quad.next) {
      if (x === 0) x = Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])(), l += x * x;
      if (y === 0) y = Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])(), l += y * y;
      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
    }

    do {
      if (quad.data !== node) {
        w = strengths[quad.data.index] * alpha / l;
        node.vx += x * w;
        node.vy += y * w;
      }
    } while (quad = quad.next);
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : strength;
  };

  force.distanceMin = function (_) {
    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
  };

  force.distanceMax = function (_) {
    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
  };

  force.theta = function (_) {
    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-force/src/radial.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-force/src/radial.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-force/src/constant.js");

/* harmony default export */ __webpack_exports__["default"] = (function (radius, x, y) {
  var nodes,
      strength = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(0.1),
      strengths,
      radiuses;
  if (typeof radius !== "function") radius = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+radius);
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force(alpha) {
    for (var i = 0, n = nodes.length; i < n; ++i) {
      var node = nodes[i],
          dx = node.x - x || 1e-6,
          dy = node.y - y || 1e-6,
          r = Math.sqrt(dx * dx + dy * dy),
          k = (radiuses[i] - r) * strengths[i] * alpha / r;
      node.vx += dx * k;
      node.vy += dy * k;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    radiuses = new Array(n);

    for (i = 0; i < n; ++i) {
      radiuses[i] = +radius(nodes[i], i, nodes);
      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _, initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : radius;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-force/src/simulation.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-force/src/simulation.js ***!
  \*************************************************/
/*! exports provided: x, y, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return x; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return y; });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony import */ var d3_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-collection */ "./node_modules/d3-collection/src/index.js");
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/index.js");



function x(d) {
  return d.x;
}
function y(d) {
  return d.y;
}
var initialRadius = 10,
    initialAngle = Math.PI * (3 - Math.sqrt(5));
/* harmony default export */ __webpack_exports__["default"] = (function (_nodes) {
  var simulation,
      _alpha = 1,
      _alphaMin = 0.001,
      _alphaDecay = 1 - Math.pow(_alphaMin, 1 / 300),
      _alphaTarget = 0,
      _velocityDecay = 0.6,
      forces = Object(d3_collection__WEBPACK_IMPORTED_MODULE_1__["map"])(),
      stepper = Object(d3_timer__WEBPACK_IMPORTED_MODULE_2__["timer"])(step),
      event = Object(d3_dispatch__WEBPACK_IMPORTED_MODULE_0__["dispatch"])("tick", "end");

  if (_nodes == null) _nodes = [];

  function step() {
    tick();
    event.call("tick", simulation);

    if (_alpha < _alphaMin) {
      stepper.stop();
      event.call("end", simulation);
    }
  }

  function tick(iterations) {
    var i,
        n = _nodes.length,
        node;
    if (iterations === undefined) iterations = 1;

    for (var k = 0; k < iterations; ++k) {
      _alpha += (_alphaTarget - _alpha) * _alphaDecay;
      forces.each(function (force) {
        force(_alpha);
      });

      for (i = 0; i < n; ++i) {
        node = _nodes[i];
        if (node.fx == null) node.x += node.vx *= _velocityDecay;else node.x = node.fx, node.vx = 0;
        if (node.fy == null) node.y += node.vy *= _velocityDecay;else node.y = node.fy, node.vy = 0;
      }
    }

    return simulation;
  }

  function initializeNodes() {
    for (var i = 0, n = _nodes.length, node; i < n; ++i) {
      node = _nodes[i], node.index = i;
      if (node.fx != null) node.x = node.fx;
      if (node.fy != null) node.y = node.fy;

      if (isNaN(node.x) || isNaN(node.y)) {
        var radius = initialRadius * Math.sqrt(i),
            angle = i * initialAngle;
        node.x = radius * Math.cos(angle);
        node.y = radius * Math.sin(angle);
      }

      if (isNaN(node.vx) || isNaN(node.vy)) {
        node.vx = node.vy = 0;
      }
    }
  }

  function initializeForce(force) {
    if (force.initialize) force.initialize(_nodes);
    return force;
  }

  initializeNodes();
  return simulation = {
    tick: tick,
    restart: function restart() {
      return stepper.restart(step), simulation;
    },
    stop: function stop() {
      return stepper.stop(), simulation;
    },
    nodes: function nodes(_) {
      return arguments.length ? (_nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : _nodes;
    },
    alpha: function alpha(_) {
      return arguments.length ? (_alpha = +_, simulation) : _alpha;
    },
    alphaMin: function alphaMin(_) {
      return arguments.length ? (_alphaMin = +_, simulation) : _alphaMin;
    },
    alphaDecay: function alphaDecay(_) {
      return arguments.length ? (_alphaDecay = +_, simulation) : +_alphaDecay;
    },
    alphaTarget: function alphaTarget(_) {
      return arguments.length ? (_alphaTarget = +_, simulation) : _alphaTarget;
    },
    velocityDecay: function velocityDecay(_) {
      return arguments.length ? (_velocityDecay = 1 - _, simulation) : 1 - _velocityDecay;
    },
    force: function force(name, _) {
      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);
    },
    find: function find(x, y, radius) {
      var i = 0,
          n = _nodes.length,
          dx,
          dy,
          d2,
          node,
          closest;
      if (radius == null) radius = Infinity;else radius *= radius;

      for (i = 0; i < n; ++i) {
        node = _nodes[i];
        dx = x - node.x;
        dy = y - node.y;
        d2 = dx * dx + dy * dy;
        if (d2 < radius) closest = node, radius = d2;
      }

      return closest;
    },
    on: function on(name, _) {
      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
    }
  };
});

/***/ }),

/***/ "./node_modules/d3-force/src/x.js":
/*!****************************************!*\
  !*** ./node_modules/d3-force/src/x.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-force/src/constant.js");

/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  var strength = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(0.1),
      nodes,
      strengths,
      xz;
  if (typeof x !== "function") x = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(x == null ? 0 : +x);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    xz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : strength;
  };

  force.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : x;
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-force/src/y.js":
/*!****************************************!*\
  !*** ./node_modules/d3-force/src/y.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-force/src/constant.js");

/* harmony default export */ __webpack_exports__["default"] = (function (y) {
  var strength = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(0.1),
      nodes,
      strengths,
      yz;
  if (typeof y !== "function") y = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(y == null ? 0 : +y);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    yz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : strength;
  };

  force.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : y;
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-format/src/defaultLocale.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-format/src/defaultLocale.js ***!
  \*****************************************************/
/*! exports provided: format, formatPrefix, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "format", function() { return format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatPrefix", function() { return formatPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return defaultLocale; });
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale */ "./node_modules/d3-format/src/locale.js");

var locale;
var format;
var formatPrefix;
defaultLocale({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});
function defaultLocale(definition) {
  locale = Object(_locale__WEBPACK_IMPORTED_MODULE_0__["default"])(definition);
  format = locale.format;
  formatPrefix = locale.formatPrefix;
  return locale;
}

/***/ }),

/***/ "./node_modules/d3-format/src/exponent.js":
/*!************************************************!*\
  !*** ./node_modules/d3-format/src/exponent.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _formatDecimal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal */ "./node_modules/d3-format/src/formatDecimal.js");

/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return x = Object(_formatDecimal__WEBPACK_IMPORTED_MODULE_0__["default"])(Math.abs(x)), x ? x[1] : NaN;
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatDecimal.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-format/src/formatDecimal.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimal(1.23) returns ["123", 0].
/* harmony default export */ __webpack_exports__["default"] = (function (x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity

  var i,
      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).

  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatGroup.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-format/src/formatGroup.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (grouping, thousands) {
  return function (value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatNumerals.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-format/src/formatNumerals.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (numerals) {
  return function (value) {
    return value.replace(/[0-9]/g, function (i) {
      return numerals[+i];
    });
  };
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatPrefixAuto.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-format/src/formatPrefixAuto.js ***!
  \********************************************************/
/*! exports provided: prefixExponent, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prefixExponent", function() { return prefixExponent; });
/* harmony import */ var _formatDecimal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal */ "./node_modules/d3-format/src/formatDecimal.js");

var prefixExponent;
/* harmony default export */ __webpack_exports__["default"] = (function (x, p) {
  var d = Object(_formatDecimal__WEBPACK_IMPORTED_MODULE_0__["default"])(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + Object(_formatDecimal__WEBPACK_IMPORTED_MODULE_0__["default"])(x, Math.max(0, p + i - 1))[0]; // less than 1y!
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatRounded.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-format/src/formatRounded.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _formatDecimal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal */ "./node_modules/d3-format/src/formatDecimal.js");

/* harmony default export */ __webpack_exports__["default"] = (function (x, p) {
  var d = Object(_formatDecimal__WEBPACK_IMPORTED_MODULE_0__["default"])(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatSpecifier.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-format/src/formatSpecifier.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatSpecifier; });
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier(specifier) {
  return new FormatSpecifier(specifier);
}
formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  this.fill = match[1] || " ";
  this.align = match[2] || ">";
  this.sign = match[3] || "-";
  this.symbol = match[4] || "";
  this.zero = !!match[5];
  this.width = match[6] && +match[6];
  this.comma = !!match[7];
  this.precision = match[8] && +match[8].slice(1);
  this.trim = !!match[9];
  this.type = match[10] || "";
}

FormatSpecifier.prototype.toString = function () {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width == null ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision == null ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};

/***/ }),

/***/ "./node_modules/d3-format/src/formatTrim.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-format/src/formatTrim.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
/* harmony default export */ __webpack_exports__["default"] = (function (s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".":
        i0 = i1 = i;
        break;

      case "0":
        if (i0 === 0) i0 = i;
        i1 = i;
        break;

      default:
        if (i0 > 0) {
          if (!+s[i]) break out;
          i0 = 0;
        }

        break;
    }
  }

  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-format/src/formatTypes.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _formatPrefixAuto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatPrefixAuto */ "./node_modules/d3-format/src/formatPrefixAuto.js");
/* harmony import */ var _formatRounded__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatRounded */ "./node_modules/d3-format/src/formatRounded.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  "%": function _(x, p) {
    return (x * 100).toFixed(p);
  },
  "b": function b(x) {
    return Math.round(x).toString(2);
  },
  "c": function c(x) {
    return x + "";
  },
  "d": function d(x) {
    return Math.round(x).toString(10);
  },
  "e": function e(x, p) {
    return x.toExponential(p);
  },
  "f": function f(x, p) {
    return x.toFixed(p);
  },
  "g": function g(x, p) {
    return x.toPrecision(p);
  },
  "o": function o(x) {
    return Math.round(x).toString(8);
  },
  "p": function p(x, _p) {
    return Object(_formatRounded__WEBPACK_IMPORTED_MODULE_1__["default"])(x * 100, _p);
  },
  "r": _formatRounded__WEBPACK_IMPORTED_MODULE_1__["default"],
  "s": _formatPrefixAuto__WEBPACK_IMPORTED_MODULE_0__["default"],
  "X": function X(x) {
    return Math.round(x).toString(16).toUpperCase();
  },
  "x": function x(_x) {
    return Math.round(_x).toString(16);
  }
});

/***/ }),

/***/ "./node_modules/d3-format/src/identity.js":
/*!************************************************!*\
  !*** ./node_modules/d3-format/src/identity.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return x;
});

/***/ }),

/***/ "./node_modules/d3-format/src/index.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-format/src/index.js ***!
  \*********************************************/
/*! exports provided: formatDefaultLocale, format, formatPrefix, formatLocale, formatSpecifier, precisionFixed, precisionPrefix, precisionRound */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultLocale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale */ "./node_modules/d3-format/src/defaultLocale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDefaultLocale", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "format", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["format"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatPrefix", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["formatPrefix"]; });

/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale */ "./node_modules/d3-format/src/locale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatLocale", function() { return _locale__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _formatSpecifier__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatSpecifier */ "./node_modules/d3-format/src/formatSpecifier.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatSpecifier", function() { return _formatSpecifier__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _precisionFixed__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./precisionFixed */ "./node_modules/d3-format/src/precisionFixed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionFixed", function() { return _precisionFixed__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _precisionPrefix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./precisionPrefix */ "./node_modules/d3-format/src/precisionPrefix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionPrefix", function() { return _precisionPrefix__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _precisionRound__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./precisionRound */ "./node_modules/d3-format/src/precisionRound.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionRound", function() { return _precisionRound__WEBPACK_IMPORTED_MODULE_5__["default"]; });








/***/ }),

/***/ "./node_modules/d3-format/src/locale.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-format/src/locale.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent */ "./node_modules/d3-format/src/exponent.js");
/* harmony import */ var _formatGroup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatGroup */ "./node_modules/d3-format/src/formatGroup.js");
/* harmony import */ var _formatNumerals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatNumerals */ "./node_modules/d3-format/src/formatNumerals.js");
/* harmony import */ var _formatSpecifier__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatSpecifier */ "./node_modules/d3-format/src/formatSpecifier.js");
/* harmony import */ var _formatTrim__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./formatTrim */ "./node_modules/d3-format/src/formatTrim.js");
/* harmony import */ var _formatTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./formatTypes */ "./node_modules/d3-format/src/formatTypes.js");
/* harmony import */ var _formatPrefixAuto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./formatPrefixAuto */ "./node_modules/d3-format/src/formatPrefixAuto.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-format/src/identity.js");








var prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
/* harmony default export */ __webpack_exports__["default"] = (function (locale) {
  var group = locale.grouping && locale.thousands ? Object(_formatGroup__WEBPACK_IMPORTED_MODULE_1__["default"])(locale.grouping, locale.thousands) : _identity__WEBPACK_IMPORTED_MODULE_7__["default"],
      currency = locale.currency,
      decimal = locale.decimal,
      numerals = locale.numerals ? Object(_formatNumerals__WEBPACK_IMPORTED_MODULE_2__["default"])(locale.numerals) : _identity__WEBPACK_IMPORTED_MODULE_7__["default"],
      percent = locale.percent || "%";

  function newFormat(specifier) {
    specifier = Object(_formatSpecifier__WEBPACK_IMPORTED_MODULE_3__["default"])(specifier);
    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type; // The "n" type is an alias for ",g".

    if (type === "n") comma = true, type = "g"; // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!_formatTypes__WEBPACK_IMPORTED_MODULE_5__["default"][type]) precision == null && (precision = 12), trim = true, type = "g"; // If zero fill is specified, padding goes after sign and before digits.

    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "="; // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.

    var prefix = symbol === "$" ? currency[0] : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currency[1] : /[%p]/.test(type) ? percent : ""; // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?

    var formatType = _formatTypes__WEBPACK_IMPORTED_MODULE_5__["default"][type],
        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].

    precision = precision == null ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i,
          n,
          c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value; // Perform the initial formatting.

        var valueNegative = value < 0;
        value = formatType(Math.abs(value), precision); // Trim insignificant zeros.

        if (trim) value = Object(_formatTrim__WEBPACK_IMPORTED_MODULE_4__["default"])(value); // If a negative value rounds to zero during formatting, treat as positive.

        if (valueNegative && +value === 0) valueNegative = false; // Compute the prefix and suffix.

        valuePrefix = (valueNegative ? sign === "(" ? sign : "-" : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto__WEBPACK_IMPORTED_MODULE_6__["prefixExponent"] / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : ""); // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.

        if (maybeSuffix) {
          i = -1, n = value.length;

          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      } // If the fill character is not "0", grouping is applied before padding.


      if (comma && !zero) value = group(value, Infinity); // Compute the padding.

      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : ""; // If the fill character is "0", grouping is applied after padding.

      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = ""; // Reconstruct the final output based on the desired alignment.

      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;

        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;

        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;

        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }

      return numerals(value);
    }

    format.toString = function () {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = Object(_formatSpecifier__WEBPACK_IMPORTED_MODULE_3__["default"])(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor(Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function (value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
});

/***/ }),

/***/ "./node_modules/d3-format/src/precisionFixed.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-format/src/precisionFixed.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent */ "./node_modules/d3-format/src/exponent.js");

/* harmony default export */ __webpack_exports__["default"] = (function (step) {
  return Math.max(0, -Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(Math.abs(step)));
});

/***/ }),

/***/ "./node_modules/d3-format/src/precisionPrefix.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-format/src/precisionPrefix.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent */ "./node_modules/d3-format/src/exponent.js");

/* harmony default export */ __webpack_exports__["default"] = (function (step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(value) / 3))) * 3 - Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(Math.abs(step)));
});

/***/ }),

/***/ "./node_modules/d3-format/src/precisionRound.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-format/src/precisionRound.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent */ "./node_modules/d3-format/src/exponent.js");

/* harmony default export */ __webpack_exports__["default"] = (function (step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(max) - Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(step)) + 1;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/adder.js":
/*!******************************************!*\
  !*** ./node_modules/d3-geo/src/adder.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Adds floating point numbers with twice the normal precision.
// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and
// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)
// 305–363 (1997).
// Code adapted from GeographicLib by Charles F. F. Karney,
// http://geographiclib.sourceforge.net/
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return new Adder();
});

function Adder() {
  this.reset();
}

Adder.prototype = {
  constructor: Adder,
  reset: function reset() {
    this.s = // rounded value
    this.t = 0; // exact error
  },
  add: function add(y) {
    _add(temp, y, this.t);

    _add(this, temp.s, this.s);

    if (this.s) this.t += temp.t;else this.s = temp.t;
  },
  valueOf: function valueOf() {
    return this.s;
  }
};
var temp = new Adder();

function _add(adder, a, b) {
  var x = adder.s = a + b,
      bv = x - a,
      av = x - bv;
  adder.t = a - av + (b - bv);
}

/***/ }),

/***/ "./node_modules/d3-geo/src/area.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/area.js ***!
  \*****************************************/
/*! exports provided: areaRingSum, areaStream, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "areaRingSum", function() { return areaRingSum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "areaStream", function() { return areaStream; });
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./noop */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");




var areaRingSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])();
var areaSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    lambda00,
    phi00,
    lambda0,
    cosPhi0,
    sinPhi0;
var areaStream = {
  point: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineEnd: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonStart: function polygonStart() {
    areaRingSum.reset();
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function polygonEnd() {
    var areaRing = +areaRingSum;
    areaSum.add(areaRing < 0 ? _math__WEBPACK_IMPORTED_MODULE_1__["tau"] + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = _noop__WEBPACK_IMPORTED_MODULE_2__["default"];
  },
  sphere: function sphere() {
    areaSum.add(_math__WEBPACK_IMPORTED_MODULE_1__["tau"]);
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaRingEnd() {
  areaPoint(lambda00, phi00);
}

function areaPointFirst(lambda, phi) {
  areaStream.point = areaPoint;
  lambda00 = lambda, phi00 = phi;
  lambda *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"];
  lambda0 = lambda, cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi = phi / 2 + _math__WEBPACK_IMPORTED_MODULE_1__["quarterPi"]), sinPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi);
}

function areaPoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"];
  phi = phi / 2 + _math__WEBPACK_IMPORTED_MODULE_1__["quarterPi"]; // half the angular distance from south pole
  // Spherical excess E for a spherical triangle with vertices: south pole,
  // previous point, current point.  Uses a formula derived from Cagnoli’s
  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).

  var dLambda = lambda - lambda0,
      sdLambda = dLambda >= 0 ? 1 : -1,
      adLambda = sdLambda * dLambda,
      cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      sinPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
      k = sinPhi0 * sinPhi,
      u = cosPhi0 * cosPhi + k * Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(adLambda),
      v = k * sdLambda * Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(adLambda);
  areaRingSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(v, u)); // Advance the previous points.

  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}

/* harmony default export */ __webpack_exports__["default"] = (function (object) {
  areaSum.reset();
  Object(_stream__WEBPACK_IMPORTED_MODULE_3__["default"])(object, areaStream);
  return areaSum * 2;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/bounds.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/bounds.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area */ "./node_modules/d3-geo/src/area.js");
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");





var lambda0,
    phi0,
    lambda1,
    phi1,
    // bounds
lambda2,
    // previous lambda-coordinate
lambda00,
    phi00,
    // first point
p0,
    // previous 3D point
deltaSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    ranges,
    range;
var boundsStream = {
  point: boundsPoint,
  lineStart: boundsLineStart,
  lineEnd: boundsLineEnd,
  polygonStart: function polygonStart() {
    boundsStream.point = boundsRingPoint;
    boundsStream.lineStart = boundsRingStart;
    boundsStream.lineEnd = boundsRingEnd;
    deltaSum.reset();
    _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].polygonStart();
  },
  polygonEnd: function polygonEnd() {
    _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].polygonEnd();
    boundsStream.point = boundsPoint;
    boundsStream.lineStart = boundsLineStart;
    boundsStream.lineEnd = boundsLineEnd;
    if (_area__WEBPACK_IMPORTED_MODULE_1__["areaRingSum"] < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > _math__WEBPACK_IMPORTED_MODULE_3__["epsilon"]) phi1 = 90;else if (deltaSum < -_math__WEBPACK_IMPORTED_MODULE_3__["epsilon"]) phi0 = -90;
    range[0] = lambda0, range[1] = lambda1;
  }
};

function boundsPoint(lambda, phi) {
  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
}

function linePoint(lambda, phi) {
  var p = Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["cartesian"])([lambda * _math__WEBPACK_IMPORTED_MODULE_3__["radians"], phi * _math__WEBPACK_IMPORTED_MODULE_3__["radians"]]);

  if (p0) {
    var normal = Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["cartesianCross"])(p0, p),
        equatorial = [normal[1], -normal[0], 0],
        inflection = Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["cartesianCross"])(equatorial, normal);
    Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["cartesianNormalizeInPlace"])(inflection);
    inflection = Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["spherical"])(inflection);
    var delta = lambda - lambda2,
        sign = delta > 0 ? 1 : -1,
        lambdai = inflection[0] * _math__WEBPACK_IMPORTED_MODULE_3__["degrees"] * sign,
        phii,
        antimeridian = Object(_math__WEBPACK_IMPORTED_MODULE_3__["abs"])(delta) > 180;

    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = inflection[1] * _math__WEBPACK_IMPORTED_MODULE_3__["degrees"];
      if (phii > phi1) phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = -inflection[1] * _math__WEBPACK_IMPORTED_MODULE_3__["degrees"];
      if (phii < phi0) phi0 = phii;
    } else {
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }

    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
      }
    } else {
      if (lambda1 >= lambda0) {
        if (lambda < lambda0) lambda0 = lambda;
        if (lambda > lambda1) lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
        }
      }
    }
  } else {
    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  }

  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
  p0 = p, lambda2 = lambda;
}

function boundsLineStart() {
  boundsStream.point = linePoint;
}

function boundsLineEnd() {
  range[0] = lambda0, range[1] = lambda1;
  boundsStream.point = boundsPoint;
  p0 = null;
}

function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_3__["abs"])(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    lambda00 = lambda, phi00 = phi;
  }

  _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].point(lambda, phi);
  linePoint(lambda, phi);
}

function boundsRingStart() {
  _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].lineStart();
}

function boundsRingEnd() {
  boundsRingPoint(lambda00, phi00);
  _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].lineEnd();
  if (Object(_math__WEBPACK_IMPORTED_MODULE_3__["abs"])(deltaSum) > _math__WEBPACK_IMPORTED_MODULE_3__["epsilon"]) lambda0 = -(lambda1 = 180);
  range[0] = lambda0, range[1] = lambda1;
  p0 = null;
} // Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.


function angle(lambda0, lambda1) {
  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
}

function rangeCompare(a, b) {
  return a[0] - b[0];
}

function rangeContains(range, x) {
  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
}

/* harmony default export */ __webpack_exports__["default"] = (function (feature) {
  var i, n, a, b, merged, deltaMax, delta;
  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);
  ranges = [];
  Object(_stream__WEBPACK_IMPORTED_MODULE_4__["default"])(feature, boundsStream); // First, sort ranges by their minimum longitudes.

  if (n = ranges.length) {
    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.

    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
      b = ranges[i];

      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
      } else {
        merged.push(a = b);
      }
    } // Finally, find the largest gap between the merged ranges.
    // The final bounding box will be the inverse of this gap.


    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
      b = merged[i];
      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];
    }
  }

  ranges = range = null;
  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];
});

/***/ }),

/***/ "./node_modules/d3-geo/src/cartesian.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/cartesian.js ***!
  \**********************************************/
/*! exports provided: spherical, cartesian, cartesianDot, cartesianCross, cartesianAddInPlace, cartesianScale, cartesianNormalizeInPlace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spherical", function() { return spherical; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesian", function() { return cartesian; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianDot", function() { return cartesianDot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianCross", function() { return cartesianCross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianAddInPlace", function() { return cartesianAddInPlace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianScale", function() { return cartesianScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianNormalizeInPlace", function() { return cartesianNormalizeInPlace; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");

function spherical(cartesian) {
  return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(cartesian[1], cartesian[0]), Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(cartesian[2])];
}
function cartesian(spherical) {
  var lambda = spherical[0],
      phi = spherical[1],
      cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi);
  return [cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda), cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda), Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi)];
}
function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}
function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
} // TODO return a

function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}
function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
} // TODO return d

function cartesianNormalizeInPlace(d) {
  var l = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}

/***/ }),

/***/ "./node_modules/d3-geo/src/centroid.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/centroid.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./noop */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");



var W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point
x0, y0, z0; // previous point

var centroidStream = {
  sphere: _noop__WEBPACK_IMPORTED_MODULE_1__["default"],
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function polygonStart() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function polygonEnd() {
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  }
}; // Arithmetic mean of Cartesian vectors.

function centroidPoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi);
  centroidPointCartesian(cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda), cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda), Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi));
}

function centroidPointCartesian(x, y, z) {
  ++W0;
  X0 += (x - X0) / W0;
  Y0 += (y - Y0) / W0;
  Z0 += (z - Z0) / W0;
}

function centroidLineStart() {
  centroidStream.point = centroidLinePointFirst;
}

function centroidLinePointFirst(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi);
  x0 = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda);
  y0 = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda);
  z0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi);
  centroidStream.point = centroidLinePoint;
  centroidPointCartesian(x0, y0, z0);
}

function centroidLinePoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi),
      x = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda),
      y = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda),
      z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi),
      w = Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).


function centroidRingStart() {
  centroidStream.point = centroidRingPointFirst;
}

function centroidRingEnd() {
  centroidRingPoint(lambda00, phi00);
  centroidStream.point = centroidPoint;
}

function centroidRingPointFirst(lambda, phi) {
  lambda00 = lambda, phi00 = phi;
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  centroidStream.point = centroidRingPoint;
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi);
  x0 = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda);
  y0 = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda);
  z0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi);
  centroidPointCartesian(x0, y0, z0);
}

function centroidRingPoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi),
      x = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda),
      y = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda),
      z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi),
      cx = y0 * z - z0 * y,
      cy = z0 * x - x0 * z,
      cz = x0 * y - y0 * x,
      m = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(cx * cx + cy * cy + cz * cz),
      w = Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(m),
      // line weight = angle
  v = m && -w / m; // area weight multiplier

  X2 += v * cx;
  Y2 += v * cy;
  Z2 += v * cz;
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

/* harmony default export */ __webpack_exports__["default"] = (function (object) {
  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
  Object(_stream__WEBPACK_IMPORTED_MODULE_2__["default"])(object, centroidStream);
  var x = X2,
      y = Y2,
      z = Z2,
      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.

  if (m < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon2"]) {
    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.

    if (W1 < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) x = X0, y = Y0, z = Z0;
    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.

    if (m < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon2"]) return [NaN, NaN];
  }

  return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(y, x) * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"], Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(z / Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(m)) * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"]];
});

/***/ }),

/***/ "./node_modules/d3-geo/src/circle.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/circle.js ***!
  \*******************************************/
/*! exports provided: circleStream, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleStream", function() { return circleStream; });
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-geo/src/constant.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rotation */ "./node_modules/d3-geo/src/rotation.js");



 // Generates a circle centered at [0°, 0°], with a given radius and precision.

function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(radius),
      sinRadius = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(radius),
      step = direction * delta;

  if (t0 == null) {
    t0 = radius + direction * _math__WEBPACK_IMPORTED_MODULE_2__["tau"];
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * _math__WEBPACK_IMPORTED_MODULE_2__["tau"];
  }

  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["spherical"])([cosRadius, -sinRadius * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(t), -sinRadius * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(t)]);
    stream.point(point[0], point[1]);
  }
} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].

function circleRadius(cosRadius, point) {
  point = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesian"])(point), point[0] -= cosRadius;
  Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianNormalizeInPlace"])(point);
  var radius = Object(_math__WEBPACK_IMPORTED_MODULE_2__["acos"])(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + _math__WEBPACK_IMPORTED_MODULE_2__["tau"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) % _math__WEBPACK_IMPORTED_MODULE_2__["tau"];
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var center = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])([0, 0]),
      radius = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(90),
      precision = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(6),
      ring,
      rotate,
      stream = {
    point: point
  };

  function point(x, y) {
    ring.push(x = rotate(x, y));
    x[0] *= _math__WEBPACK_IMPORTED_MODULE_2__["degrees"], x[1] *= _math__WEBPACK_IMPORTED_MODULE_2__["degrees"];
  }

  function circle() {
    var c = center.apply(this, arguments),
        r = radius.apply(this, arguments) * _math__WEBPACK_IMPORTED_MODULE_2__["radians"],
        p = precision.apply(this, arguments) * _math__WEBPACK_IMPORTED_MODULE_2__["radians"];
    ring = [];
    rotate = Object(_rotation__WEBPACK_IMPORTED_MODULE_3__["rotateRadians"])(-c[0] * _math__WEBPACK_IMPORTED_MODULE_2__["radians"], -c[1] * _math__WEBPACK_IMPORTED_MODULE_2__["radians"], 0).invert;
    circleStream(stream, r, p, 1);
    c = {
      type: "Polygon",
      coordinates: [ring]
    };
    ring = rotate = null;
    return c;
  }

  circle.center = function (_) {
    return arguments.length ? (center = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])([+_[0], +_[1]]), circle) : center;
  };

  circle.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), circle) : radius;
  };

  circle.precision = function (_) {
    return arguments.length ? (precision = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), circle) : precision;
  };

  return circle;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/antimeridian.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/antimeridian.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/clip/index.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(_index__WEBPACK_IMPORTED_MODULE_0__["default"])(function () {
  return true;
}, clipAntimeridianLine, clipAntimeridianInterpolate, [-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], -_math__WEBPACK_IMPORTED_MODULE_1__["halfPi"]])); // Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.

function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      _clean; // no intersections


  return {
    lineStart: function lineStart() {
      stream.lineStart();
      _clean = 1;
    },
    point: function point(lambda1, phi1) {
      var sign1 = lambda1 > 0 ? _math__WEBPACK_IMPORTED_MODULE_1__["pi"] : -_math__WEBPACK_IMPORTED_MODULE_1__["pi"],
          delta = Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda1 - lambda0);

      if (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta - _math__WEBPACK_IMPORTED_MODULE_1__["pi"]) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) {
        // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? _math__WEBPACK_IMPORTED_MODULE_1__["halfPi"] : -_math__WEBPACK_IMPORTED_MODULE_1__["halfPi"]);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        _clean = 0;
      } else if (sign0 !== sign1 && delta >= _math__WEBPACK_IMPORTED_MODULE_1__["pi"]) {
        // line crosses antimeridian
        if (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda0 - sign0) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) lambda0 -= sign0 * _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]; // handle degeneracies

        if (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda1 - sign1) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) lambda1 -= sign1 * _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"];
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        _clean = 0;
      }

      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function lineEnd() {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function clean() {
      return 2 - _clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda0 - lambda1);
  return Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(sinLambda0Lambda1) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan"])((Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi0) * (cosPhi1 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi1)) * Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda1) - Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi1) * (cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi0)) * Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;

  if (from == null) {
    phi = direction * _math__WEBPACK_IMPORTED_MODULE_1__["halfPi"];
    stream.point(-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], phi);
    stream.point(0, phi);
    stream.point(_math__WEBPACK_IMPORTED_MODULE_1__["pi"], phi);
    stream.point(_math__WEBPACK_IMPORTED_MODULE_1__["pi"], 0);
    stream.point(_math__WEBPACK_IMPORTED_MODULE_1__["pi"], -phi);
    stream.point(0, -phi);
    stream.point(-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], -phi);
    stream.point(-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], 0);
    stream.point(-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], phi);
  } else if (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(from[0] - to[0]) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) {
    var lambda = from[0] < to[0] ? _math__WEBPACK_IMPORTED_MODULE_1__["pi"] : -_math__WEBPACK_IMPORTED_MODULE_1__["pi"];
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/buffer.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/buffer.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var lines = [],
      line;
  return {
    point: function point(x, y) {
      line.push([x, y]);
    },
    lineStart: function lineStart() {
      lines.push(line = []);
    },
    lineEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
    rejoin: function rejoin() {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function result() {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
});

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/circle.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/circle.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../circle */ "./node_modules/d3-geo/src/circle.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _pointEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pointEqual */ "./node_modules/d3-geo/src/pointEqual.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/clip/index.js");





/* harmony default export */ __webpack_exports__["default"] = (function (radius) {
  var cr = Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(radius),
      delta = 6 * _math__WEBPACK_IMPORTED_MODULE_2__["radians"],
      smallRadius = cr > 0,
      notHemisphere = Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(cr) > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]; // TODO optimise for this common case

  function interpolate(from, to, direction, stream) {
    Object(_circle__WEBPACK_IMPORTED_MODULE_1__["circleStream"])(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(lambda) * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi) > cr;
  } // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.


  function clipLine(stream) {
    var point0, // previous point
    c0, // code for previous point
    v0, // visibility of previous point
    v00, // visibility of first point
    _clean; // no intersections


    return {
      lineStart: function lineStart() {
        v00 = v0 = false;
        _clean = 1;
      },
      point: function point(lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? _math__WEBPACK_IMPORTED_MODULE_2__["pi"] : -_math__WEBPACK_IMPORTED_MODULE_2__["pi"]), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.
        // TODO ignore if not clipping polygons.

        if (v !== v0) {
          point2 = intersect(point0, point1);

          if (!point2 || Object(_pointEqual__WEBPACK_IMPORTED_MODULE_3__["default"])(point0, point2) || Object(_pointEqual__WEBPACK_IMPORTED_MODULE_3__["default"])(point1, point2)) {
            point1[0] += _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];
            point1[1] += _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];
            v = visible(point1[0], point1[1]);
          }
        }

        if (v !== v0) {
          _clean = 0;

          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1]);
            stream.lineEnd();
          }

          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t; // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.

          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            _clean = 0;

            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
            }
          }
        }

        if (v && (!point0 || !Object(_pointEqual__WEBPACK_IMPORTED_MODULE_3__["default"])(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }

        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function lineEnd() {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function clean() {
        return _clean | (v00 && v0) << 1;
      }
    };
  } // Intersects the great circle between a and b with the clip circle.


  function intersect(a, b, two) {
    var pa = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesian"])(a),
        pb = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesian"])(b); // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).

    var n1 = [1, 0, 0],
        // normal
    n2 = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianCross"])(pa, pb),
        n2n2 = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(n2, n2),
        n1n2 = n2[0],
        // cartesianDot(n1, n2),
    determinant = n2n2 - n1n2 * n1n2; // Two polar points.

    if (!determinant) return !two && a;
    var c1 = cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianCross"])(n1, n2),
        A = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(n1, c1),
        B = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(n2, c2);
    Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianAddInPlace"])(A, B); // Solve |p(t)|^2 = 1.

    var u = n1xn2,
        w = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(A, u),
        uu = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(u, u),
        t2 = w * w - uu * (Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(A, A) - 1);
    if (t2 < 0) return;
    var t = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(t2),
        q = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(u, (-w - t) / uu);
    Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianAddInPlace"])(q, A);
    q = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["spherical"])(q);
    if (!two) return q; // Two intersection points.

    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;
    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;
    var delta = lambda1 - lambda0,
        polar = Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(delta - _math__WEBPACK_IMPORTED_MODULE_2__["pi"]) < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"],
        meridian = polar || delta < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];
    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.

    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(q[0] - lambda0) < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > _math__WEBPACK_IMPORTED_MODULE_2__["pi"] ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(u, (-w + t) / uu);
      Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianAddInPlace"])(q1, A);
      return [q, Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["spherical"])(q1)];
    }
  } // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.


  function code(lambda, phi) {
    var r = smallRadius ? radius : _math__WEBPACK_IMPORTED_MODULE_2__["pi"] - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right

    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above

    return code;
  }

  return Object(_index__WEBPACK_IMPORTED_MODULE_4__["default"])(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-_math__WEBPACK_IMPORTED_MODULE_2__["pi"], radius - _math__WEBPACK_IMPORTED_MODULE_2__["pi"]]);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/extent.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/extent.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _rectangle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rectangle */ "./node_modules/d3-geo/src/clip/rectangle.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var x0 = 0,
      y0 = 0,
      x1 = 960,
      y1 = 500,
      cache,
      cacheStream,
      clip;
  return clip = {
    stream: function stream(_stream) {
      return cache && cacheStream === _stream ? cache : cache = Object(_rectangle__WEBPACK_IMPORTED_MODULE_0__["default"])(x0, y0, x1, y1)(cacheStream = _stream);
    },
    extent: function extent(_) {
      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
    }
  };
});

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/clip/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer */ "./node_modules/d3-geo/src/clip/buffer.js");
/* harmony import */ var _rejoin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rejoin */ "./node_modules/d3-geo/src/clip/rejoin.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _polygonContains__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../polygonContains */ "./node_modules/d3-geo/src/polygonContains.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");





/* harmony default export */ __webpack_exports__["default"] = (function (pointVisible, clipLine, interpolate, start) {
  return function (sink) {
    var line = clipLine(sink),
        ringBuffer = Object(_buffer__WEBPACK_IMPORTED_MODULE_0__["default"])(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;
    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function polygonStart() {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function polygonEnd() {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = Object(d3_array__WEBPACK_IMPORTED_MODULE_4__["merge"])(segments);
        var startInside = Object(_polygonContains__WEBPACK_IMPORTED_MODULE_3__["default"])(polygon, start);

        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          Object(_rejoin__WEBPACK_IMPORTED_MODULE_1__["default"])(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }

        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function sphere() {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();
      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i,
          n = ringSegments.length,
          m,
          segment,
          point;
      ring.pop();
      polygon.push(ring);
      ring = null;
      if (!n) return; // No intersections.

      if (clean & 1) {
        segment = ringSegments[0];

        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();

          for (i = 0; i < m; ++i) {
            sink.point((point = segment[i])[0], point[1]);
          }

          sink.lineEnd();
        }

        return;
      } // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?


      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
});

function validSegment(segment) {
  return segment.length > 1;
} // Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.


function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] : _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - a[1]) - ((b = b.x)[0] < 0 ? b[1] - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] : _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - b[1]);
}

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/line.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/clip/line.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/rectangle.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/rectangle.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return clipRectangle; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer */ "./node_modules/d3-geo/src/clip/buffer.js");
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./line */ "./node_modules/d3-geo/src/clip/line.js");
/* harmony import */ var _rejoin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rejoin */ "./node_modules/d3-geo/src/clip/rejoin.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");





var clipMax = 1e9,
    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {
  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0,
        a1 = 0;

    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {
      do {
        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
      } while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(p[0] - x0) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"] ? direction > 0 ? 0 : 3 : Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(p[0] - x1) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"] ? direction > 0 ? 2 : 1 : Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(p[1] - y0) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"] ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
  }

  return function (stream) {
    var activeStream = stream,
        bufferStream = Object(_buffer__WEBPACK_IMPORTED_MODULE_1__["default"])(),
        segments,
        polygon,
        ring,
        x__,
        y__,
        v__,
        // first point
    x_,
        y_,
        v_,
        // previous point
    first,
        clean;
    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];

          if (a1 <= y1) {
            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;
          } else {
            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;
          }
        }
      }

      return winding;
    } // Buffer geometry within a polygon and then clip it en masse.


    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = Object(d3_array__WEBPACK_IMPORTED_MODULE_4__["merge"])(segments)).length;

      if (cleanInside || visible) {
        stream.polygonStart();

        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }

        if (visible) {
          Object(_rejoin__WEBPACK_IMPORTED_MODULE_3__["default"])(segments, compareIntersection, startInside, interpolate, stream);
        }

        stream.polygonEnd();
      }

      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    } // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.


    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }

      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);

      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;

        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];

          if (Object(_line__WEBPACK_IMPORTED_MODULE_2__["default"])(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }

            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }

      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/rejoin.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/rejoin.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _pointEqual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pointEqual */ "./node_modules/d3-geo/src/pointEqual.js");


function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection

  this.e = entry; // is an entry?

  this.v = false; // visited

  this.n = this.p = null; // next & previous
} // A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.


/* harmony default export */ __webpack_exports__["default"] = (function (segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;
  segments.forEach(function (segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n,
        p0 = segment[0],
        p1 = segment[n],
        x; // If the first and last points of a segment are coincident, then treat as a
    // closed ring. TODO if all rings are closed, then the winding order of the
    // exterior ring should be checked.

    if (Object(_pointEqual__WEBPACK_IMPORTED_MODULE_0__["default"])(p0, p1)) {
      stream.lineStart();

      for (i = 0; i < n; ++i) {
        stream.point((p0 = segment[i])[0], p0[1]);
      }

      stream.lineEnd();
      return;
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });
  if (!subject.length) return;
  clip.sort(compareIntersection);
  link(subject);
  link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;

    while (current.v) {
      if ((current = current.n) === start) return;
    }

    points = current.z;
    stream.lineStart();

    do {
      current.v = current.o.v = true;

      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) {
            stream.point((point = points[i])[0], point[1]);
          }
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }

        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;

          for (i = points.length - 1; i >= 0; --i) {
            stream.point((point = points[i])[0], point[1]);
          }
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }

        current = current.p;
      }

      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);

    stream.lineEnd();
  }
});

function link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;

  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }

  a.n = b = array[0];
  b.p = a;
}

/***/ }),

/***/ "./node_modules/d3-geo/src/compose.js":
/*!********************************************!*\
  !*** ./node_modules/d3-geo/src/compose.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function (x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };
  return compose;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/constant.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/constant.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-geo/src/contains.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/contains.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _polygonContains__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polygonContains */ "./node_modules/d3-geo/src/polygonContains.js");
/* harmony import */ var _distance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./distance */ "./node_modules/d3-geo/src/distance.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");



var containsObjectType = {
  Feature: function Feature(object, point) {
    return containsGeometry(object.geometry, point);
  },
  FeatureCollection: function FeatureCollection(object, point) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) {
      if (containsGeometry(features[i].geometry, point)) return true;
    }

    return false;
  }
};
var containsGeometryType = {
  Sphere: function Sphere() {
    return true;
  },
  Point: function Point(object, point) {
    return containsPoint(object.coordinates, point);
  },
  MultiPoint: function MultiPoint(object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) {
      if (containsPoint(coordinates[i], point)) return true;
    }

    return false;
  },
  LineString: function LineString(object, point) {
    return containsLine(object.coordinates, point);
  },
  MultiLineString: function MultiLineString(object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) {
      if (containsLine(coordinates[i], point)) return true;
    }

    return false;
  },
  Polygon: function Polygon(object, point) {
    return containsPolygon(object.coordinates, point);
  },
  MultiPolygon: function MultiPolygon(object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) {
      if (containsPolygon(coordinates[i], point)) return true;
    }

    return false;
  },
  GeometryCollection: function GeometryCollection(object, point) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) {
      if (containsGeometry(geometries[i], point)) return true;
    }

    return false;
  }
};

function containsGeometry(geometry, point) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;
}

function containsPoint(coordinates, point) {
  return Object(_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates, point) === 0;
}

function containsLine(coordinates, point) {
  var ab = Object(_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[0], coordinates[1]),
      ao = Object(_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[0], point),
      ob = Object(_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(point, coordinates[1]);
  return ao + ob <= ab + _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];
}

function containsPolygon(coordinates, point) {
  return !!Object(_polygonContains__WEBPACK_IMPORTED_MODULE_0__["default"])(coordinates.map(ringRadians), pointRadians(point));
}

function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}

function pointRadians(point) {
  return [point[0] * _math__WEBPACK_IMPORTED_MODULE_2__["radians"], point[1] * _math__WEBPACK_IMPORTED_MODULE_2__["radians"]];
}

/* harmony default export */ __webpack_exports__["default"] = (function (object, point) {
  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/distance.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/distance.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _length__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./length */ "./node_modules/d3-geo/src/length.js");

var coordinates = [null, null],
    object = {
  type: "LineString",
  coordinates: coordinates
};
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  coordinates[0] = a;
  coordinates[1] = b;
  return Object(_length__WEBPACK_IMPORTED_MODULE_0__["default"])(object);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/graticule.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/graticule.js ***!
  \**********************************************/
/*! exports provided: default, graticule10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return graticule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "graticule10", function() { return graticule10; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");



function graticuleX(y0, y1, dy) {
  var y = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(y0, y1 - _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"], dy).concat(y1);
  return function (x) {
    return y.map(function (y) {
      return [x, y];
    });
  };
}

function graticuleY(x0, x1, dx) {
  var x = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(x0, x1 - _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"], dx).concat(x1);
  return function (y) {
    return x.map(function (x) {
      return [x, y];
    });
  };
}

function graticule() {
  var x1,
      x0,
      X1,
      X0,
      y1,
      y0,
      Y1,
      Y0,
      dx = 10,
      dy = dx,
      DX = 90,
      DY = 360,
      x,
      y,
      X,
      Y,
      precision = 2.5;

  function graticule() {
    return {
      type: "MultiLineString",
      coordinates: lines()
    };
  }

  function lines() {
    return Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["ceil"])(X0 / DX) * DX, X1, DX).map(X).concat(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["ceil"])(Y0 / DY) * DY, Y1, DY).map(Y)).concat(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["ceil"])(x0 / dx) * dx, x1, dx).filter(function (x) {
      return Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(x % DX) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"];
    }).map(x)).concat(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["ceil"])(y0 / dy) * dy, y1, dy).filter(function (y) {
      return Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(y % DY) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"];
    }).map(y));
  }

  graticule.lines = function () {
    return lines().map(function (coordinates) {
      return {
        type: "LineString",
        coordinates: coordinates
      };
    });
  };

  graticule.outline = function () {
    return {
      type: "Polygon",
      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]
    };
  };

  graticule.extent = function (_) {
    if (!arguments.length) return graticule.extentMinor();
    return graticule.extentMajor(_).extentMinor(_);
  };

  graticule.extentMajor = function (_) {
    if (!arguments.length) return [[X0, Y0], [X1, Y1]];
    X0 = +_[0][0], X1 = +_[1][0];
    Y0 = +_[0][1], Y1 = +_[1][1];
    if (X0 > X1) _ = X0, X0 = X1, X1 = _;
    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
    return graticule.precision(precision);
  };

  graticule.extentMinor = function (_) {
    if (!arguments.length) return [[x0, y0], [x1, y1]];
    x0 = +_[0][0], x1 = +_[1][0];
    y0 = +_[0][1], y1 = +_[1][1];
    if (x0 > x1) _ = x0, x0 = x1, x1 = _;
    if (y0 > y1) _ = y0, y0 = y1, y1 = _;
    return graticule.precision(precision);
  };

  graticule.step = function (_) {
    if (!arguments.length) return graticule.stepMinor();
    return graticule.stepMajor(_).stepMinor(_);
  };

  graticule.stepMajor = function (_) {
    if (!arguments.length) return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule;
  };

  graticule.stepMinor = function (_) {
    if (!arguments.length) return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule;
  };

  graticule.precision = function (_) {
    if (!arguments.length) return precision;
    precision = +_;
    x = graticuleX(y0, y1, 90);
    y = graticuleY(x0, x1, precision);
    X = graticuleX(Y0, Y1, 90);
    Y = graticuleY(X0, X1, precision);
    return graticule;
  };

  return graticule.extentMajor([[-180, -90 + _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]], [180, 90 - _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]]]).extentMinor([[-180, -80 - _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]], [180, 80 + _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]]]);
}
function graticule10() {
  return graticule()();
}

/***/ }),

/***/ "./node_modules/d3-geo/src/identity.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/identity.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return x;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/index.js":
/*!******************************************!*\
  !*** ./node_modules/d3-geo/src/index.js ***!
  \******************************************/
/*! exports provided: geoArea, geoBounds, geoCentroid, geoCircle, geoClipAntimeridian, geoClipCircle, geoClipExtent, geoClipRectangle, geoContains, geoDistance, geoGraticule, geoGraticule10, geoInterpolate, geoLength, geoPath, geoAlbers, geoAlbersUsa, geoAzimuthalEqualArea, geoAzimuthalEqualAreaRaw, geoAzimuthalEquidistant, geoAzimuthalEquidistantRaw, geoConicConformal, geoConicConformalRaw, geoConicEqualArea, geoConicEqualAreaRaw, geoConicEquidistant, geoConicEquidistantRaw, geoEqualEarth, geoEqualEarthRaw, geoEquirectangular, geoEquirectangularRaw, geoGnomonic, geoGnomonicRaw, geoIdentity, geoProjection, geoProjectionMutator, geoMercator, geoMercatorRaw, geoNaturalEarth1, geoNaturalEarth1Raw, geoOrthographic, geoOrthographicRaw, geoStereographic, geoStereographicRaw, geoTransverseMercator, geoTransverseMercatorRaw, geoRotation, geoStream, geoTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./area */ "./node_modules/d3-geo/src/area.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoArea", function() { return _area__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _bounds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bounds */ "./node_modules/d3-geo/src/bounds.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBounds", function() { return _bounds__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _centroid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./centroid */ "./node_modules/d3-geo/src/centroid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCentroid", function() { return _centroid__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _circle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./circle */ "./node_modules/d3-geo/src/circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCircle", function() { return _circle__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _clip_antimeridian__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clip/antimeridian */ "./node_modules/d3-geo/src/clip/antimeridian.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipAntimeridian", function() { return _clip_antimeridian__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _clip_circle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clip/circle */ "./node_modules/d3-geo/src/clip/circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipCircle", function() { return _clip_circle__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _clip_extent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./clip/extent */ "./node_modules/d3-geo/src/clip/extent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipExtent", function() { return _clip_extent__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _clip_rectangle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./clip/rectangle */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipRectangle", function() { return _clip_rectangle__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _contains__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contains */ "./node_modules/d3-geo/src/contains.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoContains", function() { return _contains__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _distance__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./distance */ "./node_modules/d3-geo/src/distance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoDistance", function() { return _distance__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _graticule__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./graticule */ "./node_modules/d3-geo/src/graticule.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGraticule", function() { return _graticule__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGraticule10", function() { return _graticule__WEBPACK_IMPORTED_MODULE_10__["graticule10"]; });

/* harmony import */ var _interpolate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./interpolate */ "./node_modules/d3-geo/src/interpolate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterpolate", function() { return _interpolate__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _length__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./length */ "./node_modules/d3-geo/src/length.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLength", function() { return _length__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _path_index__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./path/index */ "./node_modules/d3-geo/src/path/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPath", function() { return _path_index__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _projection_albers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./projection/albers */ "./node_modules/d3-geo/src/projection/albers.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAlbers", function() { return _projection_albers__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _projection_albersUsa__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./projection/albersUsa */ "./node_modules/d3-geo/src/projection/albersUsa.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAlbersUsa", function() { return _projection_albersUsa__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _projection_azimuthalEqualArea__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./projection/azimuthalEqualArea */ "./node_modules/d3-geo/src/projection/azimuthalEqualArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEqualArea", function() { return _projection_azimuthalEqualArea__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEqualAreaRaw", function() { return _projection_azimuthalEqualArea__WEBPACK_IMPORTED_MODULE_16__["azimuthalEqualAreaRaw"]; });

/* harmony import */ var _projection_azimuthalEquidistant__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./projection/azimuthalEquidistant */ "./node_modules/d3-geo/src/projection/azimuthalEquidistant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEquidistant", function() { return _projection_azimuthalEquidistant__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEquidistantRaw", function() { return _projection_azimuthalEquidistant__WEBPACK_IMPORTED_MODULE_17__["azimuthalEquidistantRaw"]; });

/* harmony import */ var _projection_conicConformal__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./projection/conicConformal */ "./node_modules/d3-geo/src/projection/conicConformal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicConformal", function() { return _projection_conicConformal__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicConformalRaw", function() { return _projection_conicConformal__WEBPACK_IMPORTED_MODULE_18__["conicConformalRaw"]; });

/* harmony import */ var _projection_conicEqualArea__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./projection/conicEqualArea */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEqualArea", function() { return _projection_conicEqualArea__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEqualAreaRaw", function() { return _projection_conicEqualArea__WEBPACK_IMPORTED_MODULE_19__["conicEqualAreaRaw"]; });

/* harmony import */ var _projection_conicEquidistant__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./projection/conicEquidistant */ "./node_modules/d3-geo/src/projection/conicEquidistant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEquidistant", function() { return _projection_conicEquidistant__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEquidistantRaw", function() { return _projection_conicEquidistant__WEBPACK_IMPORTED_MODULE_20__["conicEquidistantRaw"]; });

/* harmony import */ var _projection_equalEarth__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./projection/equalEarth */ "./node_modules/d3-geo/src/projection/equalEarth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEqualEarth", function() { return _projection_equalEarth__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEqualEarthRaw", function() { return _projection_equalEarth__WEBPACK_IMPORTED_MODULE_21__["equalEarthRaw"]; });

/* harmony import */ var _projection_equirectangular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./projection/equirectangular */ "./node_modules/d3-geo/src/projection/equirectangular.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEquirectangular", function() { return _projection_equirectangular__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEquirectangularRaw", function() { return _projection_equirectangular__WEBPACK_IMPORTED_MODULE_22__["equirectangularRaw"]; });

/* harmony import */ var _projection_gnomonic__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./projection/gnomonic */ "./node_modules/d3-geo/src/projection/gnomonic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGnomonic", function() { return _projection_gnomonic__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGnomonicRaw", function() { return _projection_gnomonic__WEBPACK_IMPORTED_MODULE_23__["gnomonicRaw"]; });

/* harmony import */ var _projection_identity__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./projection/identity */ "./node_modules/d3-geo/src/projection/identity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoIdentity", function() { return _projection_identity__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _projection_index__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./projection/index */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoProjection", function() { return _projection_index__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoProjectionMutator", function() { return _projection_index__WEBPACK_IMPORTED_MODULE_25__["projectionMutator"]; });

/* harmony import */ var _projection_mercator__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./projection/mercator */ "./node_modules/d3-geo/src/projection/mercator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMercator", function() { return _projection_mercator__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMercatorRaw", function() { return _projection_mercator__WEBPACK_IMPORTED_MODULE_26__["mercatorRaw"]; });

/* harmony import */ var _projection_naturalEarth1__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./projection/naturalEarth1 */ "./node_modules/d3-geo/src/projection/naturalEarth1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth1", function() { return _projection_naturalEarth1__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth1Raw", function() { return _projection_naturalEarth1__WEBPACK_IMPORTED_MODULE_27__["naturalEarth1Raw"]; });

/* harmony import */ var _projection_orthographic__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./projection/orthographic */ "./node_modules/d3-geo/src/projection/orthographic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoOrthographic", function() { return _projection_orthographic__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoOrthographicRaw", function() { return _projection_orthographic__WEBPACK_IMPORTED_MODULE_28__["orthographicRaw"]; });

/* harmony import */ var _projection_stereographic__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./projection/stereographic */ "./node_modules/d3-geo/src/projection/stereographic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStereographic", function() { return _projection_stereographic__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStereographicRaw", function() { return _projection_stereographic__WEBPACK_IMPORTED_MODULE_29__["stereographicRaw"]; });

/* harmony import */ var _projection_transverseMercator__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./projection/transverseMercator */ "./node_modules/d3-geo/src/projection/transverseMercator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransverseMercator", function() { return _projection_transverseMercator__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransverseMercatorRaw", function() { return _projection_transverseMercator__WEBPACK_IMPORTED_MODULE_30__["transverseMercatorRaw"]; });

/* harmony import */ var _rotation__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./rotation */ "./node_modules/d3-geo/src/rotation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoRotation", function() { return _rotation__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStream", function() { return _stream__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./transform */ "./node_modules/d3-geo/src/transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransform", function() { return _transform__WEBPACK_IMPORTED_MODULE_33__["default"]; });







 // DEPRECATED! Use d3.geoIdentity().clipExtent(…).





























/***/ }),

/***/ "./node_modules/d3-geo/src/interpolate.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/interpolate.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");

/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var x0 = a[0] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"],
      y0 = a[1] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"],
      x1 = b[0] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"],
      y1 = b[1] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"],
      cy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y0),
      sy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0),
      cy1 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y1),
      sy1 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y1),
      kx0 = cy0 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x0),
      ky0 = cy0 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x0),
      kx1 = cy1 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x1),
      ky1 = cy1 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x1),
      d = 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["haversin"])(y1 - y0) + cy0 * cy1 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["haversin"])(x1 - x0))),
      k = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(d);
  var interpolate = d ? function (t) {
    var B = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(t *= d) / k,
        A = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(d - t) / k,
        x = A * kx0 + B * kx1,
        y = A * ky0 + B * ky1,
        z = A * sy0 + B * sy1;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(y, x) * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"], Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(z, Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + y * y)) * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"]];
  } : function () {
    return [x0 * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"], y0 * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"]];
  };
  interpolate.distance = d;
  return interpolate;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/length.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/length.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./noop */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");




var lengthSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    lambda0,
    sinPhi0,
    cosPhi0;
var lengthStream = {
  sphere: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  point: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: lengthLineStart,
  lineEnd: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonStart: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonEnd: _noop__WEBPACK_IMPORTED_MODULE_2__["default"]
};

function lengthLineStart() {
  lengthStream.point = lengthPointFirst;
  lengthStream.lineEnd = lengthLineEnd;
}

function lengthLineEnd() {
  lengthStream.point = lengthStream.lineEnd = _noop__WEBPACK_IMPORTED_MODULE_2__["default"];
}

function lengthPointFirst(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"];
  lambda0 = lambda, sinPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi), cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi);
  lengthStream.point = lengthPoint;
}

function lengthPoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"];
  var sinPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
      cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      delta = Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda - lambda0),
      cosDelta = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(delta),
      sinDelta = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(delta),
      x = cosPhi * sinDelta,
      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,
      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
  lengthSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x * x + y * y), z));
  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}

/* harmony default export */ __webpack_exports__["default"] = (function (object) {
  lengthSum.reset();
  Object(_stream__WEBPACK_IMPORTED_MODULE_3__["default"])(object, lengthStream);
  return +lengthSum;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/math.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/math.js ***!
  \*****************************************/
/*! exports provided: epsilon, epsilon2, pi, halfPi, quarterPi, tau, degrees, radians, abs, atan, atan2, cos, ceil, exp, floor, log, pow, sin, sign, sqrt, tan, acos, asin, haversin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon", function() { return epsilon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon2", function() { return epsilon2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return pi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "halfPi", function() { return halfPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quarterPi", function() { return quarterPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return tau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "degrees", function() { return degrees; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "radians", function() { return radians; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "abs", function() { return abs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan", function() { return atan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan2", function() { return atan2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return cos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exp", function() { return exp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pow", function() { return pow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return sin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sign", function() { return sign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return sqrt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tan", function() { return tan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acos", function() { return acos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asin", function() { return asin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "haversin", function() { return haversin; });
var epsilon = 1e-6;
var epsilon2 = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var quarterPi = pi / 4;
var tau = pi * 2;
var degrees = 180 / pi;
var radians = pi / 180;
var abs = Math.abs;
var atan = Math.atan;
var atan2 = Math.atan2;
var cos = Math.cos;
var ceil = Math.ceil;
var exp = Math.exp;
var floor = Math.floor;
var log = Math.log;
var pow = Math.pow;
var sin = Math.sin;
var sign = Math.sign || function (x) {
  return x > 0 ? 1 : x < 0 ? -1 : 0;
};
var sqrt = Math.sqrt;
var tan = Math.tan;
function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}
function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}
function haversin(x) {
  return (x = sin(x / 2)) * x;
}

/***/ }),

/***/ "./node_modules/d3-geo/src/noop.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/noop.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return noop; });
function noop() {}

/***/ }),

/***/ "./node_modules/d3-geo/src/path/area.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/path/area.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");



var areaSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    areaRingSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    x00,
    y00,
    x0,
    y0;
var areaStream = {
  point: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineEnd: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonStart: function polygonStart() {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function polygonEnd() {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = _noop__WEBPACK_IMPORTED_MODULE_2__["default"];
    areaSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(areaRingSum));
    areaRingSum.reset();
  },
  result: function result() {
    var area = areaSum / 2;
    areaSum.reset();
    return area;
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaPointFirst(x, y) {
  areaStream.point = areaPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function areaPoint(x, y) {
  areaRingSum.add(y0 * x - x0 * y);
  x0 = x, y0 = y;
}

function areaRingEnd() {
  areaPoint(x00, y00);
}

/* harmony default export */ __webpack_exports__["default"] = (areaStream);

/***/ }),

/***/ "./node_modules/d3-geo/src/path/bounds.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/path/bounds.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");

var x0 = Infinity,
    y0 = x0,
    x1 = -x0,
    y1 = x1;
var boundsStream = {
  point: boundsPoint,
  lineStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  lineEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  polygonStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  polygonEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  result: function result() {
    var bounds = [[x0, y0], [x1, y1]];
    x1 = y1 = -(y0 = x0 = Infinity);
    return bounds;
  }
};

function boundsPoint(x, y) {
  if (x < x0) x0 = x;
  if (x > x1) x1 = x;
  if (y < y0) y0 = y;
  if (y > y1) y1 = y;
}

/* harmony default export */ __webpack_exports__["default"] = (boundsStream);

/***/ }),

/***/ "./node_modules/d3-geo/src/path/centroid.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-geo/src/path/centroid.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
 // TODO Enforce positive area for exterior, negative area for interior?

var X0 = 0,
    Y0 = 0,
    Z0 = 0,
    X1 = 0,
    Y1 = 0,
    Z1 = 0,
    X2 = 0,
    Y2 = 0,
    Z2 = 0,
    x00,
    y00,
    x0,
    y0;
var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function polygonStart() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function polygonEnd() {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function result() {
    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];
    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
    return centroid;
  }
};

function centroidPoint(x, y) {
  X0 += x;
  Y0 += y;
  ++Z0;
}

function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}

function centroidPointFirstLine(x, y) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0 = x, y0 = y);
}

function centroidPointLine(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  centroidPoint(x0 = x, y0 = y);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}

function centroidRingEnd() {
  centroidPointRing(x00, y00);
}

function centroidPointFirstRing(x, y) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00 = x0 = x, y00 = y0 = y);
}

function centroidPointRing(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  z = y0 * x - x0 * y;
  X2 += z * (x0 + x);
  Y2 += z * (y0 + y);
  Z2 += z * 3;
  centroidPoint(x0 = x, y0 = y);
}

/* harmony default export */ __webpack_exports__["default"] = (centroidStream);

/***/ }),

/***/ "./node_modules/d3-geo/src/path/context.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-geo/src/path/context.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PathContext; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");


function PathContext(context) {
  this._context = context;
}
PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function pointRadius(_) {
    return this._radius = _, this;
  },
  polygonStart: function polygonStart() {
    this._line = 0;
  },
  polygonEnd: function polygonEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._line === 0) this._context.closePath();
    this._point = NaN;
  },
  point: function point(x, y) {
    switch (this._point) {
      case 0:
        {
          this._context.moveTo(x, y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._context.lineTo(x, y);

          break;
        }

      default:
        {
          this._context.moveTo(x + this._radius, y);

          this._context.arc(x, y, this._radius, 0, _math__WEBPACK_IMPORTED_MODULE_0__["tau"]);

          break;
        }
    }
  },
  result: _noop__WEBPACK_IMPORTED_MODULE_1__["default"]
};

/***/ }),

/***/ "./node_modules/d3-geo/src/path/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/path/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../identity */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stream */ "./node_modules/d3-geo/src/stream.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./area */ "./node_modules/d3-geo/src/path/area.js");
/* harmony import */ var _bounds__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bounds */ "./node_modules/d3-geo/src/path/bounds.js");
/* harmony import */ var _centroid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./centroid */ "./node_modules/d3-geo/src/path/centroid.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./context */ "./node_modules/d3-geo/src/path/context.js");
/* harmony import */ var _measure__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./measure */ "./node_modules/d3-geo/src/path/measure.js");
/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./string */ "./node_modules/d3-geo/src/path/string.js");








/* harmony default export */ __webpack_exports__["default"] = (function (projection, context) {
  var pointRadius = 4.5,
      projectionStream,
      contextStream;

  function path(object) {
    if (object) {
      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
      Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(contextStream));
    }

    return contextStream.result();
  }

  path.area = function (object) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_area__WEBPACK_IMPORTED_MODULE_2__["default"]));
    return _area__WEBPACK_IMPORTED_MODULE_2__["default"].result();
  };

  path.measure = function (object) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_measure__WEBPACK_IMPORTED_MODULE_6__["default"]));
    return _measure__WEBPACK_IMPORTED_MODULE_6__["default"].result();
  };

  path.bounds = function (object) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_bounds__WEBPACK_IMPORTED_MODULE_3__["default"]));
    return _bounds__WEBPACK_IMPORTED_MODULE_3__["default"].result();
  };

  path.centroid = function (object) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_centroid__WEBPACK_IMPORTED_MODULE_4__["default"]));
    return _centroid__WEBPACK_IMPORTED_MODULE_4__["default"].result();
  };

  path.projection = function (_) {
    return arguments.length ? (projectionStream = _ == null ? (projection = null, _identity__WEBPACK_IMPORTED_MODULE_0__["default"]) : (projection = _).stream, path) : projection;
  };

  path.context = function (_) {
    if (!arguments.length) return context;
    contextStream = _ == null ? (context = null, new _string__WEBPACK_IMPORTED_MODULE_7__["default"]()) : new _context__WEBPACK_IMPORTED_MODULE_5__["default"](context = _);
    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
    return path;
  };

  path.pointRadius = function (_) {
    if (!arguments.length) return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };

  return path.projection(projection).context(context);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/path/measure.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-geo/src/path/measure.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");



var lengthSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    lengthRing,
    x00,
    y00,
    x0,
    y0;
var lengthStream = {
  point: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: function lineStart() {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function lineEnd() {
    if (lengthRing) lengthPoint(x00, y00);
    lengthStream.point = _noop__WEBPACK_IMPORTED_MODULE_2__["default"];
  },
  polygonStart: function polygonStart() {
    lengthRing = true;
  },
  polygonEnd: function polygonEnd() {
    lengthRing = null;
  },
  result: function result() {
    var length = +lengthSum;
    lengthSum.reset();
    return length;
  }
};

function lengthPointFirst(x, y) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function lengthPoint(x, y) {
  x0 -= x, y0 -= y;
  lengthSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x0 * x0 + y0 * y0));
  x0 = x, y0 = y;
}

/* harmony default export */ __webpack_exports__["default"] = (lengthStream);

/***/ }),

/***/ "./node_modules/d3-geo/src/path/string.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/path/string.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PathString; });
function PathString() {
  this._string = [];
}
PathString.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function pointRadius(_) {
    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function polygonStart() {
    this._line = 0;
  },
  polygonEnd: function polygonEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._line === 0) this._string.push("Z");
    this._point = NaN;
  },
  point: function point(x, y) {
    switch (this._point) {
      case 0:
        {
          this._string.push("M", x, ",", y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._string.push("L", x, ",", y);

          break;
        }

      default:
        {
          if (this._circle == null) this._circle = circle(this._radius);

          this._string.push("M", x, ",", y, this._circle);

          break;
        }
    }
  },
  result: function result() {
    if (this._string.length) {
      var result = this._string.join("");

      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};

function circle(radius) {
  return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}

/***/ }),

/***/ "./node_modules/d3-geo/src/pointEqual.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/pointEqual.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");

/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(a[0] - b[0]) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"] && Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(a[1] - b[1]) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"];
});

/***/ }),

/***/ "./node_modules/d3-geo/src/polygonContains.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-geo/src/polygonContains.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");



var sum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])();
/* harmony default export */ __webpack_exports__["default"] = (function (polygon, point) {
  var lambda = point[0],
      phi = point[1],
      sinPhi = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi),
      normal = [Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(lambda), -Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(lambda), 0],
      angle = 0,
      winding = 0;
  sum.reset();
  if (sinPhi === 1) phi = _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] + _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];else if (sinPhi === -1) phi = -_math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = point0[0],
        phi0 = point0[1] / 2 + _math__WEBPACK_IMPORTED_MODULE_2__["quarterPi"],
        sinPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi0),
        cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = point1[0],
          phi1 = point1[1] / 2 + _math__WEBPACK_IMPORTED_MODULE_2__["quarterPi"],
          sinPhi1 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi1),
          cosPhi1 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > _math__WEBPACK_IMPORTED_MODULE_2__["pi"],
          k = sinPhi0 * sinPhi1;
      sum.add(Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(k * sign * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(absDelta), cosPhi0 * cosPhi1 + k * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(absDelta)));
      angle += antimeridian ? delta + sign * _math__WEBPACK_IMPORTED_MODULE_2__["tau"] : delta; // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?

      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesianCross"])(Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesian"])(point0), Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesian"])(point1));
        Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesianNormalizeInPlace"])(arc);
        var intersection = Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesianCross"])(normal, arc);
        Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesianNormalizeInPlace"])(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * Object(_math__WEBPACK_IMPORTED_MODULE_2__["asin"])(intersection[2]);

        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  } // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.


  return (angle < -_math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] || angle < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] && sum < -_math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) ^ winding & 1;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/albers.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/albers.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _conicEqualArea__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./conicEqualArea */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_conicEqualArea__WEBPACK_IMPORTED_MODULE_0__["default"])().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/albersUsa.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/albersUsa.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _albers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./albers */ "./node_modules/d3-geo/src/projection/albers.js");
/* harmony import */ var _conicEqualArea__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./conicEqualArea */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");
/* harmony import */ var _fit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fit */ "./node_modules/d3-geo/src/projection/fit.js");



 // The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.

function multiplex(streams) {
  var n = streams.length;
  return {
    point: function point(x, y) {
      var i = -1;

      while (++i < n) {
        streams[i].point(x, y);
      }
    },
    sphere: function sphere() {
      var i = -1;

      while (++i < n) {
        streams[i].sphere();
      }
    },
    lineStart: function lineStart() {
      var i = -1;

      while (++i < n) {
        streams[i].lineStart();
      }
    },
    lineEnd: function lineEnd() {
      var i = -1;

      while (++i < n) {
        streams[i].lineEnd();
      }
    },
    polygonStart: function polygonStart() {
      var i = -1;

      while (++i < n) {
        streams[i].polygonStart();
      }
    },
    polygonEnd: function polygonEnd() {
      var i = -1;

      while (++i < n) {
        streams[i].polygonEnd();
      }
    }
  };
} // A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers


/* harmony default export */ __webpack_exports__["default"] = (function () {
  var cache,
      cacheStream,
      lower48 = Object(_albers__WEBPACK_IMPORTED_MODULE_1__["default"])(),
      lower48Point,
      alaska = Object(_conicEqualArea__WEBPACK_IMPORTED_MODULE_2__["default"])().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),
      alaskaPoint,
      // EPSG:3338
  hawaii = Object(_conicEqualArea__WEBPACK_IMPORTED_MODULE_2__["default"])().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),
      hawaiiPoint,
      // ESRI:102007
  _point,
      pointStream = {
    point: function point(x, y) {
      _point = [x, y];
    }
  };

  function albersUsa(coordinates) {
    var x = coordinates[0],
        y = coordinates[1];
    return _point = null, (lower48Point.point(x, y), _point) || (alaskaPoint.point(x, y), _point) || (hawaiiPoint.point(x, y), _point);
  }

  albersUsa.invert = function (coordinates) {
    var k = lower48.scale(),
        t = lower48.translate(),
        x = (coordinates[0] - t[0]) / k,
        y = (coordinates[1] - t[1]) / k;
    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);
  };

  albersUsa.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
  };

  albersUsa.precision = function (_) {
    if (!arguments.length) return lower48.precision();
    lower48.precision(_), alaska.precision(_), hawaii.precision(_);
    return reset();
  };

  albersUsa.scale = function (_) {
    if (!arguments.length) return lower48.scale();
    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
    return albersUsa.translate(lower48.translate());
  };

  albersUsa.translate = function (_) {
    if (!arguments.length) return lower48.translate();
    var k = lower48.scale(),
        x = +_[0],
        y = +_[1];
    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);
    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.120 * k + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]], [x - 0.214 * k - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.234 * k - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]]]).stream(pointStream);
    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.166 * k + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]], [x - 0.115 * k - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.234 * k - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]]]).stream(pointStream);
    return reset();
  };

  albersUsa.fitExtent = function (extent, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitExtent"])(albersUsa, extent, object);
  };

  albersUsa.fitSize = function (size, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitSize"])(albersUsa, size, object);
  };

  albersUsa.fitWidth = function (width, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitWidth"])(albersUsa, width, object);
  };

  albersUsa.fitHeight = function (height, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitHeight"])(albersUsa, height, object);
  };

  function reset() {
    cache = cacheStream = null;
    return albersUsa;
  }

  return albersUsa.scale(1070);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthal.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthal.js ***!
  \*********************************************************/
/*! exports provided: azimuthalRaw, azimuthalInvert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalRaw", function() { return azimuthalRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalInvert", function() { return azimuthalInvert; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");

function azimuthalRaw(scale) {
  return function (x, y) {
    var cx = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x),
        cy = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y),
        k = scale(cx * cy);
    return [k * cy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x), k * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y)];
  };
}
function azimuthalInvert(angle) {
  return function (x, y) {
    var z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + y * y),
        c = angle(z),
        sc = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(c),
        cc = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(c);
    return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x * sc, z * cc), Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(z && y * sc / z)];
  };
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthalEqualArea.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthalEqualArea.js ***!
  \******************************************************************/
/*! exports provided: azimuthalEqualAreaRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalEqualAreaRaw", function() { return azimuthalEqualAreaRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");



var azimuthalEqualAreaRaw = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalRaw"])(function (cxcy) {
  return Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(2 / (1 + cxcy));
});
azimuthalEqualAreaRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(function (z) {
  return 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(z / 2);
});
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthalEquidistant.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthalEquidistant.js ***!
  \********************************************************************/
/*! exports provided: azimuthalEquidistantRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalEquidistantRaw", function() { return azimuthalEquidistantRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");



var azimuthalEquidistantRaw = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalRaw"])(function (c) {
  return (c = Object(_math__WEBPACK_IMPORTED_MODULE_0__["acos"])(c)) && c / Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(c);
});
azimuthalEquidistantRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(function (z) {
  return z;
});
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conic.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conic.js ***!
  \*****************************************************/
/*! exports provided: conicProjection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicProjection", function() { return conicProjection; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");


function conicProjection(projectAt) {
  var phi0 = 0,
      phi1 = _math__WEBPACK_IMPORTED_MODULE_0__["pi"] / 3,
      m = Object(_index__WEBPACK_IMPORTED_MODULE_1__["projectionMutator"])(projectAt),
      p = m(phi0, phi1);

  p.parallels = function (_) {
    return arguments.length ? m(phi0 = _[0] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi1 = _[1] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"]) : [phi0 * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"], phi1 * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"]];
  };

  return p;
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicConformal.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicConformal.js ***!
  \**************************************************************/
/*! exports provided: conicConformalRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicConformalRaw", function() { return conicConformalRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conic */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _mercator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mercator */ "./node_modules/d3-geo/src/projection/mercator.js");




function tany(y) {
  return Object(_math__WEBPACK_IMPORTED_MODULE_0__["tan"])((_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + y) / 2);
}

function conicConformalRaw(y0, y1) {
  var cy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y0),
      n = y0 === y1 ? Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0) : Object(_math__WEBPACK_IMPORTED_MODULE_0__["log"])(cy0 / Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y1)) / Object(_math__WEBPACK_IMPORTED_MODULE_0__["log"])(tany(y1) / tany(y0)),
      f = cy0 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["pow"])(tany(y0), n) / n;
  if (!n) return _mercator__WEBPACK_IMPORTED_MODULE_2__["mercatorRaw"];

  function project(x, y) {
    if (f > 0) {
      if (y < -_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) y = -_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"];
    } else {
      if (y > _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) y = _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"];
    }

    var r = f / Object(_math__WEBPACK_IMPORTED_MODULE_0__["pow"])(tany(y), n);
    return [r * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(n * x), f - r * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(n * x)];
  }

  project.invert = function (x, y) {
    var fy = f - y,
        r = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(n) * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + fy * fy);
    return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x, Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(fy)) / n * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(fy), 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["pow"])(f / r, 1 / n)) - _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"]];
  };

  return project;
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_conic__WEBPACK_IMPORTED_MODULE_1__["conicProjection"])(conicConformalRaw).scale(109.5).parallels([30, 30]);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicEqualArea.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicEqualArea.js ***!
  \**************************************************************/
/*! exports provided: conicEqualAreaRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicEqualAreaRaw", function() { return conicEqualAreaRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conic */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _cylindricalEqualArea__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cylindricalEqualArea */ "./node_modules/d3-geo/src/projection/cylindricalEqualArea.js");



function conicEqualAreaRaw(y0, y1) {
  var sy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0),
      n = (sy0 + Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y1)) / 2; // Are the parallels symmetrical around the Equator?

  if (Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(n) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) return Object(_cylindricalEqualArea__WEBPACK_IMPORTED_MODULE_2__["cylindricalEqualAreaRaw"])(y0);
  var c = 1 + sy0 * (2 * n - sy0),
      r0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(c) / n;

  function project(x, y) {
    var r = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(c - 2 * n * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y)) / n;
    return [r * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x *= n), r0 - r * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x)];
  }

  project.invert = function (x, y) {
    var r0y = r0 - y;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x, Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(r0y)) / n * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(r0y), Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
  };

  return project;
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_conic__WEBPACK_IMPORTED_MODULE_1__["conicProjection"])(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicEquidistant.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicEquidistant.js ***!
  \****************************************************************/
/*! exports provided: conicEquidistantRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicEquidistantRaw", function() { return conicEquidistantRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conic */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _equirectangular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./equirectangular */ "./node_modules/d3-geo/src/projection/equirectangular.js");



function conicEquidistantRaw(y0, y1) {
  var cy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y0),
      n = y0 === y1 ? Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0) : (cy0 - Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y1)) / (y1 - y0),
      g = cy0 / n + y0;
  if (Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(n) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) return _equirectangular__WEBPACK_IMPORTED_MODULE_2__["equirectangularRaw"];

  function project(x, y) {
    var gy = g - y,
        nx = n * x;
    return [gy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(nx), g - gy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(nx)];
  }

  project.invert = function (x, y) {
    var gy = g - y;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x, Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(gy)) / n * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(gy), g - Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(n) * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + gy * gy)];
  };

  return project;
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_conic__WEBPACK_IMPORTED_MODULE_1__["conicProjection"])(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/cylindricalEqualArea.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/cylindricalEqualArea.js ***!
  \********************************************************************/
/*! exports provided: cylindricalEqualAreaRaw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cylindricalEqualAreaRaw", function() { return cylindricalEqualAreaRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");

function cylindricalEqualAreaRaw(phi0) {
  var cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi) / cosPhi0];
  }

  forward.invert = function (x, y) {
    return [x / cosPhi0, Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(y * cosPhi0)];
  };

  return forward;
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/equalEarth.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/equalEarth.js ***!
  \**********************************************************/
/*! exports provided: equalEarthRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equalEarthRaw", function() { return equalEarthRaw; });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");


var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(3) / 2,
    iterations = 12;
function equalEarthRaw(lambda, phi) {
  var l = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(M * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)),
      l2 = l * l,
      l6 = l2 * l2 * l2;
  return [lambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];
}

equalEarthRaw.invert = function (x, y) {
  var l = y,
      l2 = l * l,
      l6 = l2 * l2 * l2;

  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon2"]) break;
  }

  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(l), Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(l) / M)];
};

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(equalEarthRaw).scale(177.158);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/equirectangular.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/equirectangular.js ***!
  \***************************************************************/
/*! exports provided: equirectangularRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equirectangularRaw", function() { return equirectangularRaw; });
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");

function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}
equirectangularRaw.invert = equirectangularRaw;
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_0__["default"])(equirectangularRaw).scale(152.63);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/fit.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/fit.js ***!
  \***************************************************/
/*! exports provided: fitExtent, fitSize, fitWidth, fitHeight */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitExtent", function() { return fitExtent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitSize", function() { return fitSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitWidth", function() { return fitWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitHeight", function() { return fitHeight; });
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../stream */ "./node_modules/d3-geo/src/stream.js");
/* harmony import */ var _path_bounds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../path/bounds */ "./node_modules/d3-geo/src/path/bounds.js");



function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  Object(_stream__WEBPACK_IMPORTED_MODULE_0__["default"])(object, projection.stream(_path_bounds__WEBPACK_IMPORTED_MODULE_1__["default"]));
  fitBounds(_path_bounds__WEBPACK_IMPORTED_MODULE_1__["default"].result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function (b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}
function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}
function fitWidth(projection, width, object) {
  return fit(projection, function (b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}
function fitHeight(projection, height, object) {
  return fit(projection, function (b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/gnomonic.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/gnomonic.js ***!
  \********************************************************/
/*! exports provided: gnomonicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gnomonicRaw", function() { return gnomonicRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");



function gnomonicRaw(x, y) {
  var cy = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y),
      k = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x) * cy;
  return [cy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x) / k, Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y) / k];
}
gnomonicRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(_math__WEBPACK_IMPORTED_MODULE_0__["atan"]);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(gnomonicRaw).scale(144.049).clipAngle(60);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/identity.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/identity.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _clip_rectangle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clip/rectangle */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../identity */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transform */ "./node_modules/d3-geo/src/transform.js");
/* harmony import */ var _fit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fit */ "./node_modules/d3-geo/src/projection/fit.js");





function scaleTranslate(kx, ky, tx, ty) {
  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? _identity__WEBPACK_IMPORTED_MODULE_1__["default"] : Object(_transform__WEBPACK_IMPORTED_MODULE_2__["transformer"])({
    point: function point(x, y) {
      this.stream.point(x * kx + tx, y * ky + ty);
    }
  });
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var k = 1,
      tx = 0,
      ty = 0,
      sx = 1,
      sy = 1,
      transform = _identity__WEBPACK_IMPORTED_MODULE_1__["default"],
      // scale, translate and reflect
  x0 = null,
      y0,
      x1,
      y1,
      // clip extent
  _postclip = _identity__WEBPACK_IMPORTED_MODULE_1__["default"],
      cache,
      cacheStream,
      projection;

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return projection = {
    stream: function stream(_stream) {
      return cache && cacheStream === _stream ? cache : cache = transform(_postclip(cacheStream = _stream));
    },
    postclip: function postclip(_) {
      return arguments.length ? (_postclip = _, x0 = y0 = x1 = y1 = null, reset()) : _postclip;
    },
    clipExtent: function clipExtent(_) {
      return arguments.length ? (_postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity__WEBPACK_IMPORTED_MODULE_1__["default"]) : Object(_clip_rectangle__WEBPACK_IMPORTED_MODULE_0__["default"])(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
    },
    scale: function scale(_) {
      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;
    },
    translate: function translate(_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];
    },
    reflectX: function reflectX(_) {
      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;
    },
    reflectY: function reflectY(_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;
    },
    fitExtent: function fitExtent(extent, object) {
      return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitExtent"])(projection, extent, object);
    },
    fitSize: function fitSize(size, object) {
      return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitSize"])(projection, size, object);
    },
    fitWidth: function fitWidth(width, object) {
      return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitWidth"])(projection, width, object);
    },
    fitHeight: function fitHeight(height, object) {
      return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitHeight"])(projection, height, object);
    }
  };
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/index.js ***!
  \*****************************************************/
/*! exports provided: default, projectionMutator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projectionMutator", function() { return projectionMutator; });
/* harmony import */ var _clip_antimeridian__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clip/antimeridian */ "./node_modules/d3-geo/src/clip/antimeridian.js");
/* harmony import */ var _clip_circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../clip/circle */ "./node_modules/d3-geo/src/clip/circle.js");
/* harmony import */ var _clip_rectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clip/rectangle */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony import */ var _compose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../compose */ "./node_modules/d3-geo/src/compose.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../identity */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../rotation */ "./node_modules/d3-geo/src/rotation.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../transform */ "./node_modules/d3-geo/src/transform.js");
/* harmony import */ var _fit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./fit */ "./node_modules/d3-geo/src/projection/fit.js");
/* harmony import */ var _resample__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./resample */ "./node_modules/d3-geo/src/projection/resample.js");










var transformRadians = Object(_transform__WEBPACK_IMPORTED_MODULE_7__["transformer"])({
  point: function point(x, y) {
    this.stream.point(x * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], y * _math__WEBPACK_IMPORTED_MODULE_5__["radians"]);
  }
});

function transformRotate(rotate) {
  return Object(_transform__WEBPACK_IMPORTED_MODULE_7__["transformer"])({
    point: function point(x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy) {
  function transform(x, y) {
    return [dx + k * x, dy - k * y];
  }

  transform.invert = function (x, y) {
    return [(x - dx) / k, (dy - y) / k];
  };

  return transform;
}

function scaleTranslateRotate(k, dx, dy, alpha) {
  var cosAlpha = Object(_math__WEBPACK_IMPORTED_MODULE_5__["cos"])(alpha),
      sinAlpha = Object(_math__WEBPACK_IMPORTED_MODULE_5__["sin"])(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;

  function transform(x, y) {
    return [a * x - b * y + dx, dy - b * x - a * y];
  }

  transform.invert = function (x, y) {
    return [ai * x - bi * y + ci, fi - bi * x - ai * y];
  };

  return transform;
}

function projection(project) {
  return projectionMutator(function () {
    return project;
  })();
}
function projectionMutator(projectAt) {
  var project,
      k = 150,
      // scale
  x = 480,
      y = 250,
      // translate
  lambda = 0,
      phi = 0,
      // center
  deltaLambda = 0,
      deltaPhi = 0,
      deltaGamma = 0,
      rotate,
      // pre-rotate
  alpha = 0,
      // post-rotate
  theta = null,
      preclip = _clip_antimeridian__WEBPACK_IMPORTED_MODULE_0__["default"],
      // pre-clip angle
  x0 = null,
      y0,
      x1,
      y1,
      postclip = _identity__WEBPACK_IMPORTED_MODULE_4__["default"],
      // post-clip extent
  delta2 = 0.5,
      // precision
  projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], point[1] * _math__WEBPACK_IMPORTED_MODULE_5__["radians"]);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"], point[1] * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"]];
  }

  projection.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function (_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function (_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function (_) {
    return arguments.length ? (preclip = +_ ? Object(_clip_circle__WEBPACK_IMPORTED_MODULE_1__["default"])(theta = _ * _math__WEBPACK_IMPORTED_MODULE_5__["radians"]) : (theta = null, _clip_antimeridian__WEBPACK_IMPORTED_MODULE_0__["default"]), reset()) : theta * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"];
  };

  projection.clipExtent = function (_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity__WEBPACK_IMPORTED_MODULE_4__["default"]) : Object(_clip_rectangle__WEBPACK_IMPORTED_MODULE_2__["default"])(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function (_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function (_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function (_) {
    return arguments.length ? (lambda = _[0] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], phi = _[1] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], recenter()) : [lambda * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"], phi * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"]];
  };

  projection.rotate = function (_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], deltaPhi = _[1] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], deltaGamma = _.length > 2 ? _[2] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"] : 0, recenter()) : [deltaLambda * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"], deltaPhi * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"], deltaGamma * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"]];
  };

  projection.angle = function (_) {
    return arguments.length ? (alpha = _ % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], recenter()) : alpha * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"];
  };

  projection.precision = function (_) {
    return arguments.length ? (projectResample = Object(_resample__WEBPACK_IMPORTED_MODULE_9__["default"])(projectTransform, delta2 = _ * _), reset()) : Object(_math__WEBPACK_IMPORTED_MODULE_5__["sqrt"])(delta2);
  };

  projection.fitExtent = function (extent, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_8__["fitExtent"])(projection, extent, object);
  };

  projection.fitSize = function (size, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_8__["fitSize"])(projection, size, object);
  };

  projection.fitWidth = function (width, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_8__["fitWidth"])(projection, width, object);
  };

  projection.fitHeight = function (height, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_8__["fitHeight"])(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),
        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);
    rotate = Object(_rotation__WEBPACK_IMPORTED_MODULE_6__["rotateRadians"])(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = Object(_compose__WEBPACK_IMPORTED_MODULE_3__["default"])(project, transform);
    projectRotateTransform = Object(_compose__WEBPACK_IMPORTED_MODULE_3__["default"])(rotate, projectTransform);
    projectResample = Object(_resample__WEBPACK_IMPORTED_MODULE_9__["default"])(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function () {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/mercator.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/mercator.js ***!
  \********************************************************/
/*! exports provided: mercatorRaw, default, mercatorProjection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mercatorRaw", function() { return mercatorRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mercatorProjection", function() { return mercatorProjection; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rotation */ "./node_modules/d3-geo/src/rotation.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");



function mercatorRaw(lambda, phi) {
  return [lambda, Object(_math__WEBPACK_IMPORTED_MODULE_0__["log"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["tan"])((_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + phi) / 2))];
}

mercatorRaw.invert = function (x, y) {
  return [x, 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["exp"])(y)) - _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"]];
};

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return mercatorProjection(mercatorRaw).scale(961 / _math__WEBPACK_IMPORTED_MODULE_0__["tau"]);
});
function mercatorProjection(project) {
  var m = Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null,
      y0,
      x1,
      y1; // clip extent

  m.scale = function (_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function (_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function (_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function (_) {
    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = _math__WEBPACK_IMPORTED_MODULE_0__["pi"] * scale(),
        t = m(Object(_rotation__WEBPACK_IMPORTED_MODULE_1__["default"])(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/naturalEarth1.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/naturalEarth1.js ***!
  \*************************************************************/
/*! exports provided: naturalEarth1Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "naturalEarth1Raw", function() { return naturalEarth1Raw; });
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");


function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi,
      phi4 = phi2 * phi2;
  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];
}

naturalEarth1Raw.invert = function (x, y) {
  var phi = y,
      i = 25,
      delta;

  do {
    var phi2 = phi * phi,
        phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
  } while (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);

  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];
};

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_0__["default"])(naturalEarth1Raw).scale(175.295);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/orthographic.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/orthographic.js ***!
  \************************************************************/
/*! exports provided: orthographicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orthographicRaw", function() { return orthographicRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");



function orthographicRaw(x, y) {
  return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y) * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x), Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y)];
}
orthographicRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(_math__WEBPACK_IMPORTED_MODULE_0__["asin"]);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(orthographicRaw).scale(249.5).clipAngle(90 + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/resample.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/resample.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transform */ "./node_modules/d3-geo/src/transform.js");



var maxDepth = 16,
    // maximum depth of subdivision
cosMinDistance = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(30 * _math__WEBPACK_IMPORTED_MODULE_1__["radians"]); // cos(minimum angular distance)

/* harmony default export */ __webpack_exports__["default"] = (function (project, delta2) {
  return +delta2 ? resample(project, delta2) : resampleNone(project);
});

function resampleNone(project) {
  return Object(_transform__WEBPACK_IMPORTED_MODULE_2__["transformer"])({
    point: function point(x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample(project, delta2) {
  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;

    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(a * a + b * b + c * c),
          phi2 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["asin"])(c /= m),
          lambda2 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(c) - 1) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda0 - lambda1) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? (lambda0 + lambda1) / 2 : Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;

      if (dz * dz / d2 > delta2 // perpendicular projected distance
      || Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
        // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }

  return function (stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
    lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function polygonStart() {
        stream.polygonStart();
        resampleStream.lineStart = ringStart;
      },
      polygonEnd: function polygonEnd() {
        stream.polygonEnd();
        resampleStream.lineStart = lineStart;
      }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesian"])([lambda, phi]),
          p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/stereographic.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/stereographic.js ***!
  \*************************************************************/
/*! exports provided: stereographicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stereographicRaw", function() { return stereographicRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");



function stereographicRaw(x, y) {
  var cy = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y),
      k = 1 + Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x) * cy;
  return [cy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x) / k, Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y) / k];
}
stereographicRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(function (z) {
  return 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan"])(z);
});
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(stereographicRaw).scale(250).clipAngle(142);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/transverseMercator.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/transverseMercator.js ***!
  \******************************************************************/
/*! exports provided: transverseMercatorRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transverseMercatorRaw", function() { return transverseMercatorRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _mercator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mercator */ "./node_modules/d3-geo/src/projection/mercator.js");


function transverseMercatorRaw(lambda, phi) {
  return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["log"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["tan"])((_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + phi) / 2)), -lambda];
}

transverseMercatorRaw.invert = function (x, y) {
  return [-y, 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["exp"])(x)) - _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"]];
};

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var m = Object(_mercator__WEBPACK_IMPORTED_MODULE_1__["mercatorProjection"])(transverseMercatorRaw),
      center = m.center,
      rotate = m.rotate;

  m.center = function (_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };

  m.rotate = function (_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };

  return rotate([0, 0, 90]).scale(159.155);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/rotation.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/rotation.js ***!
  \*********************************************/
/*! exports provided: rotateRadians, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateRadians", function() { return rotateRadians; });
/* harmony import */ var _compose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compose */ "./node_modules/d3-geo/src/compose.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");



function rotationIdentity(lambda, phi) {
  return [Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda) > _math__WEBPACK_IMPORTED_MODULE_1__["pi"] ? lambda + Math.round(-lambda / _math__WEBPACK_IMPORTED_MODULE_1__["tau"]) * _math__WEBPACK_IMPORTED_MODULE_1__["tau"] : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;
function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= _math__WEBPACK_IMPORTED_MODULE_1__["tau"]) ? deltaPhi || deltaGamma ? Object(_compose__WEBPACK_IMPORTED_MODULE_0__["default"])(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;
}

function forwardRotationLambda(deltaLambda) {
  return function (lambda, phi) {
    return lambda += deltaLambda, [lambda > _math__WEBPACK_IMPORTED_MODULE_1__["pi"] ? lambda - _math__WEBPACK_IMPORTED_MODULE_1__["tau"] : lambda < -_math__WEBPACK_IMPORTED_MODULE_1__["pi"] ? lambda + _math__WEBPACK_IMPORTED_MODULE_1__["tau"] : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(deltaPhi),
      sinDeltaPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(deltaPhi),
      cosDeltaGamma = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(deltaGamma),
      sinDeltaGamma = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        x = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda) * cosPhi,
        y = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) * cosPhi,
        z = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), Object(_math__WEBPACK_IMPORTED_MODULE_1__["asin"])(k * cosDeltaGamma + y * sinDeltaGamma)];
  }

  rotation.invert = function (lambda, phi) {
    var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        x = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda) * cosPhi,
        y = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) * cosPhi,
        z = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), Object(_math__WEBPACK_IMPORTED_MODULE_1__["asin"])(k * cosDeltaPhi - x * sinDeltaPhi)];
  };

  return rotation;
}

/* harmony default export */ __webpack_exports__["default"] = (function (rotate) {
  rotate = rotateRadians(rotate[0] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"], rotate[1] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"], rotate.length > 2 ? rotate[2] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"] : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"], coordinates[1] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"]);
    return coordinates[0] *= _math__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates[1] *= _math__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates;
  }

  forward.invert = function (coordinates) {
    coordinates = rotate.invert(coordinates[0] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"], coordinates[1] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"]);
    return coordinates[0] *= _math__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates[1] *= _math__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates;
  };

  return forward;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/stream.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/stream.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function Feature(object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function FeatureCollection(object, stream) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) {
      streamGeometry(features[i].geometry, stream);
    }
  }
};
var streamGeometryType = {
  Sphere: function Sphere(object, stream) {
    stream.sphere();
  },
  Point: function Point(object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function MultiPoint(object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) {
      object = coordinates[i], stream.point(object[0], object[1], object[2]);
    }
  },
  LineString: function LineString(object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function MultiLineString(object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) {
      streamLine(coordinates[i], stream, 0);
    }
  },
  Polygon: function Polygon(object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function MultiPolygon(object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) {
      streamPolygon(coordinates[i], stream);
    }
  },
  GeometryCollection: function GeometryCollection(object, stream) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) {
      streamGeometry(geometries[i], stream);
    }
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1,
      n = coordinates.length - closed,
      coordinate;
  stream.lineStart();

  while (++i < n) {
    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
  }

  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1,
      n = coordinates.length;
  stream.polygonStart();

  while (++i < n) {
    streamLine(coordinates[i], stream, 1);
  }

  stream.polygonEnd();
}

/* harmony default export */ __webpack_exports__["default"] = (function (object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
});

/***/ }),

/***/ "./node_modules/d3-geo/src/transform.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/transform.js ***!
  \**********************************************/
/*! exports provided: default, transformer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformer", function() { return transformer; });
/* harmony default export */ __webpack_exports__["default"] = (function (methods) {
  return {
    stream: transformer(methods)
  };
});
function transformer(methods) {
  return function (stream) {
    var s = new TransformStream();

    for (var key in methods) {
      s[key] = methods[key];
    }

    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function point(x, y) {
    this.stream.point(x, y);
  },
  sphere: function sphere() {
    this.stream.sphere();
  },
  lineStart: function lineStart() {
    this.stream.lineStart();
  },
  lineEnd: function lineEnd() {
    this.stream.lineEnd();
  },
  polygonStart: function polygonStart() {
    this.stream.polygonStart();
  },
  polygonEnd: function polygonEnd() {
    this.stream.polygonEnd();
  }
};

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/accessors.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/accessors.js ***!
  \****************************************************/
/*! exports provided: optional, required */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "optional", function() { return optional; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "required", function() { return required; });
function optional(f) {
  return f == null ? null : required(f);
}
function required(f) {
  if (typeof f !== "function") throw new Error();
  return f;
}

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/array.js":
/*!************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/array.js ***!
  \************************************************/
/*! exports provided: slice, shuffle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return shuffle; });
var slice = Array.prototype.slice;
function shuffle(array) {
  var m = array.length,
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m];
    array[m] = array[i];
    array[i] = t;
  }

  return array;
}

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/cluster.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/cluster.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

function meanX(children) {
  return children.reduce(meanXReduce, 0) / children.length;
}

function meanXReduce(x, c) {
  return x + c.x;
}

function maxY(children) {
  return 1 + children.reduce(maxYReduce, 0);
}

function maxYReduce(y, c) {
  return Math.max(y, c.y);
}

function leafLeft(node) {
  var children;

  while (children = node.children) {
    node = children[0];
  }

  return node;
}

function leafRight(node) {
  var children;

  while (children = node.children) {
    node = children[children.length - 1];
  }

  return node;
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = false;

  function cluster(root) {
    var previousNode,
        x = 0; // First walk, computing the initial x & y values.

    root.eachAfter(function (node) {
      var children = node.children;

      if (children) {
        node.x = meanX(children);
        node.y = maxY(children);
      } else {
        node.x = previousNode ? x += separation(node, previousNode) : 0;
        node.y = 0;
        previousNode = node;
      }
    });
    var left = leafLeft(root),
        right = leafRight(root),
        x0 = left.x - separation(left, right) / 2,
        x1 = right.x + separation(right, left) / 2; // Second walk, normalizing x & y to the desired size.

    return root.eachAfter(nodeSize ? function (node) {
      node.x = (node.x - root.x) * dx;
      node.y = (root.y - node.y) * dy;
    } : function (node) {
      node.x = (node.x - x0) / (x1 - x0) * dx;
      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
    });
  }

  cluster.separation = function (x) {
    return arguments.length ? (separation = x, cluster) : separation;
  };

  cluster.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : nodeSize ? null : [dx, dy];
  };

  cluster.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : nodeSize ? [dx, dy] : null;
  };

  return cluster;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/constant.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/constant.js ***!
  \***************************************************/
/*! exports provided: constantZero, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "constantZero", function() { return constantZero; });
function constantZero() {
  return 0;
}
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/ancestors.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/ancestors.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var node = this,
      nodes = [node];

  while (node = node.parent) {
    nodes.push(node);
  }

  return nodes;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/count.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/count.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function count(node) {
  var sum = 0,
      children = node.children,
      i = children && children.length;
  if (!i) sum = 1;else while (--i >= 0) {
    sum += children[i].value;
  }
  node.value = sum;
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return this.eachAfter(count);
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/descendants.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/descendants.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var nodes = [];
  this.each(function (node) {
    nodes.push(node);
  });
  return nodes;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/each.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/each.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (callback) {
  var node = this,
      current,
      next = [node],
      children,
      i,
      n;

  do {
    current = next.reverse(), next = [];

    while (node = current.pop()) {
      callback(node), children = node.children;
      if (children) for (i = 0, n = children.length; i < n; ++i) {
        next.push(children[i]);
      }
    }
  } while (next.length);

  return this;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (callback) {
  var node = this,
      nodes = [node],
      next = [],
      children,
      i,
      n;

  while (node = nodes.pop()) {
    next.push(node), children = node.children;
    if (children) for (i = 0, n = children.length; i < n; ++i) {
      nodes.push(children[i]);
    }
  }

  while (node = next.pop()) {
    callback(node);
  }

  return this;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (callback) {
  var node = this,
      nodes = [node],
      children,
      i;

  while (node = nodes.pop()) {
    callback(node), children = node.children;
    if (children) for (i = children.length - 1; i >= 0; --i) {
      nodes.push(children[i]);
    }
  }

  return this;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/index.js ***!
  \**********************************************************/
/*! exports provided: default, computeHeight, Node */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return hierarchy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computeHeight", function() { return computeHeight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Node", function() { return Node; });
/* harmony import */ var _count__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./count */ "./node_modules/d3-hierarchy/src/hierarchy/count.js");
/* harmony import */ var _each__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./each */ "./node_modules/d3-hierarchy/src/hierarchy/each.js");
/* harmony import */ var _eachBefore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./eachBefore */ "./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js");
/* harmony import */ var _eachAfter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eachAfter */ "./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js");
/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sum */ "./node_modules/d3-hierarchy/src/hierarchy/sum.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sort */ "./node_modules/d3-hierarchy/src/hierarchy/sort.js");
/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./path */ "./node_modules/d3-hierarchy/src/hierarchy/path.js");
/* harmony import */ var _ancestors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ancestors */ "./node_modules/d3-hierarchy/src/hierarchy/ancestors.js");
/* harmony import */ var _descendants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./descendants */ "./node_modules/d3-hierarchy/src/hierarchy/descendants.js");
/* harmony import */ var _leaves__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./leaves */ "./node_modules/d3-hierarchy/src/hierarchy/leaves.js");
/* harmony import */ var _links__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./links */ "./node_modules/d3-hierarchy/src/hierarchy/links.js");











function hierarchy(data, children) {
  var root = new Node(data),
      valued = +data.value && (root.value = data.value),
      node,
      nodes = [root],
      child,
      childs,
      i,
      n;
  if (children == null) children = defaultChildren;

  while (node = nodes.pop()) {
    if (valued) node.value = +node.data.value;

    if ((childs = children(node.data)) && (n = childs.length)) {
      node.children = new Array(n);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }

  return root.eachBefore(computeHeight);
}

function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}

function defaultChildren(d) {
  return d.children;
}

function copyData(node) {
  node.data = node.data.data;
}

function computeHeight(node) {
  var height = 0;

  do {
    node.height = height;
  } while ((node = node.parent) && node.height < ++height);
}
function Node(data) {
  this.data = data;
  this.depth = this.height = 0;
  this.parent = null;
}
Node.prototype = hierarchy.prototype = {
  constructor: Node,
  count: _count__WEBPACK_IMPORTED_MODULE_0__["default"],
  each: _each__WEBPACK_IMPORTED_MODULE_1__["default"],
  eachAfter: _eachAfter__WEBPACK_IMPORTED_MODULE_3__["default"],
  eachBefore: _eachBefore__WEBPACK_IMPORTED_MODULE_2__["default"],
  sum: _sum__WEBPACK_IMPORTED_MODULE_4__["default"],
  sort: _sort__WEBPACK_IMPORTED_MODULE_5__["default"],
  path: _path__WEBPACK_IMPORTED_MODULE_6__["default"],
  ancestors: _ancestors__WEBPACK_IMPORTED_MODULE_7__["default"],
  descendants: _descendants__WEBPACK_IMPORTED_MODULE_8__["default"],
  leaves: _leaves__WEBPACK_IMPORTED_MODULE_9__["default"],
  links: _links__WEBPACK_IMPORTED_MODULE_10__["default"],
  copy: node_copy
};

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/leaves.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/leaves.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var leaves = [];
  this.eachBefore(function (node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/links.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/links.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var root = this,
      links = [];
  root.each(function (node) {
    if (node !== root) {
      // Don’t include the root’s parent, if any.
      links.push({
        source: node.parent,
        target: node
      });
    }
  });
  return links;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/path.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/path.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (end) {
  var start = this,
      ancestor = leastCommonAncestor(start, end),
      nodes = [start];

  while (start !== ancestor) {
    start = start.parent;
    nodes.push(start);
  }

  var k = nodes.length;

  while (end !== ancestor) {
    nodes.splice(k, 0, end);
    end = end.parent;
  }

  return nodes;
});

function leastCommonAncestor(a, b) {
  if (a === b) return a;
  var aNodes = a.ancestors(),
      bNodes = b.ancestors(),
      c = null;
  a = aNodes.pop();
  b = bNodes.pop();

  while (a === b) {
    c = a;
    a = aNodes.pop();
    b = bNodes.pop();
  }

  return c;
}

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/sort.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/sort.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (compare) {
  return this.eachBefore(function (node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/sum.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/sum.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  return this.eachAfter(function (node) {
    var sum = +value(node.data) || 0,
        children = node.children,
        i = children && children.length;

    while (--i >= 0) {
      sum += children[i].value;
    }

    node.value = sum;
  });
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/index.js ***!
  \************************************************/
/*! exports provided: cluster, hierarchy, pack, packSiblings, packEnclose, partition, stratify, tree, treemap, treemapBinary, treemapDice, treemapSlice, treemapSliceDice, treemapSquarify, treemapResquarify */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cluster__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cluster */ "./node_modules/d3-hierarchy/src/cluster.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cluster", function() { return _cluster__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _hierarchy_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hierarchy/index */ "./node_modules/d3-hierarchy/src/hierarchy/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hierarchy", function() { return _hierarchy_index__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _pack_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pack/index */ "./node_modules/d3-hierarchy/src/pack/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pack", function() { return _pack_index__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _pack_siblings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pack/siblings */ "./node_modules/d3-hierarchy/src/pack/siblings.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "packSiblings", function() { return _pack_siblings__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _pack_enclose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pack/enclose */ "./node_modules/d3-hierarchy/src/pack/enclose.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "packEnclose", function() { return _pack_enclose__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _partition__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./partition */ "./node_modules/d3-hierarchy/src/partition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _partition__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _stratify__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./stratify */ "./node_modules/d3-hierarchy/src/stratify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stratify", function() { return _stratify__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tree */ "./node_modules/d3-hierarchy/src/tree.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tree", function() { return _tree__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _treemap_index__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./treemap/index */ "./node_modules/d3-hierarchy/src/treemap/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemap", function() { return _treemap_index__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _treemap_binary__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./treemap/binary */ "./node_modules/d3-hierarchy/src/treemap/binary.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapBinary", function() { return _treemap_binary__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _treemap_dice__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./treemap/dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapDice", function() { return _treemap_dice__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _treemap_slice__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./treemap/slice */ "./node_modules/d3-hierarchy/src/treemap/slice.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSlice", function() { return _treemap_slice__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _treemap_sliceDice__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./treemap/sliceDice */ "./node_modules/d3-hierarchy/src/treemap/sliceDice.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSliceDice", function() { return _treemap_sliceDice__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _treemap_squarify__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./treemap/squarify */ "./node_modules/d3-hierarchy/src/treemap/squarify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSquarify", function() { return _treemap_squarify__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _treemap_resquarify__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./treemap/resquarify */ "./node_modules/d3-hierarchy/src/treemap/resquarify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapResquarify", function() { return _treemap_resquarify__WEBPACK_IMPORTED_MODULE_14__["default"]; });

















/***/ }),

/***/ "./node_modules/d3-hierarchy/src/pack/enclose.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/enclose.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array */ "./node_modules/d3-hierarchy/src/array.js");

/* harmony default export */ __webpack_exports__["default"] = (function (circles) {
  var i = 0,
      n = (circles = Object(_array__WEBPACK_IMPORTED_MODULE_0__["shuffle"])(_array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(circles))).length,
      B = [],
      p,
      e;

  while (i < n) {
    p = circles[i];
    if (e && enclosesWeak(e, p)) ++i;else e = encloseBasis(B = extendBasis(B, p)), i = 0;
  }

  return e;
});

function extendBasis(B, p) {
  var i, j;
  if (enclosesWeakAll(p, B)) return [p]; // If we get here then B must have at least one element.

  for (i = 0; i < B.length; ++i) {
    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
      return [B[i], p];
    }
  } // If we get here then B must have at least two elements.


  for (i = 0; i < B.length - 1; ++i) {
    for (j = i + 1; j < B.length; ++j) {
      if (enclosesNot(encloseBasis2(B[i], B[j]), p) && enclosesNot(encloseBasis2(B[i], p), B[j]) && enclosesNot(encloseBasis2(B[j], p), B[i]) && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
        return [B[i], B[j], p];
      }
    }
  } // If we get here then something is very wrong.


  throw new Error();
}

function enclosesNot(a, b) {
  var dr = a.r - b.r,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}

function enclosesWeak(a, b) {
  var dr = a.r - b.r + 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function enclosesWeakAll(a, B) {
  for (var i = 0; i < B.length; ++i) {
    if (!enclosesWeak(a, B[i])) {
      return false;
    }
  }

  return true;
}

function encloseBasis(B) {
  switch (B.length) {
    case 1:
      return encloseBasis1(B[0]);

    case 2:
      return encloseBasis2(B[0], B[1]);

    case 3:
      return encloseBasis3(B[0], B[1], B[2]);
  }
}

function encloseBasis1(a) {
  return {
    x: a.x,
    y: a.y,
    r: a.r
  };
}

function encloseBasis2(a, b) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x21 = x2 - x1,
      y21 = y2 - y1,
      r21 = r2 - r1,
      l = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x1 + x2 + x21 / l * r21) / 2,
    y: (y1 + y2 + y21 / l * r21) / 2,
    r: (l + r1 + r2) / 2
  };
}

function encloseBasis3(a, b, c) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x3 = c.x,
      y3 = c.y,
      r3 = c.r,
      a2 = x1 - x2,
      a3 = x1 - x3,
      b2 = y1 - y2,
      b3 = y1 - y3,
      c2 = r2 - r1,
      c3 = r3 - r1,
      d1 = x1 * x1 + y1 * y1 - r1 * r1,
      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
      ab = a3 * b2 - a2 * b3,
      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
      xb = (b3 * c2 - b2 * c3) / ab,
      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
      yb = (a2 * c3 - a3 * c2) / ab,
      A = xb * xb + yb * yb - 1,
      B = 2 * (r1 + xa * xb + ya * yb),
      C = xa * xa + ya * ya - r1 * r1,
      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
  return {
    x: x1 + xa + xb * r,
    y: y1 + ya + yb * r,
    r: r
  };
}

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/pack/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/index.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _siblings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./siblings */ "./node_modules/d3-hierarchy/src/pack/siblings.js");
/* harmony import */ var _accessors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../accessors */ "./node_modules/d3-hierarchy/src/accessors.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant */ "./node_modules/d3-hierarchy/src/constant.js");




function defaultRadius(d) {
  return Math.sqrt(d.value);
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var radius = null,
      dx = 1,
      dy = 1,
      padding = _constant__WEBPACK_IMPORTED_MODULE_2__["constantZero"];

  function pack(root) {
    root.x = dx / 2, root.y = dy / 2;

    if (radius) {
      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));
    } else {
      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(_constant__WEBPACK_IMPORTED_MODULE_2__["constantZero"], 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
    }

    return root;
  }

  pack.radius = function (x) {
    return arguments.length ? (radius = Object(_accessors__WEBPACK_IMPORTED_MODULE_1__["optional"])(x), pack) : radius;
  };

  pack.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
  };

  pack.padding = function (x) {
    return arguments.length ? (padding = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(+x), pack) : padding;
  };

  return pack;
});

function radiusLeaf(radius) {
  return function (node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}

function packChildren(padding, k) {
  return function (node) {
    if (children = node.children) {
      var children,
          i,
          n = children.length,
          r = padding(node) * k || 0,
          e;
      if (r) for (i = 0; i < n; ++i) {
        children[i].r += r;
      }
      e = Object(_siblings__WEBPACK_IMPORTED_MODULE_0__["packEnclose"])(children);
      if (r) for (i = 0; i < n; ++i) {
        children[i].r -= r;
      }
      node.r = e + r;
    }
  };
}

function translateChild(k) {
  return function (node) {
    var parent = node.parent;
    node.r *= k;

    if (parent) {
      node.x = parent.x + k * node.x;
      node.y = parent.y + k * node.y;
    }
  };
}

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/pack/siblings.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/siblings.js ***!
  \********************************************************/
/*! exports provided: packEnclose, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "packEnclose", function() { return packEnclose; });
/* harmony import */ var _enclose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enclose */ "./node_modules/d3-hierarchy/src/pack/enclose.js");


function place(b, a, c) {
  var dx = b.x - a.x,
      x,
      a2,
      dy = b.y - a.y,
      y,
      b2,
      d2 = dx * dx + dy * dy;

  if (d2) {
    a2 = a.r + c.r, a2 *= a2;
    b2 = b.r + c.r, b2 *= b2;

    if (a2 > b2) {
      x = (d2 + b2 - a2) / (2 * d2);
      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
      c.x = b.x - x * dx - y * dy;
      c.y = b.y - x * dy + y * dx;
    } else {
      x = (d2 + a2 - b2) / (2 * d2);
      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
      c.x = a.x + x * dx - y * dy;
      c.y = a.y + x * dy + y * dx;
    }
  } else {
    c.x = a.x + c.r;
    c.y = a.y;
  }
}

function intersects(a, b) {
  var dr = a.r + b.r - 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function score(node) {
  var a = node._,
      b = node.next._,
      ab = a.r + b.r,
      dx = (a.x * b.r + b.x * a.r) / ab,
      dy = (a.y * b.r + b.y * a.r) / ab;
  return dx * dx + dy * dy;
}

function Node(circle) {
  this._ = circle;
  this.next = null;
  this.previous = null;
}

function packEnclose(circles) {
  if (!(n = circles.length)) return 0;
  var a, b, c, n, aa, ca, i, j, k, sj, sk; // Place the first circle.

  a = circles[0], a.x = 0, a.y = 0;
  if (!(n > 1)) return a.r; // Place the second circle.

  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
  if (!(n > 2)) return a.r + b.r; // Place the third circle.

  place(b, a, c = circles[2]); // Initialize the front-chain using the first three circles a, b and c.

  a = new Node(a), b = new Node(b), c = new Node(c);
  a.next = c.previous = b;
  b.next = a.previous = c;
  c.next = b.previous = a; // Attempt to place each remaining circle…

  pack: for (i = 3; i < n; ++i) {
    place(a._, b._, c = circles[i]), c = new Node(c); // Find the closest intersecting circle on the front-chain, if any.
    // “Closeness” is determined by linear distance along the front-chain.
    // “Ahead” or “behind” is likewise determined by linear distance.

    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;

    do {
      if (sj <= sk) {
        if (intersects(j._, c._)) {
          b = j, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sj += j._.r, j = j.next;
      } else {
        if (intersects(k._, c._)) {
          a = k, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sk += k._.r, k = k.previous;
      }
    } while (j !== k.next); // Success! Insert the new circle c between a and b.


    c.previous = a, c.next = b, a.next = b.previous = b = c; // Compute the new closest circle pair to the centroid.

    aa = score(a);

    while ((c = c.next) !== b) {
      if ((ca = score(c)) < aa) {
        a = c, aa = ca;
      }
    }

    b = a.next;
  } // Compute the enclosing circle of the front chain.


  a = [b._], c = b;

  while ((c = c.next) !== b) {
    a.push(c._);
  }

  c = Object(_enclose__WEBPACK_IMPORTED_MODULE_0__["default"])(a); // Translate the circles to put the enclosing circle around the origin.

  for (i = 0; i < n; ++i) {
    a = circles[i], a.x -= c.x, a.y -= c.y;
  }

  return c.r;
}
/* harmony default export */ __webpack_exports__["default"] = (function (circles) {
  packEnclose(circles);
  return circles;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/partition.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/partition.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _treemap_round__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./treemap/round */ "./node_modules/d3-hierarchy/src/treemap/round.js");
/* harmony import */ var _treemap_dice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./treemap/dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");


/* harmony default export */ __webpack_exports__["default"] = (function () {
  var dx = 1,
      dy = 1,
      padding = 0,
      round = false;

  function partition(root) {
    var n = root.height + 1;
    root.x0 = root.y0 = padding;
    root.x1 = dx;
    root.y1 = dy / n;
    root.eachBefore(positionNode(dy, n));
    if (round) root.eachBefore(_treemap_round__WEBPACK_IMPORTED_MODULE_0__["default"]);
    return root;
  }

  function positionNode(dy, n) {
    return function (node) {
      if (node.children) {
        Object(_treemap_dice__WEBPACK_IMPORTED_MODULE_1__["default"])(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
      }

      var x0 = node.x0,
          y0 = node.y0,
          x1 = node.x1 - padding,
          y1 = node.y1 - padding;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      node.x0 = x0;
      node.y0 = y0;
      node.x1 = x1;
      node.y1 = y1;
    };
  }

  partition.round = function (x) {
    return arguments.length ? (round = !!x, partition) : round;
  };

  partition.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
  };

  partition.padding = function (x) {
    return arguments.length ? (padding = +x, partition) : padding;
  };

  return partition;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/stratify.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/stratify.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _accessors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessors */ "./node_modules/d3-hierarchy/src/accessors.js");
/* harmony import */ var _hierarchy_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hierarchy/index */ "./node_modules/d3-hierarchy/src/hierarchy/index.js");


var keyPrefix = "$",
    // Protect against keys like “__proto__”.
preroot = {
  depth: -1
},
    ambiguous = {};

function defaultId(d) {
  return d.id;
}

function defaultParentId(d) {
  return d.parentId;
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var id = defaultId,
      parentId = defaultParentId;

  function stratify(data) {
    var d,
        i,
        n = data.length,
        root,
        parent,
        node,
        nodes = new Array(n),
        nodeId,
        nodeKey,
        nodeByKey = {};

    for (i = 0; i < n; ++i) {
      d = data[i], node = nodes[i] = new _hierarchy_index__WEBPACK_IMPORTED_MODULE_1__["Node"](d);

      if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
        nodeKey = keyPrefix + (node.id = nodeId);
        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;
      }
    }

    for (i = 0; i < n; ++i) {
      node = nodes[i], nodeId = parentId(data[i], i, data);

      if (nodeId == null || !(nodeId += "")) {
        if (root) throw new Error("multiple roots");
        root = node;
      } else {
        parent = nodeByKey[keyPrefix + nodeId];
        if (!parent) throw new Error("missing: " + nodeId);
        if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
        if (parent.children) parent.children.push(node);else parent.children = [node];
        node.parent = parent;
      }
    }

    if (!root) throw new Error("no root");
    root.parent = preroot;
    root.eachBefore(function (node) {
      node.depth = node.parent.depth + 1;
      --n;
    }).eachBefore(_hierarchy_index__WEBPACK_IMPORTED_MODULE_1__["computeHeight"]);
    root.parent = null;
    if (n > 0) throw new Error("cycle");
    return root;
  }

  stratify.id = function (x) {
    return arguments.length ? (id = Object(_accessors__WEBPACK_IMPORTED_MODULE_0__["required"])(x), stratify) : id;
  };

  stratify.parentId = function (x) {
    return arguments.length ? (parentId = Object(_accessors__WEBPACK_IMPORTED_MODULE_0__["required"])(x), stratify) : parentId;
  };

  return stratify;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/tree.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-hierarchy/src/tree.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _hierarchy_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hierarchy/index */ "./node_modules/d3-hierarchy/src/hierarchy/index.js");


function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
} // function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }
// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.


function nextLeft(v) {
  var children = v.children;
  return children ? children[0] : v.t;
} // This function works analogously to nextLeft.


function nextRight(v) {
  var children = v.children;
  return children ? children[children.length - 1] : v.t;
} // Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.


function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
} // All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).


function executeShifts(v) {
  var shift = 0,
      change = 0,
      children = v.children,
      i = children.length,
      w;

  while (--i >= 0) {
    w = children[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
} // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.


function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}

function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null; // default ancestor

  this.a = this; // ancestor

  this.z = 0; // prelim

  this.m = 0; // mod

  this.c = 0; // change

  this.s = 0; // shift

  this.t = null; // thread

  this.i = i; // number
}

TreeNode.prototype = Object.create(_hierarchy_index__WEBPACK_IMPORTED_MODULE_0__["Node"].prototype);

function treeRoot(root) {
  var tree = new TreeNode(root, 0),
      node,
      nodes = [tree],
      child,
      children,
      i,
      n;

  while (node = nodes.pop()) {
    if (children = node._.children) {
      node.children = new Array(n = children.length);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children[i], i));
        child.parent = node;
      }
    }
  }

  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
} // Node-link tree diagram using the Reingold-Tilford "tidy" algorithm


/* harmony default export */ __webpack_exports__["default"] = (function () {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = null;

  function tree(root) {
    var t = treeRoot(root); // Compute the layout using Buchheim et al.’s algorithm.

    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk); // If a fixed node size is specified, scale x and y.

    if (nodeSize) root.eachBefore(sizeNode); // If a fixed tree size is specified, scale x and y based on the extent.
    // Compute the left-most, right-most, and depth-most nodes for extents.
    else {
        var left = root,
            right = root,
            bottom = root;
        root.eachBefore(function (node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var s = left === right ? 1 : separation(left, right) / 2,
            tx = s - left.x,
            kx = dx / (right.x + s + tx),
            ky = dy / (bottom.depth || 1);
        root.eachBefore(function (node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
    return root;
  } // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
  // applied recursively to the children of v, as well as the function
  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
  // node v is placed to the midpoint of its outermost children.


  function firstWalk(v) {
    var children = v.children,
        siblings = v.parent.children,
        w = v.i ? siblings[v.i - 1] : null;

    if (children) {
      executeShifts(v);
      var midpoint = (children[0].z + children[children.length - 1].z) / 2;

      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }

    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  } // Computes all real x-coordinates by summing up the modifiers recursively.


  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  } // The core of the algorithm. Here, a new subtree is combined with the
  // previous subtrees. Threads are used to traverse the inside and outside
  // contours of the left and right subtree up to the highest common level. The
  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
  // superscript o means outside and i means inside, the subscript - means left
  // subtree and + means right subtree. For summing up the modifiers along the
  // contour, we use respective variables si+, si-, so-, and so+. Whenever two
  // nodes of the inside contours conflict, we compute the left one of the
  // greatest uncommon ancestors using the function ANCESTOR and call MOVE
  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
  // Finally, we add a new thread (if necessary).


  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v,
          vop = v,
          vim = w,
          vom = vip.parent.children[0],
          sip = vip.m,
          sop = vop.m,
          sim = vim.m,
          som = vom.m,
          shift;

      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);

        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }

        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }

      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }

      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }

    return ancestor;
  }

  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }

  tree.separation = function (x) {
    return arguments.length ? (separation = x, tree) : separation;
  };

  tree.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];
  };

  tree.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;
  };

  return tree;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/binary.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/binary.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      i,
      n = nodes.length,
      sum,
      sums = new Array(n + 1);

  for (sums[0] = sum = i = 0; i < n; ++i) {
    sums[i + 1] = sum += nodes[i].value;
  }

  partition(0, n, parent.value, x0, y0, x1, y1);

  function partition(i, j, value, x0, y0, x1, y1) {
    if (i >= j - 1) {
      var node = nodes[i];
      node.x0 = x0, node.y0 = y0;
      node.x1 = x1, node.y1 = y1;
      return;
    }

    var valueOffset = sums[i],
        valueTarget = value / 2 + valueOffset,
        k = i + 1,
        hi = j - 1;

    while (k < hi) {
      var mid = k + hi >>> 1;
      if (sums[mid] < valueTarget) k = mid + 1;else hi = mid;
    }

    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) --k;
    var valueLeft = sums[k] - valueOffset,
        valueRight = value - valueLeft;

    if (x1 - x0 > y1 - y0) {
      var xk = (x0 * valueRight + x1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, xk, y1);
      partition(k, j, valueRight, xk, y0, x1, y1);
    } else {
      var yk = (y0 * valueRight + y1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, x1, yk);
      partition(k, j, valueRight, x0, yk, x1, y1);
    }
  }
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/dice.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/dice.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (x1 - x0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k;
  }
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/index.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/index.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _round__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./round */ "./node_modules/d3-hierarchy/src/treemap/round.js");
/* harmony import */ var _squarify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./squarify */ "./node_modules/d3-hierarchy/src/treemap/squarify.js");
/* harmony import */ var _accessors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../accessors */ "./node_modules/d3-hierarchy/src/accessors.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constant */ "./node_modules/d3-hierarchy/src/constant.js");




/* harmony default export */ __webpack_exports__["default"] = (function () {
  var tile = _squarify__WEBPACK_IMPORTED_MODULE_1__["default"],
      round = false,
      dx = 1,
      dy = 1,
      paddingStack = [0],
      paddingInner = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"],
      paddingTop = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"],
      paddingRight = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"],
      paddingBottom = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"],
      paddingLeft = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"];

  function treemap(root) {
    root.x0 = root.y0 = 0;
    root.x1 = dx;
    root.y1 = dy;
    root.eachBefore(positionNode);
    paddingStack = [0];
    if (round) root.eachBefore(_round__WEBPACK_IMPORTED_MODULE_0__["default"]);
    return root;
  }

  function positionNode(node) {
    var p = paddingStack[node.depth],
        x0 = node.x0 + p,
        y0 = node.y0 + p,
        x1 = node.x1 - p,
        y1 = node.y1 - p;
    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
    node.x0 = x0;
    node.y0 = y0;
    node.x1 = x1;
    node.y1 = y1;

    if (node.children) {
      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x0 += paddingLeft(node) - p;
      y0 += paddingTop(node) - p;
      x1 -= paddingRight(node) - p;
      y1 -= paddingBottom(node) - p;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      tile(node, x0, y0, x1, y1);
    }
  }

  treemap.round = function (x) {
    return arguments.length ? (round = !!x, treemap) : round;
  };

  treemap.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
  };

  treemap.tile = function (x) {
    return arguments.length ? (tile = Object(_accessors__WEBPACK_IMPORTED_MODULE_2__["required"])(x), treemap) : tile;
  };

  treemap.padding = function (x) {
    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
  };

  treemap.paddingInner = function (x) {
    return arguments.length ? (paddingInner = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingInner;
  };

  treemap.paddingOuter = function (x) {
    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
  };

  treemap.paddingTop = function (x) {
    return arguments.length ? (paddingTop = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingTop;
  };

  treemap.paddingRight = function (x) {
    return arguments.length ? (paddingRight = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingRight;
  };

  treemap.paddingBottom = function (x) {
    return arguments.length ? (paddingBottom = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingBottom;
  };

  treemap.paddingLeft = function (x) {
    return arguments.length ? (paddingLeft = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingLeft;
  };

  return treemap;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/resquarify.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/resquarify.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slice */ "./node_modules/d3-hierarchy/src/treemap/slice.js");
/* harmony import */ var _squarify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./squarify */ "./node_modules/d3-hierarchy/src/treemap/squarify.js");



/* harmony default export */ __webpack_exports__["default"] = ((function custom(ratio) {
  function resquarify(parent, x0, y0, x1, y1) {
    if ((rows = parent._squarify) && rows.ratio === ratio) {
      var rows,
          row,
          nodes,
          i,
          j = -1,
          n,
          m = rows.length,
          value = parent.value;

      while (++j < m) {
        row = rows[j], nodes = row.children;

        for (i = row.value = 0, n = nodes.length; i < n; ++i) {
          row.value += nodes[i].value;
        }

        if (row.dice) Object(_dice__WEBPACK_IMPORTED_MODULE_0__["default"])(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);else Object(_slice__WEBPACK_IMPORTED_MODULE_1__["default"])(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
        value -= row.value;
      }
    } else {
      parent._squarify = rows = Object(_squarify__WEBPACK_IMPORTED_MODULE_2__["squarifyRatio"])(ratio, parent, x0, y0, x1, y1);
      rows.ratio = ratio;
    }
  }

  resquarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return resquarify;
})(_squarify__WEBPACK_IMPORTED_MODULE_2__["phi"]));

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/round.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/round.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/slice.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/slice.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (y1 - y0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k;
  }
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/sliceDice.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/sliceDice.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slice */ "./node_modules/d3-hierarchy/src/treemap/slice.js");


/* harmony default export */ __webpack_exports__["default"] = (function (parent, x0, y0, x1, y1) {
  (parent.depth & 1 ? _slice__WEBPACK_IMPORTED_MODULE_1__["default"] : _dice__WEBPACK_IMPORTED_MODULE_0__["default"])(parent, x0, y0, x1, y1);
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/squarify.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/squarify.js ***!
  \***********************************************************/
/*! exports provided: phi, squarifyRatio, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "phi", function() { return phi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squarifyRatio", function() { return squarifyRatio; });
/* harmony import */ var _dice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slice */ "./node_modules/d3-hierarchy/src/treemap/slice.js");


var phi = (1 + Math.sqrt(5)) / 2;
function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
  var rows = [],
      nodes = parent.children,
      row,
      nodeValue,
      i0 = 0,
      i1 = 0,
      n = nodes.length,
      dx,
      dy,
      value = parent.value,
      sumValue,
      minValue,
      maxValue,
      newRatio,
      minRatio,
      alpha,
      beta;

  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0; // Find the next non-empty node.

    do {
      sumValue = nodes[i1++].value;
    } while (!sumValue && i1 < n);

    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue); // Keep adding nodes while the aspect ratio maintains or improves.

    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue) minValue = nodeValue;
      if (nodeValue > maxValue) maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);

      if (newRatio > minRatio) {
        sumValue -= nodeValue;
        break;
      }

      minRatio = newRatio;
    } // Position and record the row orientation.


    rows.push(row = {
      value: sumValue,
      dice: dx < dy,
      children: nodes.slice(i0, i1)
    });
    if (row.dice) Object(_dice__WEBPACK_IMPORTED_MODULE_0__["default"])(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else Object(_slice__WEBPACK_IMPORTED_MODULE_1__["default"])(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
    value -= sumValue, i0 = i1;
  }

  return rows;
}
/* harmony default export */ __webpack_exports__["default"] = ((function custom(ratio) {
  function squarify(parent, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent, x0, y0, x1, y1);
  }

  squarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return squarify;
})(phi));

/***/ }),

/***/ "./node_modules/d3-interpolate/src/array.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/array.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value */ "./node_modules/d3-interpolate/src/value.js");

/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) {
    x[i] = Object(_value__WEBPACK_IMPORTED_MODULE_0__["default"])(a[i], b[i]);
  }

  for (; i < nb; ++i) {
    c[i] = b[i];
  }

  return function (t) {
    for (i = 0; i < na; ++i) {
      c[i] = x[i](t);
    }

    return c;
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/basis.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/basis.js ***!
  \**************************************************/
/*! exports provided: basis, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "basis", function() { return basis; });
function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1,
      t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
}
/* harmony default export */ __webpack_exports__["default"] = (function (values) {
  var n = values.length - 1;
  return function (t) {
    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/basisClosed.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-interpolate/src/basisClosed.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-interpolate/src/basis.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values) {
  var n = values.length;
  return function (t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return Object(_basis__WEBPACK_IMPORTED_MODULE_0__["basis"])((t - i / n) * n, v0, v1, v2, v3);
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/color.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/color.js ***!
  \**************************************************/
/*! exports provided: hue, gamma, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hue", function() { return hue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gamma", function() { return gamma; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return nogamma; });
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-interpolate/src/constant.js");


function linear(a, d) {
  return function (t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
}
function gamma(y) {
  return (y = +y) === 1 ? nogamma : function (a, b) {
    return b - a ? exponential(a, b, y) : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
  };
}
function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
}

/***/ }),

/***/ "./node_modules/d3-interpolate/src/constant.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/constant.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/cubehelix.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-interpolate/src/cubehelix.js ***!
  \******************************************************/
/*! exports provided: default, cubehelixLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubehelixLong", function() { return cubehelixLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");



function cubehelix(hue) {
  return function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(end)).h),
          s = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.s, end.s),
          l = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
          opacity = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
      return function (t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;
    return cubehelix;
  }(1);
}

/* harmony default export */ __webpack_exports__["default"] = (cubehelix(_color__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var cubehelixLong = cubehelix(_color__WEBPACK_IMPORTED_MODULE_1__["default"]);

/***/ }),

/***/ "./node_modules/d3-interpolate/src/date.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-interpolate/src/date.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var d = new Date();
  return a = +a, b -= a, function (t) {
    return d.setTime(a + b * t), d;
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/discrete.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/discrete.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/hcl.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hcl.js ***!
  \************************************************/
/*! exports provided: default, hclLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hclLong", function() { return hclLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");



function hcl(hue) {
  return function (start, end) {
    var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hcl"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hcl"])(end)).h),
        c = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.c, end.c),
        l = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
        opacity = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

/* harmony default export */ __webpack_exports__["default"] = (hcl(_color__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var hclLong = hcl(_color__WEBPACK_IMPORTED_MODULE_1__["default"]);

/***/ }),

/***/ "./node_modules/d3-interpolate/src/hsl.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hsl.js ***!
  \************************************************/
/*! exports provided: default, hslLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hslLong", function() { return hslLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");



function hsl(hue) {
  return function (start, end) {
    var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hsl"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hsl"])(end)).h),
        s = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.s, end.s),
        l = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
        opacity = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

/* harmony default export */ __webpack_exports__["default"] = (hsl(_color__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var hslLong = hsl(_color__WEBPACK_IMPORTED_MODULE_1__["default"]);

/***/ }),

/***/ "./node_modules/d3-interpolate/src/hue.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hue.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");

/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var i = Object(_color__WEBPACK_IMPORTED_MODULE_0__["hue"])(+a, +b);
  return function (t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/index.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/index.js ***!
  \**************************************************/
/*! exports provided: interpolate, interpolateArray, interpolateBasis, interpolateBasisClosed, interpolateDate, interpolateDiscrete, interpolateHue, interpolateNumber, interpolateObject, interpolateRound, interpolateString, interpolateTransformCss, interpolateTransformSvg, interpolateZoom, interpolateRgb, interpolateRgbBasis, interpolateRgbBasisClosed, interpolateHsl, interpolateHslLong, interpolateLab, interpolateHcl, interpolateHclLong, interpolateCubehelix, interpolateCubehelixLong, piecewise, quantize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value */ "./node_modules/d3-interpolate/src/value.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return _value__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-interpolate/src/array.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateArray", function() { return _array__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-interpolate/src/basis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasis", function() { return _basis__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _basisClosed__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./basisClosed */ "./node_modules/d3-interpolate/src/basisClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasisClosed", function() { return _basisClosed__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./date */ "./node_modules/d3-interpolate/src/date.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDate", function() { return _date__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _discrete__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./discrete */ "./node_modules/d3-interpolate/src/discrete.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDiscrete", function() { return _discrete__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _hue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hue */ "./node_modules/d3-interpolate/src/hue.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHue", function() { return _hue__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./number */ "./node_modules/d3-interpolate/src/number.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateNumber", function() { return _number__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _object__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./object */ "./node_modules/d3-interpolate/src/object.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateObject", function() { return _object__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _round__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./round */ "./node_modules/d3-interpolate/src/round.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRound", function() { return _round__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./string */ "./node_modules/d3-interpolate/src/string.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateString", function() { return _string__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _transform_index__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./transform/index */ "./node_modules/d3-interpolate/src/transform/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformCss", function() { return _transform_index__WEBPACK_IMPORTED_MODULE_11__["interpolateTransformCss"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformSvg", function() { return _transform_index__WEBPACK_IMPORTED_MODULE_11__["interpolateTransformSvg"]; });

/* harmony import */ var _zoom__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./zoom */ "./node_modules/d3-interpolate/src/zoom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateZoom", function() { return _zoom__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _rgb__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./rgb */ "./node_modules/d3-interpolate/src/rgb.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgb", function() { return _rgb__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasis", function() { return _rgb__WEBPACK_IMPORTED_MODULE_13__["rgbBasis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasisClosed", function() { return _rgb__WEBPACK_IMPORTED_MODULE_13__["rgbBasisClosed"]; });

/* harmony import */ var _hsl__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./hsl */ "./node_modules/d3-interpolate/src/hsl.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHsl", function() { return _hsl__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHslLong", function() { return _hsl__WEBPACK_IMPORTED_MODULE_14__["hslLong"]; });

/* harmony import */ var _lab__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./lab */ "./node_modules/d3-interpolate/src/lab.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateLab", function() { return _lab__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _hcl__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./hcl */ "./node_modules/d3-interpolate/src/hcl.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHcl", function() { return _hcl__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHclLong", function() { return _hcl__WEBPACK_IMPORTED_MODULE_16__["hclLong"]; });

/* harmony import */ var _cubehelix__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./cubehelix */ "./node_modules/d3-interpolate/src/cubehelix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelix", function() { return _cubehelix__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelixLong", function() { return _cubehelix__WEBPACK_IMPORTED_MODULE_17__["cubehelixLong"]; });

/* harmony import */ var _piecewise__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./piecewise */ "./node_modules/d3-interpolate/src/piecewise.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "piecewise", function() { return _piecewise__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _quantize__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./quantize */ "./node_modules/d3-interpolate/src/quantize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantize", function() { return _quantize__WEBPACK_IMPORTED_MODULE_19__["default"]; });






















/***/ }),

/***/ "./node_modules/d3-interpolate/src/lab.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/lab.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lab; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");


function lab(start, end) {
  var l = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["lab"])(start)).l, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["lab"])(end)).l),
      a = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.a, end.a),
      b = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.b, end.b),
      opacity = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
  return function (t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}

/***/ }),

/***/ "./node_modules/d3-interpolate/src/number.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/number.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return a = +a, b -= a, function (t) {
    return a + b * t;
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/object.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/object.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value */ "./node_modules/d3-interpolate/src/value.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }


/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var i = {},
      c = {},
      k;
  if (a === null || _typeof(a) !== "object") a = {};
  if (b === null || _typeof(b) !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = Object(_value__WEBPACK_IMPORTED_MODULE_0__["default"])(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function (t) {
    for (k in i) {
      c[k] = i[k](t);
    }

    return c;
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/piecewise.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-interpolate/src/piecewise.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return piecewise; });
function piecewise(interpolate, values) {
  var i = 0,
      n = values.length - 1,
      v = values[0],
      I = new Array(n < 0 ? 0 : n);

  while (i < n) {
    I[i] = interpolate(v, v = values[++i]);
  }

  return function (t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}

/***/ }),

/***/ "./node_modules/d3-interpolate/src/quantize.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/quantize.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (interpolator, n) {
  var samples = new Array(n);

  for (var i = 0; i < n; ++i) {
    samples[i] = interpolator(i / (n - 1));
  }

  return samples;
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/rgb.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/rgb.js ***!
  \************************************************/
/*! exports provided: default, rgbBasis, rgbBasisClosed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbBasis", function() { return rgbBasis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbBasisClosed", function() { return rgbBasisClosed; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-interpolate/src/basis.js");
/* harmony import */ var _basisClosed__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basisClosed */ "./node_modules/d3-interpolate/src/basisClosed.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");




/* harmony default export */ __webpack_exports__["default"] = ((function rgbGamma(y) {
  var color = Object(_color__WEBPACK_IMPORTED_MODULE_3__["gamma"])(y);

  function rgb(start, end) {
    var r = color((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(start)).r, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = Object(_color__WEBPACK_IMPORTED_MODULE_3__["default"])(start.opacity, end.opacity);
    return function (t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;
  return rgb;
})(1));

function rgbSpline(spline) {
  return function (colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i,
        color;

    for (i = 0; i < n; ++i) {
      color = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }

    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function (t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(_basis__WEBPACK_IMPORTED_MODULE_1__["default"]);
var rgbBasisClosed = rgbSpline(_basisClosed__WEBPACK_IMPORTED_MODULE_2__["default"]);

/***/ }),

/***/ "./node_modules/d3-interpolate/src/round.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/round.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return a = +a, b -= a, function (t) {
    return Math.round(a + b * t);
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/string.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/string.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-interpolate/src/number.js");

var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function () {
    return b;
  };
}

function one(b) {
  return function (t) {
    return b(t) + "";
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0,
      // scan index for next number in b
  am,
      // current match in a
  bm,
      // current match in b
  bs,
      // string preceding current number in b, if any
  i = -1,
      // index in s
  s = [],
      // string constants and placeholders
  q = []; // number interpolators
  // Coerce inputs to strings.

  a = a + "", b = b + ""; // Interpolate pairs of numbers in a & b.

  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }

    if ((am = am[0]) === (bm = bm[0])) {
      // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else {
      // interpolate non-matching numbers
      s[++i] = null;
      q.push({
        i: i,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(am, bm)
      });
    }

    bi = reB.lastIndex;
  } // Add remains of b.


  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  } // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.


  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {
    for (var i = 0, o; i < b; ++i) {
      s[(o = q[i]).i] = o.x(t);
    }

    return s.join("");
  });
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/decompose.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/decompose.js ***!
  \****************************************************************/
/*! exports provided: identity, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
var degrees = 180 / Math.PI;
var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
/* harmony default export */ __webpack_exports__["default"] = (function (a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/index.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/index.js ***!
  \************************************************************/
/*! exports provided: interpolateTransformCss, interpolateTransformSvg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformCss", function() { return interpolateTransformCss; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformSvg", function() { return interpolateTransformSvg; });
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../number */ "./node_modules/d3-interpolate/src/number.js");
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse */ "./node_modules/d3-interpolate/src/transform/parse.js");



function interpolateTransform(parse, pxComma, pxParen, degParen) {
  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({
        i: i - 4,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(xa, xb)
      }, {
        i: i - 2,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(ya, yb)
      });
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path

      q.push({
        i: s.push(pop(s) + "rotate(", null, degParen) - 2,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({
        i: s.push(pop(s) + "skewX(", null, degParen) - 2,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({
        i: i - 4,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(xa, xb)
      }, {
        i: i - 2,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(ya, yb)
      });
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function (a, b) {
    var s = [],
        // string constants and placeholders
    q = []; // number interpolators

    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc

    return function (t) {
      var i = -1,
          n = q.length,
          o;

      while (++i < n) {
        s[(o = q[i]).i] = o.x(t);
      }

      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(_parse__WEBPACK_IMPORTED_MODULE_1__["parseCss"], "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(_parse__WEBPACK_IMPORTED_MODULE_1__["parseSvg"], ", ", ")", ")");

/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/parse.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/parse.js ***!
  \************************************************************/
/*! exports provided: parseCss, parseSvg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseCss", function() { return parseCss; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseSvg", function() { return parseSvg; });
/* harmony import */ var _decompose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decompose */ "./node_modules/d3-interpolate/src/transform/decompose.js");

var cssNode, cssRoot, cssView, svgNode;
function parseCss(value) {
  if (value === "none") return _decompose__WEBPACK_IMPORTED_MODULE_0__["identity"];
  if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
  cssNode.style.transform = value;
  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
  cssRoot.removeChild(cssNode);
  value = value.slice(7, -1).split(",");
  return Object(_decompose__WEBPACK_IMPORTED_MODULE_0__["default"])(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
}
function parseSvg(value) {
  if (value == null) return _decompose__WEBPACK_IMPORTED_MODULE_0__["identity"];
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose__WEBPACK_IMPORTED_MODULE_0__["identity"];
  value = value.matrix;
  return Object(_decompose__WEBPACK_IMPORTED_MODULE_0__["default"])(value.a, value.b, value.c, value.d, value.e, value.f);
}

/***/ }),

/***/ "./node_modules/d3-interpolate/src/value.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/value.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _rgb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rgb */ "./node_modules/d3-interpolate/src/rgb.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array */ "./node_modules/d3-interpolate/src/array.js");
/* harmony import */ var _date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./date */ "./node_modules/d3-interpolate/src/date.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number */ "./node_modules/d3-interpolate/src/number.js");
/* harmony import */ var _object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./object */ "./node_modules/d3-interpolate/src/object.js");
/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./string */ "./node_modules/d3-interpolate/src/string.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-interpolate/src/constant.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }









/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var t = _typeof(b),
      c;

  return b == null || t === "boolean" ? Object(_constant__WEBPACK_IMPORTED_MODULE_7__["default"])(b) : (t === "number" ? _number__WEBPACK_IMPORTED_MODULE_4__["default"] : t === "string" ? (c = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["color"])(b)) ? (b = c, _rgb__WEBPACK_IMPORTED_MODULE_1__["default"]) : _string__WEBPACK_IMPORTED_MODULE_6__["default"] : b instanceof d3_color__WEBPACK_IMPORTED_MODULE_0__["color"] ? _rgb__WEBPACK_IMPORTED_MODULE_1__["default"] : b instanceof Date ? _date__WEBPACK_IMPORTED_MODULE_3__["default"] : Array.isArray(b) ? _array__WEBPACK_IMPORTED_MODULE_2__["default"] : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object__WEBPACK_IMPORTED_MODULE_5__["default"] : _number__WEBPACK_IMPORTED_MODULE_4__["default"])(a, b);
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/zoom.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-interpolate/src/zoom.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var rho = Math.SQRT2,
    rho2 = 2,
    rho4 = 4,
    epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
} // p0 = [ux0, uy0, w0]
// p1 = [ux1, uy1, w1]


/* harmony default export */ __webpack_exports__["default"] = (function (p0, p1) {
  var ux0 = p0[0],
      uy0 = p0[1],
      w0 = p0[2],
      ux1 = p1[0],
      uy1 = p1[1],
      w1 = p1[2],
      dx = ux1 - ux0,
      dy = uy1 - uy0,
      d2 = dx * dx + dy * dy,
      i,
      S; // Special case for u0 ≅ u1.

  if (d2 < epsilon2) {
    S = Math.log(w1 / w0) / rho;

    i = function i(t) {
      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];
    };
  } // General case.
  else {
      var d1 = Math.sqrt(d2),
          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / rho;

      i = function i(t) {
        var s = t * S,
            coshr0 = cosh(r0),
            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];
      };
    }

  i.duration = S * 1000;
  return i;
});

/***/ }),

/***/ "./node_modules/d3-path/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-path/src/index.js ***!
  \*******************************************/
/*! exports provided: path */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path */ "./node_modules/d3-path/src/path.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "path", function() { return _path__WEBPACK_IMPORTED_MODULE_0__["default"]; });



/***/ }),

/***/ "./node_modules/d3-path/src/path.js":
/*!******************************************!*\
  !*** ./node_modules/d3-path/src/path.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var pi = Math.PI,
    tau = 2 * pi,
    epsilon = 1e-6,
    tauEpsilon = tau - epsilon;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath

  this._ = "";
}

function path() {
  return new Path();
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function moveTo(x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function closePath() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function lineTo(x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function arcTo(x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x1,y1).

    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
      // Equivalently, is (x1,y1) coincident with (x2,y2)?
      // Or, is the radius zero? Line to (x1,y1).
      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
          this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        } // Otherwise, draw an arc!
        else {
            var x20 = x2 - x0,
                y20 = y2 - y0,
                l21_2 = x21 * x21 + y21 * y21,
                l20_2 = x20 * x20 + y20 * y20,
                l21 = Math.sqrt(l21_2),
                l01 = Math.sqrt(l01_2),
                l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
                t01 = l / l01,
                t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.

            if (Math.abs(t01 - 1) > epsilon) {
              this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
            }

            this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
          }
  },
  arc: function arc(x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x0,y0).

    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
        this._ += "L" + x0 + "," + y0;
      } // Is this arc empty? We’re done.


    if (!r) return; // Does the angle go the wrong way? Flip the direction.

    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.

    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } // Is this arc non-empty? Draw an arc!
    else if (da > epsilon) {
        this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
      }
  },
  rect: function rect(x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function toString() {
    return this._;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (path);

/***/ }),

/***/ "./node_modules/d3-polygon/src/area.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-polygon/src/area.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (polygon) {
  var i = -1,
      n = polygon.length,
      a,
      b = polygon[n - 1],
      area = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    area += a[1] * b[0] - a[0] * b[1];
  }

  return area / 2;
});

/***/ }),

/***/ "./node_modules/d3-polygon/src/centroid.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-polygon/src/centroid.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (polygon) {
  var i = -1,
      n = polygon.length,
      x = 0,
      y = 0,
      a,
      b = polygon[n - 1],
      c,
      k = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    k += c = a[0] * b[1] - b[0] * a[1];
    x += (a[0] + b[0]) * c;
    y += (a[1] + b[1]) * c;
  }

  return k *= 3, [x / k, y / k];
});

/***/ }),

/***/ "./node_modules/d3-polygon/src/contains.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-polygon/src/contains.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (polygon, point) {
  var n = polygon.length,
      p = polygon[n - 1],
      x = point[0],
      y = point[1],
      x0 = p[0],
      y0 = p[1],
      x1,
      y1,
      inside = false;

  for (var i = 0; i < n; ++i) {
    p = polygon[i], x1 = p[0], y1 = p[1];
    if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1) inside = !inside;
    x0 = x1, y0 = y1;
  }

  return inside;
});

/***/ }),

/***/ "./node_modules/d3-polygon/src/cross.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-polygon/src/cross.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of
// the 3D cross product in a quadrant I Cartesian coordinate system (+x is
// right, +y is up). Returns a positive value if ABC is counter-clockwise,
// negative if clockwise, and zero if the points are collinear.
/* harmony default export */ __webpack_exports__["default"] = (function (a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
});

/***/ }),

/***/ "./node_modules/d3-polygon/src/hull.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-polygon/src/hull.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cross__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cross */ "./node_modules/d3-polygon/src/cross.js");


function lexicographicOrder(a, b) {
  return a[0] - b[0] || a[1] - b[1];
} // Computes the upper convex hull per the monotone chain algorithm.
// Assumes points.length >= 3, is sorted by x, unique in y.
// Returns an array of indices into points in left-to-right order.


function computeUpperHullIndexes(points) {
  var n = points.length,
      indexes = [0, 1],
      size = 2;

  for (var i = 2; i < n; ++i) {
    while (size > 1 && Object(_cross__WEBPACK_IMPORTED_MODULE_0__["default"])(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) {
      --size;
    }

    indexes[size++] = i;
  }

  return indexes.slice(0, size); // remove popped points
}

/* harmony default export */ __webpack_exports__["default"] = (function (points) {
  if ((n = points.length) < 3) return null;
  var i,
      n,
      sortedPoints = new Array(n),
      flippedPoints = new Array(n);

  for (i = 0; i < n; ++i) {
    sortedPoints[i] = [+points[i][0], +points[i][1], i];
  }

  sortedPoints.sort(lexicographicOrder);

  for (i = 0; i < n; ++i) {
    flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];
  }

  var upperIndexes = computeUpperHullIndexes(sortedPoints),
      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.

  var skipLeft = lowerIndexes[0] === upperIndexes[0],
      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
      hull = []; // Add upper hull in right-to-l order.
  // Then add lower hull in left-to-right order.

  for (i = upperIndexes.length - 1; i >= 0; --i) {
    hull.push(points[sortedPoints[upperIndexes[i]][2]]);
  }

  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) {
    hull.push(points[sortedPoints[lowerIndexes[i]][2]]);
  }

  return hull;
});

/***/ }),

/***/ "./node_modules/d3-polygon/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-polygon/src/index.js ***!
  \**********************************************/
/*! exports provided: polygonArea, polygonCentroid, polygonHull, polygonContains, polygonLength */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./area */ "./node_modules/d3-polygon/src/area.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonArea", function() { return _area__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _centroid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./centroid */ "./node_modules/d3-polygon/src/centroid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonCentroid", function() { return _centroid__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _hull__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hull */ "./node_modules/d3-polygon/src/hull.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonHull", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _contains__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contains */ "./node_modules/d3-polygon/src/contains.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonContains", function() { return _contains__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _length__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./length */ "./node_modules/d3-polygon/src/length.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonLength", function() { return _length__WEBPACK_IMPORTED_MODULE_4__["default"]; });







/***/ }),

/***/ "./node_modules/d3-polygon/src/length.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-polygon/src/length.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (polygon) {
  var i = -1,
      n = polygon.length,
      b = polygon[n - 1],
      xa,
      ya,
      xb = b[0],
      yb = b[1],
      perimeter = 0;

  while (++i < n) {
    xa = xb;
    ya = yb;
    b = polygon[i];
    xb = b[0];
    yb = b[1];
    xa -= xb;
    ya -= yb;
    perimeter += Math.sqrt(xa * xa + ya * ya);
  }

  return perimeter;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/add.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-quadtree/src/add.js ***!
  \*********************************************/
/*! exports provided: default, addAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addAll", function() { return addAll; });
/* harmony default export */ __webpack_exports__["default"] = (function (d) {
  var x = +this._x.call(null, d),
      y = +this._y.call(null, d);
  return add(this.cover(x, y), x, y, d);
});

function add(tree, x, y, d) {
  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

  var parent,
      node = tree._root,
      leaf = {
    data: d
  },
      x0 = tree._x0,
      y0 = tree._y0,
      x1 = tree._x1,
      y1 = tree._y1,
      xm,
      ym,
      xp,
      yp,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.

  while (node.length) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
  } // Is the new point is exactly coincident with the existing point?


  xp = +tree._x.call(null, node.data);
  yp = +tree._y.call(null, node.data);
  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.

  do {
    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));

  return parent[j] = node, parent[i] = leaf, tree;
}

function addAll(data) {
  var d,
      i,
      n = data.length,
      x,
      y,
      xz = new Array(n),
      yz = new Array(n),
      x0 = Infinity,
      y0 = Infinity,
      x1 = -Infinity,
      y1 = -Infinity; // Compute the points and their extent.

  for (i = 0; i < n; ++i) {
    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
    xz[i] = x;
    yz[i] = y;
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
  } // If there were no (valid) points, abort.


  if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.

  this.cover(x0, y0).cover(x1, y1); // Add the new points.

  for (i = 0; i < n; ++i) {
    add(this, xz[i], yz[i], data[i]);
  }

  return this;
}

/***/ }),

/***/ "./node_modules/d3-quadtree/src/cover.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-quadtree/src/cover.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x, y) {
  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

  var x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1; // If the quadtree has no extent, initialize them.
  // Integer extent are necessary so that if we later double the extent,
  // the existing quadrant boundaries don’t change due to floating point error!

  if (isNaN(x0)) {
    x1 = (x0 = Math.floor(x)) + 1;
    y1 = (y0 = Math.floor(y)) + 1;
  } // Otherwise, double repeatedly to cover.
  else {
      var z = x1 - x0,
          node = this._root,
          parent,
          i;

      while (x0 > x || x >= x1 || y0 > y || y >= y1) {
        i = (y < y0) << 1 | x < x0;
        parent = new Array(4), parent[i] = node, node = parent, z *= 2;

        switch (i) {
          case 0:
            x1 = x0 + z, y1 = y0 + z;
            break;

          case 1:
            x0 = x1 - z, y1 = y0 + z;
            break;

          case 2:
            x1 = x0 + z, y0 = y1 - z;
            break;

          case 3:
            x0 = x1 - z, y0 = y1 - z;
            break;
        }
      }

      if (this._root && this._root.length) this._root = node;
    }

  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  return this;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/data.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/data.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var data = [];
  this.visit(function (node) {
    if (!node.length) do {
      data.push(node.data);
    } while (node = node.next);
  });
  return data;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/extent.js":
/*!************************************************!*\
  !*** ./node_modules/d3-quadtree/src/extent.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (_) {
  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/find.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/find.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quad */ "./node_modules/d3-quadtree/src/quad.js");

/* harmony default export */ __webpack_exports__["default"] = (function (x, y, radius) {
  var data,
      x0 = this._x0,
      y0 = this._y0,
      x1,
      y1,
      x2,
      y2,
      x3 = this._x1,
      y3 = this._y1,
      quads = [],
      node = this._root,
      q,
      i;
  if (node) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node, x0, y0, x3, y3));
  if (radius == null) radius = Infinity;else {
    x0 = x - radius, y0 = y - radius;
    x3 = x + radius, y3 = y + radius;
    radius *= radius;
  }

  while (q = quads.pop()) {
    // Stop searching if this quadrant can’t contain a closer node.
    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.

    if (node.length) {
      var xm = (x1 + x2) / 2,
          ym = (y1 + y2) / 2;
      quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node[3], xm, ym, x2, y2), new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node[2], x1, ym, xm, y2), new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node[1], xm, y1, x2, ym), new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.

      if (i = (y >= ym) << 1 | x >= xm) {
        q = quads[quads.length - 1];
        quads[quads.length - 1] = quads[quads.length - 1 - i];
        quads[quads.length - 1 - i] = q;
      }
    } // Visit this point. (Visiting coincident points isn’t necessary!)
    else {
        var dx = x - +this._x.call(null, node.data),
            dy = y - +this._y.call(null, node.data),
            d2 = dx * dx + dy * dy;

        if (d2 < radius) {
          var d = Math.sqrt(radius = d2);
          x0 = x - d, y0 = y - d;
          x3 = x + d, y3 = y + d;
          data = node.data;
        }
      }
  }

  return data;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-quadtree/src/index.js ***!
  \***********************************************/
/*! exports provided: quadtree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quadtree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quadtree */ "./node_modules/d3-quadtree/src/quadtree.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quadtree", function() { return _quadtree__WEBPACK_IMPORTED_MODULE_0__["default"]; });



/***/ }),

/***/ "./node_modules/d3-quadtree/src/quad.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/quad.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (node, x0, y0, x1, y1) {
  this.node = node;
  this.x0 = x0;
  this.y0 = y0;
  this.x1 = x1;
  this.y1 = y1;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/quadtree.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-quadtree/src/quadtree.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quadtree; });
/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add */ "./node_modules/d3-quadtree/src/add.js");
/* harmony import */ var _cover__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cover */ "./node_modules/d3-quadtree/src/cover.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ "./node_modules/d3-quadtree/src/data.js");
/* harmony import */ var _extent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extent */ "./node_modules/d3-quadtree/src/extent.js");
/* harmony import */ var _find__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./find */ "./node_modules/d3-quadtree/src/find.js");
/* harmony import */ var _remove__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./remove */ "./node_modules/d3-quadtree/src/remove.js");
/* harmony import */ var _root__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./root */ "./node_modules/d3-quadtree/src/root.js");
/* harmony import */ var _size__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./size */ "./node_modules/d3-quadtree/src/size.js");
/* harmony import */ var _visit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./visit */ "./node_modules/d3-quadtree/src/visit.js");
/* harmony import */ var _visitAfter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./visitAfter */ "./node_modules/d3-quadtree/src/visitAfter.js");
/* harmony import */ var _x__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./x */ "./node_modules/d3-quadtree/src/x.js");
/* harmony import */ var _y__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./y */ "./node_modules/d3-quadtree/src/y.js");












function quadtree(nodes, x, y) {
  var tree = new Quadtree(x == null ? _x__WEBPACK_IMPORTED_MODULE_10__["defaultX"] : x, y == null ? _y__WEBPACK_IMPORTED_MODULE_11__["defaultY"] : y, NaN, NaN, NaN, NaN);
  return nodes == null ? tree : tree.addAll(nodes);
}

function Quadtree(x, y, x0, y0, x1, y1) {
  this._x = x;
  this._y = y;
  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  this._root = undefined;
}

function leaf_copy(leaf) {
  var copy = {
    data: leaf.data
  },
      next = copy;

  while (leaf = leaf.next) {
    next = next.next = {
      data: leaf.data
    };
  }

  return copy;
}

var treeProto = quadtree.prototype = Quadtree.prototype;

treeProto.copy = function () {
  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
      node = this._root,
      nodes,
      child;
  if (!node) return copy;
  if (!node.length) return copy._root = leaf_copy(node), copy;
  nodes = [{
    source: node,
    target: copy._root = new Array(4)
  }];

  while (node = nodes.pop()) {
    for (var i = 0; i < 4; ++i) {
      if (child = node.source[i]) {
        if (child.length) nodes.push({
          source: child,
          target: node.target[i] = new Array(4)
        });else node.target[i] = leaf_copy(child);
      }
    }
  }

  return copy;
};

treeProto.add = _add__WEBPACK_IMPORTED_MODULE_0__["default"];
treeProto.addAll = _add__WEBPACK_IMPORTED_MODULE_0__["addAll"];
treeProto.cover = _cover__WEBPACK_IMPORTED_MODULE_1__["default"];
treeProto.data = _data__WEBPACK_IMPORTED_MODULE_2__["default"];
treeProto.extent = _extent__WEBPACK_IMPORTED_MODULE_3__["default"];
treeProto.find = _find__WEBPACK_IMPORTED_MODULE_4__["default"];
treeProto.remove = _remove__WEBPACK_IMPORTED_MODULE_5__["default"];
treeProto.removeAll = _remove__WEBPACK_IMPORTED_MODULE_5__["removeAll"];
treeProto.root = _root__WEBPACK_IMPORTED_MODULE_6__["default"];
treeProto.size = _size__WEBPACK_IMPORTED_MODULE_7__["default"];
treeProto.visit = _visit__WEBPACK_IMPORTED_MODULE_8__["default"];
treeProto.visitAfter = _visitAfter__WEBPACK_IMPORTED_MODULE_9__["default"];
treeProto.x = _x__WEBPACK_IMPORTED_MODULE_10__["default"];
treeProto.y = _y__WEBPACK_IMPORTED_MODULE_11__["default"];

/***/ }),

/***/ "./node_modules/d3-quadtree/src/remove.js":
/*!************************************************!*\
  !*** ./node_modules/d3-quadtree/src/remove.js ***!
  \************************************************/
/*! exports provided: default, removeAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeAll", function() { return removeAll; });
/* harmony default export */ __webpack_exports__["default"] = (function (d) {
  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

  var parent,
      node = this._root,
      retainer,
      previous,
      next,
      x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1,
      x,
      y,
      xm,
      ym,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return this; // Find the leaf node for the point.
  // While descending, also retain the deepest parent with a non-removed sibling.

  if (node.length) while (true) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
    if (!node.length) break;
    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;
  } // Find the point to remove.

  while (node.data !== d) {
    if (!(previous = node, node = node.next)) return this;
  }

  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.

  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.

  if (!parent) return this._root = next, this; // Remove this leaf.

  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.

  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {
    if (retainer) retainer[j] = node;else this._root = node;
  }

  return this;
});
function removeAll(data) {
  for (var i = 0, n = data.length; i < n; ++i) {
    this.remove(data[i]);
  }

  return this;
}

/***/ }),

/***/ "./node_modules/d3-quadtree/src/root.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/root.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return this._root;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/size.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/size.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var size = 0;
  this.visit(function (node) {
    if (!node.length) do {
      ++size;
    } while (node = node.next);
  });
  return size;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/visit.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-quadtree/src/visit.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quad */ "./node_modules/d3-quadtree/src/quad.js");

/* harmony default export */ __webpack_exports__["default"] = (function (callback) {
  var quads = [],
      q,
      node = this._root,
      child,
      x0,
      y0,
      x1,
      y1;
  if (node) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
      var xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[3]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, xm, ym, x1, y1));
      if (child = node[2]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, x0, ym, xm, y1));
      if (child = node[1]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, xm, y0, x1, ym));
      if (child = node[0]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, x0, y0, xm, ym));
    }
  }

  return this;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/visitAfter.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-quadtree/src/visitAfter.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quad */ "./node_modules/d3-quadtree/src/quad.js");

/* harmony default export */ __webpack_exports__["default"] = (function (callback) {
  var quads = [],
      next = [],
      q;
  if (this._root) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](this._root, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    var node = q.node;

    if (node.length) {
      var child,
          x0 = q.x0,
          y0 = q.y0,
          x1 = q.x1,
          y1 = q.y1,
          xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[0]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, x0, y0, xm, ym));
      if (child = node[1]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, xm, y0, x1, ym));
      if (child = node[2]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, x0, ym, xm, y1));
      if (child = node[3]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, xm, ym, x1, y1));
    }

    next.push(q);
  }

  while (q = next.pop()) {
    callback(q.node, q.x0, q.y0, q.x1, q.y1);
  }

  return this;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/x.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-quadtree/src/x.js ***!
  \*******************************************/
/*! exports provided: defaultX, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultX", function() { return defaultX; });
function defaultX(d) {
  return d[0];
}
/* harmony default export */ __webpack_exports__["default"] = (function (_) {
  return arguments.length ? (this._x = _, this) : this._x;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/y.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-quadtree/src/y.js ***!
  \*******************************************/
/*! exports provided: defaultY, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultY", function() { return defaultY; });
function defaultY(d) {
  return d[1];
}
/* harmony default export */ __webpack_exports__["default"] = (function (_) {
  return arguments.length ? (this._y = _, this) : this._y;
});

/***/ }),

/***/ "./node_modules/d3-random/src/bates.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-random/src/bates.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultSource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource */ "./node_modules/d3-random/src/defaultSource.js");
/* harmony import */ var _irwinHall__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./irwinHall */ "./node_modules/d3-random/src/irwinHall.js");


/* harmony default export */ __webpack_exports__["default"] = ((function sourceRandomBates(source) {
  function randomBates(n) {
    var randomIrwinHall = _irwinHall__WEBPACK_IMPORTED_MODULE_1__["default"].source(source)(n);
    return function () {
      return randomIrwinHall() / n;
    };
  }

  randomBates.source = sourceRandomBates;
  return randomBates;
})(_defaultSource__WEBPACK_IMPORTED_MODULE_0__["default"]));

/***/ }),

/***/ "./node_modules/d3-random/src/defaultSource.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-random/src/defaultSource.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Math.random();
});

/***/ }),

/***/ "./node_modules/d3-random/src/exponential.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-random/src/exponential.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultSource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource */ "./node_modules/d3-random/src/defaultSource.js");

/* harmony default export */ __webpack_exports__["default"] = ((function sourceRandomExponential(source) {
  function randomExponential(lambda) {
    return function () {
      return -Math.log(1 - source()) / lambda;
    };
  }

  randomExponential.source = sourceRandomExponential;
  return randomExponential;
})(_defaultSource__WEBPACK_IMPORTED_MODULE_0__["default"]));

/***/ }),

/***/ "./node_modules/d3-random/src/index.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-random/src/index.js ***!
  \*********************************************/
/*! exports provided: randomUniform, randomNormal, randomLogNormal, randomBates, randomIrwinHall, randomExponential */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uniform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uniform */ "./node_modules/d3-random/src/uniform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomUniform", function() { return _uniform__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _normal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normal */ "./node_modules/d3-random/src/normal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomNormal", function() { return _normal__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _logNormal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logNormal */ "./node_modules/d3-random/src/logNormal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomLogNormal", function() { return _logNormal__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _bates__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bates */ "./node_modules/d3-random/src/bates.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomBates", function() { return _bates__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _irwinHall__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./irwinHall */ "./node_modules/d3-random/src/irwinHall.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomIrwinHall", function() { return _irwinHall__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _exponential__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exponential */ "./node_modules/d3-random/src/exponential.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomExponential", function() { return _exponential__WEBPACK_IMPORTED_MODULE_5__["default"]; });








/***/ }),

/***/ "./node_modules/d3-random/src/irwinHall.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-random/src/irwinHall.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultSource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource */ "./node_modules/d3-random/src/defaultSource.js");

/* harmony default export */ __webpack_exports__["default"] = ((function sourceRandomIrwinHall(source) {
  function randomIrwinHall(n) {
    return function () {
      for (var sum = 0, i = 0; i < n; ++i) {
        sum += source();
      }

      return sum;
    };
  }

  randomIrwinHall.source = sourceRandomIrwinHall;
  return randomIrwinHall;
})(_defaultSource__WEBPACK_IMPORTED_MODULE_0__["default"]));

/***/ }),

/***/ "./node_modules/d3-random/src/logNormal.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-random/src/logNormal.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultSource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource */ "./node_modules/d3-random/src/defaultSource.js");
/* harmony import */ var _normal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normal */ "./node_modules/d3-random/src/normal.js");


/* harmony default export */ __webpack_exports__["default"] = ((function sourceRandomLogNormal(source) {
  function randomLogNormal() {
    var randomNormal = _normal__WEBPACK_IMPORTED_MODULE_1__["default"].source(source).apply(this, arguments);
    return function () {
      return Math.exp(randomNormal());
    };
  }

  randomLogNormal.source = sourceRandomLogNormal;
  return randomLogNormal;
})(_defaultSource__WEBPACK_IMPORTED_MODULE_0__["default"]));

/***/ }),

/***/ "./node_modules/d3-random/src/normal.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-random/src/normal.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultSource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource */ "./node_modules/d3-random/src/defaultSource.js");

/* harmony default export */ __webpack_exports__["default"] = ((function sourceRandomNormal(source) {
  function randomNormal(mu, sigma) {
    var x, r;
    mu = mu == null ? 0 : +mu;
    sigma = sigma == null ? 1 : +sigma;
    return function () {
      var y; // If available, use the second previously-generated uniform random.

      if (x != null) y = x, x = null; // Otherwise, generate a new x and y.
      else do {
          x = source() * 2 - 1;
          y = source() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
    };
  }

  randomNormal.source = sourceRandomNormal;
  return randomNormal;
})(_defaultSource__WEBPACK_IMPORTED_MODULE_0__["default"]));

/***/ }),

/***/ "./node_modules/d3-random/src/uniform.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-random/src/uniform.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultSource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource */ "./node_modules/d3-random/src/defaultSource.js");

/* harmony default export */ __webpack_exports__["default"] = ((function sourceRandomUniform(source) {
  function randomUniform(min, max) {
    min = min == null ? 0 : +min;
    max = max == null ? 1 : +max;
    if (arguments.length === 1) max = min, min = 0;else max -= min;
    return function () {
      return source() * max + min;
    };
  }

  randomUniform.source = sourceRandomUniform;
  return randomUniform;
})(_defaultSource__WEBPACK_IMPORTED_MODULE_0__["default"]));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Accent.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Accent.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Dark2.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Dark2.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Paired.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Paired.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Set1.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Set1.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Set2.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Set2.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Set3.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Set3.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/category10.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/category10.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/colors.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/colors.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (specifier) {
  var n = specifier.length / 6 | 0,
      colors = new Array(n),
      i = 0;

  while (i < n) {
    colors[i] = "#" + specifier.slice(i * 6, ++i * 6);
  }

  return colors;
});

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/BrBG.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/BrBG.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("d8b365f5f5f55ab4ac", "a6611adfc27d80cdc1018571", "a6611adfc27df5f5f580cdc1018571", "8c510ad8b365f6e8c3c7eae55ab4ac01665e", "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e", "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e", "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e", "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30", "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/PRGn.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/PRGn.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("af8dc3f7f7f77fbf7b", "7b3294c2a5cfa6dba0008837", "7b3294c2a5cff7f7f7a6dba0008837", "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837", "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837", "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837", "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837", "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b", "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/PiYG.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/PiYG.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("e9a3c9f7f7f7a1d76a", "d01c8bf1b6dab8e1864dac26", "d01c8bf1b6daf7f7f7b8e1864dac26", "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221", "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221", "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221", "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221", "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419", "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/PuOr.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/PuOr.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("998ec3f7f7f7f1a340", "5e3c99b2abd2fdb863e66101", "5e3c99b2abd2f7f7f7fdb863e66101", "542788998ec3d8daebfee0b6f1a340b35806", "542788998ec3d8daebf7f7f7fee0b6f1a340b35806", "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806", "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806", "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08", "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdBu.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdBu.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("ef8a62f7f7f767a9cf", "ca0020f4a58292c5de0571b0", "ca0020f4a582f7f7f792c5de0571b0", "b2182bef8a62fddbc7d1e5f067a9cf2166ac", "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac", "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac", "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac", "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061", "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdGy.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdGy.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("ef8a62ffffff999999", "ca0020f4a582bababa404040", "ca0020f4a582ffffffbababa404040", "b2182bef8a62fddbc7e0e0e09999994d4d4d", "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d", "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d", "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d", "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a", "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js ***!
  \*****************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fc8d59ffffbf91bfdb", "d7191cfdae61abd9e92c7bb6", "d7191cfdae61ffffbfabd9e92c7bb6", "d73027fc8d59fee090e0f3f891bfdb4575b4", "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4", "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4", "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4", "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695", "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js ***!
  \*****************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fc8d59ffffbf91cf60", "d7191cfdae61a6d96a1a9641", "d7191cfdae61ffffbfa6d96a1a9641", "d73027fc8d59fee08bd9ef8b91cf601a9850", "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850", "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850", "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850", "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837", "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/Spectral.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/Spectral.js ***!
  \*******************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fc8d59ffffbf99d594", "d7191cfdae61abdda42b83ba", "d7191cfdae61ffffbfabdda42b83ba", "d53e4ffc8d59fee08be6f59899d5943288bd", "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd", "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd", "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd", "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2", "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/index.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/index.js ***!
  \******************************************************/
/*! exports provided: schemeCategory10, schemeAccent, schemeDark2, schemePaired, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3, interpolateBrBG, schemeBrBG, interpolatePRGn, schemePRGn, interpolatePiYG, schemePiYG, interpolatePuOr, schemePuOr, interpolateRdBu, schemeRdBu, interpolateRdGy, schemeRdGy, interpolateRdYlBu, schemeRdYlBu, interpolateRdYlGn, schemeRdYlGn, interpolateSpectral, schemeSpectral, interpolateBuGn, schemeBuGn, interpolateBuPu, schemeBuPu, interpolateGnBu, schemeGnBu, interpolateOrRd, schemeOrRd, interpolatePuBuGn, schemePuBuGn, interpolatePuBu, schemePuBu, interpolatePuRd, schemePuRd, interpolateRdPu, schemeRdPu, interpolateYlGnBu, schemeYlGnBu, interpolateYlGn, schemeYlGn, interpolateYlOrBr, schemeYlOrBr, interpolateYlOrRd, schemeYlOrRd, interpolateBlues, schemeBlues, interpolateGreens, schemeGreens, interpolateGreys, schemeGreys, interpolatePurples, schemePurples, interpolateReds, schemeReds, interpolateOranges, schemeOranges, interpolateCubehelixDefault, interpolateRainbow, interpolateWarm, interpolateCool, interpolateSinebow, interpolateViridis, interpolateMagma, interpolateInferno, interpolatePlasma */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _categorical_category10__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./categorical/category10 */ "./node_modules/d3-scale-chromatic/src/categorical/category10.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeCategory10", function() { return _categorical_category10__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _categorical_Accent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./categorical/Accent */ "./node_modules/d3-scale-chromatic/src/categorical/Accent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeAccent", function() { return _categorical_Accent__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _categorical_Dark2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./categorical/Dark2 */ "./node_modules/d3-scale-chromatic/src/categorical/Dark2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeDark2", function() { return _categorical_Dark2__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _categorical_Paired__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./categorical/Paired */ "./node_modules/d3-scale-chromatic/src/categorical/Paired.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePaired", function() { return _categorical_Paired__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _categorical_Pastel1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./categorical/Pastel1 */ "./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePastel1", function() { return _categorical_Pastel1__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _categorical_Pastel2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./categorical/Pastel2 */ "./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePastel2", function() { return _categorical_Pastel2__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _categorical_Set1__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./categorical/Set1 */ "./node_modules/d3-scale-chromatic/src/categorical/Set1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet1", function() { return _categorical_Set1__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _categorical_Set2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./categorical/Set2 */ "./node_modules/d3-scale-chromatic/src/categorical/Set2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet2", function() { return _categorical_Set2__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _categorical_Set3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./categorical/Set3 */ "./node_modules/d3-scale-chromatic/src/categorical/Set3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet3", function() { return _categorical_Set3__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _diverging_BrBG__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./diverging/BrBG */ "./node_modules/d3-scale-chromatic/src/diverging/BrBG.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBrBG", function() { return _diverging_BrBG__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBrBG", function() { return _diverging_BrBG__WEBPACK_IMPORTED_MODULE_9__["scheme"]; });

/* harmony import */ var _diverging_PRGn__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./diverging/PRGn */ "./node_modules/d3-scale-chromatic/src/diverging/PRGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePRGn", function() { return _diverging_PRGn__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePRGn", function() { return _diverging_PRGn__WEBPACK_IMPORTED_MODULE_10__["scheme"]; });

/* harmony import */ var _diverging_PiYG__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./diverging/PiYG */ "./node_modules/d3-scale-chromatic/src/diverging/PiYG.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePiYG", function() { return _diverging_PiYG__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePiYG", function() { return _diverging_PiYG__WEBPACK_IMPORTED_MODULE_11__["scheme"]; });

/* harmony import */ var _diverging_PuOr__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./diverging/PuOr */ "./node_modules/d3-scale-chromatic/src/diverging/PuOr.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuOr", function() { return _diverging_PuOr__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuOr", function() { return _diverging_PuOr__WEBPACK_IMPORTED_MODULE_12__["scheme"]; });

/* harmony import */ var _diverging_RdBu__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./diverging/RdBu */ "./node_modules/d3-scale-chromatic/src/diverging/RdBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdBu", function() { return _diverging_RdBu__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdBu", function() { return _diverging_RdBu__WEBPACK_IMPORTED_MODULE_13__["scheme"]; });

/* harmony import */ var _diverging_RdGy__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./diverging/RdGy */ "./node_modules/d3-scale-chromatic/src/diverging/RdGy.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdGy", function() { return _diverging_RdGy__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdGy", function() { return _diverging_RdGy__WEBPACK_IMPORTED_MODULE_14__["scheme"]; });

/* harmony import */ var _diverging_RdYlBu__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./diverging/RdYlBu */ "./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdYlBu", function() { return _diverging_RdYlBu__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdYlBu", function() { return _diverging_RdYlBu__WEBPACK_IMPORTED_MODULE_15__["scheme"]; });

/* harmony import */ var _diverging_RdYlGn__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./diverging/RdYlGn */ "./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdYlGn", function() { return _diverging_RdYlGn__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdYlGn", function() { return _diverging_RdYlGn__WEBPACK_IMPORTED_MODULE_16__["scheme"]; });

/* harmony import */ var _diverging_Spectral__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./diverging/Spectral */ "./node_modules/d3-scale-chromatic/src/diverging/Spectral.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateSpectral", function() { return _diverging_Spectral__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSpectral", function() { return _diverging_Spectral__WEBPACK_IMPORTED_MODULE_17__["scheme"]; });

/* harmony import */ var _sequential_multi_BuGn__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./sequential-multi/BuGn */ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBuGn", function() { return _sequential_multi_BuGn__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBuGn", function() { return _sequential_multi_BuGn__WEBPACK_IMPORTED_MODULE_18__["scheme"]; });

/* harmony import */ var _sequential_multi_BuPu__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./sequential-multi/BuPu */ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBuPu", function() { return _sequential_multi_BuPu__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBuPu", function() { return _sequential_multi_BuPu__WEBPACK_IMPORTED_MODULE_19__["scheme"]; });

/* harmony import */ var _sequential_multi_GnBu__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./sequential-multi/GnBu */ "./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGnBu", function() { return _sequential_multi_GnBu__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGnBu", function() { return _sequential_multi_GnBu__WEBPACK_IMPORTED_MODULE_20__["scheme"]; });

/* harmony import */ var _sequential_multi_OrRd__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./sequential-multi/OrRd */ "./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateOrRd", function() { return _sequential_multi_OrRd__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeOrRd", function() { return _sequential_multi_OrRd__WEBPACK_IMPORTED_MODULE_21__["scheme"]; });

/* harmony import */ var _sequential_multi_PuBuGn__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./sequential-multi/PuBuGn */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuBuGn", function() { return _sequential_multi_PuBuGn__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuBuGn", function() { return _sequential_multi_PuBuGn__WEBPACK_IMPORTED_MODULE_22__["scheme"]; });

/* harmony import */ var _sequential_multi_PuBu__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./sequential-multi/PuBu */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuBu", function() { return _sequential_multi_PuBu__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuBu", function() { return _sequential_multi_PuBu__WEBPACK_IMPORTED_MODULE_23__["scheme"]; });

/* harmony import */ var _sequential_multi_PuRd__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./sequential-multi/PuRd */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuRd", function() { return _sequential_multi_PuRd__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuRd", function() { return _sequential_multi_PuRd__WEBPACK_IMPORTED_MODULE_24__["scheme"]; });

/* harmony import */ var _sequential_multi_RdPu__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./sequential-multi/RdPu */ "./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdPu", function() { return _sequential_multi_RdPu__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdPu", function() { return _sequential_multi_RdPu__WEBPACK_IMPORTED_MODULE_25__["scheme"]; });

/* harmony import */ var _sequential_multi_YlGnBu__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./sequential-multi/YlGnBu */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlGnBu", function() { return _sequential_multi_YlGnBu__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlGnBu", function() { return _sequential_multi_YlGnBu__WEBPACK_IMPORTED_MODULE_26__["scheme"]; });

/* harmony import */ var _sequential_multi_YlGn__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./sequential-multi/YlGn */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlGn", function() { return _sequential_multi_YlGn__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlGn", function() { return _sequential_multi_YlGn__WEBPACK_IMPORTED_MODULE_27__["scheme"]; });

/* harmony import */ var _sequential_multi_YlOrBr__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./sequential-multi/YlOrBr */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlOrBr", function() { return _sequential_multi_YlOrBr__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlOrBr", function() { return _sequential_multi_YlOrBr__WEBPACK_IMPORTED_MODULE_28__["scheme"]; });

/* harmony import */ var _sequential_multi_YlOrRd__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./sequential-multi/YlOrRd */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlOrRd", function() { return _sequential_multi_YlOrRd__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlOrRd", function() { return _sequential_multi_YlOrRd__WEBPACK_IMPORTED_MODULE_29__["scheme"]; });

/* harmony import */ var _sequential_single_Blues__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./sequential-single/Blues */ "./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBlues", function() { return _sequential_single_Blues__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBlues", function() { return _sequential_single_Blues__WEBPACK_IMPORTED_MODULE_30__["scheme"]; });

/* harmony import */ var _sequential_single_Greens__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./sequential-single/Greens */ "./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGreens", function() { return _sequential_single_Greens__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGreens", function() { return _sequential_single_Greens__WEBPACK_IMPORTED_MODULE_31__["scheme"]; });

/* harmony import */ var _sequential_single_Greys__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./sequential-single/Greys */ "./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGreys", function() { return _sequential_single_Greys__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGreys", function() { return _sequential_single_Greys__WEBPACK_IMPORTED_MODULE_32__["scheme"]; });

/* harmony import */ var _sequential_single_Purples__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./sequential-single/Purples */ "./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePurples", function() { return _sequential_single_Purples__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePurples", function() { return _sequential_single_Purples__WEBPACK_IMPORTED_MODULE_33__["scheme"]; });

/* harmony import */ var _sequential_single_Reds__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./sequential-single/Reds */ "./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateReds", function() { return _sequential_single_Reds__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeReds", function() { return _sequential_single_Reds__WEBPACK_IMPORTED_MODULE_34__["scheme"]; });

/* harmony import */ var _sequential_single_Oranges__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./sequential-single/Oranges */ "./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateOranges", function() { return _sequential_single_Oranges__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeOranges", function() { return _sequential_single_Oranges__WEBPACK_IMPORTED_MODULE_35__["scheme"]; });

/* harmony import */ var _sequential_multi_cubehelix__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./sequential-multi/cubehelix */ "./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelixDefault", function() { return _sequential_multi_cubehelix__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony import */ var _sequential_multi_rainbow__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./sequential-multi/rainbow */ "./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRainbow", function() { return _sequential_multi_rainbow__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateWarm", function() { return _sequential_multi_rainbow__WEBPACK_IMPORTED_MODULE_37__["warm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCool", function() { return _sequential_multi_rainbow__WEBPACK_IMPORTED_MODULE_37__["cool"]; });

/* harmony import */ var _sequential_multi_sinebow__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./sequential-multi/sinebow */ "./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateSinebow", function() { return _sequential_multi_sinebow__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony import */ var _sequential_multi_viridis__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./sequential-multi/viridis */ "./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateViridis", function() { return _sequential_multi_viridis__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateMagma", function() { return _sequential_multi_viridis__WEBPACK_IMPORTED_MODULE_39__["magma"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateInferno", function() { return _sequential_multi_viridis__WEBPACK_IMPORTED_MODULE_39__["inferno"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePlasma", function() { return _sequential_multi_viridis__WEBPACK_IMPORTED_MODULE_39__["plasma"]; });










































/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/ramp.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/ramp.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");

/* harmony default export */ __webpack_exports__["default"] = (function (scheme) {
  return Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["interpolateRgbBasis"])(scheme[scheme.length - 1]);
});

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js":
/*!***************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateCubehelixLong"])(Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(300, 0.5, 0.0), Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(-240, 0.5, 1.0)));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js ***!
  \*************************************************************************/
/*! exports provided: warm, cool, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "warm", function() { return warm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cool", function() { return cool; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");


var warm = Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateCubehelixLong"])(Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(-100, 0.75, 0.35), Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(80, 1.50, 0.8));
var cool = Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateCubehelixLong"])(Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(260, 0.75, 0.35), Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(80, 1.50, 0.8));
var c = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])();
/* harmony default export */ __webpack_exports__["default"] = (function (t) {
  if (t < 0 || t > 1) t -= Math.floor(t);
  var ts = Math.abs(t - 0.5);
  c.h = 360 * t - 100;
  c.s = 1.5 - 1.5 * ts;
  c.l = 0.8 - 0.9 * ts;
  return c + "";
});

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");

var c = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(),
    pi_1_3 = Math.PI / 3,
    pi_2_3 = Math.PI * 2 / 3;
/* harmony default export */ __webpack_exports__["default"] = (function (t) {
  var x;
  t = (0.5 - t) * Math.PI;
  c.r = 255 * (x = Math.sin(t)) * x;
  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
  return c + "";
});

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js ***!
  \*************************************************************************/
/*! exports provided: default, magma, inferno, plasma */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "magma", function() { return magma; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inferno", function() { return inferno; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "plasma", function() { return plasma; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");


function ramp(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

/* harmony default export */ __webpack_exports__["default"] = (ramp(Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")));
var magma = ramp(Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
var inferno = ramp(Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
var plasma = ramp(Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js ***!
  \*************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js":
/*!**************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js ***!
  \**************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js":
/*!**************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js ***!
  \**************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js ***!
  \***********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-scale/src/array.js ***!
  \********************************************/
/*! exports provided: map, slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
var array = Array.prototype;
var map = array.map;
var slice = array.slice;

/***/ }),

/***/ "./node_modules/d3-scale/src/band.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/band.js ***!
  \*******************************************/
/*! exports provided: default, point */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return band; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return point; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _ordinal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ordinal */ "./node_modules/d3-scale/src/ordinal.js");



function band() {
  var scale = Object(_ordinal__WEBPACK_IMPORTED_MODULE_2__["default"])().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      range = [0, 1],
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;
  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = range[1] < range[0],
        start = range[reverse - 0],
        stop = range[1 - reverse];
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(n).map(function (i) {
      return start + step * i;
    });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function (_) {
    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = [+_[0], +_[1]], round = true, rescale();
  };

  scale.bandwidth = function () {
    return bandwidth;
  };

  scale.step = function () {
    return step;
  };

  scale.round = function (_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function (_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function (_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function () {
    return band(domain(), range).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initRange"].apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;
  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function () {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}

/***/ }),

/***/ "./node_modules/d3-scale/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-scale/src/continuous.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-scale/src/continuous.js ***!
  \*************************************************/
/*! exports provided: identity, copy, transformer, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformer", function() { return transformer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return continuous; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-scale/src/constant.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number */ "./node_modules/d3-scale/src/number.js");





var unit = [0, 1];
function identity(x) {
  return x;
}

function normalize(a, b) {
  return (b -= a = +a) ? function (x) {
    return (x - a) / b;
  } : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(isNaN(b) ? NaN : 0.5);
}

function clamper(domain) {
  var a = domain[0],
      b = domain[domain.length - 1],
      t;
  if (a > b) t = a, a = b, b = t;
  return function (x) {
    return Math.max(a, Math.min(b, x));
  };
} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].


function bimap(domain, range, interpolate) {
  var d0 = domain[0],
      d1 = domain[1],
      r0 = range[0],
      r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function (x) {
    return r0(d0(x));
  };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1; // Reverse descending domains.

  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function (x) {
    var i = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}
function transformer() {
  var domain = unit,
      range = unit,
      interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolate"],
      transform,
      untransform,
      unknown,
      clamp = identity,
      piecewise,
      output,
      input;

  function rescale() {
    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function (y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateNumber"])))(y)));
  };

  scale.domain = function (_) {
    return arguments.length ? (domain = _array__WEBPACK_IMPORTED_MODULE_2__["map"].call(_, _number__WEBPACK_IMPORTED_MODULE_4__["default"]), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array__WEBPACK_IMPORTED_MODULE_2__["slice"].call(_), rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = _array__WEBPACK_IMPORTED_MODULE_2__["slice"].call(_), interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateRound"], rescale();
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;
  };

  scale.interpolate = function (_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}
function continuous(transform, untransform) {
  return transformer()(transform, untransform);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/diverging.js":
/*!************************************************!*\
  !*** ./node_modules/d3-scale/src/diverging.js ***!
  \************************************************/
/*! exports provided: default, divergingLog, divergingSymlog, divergingPow, divergingSqrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return diverging; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingLog", function() { return divergingLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingSymlog", function() { return divergingSymlog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingPow", function() { return divergingPow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingSqrt", function() { return divergingSqrt; });
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log */ "./node_modules/d3-scale/src/log.js");
/* harmony import */ var _sequential__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sequential */ "./node_modules/d3-scale/src/sequential.js");
/* harmony import */ var _symlog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./symlog */ "./node_modules/d3-scale/src/symlog.js");
/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pow */ "./node_modules/d3-scale/src/pow.js");








function transformer() {
  var x0 = 0,
      x1 = 0.5,
      x2 = 1,
      t0,
      t1,
      t2,
      k10,
      k21,
      interpolator = _continuous__WEBPACK_IMPORTED_MODULE_0__["identity"],
      transform,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);
    return scale;
  };
}

function diverging() {
  var scale = Object(_linear__WEBPACK_IMPORTED_MODULE_2__["linearish"])(transformer()(_continuous__WEBPACK_IMPORTED_MODULE_0__["identity"]));

  scale.copy = function () {
    return Object(_sequential__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, diverging());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function divergingLog() {
  var scale = Object(_log__WEBPACK_IMPORTED_MODULE_3__["loggish"])(transformer()).domain([0.1, 1, 10]);

  scale.copy = function () {
    return Object(_sequential__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, divergingLog()).base(scale.base());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function divergingSymlog() {
  var scale = Object(_symlog__WEBPACK_IMPORTED_MODULE_5__["symlogish"])(transformer());

  scale.copy = function () {
    return Object(_sequential__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, divergingSymlog()).constant(scale.constant());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function divergingPow() {
  var scale = Object(_pow__WEBPACK_IMPORTED_MODULE_6__["powish"])(transformer());

  scale.copy = function () {
    return Object(_sequential__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, divergingPow()).exponent(scale.exponent());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/identity.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return identity; });
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number */ "./node_modules/d3-scale/src/number.js");



function identity(domain) {
  var unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : x;
  }

  scale.invert = scale;

  scale.domain = scale.range = function (_) {
    return arguments.length ? (domain = _array__WEBPACK_IMPORTED_MODULE_0__["map"].call(_, _number__WEBPACK_IMPORTED_MODULE_2__["default"]), scale) : domain.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return identity(domain).unknown(unknown);
  };

  domain = arguments.length ? _array__WEBPACK_IMPORTED_MODULE_0__["map"].call(domain, _number__WEBPACK_IMPORTED_MODULE_2__["default"]) : [0, 1];
  return Object(_linear__WEBPACK_IMPORTED_MODULE_1__["linearish"])(scale);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-scale/src/index.js ***!
  \********************************************/
/*! exports provided: scaleBand, scalePoint, scaleIdentity, scaleLinear, scaleLog, scaleSymlog, scaleOrdinal, scaleImplicit, scalePow, scaleSqrt, scaleQuantile, scaleQuantize, scaleThreshold, scaleTime, scaleUtc, scaleSequential, scaleSequentialLog, scaleSequentialPow, scaleSequentialSqrt, scaleSequentialSymlog, scaleSequentialQuantile, scaleDiverging, scaleDivergingLog, scaleDivergingPow, scaleDivergingSqrt, scaleDivergingSymlog, tickFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _band__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./band */ "./node_modules/d3-scale/src/band.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleBand", function() { return _band__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scalePoint", function() { return _band__WEBPACK_IMPORTED_MODULE_0__["point"]; });

/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-scale/src/identity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleIdentity", function() { return _identity__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleLinear", function() { return _linear__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log */ "./node_modules/d3-scale/src/log.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleLog", function() { return _log__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _symlog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./symlog */ "./node_modules/d3-scale/src/symlog.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSymlog", function() { return _symlog__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _ordinal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ordinal */ "./node_modules/d3-scale/src/ordinal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleOrdinal", function() { return _ordinal__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleImplicit", function() { return _ordinal__WEBPACK_IMPORTED_MODULE_5__["implicit"]; });

/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pow */ "./node_modules/d3-scale/src/pow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scalePow", function() { return _pow__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSqrt", function() { return _pow__WEBPACK_IMPORTED_MODULE_6__["sqrt"]; });

/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./quantile */ "./node_modules/d3-scale/src/quantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleQuantile", function() { return _quantile__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _quantize__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./quantize */ "./node_modules/d3-scale/src/quantize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleQuantize", function() { return _quantize__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _threshold__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./threshold */ "./node_modules/d3-scale/src/threshold.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleThreshold", function() { return _threshold__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _time__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./time */ "./node_modules/d3-scale/src/time.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleTime", function() { return _time__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _utcTime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utcTime */ "./node_modules/d3-scale/src/utcTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleUtc", function() { return _utcTime__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _sequential__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./sequential */ "./node_modules/d3-scale/src/sequential.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequential", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialLog", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["sequentialLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialPow", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["sequentialPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialSqrt", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["sequentialSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialSymlog", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["sequentialSymlog"]; });

/* harmony import */ var _sequentialQuantile__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./sequentialQuantile */ "./node_modules/d3-scale/src/sequentialQuantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialQuantile", function() { return _sequentialQuantile__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _diverging__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./diverging */ "./node_modules/d3-scale/src/diverging.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDiverging", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingLog", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["divergingLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingPow", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["divergingPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingSqrt", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["divergingSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingSymlog", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["divergingSymlog"]; });

/* harmony import */ var _tickFormat__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./tickFormat */ "./node_modules/d3-scale/src/tickFormat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickFormat", function() { return _tickFormat__WEBPACK_IMPORTED_MODULE_15__["default"]; });


















/***/ }),

/***/ "./node_modules/d3-scale/src/init.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/init.js ***!
  \*******************************************/
/*! exports provided: initRange, initInterpolator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initRange", function() { return initRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initInterpolator", function() { return initInterpolator; });
function initRange(domain, range) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.range(domain);
      break;

    default:
      this.range(range).domain(domain);
      break;
  }

  return this;
}
function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.interpolator(domain);
      break;

    default:
      this.interpolator(interpolator).domain(domain);
      break;
  }

  return this;
}

/***/ }),

/***/ "./node_modules/d3-scale/src/linear.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-scale/src/linear.js ***!
  \*********************************************/
/*! exports provided: linearish, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linearish", function() { return linearish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return linear; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _tickFormat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tickFormat */ "./node_modules/d3-scale/src/tickFormat.js");




function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function (count) {
    var d = domain();
    return Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["ticks"])(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function (count, specifier) {
    var d = domain();
    return Object(_tickFormat__WEBPACK_IMPORTED_MODULE_3__["default"])(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function (count) {
    if (count == null) count = 10;
    var d = domain(),
        i0 = 0,
        i1 = d.length - 1,
        start = d[i0],
        stop = d[i1],
        step;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }

    step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickIncrement"])(start, stop, count);

    if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
      step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickIncrement"])(start, stop, count);
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
      step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickIncrement"])(start, stop, count);
    }

    if (step > 0) {
      d[i0] = Math.floor(start / step) * step;
      d[i1] = Math.ceil(stop / step) * step;
      domain(d);
    } else if (step < 0) {
      d[i0] = Math.ceil(start * step) / step;
      d[i1] = Math.floor(stop * step) / step;
      domain(d);
    }

    return scale;
  };

  return scale;
}
function linear() {
  var scale = Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["default"])(_continuous__WEBPACK_IMPORTED_MODULE_1__["identity"], _continuous__WEBPACK_IMPORTED_MODULE_1__["identity"]);

  scale.copy = function () {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["copy"])(scale, linear());
  };

  _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
  return linearish(scale);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/log.js":
/*!******************************************!*\
  !*** ./node_modules/d3-scale/src/log.js ***!
  \******************************************/
/*! exports provided: loggish, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loggish", function() { return loggish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return log; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/index.js");
/* harmony import */ var _nice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nice */ "./node_modules/d3-scale/src/nice.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");






function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10 : base === Math.E ? Math.exp : function (x) {
    return Math.pow(base, x);
  };
}

function logp(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function (x) {
    return Math.log(x) / base;
  });
}

function reflect(f) {
  return function (x) {
    return -f(-x);
  };
}

function loggish(transform) {
  var scale = transform(transformLog, transformExp),
      domain = scale.domain,
      base = 10,
      logs,
      pows;

  function rescale() {
    logs = logp(base), pows = powp(base);

    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }

    return scale;
  }

  scale.base = function (_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = function (count) {
    var d = domain(),
        u = d[0],
        v = d[d.length - 1],
        r;
    if (r = v < u) i = u, u = v, v = i;
    var i = logs(u),
        j = logs(v),
        p,
        k,
        t,
        n = count == null ? 10 : +count,
        z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.round(i) - 1, j = Math.round(j) + 1;
      if (u > 0) for (; i < j; ++i) {
        for (k = 1, p = pows(i); k < base; ++k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i < j; ++i) {
        for (k = base - 1, p = pows(i); k >= 1; --k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
    } else {
      z = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["ticks"])(i, j, Math.min(j - i, n)).map(pows);
    }

    return r ? z.reverse() : z;
  };

  scale.tickFormat = function (count, specifier) {
    if (specifier == null) specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function") specifier = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["format"])(specifier);
    if (count === Infinity) return specifier;
    if (count == null) count = 10;
    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?

    return function (d) {
      var i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = function () {
    return domain(Object(_nice__WEBPACK_IMPORTED_MODULE_2__["default"])(domain(), {
      floor: function floor(x) {
        return pows(Math.floor(logs(x)));
      },
      ceil: function ceil(x) {
        return pows(Math.ceil(logs(x)));
      }
    }));
  };

  return scale;
}
function log() {
  var scale = loggish(Object(_continuous__WEBPACK_IMPORTED_MODULE_3__["transformer"])()).domain([1, 10]);

  scale.copy = function () {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_3__["copy"])(scale, log()).base(scale.base());
  };

  _init__WEBPACK_IMPORTED_MODULE_4__["initRange"].apply(scale, arguments);
  return scale;
}

/***/ }),

/***/ "./node_modules/d3-scale/src/nice.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/nice.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (domain, interval) {
  domain = domain.slice();
  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
});

/***/ }),

/***/ "./node_modules/d3-scale/src/number.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-scale/src/number.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return +x;
});

/***/ }),

/***/ "./node_modules/d3-scale/src/ordinal.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-scale/src/ordinal.js ***!
  \**********************************************/
/*! exports provided: implicit, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "implicit", function() { return implicit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ordinal; });
/* harmony import */ var d3_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-collection */ "./node_modules/d3-collection/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");



var implicit = {
  name: "implicit"
};
function ordinal() {
  var index = Object(d3_collection__WEBPACK_IMPORTED_MODULE_0__["map"])(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    var key = d + "",
        i = index.get(key);

    if (!i) {
      if (unknown !== implicit) return unknown;
      index.set(key, i = domain.push(d));
    }

    return range[(i - 1) % range.length];
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = Object(d3_collection__WEBPACK_IMPORTED_MODULE_0__["map"])();
    var i = -1,
        n = _.length,
        d,
        key;

    while (++i < n) {
      if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));
    }

    return scale;
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_), scale) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return ordinal(domain, range).unknown(unknown);
  };

  _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
  return scale;
}

/***/ }),

/***/ "./node_modules/d3-scale/src/pow.js":
/*!******************************************!*\
  !*** ./node_modules/d3-scale/src/pow.js ***!
  \******************************************/
/*! exports provided: powish, default, sqrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "powish", function() { return powish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return pow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return sqrt; });
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");




function transformPow(exponent) {
  return function (x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function transformSqrt(x) {
  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}

function transformSquare(x) {
  return x < 0 ? -x * x : x * x;
}

function powish(transform) {
  var scale = transform(_continuous__WEBPACK_IMPORTED_MODULE_1__["identity"], _continuous__WEBPACK_IMPORTED_MODULE_1__["identity"]),
      exponent = 1;

  function rescale() {
    return exponent === 1 ? transform(_continuous__WEBPACK_IMPORTED_MODULE_1__["identity"], _continuous__WEBPACK_IMPORTED_MODULE_1__["identity"]) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));
  }

  scale.exponent = function (_) {
    return arguments.length ? (exponent = +_, rescale()) : exponent;
  };

  return Object(_linear__WEBPACK_IMPORTED_MODULE_0__["linearish"])(scale);
}
function pow() {
  var scale = powish(Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["transformer"])());

  scale.copy = function () {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["copy"])(scale, pow()).exponent(scale.exponent());
  };

  _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
  return scale;
}
function sqrt() {
  return pow.apply(null, arguments).exponent(0.5);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/quantile.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/quantile.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quantile; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");



function quantile() {
  var domain = [],
      range = [],
      thresholds = [],
      unknown;

  function rescale() {
    var i = 0,
        n = Math.max(1, range.length);
    thresholds = new Array(n - 1);

    while (++i < n) {
      thresholds[i - 1] = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["quantile"])(domain, i / n);
    }

    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : range[Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(thresholds, x)];
  }

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];
  };

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) {
      if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);
    }

    domain.sort(d3_array__WEBPACK_IMPORTED_MODULE_0__["ascending"]);
    return rescale();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_), rescale()) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.quantiles = function () {
    return thresholds.slice();
  };

  scale.copy = function () {
    return quantile().domain(domain).range(range).unknown(unknown);
  };

  return _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/quantize.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/quantize.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quantize; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");




function quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x <= x ? range[Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);

    while (++i < n) {
      domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
    }

    return scale;
  }

  scale.domain = function (_) {
    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
  };

  scale.range = function (_) {
    return arguments.length ? (n = (range = _array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function () {
    return domain.slice();
  };

  scale.copy = function () {
    return quantize().domain([x0, x1]).range(range).unknown(unknown);
  };

  return _init__WEBPACK_IMPORTED_MODULE_3__["initRange"].apply(Object(_linear__WEBPACK_IMPORTED_MODULE_2__["linearish"])(scale), arguments);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/sequential.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-scale/src/sequential.js ***!
  \*************************************************/
/*! exports provided: copy, default, sequentialLog, sequentialSymlog, sequentialPow, sequentialSqrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sequential; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialLog", function() { return sequentialLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialSymlog", function() { return sequentialSymlog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialPow", function() { return sequentialPow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialSqrt", function() { return sequentialSqrt; });
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log */ "./node_modules/d3-scale/src/log.js");
/* harmony import */ var _symlog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./symlog */ "./node_modules/d3-scale/src/symlog.js");
/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pow */ "./node_modules/d3-scale/src/pow.js");







function transformer() {
  var x0 = 0,
      x1 = 1,
      t0,
      t1,
      k10,
      transform,
      interpolator = _continuous__WEBPACK_IMPORTED_MODULE_0__["identity"],
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
    return scale;
  };
}

function copy(source, target) {
  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
}
function sequential() {
  var scale = Object(_linear__WEBPACK_IMPORTED_MODULE_2__["linearish"])(transformer()(_continuous__WEBPACK_IMPORTED_MODULE_0__["identity"]));

  scale.copy = function () {
    return copy(scale, sequential());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function sequentialLog() {
  var scale = Object(_log__WEBPACK_IMPORTED_MODULE_3__["loggish"])(transformer()).domain([1, 10]);

  scale.copy = function () {
    return copy(scale, sequentialLog()).base(scale.base());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function sequentialSymlog() {
  var scale = Object(_symlog__WEBPACK_IMPORTED_MODULE_4__["symlogish"])(transformer());

  scale.copy = function () {
    return copy(scale, sequentialSymlog()).constant(scale.constant());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function sequentialPow() {
  var scale = Object(_pow__WEBPACK_IMPORTED_MODULE_5__["powish"])(transformer());

  scale.copy = function () {
    return copy(scale, sequentialPow()).exponent(scale.exponent());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/sequentialQuantile.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-scale/src/sequentialQuantile.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sequentialQuantile; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");



function sequentialQuantile() {
  var domain = [],
      interpolator = _continuous__WEBPACK_IMPORTED_MODULE_1__["identity"];

  function scale(x) {
    if (!isNaN(x = +x)) return interpolator((Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x) - 1) / (domain.length - 1));
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) {
      if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);
    }

    domain.sort(d3_array__WEBPACK_IMPORTED_MODULE_0__["ascending"]);
    return scale;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.copy = function () {
    return sequentialQuantile(interpolator).domain(domain);
  };

  return _init__WEBPACK_IMPORTED_MODULE_2__["initInterpolator"].apply(scale, arguments);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/symlog.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-scale/src/symlog.js ***!
  \*********************************************/
/*! exports provided: symlogish, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symlogish", function() { return symlogish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return symlog; });
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");




function transformSymlog(c) {
  return function (x) {
    return Math.sign(x) * Math.log1p(Math.abs(x / c));
  };
}

function transformSymexp(c) {
  return function (x) {
    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
  };
}

function symlogish(transform) {
  var c = 1,
      scale = transform(transformSymlog(c), transformSymexp(c));

  scale.constant = function (_) {
    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
  };

  return Object(_linear__WEBPACK_IMPORTED_MODULE_0__["linearish"])(scale);
}
function symlog() {
  var scale = symlogish(Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["transformer"])());

  scale.copy = function () {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["copy"])(scale, symlog()).constant(scale.constant());
  };

  return _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/threshold.js":
/*!************************************************!*\
  !*** ./node_modules/d3-scale/src/threshold.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return threshold; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");



function threshold() {
  var domain = [0.5],
      range = [0, 1],
      unknown,
      n = 1;

  function scale(x) {
    return x <= x ? range[Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x, 0, n)] : unknown;
  }

  scale.domain = function (_) {
    return arguments.length ? (domain = _array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return threshold().domain(domain).range(range).unknown(unknown);
  };

  return _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/tickFormat.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-scale/src/tickFormat.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function (start, stop, count, specifier) {
  var step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start, stop, count),
      precision;
  specifier = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["formatSpecifier"])(specifier == null ? ",f" : specifier);

  switch (specifier.type) {
    case "s":
      {
        var value = Math.max(Math.abs(start), Math.abs(stop));
        if (specifier.precision == null && !isNaN(precision = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["precisionPrefix"])(step, value))) specifier.precision = precision;
        return Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["formatPrefix"])(specifier, value);
      }

    case "":
    case "e":
    case "g":
    case "p":
    case "r":
      {
        if (specifier.precision == null && !isNaN(precision = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["precisionRound"])(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
        break;
      }

    case "f":
    case "%":
      {
        if (specifier.precision == null && !isNaN(precision = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["precisionFixed"])(step))) specifier.precision = precision - (specifier.type === "%") * 2;
        break;
      }
  }

  return Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["format"])(specifier);
});

/***/ }),

/***/ "./node_modules/d3-scale/src/time.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/time.js ***!
  \*******************************************/
/*! exports provided: calendar, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calendar", function() { return calendar; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/index.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _nice__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./nice */ "./node_modules/d3-scale/src/nice.js");







var durationSecond = 1000,
    durationMinute = durationSecond * 60,
    durationHour = durationMinute * 60,
    durationDay = durationHour * 24,
    durationWeek = durationDay * 7,
    durationMonth = durationDay * 30,
    durationYear = durationDay * 365;

function date(t) {
  return new Date(t);
}

function number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
  var scale = Object(_continuous__WEBPACK_IMPORTED_MODULE_4__["default"])(_continuous__WEBPACK_IMPORTED_MODULE_4__["identity"], _continuous__WEBPACK_IMPORTED_MODULE_4__["identity"]),
      invert = scale.invert,
      domain = scale.domain;
  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");
  var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);
  }

  function tickInterval(interval, start, stop, step) {
    if (interval == null) interval = 10; // If a desired tick count is specified, pick a reasonable tick interval
    // based on the extent of the domain and a rough estimate of tick size.
    // Otherwise, assume interval is already a time interval and use it.

    if (typeof interval === "number") {
      var target = Math.abs(stop - start) / interval,
          i = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisector"])(function (i) {
        return i[2];
      }).right(tickIntervals, target);

      if (i === tickIntervals.length) {
        step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start / durationYear, stop / durationYear, interval);
        interval = year;
      } else if (i) {
        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        step = i[1];
        interval = i[0];
      } else {
        step = Math.max(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start, stop, interval), 1);
        interval = millisecond;
      }
    }

    return step == null ? interval : interval.every(step);
  }

  scale.invert = function (y) {
    return new Date(invert(y));
  };

  scale.domain = function (_) {
    return arguments.length ? domain(_array__WEBPACK_IMPORTED_MODULE_3__["map"].call(_, number)) : domain().map(date);
  };

  scale.ticks = function (interval, step) {
    var d = domain(),
        t0 = d[0],
        t1 = d[d.length - 1],
        r = t1 < t0,
        t;
    if (r) t = t0, t0 = t1, t1 = t;
    t = tickInterval(interval, t0, t1, step);
    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop

    return r ? t.reverse() : t;
  };

  scale.tickFormat = function (count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function (interval, step) {
    var d = domain();
    return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain(Object(_nice__WEBPACK_IMPORTED_MODULE_6__["default"])(d, interval)) : scale;
  };

  scale.copy = function () {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
  };

  return scale;
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return _init__WEBPACK_IMPORTED_MODULE_5__["initRange"].apply(calendar(d3_time__WEBPACK_IMPORTED_MODULE_1__["timeYear"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeMonth"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeWeek"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeDay"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeHour"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeMinute"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeSecond"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeMillisecond"], d3_time_format__WEBPACK_IMPORTED_MODULE_2__["timeFormat"]).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
});

/***/ }),

/***/ "./node_modules/d3-scale/src/utcTime.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-scale/src/utcTime.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./time */ "./node_modules/d3-scale/src/time.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/index.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/index.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");




/* harmony default export */ __webpack_exports__["default"] = (function () {
  return _init__WEBPACK_IMPORTED_MODULE_3__["initRange"].apply(Object(_time__WEBPACK_IMPORTED_MODULE_0__["calendar"])(d3_time__WEBPACK_IMPORTED_MODULE_2__["utcYear"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcMonth"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcWeek"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcDay"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcHour"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcMinute"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcSecond"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcMillisecond"], d3_time_format__WEBPACK_IMPORTED_MODULE_1__["utcFormat"]).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/constant.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-selection/src/constant.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-selection/src/create.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/create.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _creator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./creator */ "./node_modules/d3-selection/src/creator.js");
/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./select */ "./node_modules/d3-selection/src/select.js");


/* harmony default export */ __webpack_exports__["default"] = (function (name) {
  return Object(_select__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_creator__WEBPACK_IMPORTED_MODULE_0__["default"])(name).call(document.documentElement));
});

/***/ }),

/***/ "./node_modules/d3-selection/src/creator.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/creator.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _namespace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./namespace */ "./node_modules/d3-selection/src/namespace.js");
/* harmony import */ var _namespaces__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./namespaces */ "./node_modules/d3-selection/src/namespaces.js");



function creatorInherit(name) {
  return function () {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === _namespaces__WEBPACK_IMPORTED_MODULE_1__["xhtml"] && document.documentElement.namespaceURI === _namespaces__WEBPACK_IMPORTED_MODULE_1__["xhtml"] ? document.createElement(name) : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function () {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name) {
  var fullname = Object(_namespace__WEBPACK_IMPORTED_MODULE_0__["default"])(name);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/index.js ***!
  \************************************************/
/*! exports provided: create, creator, local, matcher, mouse, namespace, namespaces, clientPoint, select, selectAll, selection, selector, selectorAll, style, touch, touches, window, event, customEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _create__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create */ "./node_modules/d3-selection/src/create.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "create", function() { return _create__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _creator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./creator */ "./node_modules/d3-selection/src/creator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "creator", function() { return _creator__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _local__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./local */ "./node_modules/d3-selection/src/local.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "local", function() { return _local__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _matcher__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./matcher */ "./node_modules/d3-selection/src/matcher.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matcher", function() { return _matcher__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _mouse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mouse */ "./node_modules/d3-selection/src/mouse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mouse", function() { return _mouse__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _namespace__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./namespace */ "./node_modules/d3-selection/src/namespace.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return _namespace__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _namespaces__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./namespaces */ "./node_modules/d3-selection/src/namespaces.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "namespaces", function() { return _namespaces__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./point */ "./node_modules/d3-selection/src/point.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clientPoint", function() { return _point__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./select */ "./node_modules/d3-selection/src/select.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "select", function() { return _select__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _selectAll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./selectAll */ "./node_modules/d3-selection/src/selectAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectAll", function() { return _selectAll__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _selection_index__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./selection/index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selection", function() { return _selection_index__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./selector */ "./node_modules/d3-selection/src/selector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selector", function() { return _selector__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _selectorAll__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./selectorAll */ "./node_modules/d3-selection/src/selectorAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectorAll", function() { return _selectorAll__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _selection_style__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./selection/style */ "./node_modules/d3-selection/src/selection/style.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "style", function() { return _selection_style__WEBPACK_IMPORTED_MODULE_13__["styleValue"]; });

/* harmony import */ var _touch__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./touch */ "./node_modules/d3-selection/src/touch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touch", function() { return _touch__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _touches__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./touches */ "./node_modules/d3-selection/src/touches.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touches", function() { return _touches__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./window */ "./node_modules/d3-selection/src/window.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "window", function() { return _window__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _selection_on__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./selection/on */ "./node_modules/d3-selection/src/selection/on.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "event", function() { return _selection_on__WEBPACK_IMPORTED_MODULE_17__["event"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "customEvent", function() { return _selection_on__WEBPACK_IMPORTED_MODULE_17__["customEvent"]; });




















/***/ }),

/***/ "./node_modules/d3-selection/src/local.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/local.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return local; });
var nextId = 0;
function local() {
  return new Local();
}

function Local() {
  this._ = "@" + (++nextId).toString(36);
}

Local.prototype = local.prototype = {
  constructor: Local,
  get: function get(node) {
    var id = this._;

    while (!(id in node)) {
      if (!(node = node.parentNode)) return;
    }

    return node[id];
  },
  set: function set(node, value) {
    return node[this._] = value;
  },
  remove: function remove(node) {
    return this._ in node && delete node[this._];
  },
  toString: function toString() {
    return this._;
  }
};

/***/ }),

/***/ "./node_modules/d3-selection/src/matcher.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/matcher.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (selector) {
  return function () {
    return this.matches(selector);
  };
});

/***/ }),

/***/ "./node_modules/d3-selection/src/mouse.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/mouse.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sourceEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sourceEvent */ "./node_modules/d3-selection/src/sourceEvent.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "./node_modules/d3-selection/src/point.js");


/* harmony default export */ __webpack_exports__["default"] = (function (node) {
  var event = Object(_sourceEvent__WEBPACK_IMPORTED_MODULE_0__["default"])();
  if (event.changedTouches) event = event.changedTouches[0];
  return Object(_point__WEBPACK_IMPORTED_MODULE_1__["default"])(node, event);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/namespace.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-selection/src/namespace.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _namespaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./namespaces */ "./node_modules/d3-selection/src/namespaces.js");

/* harmony default export */ __webpack_exports__["default"] = (function (name) {
  var prefix = name += "",
      i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return _namespaces__WEBPACK_IMPORTED_MODULE_0__["default"].hasOwnProperty(prefix) ? {
    space: _namespaces__WEBPACK_IMPORTED_MODULE_0__["default"][prefix],
    local: name
  } : name;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/namespaces.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-selection/src/namespaces.js ***!
  \*****************************************************/
/*! exports provided: xhtml, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xhtml", function() { return xhtml; });
var xhtml = "http://www.w3.org/1999/xhtml";
/* harmony default export */ __webpack_exports__["default"] = ({
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
});

/***/ }),

/***/ "./node_modules/d3-selection/src/point.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/point.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (node, event) {
  var svg = node.ownerSVGElement || node;

  if (svg.createSVGPoint) {
    var point = svg.createSVGPoint();
    point.x = event.clientX, point.y = event.clientY;
    point = point.matrixTransform(node.getScreenCTM().inverse());
    return [point.x, point.y];
  }

  var rect = node.getBoundingClientRect();
  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
});

/***/ }),

/***/ "./node_modules/d3-selection/src/select.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/select.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _selection_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/index */ "./node_modules/d3-selection/src/selection/index.js");

/* harmony default export */ __webpack_exports__["default"] = (function (selector) {
  return typeof selector === "string" ? new _selection_index__WEBPACK_IMPORTED_MODULE_0__["Selection"]([[document.querySelector(selector)]], [document.documentElement]) : new _selection_index__WEBPACK_IMPORTED_MODULE_0__["Selection"]([[selector]], _selection_index__WEBPACK_IMPORTED_MODULE_0__["root"]);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selectAll.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-selection/src/selectAll.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _selection_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/index */ "./node_modules/d3-selection/src/selection/index.js");

/* harmony default export */ __webpack_exports__["default"] = (function (selector) {
  return typeof selector === "string" ? new _selection_index__WEBPACK_IMPORTED_MODULE_0__["Selection"]([document.querySelectorAll(selector)], [document.documentElement]) : new _selection_index__WEBPACK_IMPORTED_MODULE_0__["Selection"]([selector == null ? [] : selector], _selection_index__WEBPACK_IMPORTED_MODULE_0__["root"]);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/append.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/append.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _creator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../creator */ "./node_modules/d3-selection/src/creator.js");

/* harmony default export */ __webpack_exports__["default"] = (function (name) {
  var create = typeof name === "function" ? name : Object(_creator__WEBPACK_IMPORTED_MODULE_0__["default"])(name);
  return this.select(function () {
    return this.appendChild(create.apply(this, arguments));
  });
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/attr.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/attr.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _namespace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../namespace */ "./node_modules/d3-selection/src/namespace.js");


function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function () {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function () {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value) {
  var fullname = Object(_namespace__WEBPACK_IMPORTED_MODULE_0__["default"])(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }

  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/call.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/call.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/classed.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/classed.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function add(name) {
    var i = this._names.indexOf(name);

    if (i < 0) {
      this._names.push(name);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function remove(name) {
    var i = this._names.indexOf(name);

    if (i >= 0) {
      this._names.splice(i, 1);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function contains(name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) {
    list.add(names[i]);
  }
}

function classedRemove(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) {
    list.remove(names[i]);
  }
}

function classedTrue(names) {
  return function () {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function () {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function () {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()),
        i = -1,
        n = names.length;

    while (++i < n) {
      if (!list.contains(names[i])) return false;
    }

    return true;
  }

  return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/clone.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/clone.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function selection_cloneShallow() {
  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);
}

function selection_cloneDeep() {
  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);
}

/* harmony default export */ __webpack_exports__["default"] = (function (deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/data.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/data.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _enter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enter */ "./node_modules/d3-selection/src/selection/enter.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant */ "./node_modules/d3-selection/src/constant.js");



var keyPrefix = "$"; // Protect against keys like “__proto__”.

function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length; // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.

  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new _enter__WEBPACK_IMPORTED_MODULE_1__["EnterNode"](parent, data[i]);
    }
  } // Put any non-null nodes that don’t fit into exit.


  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = {},
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue; // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.

  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);

      if (keyValue in nodeByKeyValue) {
        exit[i] = node;
      } else {
        nodeByKeyValue[keyValue] = node;
      }
    }
  } // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.


  for (i = 0; i < dataLength; ++i) {
    keyValue = keyPrefix + key.call(parent, data[i], i, data);

    if (node = nodeByKeyValue[keyValue]) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue[keyValue] = null;
    } else {
      enter[i] = new _enter__WEBPACK_IMPORTED_MODULE_1__["EnterNode"](parent, data[i]);
    }
  } // Add any remaining nodes that were not bound to data to exit.


  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {
      exit[i] = node;
    }
  }
}

/* harmony default export */ __webpack_exports__["default"] = (function (value, key) {
  if (!value) {
    data = new Array(this.size()), j = -1;
    this.each(function (d) {
      data[++j] = d;
    });
    return data;
  }

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;
  if (typeof value !== "function") value = Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = value.call(parent, parent && parent.__data__, j, parents),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);
    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.

    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;

        while (!(next = updateGroup[i1]) && ++i1 < dataLength) {
          ;
        }

        previous._next = next || null;
      }
    }
  }

  update = new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/datum.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/datum.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  return arguments.length ? this.property("__data__", value) : this.node().__data__;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/dispatch.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/dispatch.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../window */ "./node_modules/d3-selection/src/window.js");


function dispatchEvent(node, type, params) {
  var window = Object(_window__WEBPACK_IMPORTED_MODULE_0__["default"])(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function () {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function () {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (type, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/each.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/each.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (callback) {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/empty.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/empty.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return !this.node();
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/enter.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/enter.js ***!
  \**********************************************************/
/*! exports provided: default, EnterNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EnterNode", function() { return EnterNode; });
/* harmony import */ var _sparse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sparse */ "./node_modules/d3-selection/src/selection/sparse.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function () {
  return new _index__WEBPACK_IMPORTED_MODULE_1__["Selection"](this._enter || this._groups.map(_sparse__WEBPACK_IMPORTED_MODULE_0__["default"]), this._parents);
});
function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}
EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function appendChild(child) {
    return this._parent.insertBefore(child, this._next);
  },
  insertBefore: function insertBefore(child, next) {
    return this._parent.insertBefore(child, next);
  },
  querySelector: function querySelector(selector) {
    return this._parent.querySelector(selector);
  },
  querySelectorAll: function querySelectorAll(selector) {
    return this._parent.querySelectorAll(selector);
  }
};

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/exit.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/exit.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sparse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sparse */ "./node_modules/d3-selection/src/selection/sparse.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function () {
  return new _index__WEBPACK_IMPORTED_MODULE_1__["Selection"](this._exit || this._groups.map(_sparse__WEBPACK_IMPORTED_MODULE_0__["default"]), this._parents);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/filter.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/filter.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _matcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../matcher */ "./node_modules/d3-selection/src/matcher.js");


/* harmony default export */ __webpack_exports__["default"] = (function (match) {
  if (typeof match !== "function") match = Object(_matcher__WEBPACK_IMPORTED_MODULE_1__["default"])(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](subgroups, this._parents);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/html.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/html.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function () {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/index.js ***!
  \**********************************************************/
/*! exports provided: root, Selection, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "root", function() { return root; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Selection", function() { return Selection; });
/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./select */ "./node_modules/d3-selection/src/selection/select.js");
/* harmony import */ var _selectAll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./selectAll */ "./node_modules/d3-selection/src/selection/selectAll.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filter */ "./node_modules/d3-selection/src/selection/filter.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data */ "./node_modules/d3-selection/src/selection/data.js");
/* harmony import */ var _enter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./enter */ "./node_modules/d3-selection/src/selection/enter.js");
/* harmony import */ var _exit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exit */ "./node_modules/d3-selection/src/selection/exit.js");
/* harmony import */ var _join__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./join */ "./node_modules/d3-selection/src/selection/join.js");
/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./merge */ "./node_modules/d3-selection/src/selection/merge.js");
/* harmony import */ var _order__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./order */ "./node_modules/d3-selection/src/selection/order.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./sort */ "./node_modules/d3-selection/src/selection/sort.js");
/* harmony import */ var _call__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./call */ "./node_modules/d3-selection/src/selection/call.js");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./nodes */ "./node_modules/d3-selection/src/selection/nodes.js");
/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./node */ "./node_modules/d3-selection/src/selection/node.js");
/* harmony import */ var _size__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./size */ "./node_modules/d3-selection/src/selection/size.js");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./empty */ "./node_modules/d3-selection/src/selection/empty.js");
/* harmony import */ var _each__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./each */ "./node_modules/d3-selection/src/selection/each.js");
/* harmony import */ var _attr__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./attr */ "./node_modules/d3-selection/src/selection/attr.js");
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./style */ "./node_modules/d3-selection/src/selection/style.js");
/* harmony import */ var _property__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./property */ "./node_modules/d3-selection/src/selection/property.js");
/* harmony import */ var _classed__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./classed */ "./node_modules/d3-selection/src/selection/classed.js");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./text */ "./node_modules/d3-selection/src/selection/text.js");
/* harmony import */ var _html__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./html */ "./node_modules/d3-selection/src/selection/html.js");
/* harmony import */ var _raise__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./raise */ "./node_modules/d3-selection/src/selection/raise.js");
/* harmony import */ var _lower__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./lower */ "./node_modules/d3-selection/src/selection/lower.js");
/* harmony import */ var _append__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./append */ "./node_modules/d3-selection/src/selection/append.js");
/* harmony import */ var _insert__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./insert */ "./node_modules/d3-selection/src/selection/insert.js");
/* harmony import */ var _remove__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./remove */ "./node_modules/d3-selection/src/selection/remove.js");
/* harmony import */ var _clone__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./clone */ "./node_modules/d3-selection/src/selection/clone.js");
/* harmony import */ var _datum__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./datum */ "./node_modules/d3-selection/src/selection/datum.js");
/* harmony import */ var _on__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./on */ "./node_modules/d3-selection/src/selection/on.js");
/* harmony import */ var _dispatch__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./dispatch */ "./node_modules/d3-selection/src/selection/dispatch.js");































var root = [null];
function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: _select__WEBPACK_IMPORTED_MODULE_0__["default"],
  selectAll: _selectAll__WEBPACK_IMPORTED_MODULE_1__["default"],
  filter: _filter__WEBPACK_IMPORTED_MODULE_2__["default"],
  data: _data__WEBPACK_IMPORTED_MODULE_3__["default"],
  enter: _enter__WEBPACK_IMPORTED_MODULE_4__["default"],
  exit: _exit__WEBPACK_IMPORTED_MODULE_5__["default"],
  join: _join__WEBPACK_IMPORTED_MODULE_6__["default"],
  merge: _merge__WEBPACK_IMPORTED_MODULE_7__["default"],
  order: _order__WEBPACK_IMPORTED_MODULE_8__["default"],
  sort: _sort__WEBPACK_IMPORTED_MODULE_9__["default"],
  call: _call__WEBPACK_IMPORTED_MODULE_10__["default"],
  nodes: _nodes__WEBPACK_IMPORTED_MODULE_11__["default"],
  node: _node__WEBPACK_IMPORTED_MODULE_12__["default"],
  size: _size__WEBPACK_IMPORTED_MODULE_13__["default"],
  empty: _empty__WEBPACK_IMPORTED_MODULE_14__["default"],
  each: _each__WEBPACK_IMPORTED_MODULE_15__["default"],
  attr: _attr__WEBPACK_IMPORTED_MODULE_16__["default"],
  style: _style__WEBPACK_IMPORTED_MODULE_17__["default"],
  property: _property__WEBPACK_IMPORTED_MODULE_18__["default"],
  classed: _classed__WEBPACK_IMPORTED_MODULE_19__["default"],
  text: _text__WEBPACK_IMPORTED_MODULE_20__["default"],
  html: _html__WEBPACK_IMPORTED_MODULE_21__["default"],
  raise: _raise__WEBPACK_IMPORTED_MODULE_22__["default"],
  lower: _lower__WEBPACK_IMPORTED_MODULE_23__["default"],
  append: _append__WEBPACK_IMPORTED_MODULE_24__["default"],
  insert: _insert__WEBPACK_IMPORTED_MODULE_25__["default"],
  remove: _remove__WEBPACK_IMPORTED_MODULE_26__["default"],
  clone: _clone__WEBPACK_IMPORTED_MODULE_27__["default"],
  datum: _datum__WEBPACK_IMPORTED_MODULE_28__["default"],
  on: _on__WEBPACK_IMPORTED_MODULE_29__["default"],
  dispatch: _dispatch__WEBPACK_IMPORTED_MODULE_30__["default"]
};
/* harmony default export */ __webpack_exports__["default"] = (selection);

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/insert.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/insert.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _creator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../creator */ "./node_modules/d3-selection/src/creator.js");
/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selector */ "./node_modules/d3-selection/src/selector.js");



function constantNull() {
  return null;
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, before) {
  var create = typeof name === "function" ? name : Object(_creator__WEBPACK_IMPORTED_MODULE_0__["default"])(name),
      select = before == null ? constantNull : typeof before === "function" ? before : Object(_selector__WEBPACK_IMPORTED_MODULE_1__["default"])(before);
  return this.select(function () {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/join.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/join.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (onenter, onupdate, onexit) {
  var enter = this.enter(),
      update = this,
      exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null) update = onupdate(update);
  if (onexit == null) exit.remove();else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/lower.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/lower.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return this.each(lower);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/merge.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/merge.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");

/* harmony default export */ __webpack_exports__["default"] = (function (selection) {
  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](merges, this._parents);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/node.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/node.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/nodes.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/nodes.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var nodes = new Array(this.size()),
      i = -1;
  this.each(function () {
    nodes[++i] = this;
  });
  return nodes;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/on.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/on.js ***!
  \*******************************************************/
/*! exports provided: event, default, customEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "event", function() { return event; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "customEvent", function() { return customEvent; });
var filterEvents = {};
var event = null;

if (typeof document !== "undefined") {
  var element = document.documentElement;

  if (!("onmouseenter" in element)) {
    filterEvents = {
      mouseenter: "mouseover",
      mouseleave: "mouseout"
    };
  }
}

function filterContextListener(listener, index, group) {
  listener = contextListener(listener, index, group);
  return function (event) {
    var related = event.relatedTarget;

    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {
      listener.call(this, event);
    }
  };
}

function contextListener(listener, index, group) {
  return function (event1) {
    var event0 = event; // Events can be reentrant (e.g., focus).

    event = event1;

    try {
      listener.call(this, this.__data__, index, group);
    } finally {
      event = event0;
    }
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {
      type: t,
      name: name
    };
  });
}

function onRemove(typename) {
  return function () {
    var on = this.__on;
    if (!on) return;

    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
      } else {
        on[++i] = o;
      }
    }

    if (++i) on.length = i;else delete this.__on;
  };
}

function onAdd(typename, value, capture) {
  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
  return function (d, i, group) {
    var on = this.__on,
        o,
        listener = wrap(value, i, group);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
        this.addEventListener(o.type, o.listener = listener, o.capture = capture);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, capture);
    o = {
      type: typename.type,
      name: typename.name,
      value: value,
      listener: listener,
      capture: capture
    };
    if (!on) this.__on = [o];else on.push(o);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (typename, value, capture) {
  var typenames = parseTypenames(typename + ""),
      i,
      n = typenames.length,
      t;

  if (arguments.length < 2) {
    var on = this.node().__on;

    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  if (capture == null) capture = false;

  for (i = 0; i < n; ++i) {
    this.each(on(typenames[i], value, capture));
  }

  return this;
});
function customEvent(event1, listener, that, args) {
  var event0 = event;
  event1.sourceEvent = event;
  event = event1;

  try {
    return listener.apply(that, args);
  } finally {
    event = event0;
  }
}

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/order.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/order.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/property.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/property.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function propertyRemove(name) {
  return function () {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function () {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];else this[name] = v;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value) {
  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/raise.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/raise.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return this.each(raise);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/remove.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/remove.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return this.each(remove);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/select.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/select.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selector */ "./node_modules/d3-selection/src/selector.js");


/* harmony default export */ __webpack_exports__["default"] = (function (select) {
  if (typeof select !== "function") select = Object(_selector__WEBPACK_IMPORTED_MODULE_1__["default"])(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](subgroups, this._parents);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/selectAll.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/selectAll.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _selectorAll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selectorAll */ "./node_modules/d3-selection/src/selectorAll.js");


/* harmony default export */ __webpack_exports__["default"] = (function (select) {
  if (typeof select !== "function") select = Object(_selectorAll__WEBPACK_IMPORTED_MODULE_1__["default"])(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](subgroups, parents);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/size.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/size.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var size = 0;
  this.each(function () {
    ++size;
  });
  return size;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/sort.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/sort.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");

/* harmony default export */ __webpack_exports__["default"] = (function (compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }

    sortgroup.sort(compareNode);
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](sortgroups, this._parents).order();
});

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/sparse.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/sparse.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (update) {
  return new Array(update.length);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/style.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/style.js ***!
  \**********************************************************/
/*! exports provided: default, styleValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "styleValue", function() { return styleValue; });
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../window */ "./node_modules/d3-selection/src/window.js");


function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function () {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value, priority) {
  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
});
function styleValue(node, name) {
  return node.style.getPropertyValue(name) || Object(_window__WEBPACK_IMPORTED_MODULE_0__["default"])(node).getComputedStyle(node, null).getPropertyValue(name);
}

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/text.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/text.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selector.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-selection/src/selector.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function none() {}

/* harmony default export */ __webpack_exports__["default"] = (function (selector) {
  return selector == null ? none : function () {
    return this.querySelector(selector);
  };
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selectorAll.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-selection/src/selectorAll.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function empty() {
  return [];
}

/* harmony default export */ __webpack_exports__["default"] = (function (selector) {
  return selector == null ? empty : function () {
    return this.querySelectorAll(selector);
  };
});

/***/ }),

/***/ "./node_modules/d3-selection/src/sourceEvent.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-selection/src/sourceEvent.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _selection_on__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/on */ "./node_modules/d3-selection/src/selection/on.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var current = _selection_on__WEBPACK_IMPORTED_MODULE_0__["event"],
      source;

  while (source = current.sourceEvent) {
    current = source;
  }

  return current;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/touch.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/touch.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sourceEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sourceEvent */ "./node_modules/d3-selection/src/sourceEvent.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "./node_modules/d3-selection/src/point.js");


/* harmony default export */ __webpack_exports__["default"] = (function (node, touches, identifier) {
  if (arguments.length < 3) identifier = touches, touches = Object(_sourceEvent__WEBPACK_IMPORTED_MODULE_0__["default"])().changedTouches;

  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
    if ((touch = touches[i]).identifier === identifier) {
      return Object(_point__WEBPACK_IMPORTED_MODULE_1__["default"])(node, touch);
    }
  }

  return null;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/touches.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/touches.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sourceEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sourceEvent */ "./node_modules/d3-selection/src/sourceEvent.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "./node_modules/d3-selection/src/point.js");


/* harmony default export */ __webpack_exports__["default"] = (function (node, touches) {
  if (touches == null) touches = Object(_sourceEvent__WEBPACK_IMPORTED_MODULE_0__["default"])().touches;

  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
    points[i] = Object(_point__WEBPACK_IMPORTED_MODULE_1__["default"])(node, touches[i]);
  }

  return points;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/window.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/window.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (node) {
  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node
  node.document && node // node is a Window
  || node.defaultView; // node is a Document
});

/***/ }),

/***/ "./node_modules/d3-shape/src/arc.js":
/*!******************************************!*\
  !*** ./node_modules/d3-shape/src/arc.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-shape/src/math.js");




function arcInnerRadius(d) {
  return d.innerRadius;
}

function arcOuterRadius(d) {
  return d.outerRadius;
}

function arcStartAngle(d) {
  return d.startAngle;
}

function arcEndAngle(d) {
  return d.endAngle;
}

function arcPadAngle(d) {
  return d && d.padAngle; // Note: optional!
}

function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0,
      y10 = y1 - y0,
      x32 = x3 - x2,
      y32 = y3 - y2,
      t = y32 * x10 - x32 * y10;
  if (t * t < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
} // Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html


function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1,
      y01 = y0 - y1,
      lo = (cw ? rc : -rc) / Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(x01 * x01 + y01 * y01),
      ox = lo * y01,
      oy = -lo * x01,
      x11 = x0 + ox,
      y11 = y0 + oy,
      x10 = x1 + ox,
      y10 = y1 + oy,
      x00 = (x11 + x10) / 2,
      y00 = (y11 + y10) / 2,
      dx = x10 - x11,
      dy = y10 - y11,
      d2 = dx * dx + dy * dy,
      r = r1 - rc,
      D = x11 * y10 - x10 * y11,
      d = (dy < 0 ? -1 : 1) * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(Object(_math__WEBPACK_IMPORTED_MODULE_2__["max"])(0, r * r * d2 - D * D)),
      cx0 = (D * dy - dx * d) / d2,
      cy0 = (-D * dx - dy * d) / d2,
      cx1 = (D * dy + dx * d) / d2,
      cy1 = (-D * dx + dy * d) / d2,
      dx0 = cx0 - x00,
      dy0 = cy0 - y00,
      dx1 = cx1 - x00,
      dy1 = cy1 - y00; // Pick the closer of the two intersection points.
  // TODO Is there a faster way to determine which intersection to use?

  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var innerRadius = arcInnerRadius,
      outerRadius = arcOuterRadius,
      cornerRadius = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(0),
      padRadius = null,
      startAngle = arcStartAngle,
      endAngle = arcEndAngle,
      padAngle = arcPadAngle,
      context = null;

  function arc() {
    var buffer,
        r,
        r0 = +innerRadius.apply(this, arguments),
        r1 = +outerRadius.apply(this, arguments),
        a0 = startAngle.apply(this, arguments) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"],
        a1 = endAngle.apply(this, arguments) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"],
        da = Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(a1 - a0),
        cw = a1 > a0;
    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])(); // Ensure that the outer radius is always larger than the inner radius.

    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?

    if (!(r1 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"])) context.moveTo(0, 0); // Or is it a circle or annulus?
    else if (da > _math__WEBPACK_IMPORTED_MODULE_2__["tau"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
        context.moveTo(r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a0), r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a0));
        context.arc(0, 0, r1, a0, a1, !cw);

        if (r0 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
          context.moveTo(r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a1), r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a1));
          context.arc(0, 0, r0, a1, a0, cw);
        }
      } // Or is it a circular or annular sector?
      else {
          var a01 = a0,
              a11 = a1,
              a00 = a0,
              a10 = a1,
              da0 = da,
              da1 = da,
              ap = padAngle.apply(this, arguments) / 2,
              rp = ap > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] && (padRadius ? +padRadius.apply(this, arguments) : Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(r0 * r0 + r1 * r1)),
              rc = Object(_math__WEBPACK_IMPORTED_MODULE_2__["min"])(Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
              rc0 = rc,
              rc1 = rc,
              t0,
              t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.

          if (rp > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
            var p0 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["asin"])(rp / r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(ap)),
                p1 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["asin"])(rp / r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(ap));
            if ((da0 -= p0 * 2) > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;
            if ((da1 -= p1 * 2) > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;
          }

          var x01 = r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a01),
              y01 = r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a01),
              x10 = r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a10),
              y10 = r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a10); // Apply rounded corners?

          if (rc > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
            var x11 = r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a11),
                y11 = r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a11),
                x00 = r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a00),
                y00 = r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a00),
                oc; // Restrict the corner radius according to the sector angle.

            if (da < _math__WEBPACK_IMPORTED_MODULE_2__["pi"] && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
              var ax = x01 - oc[0],
                  ay = y01 - oc[1],
                  bx = x11 - oc[0],
                  by = y11 - oc[1],
                  kc = 1 / Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(Object(_math__WEBPACK_IMPORTED_MODULE_2__["acos"])((ax * bx + ay * by) / (Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(ax * ax + ay * ay) * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(bx * bx + by * by))) / 2),
                  lc = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["min"])(rc, (r0 - lc) / (kc - 1));
              rc1 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["min"])(rc, (r1 - lc) / (kc + 1));
            }
          } // Is the sector collapsed to a line?


          if (!(da1 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"])) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?
          else if (rc1 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
              t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
              t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y01, t0.x01), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc1, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y01, t0.x01), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r1, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.cy + t0.y11, t0.cx + t0.x11), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
                  context.arc(t1.cx, t1.cy, rc1, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y11, t1.x11), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y01, t1.x01), !cw);
                }
            } // Or is the outer ring just a circular arc?
            else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?
          // Or perhaps it’s an annular sector collapsed due to padding?

          if (!(r0 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) || !(da0 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"])) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?
          else if (rc0 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
              t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
              t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
              context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y01, t0.x01), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc0, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y01, t0.x01), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r0, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.cy + t0.y11, t0.cx + t0.x11), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.cy + t1.y11, t1.cx + t1.x11), cw);
                  context.arc(t1.cx, t1.cy, rc0, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y11, t1.x11), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y01, t1.x01), !cw);
                }
            } // Or is the inner ring just a circular arc?
            else context.arc(0, 0, r0, a10, a00, cw);
        }
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  arc.centroid = function () {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - _math__WEBPACK_IMPORTED_MODULE_2__["pi"] / 2;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a) * r, Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a) * r];
  };

  arc.innerRadius = function (_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : innerRadius;
  };

  arc.outerRadius = function (_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : outerRadius;
  };

  arc.cornerRadius = function (_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : cornerRadius;
  };

  arc.padRadius = function (_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : padRadius;
  };

  arc.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : startAngle;
  };

  arc.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : endAngle;
  };

  arc.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : padAngle;
  };

  arc.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, arc) : context;
  };

  return arc;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/area.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/area.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _curve_linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./curve/linear */ "./node_modules/d3-shape/src/curve/linear.js");
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./line */ "./node_modules/d3-shape/src/line.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./point */ "./node_modules/d3-shape/src/point.js");





/* harmony default export */ __webpack_exports__["default"] = (function () {
  var x0 = _point__WEBPACK_IMPORTED_MODULE_4__["x"],
      x1 = null,
      y0 = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(0),
      y1 = _point__WEBPACK_IMPORTED_MODULE_4__["y"],
      defined = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(true),
      context = null,
      curve = _curve_linear__WEBPACK_IMPORTED_MODULE_2__["default"],
      output = null;

  function area(data) {
    var i,
        j,
        k,
        n = data.length,
        d,
        defined0 = false,
        buffer,
        x0z = new Array(n),
        y0z = new Array(n);
    if (context == null) output = curve(buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();

          for (k = i - 1; k >= j; --k) {
            output.point(x0z[k], y0z[k]);
          }

          output.lineEnd();
          output.areaEnd();
        }
      }

      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  function arealine() {
    return Object(_line__WEBPACK_IMPORTED_MODULE_3__["default"])().defined(defined).curve(curve).context(context);
  }

  area.x = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), x1 = null, area) : x0;
  };

  area.x0 = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), area) : x0;
  };

  area.x1 = function (_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), area) : x1;
  };

  area.y = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), y1 = null, area) : y0;
  };

  area.y0 = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), area) : y0;
  };

  area.y1 = function (_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), area) : y1;
  };

  area.lineX0 = area.lineY0 = function () {
    return arealine().x(x0).y(y0);
  };

  area.lineY1 = function () {
    return arealine().x(x0).y(y1);
  };

  area.lineX1 = function () {
    return arealine().x(x1).y(y0);
  };

  area.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(!!_), area) : defined;
  };

  area.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };

  area.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };

  return area;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/areaRadial.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/areaRadial.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _curve_radial__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curve/radial */ "./node_modules/d3-shape/src/curve/radial.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area */ "./node_modules/d3-shape/src/area.js");
/* harmony import */ var _lineRadial__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lineRadial */ "./node_modules/d3-shape/src/lineRadial.js");



/* harmony default export */ __webpack_exports__["default"] = (function () {
  var a = Object(_area__WEBPACK_IMPORTED_MODULE_1__["default"])().curve(_curve_radial__WEBPACK_IMPORTED_MODULE_0__["curveRadialLinear"]),
      c = a.curve,
      x0 = a.lineX0,
      x1 = a.lineX1,
      y0 = a.lineY0,
      y1 = a.lineY1;
  a.angle = a.x, delete a.x;
  a.startAngle = a.x0, delete a.x0;
  a.endAngle = a.x1, delete a.x1;
  a.radius = a.y, delete a.y;
  a.innerRadius = a.y0, delete a.y0;
  a.outerRadius = a.y1, delete a.y1;
  a.lineStartAngle = function () {
    return Object(_lineRadial__WEBPACK_IMPORTED_MODULE_2__["lineRadial"])(x0());
  }, delete a.lineX0;
  a.lineEndAngle = function () {
    return Object(_lineRadial__WEBPACK_IMPORTED_MODULE_2__["lineRadial"])(x1());
  }, delete a.lineX1;
  a.lineInnerRadius = function () {
    return Object(_lineRadial__WEBPACK_IMPORTED_MODULE_2__["lineRadial"])(y0());
  }, delete a.lineY0;
  a.lineOuterRadius = function () {
    return Object(_lineRadial__WEBPACK_IMPORTED_MODULE_2__["lineRadial"])(y1());
  }, delete a.lineY1;

  a.curve = function (_) {
    return arguments.length ? c(Object(_curve_radial__WEBPACK_IMPORTED_MODULE_0__["default"])(_)) : c()._curve;
  };

  return a;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/array.js ***!
  \********************************************/
/*! exports provided: slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
var slice = Array.prototype.slice;

/***/ }),

/***/ "./node_modules/d3-shape/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-shape/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function constant() {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/basis.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basis.js ***!
  \**************************************************/
/*! exports provided: point, Basis, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return _point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Basis", function() { return Basis; });
function _point(that, x, y) {
  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
}


function Basis(context) {
  this._context = context;
}
Basis.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 3:
        _point(this, this._x1, this._y1);

      // proceed

      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;

        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);

      // proceed

      default:
        _point(this, x, y);

        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new Basis(context);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/basisClosed.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basisClosed.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-shape/src/noop.js");
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-shape/src/curve/basis.js");



function BasisClosed(context) {
  this._context = context;
}

BasisClosed.prototype = {
  areaStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  areaEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x2, this._y2);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);

          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x2, this._y2);
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          break;
        }
    }
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x, this._y2 = y;
        break;

      case 1:
        this._point = 2;
        this._x3 = x, this._y3 = y;
        break;

      case 2:
        this._point = 3;
        this._x4 = x, this._y4 = y;

        this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);

        break;

      default:
        Object(_basis__WEBPACK_IMPORTED_MODULE_1__["point"])(this, x, y);

        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new BasisClosed(context);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/basisOpen.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basisOpen.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-shape/src/curve/basis.js");


function BasisOpen(context) {
  this._context = context;
}

BasisOpen.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x) / 6,
            y0 = (this._y0 + 4 * this._y1 + y) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        Object(_basis__WEBPACK_IMPORTED_MODULE_0__["point"])(this, x, y);

        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new BasisOpen(context);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/bundle.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/bundle.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-shape/src/curve/basis.js");


function Bundle(context, beta) {
  this._basis = new _basis__WEBPACK_IMPORTED_MODULE_0__["Basis"](context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function lineStart() {
    this._x = [];
    this._y = [];

    this._basis.lineStart();
  },
  lineEnd: function lineEnd() {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;

        this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
      }
    }

    this._x = this._y = null;

    this._basis.lineEnd();
  },
  point: function point(x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(beta) {
  function bundle(context) {
    return beta === 1 ? new _basis__WEBPACK_IMPORTED_MODULE_0__["Basis"](context) : new Bundle(context, beta);
  }

  bundle.beta = function (beta) {
    return custom(+beta);
  };

  return bundle;
})(0.85));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/cardinal.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinal.js ***!
  \*****************************************************/
/*! exports provided: point, Cardinal, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return _point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cardinal", function() { return Cardinal; });
function _point(that, x, y) {
  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
}


function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
Cardinal.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        _point(this, this._x1, this._y1);

        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        this._x1 = x, this._y1 = y;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        _point(this, x, y);

        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(tension) {
  function cardinal(context) {
    return new Cardinal(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/cardinalClosed.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinalClosed.js ***!
  \***********************************************************/
/*! exports provided: CardinalClosed, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardinalClosed", function() { return CardinalClosed; });
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-shape/src/noop.js");
/* harmony import */ var _cardinal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cardinal */ "./node_modules/d3-shape/src/curve/cardinal.js");


function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalClosed.prototype = {
  areaStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  areaEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        Object(_cardinal__WEBPACK_IMPORTED_MODULE_1__["point"])(this, x, y);

        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(tension) {
  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/cardinalOpen.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinalOpen.js ***!
  \*********************************************************/
/*! exports provided: CardinalOpen, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardinalOpen", function() { return CardinalOpen; });
/* harmony import */ var _cardinal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cardinal */ "./node_modules/d3-shape/src/curve/cardinal.js");

function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalOpen.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        Object(_cardinal__WEBPACK_IMPORTED_MODULE_0__["point"])(this, x, y);

        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(tension) {
  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/catmullRom.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRom.js ***!
  \*******************************************************/
/*! exports provided: point, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return _point; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-shape/src/math.js");
/* harmony import */ var _cardinal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cardinal */ "./node_modules/d3-shape/src/curve/cardinal.js");



function _point(that, x, y) {
  var x1 = that._x1,
      y1 = that._y1,
      x2 = that._x2,
      y2 = that._y2;

  if (that._l01_a > _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) {
    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }

  if (that._l23_a > _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
  }

  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}



function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRom.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        this.point(this._x2, this._y2);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        _point(this, x, y);

        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new _cardinal__WEBPACK_IMPORTED_MODULE_1__["Cardinal"](context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/catmullRomClosed.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRomClosed.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cardinalClosed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cardinalClosed */ "./node_modules/d3-shape/src/curve/cardinalClosed.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-shape/src/noop.js");
/* harmony import */ var _catmullRom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./catmullRom */ "./node_modules/d3-shape/src/curve/catmullRom.js");




function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomClosed.prototype = {
  areaStart: _noop__WEBPACK_IMPORTED_MODULE_1__["default"],
  areaEnd: _noop__WEBPACK_IMPORTED_MODULE_1__["default"],
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function point(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        Object(_catmullRom__WEBPACK_IMPORTED_MODULE_2__["point"])(this, x, y);

        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new _cardinalClosed__WEBPACK_IMPORTED_MODULE_0__["CardinalClosed"](context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/catmullRomOpen.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRomOpen.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cardinalOpen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cardinalOpen */ "./node_modules/d3-shape/src/curve/cardinalOpen.js");
/* harmony import */ var _catmullRom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./catmullRom */ "./node_modules/d3-shape/src/curve/catmullRom.js");



function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomOpen.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        Object(_catmullRom__WEBPACK_IMPORTED_MODULE_1__["point"])(this, x, y);

        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new _cardinalOpen__WEBPACK_IMPORTED_MODULE_0__["CardinalOpen"](context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/linear.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/linear.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        this._context.lineTo(x, y);

        break;
    }
  }
};
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new Linear(context);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/linearClosed.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/linearClosed.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-shape/src/noop.js");


function LinearClosed(context) {
  this._context = context;
}

LinearClosed.prototype = {
  areaStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  areaEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  lineStart: function lineStart() {
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._point) this._context.closePath();
  },
  point: function point(x, y) {
    x = +x, y = +y;
    if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);
  }
};
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new LinearClosed(context);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/monotone.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/monotone.js ***!
  \*****************************************************/
/*! exports provided: monotoneX, monotoneY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monotoneX", function() { return monotoneX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monotoneY", function() { return monotoneY; });
function sign(x) {
  return x < 0 ? -1 : 1;
} // Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.


function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0,
      h1 = x2 - that._x1,
      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
      p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
} // Calculate a one-sided slope.


function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
} // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".


function _point(that, t0, t1) {
  var x0 = that._x0,
      y0 = that._y0,
      x1 = that._x1,
      y1 = that._y1,
      dx = (x1 - x0) / 3;

  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}

function MonotoneX(context) {
  this._context = context;
}

MonotoneX.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;

      case 3:
        _point(this, this._t0, slope2(this, this._t0));

        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    var t1 = NaN;
    x = +x, y = +y;
    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;

        _point(this, slope2(this, t1 = slope3(this, x, y)), t1);

        break;

      default:
        _point(this, this._t0, t1 = slope3(this, x, y));

        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
    this._t0 = t1;
  }
};

function MonotoneY(context) {
  this._context = new ReflectContext(context);
}

(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {
  MonotoneX.prototype.point.call(this, y, x);
};

function ReflectContext(context) {
  this._context = context;
}

ReflectContext.prototype = {
  moveTo: function moveTo(x, y) {
    this._context.moveTo(y, x);
  },
  closePath: function closePath() {
    this._context.closePath();
  },
  lineTo: function lineTo(x, y) {
    this._context.lineTo(y, x);
  },
  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {
    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
  }
};
function monotoneX(context) {
  return new MonotoneX(context);
}
function monotoneY(context) {
  return new MonotoneY(context);
}

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/natural.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/natural.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function Natural(context) {
  this._context = context;
}

Natural.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function lineEnd() {
    var x = this._x,
        y = this._y,
        n = x.length;

    if (n) {
      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);

      if (n === 2) {
        this._context.lineTo(x[1], y[1]);
      } else {
        var px = controlPoints(x),
            py = controlPoints(y);

        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }

    if (this._line || this._line !== 0 && n === 1) this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function point(x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
}; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.

function controlPoints(x) {
  var i,
      n = x.length - 1,
      m,
      a = new Array(n),
      b = new Array(n),
      r = new Array(n);
  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];

  for (i = 1; i < n - 1; ++i) {
    a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
  }

  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];

  for (i = 1; i < n; ++i) {
    m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
  }

  a[n - 1] = r[n - 1] / b[n - 1];

  for (i = n - 2; i >= 0; --i) {
    a[i] = (r[i] - a[i + 1]) / b[i];
  }

  b[n - 1] = (x[n] + a[n - 1]) / 2;

  for (i = 0; i < n - 1; ++i) {
    b[i] = 2 * x[i + 1] - a[i + 1];
  }

  return [a, b];
}

/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new Natural(context);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/radial.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/radial.js ***!
  \***************************************************/
/*! exports provided: curveRadialLinear, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "curveRadialLinear", function() { return curveRadialLinear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return curveRadial; });
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-shape/src/curve/linear.js");

var curveRadialLinear = curveRadial(_linear__WEBPACK_IMPORTED_MODULE_0__["default"]);

function Radial(curve) {
  this._curve = curve;
}

Radial.prototype = {
  areaStart: function areaStart() {
    this._curve.areaStart();
  },
  areaEnd: function areaEnd() {
    this._curve.areaEnd();
  },
  lineStart: function lineStart() {
    this._curve.lineStart();
  },
  lineEnd: function lineEnd() {
    this._curve.lineEnd();
  },
  point: function point(a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }
};
function curveRadial(curve) {
  function radial(context) {
    return new Radial(curve(context));
  }

  radial._curve = curve;
  return radial;
}

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/step.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/step.js ***!
  \*************************************************/
/*! exports provided: default, stepBefore, stepAfter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stepBefore", function() { return stepBefore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stepAfter", function() { return stepAfter; });
function Step(context, t) {
  this._context = context;
  this._t = t;
}

Step.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        {
          if (this._t <= 0) {
            this._context.lineTo(this._x, y);

            this._context.lineTo(x, y);
          } else {
            var x1 = this._x * (1 - this._t) + x * this._t;

            this._context.lineTo(x1, this._y);

            this._context.lineTo(x1, y);
          }

          break;
        }
    }

    this._x = x, this._y = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new Step(context, 0.5);
});
function stepBefore(context) {
  return new Step(context, 0);
}
function stepAfter(context) {
  return new Step(context, 1);
}

/***/ }),

/***/ "./node_modules/d3-shape/src/descending.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/descending.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-shape/src/identity.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (d) {
  return d;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/index.js ***!
  \********************************************/
/*! exports provided: arc, area, line, pie, areaRadial, radialArea, lineRadial, radialLine, pointRadial, linkHorizontal, linkVertical, linkRadial, symbol, symbols, symbolCircle, symbolCross, symbolDiamond, symbolSquare, symbolStar, symbolTriangle, symbolWye, curveBasisClosed, curveBasisOpen, curveBasis, curveBundle, curveCardinalClosed, curveCardinalOpen, curveCardinal, curveCatmullRomClosed, curveCatmullRomOpen, curveCatmullRom, curveLinearClosed, curveLinear, curveMonotoneX, curveMonotoneY, curveNatural, curveStep, curveStepAfter, curveStepBefore, stack, stackOffsetExpand, stackOffsetDiverging, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle, stackOrderAppearance, stackOrderAscending, stackOrderDescending, stackOrderInsideOut, stackOrderNone, stackOrderReverse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arc */ "./node_modules/d3-shape/src/arc.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arc", function() { return _arc__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area */ "./node_modules/d3-shape/src/area.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "area", function() { return _area__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./line */ "./node_modules/d3-shape/src/line.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "line", function() { return _line__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _pie__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pie */ "./node_modules/d3-shape/src/pie.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pie", function() { return _pie__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _areaRadial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./areaRadial */ "./node_modules/d3-shape/src/areaRadial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "areaRadial", function() { return _areaRadial__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "radialArea", function() { return _areaRadial__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _lineRadial__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lineRadial */ "./node_modules/d3-shape/src/lineRadial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lineRadial", function() { return _lineRadial__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "radialLine", function() { return _lineRadial__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _pointRadial__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pointRadial */ "./node_modules/d3-shape/src/pointRadial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pointRadial", function() { return _pointRadial__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _link_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./link/index */ "./node_modules/d3-shape/src/link/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkHorizontal", function() { return _link_index__WEBPACK_IMPORTED_MODULE_7__["linkHorizontal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkVertical", function() { return _link_index__WEBPACK_IMPORTED_MODULE_7__["linkVertical"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkRadial", function() { return _link_index__WEBPACK_IMPORTED_MODULE_7__["linkRadial"]; });

/* harmony import */ var _symbol__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./symbol */ "./node_modules/d3-shape/src/symbol.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbol", function() { return _symbol__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbols", function() { return _symbol__WEBPACK_IMPORTED_MODULE_8__["symbols"]; });

/* harmony import */ var _symbol_circle__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./symbol/circle */ "./node_modules/d3-shape/src/symbol/circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolCircle", function() { return _symbol_circle__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _symbol_cross__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./symbol/cross */ "./node_modules/d3-shape/src/symbol/cross.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolCross", function() { return _symbol_cross__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _symbol_diamond__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./symbol/diamond */ "./node_modules/d3-shape/src/symbol/diamond.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolDiamond", function() { return _symbol_diamond__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _symbol_square__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./symbol/square */ "./node_modules/d3-shape/src/symbol/square.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolSquare", function() { return _symbol_square__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _symbol_star__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./symbol/star */ "./node_modules/d3-shape/src/symbol/star.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolStar", function() { return _symbol_star__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _symbol_triangle__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./symbol/triangle */ "./node_modules/d3-shape/src/symbol/triangle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolTriangle", function() { return _symbol_triangle__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _symbol_wye__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./symbol/wye */ "./node_modules/d3-shape/src/symbol/wye.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolWye", function() { return _symbol_wye__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _curve_basisClosed__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./curve/basisClosed */ "./node_modules/d3-shape/src/curve/basisClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasisClosed", function() { return _curve_basisClosed__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _curve_basisOpen__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./curve/basisOpen */ "./node_modules/d3-shape/src/curve/basisOpen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasisOpen", function() { return _curve_basisOpen__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _curve_basis__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./curve/basis */ "./node_modules/d3-shape/src/curve/basis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasis", function() { return _curve_basis__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _curve_bundle__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./curve/bundle */ "./node_modules/d3-shape/src/curve/bundle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBundle", function() { return _curve_bundle__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _curve_cardinalClosed__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./curve/cardinalClosed */ "./node_modules/d3-shape/src/curve/cardinalClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinalClosed", function() { return _curve_cardinalClosed__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _curve_cardinalOpen__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./curve/cardinalOpen */ "./node_modules/d3-shape/src/curve/cardinalOpen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinalOpen", function() { return _curve_cardinalOpen__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _curve_cardinal__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./curve/cardinal */ "./node_modules/d3-shape/src/curve/cardinal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinal", function() { return _curve_cardinal__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _curve_catmullRomClosed__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./curve/catmullRomClosed */ "./node_modules/d3-shape/src/curve/catmullRomClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRomClosed", function() { return _curve_catmullRomClosed__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _curve_catmullRomOpen__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./curve/catmullRomOpen */ "./node_modules/d3-shape/src/curve/catmullRomOpen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRomOpen", function() { return _curve_catmullRomOpen__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _curve_catmullRom__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./curve/catmullRom */ "./node_modules/d3-shape/src/curve/catmullRom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRom", function() { return _curve_catmullRom__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _curve_linearClosed__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./curve/linearClosed */ "./node_modules/d3-shape/src/curve/linearClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveLinearClosed", function() { return _curve_linearClosed__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _curve_linear__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./curve/linear */ "./node_modules/d3-shape/src/curve/linear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveLinear", function() { return _curve_linear__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _curve_monotone__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./curve/monotone */ "./node_modules/d3-shape/src/curve/monotone.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveMonotoneX", function() { return _curve_monotone__WEBPACK_IMPORTED_MODULE_28__["monotoneX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveMonotoneY", function() { return _curve_monotone__WEBPACK_IMPORTED_MODULE_28__["monotoneY"]; });

/* harmony import */ var _curve_natural__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./curve/natural */ "./node_modules/d3-shape/src/curve/natural.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveNatural", function() { return _curve_natural__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _curve_step__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./curve/step */ "./node_modules/d3-shape/src/curve/step.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStep", function() { return _curve_step__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStepAfter", function() { return _curve_step__WEBPACK_IMPORTED_MODULE_30__["stepAfter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStepBefore", function() { return _curve_step__WEBPACK_IMPORTED_MODULE_30__["stepBefore"]; });

/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./stack */ "./node_modules/d3-shape/src/stack.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stack", function() { return _stack__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _offset_expand__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./offset/expand */ "./node_modules/d3-shape/src/offset/expand.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetExpand", function() { return _offset_expand__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _offset_diverging__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./offset/diverging */ "./node_modules/d3-shape/src/offset/diverging.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetDiverging", function() { return _offset_diverging__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _offset_none__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./offset/none */ "./node_modules/d3-shape/src/offset/none.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetNone", function() { return _offset_none__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony import */ var _offset_silhouette__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./offset/silhouette */ "./node_modules/d3-shape/src/offset/silhouette.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetSilhouette", function() { return _offset_silhouette__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony import */ var _offset_wiggle__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./offset/wiggle */ "./node_modules/d3-shape/src/offset/wiggle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetWiggle", function() { return _offset_wiggle__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony import */ var _order_appearance__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./order/appearance */ "./node_modules/d3-shape/src/order/appearance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderAppearance", function() { return _order_appearance__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony import */ var _order_ascending__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./order/ascending */ "./node_modules/d3-shape/src/order/ascending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderAscending", function() { return _order_ascending__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony import */ var _order_descending__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./order/descending */ "./node_modules/d3-shape/src/order/descending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderDescending", function() { return _order_descending__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony import */ var _order_insideOut__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./order/insideOut */ "./node_modules/d3-shape/src/order/insideOut.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderInsideOut", function() { return _order_insideOut__WEBPACK_IMPORTED_MODULE_40__["default"]; });

/* harmony import */ var _order_none__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./order/none */ "./node_modules/d3-shape/src/order/none.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderNone", function() { return _order_none__WEBPACK_IMPORTED_MODULE_41__["default"]; });

/* harmony import */ var _order_reverse__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./order/reverse */ "./node_modules/d3-shape/src/order/reverse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderReverse", function() { return _order_reverse__WEBPACK_IMPORTED_MODULE_42__["default"]; });





 // Note: radialArea is deprecated!

 // Note: radialLine is deprecated!







































/***/ }),

/***/ "./node_modules/d3-shape/src/line.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/line.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _curve_linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./curve/linear */ "./node_modules/d3-shape/src/curve/linear.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./point */ "./node_modules/d3-shape/src/point.js");




/* harmony default export */ __webpack_exports__["default"] = (function () {
  var x = _point__WEBPACK_IMPORTED_MODULE_3__["x"],
      y = _point__WEBPACK_IMPORTED_MODULE_3__["y"],
      defined = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(true),
      context = null,
      curve = _curve_linear__WEBPACK_IMPORTED_MODULE_2__["default"],
      output = null;

  function line(data) {
    var i,
        n = data.length,
        d,
        defined0 = false,
        buffer;
    if (context == null) output = curve(buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();else output.lineEnd();
      }

      if (defined0) output.point(+x(d, i, data), +y(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), line) : x;
  };

  line.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), line) : y;
  };

  line.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(!!_), line) : defined;
  };

  line.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/lineRadial.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/lineRadial.js ***!
  \*************************************************/
/*! exports provided: lineRadial, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lineRadial", function() { return lineRadial; });
/* harmony import */ var _curve_radial__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curve/radial */ "./node_modules/d3-shape/src/curve/radial.js");
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./line */ "./node_modules/d3-shape/src/line.js");


function lineRadial(l) {
  var c = l.curve;
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;

  l.curve = function (_) {
    return arguments.length ? c(Object(_curve_radial__WEBPACK_IMPORTED_MODULE_0__["default"])(_)) : c()._curve;
  };

  return l;
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return lineRadial(Object(_line__WEBPACK_IMPORTED_MODULE_1__["default"])().curve(_curve_radial__WEBPACK_IMPORTED_MODULE_0__["curveRadialLinear"]));
});

/***/ }),

/***/ "./node_modules/d3-shape/src/link/index.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/link/index.js ***!
  \*************************************************/
/*! exports provided: linkHorizontal, linkVertical, linkRadial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkHorizontal", function() { return linkHorizontal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkVertical", function() { return linkVertical; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkRadial", function() { return linkRadial; });
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../array */ "./node_modules/d3-shape/src/array.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../point */ "./node_modules/d3-shape/src/point.js");
/* harmony import */ var _pointRadial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../pointRadial */ "./node_modules/d3-shape/src/pointRadial.js");






function linkSource(d) {
  return d.source;
}

function linkTarget(d) {
  return d.target;
}

function link(curve) {
  var source = linkSource,
      target = linkTarget,
      x = _point__WEBPACK_IMPORTED_MODULE_3__["x"],
      y = _point__WEBPACK_IMPORTED_MODULE_3__["y"],
      context = null;

  function link() {
    var buffer,
        argv = _array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv);
    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])();
    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));
    if (buffer) return context = null, buffer + "" || null;
  }

  link.source = function (_) {
    return arguments.length ? (source = _, link) : source;
  };

  link.target = function (_) {
    return arguments.length ? (target = _, link) : target;
  };

  link.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(+_), link) : x;
  };

  link.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(+_), link) : y;
  };

  link.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, link) : context;
  };

  return link;
}

function curveHorizontal(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
}

function curveVertical(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
}

function curveRadial(context, x0, y0, x1, y1) {
  var p0 = Object(_pointRadial__WEBPACK_IMPORTED_MODULE_4__["default"])(x0, y0),
      p1 = Object(_pointRadial__WEBPACK_IMPORTED_MODULE_4__["default"])(x0, y0 = (y0 + y1) / 2),
      p2 = Object(_pointRadial__WEBPACK_IMPORTED_MODULE_4__["default"])(x1, y0),
      p3 = Object(_pointRadial__WEBPACK_IMPORTED_MODULE_4__["default"])(x1, y1);
  context.moveTo(p0[0], p0[1]);
  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
}

function linkHorizontal() {
  return link(curveHorizontal);
}
function linkVertical() {
  return link(curveVertical);
}
function linkRadial() {
  var l = link(curveRadial);
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  return l;
}

/***/ }),

/***/ "./node_modules/d3-shape/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/math.js ***!
  \*******************************************/
/*! exports provided: abs, atan2, cos, max, min, sin, sqrt, epsilon, pi, halfPi, tau, acos, asin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "abs", function() { return abs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan2", function() { return atan2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return cos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return sin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return sqrt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon", function() { return epsilon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return pi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "halfPi", function() { return halfPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return tau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acos", function() { return acos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asin", function() { return asin; });
var abs = Math.abs;
var atan2 = Math.atan2;
var cos = Math.cos;
var max = Math.max;
var min = Math.min;
var sin = Math.sin;
var sqrt = Math.sqrt;
var epsilon = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var tau = 2 * pi;
function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}
function asin(x) {
  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}

/***/ }),

/***/ "./node_modules/d3-shape/src/noop.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/noop.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {});

/***/ }),

/***/ "./node_modules/d3-shape/src/offset/diverging.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/diverging.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = yp;
      }
    }
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/offset/expand.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/expand.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/offset/none.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
    for (y = i = 0; i < n; ++i) {
      y += series[i][j][1] || 0;
    }

    if (y) for (i = 0; i < n; ++i) {
      series[i][j][1] /= y;
    }
  }

  Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series, order);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/offset/none.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/none.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (series, order) {
  if (!((n = series.length) > 1)) return;

  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];

    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/offset/silhouette.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/silhouette.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/offset/none.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series, order) {
  if (!((n = series.length) > 0)) return;

  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
    for (var i = 0, y = 0; i < n; ++i) {
      y += series[i][j][1] || 0;
    }

    s0[j][1] += s0[j][0] = -y / 2;
  }

  Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series, order);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/offset/wiggle.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/wiggle.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/offset/none.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series, order) {
  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;

  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
      var si = series[order[i]],
          sij0 = si[j][1] || 0,
          sij1 = si[j - 1][1] || 0,
          s3 = (sij0 - sij1) / 2;

      for (var k = 0; k < i; ++k) {
        var sk = series[order[k]],
            skj0 = sk[j][1] || 0,
            skj1 = sk[j - 1][1] || 0;
        s3 += skj0 - skj1;
      }

      s1 += sij0, s2 += s3 * sij0;
    }

    s0[j - 1][1] += s0[j - 1][0] = y;
    if (s1) y -= s2 / s1;
  }

  s0[j - 1][1] += s0[j - 1][0] = y;
  Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series, order);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/order/appearance.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/appearance.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/order/none.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series) {
  var peaks = series.map(peak);
  return Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series).sort(function (a, b) {
    return peaks[a] - peaks[b];
  });
});

function peak(series) {
  var i = -1,
      j = 0,
      n = series.length,
      vi,
      vj = -Infinity;

  while (++i < n) {
    if ((vi = +series[i][1]) > vj) vj = vi, j = i;
  }

  return j;
}

/***/ }),

/***/ "./node_modules/d3-shape/src/order/ascending.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/ascending.js ***!
  \******************************************************/
/*! exports provided: default, sum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return sum; });
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/order/none.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series) {
  var sums = series.map(sum);
  return Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series).sort(function (a, b) {
    return sums[a] - sums[b];
  });
});
function sum(series) {
  var s = 0,
      i = -1,
      n = series.length,
      v;

  while (++i < n) {
    if (v = +series[i][1]) s += v;
  }

  return s;
}

/***/ }),

/***/ "./node_modules/d3-shape/src/order/descending.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/descending.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-shape/src/order/ascending.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series) {
  return Object(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"])(series).reverse();
});

/***/ }),

/***/ "./node_modules/d3-shape/src/order/insideOut.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/insideOut.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _appearance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appearance */ "./node_modules/d3-shape/src/order/appearance.js");
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-shape/src/order/ascending.js");


/* harmony default export */ __webpack_exports__["default"] = (function (series) {
  var n = series.length,
      i,
      j,
      sums = series.map(_ascending__WEBPACK_IMPORTED_MODULE_1__["sum"]),
      order = Object(_appearance__WEBPACK_IMPORTED_MODULE_0__["default"])(series),
      top = 0,
      bottom = 0,
      tops = [],
      bottoms = [];

  for (i = 0; i < n; ++i) {
    j = order[i];

    if (top < bottom) {
      top += sums[j];
      tops.push(j);
    } else {
      bottom += sums[j];
      bottoms.push(j);
    }
  }

  return bottoms.reverse().concat(tops);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/order/none.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/order/none.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (series) {
  var n = series.length,
      o = new Array(n);

  while (--n >= 0) {
    o[n] = n;
  }

  return o;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/order/reverse.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/order/reverse.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/order/none.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series) {
  return Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series).reverse();
});

/***/ }),

/***/ "./node_modules/d3-shape/src/pie.js":
/*!******************************************!*\
  !*** ./node_modules/d3-shape/src/pie.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _descending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./descending */ "./node_modules/d3-shape/src/descending.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-shape/src/identity.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./math */ "./node_modules/d3-shape/src/math.js");




/* harmony default export */ __webpack_exports__["default"] = (function () {
  var value = _identity__WEBPACK_IMPORTED_MODULE_2__["default"],
      sortValues = _descending__WEBPACK_IMPORTED_MODULE_1__["default"],
      sort = null,
      startAngle = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(0),
      endAngle = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(_math__WEBPACK_IMPORTED_MODULE_3__["tau"]),
      padAngle = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(0);

  function pie(data) {
    var i,
        n = data.length,
        j,
        k,
        sum = 0,
        index = new Array(n),
        arcs = new Array(n),
        a0 = +startAngle.apply(this, arguments),
        da = Math.min(_math__WEBPACK_IMPORTED_MODULE_3__["tau"], Math.max(-_math__WEBPACK_IMPORTED_MODULE_3__["tau"], endAngle.apply(this, arguments) - a0)),
        a1,
        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
        pa = p * (da < 0 ? -1 : 1),
        v;

    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum += v;
      }
    } // Optionally sort the arcs by previously-computed values or by data.


    if (sortValues != null) index.sort(function (i, j) {
      return sortValues(arcs[i], arcs[j]);
    });else if (sort != null) index.sort(function (i, j) {
      return sort(data[i], data[j]);
    }); // Compute the arcs! They are stored in the original data's order.

    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }

    return arcs;
  }

  pie.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), pie) : value;
  };

  pie.sortValues = function (_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };

  pie.sort = function (_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };

  pie.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), pie) : startAngle;
  };

  pie.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), pie) : endAngle;
  };

  pie.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), pie) : padAngle;
  };

  return pie;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/point.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/point.js ***!
  \********************************************/
/*! exports provided: x, y */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return x; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return y; });
function x(p) {
  return p[0];
}
function y(p) {
  return p[1];
}

/***/ }),

/***/ "./node_modules/d3-shape/src/pointRadial.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/pointRadial.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x, y) {
  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
});

/***/ }),

/***/ "./node_modules/d3-shape/src/stack.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/stack.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/d3-shape/src/array.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _offset_none__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./offset/none */ "./node_modules/d3-shape/src/offset/none.js");
/* harmony import */ var _order_none__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./order/none */ "./node_modules/d3-shape/src/order/none.js");





function stackValue(d, key) {
  return d[key];
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var keys = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])([]),
      order = _order_none__WEBPACK_IMPORTED_MODULE_3__["default"],
      offset = _offset_none__WEBPACK_IMPORTED_MODULE_2__["default"],
      value = stackValue;

  function stack(data) {
    var kz = keys.apply(this, arguments),
        i,
        m = data.length,
        n = kz.length,
        sz = new Array(n),
        oz;

    for (i = 0; i < n; ++i) {
      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
        si[j] = sij = [0, +value(data[j], ki, j, data)];
        sij.data = data[j];
      }

      si.key = ki;
    }

    for (i = 0, oz = order(sz); i < n; ++i) {
      sz[oz[i]].index = i;
    }

    offset(sz, oz);
    return sz;
  }

  stack.keys = function (_) {
    return arguments.length ? (keys = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(_array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_)), stack) : keys;
  };

  stack.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), stack) : value;
  };

  stack.order = function (_) {
    return arguments.length ? (order = _ == null ? _order_none__WEBPACK_IMPORTED_MODULE_3__["default"] : typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(_array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_)), stack) : order;
  };

  stack.offset = function (_) {
    return arguments.length ? (offset = _ == null ? _offset_none__WEBPACK_IMPORTED_MODULE_2__["default"] : _, stack) : offset;
  };

  return stack;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-shape/src/symbol.js ***!
  \*********************************************/
/*! exports provided: symbols, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symbols", function() { return symbols; });
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _symbol_circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./symbol/circle */ "./node_modules/d3-shape/src/symbol/circle.js");
/* harmony import */ var _symbol_cross__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./symbol/cross */ "./node_modules/d3-shape/src/symbol/cross.js");
/* harmony import */ var _symbol_diamond__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./symbol/diamond */ "./node_modules/d3-shape/src/symbol/diamond.js");
/* harmony import */ var _symbol_star__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./symbol/star */ "./node_modules/d3-shape/src/symbol/star.js");
/* harmony import */ var _symbol_square__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./symbol/square */ "./node_modules/d3-shape/src/symbol/square.js");
/* harmony import */ var _symbol_triangle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./symbol/triangle */ "./node_modules/d3-shape/src/symbol/triangle.js");
/* harmony import */ var _symbol_wye__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./symbol/wye */ "./node_modules/d3-shape/src/symbol/wye.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");









var symbols = [_symbol_circle__WEBPACK_IMPORTED_MODULE_1__["default"], _symbol_cross__WEBPACK_IMPORTED_MODULE_2__["default"], _symbol_diamond__WEBPACK_IMPORTED_MODULE_3__["default"], _symbol_square__WEBPACK_IMPORTED_MODULE_5__["default"], _symbol_star__WEBPACK_IMPORTED_MODULE_4__["default"], _symbol_triangle__WEBPACK_IMPORTED_MODULE_6__["default"], _symbol_wye__WEBPACK_IMPORTED_MODULE_7__["default"]];
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var type = Object(_constant__WEBPACK_IMPORTED_MODULE_8__["default"])(_symbol_circle__WEBPACK_IMPORTED_MODULE_1__["default"]),
      size = Object(_constant__WEBPACK_IMPORTED_MODULE_8__["default"])(64),
      context = null;

  function symbol() {
    var buffer;
    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])();
    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer) return context = null, buffer + "" || null;
  }

  symbol.type = function (_) {
    return arguments.length ? (type = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_8__["default"])(_), symbol) : type;
  };

  symbol.size = function (_) {
    return arguments.length ? (size = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_8__["default"])(+_), symbol) : size;
  };

  symbol.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
  };

  return symbol;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/circle.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/circle.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-shape/src/math.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var r = Math.sqrt(size / _math__WEBPACK_IMPORTED_MODULE_0__["pi"]);
    context.moveTo(r, 0);
    context.arc(0, 0, r, 0, _math__WEBPACK_IMPORTED_MODULE_0__["tau"]);
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/cross.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/cross.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var r = Math.sqrt(size / 5) / 2;
    context.moveTo(-3 * r, -r);
    context.lineTo(-r, -r);
    context.lineTo(-r, -3 * r);
    context.lineTo(r, -3 * r);
    context.lineTo(r, -r);
    context.lineTo(3 * r, -r);
    context.lineTo(3 * r, r);
    context.lineTo(r, r);
    context.lineTo(r, 3 * r);
    context.lineTo(-r, 3 * r);
    context.lineTo(-r, r);
    context.lineTo(-3 * r, r);
    context.closePath();
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/diamond.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/diamond.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var tan30 = Math.sqrt(1 / 3),
    tan30_2 = tan30 * 2;
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var y = Math.sqrt(size / tan30_2),
        x = y * tan30;
    context.moveTo(0, -y);
    context.lineTo(x, 0);
    context.lineTo(0, y);
    context.lineTo(-x, 0);
    context.closePath();
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/square.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/square.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var w = Math.sqrt(size),
        x = -w / 2;
    context.rect(x, x, w, w);
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/star.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/star.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-shape/src/math.js");

var ka = 0.89081309152928522810,
    kr = Math.sin(_math__WEBPACK_IMPORTED_MODULE_0__["pi"] / 10) / Math.sin(7 * _math__WEBPACK_IMPORTED_MODULE_0__["pi"] / 10),
    kx = Math.sin(_math__WEBPACK_IMPORTED_MODULE_0__["tau"] / 10) * kr,
    ky = -Math.cos(_math__WEBPACK_IMPORTED_MODULE_0__["tau"] / 10) * kr;
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var r = Math.sqrt(size * ka),
        x = kx * r,
        y = ky * r;
    context.moveTo(0, -r);
    context.lineTo(x, y);

    for (var i = 1; i < 5; ++i) {
      var a = _math__WEBPACK_IMPORTED_MODULE_0__["tau"] * i / 5,
          c = Math.cos(a),
          s = Math.sin(a);
      context.lineTo(s * r, -c * r);
      context.lineTo(c * x - s * y, s * x + c * y);
    }

    context.closePath();
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/triangle.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/triangle.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var sqrt3 = Math.sqrt(3);
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var y = -Math.sqrt(size / (sqrt3 * 3));
    context.moveTo(0, y * 2);
    context.lineTo(-sqrt3 * y, -y);
    context.lineTo(sqrt3 * y, -y);
    context.closePath();
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/wye.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/wye.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var c = -0.5,
    s = Math.sqrt(3) / 2,
    k = 1 / Math.sqrt(12),
    a = (k / 2 + 1) * 3;
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var r = Math.sqrt(size / a),
        x0 = r / 2,
        y0 = r * k,
        x1 = x0,
        y1 = r * k + r,
        x2 = -x1,
        y2 = y1;
    context.moveTo(x0, y0);
    context.lineTo(x1, y1);
    context.lineTo(x2, y2);
    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
    context.closePath();
  }
});

/***/ }),

/***/ "./node_modules/d3-time-format/src/defaultLocale.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-time-format/src/defaultLocale.js ***!
  \**********************************************************/
/*! exports provided: timeFormat, timeParse, utcFormat, utcParse, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeFormat", function() { return timeFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeParse", function() { return timeParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFormat", function() { return utcFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcParse", function() { return utcParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return defaultLocale; });
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale */ "./node_modules/d3-time-format/src/locale.js");

var locale;
var timeFormat;
var timeParse;
var utcFormat;
var utcParse;
defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});
function defaultLocale(definition) {
  locale = Object(_locale__WEBPACK_IMPORTED_MODULE_0__["default"])(definition);
  timeFormat = locale.format;
  timeParse = locale.parse;
  utcFormat = locale.utcFormat;
  utcParse = locale.utcParse;
  return locale;
}

/***/ }),

/***/ "./node_modules/d3-time-format/src/index.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-time-format/src/index.js ***!
  \**************************************************/
/*! exports provided: timeFormatDefaultLocale, timeFormat, timeParse, utcFormat, utcParse, timeFormatLocale, isoFormat, isoParse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultLocale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale */ "./node_modules/d3-time-format/src/defaultLocale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatDefaultLocale", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormat", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["timeFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeParse", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["timeParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFormat", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["utcFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcParse", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["utcParse"]; });

/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale */ "./node_modules/d3-time-format/src/locale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatLocale", function() { return _locale__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _isoFormat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isoFormat */ "./node_modules/d3-time-format/src/isoFormat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isoFormat", function() { return _isoFormat__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _isoParse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isoParse */ "./node_modules/d3-time-format/src/isoParse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isoParse", function() { return _isoParse__WEBPACK_IMPORTED_MODULE_3__["default"]; });






/***/ }),

/***/ "./node_modules/d3-time-format/src/isoFormat.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-time-format/src/isoFormat.js ***!
  \******************************************************/
/*! exports provided: isoSpecifier, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isoSpecifier", function() { return isoSpecifier; });
/* harmony import */ var _defaultLocale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale */ "./node_modules/d3-time-format/src/defaultLocale.js");

var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";

function formatIsoNative(date) {
  return date.toISOString();
}

var formatIso = Date.prototype.toISOString ? formatIsoNative : Object(_defaultLocale__WEBPACK_IMPORTED_MODULE_0__["utcFormat"])(isoSpecifier);
/* harmony default export */ __webpack_exports__["default"] = (formatIso);

/***/ }),

/***/ "./node_modules/d3-time-format/src/isoParse.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-time-format/src/isoParse.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isoFormat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isoFormat */ "./node_modules/d3-time-format/src/isoFormat.js");
/* harmony import */ var _defaultLocale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultLocale */ "./node_modules/d3-time-format/src/defaultLocale.js");



function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}

var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : Object(_defaultLocale__WEBPACK_IMPORTED_MODULE_1__["utcParse"])(_isoFormat__WEBPACK_IMPORTED_MODULE_0__["isoSpecifier"]);
/* harmony default export */ __webpack_exports__["default"] = (parseIso);

/***/ }),

/***/ "./node_modules/d3-time-format/src/locale.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-time-format/src/locale.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatLocale; });
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/index.js");


function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }

  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }

  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newYear(y) {
  return {
    y: y,
    m: 0,
    d: 1,
    H: 0,
    M: 0,
    S: 0,
    L: 0
  };
}

function formatLocale(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;
  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  }; // These recursive directive definitions must be deferred.

  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function (date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;
      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, newDate) {
    return function (string) {
      var d = newYear(1900),
          i = parseSpecifier(d, specifier, string += "", 0),
          week,
          day;
      if (i != string.length) return null; // If a UNIX timestamp is specified, return it.

      if ("Q" in d) return new Date(d.Q); // The am-pm flag is 0 for AM, and 1 for PM.

      if ("p" in d) d.H = d.H % 12 + d.p * 12; // Convert day-of-week and week-of-year to day-of-year.

      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;

        if ("Z" in d) {
          week = utcDate(newYear(d.y)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonday"].ceil(week) : Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonday"])(week);
          week = d3_time__WEBPACK_IMPORTED_MODULE_0__["utcDay"].offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = newDate(newYear(d.y)), day = week.getDay();
          week = day > 4 || day === 0 ? d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonday"].ceil(week) : Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonday"])(week);
          week = d3_time__WEBPACK_IMPORTED_MODULE_0__["timeDay"].offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      } // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.


      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      } // Otherwise, all fields are in local time.


      return newDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);

      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || (j = parse(d, string, j)) < 0) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  return {
    format: function format(specifier) {
      var f = newFormat(specifier += "", formats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    parse: function parse(specifier) {
      var p = newParse(specifier += "", localDate);

      p.toString = function () {
        return specifier;
      };

      return p;
    },
    utcFormat: function utcFormat(specifier) {
      var f = newFormat(specifier += "", utcFormats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    utcParse: function utcParse(specifier) {
      var p = newParse(specifier, utcDate);

      p.toString = function () {
        return specifier;
      };

      return p;
    }
  };
}
var pads = {
  "-": "",
  "_": " ",
  "0": "0"
},
    numberRe = /^\s*\d+/,
    // note: ignores next directive
percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  var map = {},
      i = -1,
      n = names.length;

  while (++i < n) {
    map[names[i].toLowerCase()] = i;
  }

  return map;
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0] * 1000, i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return pad(1 + d3_time__WEBPACK_IMPORTED_MODULE_0__["timeDay"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeSunday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d), p, 2);
}

function formatWeekNumberISO(d, p) {
  var day = d.getDay();
  d = day >= 4 || day === 0 ? Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"])(d) : d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"].ceil(d);
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d) + (Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d), p, 2);
}

function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return pad(1 + d3_time__WEBPACK_IMPORTED_MODULE_0__["utcDay"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcSunday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d), p, 2);
}

function formatUTCWeekNumberISO(d, p) {
  var day = d.getUTCDay();
  d = day >= 4 || day === 0 ? Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"])(d) : d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"].ceil(d);
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d) + (Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d), p, 2);
}

function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}

/***/ }),

/***/ "./node_modules/d3-time/src/day.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-time/src/day.js ***!
  \*****************************************/
/*! exports provided: default, days */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "days", function() { return days; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var day = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setDate(date.getDate() + step);
}, function (start, end) {
  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationDay"];
}, function (date) {
  return date.getDate() - 1;
});
/* harmony default export */ __webpack_exports__["default"] = (day);
var days = day.range;

/***/ }),

/***/ "./node_modules/d3-time/src/duration.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-time/src/duration.js ***!
  \**********************************************/
/*! exports provided: durationSecond, durationMinute, durationHour, durationDay, durationWeek */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationSecond", function() { return durationSecond; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationMinute", function() { return durationMinute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationHour", function() { return durationHour; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationDay", function() { return durationDay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationWeek", function() { return durationWeek; });
var durationSecond = 1e3;
var durationMinute = 6e4;
var durationHour = 36e5;
var durationDay = 864e5;
var durationWeek = 6048e5;

/***/ }),

/***/ "./node_modules/d3-time/src/hour.js":
/*!******************************************!*\
  !*** ./node_modules/d3-time/src/hour.js ***!
  \******************************************/
/*! exports provided: default, hours */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hours", function() { return hours; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var hour = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration__WEBPACK_IMPORTED_MODULE_1__["durationSecond"] - date.getMinutes() * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]);
}, function (date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationHour"]);
}, function (start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationHour"];
}, function (date) {
  return date.getHours();
});
/* harmony default export */ __webpack_exports__["default"] = (hour);
var hours = hour.range;

/***/ }),

/***/ "./node_modules/d3-time/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-time/src/index.js ***!
  \*******************************************/
/*! exports provided: timeInterval, timeMillisecond, timeMilliseconds, utcMillisecond, utcMilliseconds, timeSecond, timeSeconds, utcSecond, utcSeconds, timeMinute, timeMinutes, timeHour, timeHours, timeDay, timeDays, timeWeek, timeWeeks, timeSunday, timeSundays, timeMonday, timeMondays, timeTuesday, timeTuesdays, timeWednesday, timeWednesdays, timeThursday, timeThursdays, timeFriday, timeFridays, timeSaturday, timeSaturdays, timeMonth, timeMonths, timeYear, timeYears, utcMinute, utcMinutes, utcHour, utcHours, utcDay, utcDays, utcWeek, utcWeeks, utcSunday, utcSundays, utcMonday, utcMondays, utcTuesday, utcTuesdays, utcWednesday, utcWednesdays, utcThursday, utcThursdays, utcFriday, utcFridays, utcSaturday, utcSaturdays, utcMonth, utcMonths, utcYear, utcYears */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return _interval__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _millisecond__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./millisecond */ "./node_modules/d3-time/src/millisecond.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMillisecond", function() { return _millisecond__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMilliseconds", function() { return _millisecond__WEBPACK_IMPORTED_MODULE_1__["milliseconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMillisecond", function() { return _millisecond__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMilliseconds", function() { return _millisecond__WEBPACK_IMPORTED_MODULE_1__["milliseconds"]; });

/* harmony import */ var _second__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./second */ "./node_modules/d3-time/src/second.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSecond", function() { return _second__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSeconds", function() { return _second__WEBPACK_IMPORTED_MODULE_2__["seconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSecond", function() { return _second__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSeconds", function() { return _second__WEBPACK_IMPORTED_MODULE_2__["seconds"]; });

/* harmony import */ var _minute__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./minute */ "./node_modules/d3-time/src/minute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMinute", function() { return _minute__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMinutes", function() { return _minute__WEBPACK_IMPORTED_MODULE_3__["minutes"]; });

/* harmony import */ var _hour__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hour */ "./node_modules/d3-time/src/hour.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeHour", function() { return _hour__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeHours", function() { return _hour__WEBPACK_IMPORTED_MODULE_4__["hours"]; });

/* harmony import */ var _day__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./day */ "./node_modules/d3-time/src/day.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeDay", function() { return _day__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeDays", function() { return _day__WEBPACK_IMPORTED_MODULE_5__["days"]; });

/* harmony import */ var _week__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./week */ "./node_modules/d3-time/src/week.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWeek", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["sunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWeeks", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["sundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSunday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["sunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSundays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["sundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["monday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMondays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["mondays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTuesday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["tuesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTuesdays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["tuesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWednesday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["wednesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWednesdays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["wednesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeThursday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["thursday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeThursdays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["thursdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFriday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["friday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFridays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["fridays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSaturday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["saturday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSaturdays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["saturdays"]; });

/* harmony import */ var _month__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./month */ "./node_modules/d3-time/src/month.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonth", function() { return _month__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonths", function() { return _month__WEBPACK_IMPORTED_MODULE_7__["months"]; });

/* harmony import */ var _year__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./year */ "./node_modules/d3-time/src/year.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeYear", function() { return _year__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeYears", function() { return _year__WEBPACK_IMPORTED_MODULE_8__["years"]; });

/* harmony import */ var _utcMinute__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utcMinute */ "./node_modules/d3-time/src/utcMinute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMinute", function() { return _utcMinute__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMinutes", function() { return _utcMinute__WEBPACK_IMPORTED_MODULE_9__["utcMinutes"]; });

/* harmony import */ var _utcHour__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utcHour */ "./node_modules/d3-time/src/utcHour.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcHour", function() { return _utcHour__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcHours", function() { return _utcHour__WEBPACK_IMPORTED_MODULE_10__["utcHours"]; });

/* harmony import */ var _utcDay__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utcDay */ "./node_modules/d3-time/src/utcDay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcDay", function() { return _utcDay__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcDays", function() { return _utcDay__WEBPACK_IMPORTED_MODULE_11__["utcDays"]; });

/* harmony import */ var _utcWeek__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utcWeek */ "./node_modules/d3-time/src/utcWeek.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWeek", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWeeks", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSunday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSundays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcMonday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMondays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcMondays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTuesday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcTuesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTuesdays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcTuesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWednesday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcWednesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWednesdays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcWednesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcThursday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcThursday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcThursdays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcThursdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFriday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcFriday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFridays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcFridays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSaturday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSaturday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSaturdays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSaturdays"]; });

/* harmony import */ var _utcMonth__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utcMonth */ "./node_modules/d3-time/src/utcMonth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonth", function() { return _utcMonth__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonths", function() { return _utcMonth__WEBPACK_IMPORTED_MODULE_13__["utcMonths"]; });

/* harmony import */ var _utcYear__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utcYear */ "./node_modules/d3-time/src/utcYear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcYear", function() { return _utcYear__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcYears", function() { return _utcYear__WEBPACK_IMPORTED_MODULE_14__["utcYears"]; });

















/***/ }),

/***/ "./node_modules/d3-time/src/interval.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-time/src/interval.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return newInterval; });
var t0 = new Date(),
    t1 = new Date();
function newInterval(floori, offseti, count, field) {
  function interval(date) {
    return floori(date = new Date(+date)), date;
  }

  interval.floor = interval;

  interval.ceil = function (date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function (date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function (date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function (start, stop, step) {
    var range = [],
        previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date

    do {
      range.push(previous = new Date(+start)), offseti(start, step), floori(start);
    } while (previous < start && start < stop);

    return range;
  };

  interval.filter = function (test) {
    return newInterval(function (date) {
      if (date >= date) while (floori(date), !test(date)) {
        date.setTime(date - 1);
      }
    }, function (date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty

        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty

        }
      }
    });
  };

  if (count) {
    interval.count = function (start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };

    interval.every = function (step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {
        return field(d) % step === 0;
      } : function (d) {
        return interval.count(0, d) % step === 0;
      });
    };
  }

  return interval;
}

/***/ }),

/***/ "./node_modules/d3-time/src/millisecond.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-time/src/millisecond.js ***!
  \*************************************************/
/*! exports provided: default, milliseconds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "milliseconds", function() { return milliseconds; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");

var millisecond = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function () {// noop
}, function (date, step) {
  date.setTime(+date + step);
}, function (start, end) {
  return end - start;
}); // An optimized implementation for this simple case.

millisecond.every = function (k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
    date.setTime(Math.floor(date / k) * k);
  }, function (date, step) {
    date.setTime(+date + step * k);
  }, function (start, end) {
    return (end - start) / k;
  });
};

/* harmony default export */ __webpack_exports__["default"] = (millisecond);
var milliseconds = millisecond.range;

/***/ }),

/***/ "./node_modules/d3-time/src/minute.js":
/*!********************************************!*\
  !*** ./node_modules/d3-time/src/minute.js ***!
  \********************************************/
/*! exports provided: default, minutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "minutes", function() { return minutes; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var minute = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration__WEBPACK_IMPORTED_MODULE_1__["durationSecond"]);
}, function (date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]);
}, function (start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"];
}, function (date) {
  return date.getMinutes();
});
/* harmony default export */ __webpack_exports__["default"] = (minute);
var minutes = minute.range;

/***/ }),

/***/ "./node_modules/d3-time/src/month.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-time/src/month.js ***!
  \*******************************************/
/*! exports provided: default, months */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "months", function() { return months; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");

var month = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setMonth(date.getMonth() + step);
}, function (start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function (date) {
  return date.getMonth();
});
/* harmony default export */ __webpack_exports__["default"] = (month);
var months = month.range;

/***/ }),

/***/ "./node_modules/d3-time/src/second.js":
/*!********************************************!*\
  !*** ./node_modules/d3-time/src/second.js ***!
  \********************************************/
/*! exports provided: default, seconds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "seconds", function() { return seconds; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var second = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setTime(date - date.getMilliseconds());
}, function (date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationSecond"]);
}, function (start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationSecond"];
}, function (date) {
  return date.getUTCSeconds();
});
/* harmony default export */ __webpack_exports__["default"] = (second);
var seconds = second.range;

/***/ }),

/***/ "./node_modules/d3-time/src/utcDay.js":
/*!********************************************!*\
  !*** ./node_modules/d3-time/src/utcDay.js ***!
  \********************************************/
/*! exports provided: default, utcDays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcDays", function() { return utcDays; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var utcDay = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function (start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationDay"];
}, function (date) {
  return date.getUTCDate() - 1;
});
/* harmony default export */ __webpack_exports__["default"] = (utcDay);
var utcDays = utcDay.range;

/***/ }),

/***/ "./node_modules/d3-time/src/utcHour.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-time/src/utcHour.js ***!
  \*********************************************/
/*! exports provided: default, utcHours */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcHours", function() { return utcHours; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var utcHour = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setUTCMinutes(0, 0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationHour"]);
}, function (start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationHour"];
}, function (date) {
  return date.getUTCHours();
});
/* harmony default export */ __webpack_exports__["default"] = (utcHour);
var utcHours = utcHour.range;

/***/ }),

/***/ "./node_modules/d3-time/src/utcMinute.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-time/src/utcMinute.js ***!
  \***********************************************/
/*! exports provided: default, utcMinutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMinutes", function() { return utcMinutes; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var utcMinute = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setUTCSeconds(0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]);
}, function (start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"];
}, function (date) {
  return date.getUTCMinutes();
});
/* harmony default export */ __webpack_exports__["default"] = (utcMinute);
var utcMinutes = utcMinute.range;

/***/ }),

/***/ "./node_modules/d3-time/src/utcMonth.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-time/src/utcMonth.js ***!
  \**********************************************/
/*! exports provided: default, utcMonths */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMonths", function() { return utcMonths; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");

var utcMonth = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function (start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function (date) {
  return date.getUTCMonth();
});
/* harmony default export */ __webpack_exports__["default"] = (utcMonth);
var utcMonths = utcMonth.range;

/***/ }),

/***/ "./node_modules/d3-time/src/utcWeek.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-time/src/utcWeek.js ***!
  \*********************************************/
/*! exports provided: utcSunday, utcMonday, utcTuesday, utcWednesday, utcThursday, utcFriday, utcSaturday, utcSundays, utcMondays, utcTuesdays, utcWednesdays, utcThursdays, utcFridays, utcSaturdays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSunday", function() { return utcSunday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMonday", function() { return utcMonday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcTuesday", function() { return utcTuesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcWednesday", function() { return utcWednesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcThursday", function() { return utcThursday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFriday", function() { return utcFriday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSaturday", function() { return utcSaturday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSundays", function() { return utcSundays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMondays", function() { return utcMondays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcTuesdays", function() { return utcTuesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcWednesdays", function() { return utcWednesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcThursdays", function() { return utcThursdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFridays", function() { return utcFridays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSaturdays", function() { return utcSaturdays; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");



function utcWeekday(i) {
  return Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function (start, end) {
    return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationWeek"];
  });
}

var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);
var utcSundays = utcSunday.range;
var utcMondays = utcMonday.range;
var utcTuesdays = utcTuesday.range;
var utcWednesdays = utcWednesday.range;
var utcThursdays = utcThursday.range;
var utcFridays = utcFriday.range;
var utcSaturdays = utcSaturday.range;

/***/ }),

/***/ "./node_modules/d3-time/src/utcYear.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-time/src/utcYear.js ***!
  \*********************************************/
/*! exports provided: default, utcYears */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcYears", function() { return utcYears; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");

var utcYear = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function (start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function (date) {
  return date.getUTCFullYear();
}); // An optimized implementation for this simple case.

utcYear.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (utcYear);
var utcYears = utcYear.range;

/***/ }),

/***/ "./node_modules/d3-time/src/week.js":
/*!******************************************!*\
  !*** ./node_modules/d3-time/src/week.js ***!
  \******************************************/
/*! exports provided: sunday, monday, tuesday, wednesday, thursday, friday, saturday, sundays, mondays, tuesdays, wednesdays, thursdays, fridays, saturdays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sunday", function() { return sunday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monday", function() { return monday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tuesday", function() { return tuesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wednesday", function() { return wednesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thursday", function() { return thursday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "friday", function() { return friday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saturday", function() { return saturday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sundays", function() { return sundays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mondays", function() { return mondays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tuesdays", function() { return tuesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wednesdays", function() { return wednesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thursdays", function() { return thursdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fridays", function() { return fridays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saturdays", function() { return saturdays; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");



function weekday(i) {
  return Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function (start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationWeek"];
  });
}

var sunday = weekday(0);
var monday = weekday(1);
var tuesday = weekday(2);
var wednesday = weekday(3);
var thursday = weekday(4);
var friday = weekday(5);
var saturday = weekday(6);
var sundays = sunday.range;
var mondays = monday.range;
var tuesdays = tuesday.range;
var wednesdays = wednesday.range;
var thursdays = thursday.range;
var fridays = friday.range;
var saturdays = saturday.range;

/***/ }),

/***/ "./node_modules/d3-time/src/year.js":
/*!******************************************!*\
  !*** ./node_modules/d3-time/src/year.js ***!
  \******************************************/
/*! exports provided: default, years */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "years", function() { return years; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");

var year = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function (start, end) {
  return end.getFullYear() - start.getFullYear();
}, function (date) {
  return date.getFullYear();
}); // An optimized implementation for this simple case.

year.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (year);
var years = year.range;

/***/ }),

/***/ "./node_modules/d3-timer/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-timer/src/index.js ***!
  \********************************************/
/*! exports provided: now, timer, timerFlush, timeout, interval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer */ "./node_modules/d3-timer/src/timer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "now", function() { return _timer__WEBPACK_IMPORTED_MODULE_0__["now"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return _timer__WEBPACK_IMPORTED_MODULE_0__["timer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timerFlush", function() { return _timer__WEBPACK_IMPORTED_MODULE_0__["timerFlush"]; });

/* harmony import */ var _timeout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./timeout */ "./node_modules/d3-timer/src/timeout.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return _timeout__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-timer/src/interval.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return _interval__WEBPACK_IMPORTED_MODULE_2__["default"]; });





/***/ }),

/***/ "./node_modules/d3-timer/src/interval.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-timer/src/interval.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer */ "./node_modules/d3-timer/src/timer.js");

/* harmony default export */ __webpack_exports__["default"] = (function (callback, delay, time) {
  var t = new _timer__WEBPACK_IMPORTED_MODULE_0__["Timer"](),
      total = delay;
  if (delay == null) return t.restart(callback, delay, time), t;
  delay = +delay, time = time == null ? Object(_timer__WEBPACK_IMPORTED_MODULE_0__["now"])() : +time;
  t.restart(function tick(elapsed) {
    elapsed += total;
    t.restart(tick, total += delay, time);
    callback(elapsed);
  }, delay, time);
  return t;
});

/***/ }),

/***/ "./node_modules/d3-timer/src/timeout.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-timer/src/timeout.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer */ "./node_modules/d3-timer/src/timer.js");

/* harmony default export */ __webpack_exports__["default"] = (function (callback, delay, time) {
  var t = new _timer__WEBPACK_IMPORTED_MODULE_0__["Timer"]();
  delay = delay == null ? 0 : +delay;
  t.restart(function (elapsed) {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
});

/***/ }),

/***/ "./node_modules/d3-timer/src/timer.js":
/*!********************************************!*\
  !*** ./node_modules/d3-timer/src/timer.js ***!
  \********************************************/
/*! exports provided: now, Timer, timer, timerFlush */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "now", function() { return now; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Timer", function() { return Timer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return timer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timerFlush", function() { return timerFlush; });
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var frame = 0,
    // is an animation frame pending?
timeout = 0,
    // is a timeout pending?
interval = 0,
    // are any timers active?
pokeDelay = 1000,
    // how frequently we check for clock skew
taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = (typeof performance === "undefined" ? "undefined" : _typeof(performance)) === "object" && performance.now ? performance : Date,
    setFrame = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {
  setTimeout(f, 17);
};
function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call = this._time = this._next = null;
}
Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function restart(callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);

    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;else taskHead = this;
      taskTail = this;
    }

    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function stop() {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};
function timer(callback, delay, time) {
  var t = new Timer();
  t.restart(callback, delay, time);
  return t;
}
function timerFlush() {
  now(); // Get the current time, if not already set.

  ++frame; // Pretend we’ve set an alarm, if we haven’t already.

  var t = taskHead,
      e;

  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
    t = t._next;
  }

  --frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout = 0;

  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(),
      delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0,
      t1 = taskHead,
      t2,
      time = Infinity;

  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }

  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (frame) return; // Soonest alarm already set, or will be.

  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.

  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}

/***/ }),

/***/ "./node_modules/d3-transition/src/active.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-transition/src/active.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transition_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transition/index */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _transition_schedule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transition/schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


var root = [null];
/* harmony default export */ __webpack_exports__["default"] = (function (node, name) {
  var schedules = node.__transition,
      schedule,
      i;

  if (schedules) {
    name = name == null ? null : name + "";

    for (i in schedules) {
      if ((schedule = schedules[i]).state > _transition_schedule__WEBPACK_IMPORTED_MODULE_1__["SCHEDULED"] && schedule.name === name) {
        return new _transition_index__WEBPACK_IMPORTED_MODULE_0__["Transition"]([[node]], root, name, +i);
      }
    }
  }

  return null;
});

/***/ }),

/***/ "./node_modules/d3-transition/src/index.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-transition/src/index.js ***!
  \*************************************************/
/*! exports provided: transition, active, interrupt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _selection_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/index */ "./node_modules/d3-transition/src/selection/index.js");
/* harmony import */ var _transition_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transition/index */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transition", function() { return _transition_index__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _active__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./active */ "./node_modules/d3-transition/src/active.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "active", function() { return _active__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _interrupt__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interrupt */ "./node_modules/d3-transition/src/interrupt.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interrupt", function() { return _interrupt__WEBPACK_IMPORTED_MODULE_3__["default"]; });






/***/ }),

/***/ "./node_modules/d3-transition/src/interrupt.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-transition/src/interrupt.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transition_schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transition/schedule */ "./node_modules/d3-transition/src/transition/schedule.js");

/* harmony default export */ __webpack_exports__["default"] = (function (node, name) {
  var schedules = node.__transition,
      schedule,
      active,
      empty = true,
      i;
  if (!schedules) return;
  name = name == null ? null : name + "";

  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) {
      empty = false;
      continue;
    }

    active = schedule.state > _transition_schedule__WEBPACK_IMPORTED_MODULE_0__["STARTING"] && schedule.state < _transition_schedule__WEBPACK_IMPORTED_MODULE_0__["ENDING"];
    schedule.state = _transition_schedule__WEBPACK_IMPORTED_MODULE_0__["ENDED"];
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }

  if (empty) delete node.__transition;
});

/***/ }),

/***/ "./node_modules/d3-transition/src/selection/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/selection/index.js ***!
  \***********************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _interrupt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interrupt */ "./node_modules/d3-transition/src/selection/interrupt.js");
/* harmony import */ var _transition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transition */ "./node_modules/d3-transition/src/selection/transition.js");



d3_selection__WEBPACK_IMPORTED_MODULE_0__["selection"].prototype.interrupt = _interrupt__WEBPACK_IMPORTED_MODULE_1__["default"];
d3_selection__WEBPACK_IMPORTED_MODULE_0__["selection"].prototype.transition = _transition__WEBPACK_IMPORTED_MODULE_2__["default"];

/***/ }),

/***/ "./node_modules/d3-transition/src/selection/interrupt.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-transition/src/selection/interrupt.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _interrupt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interrupt */ "./node_modules/d3-transition/src/interrupt.js");

/* harmony default export */ __webpack_exports__["default"] = (function (name) {
  return this.each(function () {
    Object(_interrupt__WEBPACK_IMPORTED_MODULE_0__["default"])(this, name);
  });
});

/***/ }),

/***/ "./node_modules/d3-transition/src/selection/transition.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/selection/transition.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transition_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transition/index */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _transition_schedule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transition/schedule */ "./node_modules/d3-transition/src/transition/schedule.js");
/* harmony import */ var d3_ease__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-ease */ "./node_modules/d3-ease/src/index.js");
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/index.js");




var defaultTiming = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: d3_ease__WEBPACK_IMPORTED_MODULE_2__["easeCubicInOut"]
};

function inherit(node, id) {
  var timing;

  while (!(timing = node.__transition) || !(timing = timing[id])) {
    if (!(node = node.parentNode)) {
      return defaultTiming.time = Object(d3_timer__WEBPACK_IMPORTED_MODULE_3__["now"])(), defaultTiming;
    }
  }

  return timing;
}

/* harmony default export */ __webpack_exports__["default"] = (function (name) {
  var id, timing;

  if (name instanceof _transition_index__WEBPACK_IMPORTED_MODULE_0__["Transition"]) {
    id = name._id, name = name._name;
  } else {
    id = Object(_transition_index__WEBPACK_IMPORTED_MODULE_0__["newId"])(), (timing = defaultTiming).time = Object(d3_timer__WEBPACK_IMPORTED_MODULE_3__["now"])(), name = name == null ? null : name + "";
  }

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        Object(_transition_schedule__WEBPACK_IMPORTED_MODULE_1__["default"])(node, name, id, i, group, timing || inherit(node, id));
      }
    }
  }

  return new _transition_index__WEBPACK_IMPORTED_MODULE_0__["Transition"](groups, this._parents, name, id);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/attr.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/attr.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _tween__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tween */ "./node_modules/d3-transition/src/transition/tween.js");
/* harmony import */ var _interpolate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interpolate */ "./node_modules/d3-transition/src/transition/interpolate.js");





function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrConstantNS(fullname, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function attrFunctionNS(fullname, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value) {
  var fullname = Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["namespace"])(name),
      i = fullname === "transform" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["interpolateTransformSvg"] : _interpolate__WEBPACK_IMPORTED_MODULE_3__["default"];
  return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, Object(_tween__WEBPACK_IMPORTED_MODULE_2__["tweenValue"])(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/attrTween.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/attrTween.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");


function attrInterpolate(name, i) {
  return function (t) {
    this.setAttribute(name, i(t));
  };
}

function attrInterpolateNS(fullname, i) {
  return function (t) {
    this.setAttributeNS(fullname.space, fullname.local, i(t));
  };
}

function attrTweenNS(fullname, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function attrTween(name, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value) {
  var key = "attr." + name;
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  var fullname = Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["namespace"])(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/delay.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/delay.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


function delayFunction(id, value) {
  return function () {
    Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["init"])(this, id).delay = +value.apply(this, arguments);
  };
}

function delayConstant(id, value) {
  return value = +value, function () {
    Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["init"])(this, id).delay = value;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["get"])(this.node(), id).delay;
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/duration.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/duration.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


function durationFunction(id, value) {
  return function () {
    Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id).duration = +value.apply(this, arguments);
  };
}

function durationConstant(id, value) {
  return value = +value, function () {
    Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id).duration = value;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["get"])(this.node(), id).duration;
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/ease.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/ease.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


function easeConstant(id, value) {
  if (typeof value !== "function") throw new Error();
  return function () {
    Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id).ease = value;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  var id = this._id;
  return arguments.length ? this.each(easeConstant(id, value)) : Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["get"])(this.node(), id).ease;
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/end.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/end.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var on0,
      on1,
      that = this,
      id = that._id,
      size = that.size();
  return new Promise(function (resolve, reject) {
    var cancel = {
      value: reject
    },
        end = {
      value: function value() {
        if (--size === 0) resolve();
      }
    };
    that.each(function () {
      var schedule = Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id),
          on = schedule.on; // If this node shared a dispatch with the previous node,
      // just assign the updated shared dispatch and we’re done!
      // Otherwise, copy-on-write.

      if (on !== on0) {
        on1 = (on0 = on).copy();

        on1._.cancel.push(cancel);

        on1._.interrupt.push(cancel);

        on1._.end.push(end);
      }

      schedule.on = on1;
    });
  });
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/filter.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/filter.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-transition/src/transition/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function (match) {
  if (typeof match !== "function") match = Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["matcher"])(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_1__["Transition"](subgroups, this._parents, this._name, this._id);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/index.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/index.js ***!
  \************************************************************/
/*! exports provided: Transition, default, newId */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Transition", function() { return Transition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return transition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newId", function() { return newId; });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _attr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./attr */ "./node_modules/d3-transition/src/transition/attr.js");
/* harmony import */ var _attrTween__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./attrTween */ "./node_modules/d3-transition/src/transition/attrTween.js");
/* harmony import */ var _delay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./delay */ "./node_modules/d3-transition/src/transition/delay.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-transition/src/transition/duration.js");
/* harmony import */ var _ease__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ease */ "./node_modules/d3-transition/src/transition/ease.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./filter */ "./node_modules/d3-transition/src/transition/filter.js");
/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./merge */ "./node_modules/d3-transition/src/transition/merge.js");
/* harmony import */ var _on__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./on */ "./node_modules/d3-transition/src/transition/on.js");
/* harmony import */ var _remove__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./remove */ "./node_modules/d3-transition/src/transition/remove.js");
/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./select */ "./node_modules/d3-transition/src/transition/select.js");
/* harmony import */ var _selectAll__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./selectAll */ "./node_modules/d3-transition/src/transition/selectAll.js");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./selection */ "./node_modules/d3-transition/src/transition/selection.js");
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./style */ "./node_modules/d3-transition/src/transition/style.js");
/* harmony import */ var _styleTween__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./styleTween */ "./node_modules/d3-transition/src/transition/styleTween.js");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./text */ "./node_modules/d3-transition/src/transition/text.js");
/* harmony import */ var _transition__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./transition */ "./node_modules/d3-transition/src/transition/transition.js");
/* harmony import */ var _tween__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./tween */ "./node_modules/d3-transition/src/transition/tween.js");
/* harmony import */ var _end__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./end */ "./node_modules/d3-transition/src/transition/end.js");



















var id = 0;
function Transition(groups, parents, name, id) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id;
}
function transition(name) {
  return Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["selection"])().transition(name);
}
function newId() {
  return ++id;
}
var selection_prototype = d3_selection__WEBPACK_IMPORTED_MODULE_0__["selection"].prototype;
Transition.prototype = transition.prototype = {
  constructor: Transition,
  select: _select__WEBPACK_IMPORTED_MODULE_10__["default"],
  selectAll: _selectAll__WEBPACK_IMPORTED_MODULE_11__["default"],
  filter: _filter__WEBPACK_IMPORTED_MODULE_6__["default"],
  merge: _merge__WEBPACK_IMPORTED_MODULE_7__["default"],
  selection: _selection__WEBPACK_IMPORTED_MODULE_12__["default"],
  transition: _transition__WEBPACK_IMPORTED_MODULE_16__["default"],
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: _on__WEBPACK_IMPORTED_MODULE_8__["default"],
  attr: _attr__WEBPACK_IMPORTED_MODULE_1__["default"],
  attrTween: _attrTween__WEBPACK_IMPORTED_MODULE_2__["default"],
  style: _style__WEBPACK_IMPORTED_MODULE_13__["default"],
  styleTween: _styleTween__WEBPACK_IMPORTED_MODULE_14__["default"],
  text: _text__WEBPACK_IMPORTED_MODULE_15__["default"],
  remove: _remove__WEBPACK_IMPORTED_MODULE_9__["default"],
  tween: _tween__WEBPACK_IMPORTED_MODULE_17__["default"],
  delay: _delay__WEBPACK_IMPORTED_MODULE_3__["default"],
  duration: _duration__WEBPACK_IMPORTED_MODULE_4__["default"],
  ease: _ease__WEBPACK_IMPORTED_MODULE_5__["default"],
  end: _end__WEBPACK_IMPORTED_MODULE_18__["default"]
};

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/interpolate.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/interpolate.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var c;
  return (typeof b === "number" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateNumber"] : b instanceof d3_color__WEBPACK_IMPORTED_MODULE_0__["color"] ? d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateRgb"] : (c = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["color"])(b)) ? (b = c, d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateRgb"]) : d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateString"])(a, b);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/merge.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/merge.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-transition/src/transition/index.js");

/* harmony default export */ __webpack_exports__["default"] = (function (transition) {
  if (transition._id !== this._id) throw new Error();

  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Transition"](merges, this._parents, this._name, this._id);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/on.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/on.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function (t) {
    var i = t.indexOf(".");
    if (i >= 0) t = t.slice(0, i);
    return !t || t === "start";
  });
}

function onFunction(id, name, listener) {
  var on0,
      on1,
      sit = start(name) ? _schedule__WEBPACK_IMPORTED_MODULE_0__["init"] : _schedule__WEBPACK_IMPORTED_MODULE_0__["set"];
  return function () {
    var schedule = sit(this, id),
        on = schedule.on; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
    schedule.on = on1;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, listener) {
  var id = this._id;
  return arguments.length < 2 ? Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["get"])(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/remove.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/remove.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function removeFunction(id) {
  return function () {
    var parent = this.parentNode;

    for (var i in this.__transition) {
      if (+i !== id) return;
    }

    if (parent) parent.removeChild(this);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return this.on("end.remove", removeFunction(this._id));
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/schedule.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/schedule.js ***!
  \***************************************************************/
/*! exports provided: CREATED, SCHEDULED, STARTING, STARTED, RUNNING, ENDING, ENDED, default, init, set, get */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CREATED", function() { return CREATED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCHEDULED", function() { return SCHEDULED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STARTING", function() { return STARTING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STARTED", function() { return STARTED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RUNNING", function() { return RUNNING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ENDING", function() { return ENDING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ENDED", function() { return ENDED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get", function() { return get; });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/index.js");


var emptyOn = Object(d3_dispatch__WEBPACK_IMPORTED_MODULE_0__["dispatch"])("start", "end", "cancel", "interrupt");
var emptyTween = [];
var CREATED = 0;
var SCHEDULED = 1;
var STARTING = 2;
var STARTED = 3;
var RUNNING = 4;
var ENDING = 5;
var ENDED = 6;
/* harmony default export */ __webpack_exports__["default"] = (function (node, name, id, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules) node.__transition = {};else if (id in schedules) return;
  create(node, id, {
    name: name,
    index: index,
    // For context during callback.
    group: group,
    // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
});
function init(node, id) {
  var schedule = get(node, id);
  if (schedule.state > CREATED) throw new Error("too late; already scheduled");
  return schedule;
}
function set(node, id) {
  var schedule = get(node, id);
  if (schedule.state > STARTED) throw new Error("too late; already running");
  return schedule;
}
function get(node, id) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
  return schedule;
}

function create(node, id, self) {
  var schedules = node.__transition,
      tween; // Initialize the self timer when the transition is created.
  // Note the actual delay is not known until the first callback!

  schedules[id] = self;
  self.timer = Object(d3_timer__WEBPACK_IMPORTED_MODULE_1__["timer"])(schedule, 0, self.time);

  function schedule(elapsed) {
    self.state = SCHEDULED;
    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.

    if (self.delay <= elapsed) start(elapsed - self.delay);
  }

  function start(elapsed) {
    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.

    if (self.state !== SCHEDULED) return stop();

    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,
      // defer starting an interrupting transition until that transition has a
      // chance to tick (and possibly end); see d3/d3-transition#54!

      if (o.state === STARTED) return Object(d3_timer__WEBPACK_IMPORTED_MODULE_1__["timeout"])(start); // Interrupt the active transition, if any.

      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      } // Cancel any pre-empted transitions.
      else if (+i < id) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("cancel", node, node.__data__, o.index, o.group);
          delete schedules[i];
        }
    } // Defer the first tick to end of the current frame; see d3/d3#1576.
    // Note the transition may be canceled after start and before the first tick!
    // Note this must be scheduled before the start event; see d3/d3-transition#16!
    // Assuming this is successful, subsequent callbacks go straight to tick.


    Object(d3_timer__WEBPACK_IMPORTED_MODULE_1__["timeout"])(function () {
      if (self.state === STARTED) {
        self.state = RUNNING;
        self.timer.restart(tick, self.delay, self.time);
        tick(elapsed);
      }
    }); // Dispatch the start event.
    // Note this must be done before the tween are initialized.

    self.state = STARTING;
    self.on.call("start", node, node.__data__, self.index, self.group);
    if (self.state !== STARTING) return; // interrupted

    self.state = STARTED; // Initialize the tween, deleting null tween.

    tween = new Array(n = self.tween.length);

    for (i = 0, j = -1; i < n; ++i) {
      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
        tween[++j] = o;
      }
    }

    tween.length = j + 1;
  }

  function tick(elapsed) {
    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
        i = -1,
        n = tween.length;

    while (++i < n) {
      tween[i].call(node, t);
    } // Dispatch the end event.


    if (self.state === ENDING) {
      self.on.call("end", node, node.__data__, self.index, self.group);
      stop();
    }
  }

  function stop() {
    self.state = ENDED;
    self.timer.stop();
    delete schedules[id];

    for (var i in schedules) {
      return;
    } // eslint-disable-line no-unused-vars


    delete node.__transition;
  }
}

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/select.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/select.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");



/* harmony default export */ __webpack_exports__["default"] = (function (select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["selector"])(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        Object(_schedule__WEBPACK_IMPORTED_MODULE_2__["default"])(subgroup[i], name, id, i, subgroup, Object(_schedule__WEBPACK_IMPORTED_MODULE_2__["get"])(node, id));
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_1__["Transition"](subgroups, this._parents, name, id);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/selectAll.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/selectAll.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");



/* harmony default export */ __webpack_exports__["default"] = (function (select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["selectorAll"])(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children = select.call(node, node.__data__, i, group), child, inherit = Object(_schedule__WEBPACK_IMPORTED_MODULE_2__["get"])(node, id), k = 0, l = children.length; k < l; ++k) {
          if (child = children[k]) {
            Object(_schedule__WEBPACK_IMPORTED_MODULE_2__["default"])(child, name, id, k, children, inherit);
          }
        }

        subgroups.push(children);
        parents.push(node);
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_1__["Transition"](subgroups, parents, name, id);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/selection.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/selection.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");

var Selection = d3_selection__WEBPACK_IMPORTED_MODULE_0__["selection"].prototype.constructor;
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return new Selection(this._groups, this._parents);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/style.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/style.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");
/* harmony import */ var _tween__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tween */ "./node_modules/d3-transition/src/transition/tween.js");
/* harmony import */ var _interpolate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./interpolate */ "./node_modules/d3-transition/src/transition/interpolate.js");






function styleNull(name, interpolate) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["style"])(this, name),
        string1 = (this.style.removeProperty(name), Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["style"])(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["style"])(this, name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function styleFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["style"])(this, name),
        value1 = value(this),
        string1 = value1 + "";
    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["style"])(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function styleMaybeRemove(id, name) {
  var on0,
      on1,
      listener0,
      key = "style." + name,
      event = "end." + key,
      remove;
  return function () {
    var schedule = Object(_schedule__WEBPACK_IMPORTED_MODULE_2__["set"])(this, id),
        on = schedule.on,
        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);
    schedule.on = on1;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value, priority) {
  var i = (name += "") === "transform" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["interpolateTransformCss"] : _interpolate__WEBPACK_IMPORTED_MODULE_4__["default"];
  return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove(name)) : typeof value === "function" ? this.styleTween(name, styleFunction(name, i, Object(_tween__WEBPACK_IMPORTED_MODULE_3__["tweenValue"])(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant(name, i, value), priority).on("end.style." + name, null);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/styleTween.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/styleTween.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function styleInterpolate(name, i, priority) {
  return function (t) {
    this.style.setProperty(name, i(t), priority);
  };
}

function styleTween(name, value, priority) {
  var t, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }

  tween._value = value;
  return tween;
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/text.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/text.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tween__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tween */ "./node_modules/d3-transition/src/transition/tween.js");


function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  return this.tween("text", typeof value === "function" ? textFunction(Object(_tween__WEBPACK_IMPORTED_MODULE_0__["tweenValue"])(this, "text", value)) : textConstant(value == null ? "" : value + ""));
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/transition.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/transition.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


/* harmony default export */ __webpack_exports__["default"] = (function () {
  var name = this._name,
      id0 = this._id,
      id1 = Object(_index__WEBPACK_IMPORTED_MODULE_0__["newId"])();

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit = Object(_schedule__WEBPACK_IMPORTED_MODULE_1__["get"])(node, id0);
        Object(_schedule__WEBPACK_IMPORTED_MODULE_1__["default"])(node, name, id1, i, group, {
          time: inherit.time + inherit.delay + inherit.duration,
          delay: 0,
          duration: inherit.duration,
          ease: inherit.ease
        });
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Transition"](groups, this._parents, name, id1);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/tween.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/tween.js ***!
  \************************************************************/
/*! exports provided: default, tweenValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tweenValue", function() { return tweenValue; });
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


function tweenRemove(id, name) {
  var tween0, tween1;
  return function () {
    var schedule = Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = tween0 = tween;

      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }

    schedule.tween = tween1;
  };
}

function tweenFunction(id, name, value) {
  var tween0, tween1;
  if (typeof value !== "function") throw new Error();
  return function () {
    var schedule = Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();

      for (var t = {
        name: name,
        value: value
      }, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }

      if (i === n) tween1.push(t);
    }

    schedule.tween = tween1;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value) {
  var id = this._id;
  name += "";

  if (arguments.length < 2) {
    var tween = Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["get"])(this.node(), id).tween;

    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }

    return null;
  }

  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
});
function tweenValue(transition, name, value) {
  var id = transition._id;
  transition.each(function () {
    var schedule = Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id);
    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
  });
  return function (node) {
    return Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["get"])(node, id).value[name];
  };
}

/***/ }),

/***/ "./node_modules/d3-voronoi/src/Beach.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-voronoi/src/Beach.js ***!
  \**********************************************/
/*! exports provided: removeBeach, addBeach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeBeach", function() { return removeBeach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addBeach", function() { return addBeach; });
/* harmony import */ var _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RedBlackTree */ "./node_modules/d3-voronoi/src/RedBlackTree.js");
/* harmony import */ var _Cell__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cell */ "./node_modules/d3-voronoi/src/Cell.js");
/* harmony import */ var _Circle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Circle */ "./node_modules/d3-voronoi/src/Circle.js");
/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Edge */ "./node_modules/d3-voronoi/src/Edge.js");
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");





var beachPool = [];

function Beach() {
  Object(_RedBlackTree__WEBPACK_IMPORTED_MODULE_0__["RedBlackNode"])(this);
  this.edge = this.site = this.circle = null;
}

function createBeach(site) {
  var beach = beachPool.pop() || new Beach();
  beach.site = site;
  return beach;
}

function detachBeach(beach) {
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(beach);
  _Diagram__WEBPACK_IMPORTED_MODULE_4__["beaches"].remove(beach);
  beachPool.push(beach);
  Object(_RedBlackTree__WEBPACK_IMPORTED_MODULE_0__["RedBlackNode"])(beach);
}

function removeBeach(beach) {
  var circle = beach.circle,
      x = circle.x,
      y = circle.cy,
      vertex = [x, y],
      previous = beach.P,
      next = beach.N,
      disappearing = [beach];
  detachBeach(beach);
  var lArc = previous;

  while (lArc.circle && Math.abs(x - lArc.circle.x) < _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"] && Math.abs(y - lArc.circle.cy) < _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
    previous = lArc.P;
    disappearing.unshift(lArc);
    detachBeach(lArc);
    lArc = previous;
  }

  disappearing.unshift(lArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(lArc);
  var rArc = next;

  while (rArc.circle && Math.abs(x - rArc.circle.x) < _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"] && Math.abs(y - rArc.circle.cy) < _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
    next = rArc.N;
    disappearing.push(rArc);
    detachBeach(rArc);
    rArc = next;
  }

  disappearing.push(rArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(rArc);
  var nArcs = disappearing.length,
      iArc;

  for (iArc = 1; iArc < nArcs; ++iArc) {
    rArc = disappearing[iArc];
    lArc = disappearing[iArc - 1];
    Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["setEdgeEnd"])(rArc.edge, lArc.site, rArc.site, vertex);
  }

  lArc = disappearing[0];
  rArc = disappearing[nArcs - 1];
  rArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(lArc.site, rArc.site, null, vertex);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(lArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(rArc);
}
function addBeach(site) {
  var x = site[0],
      directrix = site[1],
      lArc,
      rArc,
      dxl,
      dxr,
      node = _Diagram__WEBPACK_IMPORTED_MODULE_4__["beaches"]._;

  while (node) {
    dxl = leftBreakPoint(node, directrix) - x;
    if (dxl > _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) node = node.L;else {
      dxr = x - rightBreakPoint(node, directrix);

      if (dxr > _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
        if (!node.R) {
          lArc = node;
          break;
        }

        node = node.R;
      } else {
        if (dxl > -_Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
          lArc = node.P;
          rArc = node;
        } else if (dxr > -_Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
          lArc = node;
          rArc = node.N;
        } else {
          lArc = rArc = node;
        }

        break;
      }
    }
  }

  Object(_Cell__WEBPACK_IMPORTED_MODULE_1__["createCell"])(site);
  var newArc = createBeach(site);
  _Diagram__WEBPACK_IMPORTED_MODULE_4__["beaches"].insert(lArc, newArc);
  if (!lArc && !rArc) return;

  if (lArc === rArc) {
    Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(lArc);
    rArc = createBeach(lArc.site);
    _Diagram__WEBPACK_IMPORTED_MODULE_4__["beaches"].insert(newArc, rArc);
    newArc.edge = rArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(lArc.site, newArc.site);
    Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(lArc);
    Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(rArc);
    return;
  }

  if (!rArc) {
    // && lArc
    newArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(lArc.site, newArc.site);
    return;
  } // else lArc !== rArc


  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(lArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(rArc);
  var lSite = lArc.site,
      ax = lSite[0],
      ay = lSite[1],
      bx = site[0] - ax,
      by = site[1] - ay,
      rSite = rArc.site,
      cx = rSite[0] - ax,
      cy = rSite[1] - ay,
      d = 2 * (bx * cy - by * cx),
      hb = bx * bx + by * by,
      hc = cx * cx + cy * cy,
      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];
  Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["setEdgeEnd"])(rArc.edge, lSite, rSite, vertex);
  newArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(lSite, site, null, vertex);
  rArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(site, rSite, null, vertex);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(lArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(rArc);
}

function leftBreakPoint(arc, directrix) {
  var site = arc.site,
      rfocx = site[0],
      rfocy = site[1],
      pby2 = rfocy - directrix;
  if (!pby2) return rfocx;
  var lArc = arc.P;
  if (!lArc) return -Infinity;
  site = lArc.site;
  var lfocx = site[0],
      lfocy = site[1],
      plby2 = lfocy - directrix;
  if (!plby2) return lfocx;
  var hl = lfocx - rfocx,
      aby2 = 1 / pby2 - 1 / plby2,
      b = hl / plby2;
  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
  return (rfocx + lfocx) / 2;
}

function rightBreakPoint(arc, directrix) {
  var rArc = arc.N;
  if (rArc) return leftBreakPoint(rArc, directrix);
  var site = arc.site;
  return site[1] === directrix ? site[0] : Infinity;
}

/***/ }),

/***/ "./node_modules/d3-voronoi/src/Cell.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-voronoi/src/Cell.js ***!
  \*********************************************/
/*! exports provided: createCell, cellHalfedgeStart, cellHalfedgeEnd, sortCellHalfedges, clipCells */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCell", function() { return createCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cellHalfedgeStart", function() { return cellHalfedgeStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cellHalfedgeEnd", function() { return cellHalfedgeEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortCellHalfedges", function() { return sortCellHalfedges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clipCells", function() { return clipCells; });
/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Edge */ "./node_modules/d3-voronoi/src/Edge.js");
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");


function createCell(site) {
  return _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][site.index] = {
    site: site,
    halfedges: []
  };
}

function cellHalfedgeAngle(cell, edge) {
  var site = cell.site,
      va = edge.left,
      vb = edge.right;
  if (site === vb) vb = va, va = site;
  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);
  if (site === va) va = edge[1], vb = edge[0];else va = edge[0], vb = edge[1];
  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);
}

function cellHalfedgeStart(cell, edge) {
  return edge[+(edge.left !== cell.site)];
}
function cellHalfedgeEnd(cell, edge) {
  return edge[+(edge.left === cell.site)];
}
function sortCellHalfedges() {
  for (var i = 0, n = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"].length, cell, halfedges, j, m; i < n; ++i) {
    if ((cell = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][i]) && (m = (halfedges = cell.halfedges).length)) {
      var index = new Array(m),
          array = new Array(m);

      for (j = 0; j < m; ++j) {
        index[j] = j, array[j] = cellHalfedgeAngle(cell, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"][halfedges[j]]);
      }

      index.sort(function (i, j) {
        return array[j] - array[i];
      });

      for (j = 0; j < m; ++j) {
        array[j] = halfedges[index[j]];
      }

      for (j = 0; j < m; ++j) {
        halfedges[j] = array[j];
      }
    }
  }
}
function clipCells(x0, y0, x1, y1) {
  var nCells = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"].length,
      iCell,
      cell,
      site,
      iHalfedge,
      halfedges,
      nHalfedges,
      start,
      startX,
      startY,
      end,
      endX,
      endY,
      cover = true;

  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][iCell]) {
      site = cell.site;
      halfedges = cell.halfedges;
      iHalfedge = halfedges.length; // Remove any dangling clipped edges.

      while (iHalfedge--) {
        if (!_Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"][halfedges[iHalfedge]]) {
          halfedges.splice(iHalfedge, 1);
        }
      } // Insert any border edges as necessary.


      iHalfedge = 0, nHalfedges = halfedges.length;

      while (iHalfedge < nHalfedges) {
        end = cellHalfedgeEnd(cell, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"][halfedges[iHalfedge]]), endX = end[0], endY = end[1];
        start = cellHalfedgeStart(cell, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"][halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];

        if (Math.abs(endX - startX) > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Math.abs(endY - startY) > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) {
          halfedges.splice(iHalfedge, 0, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site, end, Math.abs(endX - x0) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && y1 - endY > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? [x0, Math.abs(startX - x0) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? startY : y1] : Math.abs(endY - y1) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && x1 - endX > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? [Math.abs(startY - y1) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? startX : x1, y1] : Math.abs(endX - x1) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && endY - y0 > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? [x1, Math.abs(startX - x1) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? startY : y0] : Math.abs(endY - y0) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && endX - x0 > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? [Math.abs(startY - y0) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? startX : x0, y0] : null)) - 1);
          ++nHalfedges;
        }
      }

      if (nHalfedges) cover = false;
    }
  } // If there weren’t any edges, have the closest site cover the extent.
  // It doesn’t matter which corner of the extent we measure!


  if (cover) {
    var dx,
        dy,
        d2,
        dc = Infinity;

    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {
      if (cell = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][iCell]) {
        site = cell.site;
        dx = site[0] - x0;
        dy = site[1] - y0;
        d2 = dx * dx + dy * dy;
        if (d2 < dc) dc = d2, cover = cell;
      }
    }

    if (cover) {
      var v00 = [x0, y0],
          v01 = [x0, y1],
          v11 = [x1, y1],
          v10 = [x1, y0];
      cover.halfedges.push(_Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site = cover.site, v00, v01)) - 1, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site, v01, v11)) - 1, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site, v11, v10)) - 1, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site, v10, v00)) - 1);
    }
  } // Lastly delete any cells with no edges; these were entirely clipped.


  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][iCell]) {
      if (!cell.halfedges.length) {
        delete _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][iCell];
      }
    }
  }
}

/***/ }),

/***/ "./node_modules/d3-voronoi/src/Circle.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-voronoi/src/Circle.js ***!
  \***********************************************/
/*! exports provided: firstCircle, attachCircle, detachCircle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "firstCircle", function() { return firstCircle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "attachCircle", function() { return attachCircle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detachCircle", function() { return detachCircle; });
/* harmony import */ var _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RedBlackTree */ "./node_modules/d3-voronoi/src/RedBlackTree.js");
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");


var circlePool = [];
var firstCircle;

function Circle() {
  Object(_RedBlackTree__WEBPACK_IMPORTED_MODULE_0__["RedBlackNode"])(this);
  this.x = this.y = this.arc = this.site = this.cy = null;
}

function attachCircle(arc) {
  var lArc = arc.P,
      rArc = arc.N;
  if (!lArc || !rArc) return;
  var lSite = lArc.site,
      cSite = arc.site,
      rSite = rArc.site;
  if (lSite === rSite) return;
  var bx = cSite[0],
      by = cSite[1],
      ax = lSite[0] - bx,
      ay = lSite[1] - by,
      cx = rSite[0] - bx,
      cy = rSite[1] - by;
  var d = 2 * (ax * cy - ay * cx);
  if (d >= -_Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon2"]) return;
  var ha = ax * ax + ay * ay,
      hc = cx * cx + cy * cy,
      x = (cy * ha - ay * hc) / d,
      y = (ax * hc - cx * ha) / d;
  var circle = circlePool.pop() || new Circle();
  circle.arc = arc;
  circle.site = cSite;
  circle.x = x + bx;
  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom

  arc.circle = circle;
  var before = null,
      node = _Diagram__WEBPACK_IMPORTED_MODULE_1__["circles"]._;

  while (node) {
    if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
      if (node.L) node = node.L;else {
        before = node.P;
        break;
      }
    } else {
      if (node.R) node = node.R;else {
        before = node;
        break;
      }
    }
  }

  _Diagram__WEBPACK_IMPORTED_MODULE_1__["circles"].insert(before, circle);
  if (!before) firstCircle = circle;
}
function detachCircle(arc) {
  var circle = arc.circle;

  if (circle) {
    if (!circle.P) firstCircle = circle.N;
    _Diagram__WEBPACK_IMPORTED_MODULE_1__["circles"].remove(circle);
    circlePool.push(circle);
    Object(_RedBlackTree__WEBPACK_IMPORTED_MODULE_0__["RedBlackNode"])(circle);
    arc.circle = null;
  }
}

/***/ }),

/***/ "./node_modules/d3-voronoi/src/Diagram.js":
/*!************************************************!*\
  !*** ./node_modules/d3-voronoi/src/Diagram.js ***!
  \************************************************/
/*! exports provided: epsilon, epsilon2, beaches, cells, circles, edges, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon", function() { return epsilon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon2", function() { return epsilon2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "beaches", function() { return beaches; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cells", function() { return cells; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circles", function() { return circles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "edges", function() { return edges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Diagram; });
/* harmony import */ var _Beach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Beach */ "./node_modules/d3-voronoi/src/Beach.js");
/* harmony import */ var _Cell__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cell */ "./node_modules/d3-voronoi/src/Cell.js");
/* harmony import */ var _Circle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Circle */ "./node_modules/d3-voronoi/src/Circle.js");
/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Edge */ "./node_modules/d3-voronoi/src/Edge.js");
/* harmony import */ var _RedBlackTree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RedBlackTree */ "./node_modules/d3-voronoi/src/RedBlackTree.js");





var epsilon = 1e-6;
var epsilon2 = 1e-12;
var beaches;
var cells;
var circles;
var edges;

function triangleArea(a, b, c) {
  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);
}

function lexicographic(a, b) {
  return b[1] - a[1] || b[0] - a[0];
}

function Diagram(sites, extent) {
  var site = sites.sort(lexicographic).pop(),
      x,
      y,
      circle;
  edges = [];
  cells = new Array(sites.length);
  beaches = new _RedBlackTree__WEBPACK_IMPORTED_MODULE_4__["default"]();
  circles = new _RedBlackTree__WEBPACK_IMPORTED_MODULE_4__["default"]();

  while (true) {
    circle = _Circle__WEBPACK_IMPORTED_MODULE_2__["firstCircle"];

    if (site && (!circle || site[1] < circle.y || site[1] === circle.y && site[0] < circle.x)) {
      if (site[0] !== x || site[1] !== y) {
        Object(_Beach__WEBPACK_IMPORTED_MODULE_0__["addBeach"])(site);
        x = site[0], y = site[1];
      }

      site = sites.pop();
    } else if (circle) {
      Object(_Beach__WEBPACK_IMPORTED_MODULE_0__["removeBeach"])(circle.arc);
    } else {
      break;
    }
  }

  Object(_Cell__WEBPACK_IMPORTED_MODULE_1__["sortCellHalfedges"])();

  if (extent) {
    var x0 = +extent[0][0],
        y0 = +extent[0][1],
        x1 = +extent[1][0],
        y1 = +extent[1][1];
    Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["clipEdges"])(x0, y0, x1, y1);
    Object(_Cell__WEBPACK_IMPORTED_MODULE_1__["clipCells"])(x0, y0, x1, y1);
  }

  this.edges = edges;
  this.cells = cells;
  beaches = circles = edges = cells = null;
}
Diagram.prototype = {
  constructor: Diagram,
  polygons: function polygons() {
    var edges = this.edges;
    return this.cells.map(function (cell) {
      var polygon = cell.halfedges.map(function (i) {
        return Object(_Cell__WEBPACK_IMPORTED_MODULE_1__["cellHalfedgeStart"])(cell, edges[i]);
      });
      polygon.data = cell.site.data;
      return polygon;
    });
  },
  triangles: function triangles() {
    var triangles = [],
        edges = this.edges;
    this.cells.forEach(function (cell, i) {
      if (!(m = (halfedges = cell.halfedges).length)) return;
      var site = cell.site,
          halfedges,
          j = -1,
          m,
          s0,
          e1 = edges[halfedges[m - 1]],
          s1 = e1.left === site ? e1.right : e1.left;

      while (++j < m) {
        s0 = s1;
        e1 = edges[halfedges[j]];
        s1 = e1.left === site ? e1.right : e1.left;

        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {
          triangles.push([site.data, s0.data, s1.data]);
        }
      }
    });
    return triangles;
  },
  links: function links() {
    return this.edges.filter(function (edge) {
      return edge.right;
    }).map(function (edge) {
      return {
        source: edge.left.data,
        target: edge.right.data
      };
    });
  },
  find: function find(x, y, radius) {
    var that = this,
        i0,
        i1 = that._found || 0,
        n = that.cells.length,
        cell; // Use the previously-found cell, or start with an arbitrary one.

    while (!(cell = that.cells[i1])) {
      if (++i1 >= n) return null;
    }

    var dx = x - cell.site[0],
        dy = y - cell.site[1],
        d2 = dx * dx + dy * dy; // Traverse the half-edges to find a closer cell, if any.

    do {
      cell = that.cells[i0 = i1], i1 = null;
      cell.halfedges.forEach(function (e) {
        var edge = that.edges[e],
            v = edge.left;
        if ((v === cell.site || !v) && !(v = edge.right)) return;
        var vx = x - v[0],
            vy = y - v[1],
            v2 = vx * vx + vy * vy;
        if (v2 < d2) d2 = v2, i1 = v.index;
      });
    } while (i1 !== null);

    that._found = i0;
    return radius == null || d2 <= radius * radius ? cell.site : null;
  }
};

/***/ }),

/***/ "./node_modules/d3-voronoi/src/Edge.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-voronoi/src/Edge.js ***!
  \*********************************************/
/*! exports provided: createEdge, createBorderEdge, setEdgeEnd, clipEdges */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEdge", function() { return createEdge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBorderEdge", function() { return createBorderEdge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setEdgeEnd", function() { return setEdgeEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clipEdges", function() { return clipEdges; });
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");

function createEdge(left, right, v0, v1) {
  var edge = [null, null],
      index = _Diagram__WEBPACK_IMPORTED_MODULE_0__["edges"].push(edge) - 1;
  edge.left = left;
  edge.right = right;
  if (v0) setEdgeEnd(edge, left, right, v0);
  if (v1) setEdgeEnd(edge, right, left, v1);
  _Diagram__WEBPACK_IMPORTED_MODULE_0__["cells"][left.index].halfedges.push(index);
  _Diagram__WEBPACK_IMPORTED_MODULE_0__["cells"][right.index].halfedges.push(index);
  return edge;
}
function createBorderEdge(left, v0, v1) {
  var edge = [v0, v1];
  edge.left = left;
  return edge;
}
function setEdgeEnd(edge, left, right, vertex) {
  if (!edge[0] && !edge[1]) {
    edge[0] = vertex;
    edge.left = left;
    edge.right = right;
  } else if (edge.left === right) {
    edge[1] = vertex;
  } else {
    edge[0] = vertex;
  }
} // Liang–Barsky line clipping.

function clipEdge(edge, x0, y0, x1, y1) {
  var a = edge[0],
      b = edge[1],
      ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?

  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];
  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];
  return true;
}

function connectEdge(edge, x0, y0, x1, y1) {
  var v1 = edge[1];
  if (v1) return true;
  var v0 = edge[0],
      left = edge.left,
      right = edge.right,
      lx = left[0],
      ly = left[1],
      rx = right[0],
      ry = right[1],
      fx = (lx + rx) / 2,
      fy = (ly + ry) / 2,
      fm,
      fb;

  if (ry === ly) {
    if (fx < x0 || fx >= x1) return;

    if (lx > rx) {
      if (!v0) v0 = [fx, y0];else if (v0[1] >= y1) return;
      v1 = [fx, y1];
    } else {
      if (!v0) v0 = [fx, y1];else if (v0[1] < y0) return;
      v1 = [fx, y0];
    }
  } else {
    fm = (lx - rx) / (ry - ly);
    fb = fy - fm * fx;

    if (fm < -1 || fm > 1) {
      if (lx > rx) {
        if (!v0) v0 = [(y0 - fb) / fm, y0];else if (v0[1] >= y1) return;
        v1 = [(y1 - fb) / fm, y1];
      } else {
        if (!v0) v0 = [(y1 - fb) / fm, y1];else if (v0[1] < y0) return;
        v1 = [(y0 - fb) / fm, y0];
      }
    } else {
      if (ly < ry) {
        if (!v0) v0 = [x0, fm * x0 + fb];else if (v0[0] >= x1) return;
        v1 = [x1, fm * x1 + fb];
      } else {
        if (!v0) v0 = [x1, fm * x1 + fb];else if (v0[0] < x0) return;
        v1 = [x0, fm * x0 + fb];
      }
    }
  }

  edge[0] = v0;
  edge[1] = v1;
  return true;
}

function clipEdges(x0, y0, x1, y1) {
  var i = _Diagram__WEBPACK_IMPORTED_MODULE_0__["edges"].length,
      edge;

  while (i--) {
    if (!connectEdge(edge = _Diagram__WEBPACK_IMPORTED_MODULE_0__["edges"][i], x0, y0, x1, y1) || !clipEdge(edge, x0, y0, x1, y1) || !(Math.abs(edge[0][0] - edge[1][0]) > _Diagram__WEBPACK_IMPORTED_MODULE_0__["epsilon"] || Math.abs(edge[0][1] - edge[1][1]) > _Diagram__WEBPACK_IMPORTED_MODULE_0__["epsilon"])) {
      delete _Diagram__WEBPACK_IMPORTED_MODULE_0__["edges"][i];
    }
  }
}

/***/ }),

/***/ "./node_modules/d3-voronoi/src/RedBlackTree.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-voronoi/src/RedBlackTree.js ***!
  \*****************************************************/
/*! exports provided: RedBlackNode, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RedBlackNode", function() { return RedBlackNode; });
function RedBlackTree() {
  this._ = null; // root node
}

function RedBlackNode(node) {
  node.U = // parent node
  node.C = // color - true for red, false for black
  node.L = // left node
  node.R = // right node
  node.P = // previous node
  node.N = null; // next node
}
RedBlackTree.prototype = {
  constructor: RedBlackTree,
  insert: function insert(after, node) {
    var parent, grandpa, uncle;

    if (after) {
      node.P = after;
      node.N = after.N;
      if (after.N) after.N.P = node;
      after.N = node;

      if (after.R) {
        after = after.R;

        while (after.L) {
          after = after.L;
        }

        after.L = node;
      } else {
        after.R = node;
      }

      parent = after;
    } else if (this._) {
      after = RedBlackFirst(this._);
      node.P = null;
      node.N = after;
      after.P = after.L = node;
      parent = after;
    } else {
      node.P = node.N = null;
      this._ = node;
      parent = null;
    }

    node.L = node.R = null;
    node.U = parent;
    node.C = true;
    after = node;

    while (parent && parent.C) {
      grandpa = parent.U;

      if (parent === grandpa.L) {
        uncle = grandpa.R;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.R) {
            RedBlackRotateLeft(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateRight(this, grandpa);
        }
      } else {
        uncle = grandpa.L;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.L) {
            RedBlackRotateRight(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateLeft(this, grandpa);
        }
      }

      parent = after.U;
    }

    this._.C = false;
  },
  remove: function remove(node) {
    if (node.N) node.N.P = node.P;
    if (node.P) node.P.N = node.N;
    node.N = node.P = null;
    var parent = node.U,
        sibling,
        left = node.L,
        right = node.R,
        next,
        red;
    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);

    if (parent) {
      if (parent.L === node) parent.L = next;else parent.R = next;
    } else {
      this._ = next;
    }

    if (left && right) {
      red = next.C;
      next.C = node.C;
      next.L = left;
      left.U = next;

      if (next !== right) {
        parent = next.U;
        next.U = node.U;
        node = next.R;
        parent.L = node;
        next.R = right;
        right.U = next;
      } else {
        next.U = parent;
        parent = next;
        node = next.R;
      }
    } else {
      red = node.C;
      node = next;
    }

    if (node) node.U = parent;
    if (red) return;

    if (node && node.C) {
      node.C = false;
      return;
    }

    do {
      if (node === this._) break;

      if (node === parent.L) {
        sibling = parent.R;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateLeft(this, parent);
          sibling = parent.R;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.R || !sibling.R.C) {
            sibling.L.C = false;
            sibling.C = true;
            RedBlackRotateRight(this, sibling);
            sibling = parent.R;
          }

          sibling.C = parent.C;
          parent.C = sibling.R.C = false;
          RedBlackRotateLeft(this, parent);
          node = this._;
          break;
        }
      } else {
        sibling = parent.L;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateRight(this, parent);
          sibling = parent.L;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.L || !sibling.L.C) {
            sibling.R.C = false;
            sibling.C = true;
            RedBlackRotateLeft(this, sibling);
            sibling = parent.L;
          }

          sibling.C = parent.C;
          parent.C = sibling.L.C = false;
          RedBlackRotateRight(this, parent);
          node = this._;
          break;
        }
      }

      sibling.C = true;
      node = parent;
      parent = parent.U;
    } while (!node.C);

    if (node) node.C = false;
  }
};

function RedBlackRotateLeft(tree, node) {
  var p = node,
      q = node.R,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.R = q.L;
  if (p.R) p.R.U = p;
  q.L = p;
}

function RedBlackRotateRight(tree, node) {
  var p = node,
      q = node.L,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.L = q.R;
  if (p.L) p.L.U = p;
  q.R = p;
}

function RedBlackFirst(node) {
  while (node.L) {
    node = node.L;
  }

  return node;
}

/* harmony default export */ __webpack_exports__["default"] = (RedBlackTree);

/***/ }),

/***/ "./node_modules/d3-voronoi/src/constant.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-voronoi/src/constant.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-voronoi/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-voronoi/src/index.js ***!
  \**********************************************/
/*! exports provided: voronoi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _voronoi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./voronoi */ "./node_modules/d3-voronoi/src/voronoi.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "voronoi", function() { return _voronoi__WEBPACK_IMPORTED_MODULE_0__["default"]; });



/***/ }),

/***/ "./node_modules/d3-voronoi/src/point.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-voronoi/src/point.js ***!
  \**********************************************/
/*! exports provided: x, y */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return x; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return y; });
function x(d) {
  return d[0];
}
function y(d) {
  return d[1];
}

/***/ }),

/***/ "./node_modules/d3-voronoi/src/voronoi.js":
/*!************************************************!*\
  !*** ./node_modules/d3-voronoi/src/voronoi.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-voronoi/src/constant.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "./node_modules/d3-voronoi/src/point.js");
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");



/* harmony default export */ __webpack_exports__["default"] = (function () {
  var x = _point__WEBPACK_IMPORTED_MODULE_1__["x"],
      y = _point__WEBPACK_IMPORTED_MODULE_1__["y"],
      extent = null;

  function voronoi(data) {
    return new _Diagram__WEBPACK_IMPORTED_MODULE_2__["default"](data.map(function (d, i) {
      var s = [Math.round(x(d, i, data) / _Diagram__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) * _Diagram__WEBPACK_IMPORTED_MODULE_2__["epsilon"], Math.round(y(d, i, data) / _Diagram__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) * _Diagram__WEBPACK_IMPORTED_MODULE_2__["epsilon"]];
      s.index = i;
      s.data = d;
      return s;
    }), extent);
  }

  voronoi.polygons = function (data) {
    return voronoi(data).polygons();
  };

  voronoi.links = function (data) {
    return voronoi(data).links();
  };

  voronoi.triangles = function (data) {
    return voronoi(data).triangles();
  };

  voronoi.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), voronoi) : x;
  };

  voronoi.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), voronoi) : y;
  };

  voronoi.extent = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];
  };

  voronoi.size = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];
  };

  return voronoi;
});

/***/ }),

/***/ "./node_modules/d3-zoom/src/constant.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-zoom/src/constant.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-zoom/src/event.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-zoom/src/event.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ZoomEvent; });
function ZoomEvent(target, type, transform) {
  this.target = target;
  this.type = type;
  this.transform = transform;
}

/***/ }),

/***/ "./node_modules/d3-zoom/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-zoom/src/index.js ***!
  \*******************************************/
/*! exports provided: zoom, zoomTransform, zoomIdentity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _zoom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./zoom */ "./node_modules/d3-zoom/src/zoom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoom", function() { return _zoom__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform */ "./node_modules/d3-zoom/src/transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomTransform", function() { return _transform__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomIdentity", function() { return _transform__WEBPACK_IMPORTED_MODULE_1__["identity"]; });




/***/ }),

/***/ "./node_modules/d3-zoom/src/noevent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-zoom/src/noevent.js ***!
  \*********************************************/
/*! exports provided: nopropagation, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nopropagation", function() { return nopropagation; });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");

function nopropagation() {
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].stopImmediatePropagation();
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].preventDefault();
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].stopImmediatePropagation();
});

/***/ }),

/***/ "./node_modules/d3-zoom/src/transform.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-zoom/src/transform.js ***!
  \***********************************************/
/*! exports provided: Transform, identity, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Transform", function() { return Transform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return transform; });
function Transform(k, x, y) {
  this.k = k;
  this.x = x;
  this.y = y;
}
Transform.prototype = {
  constructor: Transform,
  scale: function scale(k) {
    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
  },
  translate: function translate(x, y) {
    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
  },
  apply: function apply(point) {
    return [point[0] * this.k + this.x, point[1] * this.k + this.y];
  },
  applyX: function applyX(x) {
    return x * this.k + this.x;
  },
  applyY: function applyY(y) {
    return y * this.k + this.y;
  },
  invert: function invert(location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function invertX(x) {
    return (x - this.x) / this.k;
  },
  invertY: function invertY(y) {
    return (y - this.y) / this.k;
  },
  rescaleX: function rescaleX(x) {
    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
  },
  rescaleY: function rescaleY(y) {
    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
  },
  toString: function toString() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var identity = new Transform(1, 0, 0);
transform.prototype = Transform.prototype;
function transform(node) {
  return node.__zoom || identity;
}

/***/ }),

/***/ "./node_modules/d3-zoom/src/zoom.js":
/*!******************************************!*\
  !*** ./node_modules/d3-zoom/src/zoom.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony import */ var d3_drag__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-drag */ "./node_modules/d3-drag/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-transition */ "./node_modules/d3-transition/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-zoom/src/constant.js");
/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./event */ "./node_modules/d3-zoom/src/event.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./transform */ "./node_modules/d3-zoom/src/transform.js");
/* harmony import */ var _noevent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./noevent */ "./node_modules/d3-zoom/src/noevent.js");








 // Ignore right-click, since that should open the context menu.

function defaultFilter() {
  return !d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].button;
}

function defaultExtent() {
  var e = this,
      w,
      h;

  if (e instanceof SVGElement) {
    e = e.ownerSVGElement || e;
    w = e.width.baseVal.value;
    h = e.height.baseVal.value;
  } else {
    w = e.clientWidth;
    h = e.clientHeight;
  }

  return [[0, 0], [w, h]];
}

function defaultTransform() {
  return this.__zoom || _transform__WEBPACK_IMPORTED_MODULE_7__["identity"];
}

function defaultWheelDelta() {
  return -d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].deltaY * (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].deltaMode ? 120 : 1) / 500;
}

function defaultTouchable() {
  return "ontouchstart" in this;
}

function defaultConstrain(transform, extent, translateExtent) {
  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
  return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var filter = defaultFilter,
      extent = defaultExtent,
      constrain = defaultConstrain,
      wheelDelta = defaultWheelDelta,
      touchable = defaultTouchable,
      scaleExtent = [0, Infinity],
      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
      duration = 250,
      interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_2__["interpolateZoom"],
      gestures = [],
      listeners = Object(d3_dispatch__WEBPACK_IMPORTED_MODULE_0__["dispatch"])("start", "zoom", "end"),
      touchstarting,
      touchending,
      touchDelay = 500,
      wheelDelay = 150,
      clickDistance2 = 0;

  function zoom(selection) {
    selection.property("__zoom", defaultTransform).on("wheel.zoom", wheeled).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  zoom.transform = function (collection, transform) {
    var selection = collection.selection ? collection.selection() : collection;
    selection.property("__zoom", defaultTransform);

    if (collection !== selection) {
      schedule(collection, transform);
    } else {
      selection.interrupt().each(function () {
        gesture(this, arguments).start().zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform).end();
      });
    }
  };

  zoom.scaleBy = function (selection, k) {
    zoom.scaleTo(selection, function () {
      var k0 = this.__zoom.k,
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return k0 * k1;
    });
  };

  zoom.scaleTo = function (selection, k) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t0 = this.__zoom,
          p0 = centroid(e),
          p1 = t0.invert(p0),
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
    });
  };

  zoom.translateBy = function (selection, x, y) {
    zoom.transform(selection, function () {
      return constrain(this.__zoom.translate(typeof x === "function" ? x.apply(this, arguments) : x, typeof y === "function" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);
    });
  };

  zoom.translateTo = function (selection, x, y) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t = this.__zoom,
          p = centroid(e);
      return constrain(_transform__WEBPACK_IMPORTED_MODULE_7__["identity"].translate(p[0], p[1]).scale(t.k).translate(typeof x === "function" ? -x.apply(this, arguments) : -x, typeof y === "function" ? -y.apply(this, arguments) : -y), e, translateExtent);
    });
  };

  function scale(transform, k) {
    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
    return k === transform.k ? transform : new _transform__WEBPACK_IMPORTED_MODULE_7__["Transform"](k, transform.x, transform.y);
  }

  function translate(transform, p0, p1) {
    var x = p0[0] - p1[0] * transform.k,
        y = p0[1] - p1[1] * transform.k;
    return x === transform.x && y === transform.y ? transform : new _transform__WEBPACK_IMPORTED_MODULE_7__["Transform"](transform.k, x, y);
  }

  function centroid(extent) {
    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
  }

  function schedule(transition, transform, center) {
    transition.on("start.zoom", function () {
      gesture(this, arguments).start();
    }).on("interrupt.zoom end.zoom", function () {
      gesture(this, arguments).end();
    }).tween("zoom", function () {
      var that = this,
          args = arguments,
          g = gesture(that, args),
          e = extent.apply(that, args),
          p = center || centroid(e),
          w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
          a = that.__zoom,
          b = typeof transform === "function" ? transform.apply(that, args) : transform,
          i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
      return function (t) {
        if (t === 1) t = b; // Avoid rounding error on end.
        else {
            var l = i(t),
                k = w / l[2];
            t = new _transform__WEBPACK_IMPORTED_MODULE_7__["Transform"](k, p[0] - l[0] * k, p[1] - l[1] * k);
          }
        g.zoom(null, t);
      };
    });
  }

  function gesture(that, args) {
    for (var i = 0, n = gestures.length, g; i < n; ++i) {
      if ((g = gestures[i]).that === that) {
        return g;
      }
    }

    return new Gesture(that, args);
  }

  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.index = -1;
    this.active = 0;
    this.extent = extent.apply(that, args);
  }

  Gesture.prototype = {
    start: function start() {
      if (++this.active === 1) {
        this.index = gestures.push(this) - 1;
        this.emit("start");
      }

      return this;
    },
    zoom: function zoom(key, transform) {
      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    },
    end: function end() {
      if (--this.active === 0) {
        gestures.splice(this.index, 1);
        this.index = -1;
        this.emit("end");
      }

      return this;
    },
    emit: function emit(type) {
      Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["customEvent"])(new _event__WEBPACK_IMPORTED_MODULE_6__["default"](zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function wheeled() {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, arguments),
        t = this.__zoom,
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
        p = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["mouse"])(this); // If the mouse is in the same location as before, reuse it.
    // If there were recent wheel events, reset the wheel idle timeout.

    if (g.wheel) {
      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
        g.mouse[1] = t.invert(g.mouse[0] = p);
      }

      clearTimeout(g.wheel);
    } // If this wheel event won’t trigger a transform change, ignore it.
    else if (t.k === k) return; // Otherwise, capture the mouse point and location at the start.
      else {
          g.mouse = [p, t.invert(p)];
          Object(d3_transition__WEBPACK_IMPORTED_MODULE_4__["interrupt"])(this);
          g.start();
        }

    Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["default"])();
    g.wheel = setTimeout(wheelidled, wheelDelay);
    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

    function wheelidled() {
      g.wheel = null;
      g.end();
    }
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var g = gesture(this, arguments),
        v = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
        p = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["mouse"])(this),
        x0 = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].clientX,
        y0 = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].clientY;
    Object(d3_drag__WEBPACK_IMPORTED_MODULE_1__["dragDisable"])(d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].view);
    Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["nopropagation"])();
    g.mouse = [p, this.__zoom.invert(p)];
    Object(d3_transition__WEBPACK_IMPORTED_MODULE_4__["interrupt"])(this);
    g.start();

    function mousemoved() {
      Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["default"])();

      if (!g.moved) {
        var dx = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].clientX - x0,
            dy = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].clientY - y0;
        g.moved = dx * dx + dy * dy > clickDistance2;
      }

      g.zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["mouse"])(g.that), g.mouse[1]), g.extent, translateExtent));
    }

    function mouseupped() {
      v.on("mousemove.zoom mouseup.zoom", null);
      Object(d3_drag__WEBPACK_IMPORTED_MODULE_1__["dragEnable"])(d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].view, g.moved);
      Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["default"])();
      g.end();
    }
  }

  function dblclicked() {
    if (!filter.apply(this, arguments)) return;
    var t0 = this.__zoom,
        p0 = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["mouse"])(this),
        p1 = t0.invert(p0),
        k1 = t0.k * (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].shiftKey ? 0.5 : 2),
        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);
    Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["default"])();
    if (duration > 0) Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(this).transition().duration(duration).call(schedule, t1, p0);else Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(this).call(zoom.transform, t1);
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, arguments),
        touches = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].changedTouches,
        started,
        n = touches.length,
        i,
        t,
        p;
    Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["nopropagation"])();

    for (i = 0; i < n; ++i) {
      t = touches[i], p = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["touch"])(this, touches, t.identifier);
      p = [p, this.__zoom.invert(p), t.identifier];
      if (!g.touch0) g.touch0 = p, started = true;else if (!g.touch1) g.touch1 = p;
    } // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.


    if (touchstarting) {
      touchstarting = clearTimeout(touchstarting);

      if (!g.touch1) {
        g.end();
        p = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(this).on("dblclick.zoom");
        if (p) p.apply(this, arguments);
        return;
      }
    }

    if (started) {
      touchstarting = setTimeout(function () {
        touchstarting = null;
      }, touchDelay);
      Object(d3_transition__WEBPACK_IMPORTED_MODULE_4__["interrupt"])(this);
      g.start();
    }
  }

  function touchmoved() {
    var g = gesture(this, arguments),
        touches = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].changedTouches,
        n = touches.length,
        i,
        t,
        p,
        l;
    Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["default"])();
    if (touchstarting) touchstarting = clearTimeout(touchstarting);

    for (i = 0; i < n; ++i) {
      t = touches[i], p = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["touch"])(this, touches, t.identifier);
      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
    }

    t = g.that.__zoom;

    if (g.touch1) {
      var p0 = g.touch0[0],
          l0 = g.touch0[1],
          p1 = g.touch1[0],
          l1 = g.touch1[1],
          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
      t = scale(t, Math.sqrt(dp / dl));
      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];else return;

    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
  }

  function touchended() {
    var g = gesture(this, arguments),
        touches = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].changedTouches,
        n = touches.length,
        i,
        t;
    Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["nopropagation"])();
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, touchDelay);

    for (i = 0; i < n; ++i) {
      t = touches[i];
      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
    }

    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);else g.end();
  }

  zoom.wheelDelta = function (_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_5__["default"])(+_), zoom) : wheelDelta;
  };

  zoom.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_5__["default"])(!!_), zoom) : filter;
  };

  zoom.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_5__["default"])(!!_), zoom) : touchable;
  };

  zoom.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_5__["default"])([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
  };

  zoom.scaleExtent = function (_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
  };

  zoom.translateExtent = function (_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };

  zoom.constrain = function (_) {
    return arguments.length ? (constrain = _, zoom) : constrain;
  };

  zoom.duration = function (_) {
    return arguments.length ? (duration = +_, zoom) : duration;
  };

  zoom.interpolate = function (_) {
    return arguments.length ? (interpolate = _, zoom) : interpolate;
  };

  zoom.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? zoom : value;
  };

  zoom.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
  };

  return zoom;
});

/***/ }),

/***/ "./node_modules/d3/dist/package.js":
/*!*****************************************!*\
  !*** ./node_modules/d3/dist/package.js ***!
  \*****************************************/
/*! exports provided: name, version, description, keywords, homepage, license, author, main, unpkg, jsdelivr, module, repository, scripts, devDependencies, dependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "name", function() { return name; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "description", function() { return description; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keywords", function() { return keywords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "homepage", function() { return homepage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "license", function() { return license; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "author", function() { return author; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "main", function() { return main; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unpkg", function() { return unpkg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "jsdelivr", function() { return jsdelivr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "module", function() { return module; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "repository", function() { return repository; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scripts", function() { return scripts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "devDependencies", function() { return devDependencies; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dependencies", function() { return dependencies; });
var name = "d3";
var version = "5.9.2";
var description = "Data-Driven Documents";
var keywords = ["dom", "visualization", "svg", "animation", "canvas"];
var homepage = "https://d3js.org";
var license = "BSD-3-Clause";
var author = {
  "name": "Mike Bostock",
  "url": "https://bost.ocks.org/mike"
};
var main = "dist/d3.node.js";
var unpkg = "dist/d3.min.js";
var jsdelivr = "dist/d3.min.js";
var module = "index.js";
var repository = {
  "type": "git",
  "url": "https://github.com/d3/d3.git"
};
var scripts = {
  "pretest": "rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node",
  "test": "tape 'test/**/*-test.js'",
  "prepublishOnly": "yarn test && rollup -c",
  "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \"d3 ${npm_package_version}\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \"${npm_package_version}\" && git tag -am \"${npm_package_version}\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js"
};
var devDependencies = {
  "json2module": "0.0",
  "rimraf": "2",
  "rollup": "0.64",
  "rollup-plugin-ascii": "0.0",
  "rollup-plugin-node-resolve": "3",
  "rollup-plugin-terser": "1",
  "tape": "4"
};
var dependencies = {
  "d3-array": "1",
  "d3-axis": "1",
  "d3-brush": "1",
  "d3-chord": "1",
  "d3-collection": "1",
  "d3-color": "1",
  "d3-contour": "1",
  "d3-dispatch": "1",
  "d3-drag": "1",
  "d3-dsv": "1",
  "d3-ease": "1",
  "d3-fetch": "1",
  "d3-force": "1",
  "d3-format": "1",
  "d3-geo": "1",
  "d3-hierarchy": "1",
  "d3-interpolate": "1",
  "d3-path": "1",
  "d3-polygon": "1",
  "d3-quadtree": "1",
  "d3-random": "1",
  "d3-scale": "2",
  "d3-scale-chromatic": "1",
  "d3-selection": "1",
  "d3-shape": "1",
  "d3-time": "1",
  "d3-time-format": "2",
  "d3-timer": "1",
  "d3-transition": "1",
  "d3-voronoi": "1",
  "d3-zoom": "1"
};

/***/ }),

/***/ "./node_modules/d3/index.js":
/*!**********************************!*\
  !*** ./node_modules/d3/index.js ***!
  \**********************************/
/*! exports provided: version, bisect, bisectRight, bisectLeft, ascending, bisector, cross, descending, deviation, extent, histogram, thresholdFreedmanDiaconis, thresholdScott, thresholdSturges, max, mean, median, merge, min, pairs, permute, quantile, range, scan, shuffle, sum, ticks, tickIncrement, tickStep, transpose, variance, zip, axisTop, axisRight, axisBottom, axisLeft, brush, brushX, brushY, brushSelection, chord, ribbon, nest, set, map, keys, values, entries, color, rgb, hsl, lab, hcl, lch, gray, cubehelix, contours, contourDensity, dispatch, drag, dragDisable, dragEnable, dsvFormat, csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows, tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows, autoType, easeLinear, easeQuad, easeQuadIn, easeQuadOut, easeQuadInOut, easeCubic, easeCubicIn, easeCubicOut, easeCubicInOut, easePoly, easePolyIn, easePolyOut, easePolyInOut, easeSin, easeSinIn, easeSinOut, easeSinInOut, easeExp, easeExpIn, easeExpOut, easeExpInOut, easeCircle, easeCircleIn, easeCircleOut, easeCircleInOut, easeBounce, easeBounceIn, easeBounceOut, easeBounceInOut, easeBack, easeBackIn, easeBackOut, easeBackInOut, easeElastic, easeElasticIn, easeElasticOut, easeElasticInOut, blob, buffer, dsv, csv, tsv, image, json, text, xml, html, svg, forceCenter, forceCollide, forceLink, forceManyBody, forceRadial, forceSimulation, forceX, forceY, formatDefaultLocale, format, formatPrefix, formatLocale, formatSpecifier, precisionFixed, precisionPrefix, precisionRound, geoArea, geoBounds, geoCentroid, geoCircle, geoClipAntimeridian, geoClipCircle, geoClipExtent, geoClipRectangle, geoContains, geoDistance, geoGraticule, geoGraticule10, geoInterpolate, geoLength, geoPath, geoAlbers, geoAlbersUsa, geoAzimuthalEqualArea, geoAzimuthalEqualAreaRaw, geoAzimuthalEquidistant, geoAzimuthalEquidistantRaw, geoConicConformal, geoConicConformalRaw, geoConicEqualArea, geoConicEqualAreaRaw, geoConicEquidistant, geoConicEquidistantRaw, geoEqualEarth, geoEqualEarthRaw, geoEquirectangular, geoEquirectangularRaw, geoGnomonic, geoGnomonicRaw, geoIdentity, geoProjection, geoProjectionMutator, geoMercator, geoMercatorRaw, geoNaturalEarth1, geoNaturalEarth1Raw, geoOrthographic, geoOrthographicRaw, geoStereographic, geoStereographicRaw, geoTransverseMercator, geoTransverseMercatorRaw, geoRotation, geoStream, geoTransform, cluster, hierarchy, pack, packSiblings, packEnclose, partition, stratify, tree, treemap, treemapBinary, treemapDice, treemapSlice, treemapSliceDice, treemapSquarify, treemapResquarify, interpolate, interpolateArray, interpolateBasis, interpolateBasisClosed, interpolateDate, interpolateDiscrete, interpolateHue, interpolateNumber, interpolateObject, interpolateRound, interpolateString, interpolateTransformCss, interpolateTransformSvg, interpolateZoom, interpolateRgb, interpolateRgbBasis, interpolateRgbBasisClosed, interpolateHsl, interpolateHslLong, interpolateLab, interpolateHcl, interpolateHclLong, interpolateCubehelix, interpolateCubehelixLong, piecewise, quantize, path, polygonArea, polygonCentroid, polygonHull, polygonContains, polygonLength, quadtree, randomUniform, randomNormal, randomLogNormal, randomBates, randomIrwinHall, randomExponential, scaleBand, scalePoint, scaleIdentity, scaleLinear, scaleLog, scaleSymlog, scaleOrdinal, scaleImplicit, scalePow, scaleSqrt, scaleQuantile, scaleQuantize, scaleThreshold, scaleTime, scaleUtc, scaleSequential, scaleSequentialLog, scaleSequentialPow, scaleSequentialSqrt, scaleSequentialSymlog, scaleSequentialQuantile, scaleDiverging, scaleDivergingLog, scaleDivergingPow, scaleDivergingSqrt, scaleDivergingSymlog, tickFormat, schemeCategory10, schemeAccent, schemeDark2, schemePaired, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3, interpolateBrBG, schemeBrBG, interpolatePRGn, schemePRGn, interpolatePiYG, schemePiYG, interpolatePuOr, schemePuOr, interpolateRdBu, schemeRdBu, interpolateRdGy, schemeRdGy, interpolateRdYlBu, schemeRdYlBu, interpolateRdYlGn, schemeRdYlGn, interpolateSpectral, schemeSpectral, interpolateBuGn, schemeBuGn, interpolateBuPu, schemeBuPu, interpolateGnBu, schemeGnBu, interpolateOrRd, schemeOrRd, interpolatePuBuGn, schemePuBuGn, interpolatePuBu, schemePuBu, interpolatePuRd, schemePuRd, interpolateRdPu, schemeRdPu, interpolateYlGnBu, schemeYlGnBu, interpolateYlGn, schemeYlGn, interpolateYlOrBr, schemeYlOrBr, interpolateYlOrRd, schemeYlOrRd, interpolateBlues, schemeBlues, interpolateGreens, schemeGreens, interpolateGreys, schemeGreys, interpolatePurples, schemePurples, interpolateReds, schemeReds, interpolateOranges, schemeOranges, interpolateCubehelixDefault, interpolateRainbow, interpolateWarm, interpolateCool, interpolateSinebow, interpolateViridis, interpolateMagma, interpolateInferno, interpolatePlasma, create, creator, local, matcher, mouse, namespace, namespaces, clientPoint, select, selectAll, selection, selector, selectorAll, style, touch, touches, window, event, customEvent, arc, area, line, pie, areaRadial, radialArea, lineRadial, radialLine, pointRadial, linkHorizontal, linkVertical, linkRadial, symbol, symbols, symbolCircle, symbolCross, symbolDiamond, symbolSquare, symbolStar, symbolTriangle, symbolWye, curveBasisClosed, curveBasisOpen, curveBasis, curveBundle, curveCardinalClosed, curveCardinalOpen, curveCardinal, curveCatmullRomClosed, curveCatmullRomOpen, curveCatmullRom, curveLinearClosed, curveLinear, curveMonotoneX, curveMonotoneY, curveNatural, curveStep, curveStepAfter, curveStepBefore, stack, stackOffsetExpand, stackOffsetDiverging, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle, stackOrderAppearance, stackOrderAscending, stackOrderDescending, stackOrderInsideOut, stackOrderNone, stackOrderReverse, timeInterval, timeMillisecond, timeMilliseconds, utcMillisecond, utcMilliseconds, timeSecond, timeSeconds, utcSecond, utcSeconds, timeMinute, timeMinutes, timeHour, timeHours, timeDay, timeDays, timeWeek, timeWeeks, timeSunday, timeSundays, timeMonday, timeMondays, timeTuesday, timeTuesdays, timeWednesday, timeWednesdays, timeThursday, timeThursdays, timeFriday, timeFridays, timeSaturday, timeSaturdays, timeMonth, timeMonths, timeYear, timeYears, utcMinute, utcMinutes, utcHour, utcHours, utcDay, utcDays, utcWeek, utcWeeks, utcSunday, utcSundays, utcMonday, utcMondays, utcTuesday, utcTuesdays, utcWednesday, utcWednesdays, utcThursday, utcThursdays, utcFriday, utcFridays, utcSaturday, utcSaturdays, utcMonth, utcMonths, utcYear, utcYears, timeFormatDefaultLocale, timeFormat, timeParse, utcFormat, utcParse, timeFormatLocale, isoFormat, isoParse, now, timer, timerFlush, timeout, interval, transition, active, interrupt, voronoi, zoom, zoomTransform, zoomIdentity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dist_package__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/package */ "./node_modules/d3/dist/package.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "version", function() { return _dist_package__WEBPACK_IMPORTED_MODULE_0__["version"]; });

/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisect", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["bisect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["bisectRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["bisectLeft"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ascending", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["ascending"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisector", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["bisector"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["cross"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "descending", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["descending"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deviation", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["deviation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["extent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "histogram", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["histogram"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdFreedmanDiaconis", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["thresholdFreedmanDiaconis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdScott", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["thresholdScott"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdSturges", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["thresholdSturges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["max"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["mean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "median", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["median"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["merge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["min"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["pairs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permute", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["permute"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantile", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["quantile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["range"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["scan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["shuffle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["sum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ticks", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["ticks"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["tickIncrement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["tickStep"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["transpose"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "variance", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["variance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["zip"]; });

/* harmony import */ var d3_axis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-axis */ "./node_modules/d3-axis/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisTop", function() { return d3_axis__WEBPACK_IMPORTED_MODULE_2__["axisTop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisRight", function() { return d3_axis__WEBPACK_IMPORTED_MODULE_2__["axisRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisBottom", function() { return d3_axis__WEBPACK_IMPORTED_MODULE_2__["axisBottom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisLeft", function() { return d3_axis__WEBPACK_IMPORTED_MODULE_2__["axisLeft"]; });

/* harmony import */ var d3_brush__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-brush */ "./node_modules/d3-brush/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brush", function() { return d3_brush__WEBPACK_IMPORTED_MODULE_3__["brush"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brushX", function() { return d3_brush__WEBPACK_IMPORTED_MODULE_3__["brushX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brushY", function() { return d3_brush__WEBPACK_IMPORTED_MODULE_3__["brushY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brushSelection", function() { return d3_brush__WEBPACK_IMPORTED_MODULE_3__["brushSelection"]; });

/* harmony import */ var d3_chord__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-chord */ "./node_modules/d3-chord/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chord", function() { return d3_chord__WEBPACK_IMPORTED_MODULE_4__["chord"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ribbon", function() { return d3_chord__WEBPACK_IMPORTED_MODULE_4__["ribbon"]; });

/* harmony import */ var d3_collection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-collection */ "./node_modules/d3-collection/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nest", function() { return d3_collection__WEBPACK_IMPORTED_MODULE_5__["nest"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "set", function() { return d3_collection__WEBPACK_IMPORTED_MODULE_5__["set"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return d3_collection__WEBPACK_IMPORTED_MODULE_5__["map"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keys", function() { return d3_collection__WEBPACK_IMPORTED_MODULE_5__["keys"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "values", function() { return d3_collection__WEBPACK_IMPORTED_MODULE_5__["values"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "entries", function() { return d3_collection__WEBPACK_IMPORTED_MODULE_5__["entries"]; });

/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "color", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["color"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rgb", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["rgb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hsl", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["hsl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lab", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["lab"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hcl", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["hcl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lch", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["lch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gray", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["gray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cubehelix", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["cubehelix"]; });

/* harmony import */ var d3_contour__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-contour */ "./node_modules/d3-contour/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "contours", function() { return d3_contour__WEBPACK_IMPORTED_MODULE_7__["contours"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "contourDensity", function() { return d3_contour__WEBPACK_IMPORTED_MODULE_7__["contourDensity"]; });

/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dispatch", function() { return d3_dispatch__WEBPACK_IMPORTED_MODULE_8__["dispatch"]; });

/* harmony import */ var d3_drag__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! d3-drag */ "./node_modules/d3-drag/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drag", function() { return d3_drag__WEBPACK_IMPORTED_MODULE_9__["drag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dragDisable", function() { return d3_drag__WEBPACK_IMPORTED_MODULE_9__["dragDisable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dragEnable", function() { return d3_drag__WEBPACK_IMPORTED_MODULE_9__["dragEnable"]; });

/* harmony import */ var d3_dsv__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! d3-dsv */ "./node_modules/d3-dsv/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dsvFormat", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["dsvFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvParse", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["csvParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvParseRows", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["csvParseRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormat", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["csvFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormatBody", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["csvFormatBody"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormatRows", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["csvFormatRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvParse", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["tsvParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvParseRows", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["tsvParseRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormat", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["tsvFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormatBody", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["tsvFormatBody"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormatRows", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["tsvFormatRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "autoType", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["autoType"]; });

/* harmony import */ var d3_ease__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! d3-ease */ "./node_modules/d3-ease/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeLinear", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuad", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeQuad"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuadIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeQuadIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuadOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeQuadOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuadInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeQuadInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubic", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCubic"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubicIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCubicIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubicOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCubicOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubicInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCubicInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePoly", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easePoly"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePolyIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easePolyIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePolyOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easePolyOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePolyInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easePolyInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSin", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeSin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSinIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeSinIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSinOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeSinOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSinInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeSinInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExp", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeExp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExpIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeExpIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExpOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeExpOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExpInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeExpInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircle", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCircle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircleIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCircleIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircleOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCircleOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircleInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCircleInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounce", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBounce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounceIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBounceIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounceOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBounceOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounceInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBounceInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBack", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBack"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBackIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBackIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBackOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBackOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBackInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBackInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElastic", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeElastic"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElasticIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeElasticIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElasticOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeElasticOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElasticInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeElasticInOut"]; });

/* harmony import */ var d3_fetch__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! d3-fetch */ "./node_modules/d3-fetch/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blob", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["blob"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["buffer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dsv", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["dsv"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csv", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["csv"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsv", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["tsv"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "image", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["image"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "json", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["json"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "text", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["text"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xml", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["xml"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "html", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["html"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "svg", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["svg"]; });

/* harmony import */ var d3_force__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! d3-force */ "./node_modules/d3-force/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceCenter", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceCenter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceCollide", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceCollide"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceLink", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceLink"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceManyBody", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceManyBody"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceRadial", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceRadial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceSimulation", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceSimulation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceX", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceY", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceY"]; });

/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDefaultLocale", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["formatDefaultLocale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "format", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["format"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatPrefix", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["formatPrefix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatLocale", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["formatLocale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatSpecifier", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["formatSpecifier"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionFixed", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["precisionFixed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionPrefix", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["precisionPrefix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionRound", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["precisionRound"]; });

/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoArea", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBounds", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoBounds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCentroid", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoCentroid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCircle", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoCircle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipAntimeridian", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoClipAntimeridian"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipCircle", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoClipCircle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipExtent", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoClipExtent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipRectangle", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoClipRectangle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoContains", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoContains"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoDistance", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoDistance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGraticule", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoGraticule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGraticule10", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoGraticule10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterpolate", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoInterpolate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLength", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoLength"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPath", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAlbers", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoAlbers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAlbersUsa", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoAlbersUsa"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEqualArea", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoAzimuthalEqualArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEqualAreaRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoAzimuthalEqualAreaRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEquidistant", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoAzimuthalEquidistant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEquidistantRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoAzimuthalEquidistantRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicConformal", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoConicConformal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicConformalRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoConicConformalRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEqualArea", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoConicEqualArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEqualAreaRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoConicEqualAreaRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEquidistant", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoConicEquidistant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEquidistantRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoConicEquidistantRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEqualEarth", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoEqualEarth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEqualEarthRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoEqualEarthRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEquirectangular", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoEquirectangular"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEquirectangularRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoEquirectangularRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGnomonic", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoGnomonic"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGnomonicRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoGnomonicRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoIdentity", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoIdentity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoProjection", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoProjection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoProjectionMutator", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoProjectionMutator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMercator", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoMercator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMercatorRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoMercatorRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth1", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoNaturalEarth1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth1Raw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoNaturalEarth1Raw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoOrthographic", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoOrthographic"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoOrthographicRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoOrthographicRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStereographic", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoStereographic"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStereographicRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoStereographicRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransverseMercator", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoTransverseMercator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransverseMercatorRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoTransverseMercatorRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoRotation", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoRotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStream", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoStream"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransform", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoTransform"]; });

/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! d3-hierarchy */ "./node_modules/d3-hierarchy/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cluster", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["cluster"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hierarchy", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["hierarchy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pack", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["pack"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "packSiblings", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["packSiblings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "packEnclose", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["packEnclose"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["partition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stratify", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["stratify"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tree", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["tree"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemap", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapBinary", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemapBinary"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapDice", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemapDice"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSlice", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemapSlice"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSliceDice", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemapSliceDice"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSquarify", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemapSquarify"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapResquarify", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemapResquarify"]; });

/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateArray", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasis", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateBasis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasisClosed", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateBasisClosed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDate", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDiscrete", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateDiscrete"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHue", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateHue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateNumber", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateObject", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRound", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateRound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateString", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformCss", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateTransformCss"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformSvg", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateTransformSvg"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateZoom", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateZoom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgb", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateRgb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasis", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateRgbBasis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasisClosed", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateRgbBasisClosed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHsl", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateHsl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHslLong", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateHslLong"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateLab", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateLab"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHcl", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateHcl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHclLong", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateHclLong"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelix", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateCubehelix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelixLong", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateCubehelixLong"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "piecewise", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["piecewise"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantize", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["quantize"]; });

/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "path", function() { return d3_path__WEBPACK_IMPORTED_MODULE_18__["path"]; });

/* harmony import */ var d3_polygon__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! d3-polygon */ "./node_modules/d3-polygon/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonArea", function() { return d3_polygon__WEBPACK_IMPORTED_MODULE_19__["polygonArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonCentroid", function() { return d3_polygon__WEBPACK_IMPORTED_MODULE_19__["polygonCentroid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonHull", function() { return d3_polygon__WEBPACK_IMPORTED_MODULE_19__["polygonHull"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonContains", function() { return d3_polygon__WEBPACK_IMPORTED_MODULE_19__["polygonContains"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonLength", function() { return d3_polygon__WEBPACK_IMPORTED_MODULE_19__["polygonLength"]; });

/* harmony import */ var d3_quadtree__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! d3-quadtree */ "./node_modules/d3-quadtree/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quadtree", function() { return d3_quadtree__WEBPACK_IMPORTED_MODULE_20__["quadtree"]; });

/* harmony import */ var d3_random__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! d3-random */ "./node_modules/d3-random/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomUniform", function() { return d3_random__WEBPACK_IMPORTED_MODULE_21__["randomUniform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomNormal", function() { return d3_random__WEBPACK_IMPORTED_MODULE_21__["randomNormal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomLogNormal", function() { return d3_random__WEBPACK_IMPORTED_MODULE_21__["randomLogNormal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomBates", function() { return d3_random__WEBPACK_IMPORTED_MODULE_21__["randomBates"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomIrwinHall", function() { return d3_random__WEBPACK_IMPORTED_MODULE_21__["randomIrwinHall"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomExponential", function() { return d3_random__WEBPACK_IMPORTED_MODULE_21__["randomExponential"]; });

/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! d3-scale */ "./node_modules/d3-scale/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleBand", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleBand"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scalePoint", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scalePoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleIdentity", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleIdentity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleLinear", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleLog", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSymlog", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSymlog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleOrdinal", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleOrdinal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleImplicit", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleImplicit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scalePow", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scalePow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSqrt", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleQuantile", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleQuantile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleQuantize", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleQuantize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleThreshold", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleThreshold"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleTime", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleTime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleUtc", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleUtc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequential", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSequential"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialLog", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSequentialLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialPow", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSequentialPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialSqrt", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSequentialSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialSymlog", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSequentialSymlog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialQuantile", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSequentialQuantile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDiverging", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleDiverging"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingLog", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleDivergingLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingPow", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleDivergingPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingSqrt", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleDivergingSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingSymlog", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleDivergingSymlog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickFormat", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["tickFormat"]; });

/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeCategory10", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeCategory10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeAccent", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeAccent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeDark2", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeDark2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePaired", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePaired"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePastel1", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePastel1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePastel2", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePastel2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet1", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeSet1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet2", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeSet2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet3", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeSet3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBrBG", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateBrBG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBrBG", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeBrBG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePRGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePRGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePRGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePRGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePiYG", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePiYG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePiYG", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePiYG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuOr", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePuOr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuOr", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePuOr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateRdBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeRdBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdGy", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateRdGy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdGy", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeRdGy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdYlBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateRdYlBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdYlBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeRdYlBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdYlGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateRdYlGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdYlGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeRdYlGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateSpectral", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateSpectral"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSpectral", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeSpectral"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBuGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateBuGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBuGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeBuGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBuPu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateBuPu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBuPu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeBuPu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGnBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateGnBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGnBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeGnBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateOrRd", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateOrRd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeOrRd", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeOrRd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuBuGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePuBuGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuBuGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePuBuGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePuBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePuBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuRd", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePuRd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuRd", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePuRd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdPu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateRdPu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdPu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeRdPu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlGnBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateYlGnBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlGnBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeYlGnBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateYlGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeYlGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlOrBr", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateYlOrBr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlOrBr", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeYlOrBr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlOrRd", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateYlOrRd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlOrRd", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeYlOrRd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBlues", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateBlues"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBlues", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeBlues"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGreens", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateGreens"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGreens", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeGreens"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGreys", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateGreys"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGreys", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeGreys"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePurples", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePurples"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePurples", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePurples"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateReds", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateReds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeReds", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeReds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateOranges", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateOranges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeOranges", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeOranges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelixDefault", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateCubehelixDefault"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRainbow", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateRainbow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateWarm", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateWarm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCool", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateCool"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateSinebow", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateSinebow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateViridis", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateViridis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateMagma", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateMagma"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateInferno", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateInferno"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePlasma", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePlasma"]; });

/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "create", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["create"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "creator", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["creator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "local", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["local"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matcher", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["matcher"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mouse", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["mouse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["namespace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "namespaces", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["namespaces"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clientPoint", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["clientPoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "select", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["select"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectAll", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["selectAll"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selection", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["selection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selector", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["selector"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectorAll", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["selectorAll"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "style", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["style"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touch", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["touch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touches", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["touches"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "window", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["window"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "event", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["event"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "customEvent", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["customEvent"]; });

/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! d3-shape */ "./node_modules/d3-shape/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arc", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["arc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "area", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["area"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "line", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["line"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pie", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["pie"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "areaRadial", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["areaRadial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "radialArea", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["radialArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lineRadial", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["lineRadial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "radialLine", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["radialLine"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pointRadial", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["pointRadial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkHorizontal", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["linkHorizontal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkVertical", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["linkVertical"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkRadial", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["linkRadial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbol", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbol"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbols", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbols"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolCircle", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolCircle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolCross", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolCross"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolDiamond", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolDiamond"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolSquare", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolSquare"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolStar", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolStar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolTriangle", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolTriangle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolWye", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolWye"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasisClosed", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveBasisClosed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasisOpen", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveBasisOpen"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasis", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveBasis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBundle", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveBundle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinalClosed", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveCardinalClosed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinalOpen", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveCardinalOpen"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinal", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveCardinal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRomClosed", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveCatmullRomClosed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRomOpen", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveCatmullRomOpen"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRom", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveCatmullRom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveLinearClosed", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveLinearClosed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveLinear", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveMonotoneX", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveMonotoneX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveMonotoneY", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveMonotoneY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveNatural", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveNatural"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStep", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveStep"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStepAfter", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveStepAfter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStepBefore", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveStepBefore"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stack", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stack"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetExpand", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOffsetExpand"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetDiverging", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOffsetDiverging"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetNone", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOffsetNone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetSilhouette", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOffsetSilhouette"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetWiggle", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOffsetWiggle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderAppearance", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOrderAppearance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderAscending", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOrderAscending"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderDescending", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOrderDescending"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderInsideOut", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOrderInsideOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderNone", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOrderNone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderReverse", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOrderReverse"]; });

/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeInterval"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMillisecond", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMillisecond"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMilliseconds", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMilliseconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMillisecond", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMillisecond"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMilliseconds", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMilliseconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSecond", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeSecond"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSeconds", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeSeconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSecond", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcSecond"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSeconds", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcSeconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMinute", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMinute"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMinutes", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMinutes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeHour", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeHour"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeHours", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeHours"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeDay", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeDay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeDays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeDays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWeek", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeWeek"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWeeks", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeWeeks"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSunday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeSunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSundays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeSundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMonday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMondays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMondays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTuesday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeTuesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTuesdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeTuesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWednesday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeWednesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWednesdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeWednesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeThursday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeThursday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeThursdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeThursdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFriday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeFriday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFridays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeFridays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSaturday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeSaturday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSaturdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeSaturdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonth", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMonth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonths", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMonths"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeYear", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeYear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeYears", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeYears"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMinute", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMinute"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMinutes", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMinutes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcHour", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcHour"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcHours", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcHours"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcDay", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcDay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcDays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcDays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWeek", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcWeek"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWeeks", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcWeeks"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSunday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcSunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSundays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcSundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMonday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMondays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMondays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTuesday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcTuesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTuesdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcTuesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWednesday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcWednesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWednesdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcWednesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcThursday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcThursday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcThursdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcThursdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFriday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcFriday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFridays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcFridays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSaturday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcSaturday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSaturdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcSaturdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonth", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMonth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonths", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMonths"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcYear", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcYear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcYears", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcYears"]; });

/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatDefaultLocale", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["timeFormatDefaultLocale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormat", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["timeFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeParse", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["timeParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFormat", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["utcFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcParse", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["utcParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatLocale", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["timeFormatLocale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isoFormat", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["isoFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isoParse", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["isoParse"]; });

/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "now", function() { return d3_timer__WEBPACK_IMPORTED_MODULE_28__["now"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return d3_timer__WEBPACK_IMPORTED_MODULE_28__["timer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timerFlush", function() { return d3_timer__WEBPACK_IMPORTED_MODULE_28__["timerFlush"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return d3_timer__WEBPACK_IMPORTED_MODULE_28__["timeout"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return d3_timer__WEBPACK_IMPORTED_MODULE_28__["interval"]; });

/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! d3-transition */ "./node_modules/d3-transition/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transition", function() { return d3_transition__WEBPACK_IMPORTED_MODULE_29__["transition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "active", function() { return d3_transition__WEBPACK_IMPORTED_MODULE_29__["active"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interrupt", function() { return d3_transition__WEBPACK_IMPORTED_MODULE_29__["interrupt"]; });

/* harmony import */ var d3_voronoi__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! d3-voronoi */ "./node_modules/d3-voronoi/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "voronoi", function() { return d3_voronoi__WEBPACK_IMPORTED_MODULE_30__["voronoi"]; });

/* harmony import */ var d3_zoom__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! d3-zoom */ "./node_modules/d3-zoom/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoom", function() { return d3_zoom__WEBPACK_IMPORTED_MODULE_31__["zoom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomTransform", function() { return d3_zoom__WEBPACK_IMPORTED_MODULE_31__["zoomTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomIdentity", function() { return d3_zoom__WEBPACK_IMPORTED_MODULE_31__["zoomIdentity"]; });


































/***/ }),

/***/ "./node_modules/ion-sound/js/ion.sound.js":
/*!************************************************!*\
  !*** ./node_modules/ion-sound/js/ion.sound.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * Ion.Sound
 * version 3.0.7 Build 89
 * © Denis Ineshin, 2016
 *
 * Project page:    http://ionden.com/a/plugins/ion.sound/en.html
 * GitHub page:     https://github.com/IonDen/ion.sound
 *
 * Released under MIT licence:
 * http://ionden.com/a/plugins/licence-en.html
 */
;

(function (window, navigator, $, undefined) {
  "use strict";

  window.ion = window.ion || {};

  if (ion.sound) {
    return;
  }

  var warn = function warn(text) {
    if (!text) text = "undefined";

    if (window.console) {
      if (console.warn && typeof console.warn === "function") {
        console.warn(text);
      } else if (console.log && typeof console.log === "function") {
        console.log(text);
      }

      var d = $ && $("#debug");

      if (d && d.length) {
        var a = d.html();
        d.html(a + text + '<br/>');
      }
    }
  };

  var extend = function extend(parent, child) {
    var prop;
    child = child || {};

    for (prop in parent) {
      if (parent.hasOwnProperty(prop)) {
        child[prop] = parent[prop];
      }
    }

    return child;
  };
  /**
   * DISABLE for unsupported browsers
   */


  if (typeof Audio !== "function" && (typeof Audio === "undefined" ? "undefined" : _typeof(Audio)) !== "object") {
    var func = function func() {
      warn("HTML5 Audio is not supported in this browser");
    };

    ion.sound = func;
    ion.sound.play = func;
    ion.sound.stop = func;
    ion.sound.pause = func;
    ion.sound.preload = func;
    ion.sound.destroy = func;
    func();
    return;
  }
  /**
   * CORE
   * - creating sounds collection
   * - public methods
   */


  var is_iOS = /iPad|iPhone|iPod/.test(navigator.appVersion),
      sounds_num = 0,
      settings = {},
      sounds = {},
      i;

  if (!settings.supported && is_iOS) {
    settings.supported = ["mp3", "mp4", "aac"];
  } else if (!settings.supported) {
    settings.supported = ["mp3", "ogg", "mp4", "aac", "wav"];
  }

  var createSound = function createSound(obj) {
    var name = obj.alias || obj.name;

    if (!sounds[name]) {
      sounds[name] = new Sound(obj);
      sounds[name].init();
    }
  };

  ion.sound = function (options) {
    extend(options, settings);
    settings.path = settings.path || "";
    settings.volume = settings.volume || 1;
    settings.preload = settings.preload || false;
    settings.multiplay = settings.multiplay || false;
    settings.loop = settings.loop || false;
    settings.sprite = settings.sprite || null;
    settings.scope = settings.scope || null;
    settings.ready_callback = settings.ready_callback || null;
    settings.ended_callback = settings.ended_callback || null;
    sounds_num = settings.sounds.length;

    if (!sounds_num) {
      warn("No sound-files provided!");
      return;
    }

    for (i = 0; i < sounds_num; i++) {
      createSound(settings.sounds[i]);
    }
  };

  ion.sound.VERSION = "3.0.7";

  ion.sound._method = function (method, name, options) {
    if (name) {
      sounds[name] && sounds[name][method](options);
    } else {
      for (i in sounds) {
        if (!sounds.hasOwnProperty(i) || !sounds[i]) {
          continue;
        }

        sounds[i][method](options);
      }
    }
  };

  ion.sound.preload = function (name, options) {
    options = options || {};
    extend({
      preload: true
    }, options);

    ion.sound._method("init", name, options);
  };

  ion.sound.destroy = function (name) {
    ion.sound._method("destroy", name);

    if (name) {
      sounds[name] = null;
    } else {
      for (i in sounds) {
        if (!sounds.hasOwnProperty(i)) {
          continue;
        }

        if (sounds[i]) {
          sounds[i] = null;
        }
      }
    }
  };

  ion.sound.play = function (name, options) {
    ion.sound._method("play", name, options);
  };

  ion.sound.stop = function (name, options) {
    ion.sound._method("stop", name, options);
  };

  ion.sound.pause = function (name, options) {
    ion.sound._method("pause", name, options);
  };

  ion.sound.volume = function (name, options) {
    ion.sound._method("volume", name, options);
  };

  if ($) {
    $.ionSound = ion.sound;
  }
  /**
   * Web Audio API core
   * - for most advanced browsers
   */


  var AudioContext = window.AudioContext || window.webkitAudioContext,
      audio;

  if (AudioContext) {
    audio = new AudioContext();
  }

  var Sound = function Sound(options) {
    this.options = extend(settings);
    delete this.options.sounds;
    extend(options, this.options);
    this.request = null;
    this.streams = {};
    this.result = {};
    this.ext = 0;
    this.url = "";
    this.loaded = false;
    this.decoded = false;
    this.no_file = false;
    this.autoplay = false;
  };

  Sound.prototype = {
    init: function init(options) {
      if (options) {
        extend(options, this.options);
      }

      if (this.options.preload) {
        this.load();
      }
    },
    destroy: function destroy() {
      var stream;

      for (i in this.streams) {
        stream = this.streams[i];

        if (stream) {
          stream.destroy();
          stream = null;
        }
      }

      this.streams = {};
      this.result = null;
      this.options.buffer = null;
      this.options = null;

      if (this.request) {
        this.request.removeEventListener("load", this.ready.bind(this), false);
        this.request.removeEventListener("error", this.error.bind(this), false);
        this.request.abort();
        this.request = null;
      }
    },
    createUrl: function createUrl() {
      var no_cache = new Date().valueOf();
      this.url = this.options.path + encodeURIComponent(this.options.name) + "." + this.options.supported[this.ext] + "?" + no_cache;
    },
    load: function load() {
      if (this.no_file) {
        warn("No sources for \"" + this.options.name + "\" sound :(");
        return;
      }

      if (this.request) {
        return;
      }

      this.createUrl();
      this.request = new XMLHttpRequest();
      this.request.open("GET", this.url, true);
      this.request.responseType = "arraybuffer";
      this.request.addEventListener("load", this.ready.bind(this), false);
      this.request.addEventListener("error", this.error.bind(this), false);
      this.request.send();
    },
    reload: function reload() {
      this.ext++;

      if (this.options.supported[this.ext]) {
        this.load();
      } else {
        this.no_file = true;
        warn("No sources for \"" + this.options.name + "\" sound :(");
      }
    },
    ready: function ready(data) {
      this.result = data.target;

      if (this.result.readyState !== 4) {
        this.reload();
        return;
      }

      if (this.result.status !== 200 && this.result.status !== 0) {
        warn(this.url + " was not found on server!");
        this.reload();
        return;
      }

      this.request.removeEventListener("load", this.ready.bind(this), false);
      this.request.removeEventListener("error", this.error.bind(this), false);
      this.request = null;
      this.loaded = true; //warn("Loaded: " + this.options.name + "." + settings.supported[this.ext]);

      this.decode();
    },
    decode: function decode() {
      if (!audio) {
        return;
      }

      audio.decodeAudioData(this.result.response, this.setBuffer.bind(this), this.error.bind(this));
    },
    setBuffer: function setBuffer(buffer) {
      this.options.buffer = buffer;
      this.decoded = true; //warn("Decoded: " + this.options.name + "." + settings.supported[this.ext]);

      var config = {
        name: this.options.name,
        alias: this.options.alias,
        ext: this.options.supported[this.ext],
        duration: this.options.buffer.duration
      };

      if (this.options.ready_callback && typeof this.options.ready_callback === "function") {
        this.options.ready_callback.call(this.options.scope, config);
      }

      if (this.options.sprite) {
        for (i in this.options.sprite) {
          this.options.start = this.options.sprite[i][0];
          this.options.end = this.options.sprite[i][1];
          this.streams[i] = new Stream(this.options, i);
        }
      } else {
        this.streams[0] = new Stream(this.options);
      }

      if (this.autoplay) {
        this.autoplay = false;
        this.play();
      }
    },
    error: function error() {
      this.reload();
    },
    play: function play(options) {
      delete this.options.part;

      if (options) {
        extend(options, this.options);
      }

      if (!this.loaded) {
        this.autoplay = true;
        this.load();
        return;
      }

      if (this.no_file || !this.decoded) {
        return;
      }

      if (this.options.sprite) {
        if (this.options.part) {
          this.streams[this.options.part].play(this.options);
        } else {
          for (i in this.options.sprite) {
            this.streams[i].play(this.options);
          }
        }
      } else {
        this.streams[0].play(this.options);
      }
    },
    stop: function stop(options) {
      if (this.options.sprite) {
        if (options) {
          this.streams[options.part].stop();
        } else {
          for (i in this.options.sprite) {
            this.streams[i].stop();
          }
        }
      } else {
        this.streams[0].stop();
      }
    },
    pause: function pause(options) {
      if (this.options.sprite) {
        if (options) {
          this.streams[options.part].pause();
        } else {
          for (i in this.options.sprite) {
            this.streams[i].pause();
          }
        }
      } else {
        this.streams[0].pause();
      }
    },
    volume: function volume(options) {
      var stream;

      if (options) {
        extend(options, this.options);
      } else {
        return;
      }

      if (this.options.sprite) {
        if (this.options.part) {
          stream = this.streams[this.options.part];
          stream && stream.setVolume(this.options);
        } else {
          for (i in this.options.sprite) {
            stream = this.streams[i];
            stream && stream.setVolume(this.options);
          }
        }
      } else {
        stream = this.streams[0];
        stream && stream.setVolume(this.options);
      }
    }
  };

  var Stream = function Stream(options, sprite_part) {
    this.alias = options.alias;
    this.name = options.name;
    this.sprite_part = sprite_part;
    this.buffer = options.buffer;
    this.start = options.start || 0;
    this.end = options.end || this.buffer.duration;
    this.multiplay = options.multiplay || false;
    this.volume = options.volume || 1;
    this.scope = options.scope;
    this.ended_callback = options.ended_callback;
    this.setLoop(options);
    this.source = null;
    this.gain = null;
    this.playing = false;
    this.paused = false;
    this.time_started = 0;
    this.time_ended = 0;
    this.time_played = 0;
    this.time_offset = 0;
  };

  Stream.prototype = {
    destroy: function destroy() {
      this.stop();
      this.buffer = null;
      this.source = null;
      this.gain && this.gain.disconnect();
      this.source && this.source.disconnect();
      this.gain = null;
      this.source = null;
    },
    setLoop: function setLoop(options) {
      if (options.loop === true) {
        this.loop = 9999999;
      } else if (typeof options.loop === "number") {
        this.loop = +options.loop - 1;
      } else {
        this.loop = false;
      }
    },
    update: function update(options) {
      this.setLoop(options);

      if ("volume" in options) {
        this.volume = options.volume;
      }
    },
    play: function play(options) {
      if (options) {
        this.update(options);
      }

      if (!this.multiplay && this.playing) {
        return;
      }

      this.gain = audio.createGain();
      this.source = audio.createBufferSource();
      this.source.buffer = this.buffer;
      this.source.connect(this.gain);
      this.gain.connect(audio.destination);
      this.gain.gain.value = this.volume;
      this.source.onended = this.ended.bind(this);

      this._play();
    },
    _play: function _play() {
      var start, end;

      if (this.paused) {
        start = this.start + this.time_offset;
        end = this.end - this.time_offset;
      } else {
        start = this.start;
        end = this.end;
      }

      if (end <= 0) {
        this.clear();
        return;
      }

      if (typeof this.source.start === "function") {
        this.source.start(0, start, end);
      } else {
        this.source.noteOn(0, start, end);
      }

      this.playing = true;
      this.paused = false;
      this.time_started = new Date().valueOf();
    },
    stop: function stop() {
      if (this.playing && this.source) {
        if (typeof this.source.stop === "function") {
          this.source.stop(0);
        } else {
          this.source.noteOff(0);
        }
      }

      this.clear();
    },
    pause: function pause() {
      if (this.paused) {
        this.play();
        return;
      }

      if (!this.playing) {
        return;
      }

      this.source && this.source.stop(0);
      this.paused = true;
    },
    ended: function ended() {
      this.playing = false;
      this.time_ended = new Date().valueOf();
      this.time_played = (this.time_ended - this.time_started) / 1000;
      this.time_offset += this.time_played;

      if (this.time_offset >= this.end || this.end - this.time_offset < 0.015) {
        this._ended();

        this.clear();

        if (this.loop) {
          this.loop--;
          this.play();
        }
      }
    },
    _ended: function _ended() {
      var config = {
        name: this.name,
        alias: this.alias,
        part: this.sprite_part,
        start: this.start,
        duration: this.end
      };

      if (this.ended_callback && typeof this.ended_callback === "function") {
        this.ended_callback.call(this.scope, config);
      }
    },
    clear: function clear() {
      this.time_played = 0;
      this.time_offset = 0;
      this.paused = false;
      this.playing = false;
    },
    setVolume: function setVolume(options) {
      this.volume = options.volume;

      if (this.gain) {
        this.gain.gain.value = this.volume;
      }
    }
  };

  if (audio) {
    return;
  }
  /**
   * Fallback for HTML5 audio
   * - for not so modern browsers
   */


  var checkSupport = function checkSupport() {
    var sound = new Audio(),
        can_play_mp3 = sound.canPlayType('audio/mpeg'),
        can_play_ogg = sound.canPlayType('audio/ogg'),
        can_play_aac = sound.canPlayType('audio/mp4; codecs="mp4a.40.2"'),
        item,
        i;

    for (i = 0; i < settings.supported.length; i++) {
      item = settings.supported[i];

      if (!can_play_mp3 && item === "mp3") {
        settings.supported.splice(i, 1);
      }

      if (!can_play_ogg && item === "ogg") {
        settings.supported.splice(i, 1);
      }

      if (!can_play_aac && item === "aac") {
        settings.supported.splice(i, 1);
      }

      if (!can_play_aac && item === "mp4") {
        settings.supported.splice(i, 1);
      }
    }

    sound = null;
  };

  checkSupport();
  Sound.prototype = {
    init: function init(options) {
      if (options) {
        extend(options, this.options);
      }

      this.inited = true;

      if (this.options.preload) {
        this.load();
      }
    },
    destroy: function destroy() {
      var stream;

      for (i in this.streams) {
        stream = this.streams[i];

        if (stream) {
          stream.destroy();
          stream = null;
        }
      }

      this.streams = {};
      this.loaded = false;
      this.inited = false;
    },
    load: function load() {
      var part;
      this.options.preload = true;
      this.options._ready = this.ready;
      this.options._scope = this;

      if (this.options.sprite) {
        for (i in this.options.sprite) {
          part = this.options.sprite[i];
          this.options.start = part[0];
          this.options.end = part[1];
          this.streams[i] = new Stream(this.options, i);
        }
      } else {
        this.streams[0] = new Stream(this.options);
      }
    },
    ready: function ready(duration) {
      if (this.loaded) {
        return;
      }

      this.loaded = true;
      var config = {
        name: this.options.name,
        alias: this.options.alias,
        ext: this.options.supported[this.ext],
        duration: duration
      };

      if (this.options.ready_callback && typeof this.options.ready_callback === "function") {
        this.options.ready_callback.call(this.options.scope, config);
      }

      if (this.autoplay) {
        this.autoplay = false;
        this.play();
      }
    },
    play: function play(options) {
      if (!this.inited) {
        return;
      }

      delete this.options.part;

      if (options) {
        extend(options, this.options);
      }

      console.log(1);

      if (!this.loaded) {
        if (!this.options.preload) {
          this.autoplay = true;
          this.load();
        } else {
          this.autoplay = true;
        }

        return;
      }

      if (this.options.sprite) {
        if (this.options.part) {
          this.streams[this.options.part].play(this.options);
        } else {
          for (i in this.options.sprite) {
            this.streams[i].play(this.options);
          }
        }
      } else {
        this.streams[0].play(this.options);
      }
    },
    stop: function stop(options) {
      if (!this.inited) {
        return;
      }

      if (this.options.sprite) {
        if (options) {
          this.streams[options.part].stop();
        } else {
          for (i in this.options.sprite) {
            this.streams[i].stop();
          }
        }
      } else {
        this.streams[0].stop();
      }
    },
    pause: function pause(options) {
      if (!this.inited) {
        return;
      }

      if (this.options.sprite) {
        if (options) {
          this.streams[options.part].pause();
        } else {
          for (i in this.options.sprite) {
            this.streams[i].pause();
          }
        }
      } else {
        this.streams[0].pause();
      }
    },
    volume: function volume(options) {
      var stream;

      if (options) {
        extend(options, this.options);
      } else {
        return;
      }

      if (this.options.sprite) {
        if (this.options.part) {
          stream = this.streams[this.options.part];
          stream && stream.setVolume(this.options);
        } else {
          for (i in this.options.sprite) {
            stream = this.streams[i];
            stream && stream.setVolume(this.options);
          }
        }
      } else {
        stream = this.streams[0];
        stream && stream.setVolume(this.options);
      }
    }
  };

  Stream = function Stream(options, sprite_part) {
    this.name = options.name;
    this.alias = options.alias;
    this.sprite_part = sprite_part;
    this.multiplay = options.multiplay;
    this.volume = options.volume;
    this.preload = options.preload;
    this.path = settings.path;
    this.start = options.start || 0;
    this.end = options.end || 0;
    this.scope = options.scope;
    this.ended_callback = options.ended_callback;
    this._scope = options._scope;
    this._ready = options._ready;
    this.setLoop(options);
    this.sound = null;
    this.url = null;
    this.loaded = false;
    this.start_time = 0;
    this.paused_time = 0;
    this.played_time = 0;
    this.init();
  };

  Stream.prototype = {
    init: function init() {
      this.sound = new Audio();
      this.sound.volume = this.volume;
      this.createUrl();
      this.sound.addEventListener("ended", this.ended.bind(this), false);
      this.sound.addEventListener("canplaythrough", this.can_play_through.bind(this), false);
      this.sound.addEventListener("timeupdate", this._update.bind(this), false);
      this.load();
    },
    destroy: function destroy() {
      this.stop();
      this.sound.removeEventListener("ended", this.ended.bind(this), false);
      this.sound.removeEventListener("canplaythrough", this.can_play_through.bind(this), false);
      this.sound.removeEventListener("timeupdate", this._update.bind(this), false);
      this.sound = null;
      this.loaded = false;
    },
    createUrl: function createUrl() {
      var rand = new Date().valueOf();
      this.url = this.path + encodeURIComponent(this.name) + "." + settings.supported[0] + "?" + rand;
    },
    can_play_through: function can_play_through() {
      if (this.preload) {
        this.ready();
      }
    },
    load: function load() {
      this.sound.src = this.url;
      this.sound.preload = this.preload ? "auto" : "none";

      if (this.preload) {
        this.sound.load();
      }
    },
    setLoop: function setLoop(options) {
      if (options.loop === true) {
        this.loop = 9999999;
      } else if (typeof options.loop === "number") {
        this.loop = +options.loop - 1;
      } else {
        this.loop = false;
      }
    },
    update: function update(options) {
      this.setLoop(options);

      if ("volume" in options) {
        this.volume = options.volume;
      }
    },
    ready: function ready() {
      if (this.loaded || !this.sound) {
        return;
      }

      this.loaded = true;

      this._ready.call(this._scope, this.sound.duration);

      if (!this.end) {
        this.end = this.sound.duration;
      }
    },
    play: function play(options) {
      if (options) {
        this.update(options);
      }

      if (!this.multiplay && this.playing) {
        return;
      }

      this._play();
    },
    _play: function _play() {
      if (this.paused) {
        this.paused = false;
      } else {
        try {
          this.sound.currentTime = this.start;
        } catch (e) {}
      }

      this.playing = true;
      this.start_time = new Date().valueOf();
      this.sound.volume = this.volume;
      this.sound.play();
    },
    stop: function stop() {
      if (!this.playing) {
        return;
      }

      this.playing = false;
      this.paused = false;
      this.sound.pause();
      this.clear();

      try {
        this.sound.currentTime = this.start;
      } catch (e) {}
    },
    pause: function pause() {
      if (this.paused) {
        this._play();
      } else {
        this.playing = false;
        this.paused = true;
        this.sound.pause();
        this.paused_time = new Date().valueOf();
        this.played_time += this.paused_time - this.start_time;
      }
    },
    _update: function _update() {
      if (!this.start_time) {
        return;
      }

      var current_time = new Date().valueOf(),
          played_time = current_time - this.start_time,
          played = (this.played_time + played_time) / 1000;

      if (played >= this.end) {
        if (this.playing) {
          this.stop();

          this._ended();
        }
      }
    },
    ended: function ended() {
      if (this.playing) {
        this.stop();

        this._ended();
      }
    },
    _ended: function _ended() {
      this.playing = false;
      var config = {
        name: this.name,
        alias: this.alias,
        part: this.sprite_part,
        start: this.start,
        duration: this.end
      };

      if (this.ended_callback && typeof this.ended_callback === "function") {
        this.ended_callback.call(this.scope, config);
      }

      if (this.loop) {
        setTimeout(this.looper.bind(this), 15);
      }
    },
    looper: function looper() {
      this.loop--;
      this.play();
    },
    clear: function clear() {
      this.start_time = 0;
      this.played_time = 0;
      this.paused_time = 0;
    },
    setVolume: function setVolume(options) {
      this.volume = options.volume;

      if (this.sound) {
        this.sound.volume = this.volume;
      }
    }
  };
})(window, navigator, window.jQuery || window.$);

/***/ }),

/***/ "./src/Mouse.js":
/*!**********************!*\
  !*** ./src/Mouse.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Mouse; });
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var Mouse =
/*#__PURE__*/
function () {
  function Mouse() {
    _classCallCheck(this, Mouse);
  }

  _createClass(Mouse, null, [{
    key: "mouseover",
    value: function mouseover(d, linkData, linkLine, nodeCircle, nodeText) {
      // console.log('mouseover');
      var nodeIndex = d.index;

      for (var i = 0, l = linkData.length; l > i; i++) {
        if (linkData[i].source.index === nodeIndex || linkData[i].target.index === nodeIndex) {
          var lineIndex = i;
          var nodeSource = linkData[lineIndex].source.index;
          var nodeTarget = linkData[lineIndex].target.index; // line

          var selectLine = linkLine['_groups'][0][lineIndex];
          selectLine.setAttribute('class', 'lineColor'); // node

          nodeCircle['_groups'][0][nodeSource].setAttribute("class", "nodeColor");
          nodeCircle['_groups'][0][nodeTarget].setAttribute("class", "nodeColor"); // text

          nodeText['_groups'][0][nodeSource].setAttribute("class", "linkedNodeText");
          nodeText['_groups'][0][nodeTarget].setAttribute("class", "linkedNodeText");
        }
      } // selectNode


      nodeCircle['_groups'][0][nodeIndex].setAttribute("class", "nodeColor"); // selectNodeText

      nodeText['_groups'][0][nodeIndex].setAttribute("class", "linkedNodeText");
    }
  }, {
    key: "mouseout",
    value: function mouseout(d, linkData, linkLine, nodeCircle, nodeText) {
      // console.log('mouseout');
      var nodeIndex = d.index;

      for (var i = 0, l = linkData.length; l > i; i++) {
        if (linkData[i].source.index === nodeIndex || linkData[i].target.index === nodeIndex) {
          var lineIndex = i;
          var nodeSource = linkData[lineIndex].source.index;
          var nodeTarget = linkData[lineIndex].target.index; // line

          var selectLine = linkLine['_groups'][0][lineIndex];
          selectLine.setAttribute('class', 'lineColorDefault'); // node

          nodeCircle['_groups'][0][nodeSource].setAttribute("class", "nodeColorDefault");
          nodeCircle['_groups'][0][nodeTarget].setAttribute("class", "nodeColorDefault"); // text

          nodeText['_groups'][0][nodeSource].setAttribute("class", "textSizeDefault");
          nodeText['_groups'][0][nodeTarget].setAttribute("class", "textSizeDefault");
        }
      } // selectNode


      nodeCircle['_groups'][0][nodeIndex].setAttribute("class", "nodeColorDefault"); // selectNodeText

      nodeText['_groups'][0][nodeIndex].setAttribute("class", "textSizeDefault");
    }
  }, {
    key: "mousedown",
    value: function mousedown(d, linkData, linkLine, nodeCircle, nodeText) {
      // console.log('mousedown');
      // at first, make all node & line fade
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](nodeCircle)['_groups'][0].attr("class", "nodeColorFade");
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](linkLine)['_groups'][0].attr("class", "lineColorFade");
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](nodeText)['_groups'][0].attr("class", "nodeTextFade");
      var nodeIndex = d.index;

      for (var i = 0, l = linkData.length; l > i; i++) {
        if (linkData[i].source.index === nodeIndex || linkData[i].target.index === nodeIndex) {
          var lineIndex = i;
          var nodeSource = linkData[lineIndex].source.index;
          var nodeTarget = linkData[lineIndex].target.index; // line

          var selectLine = linkLine['_groups'][0][lineIndex];
          selectLine.setAttribute('class', 'lineColor'); // node

          nodeCircle['_groups'][0][nodeSource].setAttribute("class", "nodeColor");
          nodeCircle['_groups'][0][nodeTarget].setAttribute("class", "nodeColor"); // text

          nodeText['_groups'][0][nodeSource].setAttribute("class", "linkedNodeText");
          nodeText['_groups'][0][nodeTarget].setAttribute("class", "linkedNodeText");
        }
      } // selectNode


      nodeCircle['_groups'][0][nodeIndex].setAttribute("class", "nodeColor"); // selectNodeText

      nodeText['_groups'][0][nodeIndex].setAttribute("class", "linkedNodeText");
    }
  }, {
    key: "touchStart",
    value: function touchStart(d, linkData, linkLine, nodeCircle, nodeText) {
      // at first, make all node & line fade
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](nodeCircle)['_groups'][0].attr("class", "nodeColorFadeSp");
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](linkLine)['_groups'][0].attr("class", "lineColorFade");
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](nodeText)['_groups'][0].attr("class", "nodeTextFade");
      var nodeIndex = d.index;

      for (var i = 0, l = linkData.length; l > i; i++) {
        if (linkData[i].source.index === nodeIndex || linkData[i].target.index === nodeIndex) {
          var lineIndex = i;
          var nodeSource = linkData[lineIndex].source.index;
          var nodeTarget = linkData[lineIndex].target.index; // line

          var selectLine = linkLine['_groups'][0][lineIndex];
          selectLine.setAttribute('class', 'lineColor'); // node

          nodeCircle['_groups'][0][nodeSource].setAttribute("class", "nodeColor");
          nodeCircle['_groups'][0][nodeTarget].setAttribute("class", "nodeColor"); // text

          nodeText['_groups'][0][nodeSource].setAttribute("class", "linkedNodeText");
          nodeText['_groups'][0][nodeTarget].setAttribute("class", "linkedNodeText");
        }
      } // selectNode


      nodeCircle['_groups'][0][nodeIndex].setAttribute("class", "nodeColor"); // selectNodeText

      nodeText['_groups'][0][nodeIndex].setAttribute("class", "linkedNodeText");
    }
  }, {
    key: "mouseup",
    value: function mouseup(d, linkData, linkLine, nodeCircle, nodeText) {
      // console.log('mouseup');
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](nodeCircle)['_groups'][0].attr("class", "nodeReturnFade");
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](linkLine)['_groups'][0].attr("class", "lineReturnFade");
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](nodeText)['_groups'][0].attr("class", "nodeTextReturnFade");
      var nodeIndex = d.index;

      for (var i = 0, l = linkData.length; l > i; i++) {
        if (linkData[i].source.index === nodeIndex || linkData[i].target.index === nodeIndex) {
          var lineIndex = i;
          var nodeSource = linkData[lineIndex].source.index;
          var nodeTarget = linkData[lineIndex].target.index; // line

          var selectLine = linkLine['_groups'][0][lineIndex];
          selectLine.setAttribute('class', 'lineColor'); // node

          nodeCircle['_groups'][0][nodeSource].setAttribute("class", "nodeColor");
          nodeCircle['_groups'][0][nodeTarget].setAttribute("class", "nodeColor");
          nodeText['_groups'][0][nodeSource].setAttribute("class", "linkedNodeText");
          nodeText['_groups'][0][nodeTarget].setAttribute("class", "linkedNodeText");
        }
      } // selectNode


      nodeCircle['_groups'][0][nodeIndex].setAttribute("class", "nodeColor"); // selectNodeText

      nodeText['_groups'][0][nodeIndex].setAttribute("class", "linkedNodeText");
    }
  }, {
    key: "reset",
    value: function reset(linkData, linkLine, nodeCircle, nodeText) {
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](nodeCircle)['_groups'][0].attr("class", "nodeReturnFade");
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](linkLine)['_groups'][0].attr("class", "lineReturnFade");
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](nodeText)['_groups'][0].attr("class", "nodeTextReturnFade");
      console.log('reset');
    }
  }, {
    key: "cursor",
    value: function cursor(type, body, circle) {
      var grabTypeC;
      var grabTypeB;

      if (type === 'grabbing') {
        grabTypeC = "grabbing";
        grabTypeB = "grabbing";
      } else {
        grabTypeC = "grab";
        grabTypeB = "auto";
      } //grabbing


      circle.style("cursor", "-webkit-" + grabTypeC);
      circle.style("cursor", "-moz-" + grabTypeC);
      circle.style("cursor", grabTypeC);
      body.style("cursor", "-webkit-" + grabTypeB);
      body.style("cursor", "-moz-" + grabTypeB);
      body.style("cursor", grabTypeB);
    }
  }]);

  return Mouse;
}();



/***/ }),

/***/ "./src/Network.js":
/*!************************!*\
  !*** ./src/Network.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Network; });
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
/* harmony import */ var ion_sound__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ion-sound */ "./node_modules/ion-sound/js/ion.sound.js");
/* harmony import */ var ion_sound__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ion_sound__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Mouse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Mouse */ "./src/Mouse.js");
/* harmony import */ var _Update__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Update */ "./src/Update.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }






var Network =
/*#__PURE__*/
function () {
  function Network(flavorData, umamiData, isSp, svgID) {
    _classCallCheck(this, Network);

    this.flavorData = flavorData;
    this.umamiData = umamiData;
    this.linkData = this.flavorData.links;
    this.nodeData = this.flavorData.nodes;
    this.width = 1000;
    this.height = 650;
    this.centerX = this.width / 2 + 30;
    this.centerY = this.height / 2 + 15;
    this.body = d3__WEBPACK_IMPORTED_MODULE_0__["select"]("body");
    this.svg = d3__WEBPACK_IMPORTED_MODULE_0__["select"](svgID);
    this.scaleRatio = 1.0;
    this.svg.attr("style", "outline: 1px solid #ff8e1e;").attr("width", this.width / this.scaleRatio).attr("height", this.height / this.scaleRatio).attr("viewBox", "0 0 1000 650");
    this.link = '';
    this.node = '';
    this.label = '';
    this.simulation = d3__WEBPACK_IMPORTED_MODULE_0__["forceSimulation"]();
    this.legend = '';
    this.legendName = ["plant", "fruit", "meat", "vegetable", "cereal/crop", "alcoholic beverage", "herb", "dairy", "nut/seed/pulse", "spice", "fish/seafood", "plant derivative", "flower", "animal product"];
    this.legendColor = ["#0fff0f", "#fc783f", "#ff4c4c", "#3cb37a", "#e8c59c", "#e73552", "#ad5d88", "#db830d", "#965d21", "#00afcc", "#434da2", "#b3e500", "#ff00ae", "#ff7fbf"];
    this.wallMargin = 7.5;
    this.mouseDown = 0;
    this.setIon();
    this.isSp = isSp;
    this.zoomGroup = this.svg.append("g");
    this.zoom_handler = d3__WEBPACK_IMPORTED_MODULE_0__["zoom"]().scaleExtent([0.1, 40]).on("zoom", this.zoom_actions.bind(this)); //zoom initialises

    this.initialTransform = d3__WEBPACK_IMPORTED_MODULE_0__["zoomIdentity"].translate(this.width / 2, this.height / 2).scale(0.25);
    this.svg.call(this.zoom_handler); // this.svg.call(this.zoom_handler.transform, this.initialTransform);
  }

  _createClass(Network, [{
    key: "zoom_actions",
    value: function zoom_actions() {
      this.zoomGroup.attr("transform", d3__WEBPACK_IMPORTED_MODULE_0__["event"].transform);
      console.log(d3__WEBPACK_IMPORTED_MODULE_0__["event"].transform);
    }
  }, {
    key: "setIon",
    value: function setIon() {
      ion.sound({
        sounds: [{
          name: "opening"
        }, {
          name: "mouseover"
        }, {
          name: "grabNode"
        }, {
          name: "releaseNode"
        }, {
          name: "legend"
        }],
        // main config
        path: "src/data/sound/",
        preload: true,
        multiplay: true,
        volume: 0.5
      });
    }
  }, {
    key: "color",
    value: function color(n) {
      return this.legendColor[n];
    }
  }, {
    key: "setLegend",
    value: function setLegend() {
      var _this = this;

      this.legend = this.svg.selectAll('.legends').data(this.legendName).enter().append('g').attr("class", "legends").attr("transform", function (d, i) {
        return "translate(20," + (i + 1) * 20 + ")";
      }).attr("width", 200).attr("height", 20); // $(".legends").css({"cursor": ["pointer"]});

      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](".legends").style("cursor", "pointer");
      this.legend.append('circle') // 凡例の色付け四角
      .attr("cx", 5).attr("cy", 5).attr("r", 9).attr("opacity", 0.6).attr("class", "legendCircle").attr("fill", function (d, i) {
        return _this.color(i);
      });
      this.legend.append('text') // 凡例の文言
      .attr("x", 20).attr("y", 10).attr("class", "legendText").text(function (d) {
        return d;
      }) // .attr("class", "textselected")
      .style("text-anchor", "start").style("font-size", 15);
    }
  }, {
    key: "render",
    value: function render() {
      this.setLink();
      this.setNode();
      this.setLabel();
      this.setSimulation();
    }
  }, {
    key: "setLink",
    value: function setLink() {
      var _this2 = this;

      this.link = this.zoomGroup.append("g").selectAll("line").data(this.linkData).enter().append("line").attr("opacity", "0.5").attr("stroke-width", function (d) {
        return Math.sqrt(d.weight) * 0.1 + d.weight * 0.015;
      }).attr("stroke", function (d) {
        return _this2.color(d.group_id_s);
      });
    }
  }, {
    key: "setNode",
    value: function setNode() {
      var _this3 = this;

      this.node = this.zoomGroup.append("g").selectAll("circle").filter(function () {
        return !this.classList.contains('legendCircle');
      }).data(this.nodeData).enter().append("circle").attr("opacity", "0.6").attr("r", function (d) {
        return Math.sqrt(d.size) * 4 + 2.5;
      }).attr("fill", function (d) {
        return _this3.color(d.group_id);
      }).attr("stroke", "#fffcf9").call(d3__WEBPACK_IMPORTED_MODULE_0__["drag"]().on("start", this.dragstarted.bind(this)).on("drag", this.dragging.bind(this)).on("end", this.dragended.bind(this)));
    }
  }, {
    key: "setLabel",
    value: function setLabel() {
      this.label = this.zoomGroup.append("g").selectAll("text").filter(function () {
        return !this.classList.contains('legendText');
      }).filter(function () {
        return !this.classList.contains('node_link');
      }).data(this.nodeData).enter().append("text").text(function (d) {
        return d.name;
      });
      this.label.attr("font-size", ".7em").attr("font-weight", "300").attr("class", "nonDrag").attr("fill", "#352622").attr({
        "font-family": ["Futura", "Nunito", "Helvetica Neue", "Arial", "sans-serif"]
      });
    }
  }, {
    key: "setSimulation",
    value: function setSimulation() {
      this.simulation.force("link", d3__WEBPACK_IMPORTED_MODULE_0__["forceLink"]().distance(80) //     .distance(function(d) { return  Math.sqrt(d.weight) * 0.1 + d.weight * 0.5; })
      .strength(0.8).iterations(1.0).id(function (d) {
        return d.name;
      })).force("collide", d3__WEBPACK_IMPORTED_MODULE_0__["forceCollide"]().radius(function (d) {
        return Math.sqrt(d.size) * 4 + 2.5;
      }).strength(0.7).iterations(1.0)).force("charge", d3__WEBPACK_IMPORTED_MODULE_0__["forceManyBody"]().strength(-300)).force("center", d3__WEBPACK_IMPORTED_MODULE_0__["forceCenter"](this.centerX, this.centerY)).force("x", d3__WEBPACK_IMPORTED_MODULE_0__["forceX"]().strength(0.25).x(this.centerX)).force("y", d3__WEBPACK_IMPORTED_MODULE_0__["forceY"]().strength(0.35).y(this.centerY));
      this.simulation.nodes(this.nodeData).on("tick", this.ticked.bind(this));
      this.simulation.force("link").links(this.linkData);
    } ////////////////////////////////////////////////////////////////////////////////////////////////

  }, {
    key: "ticked",
    value: function ticked() {
      var _this4 = this;

      this.link.attr("x1", function (d) {
        return Math.max(_this4.wallMargin, Math.min(_this4.width - _this4.wallMargin, d.source.x));
      }).attr("y1", function (d) {
        return Math.max(_this4.wallMargin, Math.min(_this4.height - _this4.wallMargin, d.source.y));
      }).attr("x2", function (d) {
        return Math.max(_this4.wallMargin, Math.min(_this4.width - _this4.wallMargin, d.target.x));
      }).attr("y2", function (d) {
        return Math.max(_this4.wallMargin, Math.min(_this4.height - _this4.wallMargin, d.target.y));
      });
      this.node.attr("cx", function (d) {
        return Math.max(_this4.wallMargin, Math.min(_this4.width - _this4.wallMargin, d.x));
      }).attr("cy", function (d) {
        return Math.max(_this4.wallMargin, Math.min(_this4.height - _this4.wallMargin, d.y));
      });
      this.label.attr("x", function (d) {
        return Math.max(_this4.wallMargin, Math.min(_this4.width - _this4.wallMargin, d.x));
      }).attr("y", function (d) {
        return Math.max(_this4.wallMargin, Math.min(_this4.height - _this4.wallMargin, d.y));
      });
    } // drag event

  }, {
    key: "dragstarted",
    value: function dragstarted(d) {
      if (!d3__WEBPACK_IMPORTED_MODULE_0__["event"].active) this.simulation.alphaTarget(0.3).restart();
      d.fx = d.x;
      d.fy = d.y;
      _Mouse__WEBPACK_IMPORTED_MODULE_2__["default"].mousedown(d, this.linkData, this.link, this.node, this.label);
      _Mouse__WEBPACK_IMPORTED_MODULE_2__["default"].cursor('grabbing', this.body, this.node);
      ion.sound.play("grabNode", {
        volume: 0.2 // turn down

      });
      this.mouseDown = 1;
    }
  }, {
    key: "dragging",
    value: function dragging(d) {
      d.fx = d3__WEBPACK_IMPORTED_MODULE_0__["event"].x;
      d.fy = d3__WEBPACK_IMPORTED_MODULE_0__["event"].y;
    }
  }, {
    key: "dragended",
    value: function dragended(d) {
      if (!d3__WEBPACK_IMPORTED_MODULE_0__["event"].active) this.simulation.alphaTarget(0);
      d.fx = null;
      d.fy = null;
      _Mouse__WEBPACK_IMPORTED_MODULE_2__["default"].mouseup(d, this.linkData, this.link, this.node, this.label);
      _Mouse__WEBPACK_IMPORTED_MODULE_2__["default"].cursor('grab', this.body, this.node);
      ion.sound.play("releaseNode", {
        volume: 0.5
      });
      this.mouseDown = 0;
    } ////////////////////////////////////////////////////////////////////////////////////////////////

  }, {
    key: "update",
    value: function update(selectedType) {
      var _this5 = this;

      var prevNodePosition = [];

      if (selectedType === 'Flavor') {
        _Update__WEBPACK_IMPORTED_MODULE_3__["default"].flavorSimulation(this.simulation, this.centerX, this.centerY);
        this.nodeData = this.flavorData.nodes;
        this.linkData = this.flavorData.links;
      } else if (selectedType === 'Umami') {
        _Update__WEBPACK_IMPORTED_MODULE_3__["default"].umamiSimulation(this.simulation, this.centerX, this.centerY);
        this.nodeData = this.umamiData.nodes;
        this.linkData = this.umamiData.links;
      }

      this.simulation.stop();
      var resDeleteObj;
      var resAddObj;
      new Promise(function (resolve) {
        resDeleteObj = _Update__WEBPACK_IMPORTED_MODULE_3__["default"].deleteObj(_this5.link, _this5.node, _this5.label, _this5.linkData, _this5.nodeData);
        setTimeout(function () {
          resolve(_this5.link = resDeleteObj.link, _this5.node = resDeleteObj.node, _this5.label = resDeleteObj.label, console.log(1));
        }, 500);
      }).then(function () {
        resAddObj = _Update__WEBPACK_IMPORTED_MODULE_3__["default"].addObj(_this5.link, _this5.node, _this5.label, _this5.nodeData, _this5.linkData, _this5.legendColor, _this5.dragstarted, _this5.dragging, _this5.dragended);
        return new Promise(function (resolve) {
          setTimeout(function () {
            resolve(_this5.link = resAddObj.link, _this5.node = resAddObj.node, _this5.label = resAddObj.label, console.log(2));
          }, 500);
        });
      }).then(function () {
        prevNodePosition = _Update__WEBPACK_IMPORTED_MODULE_3__["default"].storePreviousNodePosition(_this5.node, _this5.nodeData, prevNodePosition);
        _Update__WEBPACK_IMPORTED_MODULE_3__["default"].simulation(_this5.linkData, _this5.nodeData, _this5.simulation, _this5.ticked.bind(_this5));
        console.log(3);
      }).then(function () {
        _this5.simulation.tick(30);

        var t = 3000;
        return new Promise(function (resolve) {
          setTimeout(function () {
            resolve(_Update__WEBPACK_IMPORTED_MODULE_3__["default"].transitNodePosition(_this5.node, _this5.label, _this5.nodeData, prevNodePosition, t), _Update__WEBPACK_IMPORTED_MODULE_3__["default"].transitLinkPosition(_this5.link, _this5.linkData, prevNodePosition, t), console.log(4));
          }, 50);
        });
      });
    }
  }, {
    key: "setMouseAction",
    value: function setMouseAction() {
      var _this6 = this;

      if (!this.isSp) {
        this.node.on("mouseover", function (d) {
          _Mouse__WEBPACK_IMPORTED_MODULE_2__["default"].mouseover(d, _this6.linkData, _this6.link, _this6.node, _this6.label);

          if (_this6.mouseDown === 0) {
            ion.sound.play("mouseover", {
              volume: 0.1 // turn down

            });
          }
        });
        this.node.on("mouseout", function (d) {
          _Mouse__WEBPACK_IMPORTED_MODULE_2__["default"].mouseout(d, _this6.linkData, _this6.link, _this6.node, _this6.label);
        });
        d3__WEBPACK_IMPORTED_MODULE_0__["select"]("body").on("mouseup", function () {
          _Mouse__WEBPACK_IMPORTED_MODULE_2__["default"].reset(_this6.linkData, _this6.link, _this6.node, _this6.label);
          _Mouse__WEBPACK_IMPORTED_MODULE_2__["default"].cursor('grab', _this6.body, _this6.node);
        });
      } /////////////////////////////////////////////////////////////
      // for SmartPhone
      // if (this.isSp) {
      //   let touchColored = 0;
      //   let touchmove = 0;
      //   this.svg.on("touchmove", () => {
      //     touchmove = 1
      //   });
      //
      //   this.node.on("touchstart", (d) => {
      //     Mouse.touchStart(d, this.linkData, this.link, this.node, this.label);
      //   });
      //
      //   node.on("touchend", () => {
      //     touchColored = 0;
      //   });
      //
      //   this.svg.on("touchstart", () => {
      //     touchColored = 1;
      //   });
      //
      //   this.svg.on("touchend", () => {
      //     if (touchmove === 0) {
      //       if (touchColored === 1) {
      //         this.node.attr("class", "nodeReturnFade");
      //         this.link.attr("class", "lineReturnFade");
      //         this.label.attr("class", "nodeTextReturnFade");
      //       }
      //     }
      //     touchmove = 0
      //   });
      // }

    }
    /*
    /////////////////////////////////////////////////////////////
     Legend.putId2Legend(cell, legendName);
    // ノードを更新する場合は再度クラスを付与する必要あり
    Legend.putClass2Node(nodes, circle);
      let legendFilter = d3.selectAll(".cell");
    if (!isSp) {
      legendFilter.on("mouseover", function () {
        const legendId = this.id.slice(9);
        Legend.mouseoverFilter(legendId, circle, cell, this.color);
         ion.sound.play("mouseover", {
          volume: 0.1 // turn down
        });
      });
       legendFilter.on("click", function () {
        const legendId = this.id.slice(9);
        Legend.mouseoverClick(legendId, circle, cell, this.color);
         ion.sound.play("legend");
      });
       // legend filter(mouse out)
      legendFilter.on("mouseout", function () {
        const legendId = this.id.slice(9);
        Legend.mouseoutFilter(legendId, circle, cell);
      });
    }
    */

  }]);

  return Network;
}();



/***/ }),

/***/ "./src/Update.js":
/*!***********************!*\
  !*** ./src/Update.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Update; });
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var Update =
/*#__PURE__*/
function () {
  function Update() {
    _classCallCheck(this, Update);
  }

  _createClass(Update, null, [{
    key: "deleteObj",
    value: function deleteObj(linkLine, nodeCircle, nodeText, linkData, nodeData) {
      return {
        link: Update.deleteLinkData(linkLine, linkData),
        node: Update.deleteNodeData(nodeCircle, nodeData),
        label: Update.deleteLabelData(nodeText, nodeData)
      };
    }
  }, {
    key: "addObj",
    value: function addObj(linkLine, nodeCircle, nodeText, nodeData, linkData, color, dragstarted, dragging, dragended) {
      return {
        link: Update.addLinkData(linkLine, linkData, color),
        node: Update.addNodeData(nodeCircle, nodeData, color, dragstarted, dragging, dragended),
        label: Update.addLabelData(nodeText)
      };
    }
  }, {
    key: "deleteLinkData",
    value: function deleteLinkData(linkLine, linkData) {
      linkLine = linkLine.data(linkData, function (d) {
        return d.name;
      });
      linkLine.exit() // .transition()
      // .duration(1000)
      // .ease(d3.easeLinear)
      // .attr("opacity", 0.0)
      .remove();
      return linkLine;
    }
  }, {
    key: "addLinkData",
    value: function addLinkData(linkLine, linkData, color) {
      var linkLineEnter = linkLine.enter().append("line") // .attr("opacity", 0.0)
      .attr("stroke-width", function (d) {
        return Math.sqrt(d.weight) * 0.1 + d.weight * 0.015;
      }).attr("stroke", function (d) {
        return color[d.group_id_s];
      });
      linkLine = linkLineEnter.merge(linkLine);
      linkLine // .transition()
      // .duration(1000)
      // .ease(d3.easeLinear)
      .attr("opacity", 0.5); // change line display order to back of node

      for (var i = linkData.length - 1; 0 <= i; i--) {
        var linkSVG = linkLine['_groups'][0][i];
        var firstSVG = linkSVG.parentNode.firstChild;

        if (firstSVG) {
          linkSVG.parentNode.insertBefore(linkSVG, firstSVG);
        }
      }

      return linkLine;
    }
  }, {
    key: "deleteNodeData",
    value: function deleteNodeData(nodeCircle, nodeData) {
      nodeCircle = nodeCircle.data(nodeData, function (d) {
        return d.name;
      });
      nodeCircle.exit() // .transition()
      // .duration(1000)
      // .ease(d3.easeLinear)
      // .attr("opacity", 0.0)
      .remove();
      return nodeCircle;
    }
  }, {
    key: "addNodeData",
    value: function addNodeData(nodeCircle, nodeData, color, dragstarted, dragging, dragended) {
      nodeCircle = nodeCircle.enter().append("circle") // .attr("opacity", "0.0")
      .attr("r", function (d) {
        return Math.sqrt(d.size) * 4 + 2.5;
      }).attr("fill", function (d) {
        return color[d.group_id];
      }).attr("stroke", "#fffcf9").call(d3__WEBPACK_IMPORTED_MODULE_0__["drag"]().on("start", dragstarted).on("drag", dragging).on("end", dragended)).merge(nodeCircle);
      nodeCircle // .transition()
      // .duration(1000)
      // .ease(d3.easeLinear)
      .attr("opacity", 0.6);
      return nodeCircle;
    }
  }, {
    key: "deleteLabelData",
    value: function deleteLabelData(nodeText, nodeData) {
      nodeText = nodeText.data(nodeData, function (d) {
        return d.name;
      });
      nodeText.exit() // .transition()
      // .duration(1000)
      // .ease(d3.easeLinear)
      // .attr("opacity", 0.0)
      .remove();
      return nodeText;
    }
  }, {
    key: "addLabelData",
    value: function addLabelData(nodeText) {
      nodeText = nodeText.enter().append("text").merge(nodeText).text(function (d) {
        return d.name;
      });
      nodeText.attr("opacity", 1.0).attr("font-size", ".7em").attr("font-weight", "300").attr("class", "nonDrag").attr("fill", "#352622").attr({
        "font-family": ["Futura", "Nunito", "Helvetica Neue", "Arial", "sans-serif"]
      }); // nodeText.transition()
      //    .duration(1000)
      //    .ease(d3.easeLinear)
      //    .style("opacity", 0.6);

      return nodeText;
    }
  }, {
    key: "storePreviousNodePosition",
    value: function storePreviousNodePosition(nodeCircle, nodeData, prevNodePosition) {
      // get previous node position
      for (var i = 0, l = nodeData.length; l > i; i++) {
        prevNodePosition.push({
          'name': nodeCircle['_groups'][0][i]['__data__']['name'],
          'x': nodeCircle['_groups'][0][i]['cx']['baseVal']['value'],
          'y': nodeCircle['_groups'][0][i]['cy']['baseVal']['value']
        });
      }

      return prevNodePosition;
    }
  }, {
    key: "simulation",
    value: function simulation(linkData, nodeData, _simulation, ticked) {
      _simulation.nodes(nodeData).on("tick", ticked);

      _simulation.force("link").links(linkData);

      _simulation.stop();
    }
  }, {
    key: "transitNodePosition",
    value: function transitNodePosition(nodeCircle, nodeText, nodeData, prevNodePosition, durationTime) {
      var t = d3__WEBPACK_IMPORTED_MODULE_0__["transition"]().duration(durationTime);

      for (var i = 0, l = nodeData.length; l > i; i++) {
        // new node -> new position, existing node -> previous position
        if (prevNodePosition[i]['x'] === 0) {
          prevNodePosition[i]['x'] = nodeCircle['_groups'][0][i]['__data__']['x'];
          prevNodePosition[i]['y'] = nodeCircle['_groups'][0][i]['__data__']['y'];
        } // node


        nodeCircle['_groups'][0][i].setAttribute("cx", prevNodePosition[i]['x']);
        nodeCircle['_groups'][0][i].setAttribute("cy", prevNodePosition[i]['y']); // label

        nodeText['_groups'][0][i].setAttribute("x", prevNodePosition[i]['x']);
        nodeText['_groups'][0][i].setAttribute("y", prevNodePosition[i]['y']);
      }

      nodeCircle.transition(t).attr("cx", function (d) {
        return d.x;
      }).attr("cy", function (d) {
        return d.y;
      });
      nodeText.transition(t).attr("x", function (d) {
        return d.x;
      }).attr("y", function (d) {
        return d.y;
      });
    }
  }, {
    key: "transitLinkPosition",
    value: function transitLinkPosition(linkLine, linkData, prevNodePosition, durationTime) {
      var t = d3__WEBPACK_IMPORTED_MODULE_0__["transition"]().duration(durationTime);
      var nodePositionIndex = {};

      for (var i1 = 0, l1 = prevNodePosition.length; l1 > i1; i1++) {
        nodePositionIndex[prevNodePosition[i1]['name']] = i1;
      }

      for (var i2 = 0, l2 = linkData.length; l2 > i2; i2++) {
        var sourceName = linkLine['_groups'][0][i2]['__data__']['source']['name'];
        var targetName = linkLine['_groups'][0][i2]['__data__']['target']['name'];
        linkLine['_groups'][0][i2].setAttribute("x1", prevNodePosition[nodePositionIndex[sourceName]]['x']);
        linkLine['_groups'][0][i2].setAttribute("y1", prevNodePosition[nodePositionIndex[sourceName]]['y']);
        linkLine['_groups'][0][i2].setAttribute("x2", prevNodePosition[nodePositionIndex[targetName]]['x']);
        linkLine['_groups'][0][i2].setAttribute("y2", prevNodePosition[nodePositionIndex[targetName]]['y']);
      }

      linkLine.transition(t).attr("x1", function (d) {
        return d.source.x;
      }).attr("y1", function (d) {
        return d.source.y;
      }).attr("x2", function (d) {
        return d.target.x;
      }).attr("y2", function (d) {
        return d.target.y;
      });
    }
  }, {
    key: "flavorSimulation",
    value: function flavorSimulation(simulation, centerX, centerY) {
      simulation.force("link", d3__WEBPACK_IMPORTED_MODULE_0__["forceLink"]().distance(80)).force("charge", d3__WEBPACK_IMPORTED_MODULE_0__["forceManyBody"]().strength(-300)).force("x", d3__WEBPACK_IMPORTED_MODULE_0__["forceX"]().strength(0.25).x(centerX)).force("y", d3__WEBPACK_IMPORTED_MODULE_0__["forceY"]().strength(0.35).y(centerY));
    }
  }, {
    key: "umamiSimulation",
    value: function umamiSimulation(simulation, centerX, centerY) {
      simulation.force("link", d3__WEBPACK_IMPORTED_MODULE_0__["forceLink"]().distance(200).id(function (d) {
        return d.name;
      })).force("charge", d3__WEBPACK_IMPORTED_MODULE_0__["forceManyBody"]().strength(-2000)).force("x", d3__WEBPACK_IMPORTED_MODULE_0__["forceX"]().strength(1.5).x(centerX)).force("y", d3__WEBPACK_IMPORTED_MODULE_0__["forceY"]().strength(2.25).y(centerY));
    }
  }]);

  return Update;
}();



/***/ }),

/***/ "./src/data/flavor_data.js":
/*!*********************************!*\
  !*** ./src/data/flavor_data.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var flavorData = {
  "links": [{
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 320,
    "source": "citrus",
    "target": "orange",
    "weight": 51.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 571,
    "source": "mandarin",
    "target": "orange",
    "weight": 57.0
  }, {
    "group_id_s": 0,
    "group_id_t": 1,
    "name": 548,
    "source": "lemon_peel",
    "target": "orange",
    "weight": 8.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 553,
    "source": "lime",
    "target": "orange",
    "weight": 56.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 499,
    "source": "grapefruit",
    "target": "orange",
    "weight": 30.0
  }, {
    "group_id_s": 6,
    "group_id_t": 1,
    "name": 63,
    "source": "basil",
    "target": "orange",
    "weight": 10.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 319,
    "source": "citrus",
    "target": "mandarin",
    "weight": 51.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 317,
    "source": "citrus",
    "target": "lemon",
    "weight": 51.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 318,
    "source": "citrus",
    "target": "lime",
    "weight": 51.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 576,
    "source": "mandarin",
    "target": "tangerine",
    "weight": 53.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 554,
    "source": "lime",
    "target": "tangerine",
    "weight": 53.0
  }, {
    "group_id_s": 0,
    "group_id_t": 1,
    "name": 321,
    "source": "citrus_peel",
    "target": "tangerine",
    "weight": 32.0
  }, {
    "group_id_s": 0,
    "group_id_t": 11,
    "name": 547,
    "source": "lemon_peel",
    "target": "lime_peel_oil",
    "weight": 6.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 17,
    "source": "apple_brandy",
    "target": "red_wine",
    "weight": 17.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 309,
    "source": "cider",
    "target": "red_wine",
    "weight": 52.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 376,
    "source": "cognac",
    "target": "red_wine",
    "weight": 94.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 213,
    "source": "champagne_wine",
    "target": "red_wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 168,
    "source": "brandy",
    "target": "red_wine",
    "weight": 18.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 126,
    "source": "beer",
    "target": "red_wine",
    "weight": 106.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 310,
    "source": "cider",
    "target": "rum",
    "weight": 54.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 377,
    "source": "cognac",
    "target": "rum",
    "weight": 94.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 16,
    "source": "apple_brandy",
    "target": "cider",
    "weight": 15.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 167,
    "source": "brandy",
    "target": "port_wine",
    "weight": 18.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 680,
    "source": "rum",
    "target": "whiskey",
    "weight": 76.0
  }, {
    "group_id_s": 2,
    "group_id_t": 5,
    "name": 82,
    "source": "beef",
    "target": "beer",
    "weight": 102.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 311,
    "source": "cider",
    "target": "sherry",
    "weight": 52.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 378,
    "source": "cognac",
    "target": "sherry",
    "weight": 90.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 169,
    "source": "brandy",
    "target": "sherry",
    "weight": 18.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 671,
    "source": "red_wine",
    "target": "sherry",
    "weight": 138.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 659,
    "source": "port_wine",
    "target": "sherry",
    "weight": 131.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 679,
    "source": "rum",
    "target": "sherry",
    "weight": 87.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 706,
    "source": "white_wine",
    "target": "wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 380,
    "source": "cognac",
    "target": "wine",
    "weight": 82.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 215,
    "source": "champagne_wine",
    "target": "wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 171,
    "source": "brandy",
    "target": "wine",
    "weight": 18.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 130,
    "source": "beer",
    "target": "wine",
    "weight": 86.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 673,
    "source": "red_wine",
    "target": "wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 661,
    "source": "port_wine",
    "target": "wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 694,
    "source": "sherry",
    "target": "wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 191,
    "source": "cabernet_sauvignon_wine",
    "target": "wine",
    "weight": 128.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 637,
    "source": "pineapple",
    "target": "strawberry",
    "weight": 67.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 584,
    "source": "melon",
    "target": "strawberry",
    "weight": 67.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 633,
    "source": "pear",
    "target": "strawberry",
    "weight": 38.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 639,
    "source": "plum",
    "target": "strawberry",
    "weight": 63.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 668,
    "source": "raspberry",
    "target": "strawberry",
    "weight": 89.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 14,
    "source": "apple",
    "target": "strawberry",
    "weight": 114.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 540,
    "source": "kiwi",
    "target": "strawberry",
    "weight": 39.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 621,
    "source": "orange",
    "target": "strawberry",
    "weight": 69.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 607,
    "source": "olive",
    "target": "strawberry",
    "weight": 47.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 19,
    "source": "apricot",
    "target": "strawberry",
    "weight": 70.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 60,
    "source": "banana",
    "target": "strawberry",
    "weight": 69.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 61,
    "source": "bartlett_pear",
    "target": "pear",
    "weight": 49.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 284,
    "source": "chicken",
    "target": "pork",
    "weight": 80.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 21,
    "source": "bacon",
    "target": "beef",
    "weight": 102.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 268,
    "source": "chicken",
    "target": "cured_pork",
    "weight": 83.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 31,
    "source": "bacon",
    "target": "cured_pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 91,
    "source": "beef",
    "target": "cured_pork",
    "weight": 103.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 285,
    "source": "chicken",
    "target": "pork_sausage",
    "weight": 84.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 645,
    "source": "pork",
    "target": "pork_sausage",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 49,
    "source": "bacon",
    "target": "pork_sausage",
    "weight": 119.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 111,
    "source": "beef",
    "target": "pork_sausage",
    "weight": 101.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 403,
    "source": "cured_pork",
    "target": "pork_sausage",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 604,
    "source": "mutton",
    "target": "pork_sausage",
    "weight": 52.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 287,
    "source": "chicken",
    "target": "roasted_beef",
    "weight": 99.0
  }, {
    "group_id_s": 8,
    "group_id_t": 2,
    "name": 629,
    "source": "peanut",
    "target": "roasted_beef",
    "weight": 74.0
  }, {
    "group_id_s": 11,
    "group_id_t": 2,
    "name": 369,
    "source": "coffee",
    "target": "roasted_beef",
    "weight": 105.0
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 609,
    "source": "onion",
    "target": "roasted_beef",
    "weight": 32.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 647,
    "source": "pork",
    "target": "roasted_beef",
    "weight": 97.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 51,
    "source": "bacon",
    "target": "roasted_beef",
    "weight": 102.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 113,
    "source": "beef",
    "target": "roasted_beef",
    "weight": 199.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 404,
    "source": "cured_pork",
    "target": "roasted_beef",
    "weight": 105.0
  }, {
    "group_id_s": 5,
    "group_id_t": 2,
    "name": 127,
    "source": "beer",
    "target": "roasted_beef",
    "weight": 106.0
  }, {
    "group_id_s": 7,
    "group_id_t": 2,
    "name": 587,
    "source": "milk",
    "target": "roasted_beef",
    "weight": 77.0
  }, {
    "group_id_s": 8,
    "group_id_t": 11,
    "name": 628,
    "source": "peanut",
    "target": "peanut_butter",
    "weight": 97.0
  }, {
    "group_id_s": 11,
    "group_id_t": 11,
    "name": 366,
    "source": "coffee",
    "target": "peanut_butter",
    "weight": 86.0
  }, {
    "group_id_s": 8,
    "group_id_t": 8,
    "name": 630,
    "source": "peanut",
    "target": "roasted_peanut",
    "weight": 97.0
  }, {
    "group_id_s": 11,
    "group_id_t": 8,
    "name": 370,
    "source": "coffee",
    "target": "roasted_peanut",
    "weight": 86.0
  }, {
    "group_id_s": 11,
    "group_id_t": 8,
    "name": 631,
    "source": "peanut_butter",
    "target": "roasted_peanut",
    "weight": 144.0
  }, {
    "group_id_s": 11,
    "group_id_t": 11,
    "name": 374,
    "source": "coffee",
    "target": "tea",
    "weight": 86.0
  }, {
    "group_id_s": 11,
    "group_id_t": 11,
    "name": 363,
    "source": "coffee",
    "target": "green_tea",
    "weight": 93.0
  }, {
    "group_id_s": 11,
    "group_id_t": 4,
    "name": 367,
    "source": "coffee",
    "target": "popcorn",
    "weight": 25.0
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 632,
    "source": "peanut_butter",
    "target": "soybean",
    "weight": 88.0
  }, {
    "group_id_s": 8,
    "group_id_t": 3,
    "name": 677,
    "source": "roasted_peanut",
    "target": "soybean",
    "weight": 88.0
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 669,
    "source": "raw_beef",
    "target": "soybean",
    "weight": 96.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 592,
    "source": "mung_bean",
    "target": "soybean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 551,
    "source": "lima_bean",
    "target": "soybean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 80,
    "source": "bean",
    "target": "soybean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 539,
    "source": "kidney_bean",
    "target": "soybean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 670,
    "source": "red_bean",
    "target": "soybean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 141,
    "source": "black_bean",
    "target": "soybean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 611,
    "source": "onion",
    "target": "shallot",
    "weight": 12.0
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 675,
    "source": "roasted_beef",
    "target": "shallot",
    "weight": 10.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 44,
    "source": "bacon",
    "target": "mutton",
    "weight": 52.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 99,
    "source": "beef",
    "target": "lamb",
    "weight": 58.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 110,
    "source": "beef",
    "target": "pork_liver",
    "weight": 16.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 579,
    "source": "matsutake",
    "target": "shiitake",
    "weight": 118.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 642,
    "source": "porcini",
    "target": "shiitake",
    "weight": 117.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 578,
    "source": "matsutake",
    "target": "mushroom",
    "weight": 117.0
  }, {
    "group_id_s": 5,
    "group_id_t": 10,
    "name": 124,
    "source": "beer",
    "target": "katsuobushi",
    "weight": 23.0
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 333,
    "source": "cocoa",
    "target": "katsuobushi",
    "weight": 23.0
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 148,
    "source": "black_tea",
    "target": "katsuobushi",
    "weight": 26.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 586,
    "source": "milk",
    "target": "parmesan_cheese",
    "weight": 79.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 193,
    "source": "camembert_cheese",
    "target": "parmesan_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 162,
    "source": "blue_cheese",
    "target": "parmesan_cheese",
    "weight": 137.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 231,
    "source": "cheddar_cheese",
    "target": "parmesan_cheese",
    "weight": 134.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 254,
    "source": "cheese",
    "target": "parmesan_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 397,
    "source": "cream_cheese",
    "target": "parmesan_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 518,
    "source": "gruyere_cheese",
    "target": "parmesan_cheese",
    "weight": 134.0
  }, {
    "group_id_s": 9,
    "group_id_t": 8,
    "name": 606,
    "source": "nutmeg",
    "target": "seed",
    "weight": 12.0
  }, {
    "group_id_s": 9,
    "group_id_t": 8,
    "name": 488,
    "source": "ginger",
    "target": "seed",
    "weight": 10.0
  }, {
    "group_id_s": 8,
    "group_id_t": 9,
    "name": 147,
    "source": "black_sesame_seed",
    "target": "ginger",
    "weight": 10.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 2,
    "source": "apple",
    "target": "apricot",
    "weight": 74.0
  }, {
    "group_id_s": 1,
    "group_id_t": 13,
    "name": 7,
    "source": "apple",
    "target": "honey",
    "weight": 41.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 3,
    "source": "apple",
    "target": "banana",
    "weight": 85.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 192,
    "source": "camembert_cheese",
    "target": "cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 155,
    "source": "blue_cheese",
    "target": "cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 216,
    "source": "cheddar_cheese",
    "target": "cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 163,
    "source": "blue_cheese",
    "target": "provolone_cheese",
    "weight": 133.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 233,
    "source": "cheddar_cheese",
    "target": "provolone_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 256,
    "source": "cheese",
    "target": "provolone_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 157,
    "source": "blue_cheese",
    "target": "cream",
    "weight": 27.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 220,
    "source": "cheddar_cheese",
    "target": "cream",
    "weight": 28.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 164,
    "source": "blue_cheese",
    "target": "romano_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 234,
    "source": "cheddar_cheese",
    "target": "romano_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 257,
    "source": "cheese",
    "target": "romano_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 666,
    "source": "provolone_cheese",
    "target": "romano_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 159,
    "source": "blue_cheese",
    "target": "feta_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 223,
    "source": "cheddar_cheese",
    "target": "feta_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 246,
    "source": "cheese",
    "target": "feta_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 392,
    "source": "cream_cheese",
    "target": "feta_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 383,
    "source": "cottage_cheese",
    "target": "feta_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 156,
    "source": "blue_cheese",
    "target": "cottage_cheese",
    "weight": 131.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 219,
    "source": "cheddar_cheese",
    "target": "cottage_cheese",
    "weight": 131.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 243,
    "source": "cheese",
    "target": "cottage_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 158,
    "source": "blue_cheese",
    "target": "cream_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 221,
    "source": "cheddar_cheese",
    "target": "cream_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 244,
    "source": "cheese",
    "target": "cream_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 161,
    "source": "blue_cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 229,
    "source": "cheddar_cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 252,
    "source": "cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 395,
    "source": "cream_cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 517,
    "source": "gruyere_cheese",
    "target": "mozzarella_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 385,
    "source": "cottage_cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 492,
    "source": "goat_cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 230,
    "source": "cheddar_cheese",
    "target": "munster_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 253,
    "source": "cheese",
    "target": "munster_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 396,
    "source": "cream_cheese",
    "target": "munster_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 443,
    "source": "feta_cheese",
    "target": "munster_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 154,
    "source": "blue_cheese",
    "target": "cheddar_cheese",
    "weight": 142.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 226,
    "source": "cheddar_cheese",
    "target": "gruyere_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 249,
    "source": "cheese",
    "target": "gruyere_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 394,
    "source": "cream_cheese",
    "target": "gruyere_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 153,
    "source": "blue_cheese",
    "target": "buttermilk",
    "weight": 12.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 160,
    "source": "blue_cheese",
    "target": "goat_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 225,
    "source": "cheddar_cheese",
    "target": "goat_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 248,
    "source": "cheese",
    "target": "goat_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 393,
    "source": "cream_cheese",
    "target": "goat_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 384,
    "source": "cottage_cheese",
    "target": "goat_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 235,
    "source": "cheddar_cheese",
    "target": "roquefort_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 258,
    "source": "cheese",
    "target": "roquefort_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 66,
    "source": "bean",
    "target": "black_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 550,
    "source": "lima_bean",
    "target": "red_kidney_bean",
    "weight": 90.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 77,
    "source": "bean",
    "target": "red_kidney_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 140,
    "source": "black_bean",
    "target": "red_kidney_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 72,
    "source": "bean",
    "target": "kidney_bean",
    "weight": 86.0
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 496,
    "source": "grape",
    "target": "rhubarb",
    "weight": 8.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 209,
    "source": "cayenne",
    "target": "pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 144,
    "source": "black_pepper",
    "target": "pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 3,
    "name": 208,
    "source": "cayenne",
    "target": "green_bell_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 3,
    "name": 143,
    "source": "black_pepper",
    "target": "green_bell_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 210,
    "source": "cayenne",
    "target": "tabasco_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 145,
    "source": "black_pepper",
    "target": "tabasco_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 634,
    "source": "pepper",
    "target": "tabasco_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 211,
    "source": "cayenne",
    "target": "thai_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 151,
    "source": "black_tea",
    "target": "tomato",
    "weight": 84.0
  }, {
    "group_id_s": 11,
    "group_id_t": 6,
    "name": 149,
    "source": "black_tea",
    "target": "mint",
    "weight": 24.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 563,
    "source": "mackerel",
    "target": "salmon",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 463,
    "source": "fish",
    "target": "salmon",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 520,
    "source": "haddock",
    "target": "salmon",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 569,
    "source": "mackerel",
    "target": "tuna",
    "weight": 65.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 470,
    "source": "fish",
    "target": "tuna",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 686,
    "source": "salmon",
    "target": "tuna",
    "weight": 84.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 692,
    "source": "sardine",
    "target": "tuna",
    "weight": 65.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 452,
    "source": "fish",
    "target": "haddock",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 453,
    "source": "fish",
    "target": "herring",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 466,
    "source": "fish",
    "target": "smoked_salmon",
    "weight": 64.0
  }, {
    "group_id_s": 4,
    "group_id_t": 4,
    "name": 174,
    "source": "bread",
    "target": "white_bread",
    "weight": 51.0
  }, {
    "group_id_s": 4,
    "group_id_t": 4,
    "name": 173,
    "source": "bread",
    "target": "wheat_bread",
    "weight": 51.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 626,
    "source": "parmesan_cheese",
    "target": "sheep_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 9,
    "group_id_t": 6,
    "name": 316,
    "source": "cinnamon",
    "target": "tarragon",
    "weight": 7.0
  }, {
    "group_id_s": 8,
    "group_id_t": 11,
    "name": 335,
    "source": "coconut",
    "target": "coconut_oil",
    "weight": 18.0
  }, {
    "group_id_s": 1,
    "group_id_t": 0,
    "name": 616,
    "source": "orange",
    "target": "orange_peel",
    "weight": 14.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 615,
    "source": "orange",
    "target": "orange_juice",
    "weight": 54.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 622,
    "source": "orange",
    "target": "tangerine",
    "weight": 62.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 9,
    "source": "apple",
    "target": "orange_juice",
    "weight": 30.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 5,
    "source": "apple",
    "target": "cherry",
    "weight": 31.0
  }, {
    "group_id_s": 1,
    "group_id_t": 5,
    "name": 15,
    "source": "apple",
    "target": "white_wine",
    "weight": 105.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 11,
    "source": "apple",
    "target": "pineapple",
    "weight": 64.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 8,
    "source": "apple",
    "target": "melon",
    "weight": 71.0
  }, {
    "group_id_s": 1,
    "group_id_t": 5,
    "name": 1,
    "source": "apple",
    "target": "apple_brandy",
    "weight": 14.0
  }, {
    "group_id_s": 1,
    "group_id_t": 5,
    "name": 6,
    "source": "apple",
    "target": "cider",
    "weight": 59.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 13,
    "source": "apple",
    "target": "quince",
    "weight": 36.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 4,
    "source": "apple",
    "target": "bartlett_pear",
    "weight": 44.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 10,
    "source": "apple",
    "target": "pear",
    "weight": 44.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 12,
    "source": "apple",
    "target": "plum",
    "weight": 64.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 544,
    "source": "lemon",
    "target": "mandarin",
    "weight": 56.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 543,
    "source": "lemon",
    "target": "lime",
    "weight": 58.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 546,
    "source": "lemon",
    "target": "tangerine",
    "weight": 55.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 545,
    "source": "lemon",
    "target": "orange",
    "weight": 69.0
  }, {
    "group_id_s": 1,
    "group_id_t": 6,
    "name": 542,
    "source": "lemon",
    "target": "lemongrass",
    "weight": 13.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 552,
    "source": "lime",
    "target": "mandarin",
    "weight": 53.0
  }, {
    "group_id_s": 11,
    "group_id_t": 5,
    "name": 334,
    "source": "cocoa",
    "target": "white_wine",
    "weight": 86.0
  }, {
    "group_id_s": 11,
    "group_id_t": 11,
    "name": 332,
    "source": "cocoa",
    "target": "coffee",
    "weight": 95.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 672,
    "source": "red_wine",
    "target": "white_wine",
    "weight": 155.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 681,
    "source": "rum",
    "target": "white_wine",
    "weight": 98.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 190,
    "source": "cabernet_sauvignon_wine",
    "target": "white_wine",
    "weight": 155.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 189,
    "source": "cabernet_sauvignon_wine",
    "target": "red_wine",
    "weight": 165.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 188,
    "source": "cabernet_sauvignon_wine",
    "target": "port_wine",
    "weight": 133.0
  }, {
    "group_id_s": 1,
    "group_id_t": 5,
    "name": 638,
    "source": "pineapple",
    "target": "white_wine",
    "weight": 62.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 312,
    "source": "cider",
    "target": "white_wine",
    "weight": 59.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 308,
    "source": "cider",
    "target": "cognac",
    "weight": 55.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 170,
    "source": "brandy",
    "target": "white_wine",
    "weight": 19.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 166,
    "source": "brandy",
    "target": "champagne_wine",
    "weight": 18.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 660,
    "source": "port_wine",
    "target": "white_wine",
    "weight": 135.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 658,
    "source": "port_wine",
    "target": "red_wine",
    "weight": 133.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 214,
    "source": "champagne_wine",
    "target": "white_wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 212,
    "source": "champagne_wine",
    "target": "cognac",
    "weight": 82.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 705,
    "source": "whiskey",
    "target": "white_wine",
    "weight": 72.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 129,
    "source": "beer",
    "target": "white_wine",
    "weight": 118.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 121,
    "source": "beer",
    "target": "cider",
    "weight": 50.0
  }, {
    "group_id_s": 5,
    "group_id_t": 11,
    "name": 123,
    "source": "beer",
    "target": "coffee",
    "weight": 101.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 128,
    "source": "beer",
    "target": "rum",
    "weight": 103.0
  }, {
    "group_id_s": 5,
    "group_id_t": 7,
    "name": 125,
    "source": "beer",
    "target": "milk",
    "weight": 78.0
  }, {
    "group_id_s": 5,
    "group_id_t": 11,
    "name": 122,
    "source": "beer",
    "target": "cocoa",
    "weight": 94.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 379,
    "source": "cognac",
    "target": "white_wine",
    "weight": 107.0
  }, {
    "group_id_s": 1,
    "group_id_t": 5,
    "name": 596,
    "source": "muscat_grape",
    "target": "white_wine",
    "weight": 80.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 693,
    "source": "sherry",
    "target": "white_wine",
    "weight": 139.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 18,
    "source": "apple_brandy",
    "target": "white_wine",
    "weight": 17.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 648,
    "source": "pork",
    "target": "roasted_pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 115,
    "source": "beef",
    "target": "roasted_pork",
    "weight": 100.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 87,
    "source": "beef",
    "target": "chicken",
    "weight": 98.0
  }, {
    "group_id_s": 2,
    "group_id_t": 8,
    "name": 106,
    "source": "beef",
    "target": "peanut",
    "weight": 72.0
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 90,
    "source": "beef",
    "target": "coffee",
    "weight": 102.0
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 107,
    "source": "beef",
    "target": "peanut_butter",
    "weight": 99.0
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 89,
    "source": "beef",
    "target": "clam",
    "weight": 48.0
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 104,
    "source": "beef",
    "target": "onion",
    "weight": 30.0
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 92,
    "source": "beef",
    "target": "eel",
    "weight": 49.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 109,
    "source": "beef",
    "target": "pork",
    "weight": 97.0
  }, {
    "group_id_s": 2,
    "group_id_t": 8,
    "name": 114,
    "source": "beef",
    "target": "roasted_peanut",
    "weight": 99.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 52,
    "source": "bacon",
    "target": "roasted_pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 26,
    "source": "bacon",
    "target": "chicken",
    "weight": 84.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 48,
    "source": "bacon",
    "target": "pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 405,
    "source": "cured_pork",
    "target": "roasted_pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 402,
    "source": "cured_pork",
    "target": "pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 288,
    "source": "chicken",
    "target": "roasted_pork",
    "weight": 81.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 657,
    "source": "pork_sausage",
    "target": "roasted_pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 656,
    "source": "pork_sausage",
    "target": "roasted_beef",
    "weight": 101.0
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 676,
    "source": "roasted_beef",
    "target": "soybean",
    "weight": 100.0
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 674,
    "source": "roasted_beef",
    "target": "sardine",
    "weight": 50.0
  }, {
    "group_id_s": 11,
    "group_id_t": 9,
    "name": 516,
    "source": "green_tea",
    "target": "vanilla",
    "weight": 44.0
  }, {
    "group_id_s": 11,
    "group_id_t": 6,
    "name": 510,
    "source": "green_tea",
    "target": "peppermint",
    "weight": 33.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 302,
    "source": "chive",
    "target": "onion",
    "weight": 17.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 300,
    "source": "chive",
    "target": "leek",
    "weight": 11.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 474,
    "source": "garlic",
    "target": "onion",
    "weight": 16.0
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 476,
    "source": "garlic",
    "target": "roasted_beef",
    "weight": 11.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 603,
    "source": "mutton",
    "target": "pork",
    "weight": 52.0
  }, {
    "group_id_s": 13,
    "group_id_t": 2,
    "name": 412,
    "source": "egg",
    "target": "roasted_beef",
    "weight": 42.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 426,
    "source": "enokidake",
    "target": "matsutake",
    "weight": 117.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 436,
    "source": "enokidake",
    "target": "shiitake",
    "weight": 117.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 428,
    "source": "enokidake",
    "target": "mushroom",
    "weight": 117.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 597,
    "source": "mushroom",
    "target": "porcini",
    "weight": 117.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 600,
    "source": "mushroom",
    "target": "shiitake",
    "weight": 117.0
  }, {
    "group_id_s": 4,
    "group_id_t": 4,
    "name": 172,
    "source": "bread",
    "target": "rye_bread",
    "weight": 51.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 627,
    "source": "parmesan_cheese",
    "target": "swiss_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 624,
    "source": "parmesan_cheese",
    "target": "provolone_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 625,
    "source": "parmesan_cheese",
    "target": "romano_cheese",
    "weight": 131.0
  }, {
    "group_id_s": 9,
    "group_id_t": 6,
    "name": 313,
    "source": "cinnamon",
    "target": "fennel",
    "weight": 10.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 315,
    "source": "cinnamon",
    "target": "nutmeg",
    "weight": 20.0
  }, {
    "group_id_s": 9,
    "group_id_t": 1,
    "name": 314,
    "source": "cinnamon",
    "target": "guava",
    "weight": 25.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 484,
    "source": "ginger",
    "target": "nutmeg",
    "weight": 22.0
  }, {
    "group_id_s": 9,
    "group_id_t": 6,
    "name": 486,
    "source": "ginger",
    "target": "rosemary",
    "weight": 17.0
  }, {
    "group_id_s": 9,
    "group_id_t": 6,
    "name": 483,
    "source": "ginger",
    "target": "marjoram",
    "weight": 18.0
  }, {
    "group_id_s": 13,
    "group_id_t": 1,
    "name": 523,
    "source": "honey",
    "target": "strawberry",
    "weight": 40.0
  }, {
    "group_id_s": 4,
    "group_id_t": 3,
    "name": 570,
    "source": "malt",
    "target": "soybean",
    "weight": 58.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 262,
    "source": "cheese",
    "target": "swiss_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 667,
    "source": "provolone_cheese",
    "target": "swiss_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 391,
    "source": "cream",
    "target": "swiss_cheese",
    "weight": 27.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 678,
    "source": "romano_cheese",
    "target": "swiss_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 447,
    "source": "feta_cheese",
    "target": "swiss_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 445,
    "source": "feta_cheese",
    "target": "provolone_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 446,
    "source": "feta_cheese",
    "target": "romano_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 444,
    "source": "feta_cheese",
    "target": "parmesan_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 441,
    "source": "feta_cheese",
    "target": "goat_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 442,
    "source": "feta_cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 389,
    "source": "cottage_cheese",
    "target": "swiss_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 387,
    "source": "cottage_cheese",
    "target": "provolone_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 388,
    "source": "cottage_cheese",
    "target": "romano_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 382,
    "source": "cottage_cheese",
    "target": "cream_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 386,
    "source": "cottage_cheese",
    "target": "parmesan_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 401,
    "source": "cream_cheese",
    "target": "swiss_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 398,
    "source": "cream_cheese",
    "target": "provolone_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 399,
    "source": "cream_cheese",
    "target": "romano_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 400,
    "source": "cream_cheese",
    "target": "roquefort_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 165,
    "source": "blue_cheese",
    "target": "swiss_cheese",
    "weight": 134.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 591,
    "source": "mozzarella_cheese",
    "target": "swiss_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 589,
    "source": "mozzarella_cheese",
    "target": "provolone_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 590,
    "source": "mozzarella_cheese",
    "target": "romano_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 588,
    "source": "mozzarella_cheese",
    "target": "parmesan_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 595,
    "source": "munster_cheese",
    "target": "swiss_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 594,
    "source": "munster_cheese",
    "target": "provolone_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 593,
    "source": "munster_cheese",
    "target": "parmesan_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 239,
    "source": "cheddar_cheese",
    "target": "swiss_cheese",
    "weight": 136.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 519,
    "source": "gruyere_cheese",
    "target": "swiss_cheese",
    "weight": 131.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 187,
    "source": "buttermilk",
    "target": "cheddar_cheese",
    "weight": 12.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 494,
    "source": "goat_cheese",
    "target": "provolone_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 495,
    "source": "goat_cheese",
    "target": "romano_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 493,
    "source": "goat_cheese",
    "target": "parmesan_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 75,
    "source": "bean",
    "target": "mung_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 73,
    "source": "bean",
    "target": "lima_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 139,
    "source": "black_bean",
    "target": "lima_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 138,
    "source": "black_bean",
    "target": "kidney_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 538,
    "source": "kidney_bean",
    "target": "lima_bean",
    "weight": 87.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 381,
    "source": "concord_grape",
    "target": "grape",
    "weight": 125.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 635,
    "source": "pepper",
    "target": "thai_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 507,
    "source": "green_bell_pepper",
    "target": "thai_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 505,
    "source": "green_bell_pepper",
    "target": "pepper",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 506,
    "source": "green_bell_pepper",
    "target": "tabasco_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 142,
    "source": "black_pepper",
    "target": "cayenne",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 146,
    "source": "black_pepper",
    "target": "thai_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 703,
    "source": "tabasco_pepper",
    "target": "thai_pepper",
    "weight": 38.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 133,
    "source": "bell_pepper",
    "target": "cayenne",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 137,
    "source": "bell_pepper",
    "target": "thai_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 131,
    "source": "bell_pepper",
    "target": "black_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 135,
    "source": "bell_pepper",
    "target": "pepper",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 136,
    "source": "bell_pepper",
    "target": "tabasco_pepper",
    "weight": 37.0
  }, {
    "group_id_s": 3,
    "group_id_t": 11,
    "name": 132,
    "source": "bell_pepper",
    "target": "black_tea",
    "weight": 41.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 134,
    "source": "bell_pepper",
    "target": "green_bell_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 6,
    "group_id_t": 11,
    "name": 62,
    "source": "basil",
    "target": "black_tea",
    "weight": 11.0
  }, {
    "group_id_s": 6,
    "group_id_t": 6,
    "name": 64,
    "source": "basil",
    "target": "rosemary",
    "weight": 10.0
  }, {
    "group_id_s": 4,
    "group_id_t": 4,
    "name": 182,
    "source": "brown_rice",
    "target": "rice",
    "weight": 74.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 454,
    "source": "fish",
    "target": "mackerel",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 464,
    "source": "fish",
    "target": "sardine",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 684,
    "source": "salmon",
    "target": "smoked_salmon",
    "weight": 84.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 682,
    "source": "salmon",
    "target": "sardine",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 339,
    "source": "cod",
    "target": "fish",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 344,
    "source": "cod",
    "target": "haddock",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 357,
    "source": "cod",
    "target": "smoked_salmon",
    "weight": 65.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 354,
    "source": "cod",
    "target": "salmon",
    "weight": 65.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 355,
    "source": "cod",
    "target": "sardine",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 521,
    "source": "haddock",
    "target": "sardine",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 194,
    "source": "catfish",
    "target": "fish",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 195,
    "source": "catfish",
    "target": "sardine",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 522,
    "source": "herring",
    "target": "sardine",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 205,
    "source": "caviar",
    "target": "smoked_salmon",
    "weight": 18.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 688,
    "source": "sardine",
    "target": "smoked_salmon",
    "weight": 64.0
  }, {
    "group_id_s": 11,
    "group_id_t": 9,
    "name": 152,
    "source": "black_tea",
    "target": "vanilla",
    "weight": 45.0
  }, {
    "group_id_s": 11,
    "group_id_t": 11,
    "name": 150,
    "source": "black_tea",
    "target": "tea",
    "weight": 171.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 390,
    "source": "cranberry",
    "target": "juniper_berry",
    "weight": 54.0
  }, {
    "group_id_s": 0,
    "group_id_t": 11,
    "name": 549,
    "source": "lemon_peel",
    "target": "tea",
    "weight": 8.0
  }, {
    "group_id_s": 6,
    "group_id_t": 11,
    "name": 636,
    "source": "peppermint",
    "target": "tea",
    "weight": 29.0
  }, {
    "group_id_s": 12,
    "group_id_t": 12,
    "name": 471,
    "source": "flower",
    "target": "lavender",
    "weight": 5.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 0,
    "source": "anise",
    "target": "cinnamon",
    "weight": 10.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 605,
    "source": "nectarine",
    "target": "strawberry",
    "weight": 40.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 541,
    "source": "leek",
    "target": "shallot",
    "weight": 11.0
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 417,
    "source": "emmental_cheese",
    "target": "potato",
    "weight": 44.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 564,
    "source": "mackerel",
    "target": "sardine",
    "weight": 65.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 406,
    "source": "eel",
    "target": "sardine",
    "weight": 65.0
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 364,
    "source": "coffee",
    "target": "katsuobushi",
    "weight": 32.0
  }],
  "nodes": [{
    "group_id": 0,
    "name": "orange_peel",
    "size": 1.0124252185918086
  }, {
    "group_id": 1,
    "name": "cherry",
    "size": 1.9186519876809798
  }, {
    "group_id": 2,
    "name": "roasted_pork",
    "size": 0.22124676979716093
  }, {
    "group_id": 3,
    "name": "matsutake",
    "size": 0.09911855286912812
  }, {
    "group_id": 1,
    "name": "orange_juice",
    "size": 3.008956069241389
  }, {
    "group_id": 4,
    "name": "rye_bread",
    "size": 0.16106764841233318
  }, {
    "group_id": 5,
    "name": "white_wine",
    "size": 3.8337640270452047
  }, {
    "group_id": 6,
    "name": "fennel",
    "size": 1.6053665616482
  }, {
    "group_id": 1,
    "name": "pineapple",
    "size": 2.860278239937697
  }, {
    "group_id": 2,
    "name": "chicken",
    "size": 9.370243194449362
  }, {
    "group_id": 3,
    "name": "porcini",
    "size": 0.18761726078799248
  }, {
    "group_id": 7,
    "name": "milk",
    "size": 22.823816772275123
  }, {
    "group_id": 2,
    "name": "raw_beef",
    "size": 0.003539948316754575
  }, {
    "group_id": 1,
    "name": "grape",
    "size": 0.6106410846401643
  }, {
    "group_id": 7,
    "name": "camembert_cheese",
    "size": 0.021239689900527454
  }, {
    "group_id": 8,
    "name": "peanut",
    "size": 0.8017982937449113
  }, {
    "group_id": 9,
    "name": "cayenne",
    "size": 14.071294559099437
  }, {
    "group_id": 5,
    "name": "cognac",
    "size": 0.116818294452901
  }, {
    "group_id": 1,
    "name": "melon",
    "size": 0.27788594286523416
  }, {
    "group_id": 3,
    "name": "mung_bean",
    "size": 0.033629509009168466
  }, {
    "group_id": 4,
    "name": "rice",
    "size": 6.009062267690892
  }, {
    "group_id": 10,
    "name": "mackerel",
    "size": 0.07787886296860065
  }, {
    "group_id": 9,
    "name": "thai_pepper",
    "size": 0.15398775177882404
  }, {
    "group_id": 11,
    "name": "coffee",
    "size": 1.267301497398138
  }, {
    "group_id": 1,
    "name": "citrus",
    "size": 0.28850578781549785
  }, {
    "group_id": 3,
    "name": "lima_bean",
    "size": 0.2637261495982159
  }, {
    "group_id": 9,
    "name": "black_pepper",
    "size": 17.26078799249531
  }, {
    "group_id": 3,
    "name": "bean",
    "size": 3.3682608233919784
  }, {
    "group_id": 11,
    "name": "peanut_butter",
    "size": 1.7611242875854014
  }, {
    "group_id": 3,
    "name": "kidney_bean",
    "size": 0.7823285780027611
  }, {
    "group_id": 5,
    "name": "apple_brandy",
    "size": 0.06548904385995964
  }, {
    "group_id": 4,
    "name": "bread",
    "size": 8.05869234309179
  }, {
    "group_id": 1,
    "name": "juniper_berry",
    "size": 0.0584091472264505
  }, {
    "group_id": 10,
    "name": "clam",
    "size": 0.8159580870119296
  }, {
    "group_id": 3,
    "name": "onion",
    "size": 31.914404049700874
  }, {
    "group_id": 5,
    "name": "cider",
    "size": 1.9823710573825624
  }, {
    "group_id": 0,
    "name": "citrus_peel",
    "size": 0.00707989663350915
  }, {
    "group_id": 10,
    "name": "eel",
    "size": 0.03539948316754576
  }, {
    "group_id": 9,
    "name": "nutmeg",
    "size": 4.4461750858437465
  }, {
    "group_id": 6,
    "name": "rosemary",
    "size": 3.3452511593330736
  }, {
    "group_id": 9,
    "name": "vanilla",
    "size": 15.974016779355022
  }, {
    "group_id": 2,
    "name": "pork",
    "size": 3.4762292470529927
  }, {
    "group_id": 3,
    "name": "red_bean",
    "size": 0.0584091472264505
  }, {
    "group_id": 11,
    "name": "tea",
    "size": 0.17876738999610606
  }, {
    "group_id": 10,
    "name": "fish",
    "size": 3.3257814435909236
  }, {
    "group_id": 2,
    "name": "bacon",
    "size": 3.8160642854614326
  }, {
    "group_id": 12,
    "name": "lavender",
    "size": 0.10973839781939183
  }, {
    "group_id": 6,
    "name": "peppermint",
    "size": 0.2513363304895749
  }, {
    "group_id": 8,
    "name": "black_sesame_seed",
    "size": 0.04601932811780948
  }, {
    "group_id": 6,
    "name": "lemongrass",
    "size": 0.24248645969768842
  }, {
    "group_id": 1,
    "name": "guava",
    "size": 0.02300966405890474
  }, {
    "group_id": 8,
    "name": "roasted_peanut",
    "size": 0.2920457361322525
  }, {
    "group_id": 10,
    "name": "haddock",
    "size": 0.05486919890969592
  }, {
    "group_id": 1,
    "name": "mandarin",
    "size": 0.492052816028886
  }, {
    "group_id": 1,
    "name": "quince",
    "size": 0.04955927643456406
  }, {
    "group_id": 1,
    "name": "bartlett_pear",
    "size": 0.04070940564267762
  }, {
    "group_id": 0,
    "name": "lemon_peel",
    "size": 1.2655315232397606
  }, {
    "group_id": 9,
    "name": "pepper",
    "size": 16.035965874898224
  }, {
    "group_id": 5,
    "name": "rum",
    "size": 1.065524443343127
  }, {
    "group_id": 1,
    "name": "pear",
    "size": 0.8283479061205707
  }, {
    "group_id": 5,
    "name": "champagne_wine",
    "size": 0.1752274416793515
  }, {
    "group_id": 1,
    "name": "raspberry",
    "size": 1.3876597401677935
  }, {
    "group_id": 10,
    "name": "smoked_salmon",
    "size": 0.1716874933625969
  }, {
    "group_id": 1,
    "name": "concord_grape",
    "size": 0.021239689900527454
  }, {
    "group_id": 3,
    "name": "black_bean",
    "size": 0.8389677510708343
  }, {
    "group_id": 1,
    "name": "plum",
    "size": 0.4902828418705087
  }, {
    "group_id": 5,
    "name": "brandy",
    "size": 0.6991397925590287
  }, {
    "group_id": 7,
    "name": "swiss_cheese",
    "size": 0.9239265106729442
  }, {
    "group_id": 9,
    "name": "cinnamon",
    "size": 9.917165209387942
  }, {
    "group_id": 7,
    "name": "blue_cheese",
    "size": 0.6991397925590287
  }, {
    "group_id": 4,
    "name": "popcorn",
    "size": 0.1716874933625969
  }, {
    "group_id": 7,
    "name": "cheddar_cheese",
    "size": 5.361251725724804
  }, {
    "group_id": 7,
    "name": "cheese",
    "size": 5.809055187794258
  }, {
    "group_id": 6,
    "name": "marjoram",
    "size": 0.934546355623208
  }, {
    "group_id": 1,
    "name": "apple",
    "size": 4.2797975149562815
  }, {
    "group_id": 7,
    "name": "roquefort_cheese",
    "size": 0.04070940564267762
  }, {
    "group_id": 9,
    "name": "tabasco_pepper",
    "size": 1.7080250628340825
  }, {
    "group_id": 11,
    "name": "cocoa",
    "size": 8.497645934369357
  }, {
    "group_id": 3,
    "name": "soybean",
    "size": 1.8301532797621156
  }, {
    "group_id": 11,
    "name": "black_tea",
    "size": 0.06725901801833693
  }, {
    "group_id": 4,
    "name": "white_bread",
    "size": 0.6548904385995965
  }, {
    "group_id": 10,
    "name": "herring",
    "size": 0.01769974158377288
  }, {
    "group_id": 1,
    "name": "lime",
    "size": 1.9168820135226023
  }, {
    "group_id": 7,
    "name": "provolone_cheese",
    "size": 0.29558568444900707
  }, {
    "group_id": 2,
    "name": "beef",
    "size": 8.53481539169528
  }, {
    "group_id": 7,
    "name": "romano_cheese",
    "size": 0.48674289355375416
  }, {
    "group_id": 3,
    "name": "shiitake",
    "size": 0.9044567949307939
  }, {
    "group_id": 9,
    "name": "anise",
    "size": 0.3947042373181352
  }, {
    "group_id": 10,
    "name": "caviar",
    "size": 0.04601932811780948
  }, {
    "group_id": 2,
    "name": "cured_pork",
    "size": 0.5557718857304683
  }, {
    "group_id": 7,
    "name": "buttermilk",
    "size": 2.8903678006301106
  }, {
    "group_id": 5,
    "name": "beer",
    "size": 0.5363021699883181
  }, {
    "group_id": 1,
    "name": "grapefruit",
    "size": 0.20708697653014269
  }, {
    "group_id": 4,
    "name": "brown_rice",
    "size": 0.596481291373146
  }, {
    "group_id": 6,
    "name": "basil",
    "size": 6.68873234450777
  }, {
    "group_id": 2,
    "name": "roasted_beef",
    "size": 0.3929342631597579
  }, {
    "group_id": 1,
    "name": "kiwi",
    "size": 0.18584728662961522
  }, {
    "group_id": 3,
    "name": "green_bell_pepper",
    "size": 4.562993380296647
  }, {
    "group_id": 3,
    "name": "mushroom",
    "size": 5.871004283337463
  }, {
    "group_id": 3,
    "name": "shallot",
    "size": 2.1009593259938404
  }, {
    "group_id": 5,
    "name": "red_wine",
    "size": 2.4655740026195616
  }, {
    "group_id": 1,
    "name": "tangerine",
    "size": 0.07787886296860065
  }, {
    "group_id": 1,
    "name": "orange",
    "size": 3.0248858366667846
  }, {
    "group_id": 9,
    "name": "ginger",
    "size": 6.75422138836773
  }, {
    "group_id": 7,
    "name": "cream_cheese",
    "size": 5.02495663563312
  }, {
    "group_id": 1,
    "name": "olive",
    "size": 3.180643562603986
  }, {
    "group_id": 11,
    "name": "lime_peel_oil",
    "size": 0.17699741583772877
  }, {
    "group_id": 7,
    "name": "gruyere_cheese",
    "size": 0.07787886296860065
  }, {
    "group_id": 1,
    "name": "apricot",
    "size": 1.0973839781939185
  }, {
    "group_id": 4,
    "name": "malt",
    "size": 0.06548904385995964
  }, {
    "group_id": 3,
    "name": "enokidake",
    "size": 0.18761726078799248
  }, {
    "group_id": 7,
    "name": "parmesan_cheese",
    "size": 5.60550815958087
  }, {
    "group_id": 1,
    "name": "banana",
    "size": 1.741654571843251
  }, {
    "group_id": 1,
    "name": "strawberry",
    "size": 1.9080321427307163
  }, {
    "group_id": 2,
    "name": "pork_liver",
    "size": 0.00884987079188644
  }, {
    "group_id": 5,
    "name": "whiskey",
    "size": 0.26195617543983857
  }, {
    "group_id": 8,
    "name": "coconut",
    "size": 3.026655810825162
  }, {
    "group_id": 2,
    "name": "mutton",
    "size": 0.0053099224751318634
  }, {
    "group_id": 5,
    "name": "port_wine",
    "size": 0.08672873376048709
  }, {
    "group_id": 13,
    "name": "honey",
    "size": 4.3948458352508055
  }, {
    "group_id": 8,
    "name": "seed",
    "size": 2.3239760699493788
  }, {
    "group_id": 3,
    "name": "red_kidney_bean",
    "size": 0.10442847534425997
  }, {
    "group_id": 6,
    "name": "mint",
    "size": 1.6496159156076322
  }, {
    "group_id": 7,
    "name": "cream",
    "size": 17.968777655846225
  }, {
    "group_id": 2,
    "name": "lamb",
    "size": 0.8354278027540798
  }, {
    "group_id": 1,
    "name": "lemon",
    "size": 5.3913412864172185
  }, {
    "group_id": 3,
    "name": "rhubarb",
    "size": 0.2991256327657616
  }, {
    "group_id": 7,
    "name": "cottage_cheese",
    "size": 0.6159510071152962
  }, {
    "group_id": 10,
    "name": "catfish",
    "size": 0.12035824276965557
  }, {
    "group_id": 7,
    "name": "goat_cheese",
    "size": 0.45842330701971756
  }, {
    "group_id": 5,
    "name": "sherry",
    "size": 1.1150837197776913
  }, {
    "group_id": 3,
    "name": "leek",
    "size": 0.7274593790930652
  }, {
    "group_id": 3,
    "name": "bell_pepper",
    "size": 10.349038904032001
  }, {
    "group_id": 1,
    "name": "cranberry",
    "size": 1.6212963290735956
  }, {
    "group_id": 10,
    "name": "salmon",
    "size": 0.7681687847357429
  }, {
    "group_id": 3,
    "name": "chive",
    "size": 2.327516018266133
  }, {
    "group_id": 7,
    "name": "sheep_cheese",
    "size": 0.003539948316754575
  }, {
    "group_id": 12,
    "name": "flower",
    "size": 0.053099224751318626
  }, {
    "group_id": 3,
    "name": "garlic",
    "size": 29.90017345746752
  }, {
    "group_id": 11,
    "name": "green_tea",
    "size": 0.0566391730680732
  }, {
    "group_id": 7,
    "name": "mozzarella_cheese",
    "size": 2.283266664306701
  }, {
    "group_id": 10,
    "name": "tuna",
    "size": 0.7840985521611384
  }, {
    "group_id": 1,
    "name": "nectarine",
    "size": 0.08849870791886438
  }, {
    "group_id": 2,
    "name": "pork_sausage",
    "size": 2.410704803709866
  }, {
    "group_id": 3,
    "name": "tomato",
    "size": 17.538673935360542
  }, {
    "group_id": 10,
    "name": "cod",
    "size": 0.3079755035576481
  }, {
    "group_id": 6,
    "name": "tarragon",
    "size": 0.842507699387589
  }, {
    "group_id": 3,
    "name": "potato",
    "size": 6.274558391447485
  }, {
    "group_id": 7,
    "name": "feta_cheese",
    "size": 1.0991539523522955
  }, {
    "group_id": 7,
    "name": "emmental_cheese",
    "size": 0.0017699741583772875
  }, {
    "group_id": 5,
    "name": "cabernet_sauvignon_wine",
    "size": 0.03008956069241389
  }, {
    "group_id": 4,
    "name": "wheat_bread",
    "size": 0.14690785514531488
  }, {
    "group_id": 1,
    "name": "muscat_grape",
    "size": 0.0017699741583772875
  }, {
    "group_id": 7,
    "name": "munster_cheese",
    "size": 0.04778930227618677
  }, {
    "group_id": 11,
    "name": "coconut_oil",
    "size": 0.03008956069241389
  }, {
    "group_id": 13,
    "name": "egg",
    "size": 37.08272859216255
  }, {
    "group_id": 5,
    "name": "wine",
    "size": 1.5522673368968813
  }, {
    "group_id": 10,
    "name": "katsuobushi",
    "size": 0.08672873376049997
  }, {
    "group_id": 10,
    "name": "sardine",
    "size": 0.0
  }]
};
/* harmony default export */ __webpack_exports__["default"] = (flavorData);

/***/ }),

/***/ "./src/data/umami_data.js":
/*!********************************!*\
  !*** ./src/data/umami_data.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var umamiData = {
  "links": [{
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 20,
    "source": "bacon",
    "target": "bean",
    "weight": 0.9151206475652063
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 21,
    "source": "bacon",
    "target": "beef",
    "weight": 17.180985869260198
  }, {
    "group_id_s": 2,
    "group_id_t": 4,
    "name": 22,
    "source": "bacon",
    "target": "brown_rice",
    "weight": 0.20711602209944752
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 23,
    "source": "bacon",
    "target": "caviar",
    "weight": 1.0557348066298344
  }, {
    "group_id_s": 2,
    "group_id_t": 7,
    "name": 24,
    "source": "bacon",
    "target": "cheddar_cheese",
    "weight": 1.1819879958150548
  }, {
    "group_id_s": 2,
    "group_id_t": 7,
    "name": 25,
    "source": "bacon",
    "target": "cheese",
    "weight": 4.218193419583116
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 26,
    "source": "bacon",
    "target": "chicken",
    "weight": 18.19396956522003
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 27,
    "source": "bacon",
    "target": "chive",
    "weight": 0.35389746884234874
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 28,
    "source": "bacon",
    "target": "clam",
    "weight": 2.548218424771939
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 29,
    "source": "bacon",
    "target": "cod",
    "weight": 44.7765559443611
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 30,
    "source": "bacon",
    "target": "coffee",
    "weight": 0.34896363869973024
  }, {
    "group_id_s": 2,
    "group_id_t": 13,
    "name": 32,
    "source": "bacon",
    "target": "egg",
    "weight": 0.29674726969035076
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 33,
    "source": "bacon",
    "target": "enokidake",
    "weight": 66.62086677712642
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 34,
    "source": "bacon",
    "target": "fish",
    "weight": 21.436752738262175
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 35,
    "source": "bacon",
    "target": "garlic",
    "weight": 2.5339862224374623
  }, {
    "group_id_s": 2,
    "group_id_t": 9,
    "name": 36,
    "source": "bacon",
    "target": "ginger",
    "weight": 0.225617885134267
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 37,
    "source": "bacon",
    "target": "grapefruit",
    "weight": 0.34032943595014775
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 38,
    "source": "bacon",
    "target": "green_tea",
    "weight": 3.152612617242709
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 39,
    "source": "bacon",
    "target": "katsuobushi",
    "weight": 10.13859876527928
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 40,
    "source": "bacon",
    "target": "mackerel",
    "weight": 32.196616142908695
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 41,
    "source": "bacon",
    "target": "mandarin",
    "weight": 0.17134575356546322
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 42,
    "source": "bacon",
    "target": "melon",
    "weight": 1.197582423230117
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 43,
    "source": "bacon",
    "target": "mushroom",
    "weight": 1.9906956186560456
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 45,
    "source": "bacon",
    "target": "onion",
    "weight": 0.4036469227804189
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 46,
    "source": "bacon",
    "target": "orange",
    "weight": 0.2798900167030708
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 47,
    "source": "bacon",
    "target": "porcini",
    "weight": 1.398636001541822
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 48,
    "source": "bacon",
    "target": "pork",
    "weight": 36.464978696317644
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 50,
    "source": "bacon",
    "target": "potato",
    "weight": 0.5011722985995117
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 53,
    "source": "bacon",
    "target": "salmon",
    "weight": 0.3039424386483361
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 54,
    "source": "bacon",
    "target": "sardine",
    "weight": 251.14110034690998
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 55,
    "source": "bacon",
    "target": "shiitake",
    "weight": 251.14110034690998
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 56,
    "source": "bacon",
    "target": "soybean",
    "weight": 5.97210648435536
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 57,
    "source": "bacon",
    "target": "strawberry",
    "weight": 0.19354798920724656
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 58,
    "source": "bacon",
    "target": "tomato",
    "weight": 1.9319830399588847
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 59,
    "source": "bacon",
    "target": "tuna",
    "weight": 91.61675733274765
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 65,
    "source": "bean",
    "target": "beef",
    "weight": 6.323099501314379
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 67,
    "source": "bean",
    "target": "chicken",
    "weight": 6.6959067867346675
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 68,
    "source": "bean",
    "target": "cod",
    "weight": 16.479067075477218
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 69,
    "source": "bean",
    "target": "enokidake",
    "weight": 24.518404979848725
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 70,
    "source": "bean",
    "target": "fish",
    "weight": 7.889344743110588
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 71,
    "source": "bean",
    "target": "katsuobushi",
    "weight": 3.7312974519968227
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 74,
    "source": "bean",
    "target": "mackerel",
    "weight": 11.849285543123642
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 76,
    "source": "bean",
    "target": "pork",
    "weight": 13.420166360922211
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 78,
    "source": "bean",
    "target": "sardine",
    "weight": 92.42718540408582
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 79,
    "source": "bean",
    "target": "shiitake",
    "weight": 92.42718540408582
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 80,
    "source": "bean",
    "target": "soybean",
    "weight": 2.197907839537136
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 81,
    "source": "bean",
    "target": "tuna",
    "weight": 33.71761533424051
  }, {
    "group_id_s": 2,
    "group_id_t": 4,
    "name": 83,
    "source": "beef",
    "target": "brown_rice",
    "weight": 1.4310847641080233
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 84,
    "source": "beef",
    "target": "caviar",
    "weight": 7.294684309749091
  }, {
    "group_id_s": 2,
    "group_id_t": 7,
    "name": 85,
    "source": "beef",
    "target": "cheddar_cheese",
    "weight": 8.167040845141912
  }, {
    "group_id_s": 2,
    "group_id_t": 7,
    "name": 86,
    "source": "beef",
    "target": "cheese",
    "weight": 29.145945705386456
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 87,
    "source": "beef",
    "target": "chicken",
    "weight": 5.058465833655433
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 88,
    "source": "beef",
    "target": "chive",
    "weight": 2.445282941333731
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 89,
    "source": "beef",
    "target": "clam",
    "weight": 17.607119557170158
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 90,
    "source": "beef",
    "target": "coffee",
    "weight": 2.4111922463009345
  }, {
    "group_id_s": 2,
    "group_id_t": 13,
    "name": 93,
    "source": "beef",
    "target": "egg",
    "weight": 2.0503990572038333
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 94,
    "source": "beef",
    "target": "enokidake",
    "weight": 6.86855062183913
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 95,
    "source": "beef",
    "target": "garlic",
    "weight": 17.508781013806317
  }, {
    "group_id_s": 2,
    "group_id_t": 9,
    "name": 96,
    "source": "beef",
    "target": "ginger",
    "weight": 1.5589248704810115
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 97,
    "source": "beef",
    "target": "grapefruit",
    "weight": 2.3515335299935396
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 98,
    "source": "beef",
    "target": "green_tea",
    "weight": 21.78322969868778
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 100,
    "source": "beef",
    "target": "mackerel",
    "weight": 1.5844928917556094
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 101,
    "source": "beef",
    "target": "mandarin",
    "weight": 1.1839272251202457
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 102,
    "source": "beef",
    "target": "melon",
    "weight": 8.274791791942002
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 103,
    "source": "beef",
    "target": "mushroom",
    "weight": 13.754871018464105
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 104,
    "source": "beef",
    "target": "onion",
    "weight": 2.789030782914433
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 105,
    "source": "beef",
    "target": "orange",
    "weight": 1.9339225158417777
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 108,
    "source": "beef",
    "target": "porcini",
    "weight": 9.663987614528475
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 109,
    "source": "beef",
    "target": "pork",
    "weight": 1.7790103869427447
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 112,
    "source": "beef",
    "target": "potato",
    "weight": 3.4628901880627185
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 116,
    "source": "beef",
    "target": "salmon",
    "weight": 2.100114654126662
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 117,
    "source": "beef",
    "target": "shiitake",
    "weight": 33.49764477933262
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 118,
    "source": "beef",
    "target": "soybean",
    "weight": 4.5290766752134415
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 119,
    "source": "beef",
    "target": "strawberry",
    "weight": 1.3373353527678318
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 120,
    "source": "beef",
    "target": "tomato",
    "weight": 13.34919174757382
  }, {
    "group_id_s": 4,
    "group_id_t": 2,
    "name": 175,
    "source": "brown_rice",
    "target": "chicken",
    "weight": 1.5154609195049995
  }, {
    "group_id_s": 4,
    "group_id_t": 10,
    "name": 176,
    "source": "brown_rice",
    "target": "cod",
    "weight": 3.7296490136723977
  }, {
    "group_id_s": 4,
    "group_id_t": 3,
    "name": 177,
    "source": "brown_rice",
    "target": "enokidake",
    "weight": 5.54916395030603
  }, {
    "group_id_s": 4,
    "group_id_t": 10,
    "name": 178,
    "source": "brown_rice",
    "target": "fish",
    "weight": 1.7855675145258072
  }, {
    "group_id_s": 4,
    "group_id_t": 10,
    "name": 179,
    "source": "brown_rice",
    "target": "katsuobushi",
    "weight": 0.8444913657926401
  }, {
    "group_id_s": 4,
    "group_id_t": 10,
    "name": 180,
    "source": "brown_rice",
    "target": "mackerel",
    "weight": 2.681806921242469
  }, {
    "group_id_s": 4,
    "group_id_t": 2,
    "name": 181,
    "source": "brown_rice",
    "target": "pork",
    "weight": 3.037338825194602
  }, {
    "group_id_s": 4,
    "group_id_t": 10,
    "name": 183,
    "source": "brown_rice",
    "target": "sardine",
    "weight": 20.9187182320442
  }, {
    "group_id_s": 4,
    "group_id_t": 3,
    "name": 184,
    "source": "brown_rice",
    "target": "shiitake",
    "weight": 20.9187182320442
  }, {
    "group_id_s": 4,
    "group_id_t": 3,
    "name": 185,
    "source": "brown_rice",
    "target": "soybean",
    "weight": 0.49744471384980526
  }, {
    "group_id_s": 4,
    "group_id_t": 10,
    "name": 186,
    "source": "brown_rice",
    "target": "tuna",
    "weight": 7.631188719528511
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 196,
    "source": "caviar",
    "target": "chicken",
    "weight": 7.724775826567738
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 197,
    "source": "caviar",
    "target": "cod",
    "weight": 19.011181464058666
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 198,
    "source": "caviar",
    "target": "enokidake",
    "weight": 28.28581521916557
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 199,
    "source": "caviar",
    "target": "fish",
    "weight": 9.101593182237181
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 200,
    "source": "caviar",
    "target": "katsuobushi",
    "weight": 4.3046352461209985
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 201,
    "source": "caviar",
    "target": "mackerel",
    "weight": 13.670004293810843
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 202,
    "source": "caviar",
    "target": "pork",
    "weight": 15.482261028296683
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 203,
    "source": "caviar",
    "target": "sardine",
    "weight": 106.62921546961326
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 204,
    "source": "caviar",
    "target": "shiitake",
    "weight": 106.62921546961326
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 206,
    "source": "caviar",
    "target": "soybean",
    "weight": 2.535630481224167
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 207,
    "source": "caviar",
    "target": "tuna",
    "weight": 38.898543268172865
  }, {
    "group_id_s": 7,
    "group_id_t": 2,
    "name": 217,
    "source": "cheddar_cheese",
    "target": "chicken",
    "weight": 8.648566136142167
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 218,
    "source": "cheddar_cheese",
    "target": "cod",
    "weight": 21.284690185134608
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 222,
    "source": "cheddar_cheese",
    "target": "enokidake",
    "weight": 31.668458623263955
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 224,
    "source": "cheddar_cheese",
    "target": "fish",
    "weight": 10.190034293307612
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 227,
    "source": "cheddar_cheese",
    "target": "katsuobushi",
    "weight": 4.819417864529484
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 228,
    "source": "cheddar_cheese",
    "target": "mackerel",
    "weight": 15.304772445273723
  }, {
    "group_id_s": 7,
    "group_id_t": 2,
    "name": 232,
    "source": "cheddar_cheese",
    "target": "pork",
    "weight": 17.333753295431784
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 236,
    "source": "cheddar_cheese",
    "target": "sardine",
    "weight": 119.38078757732052
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 237,
    "source": "cheddar_cheese",
    "target": "shiitake",
    "weight": 119.38078757732052
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 238,
    "source": "cheddar_cheese",
    "target": "soybean",
    "weight": 2.8388613994807557
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 240,
    "source": "cheddar_cheese",
    "target": "tuna",
    "weight": 43.55034134419107
  }, {
    "group_id_s": 7,
    "group_id_t": 2,
    "name": 241,
    "source": "cheese",
    "target": "chicken",
    "weight": 30.86437839764024
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 242,
    "source": "cheese",
    "target": "cod",
    "weight": 75.95926557180402
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 245,
    "source": "cheese",
    "target": "enokidake",
    "weight": 113.01610866265852
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 247,
    "source": "cheese",
    "target": "fish",
    "weight": 36.36545866247704
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 250,
    "source": "cheese",
    "target": "katsuobushi",
    "weight": 17.199190511542632
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 251,
    "source": "cheese",
    "target": "mackerel",
    "weight": 54.61856689361172
  }, {
    "group_id_s": 7,
    "group_id_t": 2,
    "name": 255,
    "source": "cheese",
    "target": "pork",
    "weight": 61.85944725864043
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 259,
    "source": "cheese",
    "target": "sardine",
    "weight": 426.03753537789464
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 260,
    "source": "cheese",
    "target": "shiitake",
    "weight": 426.03753537789464
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 261,
    "source": "cheese",
    "target": "soybean",
    "weight": 10.131123595837213
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 263,
    "source": "cheese",
    "target": "tuna",
    "weight": 155.41931384166892
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 264,
    "source": "chicken",
    "target": "chive",
    "weight": 2.589455794418467
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 265,
    "source": "chicken",
    "target": "clam",
    "weight": 18.64522791602401
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 266,
    "source": "chicken",
    "target": "cod",
    "weight": 13.183217780218376
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 267,
    "source": "chicken",
    "target": "coffee",
    "weight": 2.553355126354149
  }, {
    "group_id_s": 2,
    "group_id_t": 13,
    "name": 269,
    "source": "chicken",
    "target": "egg",
    "weight": 2.1712897226734476
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 270,
    "source": "chicken",
    "target": "enokidake",
    "weight": 19.614670599523365
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 271,
    "source": "chicken",
    "target": "fish",
    "weight": 6.311458616879009
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 272,
    "source": "chicken",
    "target": "garlic",
    "weight": 18.541091373530783
  }, {
    "group_id_s": 2,
    "group_id_t": 9,
    "name": 273,
    "source": "chicken",
    "target": "ginger",
    "weight": 1.6508384247461931
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 274,
    "source": "chicken",
    "target": "grapefruit",
    "weight": 2.490178957241592
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 275,
    "source": "chicken",
    "target": "green_tea",
    "weight": 23.067559753902994
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 276,
    "source": "chicken",
    "target": "katsuobushi",
    "weight": 2.9850298373777036
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 277,
    "source": "chicken",
    "target": "mackerel",
    "weight": 9.479402634840506
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 278,
    "source": "chicken",
    "target": "mandarin",
    "weight": 1.2537310760386924
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 279,
    "source": "chicken",
    "target": "melon",
    "weight": 8.762670033416887
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 280,
    "source": "chicken",
    "target": "mushroom",
    "weight": 14.565852424756047
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 281,
    "source": "chicken",
    "target": "onion",
    "weight": 2.9534708640670098
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 282,
    "source": "chicken",
    "target": "orange",
    "weight": 2.047945773453694
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 283,
    "source": "chicken",
    "target": "porcini",
    "weight": 10.233772257037854
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 284,
    "source": "chicken",
    "target": "pork",
    "weight": 10.736103868772847
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 286,
    "source": "chicken",
    "target": "potato",
    "weight": 3.667060736138367
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 289,
    "source": "chicken",
    "target": "salmon",
    "weight": 2.223936530267245
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 290,
    "source": "chicken",
    "target": "sardine",
    "weight": 73.94154707992767
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 291,
    "source": "chicken",
    "target": "shiitake",
    "weight": 73.94154707992767
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 292,
    "source": "chicken",
    "target": "soybean",
    "weight": 4.79610912984992
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 293,
    "source": "chicken",
    "target": "strawberry",
    "weight": 1.4161840823281244
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 294,
    "source": "chicken",
    "target": "tomato",
    "weight": 14.136254474790656
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 295,
    "source": "chicken",
    "target": "tuna",
    "weight": 26.974018853433837
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 296,
    "source": "chive",
    "target": "cod",
    "weight": 6.372821050875836
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 297,
    "source": "chive",
    "target": "enokidake",
    "weight": 9.48181148082098
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 298,
    "source": "chive",
    "target": "fish",
    "weight": 3.0509847448421636
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 299,
    "source": "chive",
    "target": "katsuobushi",
    "weight": 1.4429755543959462
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 301,
    "source": "chive",
    "target": "mackerel",
    "weight": 4.582381757486127
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 303,
    "source": "chive",
    "target": "pork",
    "weight": 5.189876241138131
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 304,
    "source": "chive",
    "target": "sardine",
    "weight": 35.74364435307722
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 305,
    "source": "chive",
    "target": "shiitake",
    "weight": 35.74364435307722
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 306,
    "source": "chive",
    "target": "soybean",
    "weight": 0.8499797521020569
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 307,
    "source": "chive",
    "target": "tuna",
    "weight": 13.039350334773683
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 322,
    "source": "clam",
    "target": "cod",
    "weight": 45.887132430581026
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 323,
    "source": "clam",
    "target": "enokidake",
    "weight": 68.2732396891075
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 324,
    "source": "clam",
    "target": "fish",
    "weight": 21.968440650159803
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 325,
    "source": "clam",
    "target": "katsuobushi",
    "weight": 10.390062710070582
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 326,
    "source": "clam",
    "target": "mackerel",
    "weight": 32.99517699847325
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 327,
    "source": "clam",
    "target": "pork",
    "weight": 37.3694061820082
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 328,
    "source": "clam",
    "target": "sardine",
    "weight": 257.3700609019658
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 329,
    "source": "clam",
    "target": "shiitake",
    "weight": 257.3700609019658
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 330,
    "source": "clam",
    "target": "soybean",
    "weight": 6.120230450007567
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 331,
    "source": "clam",
    "target": "tuna",
    "weight": 93.88909414587587
  }, {
    "group_id_s": 10,
    "group_id_t": 11,
    "name": 336,
    "source": "cod",
    "target": "coffee",
    "weight": 6.283974931978243
  }, {
    "group_id_s": 10,
    "group_id_t": 13,
    "name": 337,
    "source": "cod",
    "target": "egg",
    "weight": 5.343686840312032
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 338,
    "source": "cod",
    "target": "enokidake",
    "weight": 17.900604977838732
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 340,
    "source": "cod",
    "target": "garlic",
    "weight": 45.630845549145654
  }, {
    "group_id_s": 10,
    "group_id_t": 9,
    "name": 341,
    "source": "cod",
    "target": "ginger",
    "weight": 4.062821959538378
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 342,
    "source": "cod",
    "target": "grapefruit",
    "weight": 6.128494223907451
  }, {
    "group_id_s": 10,
    "group_id_t": 11,
    "name": 343,
    "source": "cod",
    "target": "green_tea",
    "weight": 56.77078199553636
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 345,
    "source": "cod",
    "target": "mackerel",
    "weight": 4.129456548711573
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 346,
    "source": "cod",
    "target": "mandarin",
    "weight": 3.0855146516648375
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 347,
    "source": "cod",
    "target": "melon",
    "weight": 21.56550738236451
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 348,
    "source": "cod",
    "target": "mushroom",
    "weight": 35.847520995152834
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 349,
    "source": "cod",
    "target": "onion",
    "weight": 7.268686083093249
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 350,
    "source": "cod",
    "target": "orange",
    "weight": 5.040129267411919
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 351,
    "source": "cod",
    "target": "porcini",
    "weight": 25.185986727441485
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 352,
    "source": "cod",
    "target": "pork",
    "weight": 4.636402050656672
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 353,
    "source": "cod",
    "target": "potato",
    "weight": 9.024877699969034
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 354,
    "source": "cod",
    "target": "salmon",
    "weight": 5.473254097037691
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 356,
    "source": "cod",
    "target": "shiitake",
    "weight": 87.30052960172227
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 358,
    "source": "cod",
    "target": "soybean",
    "weight": 11.803540068491301
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 359,
    "source": "cod",
    "target": "strawberry",
    "weight": 3.4853221867040127
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 360,
    "source": "cod",
    "target": "tomato",
    "weight": 34.79025218027146
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 361,
    "source": "coffee",
    "target": "enokidake",
    "weight": 9.349621647862495
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 362,
    "source": "coffee",
    "target": "fish",
    "weight": 3.0084497118903535
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 364,
    "source": "coffee",
    "target": "katsuobushi",
    "weight": 1.422858438812642
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 365,
    "source": "coffee",
    "target": "mackerel",
    "weight": 4.5184968890409625
  }, {
    "group_id_s": 11,
    "group_id_t": 2,
    "name": 368,
    "source": "coffee",
    "target": "pork",
    "weight": 5.117522042282887
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 371,
    "source": "coffee",
    "target": "sardine",
    "weight": 35.24532750867275
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 372,
    "source": "coffee",
    "target": "shiitake",
    "weight": 35.24532750867275
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 373,
    "source": "coffee",
    "target": "soybean",
    "weight": 0.8381298348498804
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 375,
    "source": "coffee",
    "target": "tuna",
    "weight": 12.857563389723426
  }, {
    "group_id_s": 13,
    "group_id_t": 3,
    "name": 407,
    "source": "egg",
    "target": "enokidake",
    "weight": 7.950612582385187
  }, {
    "group_id_s": 13,
    "group_id_t": 10,
    "name": 408,
    "source": "egg",
    "target": "fish",
    "weight": 2.5582872798170277
  }, {
    "group_id_s": 13,
    "group_id_t": 10,
    "name": 409,
    "source": "egg",
    "target": "katsuobushi",
    "weight": 1.2099522988893368
  }, {
    "group_id_s": 13,
    "group_id_t": 10,
    "name": 410,
    "source": "egg",
    "target": "mackerel",
    "weight": 3.8423820313296324
  }, {
    "group_id_s": 13,
    "group_id_t": 2,
    "name": 411,
    "source": "egg",
    "target": "pork",
    "weight": 4.351773437731547
  }, {
    "group_id_s": 13,
    "group_id_t": 10,
    "name": 413,
    "source": "egg",
    "target": "sardine",
    "weight": 29.971474238725428
  }, {
    "group_id_s": 13,
    "group_id_t": 3,
    "name": 414,
    "source": "egg",
    "target": "shiitake",
    "weight": 29.971474238725428
  }, {
    "group_id_s": 13,
    "group_id_t": 3,
    "name": 415,
    "source": "egg",
    "target": "soybean",
    "weight": 0.7127182105976787
  }, {
    "group_id_s": 13,
    "group_id_t": 10,
    "name": 416,
    "source": "egg",
    "target": "tuna",
    "weight": 10.933651554608197
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 418,
    "source": "enokidake",
    "target": "fish",
    "weight": 8.569905270339554
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 419,
    "source": "enokidake",
    "target": "garlic",
    "weight": 67.8919228632657
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 420,
    "source": "enokidake",
    "target": "ginger",
    "weight": 6.044875823900353
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 421,
    "source": "enokidake",
    "target": "grapefruit",
    "weight": 9.118289440185142
  }, {
    "group_id_s": 3,
    "group_id_t": 11,
    "name": 422,
    "source": "enokidake",
    "target": "green_tea",
    "weight": 84.46649422652199
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 423,
    "source": "enokidake",
    "target": "katsuobushi",
    "weight": 4.0531713013296935
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 424,
    "source": "enokidake",
    "target": "mackerel",
    "weight": 12.871443438246283
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 425,
    "source": "enokidake",
    "target": "mandarin",
    "weight": 4.590787661357011
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 427,
    "source": "enokidake",
    "target": "melon",
    "weight": 32.08627291672203
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 428,
    "source": "enokidake",
    "target": "mushroom",
    "weight": 53.335788564798605
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 429,
    "source": "enokidake",
    "target": "onion",
    "weight": 10.814725629819044
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 430,
    "source": "enokidake",
    "target": "orange",
    "weight": 7.4989639864436946
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 431,
    "source": "enokidake",
    "target": "porcini",
    "weight": 37.473008609780315
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 432,
    "source": "enokidake",
    "target": "pork",
    "weight": 14.577833542606125
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 433,
    "source": "enokidake",
    "target": "potato",
    "weight": 13.427677994631777
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 434,
    "source": "enokidake",
    "target": "salmon",
    "weight": 8.14338942211631
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 435,
    "source": "enokidake",
    "target": "sardine",
    "weight": 100.40025491455737
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 436,
    "source": "enokidake",
    "target": "shiitake",
    "weight": 129.89022557688162
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 437,
    "source": "enokidake",
    "target": "soybean",
    "weight": 17.561915020408414
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 438,
    "source": "enokidake",
    "target": "strawberry",
    "weight": 5.185641909670195
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 439,
    "source": "enokidake",
    "target": "tomato",
    "weight": 51.76272955259262
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 440,
    "source": "enokidake",
    "target": "tuna",
    "weight": 36.626206455044645
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 448,
    "source": "fish",
    "target": "garlic",
    "weight": 21.845743439721886
  }, {
    "group_id_s": 10,
    "group_id_t": 9,
    "name": 449,
    "source": "fish",
    "target": "ginger",
    "weight": 1.945073888095096
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 450,
    "source": "fish",
    "target": "grapefruit",
    "weight": 2.934013404224685
  }, {
    "group_id_s": 10,
    "group_id_t": 11,
    "name": 451,
    "source": "fish",
    "target": "green_tea",
    "weight": 27.178982186756567
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 454,
    "source": "fish",
    "target": "mackerel",
    "weight": 1.9769751628089536
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 455,
    "source": "fish",
    "target": "mandarin",
    "weight": 1.4771885256251827
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 456,
    "source": "fish",
    "target": "melon",
    "weight": 10.32447537960173
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 457,
    "source": "fish",
    "target": "mushroom",
    "weight": 17.161981926605236
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 458,
    "source": "fish",
    "target": "onion",
    "weight": 3.4798796604395847
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 459,
    "source": "fish",
    "target": "orange",
    "weight": 2.4129592505650095
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 460,
    "source": "fish",
    "target": "porcini",
    "weight": 12.057777972387997
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 461,
    "source": "fish",
    "target": "pork",
    "weight": 2.2196750567104595
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 462,
    "source": "fish",
    "target": "potato",
    "weight": 4.320655478453702
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 463,
    "source": "fish",
    "target": "salmon",
    "weight": 2.620317536205085
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 465,
    "source": "fish",
    "target": "shiitake",
    "weight": 41.795082884822385
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 467,
    "source": "fish",
    "target": "soybean",
    "weight": 5.650938634021569
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 468,
    "source": "fish",
    "target": "strawberry",
    "weight": 1.6685961739083288
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 469,
    "source": "fish",
    "target": "tomato",
    "weight": 16.655815034478692
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 472,
    "source": "garlic",
    "target": "katsuobushi",
    "weight": 10.332032568964896
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 473,
    "source": "garlic",
    "target": "mackerel",
    "weight": 32.81089372411219
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 475,
    "source": "garlic",
    "target": "pork",
    "weight": 37.16069214684884
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 477,
    "source": "garlic",
    "target": "sardine",
    "weight": 255.9326084661837
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 478,
    "source": "garlic",
    "target": "shiitake",
    "weight": 255.9326084661837
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 479,
    "source": "garlic",
    "target": "soybean",
    "weight": 6.086047996395518
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 480,
    "source": "garlic",
    "target": "tuna",
    "weight": 93.36470872746166
  }, {
    "group_id_s": 9,
    "group_id_t": 10,
    "name": 481,
    "source": "ginger",
    "target": "katsuobushi",
    "weight": 0.9199305492300315
  }, {
    "group_id_s": 9,
    "group_id_t": 10,
    "name": 482,
    "source": "ginger",
    "target": "mackerel",
    "weight": 2.921375177911838
  }, {
    "group_id_s": 9,
    "group_id_t": 2,
    "name": 485,
    "source": "ginger",
    "target": "pork",
    "weight": 3.308667070901769
  }, {
    "group_id_s": 9,
    "group_id_t": 10,
    "name": 487,
    "source": "ginger",
    "target": "sardine",
    "weight": 22.787406398560965
  }, {
    "group_id_s": 9,
    "group_id_t": 3,
    "name": 489,
    "source": "ginger",
    "target": "shiitake",
    "weight": 22.787406398560965
  }, {
    "group_id_s": 9,
    "group_id_t": 3,
    "name": 490,
    "source": "ginger",
    "target": "soybean",
    "weight": 0.5418819035454672
  }, {
    "group_id_s": 9,
    "group_id_t": 10,
    "name": 491,
    "source": "ginger",
    "target": "tuna",
    "weight": 8.312889763466979
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 497,
    "source": "grapefruit",
    "target": "katsuobushi",
    "weight": 1.3876534865418588
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 498,
    "source": "grapefruit",
    "target": "mackerel",
    "weight": 4.406698369261923
  }, {
    "group_id_s": 1,
    "group_id_t": 2,
    "name": 500,
    "source": "grapefruit",
    "target": "pork",
    "weight": 4.990902194286208
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 501,
    "source": "grapefruit",
    "target": "sardine",
    "weight": 34.373273030964924
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 502,
    "source": "grapefruit",
    "target": "shiitake",
    "weight": 34.373273030964924
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 503,
    "source": "grapefruit",
    "target": "soybean",
    "weight": 0.8173924796585713
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 504,
    "source": "grapefruit",
    "target": "tuna",
    "weight": 12.539436235885473
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 508,
    "source": "green_tea",
    "target": "katsuobushi",
    "weight": 12.854409369025372
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 509,
    "source": "green_tea",
    "target": "mackerel",
    "weight": 40.82107338300596
  }, {
    "group_id_s": 11,
    "group_id_t": 2,
    "name": 511,
    "source": "green_tea",
    "target": "pork",
    "weight": 46.23279554177567
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 512,
    "source": "green_tea",
    "target": "sardine",
    "weight": 318.4138743415136
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 513,
    "source": "green_tea",
    "target": "shiitake",
    "weight": 318.4138743415136
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 514,
    "source": "green_tea",
    "target": "soybean",
    "weight": 7.571845313399191
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 515,
    "source": "green_tea",
    "target": "tuna",
    "weight": 116.15799491453247
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 524,
    "source": "katsuobushi",
    "target": "mackerel",
    "weight": 0.9350183859175099
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 525,
    "source": "katsuobushi",
    "target": "mandarin",
    "weight": 0.698642277813683
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 526,
    "source": "katsuobushi",
    "target": "melon",
    "weight": 4.883002319141
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 527,
    "source": "katsuobushi",
    "target": "mushroom",
    "weight": 8.116828649157185
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 528,
    "source": "katsuobushi",
    "target": "onion",
    "weight": 1.6458231365275993
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 529,
    "source": "katsuobushi",
    "target": "orange",
    "weight": 1.14121882064638
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 530,
    "source": "katsuobushi",
    "target": "porcini",
    "weight": 5.702774779160655
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 531,
    "source": "katsuobushi",
    "target": "pork",
    "weight": 1.0498042807163646
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 532,
    "source": "katsuobushi",
    "target": "potato",
    "weight": 2.043471454557583
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 533,
    "source": "katsuobushi",
    "target": "salmon",
    "weight": 1.239289759114989
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 534,
    "source": "katsuobushi",
    "target": "shiitake",
    "weight": 19.76715321133835
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 535,
    "source": "katsuobushi",
    "target": "soybean",
    "weight": 2.672634244425428
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 536,
    "source": "katsuobushi",
    "target": "strawberry",
    "weight": 0.7891692979385528
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 537,
    "source": "katsuobushi",
    "target": "tomato",
    "weight": 7.877434973715861
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 555,
    "source": "mackerel",
    "target": "mandarin",
    "weight": 2.2186416250150236
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 556,
    "source": "mackerel",
    "target": "melon",
    "weight": 15.506694261609336
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 557,
    "source": "mackerel",
    "target": "mushroom",
    "weight": 25.776186864169606
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 558,
    "source": "mackerel",
    "target": "onion",
    "weight": 5.226554180974874
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 559,
    "source": "mackerel",
    "target": "orange",
    "weight": 3.624108730808653
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 560,
    "source": "mackerel",
    "target": "porcini",
    "weight": 18.110002650749806
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 561,
    "source": "mackerel",
    "target": "pork",
    "weight": 3.362932720043203
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 562,
    "source": "mackerel",
    "target": "potato",
    "weight": 6.489345080574301
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 563,
    "source": "mackerel",
    "target": "salmon",
    "weight": 3.935547464478831
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 564,
    "source": "mackerel",
    "target": "sardine",
    "weight": 23.16114403186432
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 565,
    "source": "mackerel",
    "target": "shiitake",
    "weight": 62.77351130247577
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 566,
    "source": "mackerel",
    "target": "soybean",
    "weight": 8.487344341196835
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 567,
    "source": "mackerel",
    "target": "strawberry",
    "weight": 2.506123533018265
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 568,
    "source": "mackerel",
    "target": "tomato",
    "weight": 25.015956929672143
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 569,
    "source": "mackerel",
    "target": "tuna",
    "weight": 8.449229972254674
  }, {
    "group_id_s": 1,
    "group_id_t": 2,
    "name": 572,
    "source": "mandarin",
    "target": "pork",
    "weight": 2.5127708834940785
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 573,
    "source": "mandarin",
    "target": "sardine",
    "weight": 17.305921110111782
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 574,
    "source": "mandarin",
    "target": "shiitake",
    "weight": 17.305921110111782
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 575,
    "source": "mandarin",
    "target": "soybean",
    "weight": 0.4115328137715255
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 577,
    "source": "mandarin",
    "target": "tuna",
    "weight": 6.313233367914144
  }, {
    "group_id_s": 1,
    "group_id_t": 2,
    "name": 580,
    "source": "melon",
    "target": "pork",
    "weight": 17.56244424538497
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 581,
    "source": "melon",
    "target": "sardine",
    "weight": 120.9558247462418
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 582,
    "source": "melon",
    "target": "shiitake",
    "weight": 120.9558247462418
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 583,
    "source": "melon",
    "target": "soybean",
    "weight": 2.8763156022242424
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 585,
    "source": "melon",
    "target": "tuna",
    "weight": 44.12491793836778
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 598,
    "source": "mushroom",
    "target": "pork",
    "weight": 29.19338171136555
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 599,
    "source": "mushroom",
    "target": "sardine",
    "weight": 201.06025748426057
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 600,
    "source": "mushroom",
    "target": "shiitake",
    "weight": 201.06025748426057
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 601,
    "source": "mushroom",
    "target": "soybean",
    "weight": 4.781189800511619
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 602,
    "source": "mushroom",
    "target": "tuna",
    "weight": 73.34716935519674
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 608,
    "source": "onion",
    "target": "pork",
    "weight": 5.919447746261849
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 610,
    "source": "onion",
    "target": "sardine",
    "weight": 40.76833920082231
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 612,
    "source": "onion",
    "target": "shiitake",
    "weight": 40.76833920082231
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 613,
    "source": "onion",
    "target": "soybean",
    "weight": 0.9694664177281702
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 614,
    "source": "onion",
    "target": "tuna",
    "weight": 14.872368697363786
  }, {
    "group_id_s": 1,
    "group_id_t": 2,
    "name": 617,
    "source": "orange",
    "target": "pork",
    "weight": 4.104563258309461
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 618,
    "source": "orange",
    "target": "sardine",
    "weight": 28.268891687010154
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 619,
    "source": "orange",
    "target": "shiitake",
    "weight": 28.268891687010154
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 620,
    "source": "orange",
    "target": "soybean",
    "weight": 0.672230993319409
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 623,
    "source": "orange",
    "target": "tuna",
    "weight": 10.312546159019817
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 640,
    "source": "porcini",
    "target": "pork",
    "weight": 20.51087784873619
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 641,
    "source": "porcini",
    "target": "sardine",
    "weight": 141.262236155724
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 642,
    "source": "porcini",
    "target": "shiitake",
    "weight": 141.262236155724
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 643,
    "source": "porcini",
    "target": "soybean",
    "weight": 3.3591997302504355
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 644,
    "source": "porcini",
    "target": "tuna",
    "weight": 51.53273594916578
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 646,
    "source": "pork",
    "target": "potato",
    "weight": 7.349649076967184
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 649,
    "source": "pork",
    "target": "salmon",
    "weight": 4.457289977728778
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 650,
    "source": "pork",
    "target": "sardine",
    "weight": 26.004481320525127
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 651,
    "source": "pork",
    "target": "shiitake",
    "weight": 71.09550712340912
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 652,
    "source": "pork",
    "target": "soybean",
    "weight": 9.61252664616496
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 653,
    "source": "pork",
    "target": "strawberry",
    "weight": 2.838364778342679
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 654,
    "source": "pork",
    "target": "tomato",
    "weight": 28.332366744988136
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 655,
    "source": "pork",
    "target": "tuna",
    "weight": 9.486484894012028
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 662,
    "source": "potato",
    "target": "sardine",
    "weight": 50.61840215855069
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 663,
    "source": "potato",
    "target": "shiitake",
    "weight": 50.61840215855069
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 664,
    "source": "potato",
    "target": "soybean",
    "weight": 1.2036997820795259
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 665,
    "source": "potato",
    "target": "tuna",
    "weight": 18.46569064452388
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 682,
    "source": "salmon",
    "target": "sardine",
    "weight": 30.698186303481943
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 683,
    "source": "salmon",
    "target": "shiitake",
    "weight": 30.698186303481943
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 685,
    "source": "salmon",
    "target": "soybean",
    "weight": 0.7299993399237695
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 686,
    "source": "salmon",
    "target": "tuna",
    "weight": 11.198757516139823
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 687,
    "source": "sardine",
    "target": "shiitake",
    "weight": 489.648
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 689,
    "source": "sardine",
    "target": "soybean",
    "weight": 66.20326146730052
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 690,
    "source": "sardine",
    "target": "strawberry",
    "weight": 19.548346909931904
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 691,
    "source": "sardine",
    "target": "tomato",
    "weight": 195.13028703584735
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 695,
    "source": "shiitake",
    "target": "soybean",
    "weight": 66.20326146730052
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 696,
    "source": "shiitake",
    "target": "strawberry",
    "weight": 19.548346909931904
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 697,
    "source": "shiitake",
    "target": "tomato",
    "weight": 195.13028703584735
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 698,
    "source": "shiitake",
    "target": "tuna",
    "weight": 178.62453390742732
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 699,
    "source": "soybean",
    "target": "strawberry",
    "weight": 0.4648574414063198
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 700,
    "source": "soybean",
    "target": "tomato",
    "weight": 4.640175785210718
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 701,
    "source": "soybean",
    "target": "tuna",
    "weight": 24.151077350970695
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 702,
    "source": "strawberry",
    "target": "tuna",
    "weight": 7.131274620640303
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 704,
    "source": "tomato",
    "target": "tuna",
    "weight": 71.18390470909866
  }],
  "nodes": [{
    "group_id": 0,
    "name": "orange_peel",
    "size": 1.0124252185918086,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "cherry",
    "size": 1.9186519876809798,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "roasted_pork",
    "size": 0.22124676979716093,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "matsutake",
    "size": 0.09911855286912812,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "orange_juice",
    "size": 3.008956069241389,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "rye_bread",
    "size": 0.16106764841233318,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "white_wine",
    "size": 3.8337640270452047,
    "umami": 0
  }, {
    "group_id": 6,
    "name": "fennel",
    "size": 1.6053665616482,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "pineapple",
    "size": 2.860278239937697,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "chicken",
    "size": 9.370243194449362,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "porcini",
    "size": 0.18761726078799248,
    "umami": 1
  }, {
    "group_id": 7,
    "name": "milk",
    "size": 22.823816772275123,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "raw_beef",
    "size": 0.003539948316754575,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "grape",
    "size": 0.6106410846401643,
    "umami": 0
  }, {
    "group_id": 8,
    "name": "peanut",
    "size": 0.8017982937449113,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "cayenne",
    "size": 14.071294559099437,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "cognac",
    "size": 0.116818294452901,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "melon",
    "size": 0.27788594286523416,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "mung_bean",
    "size": 0.033629509009168466,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "rice",
    "size": 6.009062267690892,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "mackerel",
    "size": 0.07787886296860065,
    "umami": 1
  }, {
    "group_id": 9,
    "name": "thai_pepper",
    "size": 0.15398775177882404,
    "umami": 0
  }, {
    "group_id": 11,
    "name": "coffee",
    "size": 1.267301497398138,
    "umami": 1
  }, {
    "group_id": 1,
    "name": "citrus",
    "size": 0.28850578781549785,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "lima_bean",
    "size": 0.2637261495982159,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "black_pepper",
    "size": 17.26078799249531,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "bean",
    "size": 3.3682608233919784,
    "umami": 1
  }, {
    "group_id": 11,
    "name": "peanut_butter",
    "size": 1.7611242875854014,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "kidney_bean",
    "size": 0.7823285780027611,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "apple_brandy",
    "size": 0.06548904385995964,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "bread",
    "size": 8.05869234309179,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "juniper_berry",
    "size": 0.0584091472264505,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "clam",
    "size": 0.8159580870119296,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "onion",
    "size": 31.914404049700874,
    "umami": 1
  }, {
    "group_id": 5,
    "name": "cider",
    "size": 1.9823710573825624,
    "umami": 0
  }, {
    "group_id": 0,
    "name": "citrus_peel",
    "size": 0.00707989663350915,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "eel",
    "size": 0.03539948316754576,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "nutmeg",
    "size": 4.4461750858437465,
    "umami": 0
  }, {
    "group_id": 6,
    "name": "rosemary",
    "size": 3.3452511593330736,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "vanilla",
    "size": 15.974016779355022,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "pork",
    "size": 3.4762292470529927,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "red_bean",
    "size": 0.0584091472264505,
    "umami": 0
  }, {
    "group_id": 11,
    "name": "tea",
    "size": 0.17876738999610606,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "fish",
    "size": 3.3257814435909236,
    "umami": 1
  }, {
    "group_id": 2,
    "name": "bacon",
    "size": 3.8160642854614326,
    "umami": 1
  }, {
    "group_id": 12,
    "name": "lavender",
    "size": 0.10973839781939183,
    "umami": 0
  }, {
    "group_id": 6,
    "name": "peppermint",
    "size": 0.2513363304895749,
    "umami": 0
  }, {
    "group_id": 8,
    "name": "black_sesame_seed",
    "size": 0.04601932811780948,
    "umami": 0
  }, {
    "group_id": 6,
    "name": "lemongrass",
    "size": 0.24248645969768842,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "guava",
    "size": 0.02300966405890474,
    "umami": 0
  }, {
    "group_id": 8,
    "name": "roasted_peanut",
    "size": 0.2920457361322525,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "haddock",
    "size": 0.05486919890969592,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "mandarin",
    "size": 0.492052816028886,
    "umami": 1
  }, {
    "group_id": 1,
    "name": "quince",
    "size": 0.04955927643456406,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "bartlett_pear",
    "size": 0.04070940564267762,
    "umami": 0
  }, {
    "group_id": 0,
    "name": "lemon_peel",
    "size": 1.2655315232397606,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "pepper",
    "size": 16.035965874898224,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "rum",
    "size": 1.065524443343127,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "pear",
    "size": 0.8283479061205707,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "champagne_wine",
    "size": 0.1752274416793515,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "raspberry",
    "size": 1.3876597401677935,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "smoked_salmon",
    "size": 0.1716874933625969,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "concord_grape",
    "size": 0.021239689900527454,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "black_bean",
    "size": 0.8389677510708343,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "plum",
    "size": 0.4902828418705087,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "brandy",
    "size": 0.6991397925590287,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "cinnamon",
    "size": 9.917165209387942,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "popcorn",
    "size": 0.1716874933625969,
    "umami": 0
  }, {
    "group_id": 7,
    "name": "cheddar_cheese",
    "size": 5.361251725724804,
    "umami": 1
  }, {
    "group_id": 7,
    "name": "cheese",
    "size": 5.809055187794258,
    "umami": 1
  }, {
    "group_id": 6,
    "name": "marjoram",
    "size": 0.934546355623208,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "apple",
    "size": 4.2797975149562815,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "tabasco_pepper",
    "size": 1.7080250628340825,
    "umami": 0
  }, {
    "group_id": 11,
    "name": "cocoa",
    "size": 8.497645934369357,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "soybean",
    "size": 1.8301532797621156,
    "umami": 1
  }, {
    "group_id": 11,
    "name": "black_tea",
    "size": 0.06725901801833693,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "white_bread",
    "size": 0.6548904385995965,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "herring",
    "size": 0.01769974158377288,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "lime",
    "size": 1.9168820135226023,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "beef",
    "size": 8.53481539169528,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "shiitake",
    "size": 0.9044567949307939,
    "umami": 1
  }, {
    "group_id": 9,
    "name": "anise",
    "size": 0.3947042373181352,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "caviar",
    "size": 0.04601932811780948,
    "umami": 1
  }, {
    "group_id": 2,
    "name": "cured_pork",
    "size": 0.5557718857304683,
    "umami": 0
  }, {
    "group_id": 7,
    "name": "buttermilk",
    "size": 2.8903678006301106,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "beer",
    "size": 0.5363021699883181,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "grapefruit",
    "size": 0.20708697653014269,
    "umami": 1
  }, {
    "group_id": 4,
    "name": "brown_rice",
    "size": 0.596481291373146,
    "umami": 1
  }, {
    "group_id": 6,
    "name": "basil",
    "size": 6.68873234450777,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "roasted_beef",
    "size": 0.3929342631597579,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "kiwi",
    "size": 0.18584728662961522,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "green_bell_pepper",
    "size": 4.562993380296647,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "mushroom",
    "size": 5.871004283337463,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "shallot",
    "size": 2.1009593259938404,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "red_wine",
    "size": 2.4655740026195616,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "tangerine",
    "size": 0.07787886296860065,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "orange",
    "size": 3.0248858366667846,
    "umami": 1
  }, {
    "group_id": 9,
    "name": "ginger",
    "size": 6.75422138836773,
    "umami": 1
  }, {
    "group_id": 1,
    "name": "olive",
    "size": 3.180643562603986,
    "umami": 0
  }, {
    "group_id": 11,
    "name": "lime_peel_oil",
    "size": 0.17699741583772877,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "apricot",
    "size": 1.0973839781939185,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "malt",
    "size": 0.06548904385995964,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "enokidake",
    "size": 0.18761726078799248,
    "umami": 1
  }, {
    "group_id": 1,
    "name": "banana",
    "size": 1.741654571843251,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "strawberry",
    "size": 1.9080321427307163,
    "umami": 1
  }, {
    "group_id": 2,
    "name": "pork_liver",
    "size": 0.00884987079188644,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "whiskey",
    "size": 0.26195617543983857,
    "umami": 0
  }, {
    "group_id": 8,
    "name": "coconut",
    "size": 3.026655810825162,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "mutton",
    "size": 0.0053099224751318634,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "port_wine",
    "size": 0.08672873376048709,
    "umami": 0
  }, {
    "group_id": 13,
    "name": "honey",
    "size": 4.3948458352508055,
    "umami": 0
  }, {
    "group_id": 8,
    "name": "seed",
    "size": 2.3239760699493788,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "red_kidney_bean",
    "size": 0.10442847534425997,
    "umami": 0
  }, {
    "group_id": 6,
    "name": "mint",
    "size": 1.6496159156076322,
    "umami": 0
  }, {
    "group_id": 7,
    "name": "cream",
    "size": 17.968777655846225,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "lamb",
    "size": 0.8354278027540798,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "lemon",
    "size": 5.3913412864172185,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "rhubarb",
    "size": 0.2991256327657616,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "catfish",
    "size": 0.12035824276965557,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "sherry",
    "size": 1.1150837197776913,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "leek",
    "size": 0.7274593790930652,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "bell_pepper",
    "size": 10.349038904032001,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "cranberry",
    "size": 1.6212963290735956,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "salmon",
    "size": 0.7681687847357429,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "chive",
    "size": 2.327516018266133,
    "umami": 1
  }, {
    "group_id": 12,
    "name": "flower",
    "size": 0.053099224751318626,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "garlic",
    "size": 29.90017345746752,
    "umami": 1
  }, {
    "group_id": 11,
    "name": "green_tea",
    "size": 0.0566391730680732,
    "umami": 1
  }, {
    "group_id": 7,
    "name": "mozzarella_cheese",
    "size": 2.283266664306701,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "tuna",
    "size": 0.7840985521611384,
    "umami": 1
  }, {
    "group_id": 1,
    "name": "nectarine",
    "size": 0.08849870791886438,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "pork_sausage",
    "size": 2.410704803709866,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "tomato",
    "size": 17.538673935360542,
    "umami": 1
  }, {
    "group_id": 10,
    "name": "cod",
    "size": 0.3079755035576481,
    "umami": 1
  }, {
    "group_id": 6,
    "name": "tarragon",
    "size": 0.842507699387589,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "potato",
    "size": 6.274558391447485,
    "umami": 1
  }, {
    "group_id": 7,
    "name": "feta_cheese",
    "size": 1.0991539523522955,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "cabernet_sauvignon_wine",
    "size": 0.03008956069241389,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "wheat_bread",
    "size": 0.14690785514531488,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "muscat_grape",
    "size": 0.0017699741583772875,
    "umami": 0
  }, {
    "group_id": 11,
    "name": "coconut_oil",
    "size": 0.03008956069241389,
    "umami": 0
  }, {
    "group_id": 13,
    "name": "egg",
    "size": 37.08272859216255,
    "umami": 1
  }, {
    "group_id": 5,
    "name": "wine",
    "size": 1.5522673368968813,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "katsuobushi",
    "size": 0.08672873376049997,
    "umami": 1
  }, {
    "group_id": 10,
    "name": "sardine",
    "size": 0.0,
    "umami": 1
  }]
};
/* harmony default export */ __webpack_exports__["default"] = (umamiData);

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Network__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Network */ "./src/Network.js");
/* harmony import */ var _data_flavor_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data/flavor_data */ "./src/data/flavor_data.js");
/* harmony import */ var _data_umami_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data/umami_data */ "./src/data/umami_data.js");




(function () {
  // mobile check
  var isSp = navigator.userAgent.indexOf('iPhone') > 0 || navigator.userAgent.indexOf('iPad') > 0 || navigator.userAgent.indexOf('iPod') > 0 || navigator.userAgent.indexOf('Android') > 0;
  console.log(isSp);
  var network = new _Network__WEBPACK_IMPORTED_MODULE_0__["default"](_data_flavor_data__WEBPACK_IMPORTED_MODULE_1__["default"], _data_umami_data__WEBPACK_IMPORTED_MODULE_2__["default"], isSp, '#graph');
  network.setLegend();
  network.render();
  network.setMouseAction(); // const network2 = new Network(flavorData, umamiData, isSp, '#graph2');
  // network2.setLegend();
  // network2.render();
  // network2.setMouseAction();

  var dataTypeSelector = document.getElementById('dataType');

  dataTypeSelector.onchange = function () {
    var selectedType = this.options[this.selectedIndex].value;
    network.update(selectedType);
    network.setMouseAction();
    document.getElementById('h1').textContent = selectedType + ' Network';
  };
})();

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2FzY2VuZGluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2Jpc2VjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2Jpc2VjdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9jcm9zcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2Rlc2NlbmRpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9kZXZpYXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9leHRlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9oaXN0b2dyYW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9pZGVudGl0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvbWF4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvbWVhbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL21lZGlhbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL21lcmdlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvbWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvbnVtYmVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvcGFpcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9wZXJtdXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvcXVhbnRpbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9yYW5nZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3NjYW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9zaHVmZmxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvc3VtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvdGhyZXNob2xkL2ZyZWVkbWFuRGlhY29uaXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy90aHJlc2hvbGQvc2NvdHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy90aHJlc2hvbGQvc3R1cmdlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3RpY2tzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvdHJhbnNwb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvdmFyaWFuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy96aXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWF4aXMvc3JjL2FycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1heGlzL3NyYy9heGlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1heGlzL3NyYy9pZGVudGl0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXhpcy9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWJydXNoL3NyYy9icnVzaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYnJ1c2gvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1icnVzaC9zcmMvZXZlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWJydXNoL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYnJ1c2gvc3JjL25vZXZlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNob3JkL3NyYy9hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY2hvcmQvc3JjL2Nob3JkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jaG9yZC9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNob3JkL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY2hvcmQvc3JjL21hdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNob3JkL3NyYy9yaWJib24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbGxlY3Rpb24vc3JjL2VudHJpZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbGxlY3Rpb24vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb2xsZWN0aW9uL3NyYy9rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb2xsZWN0aW9uL3NyYy9tYXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbGxlY3Rpb24vc3JjL25lc3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbGxlY3Rpb24vc3JjL3NldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29sbGVjdGlvbi9zcmMvdmFsdWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb2xvci9zcmMvY29sb3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbG9yL3NyYy9jdWJlaGVsaXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbG9yL3NyYy9kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbG9yL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29sb3Ivc3JjL2xhYi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29sb3Ivc3JjL21hdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2FyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2FycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb250b3VyL3NyYy9hc2NlbmRpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2JsdXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb250b3VyL3NyYy9jb250YWlucy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29udG91ci9zcmMvY29udG91cnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2RlbnNpdHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb250b3VyL3NyYy9ub29wLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kaXNwYXRjaC9zcmMvZGlzcGF0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWRpc3BhdGNoL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZHJhZy9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWRyYWcvc3JjL2RyYWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWRyYWcvc3JjL2V2ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kcmFnL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZHJhZy9zcmMvbm9kcmFnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kcmFnL3NyYy9ub2V2ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kc3Yvc3JjL2F1dG9UeXBlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kc3Yvc3JjL2Nzdi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZHN2L3NyYy9kc3YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWRzdi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWRzdi9zcmMvdHN2LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9iYWNrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9ib3VuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2NpcmNsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvY3ViaWMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2VsYXN0aWMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2V4cC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2xpbmVhci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvcG9seS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvcXVhZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvc2luLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mZXRjaC9zcmMvYmxvYi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL2J1ZmZlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL2Rzdi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL2ltYWdlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mZXRjaC9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZldGNoL3NyYy9qc29uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mZXRjaC9zcmMvdGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL3htbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9yY2Uvc3JjL2NlbnRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9yY2Uvc3JjL2NvbGxpZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcmNlL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9yY2Uvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvamlnZ2xlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvbGluay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9yY2Uvc3JjL21hbnlCb2R5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvcmFkaWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvc2ltdWxhdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9yY2Uvc3JjL3guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcmNlL3NyYy95LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL2RlZmF1bHRMb2NhbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZXhwb25lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0RGVjaW1hbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9mb3JtYXRHcm91cC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9mb3JtYXROdW1lcmFscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9mb3JtYXRQcmVmaXhBdXRvLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL2Zvcm1hdFJvdW5kZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0U3BlY2lmaWVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL2Zvcm1hdFRyaW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0VHlwZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvaWRlbnRpdHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvbG9jYWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL3ByZWNpc2lvbkZpeGVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL3ByZWNpc2lvblByZWZpeC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9wcmVjaXNpb25Sb3VuZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9hZGRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9hcmVhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2JvdW5kcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9jYXJ0ZXNpYW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2VudHJvaWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2lyY2xlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvYW50aW1lcmlkaWFuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvYnVmZmVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvY2lyY2xlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvZXh0ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2xpcC9saW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvcmVjdGFuZ2xlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvcmVqb2luLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NvbXBvc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY29udGFpbnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvZGlzdGFuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvZ3JhdGljdWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2lkZW50aXR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2ludGVycG9sYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2xlbmd0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9tYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL25vb3AuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcGF0aC9hcmVhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvYm91bmRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvY2VudHJvaWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcGF0aC9jb250ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcGF0aC9tZWFzdXJlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvc3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BvaW50RXF1YWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcG9seWdvbkNvbnRhaW5zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vYWxiZXJzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vYWxiZXJzVXNhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vYXppbXV0aGFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vYXppbXV0aGFsRXF1YWxBcmVhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vYXppbXV0aGFsRXF1aWRpc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9jb25pYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2NvbmljQ29uZm9ybWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vY29uaWNFcXVhbEFyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9jb25pY0VxdWlkaXN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vY3lsaW5kcmljYWxFcXVhbEFyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9lcXVhbEVhcnRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vZXF1aXJlY3Rhbmd1bGFyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vZml0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vZ25vbW9uaWMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9pZGVudGl0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vbWVyY2F0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9uYXR1cmFsRWFydGgxLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vb3J0aG9ncmFwaGljLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vcmVzYW1wbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9zdGVyZW9ncmFwaGljLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vdHJhbnN2ZXJzZU1lcmNhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3JvdGF0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3N0cmVhbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy90cmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvYWNjZXNzb3JzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2FycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2NsdXN0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2FuY2VzdG9ycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvY291bnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2Rlc2NlbmRhbnRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9lYWNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9lYWNoQWZ0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2VhY2hCZWZvcmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9sZWF2ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2xpbmtzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9wYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9zb3J0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9zdW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvcGFjay9lbmNsb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3BhY2svaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvcGFjay9zaWJsaW5ncy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9wYXJ0aXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvc3RyYXRpZnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvdHJlZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL2JpbmFyeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL2RpY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvdHJlZW1hcC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL3Jlc3F1YXJpZnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvdHJlZW1hcC9yb3VuZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL3NsaWNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvc2xpY2VEaWNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvc3F1YXJpZnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2Jhc2lzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvYmFzaXNDbG9zZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9jb2xvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvY3ViZWhlbGl4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvZGF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2Rpc2NyZXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvaGNsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvaHNsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvaHVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9sYWIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9udW1iZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9waWVjZXdpc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9xdWFudGl6ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3JnYi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3JvdW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvc3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvdHJhbnNmb3JtL2RlY29tcG9zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3RyYW5zZm9ybS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3RyYW5zZm9ybS9wYXJzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3ZhbHVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvem9vbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcGF0aC9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXBhdGgvc3JjL3BhdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXBvbHlnb24vc3JjL2FyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXBvbHlnb24vc3JjL2NlbnRyb2lkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1wb2x5Z29uL3NyYy9jb250YWlucy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcG9seWdvbi9zcmMvY3Jvc3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXBvbHlnb24vc3JjL2h1bGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXBvbHlnb24vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1wb2x5Z29uL3NyYy9sZW5ndGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9hZGQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9jb3Zlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL2RhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9leHRlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9maW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9xdWFkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvcXVhZHRyZWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9yZW1vdmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9yb290LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvc2l6ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL3Zpc2l0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvdmlzaXRBZnRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL3guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy95LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL2JhdGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL2RlZmF1bHRTb3VyY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvZXhwb25lbnRpYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvaXJ3aW5IYWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL2xvZ05vcm1hbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcmFuZG9tL3NyYy9ub3JtYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvdW5pZm9ybS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9jYXRlZ29yaWNhbC9BY2NlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvRGFyazIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvUGFpcmVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2NhdGVnb3JpY2FsL1Bhc3RlbDEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvUGFzdGVsMi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9jYXRlZ29yaWNhbC9TZXQxLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2NhdGVnb3JpY2FsL1NldDIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvU2V0My5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9jYXRlZ29yaWNhbC9jYXRlZ29yeTEwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2NvbG9ycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvQnJCRy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUFJHbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUGlZRy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUHVPci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUmRCdS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUmRHeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUmRZbEJ1LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2RpdmVyZ2luZy9SZFlsR24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvZGl2ZXJnaW5nL1NwZWN0cmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3JhbXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9CdUduLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvQnVQdS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL0duQnUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9PclJkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvUHVCdS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1B1QnVHbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1B1UmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9SZFB1LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvWWxHbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1lsR25CdS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1lsT3JCci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1lsT3JSZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL2N1YmVoZWxpeC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL3JhaW5ib3cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9zaW5lYm93LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvdmlyaWRpcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLXNpbmdsZS9CbHVlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLXNpbmdsZS9HcmVlbnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1zaW5nbGUvR3JleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1zaW5nbGUvT3Jhbmdlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLXNpbmdsZS9QdXJwbGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtc2luZ2xlL1JlZHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2JhbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2NvbnRpbnVvdXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9kaXZlcmdpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9pZGVudGl0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvaW5pdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2xpbmVhci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2xvZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL25pY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9udW1iZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9vcmRpbmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvcG93LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvcXVhbnRpbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9xdWFudGl6ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL3NlcXVlbnRpYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9zZXF1ZW50aWFsUXVhbnRpbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9zeW1sb2cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy90aHJlc2hvbGQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy90aWNrRm9ybWF0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvdGltZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL3V0Y1RpbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL2NyZWF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvbG9jYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvbWF0Y2hlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9tb3VzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9uYW1lc3BhY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvbmFtZXNwYWNlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9wb2ludC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0QWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9hcHBlbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2F0dHIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2NhbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2NsYXNzZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2Nsb25lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9kYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9kYXR1bS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZGlzcGF0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2VhY2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2VtcHR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9lbnRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZXhpdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZmlsdGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9odG1sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vaW5zZXJ0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9qb2luLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9sb3dlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vbWVyZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL25vZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL25vZGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9vbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vb3JkZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3Byb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9yYWlzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vcmVtb3ZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zZWxlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3NlbGVjdEFsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc2l6ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc29ydC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc3BhcnNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zdHlsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vdGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3RvckFsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zb3VyY2VFdmVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy90b3VjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy90b3VjaGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3dpbmRvdy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2FyYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2FyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9hcmVhUmFkaWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2Jhc2lzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvYmFzaXNDbG9zZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9iYXNpc09wZW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9idW5kbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9jYXJkaW5hbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2NhcmRpbmFsQ2xvc2VkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvY2FyZGluYWxPcGVuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvY2F0bXVsbFJvbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2NhdG11bGxSb21DbG9zZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9jYXRtdWxsUm9tT3Blbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2xpbmVhci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2xpbmVhckNsb3NlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL21vbm90b25lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvbmF0dXJhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL3JhZGlhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL3N0ZXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9kZXNjZW5kaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvaWRlbnRpdHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2xpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9saW5lUmFkaWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvbGluay9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL21hdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9ub29wLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb2Zmc2V0L2RpdmVyZ2luZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29mZnNldC9leHBhbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vZmZzZXQvbm9uZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29mZnNldC9zaWxob3VldHRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb2Zmc2V0L3dpZ2dsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29yZGVyL2FwcGVhcmFuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vcmRlci9hc2NlbmRpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vcmRlci9kZXNjZW5kaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb3JkZXIvaW5zaWRlT3V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb3JkZXIvbm9uZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29yZGVyL3JldmVyc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9waWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9wb2ludC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3BvaW50UmFkaWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3RhY2suanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wvY2lyY2xlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3ltYm9sL2Nyb3NzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3ltYm9sL2RpYW1vbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wvc3F1YXJlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3ltYm9sL3N0YXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wvdHJpYW5nbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wvd3llLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lLWZvcm1hdC9zcmMvZGVmYXVsdExvY2FsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS1mb3JtYXQvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lLWZvcm1hdC9zcmMvaXNvRm9ybWF0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lLWZvcm1hdC9zcmMvaXNvUGFyc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUtZm9ybWF0L3NyYy9sb2NhbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL2RheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvZHVyYXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL2hvdXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy9pbnRlcnZhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvbWlsbGlzZWNvbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL21pbnV0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvbW9udGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL3NlY29uZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvdXRjRGF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNIb3VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNNaW51dGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL3V0Y01vbnRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNXZWVrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNZZWFyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy93ZWVrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy95ZWFyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lci9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWVyL3NyYy9pbnRlcnZhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZXIvc3JjL3RpbWVvdXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWVyL3NyYy90aW1lci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvYWN0aXZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvaW50ZXJydXB0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9zZWxlY3Rpb24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3NlbGVjdGlvbi9pbnRlcnJ1cHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3NlbGVjdGlvbi90cmFuc2l0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2F0dHIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vYXR0clR3ZWVuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2RlbGF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2R1cmF0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2Vhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vZW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2ZpbHRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9pbnRlcnBvbGF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9tZXJnZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9vbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9yZW1vdmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc2NoZWR1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc2VsZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3NlbGVjdEFsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zZWxlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc3R5bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc3R5bGVUd2Vlbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi90ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3RyYW5zaXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vdHdlZW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXZvcm9ub2kvc3JjL0JlYWNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy12b3Jvbm9pL3NyYy9DZWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy12b3Jvbm9pL3NyYy9DaXJjbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXZvcm9ub2kvc3JjL0RpYWdyYW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXZvcm9ub2kvc3JjL0VkZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXZvcm9ub2kvc3JjL1JlZEJsYWNrVHJlZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdm9yb25vaS9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXZvcm9ub2kvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy12b3Jvbm9pL3NyYy9wb2ludC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdm9yb25vaS9zcmMvdm9yb25vaS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtem9vbS9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXpvb20vc3JjL2V2ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy16b29tL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtem9vbS9zcmMvbm9ldmVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtem9vbS9zcmMvdHJhbnNmb3JtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy16b29tL3NyYy96b29tLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy9kaXN0L3BhY2thZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pb24tc291bmQvanMvaW9uLnNvdW5kLmpzIiwid2VicGFjazovLy8uL3NyYy9Nb3VzZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvTmV0d29yay5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvVXBkYXRlLmpzIiwid2VicGFjazovLy8uL3NyYy9kYXRhL2ZsYXZvcl9kYXRhLmpzIiwid2VicGFjazovLy8uL3NyYy9kYXRhL3VtYW1pX2RhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbImFycmF5IiwiQXJyYXkiLCJwcm90b3R5cGUiLCJzbGljZSIsIm1hcCIsImEiLCJiIiwiTmFOIiwiYXNjZW5kaW5nQmlzZWN0IiwiYmlzZWN0b3IiLCJhc2NlbmRpbmciLCJiaXNlY3RSaWdodCIsInJpZ2h0IiwiYmlzZWN0TGVmdCIsImxlZnQiLCJjb21wYXJlIiwibGVuZ3RoIiwiYXNjZW5kaW5nQ29tcGFyYXRvciIsIngiLCJsbyIsImhpIiwibWlkIiwiZiIsImQiLCJ2YWx1ZXMwIiwidmFsdWVzMSIsInJlZHVjZSIsIm4wIiwibjEiLCJ2YWx1ZXMiLCJpMCIsImkxIiwiaSIsInZhbHVlMCIsInBhaXIiLCJ2IiwidmFyaWFuY2UiLCJNYXRoIiwic3FydCIsInZhbHVlb2YiLCJuIiwidmFsdWUiLCJtaW4iLCJtYXgiLCJpZGVudGl0eSIsImRvbWFpbiIsImV4dGVudCIsInRocmVzaG9sZCIsInN0dXJnZXMiLCJoaXN0b2dyYW0iLCJkYXRhIiwieHoiLCJ4MCIsIngxIiwidHoiLCJpc0FycmF5IiwidGlja1N0ZXAiLCJyYW5nZSIsImNlaWwiLCJtIiwic2hpZnQiLCJwb3AiLCJiaW5zIiwiYmluIiwiYmlzZWN0IiwicHVzaCIsIl8iLCJhcmd1bWVudHMiLCJjb25zdGFudCIsInRocmVzaG9sZHMiLCJjYWxsIiwic3VtIiwiaXNOYU4iLCJudW1iZXIiLCJudW1iZXJzIiwicXVhbnRpbGUiLCJzb3J0IiwiYXJyYXlzIiwiaiIsIm1lcmdlZCIsInAiLCJwYWlycyIsImluZGV4ZXMiLCJwZXJtdXRlcyIsImZsb29yIiwidmFsdWUxIiwic3RhcnQiLCJzdG9wIiwic3RlcCIsInhpIiwieGoiLCJ0IiwicmFuZG9tIiwicG93IiwiZGV2aWF0aW9uIiwibG9nIiwiTE4yIiwiZTEwIiwiZTUiLCJlMiIsImNvdW50IiwicmV2ZXJzZSIsInRpY2tzIiwidGlja0luY3JlbWVudCIsImlzRmluaXRlIiwicG93ZXIiLCJMTjEwIiwiZXJyb3IiLCJzdGVwMCIsImFicyIsInN0ZXAxIiwibWF0cml4IiwidHJhbnNwb3NlIiwicm93IiwibWVhbiIsImRlbHRhIiwidG9wIiwiYm90dG9tIiwiZXBzaWxvbiIsInRyYW5zbGF0ZVgiLCJ0cmFuc2xhdGVZIiwieSIsInNjYWxlIiwiY2VudGVyIiwib2Zmc2V0IiwiYmFuZHdpZHRoIiwicm91bmQiLCJlbnRlcmluZyIsIl9fYXhpcyIsImF4aXMiLCJvcmllbnQiLCJ0aWNrQXJndW1lbnRzIiwidGlja1ZhbHVlcyIsInRpY2tGb3JtYXQiLCJ0aWNrU2l6ZUlubmVyIiwidGlja1NpemVPdXRlciIsInRpY2tQYWRkaW5nIiwiayIsInRyYW5zZm9ybSIsImNvbnRleHQiLCJhcHBseSIsImZvcm1hdCIsInNwYWNpbmciLCJyYW5nZTAiLCJyYW5nZTEiLCJwb3NpdGlvbiIsImNvcHkiLCJzZWxlY3Rpb24iLCJwYXRoIiwic2VsZWN0QWxsIiwidGljayIsIm9yZGVyIiwidGlja0V4aXQiLCJleGl0IiwidGlja0VudGVyIiwiZW50ZXIiLCJhcHBlbmQiLCJhdHRyIiwibGluZSIsInNlbGVjdCIsInRleHQiLCJtZXJnZSIsImluc2VydCIsInRyYW5zaXRpb24iLCJnZXRBdHRyaWJ1dGUiLCJwYXJlbnROb2RlIiwicmVtb3ZlIiwiZmlsdGVyIiwiZWFjaCIsInRpY2tTaXplIiwiYXhpc1RvcCIsImF4aXNSaWdodCIsImF4aXNCb3R0b20iLCJheGlzTGVmdCIsIk1PREVfRFJBRyIsIm5hbWUiLCJNT0RFX1NQQUNFIiwiTU9ERV9IQU5ETEUiLCJNT0RFX0NFTlRFUiIsIlgiLCJoYW5kbGVzIiwidHlwZSIsImlucHV0IiwiZSIsIm91dHB1dCIsInh5IiwiWSIsIlhZIiwiY3Vyc29ycyIsIm92ZXJsYXkiLCJzIiwidyIsIm53IiwibmUiLCJzZSIsInN3IiwiZmxpcFgiLCJmbGlwWSIsInNpZ25zWCIsInNpZ25zWSIsImRlZmF1bHRGaWx0ZXIiLCJldmVudCIsImJ1dHRvbiIsImRlZmF1bHRFeHRlbnQiLCJzdmciLCJvd25lclNWR0VsZW1lbnQiLCJ3aWR0aCIsImJhc2VWYWwiLCJoZWlnaHQiLCJsb2NhbCIsIm5vZGUiLCJfX2JydXNoIiwiZW1wdHkiLCJicnVzaFNlbGVjdGlvbiIsInN0YXRlIiwiZGltIiwiYnJ1c2hYIiwiYnJ1c2giLCJicnVzaFkiLCJsaXN0ZW5lcnMiLCJkaXNwYXRjaCIsImhhbmRsZVNpemUiLCJ0b3VjaGVuZGluZyIsImdyb3VwIiwicHJvcGVydHkiLCJpbml0aWFsaXplIiwiaGFuZGxlIiwicmVkcmF3Iiwic3R5bGUiLCJvbiIsInN0YXJ0ZWQiLCJtb3ZlIiwiZW1pdHRlciIsImJlZm9yZXN0YXJ0IiwiZW5kIiwidHdlZW4iLCJ0aGF0IiwiZW1pdCIsInNlbGVjdGlvbjAiLCJzZWxlY3Rpb24xIiwiaW50ZXJwb2xhdGUiLCJhcmdzIiwiaW50ZXJydXB0IiwiRW1pdHRlciIsImFjdGl2ZSIsInN0YXJ0aW5nIiwiY3VzdG9tRXZlbnQiLCJCcnVzaEV2ZW50IiwidG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwibm9ldmVudCIsInRhcmdldCIsIl9fZGF0YV9fIiwibW9kZSIsIm1ldGFLZXkiLCJhbHRLZXkiLCJzaWduWCIsInNpZ25ZIiwiVyIsIncwIiwidzEiLCJOIiwiRSIsImUwIiwiZTEiLCJTIiwiczAiLCJzMSIsImR4IiwiZHkiLCJtb3ZpbmciLCJzaGlmdGluZyIsInNoaWZ0S2V5IiwibG9ja1giLCJsb2NrWSIsInBvaW50MCIsIm1vdXNlIiwicG9pbnQiLCJtb3ZlZCIsImVuZGVkIiwidmlldyIsImtleWRvd25lZCIsImtleXVwcGVkIiwiZHJhZ0Rpc2FibGUiLCJub3Byb3BhZ2F0aW9uIiwicG9pbnQxIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImRyYWdFbmFibGUiLCJrZXlDb2RlIiwic3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIiwicHJldmVudERlZmF1bHQiLCJjb21wYXJlVmFsdWUiLCJzb3VyY2UiLCJwYWRBbmdsZSIsInNvcnRHcm91cHMiLCJzb3J0U3ViZ3JvdXBzIiwic29ydENob3JkcyIsImNob3JkIiwiZ3JvdXBTdW1zIiwiZ3JvdXBJbmRleCIsInN1Ymdyb3VwSW5kZXgiLCJjaG9yZHMiLCJncm91cHMiLCJzdWJncm91cHMiLCJmb3JFYWNoIiwidGF1IiwiZGkiLCJkaiIsImEwIiwiYTEiLCJpbmRleCIsInN1YmluZGV4Iiwic3RhcnRBbmdsZSIsImVuZEFuZ2xlIiwiY29zIiwic2luIiwicGkiLCJQSSIsImhhbGZQaSIsImRlZmF1bHRTb3VyY2UiLCJkZWZhdWx0VGFyZ2V0IiwiZGVmYXVsdFJhZGl1cyIsInJhZGl1cyIsImRlZmF1bHRTdGFydEFuZ2xlIiwiZGVmYXVsdEVuZEFuZ2xlIiwicmliYm9uIiwiYnVmZmVyIiwiYXJndiIsInNyIiwic2EwIiwic2ExIiwic3gwIiwic3kwIiwidHIiLCJ0YTAiLCJ0YTEiLCJtb3ZlVG8iLCJhcmMiLCJxdWFkcmF0aWNDdXJ2ZVRvIiwiY2xvc2VQYXRoIiwiZW50cmllcyIsImtleSIsImtleXMiLCJwcmVmaXgiLCJNYXAiLCJjb25zdHJ1Y3RvciIsImhhcyIsImdldCIsInNldCIsImNsZWFyIiwic2l6ZSIsIm9iamVjdCIsIm8iLCJzb3J0S2V5cyIsInNvcnRWYWx1ZXMiLCJyb2xsdXAiLCJuZXN0IiwiZGVwdGgiLCJjcmVhdGVSZXN1bHQiLCJzZXRSZXN1bHQiLCJrZXlWYWx1ZSIsInZhbHVlc0J5S2V5IiwicmVzdWx0Iiwic29ydEtleSIsImNyZWF0ZU9iamVjdCIsInNldE9iamVjdCIsImNyZWF0ZU1hcCIsInNldE1hcCIsIlNldCIsInByb3RvIiwiYWRkIiwiQ29sb3IiLCJkYXJrZXIiLCJicmlnaHRlciIsInJlSSIsInJlTiIsInJlUCIsInJlSGV4MyIsInJlSGV4NiIsInJlUmdiSW50ZWdlciIsIlJlZ0V4cCIsInJlUmdiUGVyY2VudCIsInJlUmdiYUludGVnZXIiLCJyZVJnYmFQZXJjZW50IiwicmVIc2xQZXJjZW50IiwicmVIc2xhUGVyY2VudCIsIm5hbWVkIiwiYWxpY2VibHVlIiwiYW50aXF1ZXdoaXRlIiwiYXF1YSIsImFxdWFtYXJpbmUiLCJhenVyZSIsImJlaWdlIiwiYmlzcXVlIiwiYmxhY2siLCJibGFuY2hlZGFsbW9uZCIsImJsdWUiLCJibHVldmlvbGV0IiwiYnJvd24iLCJidXJseXdvb2QiLCJjYWRldGJsdWUiLCJjaGFydHJldXNlIiwiY2hvY29sYXRlIiwiY29yYWwiLCJjb3JuZmxvd2VyYmx1ZSIsImNvcm5zaWxrIiwiY3JpbXNvbiIsImN5YW4iLCJkYXJrYmx1ZSIsImRhcmtjeWFuIiwiZGFya2dvbGRlbnJvZCIsImRhcmtncmF5IiwiZGFya2dyZWVuIiwiZGFya2dyZXkiLCJkYXJra2hha2kiLCJkYXJrbWFnZW50YSIsImRhcmtvbGl2ZWdyZWVuIiwiZGFya29yYW5nZSIsImRhcmtvcmNoaWQiLCJkYXJrcmVkIiwiZGFya3NhbG1vbiIsImRhcmtzZWFncmVlbiIsImRhcmtzbGF0ZWJsdWUiLCJkYXJrc2xhdGVncmF5IiwiZGFya3NsYXRlZ3JleSIsImRhcmt0dXJxdW9pc2UiLCJkYXJrdmlvbGV0IiwiZGVlcHBpbmsiLCJkZWVwc2t5Ymx1ZSIsImRpbWdyYXkiLCJkaW1ncmV5IiwiZG9kZ2VyYmx1ZSIsImZpcmVicmljayIsImZsb3JhbHdoaXRlIiwiZm9yZXN0Z3JlZW4iLCJmdWNoc2lhIiwiZ2FpbnNib3JvIiwiZ2hvc3R3aGl0ZSIsImdvbGQiLCJnb2xkZW5yb2QiLCJncmF5IiwiZ3JlZW4iLCJncmVlbnllbGxvdyIsImdyZXkiLCJob25leWRldyIsImhvdHBpbmsiLCJpbmRpYW5yZWQiLCJpbmRpZ28iLCJpdm9yeSIsImtoYWtpIiwibGF2ZW5kZXIiLCJsYXZlbmRlcmJsdXNoIiwibGF3bmdyZWVuIiwibGVtb25jaGlmZm9uIiwibGlnaHRibHVlIiwibGlnaHRjb3JhbCIsImxpZ2h0Y3lhbiIsImxpZ2h0Z29sZGVucm9keWVsbG93IiwibGlnaHRncmF5IiwibGlnaHRncmVlbiIsImxpZ2h0Z3JleSIsImxpZ2h0cGluayIsImxpZ2h0c2FsbW9uIiwibGlnaHRzZWFncmVlbiIsImxpZ2h0c2t5Ymx1ZSIsImxpZ2h0c2xhdGVncmF5IiwibGlnaHRzbGF0ZWdyZXkiLCJsaWdodHN0ZWVsYmx1ZSIsImxpZ2h0eWVsbG93IiwibGltZSIsImxpbWVncmVlbiIsImxpbmVuIiwibWFnZW50YSIsIm1hcm9vbiIsIm1lZGl1bWFxdWFtYXJpbmUiLCJtZWRpdW1ibHVlIiwibWVkaXVtb3JjaGlkIiwibWVkaXVtcHVycGxlIiwibWVkaXVtc2VhZ3JlZW4iLCJtZWRpdW1zbGF0ZWJsdWUiLCJtZWRpdW1zcHJpbmdncmVlbiIsIm1lZGl1bXR1cnF1b2lzZSIsIm1lZGl1bXZpb2xldHJlZCIsIm1pZG5pZ2h0Ymx1ZSIsIm1pbnRjcmVhbSIsIm1pc3R5cm9zZSIsIm1vY2Nhc2luIiwibmF2YWpvd2hpdGUiLCJuYXZ5Iiwib2xkbGFjZSIsIm9saXZlIiwib2xpdmVkcmFiIiwib3JhbmdlIiwib3JhbmdlcmVkIiwib3JjaGlkIiwicGFsZWdvbGRlbnJvZCIsInBhbGVncmVlbiIsInBhbGV0dXJxdW9pc2UiLCJwYWxldmlvbGV0cmVkIiwicGFwYXlhd2hpcCIsInBlYWNocHVmZiIsInBlcnUiLCJwaW5rIiwicGx1bSIsInBvd2RlcmJsdWUiLCJwdXJwbGUiLCJyZWJlY2NhcHVycGxlIiwicmVkIiwicm9zeWJyb3duIiwicm95YWxibHVlIiwic2FkZGxlYnJvd24iLCJzYWxtb24iLCJzYW5keWJyb3duIiwic2VhZ3JlZW4iLCJzZWFzaGVsbCIsInNpZW5uYSIsInNpbHZlciIsInNreWJsdWUiLCJzbGF0ZWJsdWUiLCJzbGF0ZWdyYXkiLCJzbGF0ZWdyZXkiLCJzbm93Iiwic3ByaW5nZ3JlZW4iLCJzdGVlbGJsdWUiLCJ0YW4iLCJ0ZWFsIiwidGhpc3RsZSIsInRvbWF0byIsInR1cnF1b2lzZSIsInZpb2xldCIsIndoZWF0Iiwid2hpdGUiLCJ3aGl0ZXNtb2tlIiwieWVsbG93IiwieWVsbG93Z3JlZW4iLCJkZWZpbmUiLCJjb2xvciIsImRpc3BsYXlhYmxlIiwicmdiIiwiaGV4IiwidG9TdHJpbmciLCJ0cmltIiwidG9Mb3dlckNhc2UiLCJleGVjIiwicGFyc2VJbnQiLCJSZ2IiLCJyZ2JuIiwicmdiYSIsImhzbGEiLCJoYXNPd25Qcm9wZXJ0eSIsInIiLCJnIiwicmdiQ29udmVydCIsIm9wYWNpdHkiLCJleHRlbmQiLCJoIiwibCIsIkhzbCIsImhzbENvbnZlcnQiLCJoc2wiLCJtMiIsIm0xIiwiaHNsMnJnYiIsIkEiLCJCIiwiQyIsIkQiLCJFRCIsIkVCIiwiQkNfREEiLCJjdWJlaGVsaXhDb252ZXJ0IiwiQ3ViZWhlbGl4IiwiYmwiLCJhdGFuMiIsInJhZDJkZWciLCJjdWJlaGVsaXgiLCJkZWcycmFkIiwiY29zaCIsInNpbmgiLCJmYWN0b3J5IiwicGFyZW50IiwiZGVmaW5pdGlvbiIsIk9iamVjdCIsImNyZWF0ZSIsIksiLCJYbiIsIlluIiwiWm4iLCJ0MCIsInQxIiwidDIiLCJ0MyIsImxhYkNvbnZlcnQiLCJMYWIiLCJIY2wiLCJjIiwicmdiMmxyZ2IiLCJ4eXoybGFiIiwieiIsImxhYiIsImxhYjJ4eXoiLCJscmdiMnJnYiIsImhjbENvbnZlcnQiLCJsY2giLCJoY2wiLCJyaW5nIiwiYXJlYSIsImJsdXJYIiwiYmx1clkiLCJob2xlIiwicmluZ0NvbnRhaW5zIiwiY29udGFpbnMiLCJ5aSIsInBqIiwieWoiLCJzZWdtZW50Q29udGFpbnMiLCJjb2xsaW5lYXIiLCJ3aXRoaW4iLCJxIiwiY2FzZXMiLCJ0aHJlc2hvbGRTdHVyZ2VzIiwic21vb3RoIiwic21vb3RoTGluZWFyIiwiY29udG91cnMiLCJjb250b3VyIiwicG9seWdvbnMiLCJob2xlcyIsImlzb3JpbmdzIiwicG9seWdvbiIsImNvb3JkaW5hdGVzIiwiY2FsbGJhY2siLCJmcmFnbWVudEJ5U3RhcnQiLCJmcmFnbWVudEJ5RW5kIiwic3RpdGNoIiwic3RhcnRJbmRleCIsImVuZEluZGV4IiwiY29uY2F0IiwidW5zaGlmdCIsInh0IiwieXQiLCJ2MCIsInYxIiwiXzAiLCJfMSIsIkVycm9yIiwibm9vcCIsImRlZmF1bHRYIiwiZGVmYXVsdFkiLCJkZWZhdWx0V2VpZ2h0Iiwid2VpZ2h0IiwiZGVuc2l0eSIsIkZsb2F0MzJBcnJheSIsIndpIiwiZ2VvbWV0cnkiLCJ0cmFuc2Zvcm1Qb2x5Z29uIiwidHJhbnNmb3JtUmluZyIsInRyYW5zZm9ybVBvaW50IiwicmVzaXplIiwiY2VsbFNpemUiLCJEaXNwYXRjaCIsInBhcnNlVHlwZW5hbWVzIiwidHlwZW5hbWVzIiwidHlwZXMiLCJzcGxpdCIsImluZGV4T2YiLCJ0eXBlbmFtZSIsIlQiLCJkZWZhdWx0Q29udGFpbmVyIiwiZGVmYXVsdFN1YmplY3QiLCJkZWZhdWx0VG91Y2hhYmxlIiwiY29udGFpbmVyIiwic3ViamVjdCIsInRvdWNoYWJsZSIsImdlc3R1cmVzIiwibW91c2Vkb3dueCIsIm1vdXNlZG93bnkiLCJtb3VzZW1vdmluZyIsImNsaWNrRGlzdGFuY2UyIiwiZHJhZyIsIm1vdXNlZG93bmVkIiwidG91Y2hzdGFydGVkIiwidG91Y2htb3ZlZCIsInRvdWNoZW5kZWQiLCJnZXN0dXJlIiwibW91c2Vtb3ZlZCIsIm1vdXNldXBwZWQiLCJub2RyYWciLCJjbGllbnRYIiwiY2xpZW50WSIsInllc2RyYWciLCJpZGVudGlmaWVyIiwidG91Y2giLCJpZCIsInN1Ymxpc3RlbmVycyIsIkRyYWdFdmVudCIsInAwIiwiY2xpY2tEaXN0YW5jZSIsInJvb3QiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsIl9fbm9zZWxlY3QiLCJNb3pVc2VyU2VsZWN0Iiwibm9jbGljayIsImF1dG9UeXBlIiwidGVzdCIsIkRhdGUiLCJjc3YiLCJkc3YiLCJjc3ZQYXJzZSIsInBhcnNlIiwiY3N2UGFyc2VSb3dzIiwicGFyc2VSb3dzIiwiY3N2Rm9ybWF0IiwiY3N2Rm9ybWF0Qm9keSIsImZvcm1hdEJvZHkiLCJjc3ZGb3JtYXRSb3dzIiwiZm9ybWF0Um93cyIsIkVPTCIsIkVPRiIsIlFVT1RFIiwiTkVXTElORSIsIlJFVFVSTiIsIm9iamVjdENvbnZlcnRlciIsImNvbHVtbnMiLCJGdW5jdGlvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJqb2luIiwiY3VzdG9tQ29udmVydGVyIiwiaW5mZXJDb2x1bW5zIiwicm93cyIsImNvbHVtblNldCIsImNvbHVtbiIsInBhZCIsImZvcm1hdFllYXIiLCJ5ZWFyIiwiZm9ybWF0RGF0ZSIsImRhdGUiLCJob3VycyIsImdldFVUQ0hvdXJzIiwibWludXRlcyIsImdldFVUQ01pbnV0ZXMiLCJzZWNvbmRzIiwiZ2V0VVRDU2Vjb25kcyIsIm1pbGxpc2Vjb25kcyIsImdldFVUQ01pbGxpc2Vjb25kcyIsImdldFVUQ0Z1bGxZZWFyIiwiZ2V0VVRDTW9udGgiLCJnZXRVVENEYXRlIiwiZGVsaW1pdGVyIiwicmVGb3JtYXQiLCJERUxJTUlURVIiLCJjaGFyQ29kZUF0IiwiY29udmVydCIsIkkiLCJlb2YiLCJlb2wiLCJ0b2tlbiIsInJlcGxhY2UiLCJwcmVmb3JtYXRCb2R5IiwiZm9ybWF0VmFsdWUiLCJmb3JtYXRSb3ciLCJ0c3YiLCJ0c3ZQYXJzZSIsInRzdlBhcnNlUm93cyIsInRzdkZvcm1hdCIsInRzdkZvcm1hdEJvZHkiLCJ0c3ZGb3JtYXRSb3dzIiwib3ZlcnNob290IiwiYmFja0luIiwiY3VzdG9tIiwiYmFja091dCIsImJhY2tJbk91dCIsImIxIiwiYjIiLCJiMyIsImI0IiwiYjUiLCJiNiIsImI3IiwiYjgiLCJiOSIsImIwIiwiYm91bmNlSW4iLCJib3VuY2VPdXQiLCJib3VuY2VJbk91dCIsImNpcmNsZUluIiwiY2lyY2xlT3V0IiwiY2lyY2xlSW5PdXQiLCJjdWJpY0luIiwiY3ViaWNPdXQiLCJjdWJpY0luT3V0IiwiYW1wbGl0dWRlIiwicGVyaW9kIiwiZWxhc3RpY0luIiwiYXNpbiIsImVsYXN0aWNPdXQiLCJlbGFzdGljSW5PdXQiLCJleHBJbiIsImV4cE91dCIsImV4cEluT3V0IiwibGluZWFyIiwiZXhwb25lbnQiLCJwb2x5SW4iLCJwb2x5T3V0IiwicG9seUluT3V0IiwicXVhZEluIiwicXVhZE91dCIsInF1YWRJbk91dCIsInNpbkluIiwic2luT3V0Iiwic2luSW5PdXQiLCJyZXNwb25zZUJsb2IiLCJyZXNwb25zZSIsIm9rIiwic3RhdHVzIiwic3RhdHVzVGV4dCIsImJsb2IiLCJpbml0IiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2VBcnJheUJ1ZmZlciIsImFycmF5QnVmZmVyIiwiZHN2UGFyc2UiLCJ1bmRlZmluZWQiLCJkc3ZGb3JtYXQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImltYWdlIiwiSW1hZ2UiLCJvbmVycm9yIiwib25sb2FkIiwic3JjIiwicmVzcG9uc2VKc29uIiwianNvbiIsInJlc3BvbnNlVGV4dCIsInBhcnNlciIsIkRPTVBhcnNlciIsInBhcnNlRnJvbVN0cmluZyIsImh0bWwiLCJub2RlcyIsImZvcmNlIiwic3giLCJzeSIsInZ4IiwidnkiLCJyYWRpaSIsInN0cmVuZ3RoIiwiaXRlcmF0aW9ucyIsInRyZWUiLCJyaSIsInJpMiIsInF1YWR0cmVlIiwidmlzaXRBZnRlciIsInByZXBhcmUiLCJ2aXNpdCIsInF1YWQiLCJ5MCIsInkxIiwicmoiLCJqaWdnbGUiLCJmaW5kIiwibm9kZUJ5SWQiLCJub2RlSWQiLCJsaW5rcyIsImRlZmF1bHRTdHJlbmd0aCIsInN0cmVuZ3RocyIsImRpc3RhbmNlIiwiZGlzdGFuY2VzIiwiYmlhcyIsImxpbmsiLCJhbHBoYSIsImluaXRpYWxpemVTdHJlbmd0aCIsImluaXRpYWxpemVEaXN0YW5jZSIsImRpc3RhbmNlTWluMiIsImRpc3RhbmNlTWF4MiIsIkluZmluaXR5IiwidGhldGEyIiwiYWNjdW11bGF0ZSIsIm5leHQiLCJ4MiIsImRpc3RhbmNlTWluIiwiZGlzdGFuY2VNYXgiLCJ0aGV0YSIsInJhZGl1c2VzIiwiaW5pdGlhbFJhZGl1cyIsImluaXRpYWxBbmdsZSIsInNpbXVsYXRpb24iLCJhbHBoYU1pbiIsImFscGhhRGVjYXkiLCJhbHBoYVRhcmdldCIsInZlbG9jaXR5RGVjYXkiLCJmb3JjZXMiLCJzdGVwcGVyIiwidGltZXIiLCJmeCIsImZ5IiwiaW5pdGlhbGl6ZU5vZGVzIiwiYW5nbGUiLCJpbml0aWFsaXplRm9yY2UiLCJyZXN0YXJ0IiwiZDIiLCJjbG9zZXN0IiwieXoiLCJsb2NhbGUiLCJmb3JtYXRQcmVmaXgiLCJkZWZhdWx0TG9jYWxlIiwiZGVjaW1hbCIsInRob3VzYW5kcyIsImdyb3VwaW5nIiwiY3VycmVuY3kiLCJmb3JtYXRMb2NhbGUiLCJmb3JtYXREZWNpbWFsIiwidG9FeHBvbmVudGlhbCIsImNvZWZmaWNpZW50Iiwic3Vic3RyaW5nIiwibnVtZXJhbHMiLCJwcmVmaXhFeHBvbmVudCIsInJlIiwiZm9ybWF0U3BlY2lmaWVyIiwic3BlY2lmaWVyIiwiRm9ybWF0U3BlY2lmaWVyIiwibWF0Y2giLCJmaWxsIiwiYWxpZ24iLCJzaWduIiwic3ltYm9sIiwiemVybyIsImNvbW1hIiwicHJlY2lzaW9uIiwib3V0IiwidG9GaXhlZCIsInRvUHJlY2lzaW9uIiwiZm9ybWF0Um91bmRlZCIsImZvcm1hdFByZWZpeEF1dG8iLCJ0b1VwcGVyQ2FzZSIsInByZWZpeGVzIiwiZm9ybWF0R3JvdXAiLCJmb3JtYXROdW1lcmFscyIsInBlcmNlbnQiLCJuZXdGb3JtYXQiLCJmb3JtYXRUeXBlcyIsInN1ZmZpeCIsImZvcm1hdFR5cGUiLCJtYXliZVN1ZmZpeCIsInZhbHVlUHJlZml4IiwidmFsdWVTdWZmaXgiLCJ2YWx1ZU5lZ2F0aXZlIiwiZm9ybWF0VHJpbSIsInBhZGRpbmciLCJBZGRlciIsInJlc2V0IiwidGVtcCIsInZhbHVlT2YiLCJhZGRlciIsImJ2IiwiYXYiLCJhcmVhUmluZ1N1bSIsImFyZWFTdW0iLCJsYW1iZGEwMCIsInBoaTAwIiwibGFtYmRhMCIsImNvc1BoaTAiLCJzaW5QaGkwIiwiYXJlYVN0cmVhbSIsImxpbmVTdGFydCIsImxpbmVFbmQiLCJwb2x5Z29uU3RhcnQiLCJhcmVhUmluZ1N0YXJ0IiwiYXJlYVJpbmdFbmQiLCJwb2x5Z29uRW5kIiwiYXJlYVJpbmciLCJzcGhlcmUiLCJhcmVhUG9pbnRGaXJzdCIsImFyZWFQb2ludCIsImxhbWJkYSIsInBoaSIsInJhZGlhbnMiLCJxdWFydGVyUGkiLCJkTGFtYmRhIiwic2RMYW1iZGEiLCJhZExhbWJkYSIsImNvc1BoaSIsInNpblBoaSIsInUiLCJzdHJlYW0iLCJwaGkwIiwibGFtYmRhMSIsInBoaTEiLCJsYW1iZGEyIiwiZGVsdGFTdW0iLCJyYW5nZXMiLCJib3VuZHNTdHJlYW0iLCJib3VuZHNQb2ludCIsImJvdW5kc0xpbmVTdGFydCIsImJvdW5kc0xpbmVFbmQiLCJib3VuZHNSaW5nUG9pbnQiLCJib3VuZHNSaW5nU3RhcnQiLCJib3VuZHNSaW5nRW5kIiwibGluZVBvaW50IiwiY2FydGVzaWFuIiwibm9ybWFsIiwiY2FydGVzaWFuQ3Jvc3MiLCJlcXVhdG9yaWFsIiwiaW5mbGVjdGlvbiIsImNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UiLCJzcGhlcmljYWwiLCJsYW1iZGFpIiwiZGVncmVlcyIsInBoaWkiLCJhbnRpbWVyaWRpYW4iLCJyYW5nZUNvbXBhcmUiLCJyYW5nZUNvbnRhaW5zIiwiZmVhdHVyZSIsImRlbHRhTWF4IiwiY2FydGVzaWFuRG90IiwiY2FydGVzaWFuQWRkSW5QbGFjZSIsImNhcnRlc2lhblNjYWxlIiwidmVjdG9yIiwiVzAiLCJXMSIsIlgwIiwiWTAiLCJaMCIsIlgxIiwiWTEiLCJaMSIsIlgyIiwiWTIiLCJaMiIsInowIiwiY2VudHJvaWRTdHJlYW0iLCJjZW50cm9pZFBvaW50IiwiY2VudHJvaWRMaW5lU3RhcnQiLCJjZW50cm9pZExpbmVFbmQiLCJjZW50cm9pZFJpbmdTdGFydCIsImNlbnRyb2lkUmluZ0VuZCIsImNlbnRyb2lkUG9pbnRDYXJ0ZXNpYW4iLCJjZW50cm9pZExpbmVQb2ludEZpcnN0IiwiY2VudHJvaWRMaW5lUG9pbnQiLCJjZW50cm9pZFJpbmdQb2ludEZpcnN0IiwiY2VudHJvaWRSaW5nUG9pbnQiLCJjeCIsImN5IiwiY3oiLCJlcHNpbG9uMiIsImNpcmNsZVN0cmVhbSIsImRpcmVjdGlvbiIsImNvc1JhZGl1cyIsInNpblJhZGl1cyIsImNpcmNsZVJhZGl1cyIsImFjb3MiLCJyb3RhdGUiLCJjaXJjbGUiLCJyb3RhdGVSYWRpYW5zIiwiaW52ZXJ0IiwiY2xpcCIsImNsaXBBbnRpbWVyaWRpYW5MaW5lIiwiY2xpcEFudGltZXJpZGlhbkludGVycG9sYXRlIiwic2lnbjAiLCJjbGVhbiIsInNpZ24xIiwiY2xpcEFudGltZXJpZGlhbkludGVyc2VjdCIsImNvc1BoaTEiLCJzaW5MYW1iZGEwTGFtYmRhMSIsImF0YW4iLCJmcm9tIiwidG8iLCJsaW5lcyIsInJlam9pbiIsImNyIiwic21hbGxSYWRpdXMiLCJub3RIZW1pc3BoZXJlIiwidmlzaWJsZSIsImNsaXBMaW5lIiwiYzAiLCJ2MDAiLCJwb2ludDIiLCJjb2RlIiwiaW50ZXJzZWN0IiwicG9pbnRFcXVhbCIsInR3byIsInBhIiwicGIiLCJuMiIsIm4ybjIiLCJuMW4yIiwiZGV0ZXJtaW5hbnQiLCJjMSIsImMyIiwibjF4bjIiLCJ1dSIsInBvbGFyIiwibWVyaWRpYW4iLCJxMSIsImNhY2hlIiwiY2FjaGVTdHJlYW0iLCJjbGlwUmVjdGFuZ2xlIiwicG9pbnRWaXNpYmxlIiwic2luayIsInJpbmdCdWZmZXIiLCJjbGlwQnVmZmVyIiwicmluZ1NpbmsiLCJwb2x5Z29uU3RhcnRlZCIsInNlZ21lbnRzIiwicG9pbnRSaW5nIiwicmluZ1N0YXJ0IiwicmluZ0VuZCIsInN0YXJ0SW5zaWRlIiwicG9seWdvbkNvbnRhaW5zIiwiY2xpcFJlam9pbiIsImNvbXBhcmVJbnRlcnNlY3Rpb24iLCJwb2ludExpbmUiLCJyaW5nU2VnbWVudHMiLCJzZWdtZW50IiwidmFsaWRTZWdtZW50IiwiYXgiLCJheSIsImJ4IiwiYnkiLCJjbGlwTWF4IiwiY2xpcE1pbiIsImNvcm5lciIsImNvbXBhcmVQb2ludCIsImNhIiwiY2IiLCJhY3RpdmVTdHJlYW0iLCJidWZmZXJTdHJlYW0iLCJ4X18iLCJ5X18iLCJ2X18iLCJ4XyIsInlfIiwidl8iLCJmaXJzdCIsImNsaXBTdHJlYW0iLCJwb2x5Z29uSW5zaWRlIiwid2luZGluZyIsImNsZWFuSW5zaWRlIiwiSW50ZXJzZWN0aW9uIiwicG9pbnRzIiwib3RoZXIiLCJlbnRyeSIsInAxIiwiY3VycmVudCIsImlzU3ViamVjdCIsImNvbXBvc2UiLCJjb250YWluc09iamVjdFR5cGUiLCJGZWF0dXJlIiwiY29udGFpbnNHZW9tZXRyeSIsIkZlYXR1cmVDb2xsZWN0aW9uIiwiZmVhdHVyZXMiLCJjb250YWluc0dlb21ldHJ5VHlwZSIsIlNwaGVyZSIsIlBvaW50IiwiY29udGFpbnNQb2ludCIsIk11bHRpUG9pbnQiLCJMaW5lU3RyaW5nIiwiY29udGFpbnNMaW5lIiwiTXVsdGlMaW5lU3RyaW5nIiwiUG9seWdvbiIsImNvbnRhaW5zUG9seWdvbiIsIk11bHRpUG9seWdvbiIsIkdlb21ldHJ5Q29sbGVjdGlvbiIsImdlb21ldHJpZXMiLCJhYiIsImFvIiwib2IiLCJyaW5nUmFkaWFucyIsInBvaW50UmFkaWFucyIsImdyYXRpY3VsZVgiLCJncmF0aWN1bGVZIiwiZ3JhdGljdWxlIiwiRFgiLCJEWSIsIm91dGxpbmUiLCJleHRlbnRNaW5vciIsImV4dGVudE1ham9yIiwic3RlcE1pbm9yIiwic3RlcE1ham9yIiwiZ3JhdGljdWxlMTAiLCJjeTAiLCJjeTEiLCJzeTEiLCJreDAiLCJreTAiLCJreDEiLCJreTEiLCJoYXZlcnNpbiIsImxlbmd0aFN1bSIsImxlbmd0aFN0cmVhbSIsImxlbmd0aExpbmVTdGFydCIsImxlbmd0aFBvaW50Rmlyc3QiLCJsZW5ndGhMaW5lRW5kIiwibGVuZ3RoUG9pbnQiLCJjb3NEZWx0YSIsInNpbkRlbHRhIiwiZXhwIiwieDAwIiwieTAwIiwiYm91bmRzIiwiY2VudHJvaWQiLCJjZW50cm9pZFBvaW50Rmlyc3RMaW5lIiwiY2VudHJvaWRQb2ludExpbmUiLCJjZW50cm9pZFBvaW50Rmlyc3RSaW5nIiwiY2VudHJvaWRQb2ludFJpbmciLCJQYXRoQ29udGV4dCIsIl9jb250ZXh0IiwiX3JhZGl1cyIsInBvaW50UmFkaXVzIiwiX2xpbmUiLCJfcG9pbnQiLCJsaW5lVG8iLCJwcm9qZWN0aW9uIiwicHJvamVjdGlvblN0cmVhbSIsImNvbnRleHRTdHJlYW0iLCJwYXRoQXJlYSIsIm1lYXN1cmUiLCJwYXRoTWVhc3VyZSIsInBhdGhCb3VuZHMiLCJwYXRoQ2VudHJvaWQiLCJQYXRoU3RyaW5nIiwibGVuZ3RoUmluZyIsIl9zdHJpbmciLCJfY2lyY2xlIiwic2luUGhpMSIsImFic0RlbHRhIiwiaW50ZXJzZWN0aW9uIiwicGhpQXJjIiwiY29uaWNFcXVhbEFyZWEiLCJwYXJhbGxlbHMiLCJ0cmFuc2xhdGUiLCJtdWx0aXBsZXgiLCJzdHJlYW1zIiwibG93ZXI0OCIsImFsYmVycyIsImxvd2VyNDhQb2ludCIsImFsYXNrYSIsImFsYXNrYVBvaW50IiwiaGF3YWlpIiwiaGF3YWlpUG9pbnQiLCJwb2ludFN0cmVhbSIsImFsYmVyc1VzYSIsImNsaXBFeHRlbnQiLCJmaXRFeHRlbnQiLCJmaXRTaXplIiwiZml0V2lkdGgiLCJmaXRIZWlnaHQiLCJhemltdXRoYWxSYXciLCJhemltdXRoYWxJbnZlcnQiLCJzYyIsImNjIiwiYXppbXV0aGFsRXF1YWxBcmVhUmF3IiwiY3hjeSIsImNsaXBBbmdsZSIsImF6aW11dGhhbEVxdWlkaXN0YW50UmF3IiwiY29uaWNQcm9qZWN0aW9uIiwicHJvamVjdEF0IiwicHJvamVjdGlvbk11dGF0b3IiLCJ0YW55IiwiY29uaWNDb25mb3JtYWxSYXciLCJtZXJjYXRvclJhdyIsInByb2plY3QiLCJjb25pY0VxdWFsQXJlYVJhdyIsImN5bGluZHJpY2FsRXF1YWxBcmVhUmF3IiwicjAiLCJyMHkiLCJjb25pY0VxdWlkaXN0YW50UmF3IiwiZXF1aXJlY3Rhbmd1bGFyUmF3IiwiZ3kiLCJueCIsImZvcndhcmQiLCJBMSIsIkEyIiwiQTMiLCJBNCIsIk0iLCJlcXVhbEVhcnRoUmF3IiwibDIiLCJsNiIsImZweSIsImZpdCIsImZpdEJvdW5kcyIsImdlb1N0cmVhbSIsImdub21vbmljUmF3Iiwic2NhbGVUcmFuc2xhdGUiLCJreCIsImt5IiwidHgiLCJ0eSIsInRyYW5zZm9ybWVyIiwicG9zdGNsaXAiLCJyZWZsZWN0WCIsInJlZmxlY3RZIiwidHJhbnNmb3JtUmFkaWFucyIsInRyYW5zZm9ybVJvdGF0ZSIsInNjYWxlVHJhbnNsYXRlUm90YXRlIiwiY29zQWxwaGEiLCJzaW5BbHBoYSIsImFpIiwiYmkiLCJjaSIsImZpIiwiZGVsdGFMYW1iZGEiLCJkZWx0YVBoaSIsImRlbHRhR2FtbWEiLCJwcmVjbGlwIiwiY2xpcEFudGltZXJpZGlhbiIsImRlbHRhMiIsInByb2plY3RSZXNhbXBsZSIsInByb2plY3RUcmFuc2Zvcm0iLCJwcm9qZWN0Um90YXRlVHJhbnNmb3JtIiwiY2xpcENpcmNsZSIsInJlY2VudGVyIiwicmVzYW1wbGUiLCJtZXJjYXRvclByb2plY3Rpb24iLCJyZWNsaXAiLCJyb3RhdGlvbiIsIm5hdHVyYWxFYXJ0aDFSYXciLCJwaGkyIiwicGhpNCIsIm9ydGhvZ3JhcGhpY1JhdyIsIm1heERlcHRoIiwiY29zTWluRGlzdGFuY2UiLCJyZXNhbXBsZU5vbmUiLCJyZXNhbXBsZUxpbmVUbyIsInkyIiwiZHgyIiwiZHkyIiwiZHoiLCJhMDAiLCJiMDAiLCJjMDAiLCJyZXNhbXBsZVN0cmVhbSIsInJpbmdQb2ludCIsInN0ZXJlb2dyYXBoaWNSYXciLCJ0cmFuc3ZlcnNlTWVyY2F0b3JSYXciLCJyb3RhdGlvbklkZW50aXR5Iiwicm90YXRpb25MYW1iZGEiLCJyb3RhdGlvblBoaUdhbW1hIiwiZm9yd2FyZFJvdGF0aW9uTGFtYmRhIiwiY29zRGVsdGFQaGkiLCJzaW5EZWx0YVBoaSIsImNvc0RlbHRhR2FtbWEiLCJzaW5EZWx0YUdhbW1hIiwic3RyZWFtR2VvbWV0cnkiLCJzdHJlYW1HZW9tZXRyeVR5cGUiLCJzdHJlYW1PYmplY3RUeXBlIiwic3RyZWFtTGluZSIsInN0cmVhbVBvbHlnb24iLCJjbG9zZWQiLCJjb29yZGluYXRlIiwibWV0aG9kcyIsIlRyYW5zZm9ybVN0cmVhbSIsIm9wdGlvbmFsIiwicmVxdWlyZWQiLCJzaHVmZmxlIiwiZGVmYXVsdFNlcGFyYXRpb24iLCJtZWFuWCIsImNoaWxkcmVuIiwibWVhblhSZWR1Y2UiLCJtYXhZIiwibWF4WVJlZHVjZSIsImxlYWZMZWZ0IiwibGVhZlJpZ2h0Iiwic2VwYXJhdGlvbiIsIm5vZGVTaXplIiwiY2x1c3RlciIsInByZXZpb3VzTm9kZSIsImVhY2hBZnRlciIsImNvbnN0YW50WmVybyIsImhpZXJhcmNoeSIsIk5vZGUiLCJ2YWx1ZWQiLCJjaGlsZCIsImNoaWxkcyIsImRlZmF1bHRDaGlsZHJlbiIsImVhY2hCZWZvcmUiLCJjb21wdXRlSGVpZ2h0Iiwibm9kZV9jb3B5IiwiY29weURhdGEiLCJub2RlX2NvdW50Iiwibm9kZV9lYWNoIiwibm9kZV9lYWNoQWZ0ZXIiLCJub2RlX2VhY2hCZWZvcmUiLCJub2RlX3N1bSIsIm5vZGVfc29ydCIsIm5vZGVfcGF0aCIsImFuY2VzdG9ycyIsIm5vZGVfYW5jZXN0b3JzIiwiZGVzY2VuZGFudHMiLCJub2RlX2Rlc2NlbmRhbnRzIiwibGVhdmVzIiwibm9kZV9sZWF2ZXMiLCJub2RlX2xpbmtzIiwiYW5jZXN0b3IiLCJsZWFzdENvbW1vbkFuY2VzdG9yIiwic3BsaWNlIiwiYU5vZGVzIiwiYk5vZGVzIiwiY2lyY2xlcyIsImVuY2xvc2VzV2VhayIsImVuY2xvc2VCYXNpcyIsImV4dGVuZEJhc2lzIiwiZW5jbG9zZXNXZWFrQWxsIiwiZW5jbG9zZXNOb3QiLCJlbmNsb3NlQmFzaXMyIiwiZW5jbG9zZUJhc2lzMyIsImRyIiwiZW5jbG9zZUJhc2lzMSIsInIxIiwicjIiLCJ4MjEiLCJ5MjEiLCJyMjEiLCJ4MyIsInkzIiwicjMiLCJhMiIsImEzIiwiYzMiLCJkMSIsImQzIiwieGEiLCJ4YiIsInlhIiwieWIiLCJwYWNrIiwicmFkaXVzTGVhZiIsInBhY2tDaGlsZHJlbiIsInRyYW5zbGF0ZUNoaWxkIiwicGFja0VuY2xvc2UiLCJwbGFjZSIsImludGVyc2VjdHMiLCJzY29yZSIsInByZXZpb3VzIiwiYWEiLCJzaiIsInNrIiwiZW5jbG9zZSIsInBhcnRpdGlvbiIsInBvc2l0aW9uTm9kZSIsInJvdW5kTm9kZSIsInRyZWVtYXBEaWNlIiwia2V5UHJlZml4IiwicHJlcm9vdCIsImFtYmlndW91cyIsImRlZmF1bHRJZCIsImRlZmF1bHRQYXJlbnRJZCIsInBhcmVudElkIiwic3RyYXRpZnkiLCJub2RlS2V5Iiwibm9kZUJ5S2V5IiwibmV4dExlZnQiLCJuZXh0UmlnaHQiLCJtb3ZlU3VidHJlZSIsIndtIiwid3AiLCJjaGFuZ2UiLCJleGVjdXRlU2hpZnRzIiwibmV4dEFuY2VzdG9yIiwidmltIiwiVHJlZU5vZGUiLCJ0cmVlUm9vdCIsImZpcnN0V2FsayIsInNlY29uZFdhbGsiLCJzaXplTm9kZSIsInNpYmxpbmdzIiwibWlkcG9pbnQiLCJhcHBvcnRpb24iLCJ2aXAiLCJ2b3AiLCJ2b20iLCJzaXAiLCJzb3AiLCJzaW0iLCJzb20iLCJzdW1zIiwidmFsdWVPZmZzZXQiLCJ2YWx1ZVRhcmdldCIsInZhbHVlTGVmdCIsInZhbHVlUmlnaHQiLCJ4ayIsInlrIiwidGlsZSIsInNxdWFyaWZ5IiwicGFkZGluZ1N0YWNrIiwicGFkZGluZ0lubmVyIiwicGFkZGluZ1RvcCIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdCb3R0b20iLCJwYWRkaW5nTGVmdCIsInRyZWVtYXAiLCJwYWRkaW5nT3V0ZXIiLCJyYXRpbyIsInJlc3F1YXJpZnkiLCJfc3F1YXJpZnkiLCJkaWNlIiwidHJlZW1hcFNsaWNlIiwic3F1YXJpZnlSYXRpbyIsIm5vZGVWYWx1ZSIsInN1bVZhbHVlIiwibWluVmFsdWUiLCJtYXhWYWx1ZSIsIm5ld1JhdGlvIiwibWluUmF0aW8iLCJiZXRhIiwibmIiLCJuYSIsImJhc2lzIiwidjIiLCJ2MyIsImV4cG9uZW50aWFsIiwiaHVlIiwiZ2FtbWEiLCJub2dhbW1hIiwiY3ViZWhlbGl4R2FtbWEiLCJjb2xvckN1YmVoZWxpeCIsImN1YmVoZWxpeExvbmciLCJzZXRUaW1lIiwiY29sb3JIY2wiLCJoY2xMb25nIiwiY29sb3JIc2wiLCJoc2xMb25nIiwiY29sb3JMYWIiLCJwaWVjZXdpc2UiLCJpbnRlcnBvbGF0b3IiLCJzYW1wbGVzIiwicmdiR2FtbWEiLCJjb2xvclJnYiIsInJnYlNwbGluZSIsInNwbGluZSIsImNvbG9ycyIsInJnYkJhc2lzIiwicmdiQmFzaXNDbG9zZWQiLCJiYXNpc0Nsb3NlZCIsInJlQSIsInJlQiIsIm9uZSIsImxhc3RJbmRleCIsImFtIiwiYm0iLCJicyIsInNrZXdYIiwic2NhbGVYIiwic2NhbGVZIiwiaW50ZXJwb2xhdGVUcmFuc2Zvcm0iLCJweENvbW1hIiwicHhQYXJlbiIsImRlZ1BhcmVuIiwiaW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3MiLCJwYXJzZUNzcyIsImludGVycG9sYXRlVHJhbnNmb3JtU3ZnIiwicGFyc2VTdmciLCJjc3NOb2RlIiwiY3NzUm9vdCIsImNzc1ZpZXciLCJzdmdOb2RlIiwiY3JlYXRlRWxlbWVudCIsImRlZmF1bHRWaWV3IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImFwcGVuZENoaWxkIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInJlbW92ZUNoaWxkIiwiZGVjb21wb3NlIiwiY3JlYXRlRWxlbWVudE5TIiwic2V0QXR0cmlidXRlIiwiY29uc29saWRhdGUiLCJzdHJpbmciLCJyaG8iLCJTUVJUMiIsInJobzIiLCJyaG80IiwidGFuaCIsInV4MCIsInV5MCIsInV4MSIsInV5MSIsImNvc2hyMCIsImR1cmF0aW9uIiwidGF1RXBzaWxvbiIsIlBhdGgiLCJfeDAiLCJfeTAiLCJfeDEiLCJfeTEiLCJiZXppZXJDdXJ2ZVRvIiwiYXJjVG8iLCJ4MDEiLCJ5MDEiLCJsMDFfMiIsIngyMCIsInkyMCIsImwyMV8yIiwibDIwXzIiLCJsMjEiLCJsMDEiLCJ0MDEiLCJ0MjEiLCJjY3ciLCJjdyIsImRhIiwicmVjdCIsImluc2lkZSIsImxleGljb2dyYXBoaWNPcmRlciIsImNvbXB1dGVVcHBlckh1bGxJbmRleGVzIiwiY3Jvc3MiLCJzb3J0ZWRQb2ludHMiLCJmbGlwcGVkUG9pbnRzIiwidXBwZXJJbmRleGVzIiwibG93ZXJJbmRleGVzIiwic2tpcExlZnQiLCJza2lwUmlnaHQiLCJodWxsIiwicGVyaW1ldGVyIiwiX3giLCJfeSIsImNvdmVyIiwiX3Jvb3QiLCJsZWFmIiwieG0iLCJ5bSIsInhwIiwieXAiLCJhZGRBbGwiLCJxdWFkcyIsIlF1YWQiLCJRdWFkdHJlZSIsImxlYWZfY29weSIsInRyZWVQcm90byIsInRyZWVfYWRkIiwidHJlZV9hZGRBbGwiLCJ0cmVlX2NvdmVyIiwidHJlZV9kYXRhIiwidHJlZV9leHRlbnQiLCJ0cmVlX2ZpbmQiLCJ0cmVlX3JlbW92ZSIsInJlbW92ZUFsbCIsInRyZWVfcmVtb3ZlQWxsIiwidHJlZV9yb290IiwidHJlZV9zaXplIiwidHJlZV92aXNpdCIsInRyZWVfdmlzaXRBZnRlciIsInRyZWVfeCIsInRyZWVfeSIsInJldGFpbmVyIiwic291cmNlUmFuZG9tQmF0ZXMiLCJyYW5kb21CYXRlcyIsInJhbmRvbUlyd2luSGFsbCIsImlyd2luSGFsbCIsInNvdXJjZVJhbmRvbUV4cG9uZW50aWFsIiwicmFuZG9tRXhwb25lbnRpYWwiLCJzb3VyY2VSYW5kb21JcndpbkhhbGwiLCJzb3VyY2VSYW5kb21Mb2dOb3JtYWwiLCJyYW5kb21Mb2dOb3JtYWwiLCJyYW5kb21Ob3JtYWwiLCJzb3VyY2VSYW5kb21Ob3JtYWwiLCJtdSIsInNpZ21hIiwic291cmNlUmFuZG9tVW5pZm9ybSIsInJhbmRvbVVuaWZvcm0iLCJzY2hlbWUiLCJyYW1wIiwiaW50ZXJwb2xhdGVSZ2JCYXNpcyIsImludGVycG9sYXRlQ3ViZWhlbGl4TG9uZyIsIndhcm0iLCJjb29sIiwidHMiLCJwaV8xXzMiLCJwaV8yXzMiLCJtYWdtYSIsImluZmVybm8iLCJwbGFzbWEiLCJiYW5kIiwib3JkaW5hbCIsInVua25vd24iLCJvcmRpbmFsUmFuZ2UiLCJyZXNjYWxlIiwic2VxdWVuY2UiLCJyYW5nZVJvdW5kIiwiaW5pdFJhbmdlIiwicG9pbnRpc2giLCJ1bml0Iiwibm9ybWFsaXplIiwiY2xhbXBlciIsImJpbWFwIiwiZDAiLCJwb2x5bWFwIiwiY2xhbXAiLCJpbnRlcnBvbGF0ZVZhbHVlIiwidW50cmFuc2Zvcm0iLCJpbnRlcnBvbGF0ZU51bWJlciIsImludGVycG9sYXRlUm91bmQiLCJjb250aW51b3VzIiwiazEwIiwiazIxIiwiZGl2ZXJnaW5nIiwibGluZWFyaXNoIiwiaW5pdEludGVycG9sYXRvciIsImRpdmVyZ2luZ0xvZyIsImxvZ2dpc2giLCJiYXNlIiwiZGl2ZXJnaW5nU3ltbG9nIiwic3ltbG9naXNoIiwiZGl2ZXJnaW5nUG93IiwicG93aXNoIiwiZGl2ZXJnaW5nU3FydCIsIm5pY2UiLCJ0cmFuc2Zvcm1Mb2ciLCJ0cmFuc2Zvcm1FeHAiLCJ0cmFuc2Zvcm1Mb2duIiwidHJhbnNmb3JtRXhwbiIsInBvdzEwIiwicG93cCIsImxvZ3AiLCJsb2cxMCIsImxvZzIiLCJyZWZsZWN0IiwibG9ncyIsInBvd3MiLCJpbnRlcnZhbCIsImltcGxpY2l0IiwidHJhbnNmb3JtUG93IiwidHJhbnNmb3JtU3FydCIsInRyYW5zZm9ybVNxdWFyZSIsImludmVydEV4dGVudCIsInF1YW50aWxlcyIsInF1YW50aXplIiwic2VxdWVudGlhbCIsInNlcXVlbnRpYWxMb2ciLCJzZXF1ZW50aWFsU3ltbG9nIiwic2VxdWVudGlhbFBvdyIsInNlcXVlbnRpYWxTcXJ0Iiwic2VxdWVudGlhbFF1YW50aWxlIiwidHJhbnNmb3JtU3ltbG9nIiwibG9nMXAiLCJ0cmFuc2Zvcm1TeW1leHAiLCJleHBtMSIsInN5bWxvZyIsInByZWNpc2lvblByZWZpeCIsInByZWNpc2lvblJvdW5kIiwicHJlY2lzaW9uRml4ZWQiLCJkdXJhdGlvblNlY29uZCIsImR1cmF0aW9uTWludXRlIiwiZHVyYXRpb25Ib3VyIiwiZHVyYXRpb25EYXkiLCJkdXJhdGlvbldlZWsiLCJkdXJhdGlvbk1vbnRoIiwiZHVyYXRpb25ZZWFyIiwiY2FsZW5kYXIiLCJtb250aCIsIndlZWsiLCJkYXkiLCJob3VyIiwibWludXRlIiwic2Vjb25kIiwibWlsbGlzZWNvbmQiLCJmb3JtYXRNaWxsaXNlY29uZCIsImZvcm1hdFNlY29uZCIsImZvcm1hdE1pbnV0ZSIsImZvcm1hdEhvdXIiLCJmb3JtYXREYXkiLCJmb3JtYXRXZWVrIiwiZm9ybWF0TW9udGgiLCJ0aWNrSW50ZXJ2YWxzIiwidGlja0ludGVydmFsIiwiZXZlcnkiLCJ0aW1lWWVhciIsInRpbWVNb250aCIsInRpbWVXZWVrIiwidGltZURheSIsInRpbWVIb3VyIiwidGltZU1pbnV0ZSIsInRpbWVTZWNvbmQiLCJ0aW1lTWlsbGlzZWNvbmQiLCJ0aW1lRm9ybWF0IiwidXRjWWVhciIsInV0Y01vbnRoIiwidXRjV2VlayIsInV0Y0RheSIsInV0Y0hvdXIiLCJ1dGNNaW51dGUiLCJ1dGNTZWNvbmQiLCJ1dGNNaWxsaXNlY29uZCIsInV0Y0Zvcm1hdCIsIlVUQyIsImNyZWF0b3IiLCJjcmVhdG9ySW5oZXJpdCIsIm93bmVyRG9jdW1lbnQiLCJ1cmkiLCJuYW1lc3BhY2VVUkkiLCJ4aHRtbCIsImNyZWF0b3JGaXhlZCIsImZ1bGxuYW1lIiwic3BhY2UiLCJuYW1lc3BhY2UiLCJuZXh0SWQiLCJMb2NhbCIsInNlbGVjdG9yIiwibWF0Y2hlcyIsInNvdXJjZUV2ZW50IiwibmFtZXNwYWNlcyIsInhsaW5rIiwieG1sIiwieG1sbnMiLCJjcmVhdGVTVkdQb2ludCIsIm1hdHJpeFRyYW5zZm9ybSIsImdldFNjcmVlbkNUTSIsImludmVyc2UiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJjbGllbnRMZWZ0IiwiY2xpZW50VG9wIiwiU2VsZWN0aW9uIiwicXVlcnlTZWxlY3RvciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJhdHRyUmVtb3ZlIiwicmVtb3ZlQXR0cmlidXRlIiwiYXR0clJlbW92ZU5TIiwicmVtb3ZlQXR0cmlidXRlTlMiLCJhdHRyQ29uc3RhbnQiLCJhdHRyQ29uc3RhbnROUyIsInNldEF0dHJpYnV0ZU5TIiwiYXR0ckZ1bmN0aW9uIiwiYXR0ckZ1bmN0aW9uTlMiLCJnZXRBdHRyaWJ1dGVOUyIsImNsYXNzQXJyYXkiLCJjbGFzc0xpc3QiLCJDbGFzc0xpc3QiLCJfbm9kZSIsIl9uYW1lcyIsImNsYXNzZWRBZGQiLCJuYW1lcyIsImxpc3QiLCJjbGFzc2VkUmVtb3ZlIiwiY2xhc3NlZFRydWUiLCJjbGFzc2VkRmFsc2UiLCJjbGFzc2VkRnVuY3Rpb24iLCJzZWxlY3Rpb25fY2xvbmVTaGFsbG93IiwiaW5zZXJ0QmVmb3JlIiwiY2xvbmVOb2RlIiwibmV4dFNpYmxpbmciLCJzZWxlY3Rpb25fY2xvbmVEZWVwIiwiZGVlcCIsImJpbmRJbmRleCIsInVwZGF0ZSIsImdyb3VwTGVuZ3RoIiwiZGF0YUxlbmd0aCIsIkVudGVyTm9kZSIsImJpbmRLZXkiLCJub2RlQnlLZXlWYWx1ZSIsImtleVZhbHVlcyIsImJpbmQiLCJwYXJlbnRzIiwiX3BhcmVudHMiLCJfZ3JvdXBzIiwiZW50ZXJHcm91cCIsInVwZGF0ZUdyb3VwIiwiZXhpdEdyb3VwIiwiX25leHQiLCJfZW50ZXIiLCJfZXhpdCIsImRpc3BhdGNoRXZlbnQiLCJwYXJhbXMiLCJ3aW5kb3ciLCJDdXN0b21FdmVudCIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJkZXRhaWwiLCJkaXNwYXRjaENvbnN0YW50IiwiZGlzcGF0Y2hGdW5jdGlvbiIsInNwYXJzZSIsImRhdHVtIiwiX3BhcmVudCIsIm1hdGNoZXIiLCJzdWJncm91cCIsImh0bWxSZW1vdmUiLCJpbm5lckhUTUwiLCJodG1sQ29uc3RhbnQiLCJodG1sRnVuY3Rpb24iLCJzZWxlY3Rpb25fc2VsZWN0Iiwic2VsZWN0aW9uX3NlbGVjdEFsbCIsInNlbGVjdGlvbl9maWx0ZXIiLCJzZWxlY3Rpb25fZGF0YSIsInNlbGVjdGlvbl9lbnRlciIsInNlbGVjdGlvbl9leGl0Iiwic2VsZWN0aW9uX2pvaW4iLCJzZWxlY3Rpb25fbWVyZ2UiLCJzZWxlY3Rpb25fb3JkZXIiLCJzZWxlY3Rpb25fc29ydCIsInNlbGVjdGlvbl9jYWxsIiwic2VsZWN0aW9uX25vZGVzIiwic2VsZWN0aW9uX25vZGUiLCJzZWxlY3Rpb25fc2l6ZSIsInNlbGVjdGlvbl9lbXB0eSIsInNlbGVjdGlvbl9lYWNoIiwic2VsZWN0aW9uX2F0dHIiLCJzZWxlY3Rpb25fc3R5bGUiLCJzZWxlY3Rpb25fcHJvcGVydHkiLCJjbGFzc2VkIiwic2VsZWN0aW9uX2NsYXNzZWQiLCJzZWxlY3Rpb25fdGV4dCIsInNlbGVjdGlvbl9odG1sIiwicmFpc2UiLCJzZWxlY3Rpb25fcmFpc2UiLCJsb3dlciIsInNlbGVjdGlvbl9sb3dlciIsInNlbGVjdGlvbl9hcHBlbmQiLCJzZWxlY3Rpb25faW5zZXJ0Iiwic2VsZWN0aW9uX3JlbW92ZSIsImNsb25lIiwic2VsZWN0aW9uX2Nsb25lIiwic2VsZWN0aW9uX2RhdHVtIiwic2VsZWN0aW9uX29uIiwic2VsZWN0aW9uX2Rpc3BhdGNoIiwiY29uc3RhbnROdWxsIiwiYmVmb3JlIiwib25lbnRlciIsIm9udXBkYXRlIiwib25leGl0IiwicHJldmlvdXNTaWJsaW5nIiwiZmlyc3RDaGlsZCIsImdyb3VwczAiLCJncm91cHMxIiwibTAiLCJtZXJnZXMiLCJncm91cDAiLCJncm91cDEiLCJmaWx0ZXJFdmVudHMiLCJlbGVtZW50IiwibW91c2VlbnRlciIsIm1vdXNlbGVhdmUiLCJmaWx0ZXJDb250ZXh0TGlzdGVuZXIiLCJsaXN0ZW5lciIsImNvbnRleHRMaXN0ZW5lciIsInJlbGF0ZWQiLCJyZWxhdGVkVGFyZ2V0IiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJldmVudDEiLCJldmVudDAiLCJvblJlbW92ZSIsIl9fb24iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY2FwdHVyZSIsIm9uQWRkIiwid3JhcCIsImFkZEV2ZW50TGlzdGVuZXIiLCJwcm9wZXJ0eVJlbW92ZSIsInByb3BlcnR5Q29uc3RhbnQiLCJwcm9wZXJ0eUZ1bmN0aW9uIiwic3Vibm9kZSIsInNlbGVjdG9yQWxsIiwiY29tcGFyZU5vZGUiLCJzb3J0Z3JvdXBzIiwic29ydGdyb3VwIiwic3R5bGVSZW1vdmUiLCJyZW1vdmVQcm9wZXJ0eSIsInN0eWxlQ29uc3RhbnQiLCJwcmlvcml0eSIsInNldFByb3BlcnR5Iiwic3R5bGVGdW5jdGlvbiIsInN0eWxlVmFsdWUiLCJ0ZXh0UmVtb3ZlIiwidGV4dENvbnRlbnQiLCJ0ZXh0Q29uc3RhbnQiLCJ0ZXh0RnVuY3Rpb24iLCJub25lIiwiYXJjSW5uZXJSYWRpdXMiLCJpbm5lclJhZGl1cyIsImFyY091dGVyUmFkaXVzIiwib3V0ZXJSYWRpdXMiLCJhcmNTdGFydEFuZ2xlIiwiYXJjRW5kQW5nbGUiLCJhcmNQYWRBbmdsZSIsIngxMCIsInkxMCIsIngzMiIsInkzMiIsImNvcm5lclRhbmdlbnRzIiwicmMiLCJveCIsIm95IiwieDExIiwieTExIiwiY3gwIiwiY3gxIiwiZHgwIiwiZHkwIiwiZHgxIiwiZHkxIiwiY29ybmVyUmFkaXVzIiwicGFkUmFkaXVzIiwiYTAxIiwiYTExIiwiYTEwIiwiZGEwIiwiZGExIiwiYXAiLCJycCIsInJjMCIsInJjMSIsIm9jIiwia2MiLCJsYyIsInBvaW50WCIsInBvaW50WSIsImRlZmluZWQiLCJjdXJ2ZSIsImN1cnZlTGluZWFyIiwiZGVmaW5lZDAiLCJ4MHoiLCJ5MHoiLCJhcmVhU3RhcnQiLCJhcmVhRW5kIiwiYXJlYWxpbmUiLCJsaW5lWDAiLCJsaW5lWTAiLCJsaW5lWTEiLCJsaW5lWDEiLCJjdXJ2ZVJhZGlhbExpbmVhciIsImxpbmVTdGFydEFuZ2xlIiwibGluZVJhZGlhbCIsImxpbmVFbmRBbmdsZSIsImxpbmVJbm5lclJhZGl1cyIsImxpbmVPdXRlclJhZGl1cyIsImN1cnZlUmFkaWFsIiwiX2N1cnZlIiwiQmFzaXMiLCJCYXNpc0Nsb3NlZCIsIl94MiIsIl94MyIsIl94NCIsIl95MiIsIl95MyIsIl95NCIsIkJhc2lzT3BlbiIsIkJ1bmRsZSIsIl9iYXNpcyIsIl9iZXRhIiwiYnVuZGxlIiwiX2siLCJDYXJkaW5hbCIsInRlbnNpb24iLCJjYXJkaW5hbCIsIkNhcmRpbmFsQ2xvc2VkIiwiX3g1IiwiX3k1IiwiQ2FyZGluYWxPcGVuIiwiX2wwMV9hIiwiX2wwMV8yYSIsIl9sMTJfYSIsIl9sMTJfMmEiLCJfbDIzX2EiLCJfbDIzXzJhIiwiQ2F0bXVsbFJvbSIsIl9hbHBoYSIsIngyMyIsInkyMyIsImNhdG11bGxSb20iLCJDYXRtdWxsUm9tQ2xvc2VkIiwiQ2F0bXVsbFJvbU9wZW4iLCJMaW5lYXIiLCJMaW5lYXJDbG9zZWQiLCJzbG9wZTMiLCJoMCIsImgxIiwic2xvcGUyIiwiTW9ub3RvbmVYIiwiX3QwIiwiTW9ub3RvbmVZIiwiUmVmbGVjdENvbnRleHQiLCJtb25vdG9uZVgiLCJtb25vdG9uZVkiLCJOYXR1cmFsIiwicHgiLCJjb250cm9sUG9pbnRzIiwicHkiLCJSYWRpYWwiLCJyYWRpYWwiLCJTdGVwIiwiX3QiLCJzdGVwQmVmb3JlIiwic3RlcEFmdGVyIiwibGlua1NvdXJjZSIsImxpbmtUYXJnZXQiLCJjdXJ2ZUhvcml6b250YWwiLCJjdXJ2ZVZlcnRpY2FsIiwicG9pbnRSYWRpYWwiLCJwMiIsInAzIiwibGlua0hvcml6b250YWwiLCJsaW5rVmVydGljYWwiLCJsaW5rUmFkaWFsIiwic2VyaWVzIiwieW4iLCJzMiIsInNpIiwic2lqMCIsInNpajEiLCJzMyIsInNrajAiLCJza2oxIiwicGVha3MiLCJwZWFrIiwidmkiLCJ2aiIsImFwcGVhcmFuY2UiLCJ0b3BzIiwiYm90dG9tcyIsImRlc2NlbmRpbmciLCJwaWUiLCJhcmNzIiwic3RhY2tWYWx1ZSIsIm9yZGVyTm9uZSIsIm9mZnNldE5vbmUiLCJzdGFjayIsImt6Iiwic3oiLCJveiIsImtpIiwic2lqIiwic3ltYm9scyIsImRpYW1vbmQiLCJzcXVhcmUiLCJzdGFyIiwidHJpYW5nbGUiLCJ3eWUiLCJkcmF3IiwidGFuMzAiLCJ0YW4zMF8yIiwia2EiLCJrciIsInNxcnQzIiwidGltZVBhcnNlIiwidXRjUGFyc2UiLCJkYXRlVGltZSIsInRpbWUiLCJwZXJpb2RzIiwiZGF5cyIsInNob3J0RGF5cyIsIm1vbnRocyIsInNob3J0TW9udGhzIiwiaXNvU3BlY2lmaWVyIiwiZm9ybWF0SXNvTmF0aXZlIiwidG9JU09TdHJpbmciLCJmb3JtYXRJc28iLCJwYXJzZUlzb05hdGl2ZSIsInBhcnNlSXNvIiwibG9jYWxEYXRlIiwiSCIsIkwiLCJzZXRGdWxsWWVhciIsInV0Y0RhdGUiLCJzZXRVVENGdWxsWWVhciIsIm5ld1llYXIiLCJsb2NhbGVfZGF0ZVRpbWUiLCJsb2NhbGVfZGF0ZSIsImxvY2FsZV90aW1lIiwibG9jYWxlX3BlcmlvZHMiLCJsb2NhbGVfd2Vla2RheXMiLCJsb2NhbGVfc2hvcnRXZWVrZGF5cyIsImxvY2FsZV9tb250aHMiLCJsb2NhbGVfc2hvcnRNb250aHMiLCJwZXJpb2RSZSIsImZvcm1hdFJlIiwicGVyaW9kTG9va3VwIiwiZm9ybWF0TG9va3VwIiwid2Vla2RheVJlIiwid2Vla2RheUxvb2t1cCIsInNob3J0V2Vla2RheVJlIiwic2hvcnRXZWVrZGF5TG9va3VwIiwibW9udGhSZSIsIm1vbnRoTG9va3VwIiwic2hvcnRNb250aFJlIiwic2hvcnRNb250aExvb2t1cCIsImZvcm1hdHMiLCJmb3JtYXRTaG9ydFdlZWtkYXkiLCJmb3JtYXRXZWVrZGF5IiwiZm9ybWF0U2hvcnRNb250aCIsImZvcm1hdERheU9mTW9udGgiLCJmb3JtYXRNaWNyb3NlY29uZHMiLCJmb3JtYXRIb3VyMjQiLCJmb3JtYXRIb3VyMTIiLCJmb3JtYXREYXlPZlllYXIiLCJmb3JtYXRNaWxsaXNlY29uZHMiLCJmb3JtYXRNb250aE51bWJlciIsImZvcm1hdE1pbnV0ZXMiLCJmb3JtYXRQZXJpb2QiLCJmb3JtYXRVbml4VGltZXN0YW1wIiwiZm9ybWF0VW5peFRpbWVzdGFtcFNlY29uZHMiLCJmb3JtYXRTZWNvbmRzIiwiZm9ybWF0V2Vla2RheU51bWJlck1vbmRheSIsImZvcm1hdFdlZWtOdW1iZXJTdW5kYXkiLCJmb3JtYXRXZWVrTnVtYmVySVNPIiwiZm9ybWF0V2Vla2RheU51bWJlclN1bmRheSIsImZvcm1hdFdlZWtOdW1iZXJNb25kYXkiLCJmb3JtYXRGdWxsWWVhciIsImZvcm1hdFpvbmUiLCJmb3JtYXRMaXRlcmFsUGVyY2VudCIsInV0Y0Zvcm1hdHMiLCJmb3JtYXRVVENTaG9ydFdlZWtkYXkiLCJmb3JtYXRVVENXZWVrZGF5IiwiZm9ybWF0VVRDU2hvcnRNb250aCIsImZvcm1hdFVUQ01vbnRoIiwiZm9ybWF0VVRDRGF5T2ZNb250aCIsImZvcm1hdFVUQ01pY3Jvc2Vjb25kcyIsImZvcm1hdFVUQ0hvdXIyNCIsImZvcm1hdFVUQ0hvdXIxMiIsImZvcm1hdFVUQ0RheU9mWWVhciIsImZvcm1hdFVUQ01pbGxpc2Vjb25kcyIsImZvcm1hdFVUQ01vbnRoTnVtYmVyIiwiZm9ybWF0VVRDTWludXRlcyIsImZvcm1hdFVUQ1BlcmlvZCIsImZvcm1hdFVUQ1NlY29uZHMiLCJmb3JtYXRVVENXZWVrZGF5TnVtYmVyTW9uZGF5IiwiZm9ybWF0VVRDV2Vla051bWJlclN1bmRheSIsImZvcm1hdFVUQ1dlZWtOdW1iZXJJU08iLCJmb3JtYXRVVENXZWVrZGF5TnVtYmVyU3VuZGF5IiwiZm9ybWF0VVRDV2Vla051bWJlck1vbmRheSIsImZvcm1hdFVUQ1llYXIiLCJmb3JtYXRVVENGdWxsWWVhciIsImZvcm1hdFVUQ1pvbmUiLCJwYXJzZXMiLCJwYXJzZVNob3J0V2Vla2RheSIsInBhcnNlV2Vla2RheSIsInBhcnNlU2hvcnRNb250aCIsInBhcnNlTW9udGgiLCJwYXJzZUxvY2FsZURhdGVUaW1lIiwicGFyc2VEYXlPZk1vbnRoIiwicGFyc2VNaWNyb3NlY29uZHMiLCJwYXJzZUhvdXIyNCIsInBhcnNlRGF5T2ZZZWFyIiwicGFyc2VNaWxsaXNlY29uZHMiLCJwYXJzZU1vbnRoTnVtYmVyIiwicGFyc2VNaW51dGVzIiwicGFyc2VQZXJpb2QiLCJwYXJzZVVuaXhUaW1lc3RhbXAiLCJwYXJzZVVuaXhUaW1lc3RhbXBTZWNvbmRzIiwicGFyc2VTZWNvbmRzIiwicGFyc2VXZWVrZGF5TnVtYmVyTW9uZGF5IiwicGFyc2VXZWVrTnVtYmVyU3VuZGF5IiwicGFyc2VXZWVrTnVtYmVySVNPIiwicGFyc2VXZWVrZGF5TnVtYmVyU3VuZGF5IiwicGFyc2VXZWVrTnVtYmVyTW9uZGF5IiwicGFyc2VMb2NhbGVEYXRlIiwicGFyc2VMb2NhbGVUaW1lIiwicGFyc2VZZWFyIiwicGFyc2VGdWxsWWVhciIsInBhcnNlWm9uZSIsInBhcnNlTGl0ZXJhbFBlcmNlbnQiLCJwYWRzIiwiY2hhckF0IiwibmV3UGFyc2UiLCJuZXdEYXRlIiwicGFyc2VTcGVjaWZpZXIiLCJRIiwiViIsImdldFVUQ0RheSIsInV0Y01vbmRheSIsImdldERheSIsInRpbWVNb25kYXkiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsIlUiLCJaIiwiZ2V0SG91cnMiLCJudW1iZXJSZSIsInBlcmNlbnRSZSIsInJlcXVvdGVSZSIsInJlcXVvdGUiLCJnZXRNaWxsaXNlY29uZHMiLCJnZXRNaW51dGVzIiwiZ2V0U2Vjb25kcyIsInRpbWVTdW5kYXkiLCJ0aW1lVGh1cnNkYXkiLCJnZXRUaW1lem9uZU9mZnNldCIsImRvdyIsInV0Y1N1bmRheSIsInV0Y1RodXJzZGF5Iiwic2V0SG91cnMiLCJzZXREYXRlIiwibmV3SW50ZXJ2YWwiLCJmbG9vcmkiLCJvZmZzZXRpIiwiZmllbGQiLCJzZXRNb250aCIsInNldFVUQ0hvdXJzIiwic2V0VVRDRGF0ZSIsInV0Y0RheXMiLCJzZXRVVENNaW51dGVzIiwidXRjSG91cnMiLCJzZXRVVENTZWNvbmRzIiwidXRjTWludXRlcyIsInNldFVUQ01vbnRoIiwidXRjTW9udGhzIiwidXRjV2Vla2RheSIsInV0Y1R1ZXNkYXkiLCJ1dGNXZWRuZXNkYXkiLCJ1dGNGcmlkYXkiLCJ1dGNTYXR1cmRheSIsInV0Y1N1bmRheXMiLCJ1dGNNb25kYXlzIiwidXRjVHVlc2RheXMiLCJ1dGNXZWRuZXNkYXlzIiwidXRjVGh1cnNkYXlzIiwidXRjRnJpZGF5cyIsInV0Y1NhdHVyZGF5cyIsInV0Y1llYXJzIiwid2Vla2RheSIsInN1bmRheSIsIm1vbmRheSIsInR1ZXNkYXkiLCJ3ZWRuZXNkYXkiLCJ0aHVyc2RheSIsImZyaWRheSIsInNhdHVyZGF5Iiwic3VuZGF5cyIsIm1vbmRheXMiLCJ0dWVzZGF5cyIsIndlZG5lc2RheXMiLCJ0aHVyc2RheXMiLCJmcmlkYXlzIiwic2F0dXJkYXlzIiwieWVhcnMiLCJkZWxheSIsIlRpbWVyIiwidG90YWwiLCJub3ciLCJlbGFwc2VkIiwiZnJhbWUiLCJ0aW1lb3V0IiwicG9rZURlbGF5IiwidGFza0hlYWQiLCJ0YXNrVGFpbCIsImNsb2NrTGFzdCIsImNsb2NrTm93IiwiY2xvY2tTa2V3IiwiY2xvY2siLCJwZXJmb3JtYW5jZSIsInNldEZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2xlYXJOb3ciLCJfY2FsbCIsIl90aW1lIiwiVHlwZUVycm9yIiwic2xlZXAiLCJ0aW1lckZsdXNoIiwid2FrZSIsIm5hcCIsInBva2UiLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJzY2hlZHVsZXMiLCJfX3RyYW5zaXRpb24iLCJzY2hlZHVsZSIsIlNDSEVEVUxFRCIsIlRyYW5zaXRpb24iLCJTVEFSVElORyIsIkVORElORyIsIkVOREVEIiwic2VsZWN0aW9uX2ludGVycnVwdCIsInNlbGVjdGlvbl90cmFuc2l0aW9uIiwiZGVmYXVsdFRpbWluZyIsImVhc2UiLCJlYXNlQ3ViaWNJbk91dCIsImluaGVyaXQiLCJ0aW1pbmciLCJfaWQiLCJfbmFtZSIsIm5ld0lkIiwic3RyaW5nMDAiLCJzdHJpbmcxIiwiaW50ZXJwb2xhdGUwIiwic3RyaW5nMCIsInN0cmluZzEwIiwiYXR0clR3ZWVuIiwidHdlZW5WYWx1ZSIsImF0dHJJbnRlcnBvbGF0ZSIsImF0dHJJbnRlcnBvbGF0ZU5TIiwiYXR0clR3ZWVuTlMiLCJfdmFsdWUiLCJkZWxheUZ1bmN0aW9uIiwiZGVsYXlDb25zdGFudCIsImR1cmF0aW9uRnVuY3Rpb24iLCJkdXJhdGlvbkNvbnN0YW50IiwiZWFzZUNvbnN0YW50Iiwib24wIiwib24xIiwiY2FuY2VsIiwic2VsZWN0aW9uX3Byb3RvdHlwZSIsInRyYW5zaXRpb25fc2VsZWN0IiwidHJhbnNpdGlvbl9zZWxlY3RBbGwiLCJ0cmFuc2l0aW9uX2ZpbHRlciIsInRyYW5zaXRpb25fbWVyZ2UiLCJ0cmFuc2l0aW9uX3NlbGVjdGlvbiIsInRyYW5zaXRpb25fdHJhbnNpdGlvbiIsInRyYW5zaXRpb25fb24iLCJ0cmFuc2l0aW9uX2F0dHIiLCJ0cmFuc2l0aW9uX2F0dHJUd2VlbiIsInRyYW5zaXRpb25fc3R5bGUiLCJzdHlsZVR3ZWVuIiwidHJhbnNpdGlvbl9zdHlsZVR3ZWVuIiwidHJhbnNpdGlvbl90ZXh0IiwidHJhbnNpdGlvbl9yZW1vdmUiLCJ0cmFuc2l0aW9uX3R3ZWVuIiwidHJhbnNpdGlvbl9kZWxheSIsInRyYW5zaXRpb25fZHVyYXRpb24iLCJ0cmFuc2l0aW9uX2Vhc2UiLCJ0cmFuc2l0aW9uX2VuZCIsImludGVycG9sYXRlUmdiIiwiaW50ZXJwb2xhdGVTdHJpbmciLCJvbkZ1bmN0aW9uIiwic2l0IiwicmVtb3ZlRnVuY3Rpb24iLCJlbXB0eU9uIiwiZW1wdHlUd2VlbiIsIkNSRUFURUQiLCJTVEFSVEVEIiwiUlVOTklORyIsInNlbGYiLCJzdHlsZU51bGwiLCJzdHlsZU1heWJlUmVtb3ZlIiwibGlzdGVuZXIwIiwic3R5bGVJbnRlcnBvbGF0ZSIsImlkMCIsImlkMSIsInR3ZWVuUmVtb3ZlIiwidHdlZW4wIiwidHdlZW4xIiwidHdlZW5GdW5jdGlvbiIsImJlYWNoUG9vbCIsIkJlYWNoIiwiUmVkQmxhY2tOb2RlIiwiZWRnZSIsInNpdGUiLCJjcmVhdGVCZWFjaCIsImJlYWNoIiwiZGV0YWNoQmVhY2giLCJkZXRhY2hDaXJjbGUiLCJiZWFjaGVzIiwicmVtb3ZlQmVhY2giLCJ2ZXJ0ZXgiLCJQIiwiZGlzYXBwZWFyaW5nIiwibEFyYyIsInJBcmMiLCJuQXJjcyIsImlBcmMiLCJzZXRFZGdlRW5kIiwiY3JlYXRlRWRnZSIsImF0dGFjaENpcmNsZSIsImFkZEJlYWNoIiwiZGlyZWN0cml4IiwiZHhsIiwiZHhyIiwibGVmdEJyZWFrUG9pbnQiLCJyaWdodEJyZWFrUG9pbnQiLCJSIiwiY3JlYXRlQ2VsbCIsIm5ld0FyYyIsImxTaXRlIiwiclNpdGUiLCJoYiIsImhjIiwicmZvY3giLCJyZm9jeSIsInBieTIiLCJsZm9jeCIsImxmb2N5IiwicGxieTIiLCJobCIsImFieTIiLCJjZWxscyIsImhhbGZlZGdlcyIsImNlbGxIYWxmZWRnZUFuZ2xlIiwiY2VsbCIsInZhIiwidmIiLCJjZWxsSGFsZmVkZ2VTdGFydCIsImNlbGxIYWxmZWRnZUVuZCIsInNvcnRDZWxsSGFsZmVkZ2VzIiwiZWRnZXMiLCJjbGlwQ2VsbHMiLCJuQ2VsbHMiLCJpQ2VsbCIsImlIYWxmZWRnZSIsIm5IYWxmZWRnZXMiLCJzdGFydFgiLCJzdGFydFkiLCJlbmRYIiwiZW5kWSIsImNyZWF0ZUJvcmRlckVkZ2UiLCJkYyIsInYwMSIsInYxMSIsInYxMCIsImNpcmNsZVBvb2wiLCJmaXJzdENpcmNsZSIsIkNpcmNsZSIsImNTaXRlIiwiaGEiLCJ0cmlhbmdsZUFyZWEiLCJsZXhpY29ncmFwaGljIiwiRGlhZ3JhbSIsInNpdGVzIiwiUmVkQmxhY2tUcmVlIiwiY2xpcEVkZ2VzIiwidHJpYW5nbGVzIiwiX2ZvdW5kIiwiY2xpcEVkZ2UiLCJjb25uZWN0RWRnZSIsImx4IiwibHkiLCJyeCIsInJ5IiwiZm0iLCJmYiIsImFmdGVyIiwiZ3JhbmRwYSIsInVuY2xlIiwiUmVkQmxhY2tGaXJzdCIsIlJlZEJsYWNrUm90YXRlTGVmdCIsIlJlZEJsYWNrUm90YXRlUmlnaHQiLCJzaWJsaW5nIiwidm9yb25vaSIsIlpvb21FdmVudCIsIlRyYW5zZm9ybSIsImFwcGx5WCIsImFwcGx5WSIsImxvY2F0aW9uIiwiaW52ZXJ0WCIsImludmVydFkiLCJyZXNjYWxlWCIsInJlc2NhbGVZIiwiX196b29tIiwiU1ZHRWxlbWVudCIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwiZGVmYXVsdFRyYW5zZm9ybSIsImRlZmF1bHRXaGVlbERlbHRhIiwiZGVsdGFZIiwiZGVsdGFNb2RlIiwiZGVmYXVsdENvbnN0cmFpbiIsInRyYW5zbGF0ZUV4dGVudCIsImNvbnN0cmFpbiIsIndoZWVsRGVsdGEiLCJzY2FsZUV4dGVudCIsImludGVycG9sYXRlWm9vbSIsInRvdWNoc3RhcnRpbmciLCJ0b3VjaERlbGF5Iiwid2hlZWxEZWxheSIsInpvb20iLCJ3aGVlbGVkIiwiZGJsY2xpY2tlZCIsImNvbGxlY3Rpb24iLCJzY2FsZUJ5Iiwic2NhbGVUbyIsImswIiwiazEiLCJ0cmFuc2xhdGVCeSIsInRyYW5zbGF0ZVRvIiwiR2VzdHVyZSIsInRvdWNoMCIsInRvdWNoMSIsIndoZWVsIiwid2hlZWxpZGxlZCIsImwwIiwibDEiLCJkcCIsImRsIiwidmVyc2lvbiIsImRlc2NyaXB0aW9uIiwia2V5d29yZHMiLCJob21lcGFnZSIsImxpY2Vuc2UiLCJhdXRob3IiLCJtYWluIiwidW5wa2ciLCJqc2RlbGl2ciIsIm1vZHVsZSIsInJlcG9zaXRvcnkiLCJzY3JpcHRzIiwiZGV2RGVwZW5kZW5jaWVzIiwiZGVwZW5kZW5jaWVzIiwibmF2aWdhdG9yIiwiJCIsImlvbiIsInNvdW5kIiwid2FybiIsImNvbnNvbGUiLCJwcm9wIiwiQXVkaW8iLCJmdW5jIiwicGxheSIsInBhdXNlIiwicHJlbG9hZCIsImRlc3Ryb3kiLCJpc19pT1MiLCJhcHBWZXJzaW9uIiwic291bmRzX251bSIsInNldHRpbmdzIiwic291bmRzIiwic3VwcG9ydGVkIiwiY3JlYXRlU291bmQiLCJvYmoiLCJhbGlhcyIsIlNvdW5kIiwib3B0aW9ucyIsInZvbHVtZSIsIm11bHRpcGxheSIsImxvb3AiLCJzcHJpdGUiLCJzY29wZSIsInJlYWR5X2NhbGxiYWNrIiwiZW5kZWRfY2FsbGJhY2siLCJWRVJTSU9OIiwiX21ldGhvZCIsIm1ldGhvZCIsImlvblNvdW5kIiwiQXVkaW9Db250ZXh0Iiwid2Via2l0QXVkaW9Db250ZXh0IiwiYXVkaW8iLCJyZXF1ZXN0IiwiZXh0IiwidXJsIiwibG9hZGVkIiwiZGVjb2RlZCIsIm5vX2ZpbGUiLCJhdXRvcGxheSIsImxvYWQiLCJyZWFkeSIsImFib3J0IiwiY3JlYXRlVXJsIiwibm9fY2FjaGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJyZXNwb25zZVR5cGUiLCJzZW5kIiwicmVsb2FkIiwicmVhZHlTdGF0ZSIsImRlY29kZSIsImRlY29kZUF1ZGlvRGF0YSIsInNldEJ1ZmZlciIsImNvbmZpZyIsIlN0cmVhbSIsInBhcnQiLCJzZXRWb2x1bWUiLCJzcHJpdGVfcGFydCIsInNldExvb3AiLCJnYWluIiwicGxheWluZyIsInBhdXNlZCIsInRpbWVfc3RhcnRlZCIsInRpbWVfZW5kZWQiLCJ0aW1lX3BsYXllZCIsInRpbWVfb2Zmc2V0IiwiZGlzY29ubmVjdCIsImNyZWF0ZUdhaW4iLCJjcmVhdGVCdWZmZXJTb3VyY2UiLCJjb25uZWN0IiwiZGVzdGluYXRpb24iLCJvbmVuZGVkIiwiX3BsYXkiLCJub3RlT24iLCJub3RlT2ZmIiwiX2VuZGVkIiwiY2hlY2tTdXBwb3J0IiwiY2FuX3BsYXlfbXAzIiwiY2FuUGxheVR5cGUiLCJjYW5fcGxheV9vZ2ciLCJjYW5fcGxheV9hYWMiLCJpdGVtIiwiaW5pdGVkIiwiX3JlYWR5IiwiX3Njb3BlIiwic3RhcnRfdGltZSIsInBhdXNlZF90aW1lIiwicGxheWVkX3RpbWUiLCJjYW5fcGxheV90aHJvdWdoIiwiX3VwZGF0ZSIsInJhbmQiLCJjdXJyZW50VGltZSIsImN1cnJlbnRfdGltZSIsInBsYXllZCIsImxvb3BlciIsImpRdWVyeSIsIk1vdXNlIiwibGlua0RhdGEiLCJsaW5rTGluZSIsIm5vZGVDaXJjbGUiLCJub2RlVGV4dCIsIm5vZGVJbmRleCIsImxpbmVJbmRleCIsIm5vZGVTb3VyY2UiLCJub2RlVGFyZ2V0Iiwic2VsZWN0TGluZSIsImJvZHkiLCJncmFiVHlwZUMiLCJncmFiVHlwZUIiLCJOZXR3b3JrIiwiZmxhdm9yRGF0YSIsInVtYW1pRGF0YSIsImlzU3AiLCJzdmdJRCIsIm5vZGVEYXRhIiwiY2VudGVyWCIsImNlbnRlclkiLCJzY2FsZVJhdGlvIiwibGFiZWwiLCJsZWdlbmQiLCJsZWdlbmROYW1lIiwibGVnZW5kQ29sb3IiLCJ3YWxsTWFyZ2luIiwibW91c2VEb3duIiwic2V0SW9uIiwiem9vbUdyb3VwIiwiem9vbV9oYW5kbGVyIiwiem9vbV9hY3Rpb25zIiwiaW5pdGlhbFRyYW5zZm9ybSIsInNldExpbmsiLCJzZXROb2RlIiwic2V0TGFiZWwiLCJzZXRTaW11bGF0aW9uIiwiZ3JvdXBfaWRfcyIsImdyb3VwX2lkIiwiZHJhZ3N0YXJ0ZWQiLCJkcmFnZ2luZyIsImRyYWdlbmRlZCIsInRpY2tlZCIsIm1vdXNlZG93biIsImN1cnNvciIsIm1vdXNldXAiLCJzZWxlY3RlZFR5cGUiLCJwcmV2Tm9kZVBvc2l0aW9uIiwiVXBkYXRlIiwiZmxhdm9yU2ltdWxhdGlvbiIsInVtYW1pU2ltdWxhdGlvbiIsInJlc0RlbGV0ZU9iaiIsInJlc0FkZE9iaiIsImRlbGV0ZU9iaiIsImFkZE9iaiIsInN0b3JlUHJldmlvdXNOb2RlUG9zaXRpb24iLCJ0cmFuc2l0Tm9kZVBvc2l0aW9uIiwidHJhbnNpdExpbmtQb3NpdGlvbiIsIm1vdXNlb3ZlciIsIm1vdXNlb3V0IiwiZGVsZXRlTGlua0RhdGEiLCJkZWxldGVOb2RlRGF0YSIsImRlbGV0ZUxhYmVsRGF0YSIsImFkZExpbmtEYXRhIiwiYWRkTm9kZURhdGEiLCJhZGRMYWJlbERhdGEiLCJsaW5rTGluZUVudGVyIiwibGlua1NWRyIsImZpcnN0U1ZHIiwiZHVyYXRpb25UaW1lIiwibm9kZVBvc2l0aW9uSW5kZXgiLCJpMiIsInNvdXJjZU5hbWUiLCJ0YXJnZXROYW1lIiwidXNlckFnZW50IiwibmV0d29yayIsInNldExlZ2VuZCIsInJlbmRlciIsInNldE1vdXNlQWN0aW9uIiwiZGF0YVR5cGVTZWxlY3RvciIsImdldEVsZW1lbnRCeUlkIiwib25jaGFuZ2UiLCJzZWxlY3RlZEluZGV4Il0sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrREFBMEMsZ0NBQWdDO0FBQzFFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0VBQXdELGtCQUFrQjtBQUMxRTtBQUNBLHlEQUFpRCxjQUFjO0FBQy9EOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBeUMsaUNBQWlDO0FBQzFFLHdIQUFnSCxtQkFBbUIsRUFBRTtBQUNySTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG1DQUEyQiwwQkFBMEIsRUFBRTtBQUN2RCx5Q0FBaUMsZUFBZTtBQUNoRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4REFBc0QsK0RBQStEOztBQUVySDtBQUNBOzs7QUFHQTtBQUNBOzs7Ozs7Ozs7Ozs7O0FDbEZBO0FBQUE7QUFBQTtBQUFBLElBQUlBLEtBQUssR0FBR0MsS0FBSyxDQUFDQyxTQUFsQjtBQUVPLElBQUlDLEtBQUssR0FBR0gsS0FBSyxDQUFDRyxLQUFsQjtBQUNBLElBQUlDLEdBQUcsR0FBR0osS0FBSyxDQUFDSSxHQUFoQixDOzs7Ozs7Ozs7Ozs7QUNIUDtBQUFlLHlFQUFTQyxDQUFULEVBQVlDLENBQVosRUFBZTtBQUM1QixTQUFPRCxDQUFDLEdBQUdDLENBQUosR0FBUSxDQUFDLENBQVQsR0FBYUQsQ0FBQyxHQUFHQyxDQUFKLEdBQVEsQ0FB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RCxFQUFhLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBYixDQUFELENBTFUsRUFNVixDQUFDLENBQUMsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFELEVBQWEsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFiLENBQUQsRUFBMkIsQ0FBQyxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQUQsRUFBYSxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQWIsQ0FBM0IsQ0FOVSxFQU9WLENBQUMsQ0FBQyxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQUQsRUFBYSxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQWIsQ0FBRCxDQVBVLEVBUVYsQ0FBQyxDQUFDLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBRCxFQUFhLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBYixDQUFELENBUlUsRUFTVixDQUFDLENBQUMsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFELEVBQWEsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFiLENBQUQsQ0FUVSxFQVVWLENBQUMsQ0FBQyxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQUQsRUFBYSxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQWIsQ0FBRCxDQVZVLEVBV1YsQ0FBQyxDQUFDLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBRCxFQUFhLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBYixDQUFELEVBQTJCLENBQUMsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFELEVBQWEsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFiLENBQTNCLENBWFUsRUFZVixDQUFDLENBQUMsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFELEVBQWEsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFiLENBQUQsQ0FaVSxFQWFWLENBQUMsQ0FBQyxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQUQsRUFBYSxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQWIsQ0FBRCxDQWJVLEVBY1YsQ0FBQyxDQUFDLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBRCxFQUFhLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBYixDQUFE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QUExZixDQUFuQixDOzs7Ozs7Ozs7Ozs7QUNkUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtB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QUFWLENBQW9CcGpFLE9BQXBCLENBQTRCLE1BQTVCLElBQXNDLENBRjlCLElBR1JtNEQsU0FBUyxDQUFDaUwsU0FBVixDQUFvQnBqRSxPQUFwQixDQUE0QixTQUE1QixJQUF5QyxDQUg3QztBQUlBdzRELFNBQU8sQ0FBQ2w4RSxHQUFSLENBQVlvakYsSUFBWjtBQUdBLE1BQU0yRCxPQUFPLEdBQUcsSUFBSTlELGdEQUFKLENBQVlDLHlEQUFaLEVBQXdCQyx3REFBeEIsRUFBbUNDLElBQW5DLEVBQXlDLFFBQXpDLENBQWhCO0FBQ0EyRCxTQUFPLENBQUNDLFNBQVI7QUFDQUQsU0FBTyxDQUFDRSxNQUFSO0FBQ0FGLFNBQU8sQ0FBQ0csY0FBUixHQWJLLENBZUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTUMsZ0JBQWdCLEdBQUd2aEUsUUFBUSxDQUFDd2hFLGNBQVQsQ0FBd0IsVUFBeEIsQ0FBekI7O0FBQ0FELGtCQUFnQixDQUFDRSxRQUFqQixHQUE0QixZQUFZO0FBQ3RDLFFBQU1uQyxZQUFZLEdBQUcsS0FBSzlILE9BQUwsQ0FBYSxLQUFLa0ssYUFBbEIsRUFBaUM1cUYsS0FBdEQ7QUFDQXFxRixXQUFPLENBQUN4NUIsTUFBUixDQUFlMjNCLFlBQWY7QUFDQTZCLFdBQU8sQ0FBQ0csY0FBUjtBQUNBdGhFLFlBQVEsQ0FBQ3doRSxjQUFULENBQXdCLElBQXhCLEVBQThCcnlCLFdBQTlCLEdBQTRDbXdCLFlBQVksR0FBRyxVQUEzRDtBQUNELEdBTEQ7QUFRRCxDQTdCRCxJIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gXCIuL3NyYy9pbmRleC5qc1wiKTtcbiIsInZhciBhcnJheSA9IEFycmF5LnByb3RvdHlwZTtcblxuZXhwb3J0IHZhciBzbGljZSA9IGFycmF5LnNsaWNlO1xuZXhwb3J0IHZhciBtYXAgPSBhcnJheS5tYXA7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBhIDwgYiA/IC0xIDogYSA+IGIgPyAxIDogYSA+PSBiID8gMCA6IE5hTjtcbn1cbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nXCI7XG5pbXBvcnQgYmlzZWN0b3IgZnJvbSBcIi4vYmlzZWN0b3JcIjtcblxudmFyIGFzY2VuZGluZ0Jpc2VjdCA9IGJpc2VjdG9yKGFzY2VuZGluZyk7XG5leHBvcnQgdmFyIGJpc2VjdFJpZ2h0ID0gYXNjZW5kaW5nQmlzZWN0LnJpZ2h0O1xuZXhwb3J0IHZhciBiaXNlY3RMZWZ0ID0gYXNjZW5kaW5nQmlzZWN0LmxlZnQ7XG5leHBvcnQgZGVmYXVsdCBiaXNlY3RSaWdodDtcbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbXBhcmUpIHtcbiAgaWYgKGNvbXBhcmUubGVuZ3RoID09PSAxKSBjb21wYXJlID0gYXNjZW5kaW5nQ29tcGFyYXRvcihjb21wYXJlKTtcbiAgcmV0dXJuIHtcbiAgICBsZWZ0OiBmdW5jdGlvbihhLCB4LCBsbywgaGkpIHtcbiAgICAgIGlmIChsbyA9PSBudWxsKSBsbyA9IDA7XG4gICAgICBpZiAoaGkgPT0gbnVsbCkgaGkgPSBhLmxlbmd0aDtcbiAgICAgIHdoaWxlIChsbyA8IGhpKSB7XG4gICAgICAgIHZhciBtaWQgPSBsbyArIGhpID4+PiAxO1xuICAgICAgICBpZiAoY29tcGFyZShhW21pZF0sIHgpIDwgMCkgbG8gPSBtaWQgKyAxO1xuICAgICAgICBlbHNlIGhpID0gbWlkO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGxvO1xuICAgIH0sXG4gICAgcmlnaHQ6IGZ1bmN0aW9uKGEsIHgsIGxvLCBoaSkge1xuICAgICAgaWYgKGxvID09IG51bGwpIGxvID0gMDtcbiAgICAgIGlmIChoaSA9PSBudWxsKSBoaSA9IGEubGVuZ3RoO1xuICAgICAgd2hpbGUgKGxvIDwgaGkpIHtcbiAgICAgICAgdmFyIG1pZCA9IGxvICsgaGkgPj4+IDE7XG4gICAgICAgIGlmIChjb21wYXJlKGFbbWlkXSwgeCkgPiAwKSBoaSA9IG1pZDtcbiAgICAgICAgZWxzZSBsbyA9IG1pZCArIDE7XG4gICAgICB9XG4gICAgICByZXR1cm4gbG87XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBhc2NlbmRpbmdDb21wYXJhdG9yKGYpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGQsIHgpIHtcbiAgICByZXR1cm4gYXNjZW5kaW5nKGYoZCksIHgpO1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJpbXBvcnQge3BhaXJ9IGZyb20gXCIuL3BhaXJzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlczAsIHZhbHVlczEsIHJlZHVjZSkge1xuICB2YXIgbjAgPSB2YWx1ZXMwLmxlbmd0aCxcbiAgICAgIG4xID0gdmFsdWVzMS5sZW5ndGgsXG4gICAgICB2YWx1ZXMgPSBuZXcgQXJyYXkobjAgKiBuMSksXG4gICAgICBpMCxcbiAgICAgIGkxLFxuICAgICAgaSxcbiAgICAgIHZhbHVlMDtcblxuICBpZiAocmVkdWNlID09IG51bGwpIHJlZHVjZSA9IHBhaXI7XG5cbiAgZm9yIChpMCA9IGkgPSAwOyBpMCA8IG4wOyArK2kwKSB7XG4gICAgZm9yICh2YWx1ZTAgPSB2YWx1ZXMwW2kwXSwgaTEgPSAwOyBpMSA8IG4xOyArK2kxLCArK2kpIHtcbiAgICAgIHZhbHVlc1tpXSA9IHJlZHVjZSh2YWx1ZTAsIHZhbHVlczFbaTFdKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdmFsdWVzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICByZXR1cm4gYiA8IGEgPyAtMSA6IGIgPiBhID8gMSA6IGIgPj0gYSA/IDAgOiBOYU47XG59XG4iLCJpbXBvcnQgdmFyaWFuY2UgZnJvbSBcIi4vdmFyaWFuY2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYXJyYXksIGYpIHtcbiAgdmFyIHYgPSB2YXJpYW5jZShhcnJheSwgZik7XG4gIHJldHVybiB2ID8gTWF0aC5zcXJ0KHYpIDogdjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgdmFsdWVvZikge1xuICB2YXIgbiA9IHZhbHVlcy5sZW5ndGgsXG4gICAgICBpID0gLTEsXG4gICAgICB2YWx1ZSxcbiAgICAgIG1pbixcbiAgICAgIG1heDtcblxuICBpZiAodmFsdWVvZiA9PSBudWxsKSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gRmluZCB0aGUgZmlyc3QgY29tcGFyYWJsZSB2YWx1ZS5cbiAgICAgIGlmICgodmFsdWUgPSB2YWx1ZXNbaV0pICE9IG51bGwgJiYgdmFsdWUgPj0gdmFsdWUpIHtcbiAgICAgICAgbWluID0gbWF4ID0gdmFsdWU7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7IC8vIENvbXBhcmUgdGhlIHJlbWFpbmluZyB2YWx1ZXMuXG4gICAgICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlc1tpXSkgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKG1pbiA+IHZhbHVlKSBtaW4gPSB2YWx1ZTtcbiAgICAgICAgICAgIGlmIChtYXggPCB2YWx1ZSkgbWF4ID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZWxzZSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gRmluZCB0aGUgZmlyc3QgY29tcGFyYWJsZSB2YWx1ZS5cbiAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkgIT0gbnVsbCAmJiB2YWx1ZSA+PSB2YWx1ZSkge1xuICAgICAgICBtaW4gPSBtYXggPSB2YWx1ZTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy5cbiAgICAgICAgICBpZiAoKHZhbHVlID0gdmFsdWVvZih2YWx1ZXNbaV0sIGksIHZhbHVlcykpICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChtaW4gPiB2YWx1ZSkgbWluID0gdmFsdWU7XG4gICAgICAgICAgICBpZiAobWF4IDwgdmFsdWUpIG1heCA9IHZhbHVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBbbWluLCBtYXhdO1xufVxuIiwiaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCBiaXNlY3QgZnJvbSBcIi4vYmlzZWN0XCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBleHRlbnQgZnJvbSBcIi4vZXh0ZW50XCI7XG5pbXBvcnQgaWRlbnRpdHkgZnJvbSBcIi4vaWRlbnRpdHlcIjtcbmltcG9ydCByYW5nZSBmcm9tIFwiLi9yYW5nZVwiO1xuaW1wb3J0IHt0aWNrU3RlcH0gZnJvbSBcIi4vdGlja3NcIjtcbmltcG9ydCBzdHVyZ2VzIGZyb20gXCIuL3RocmVzaG9sZC9zdHVyZ2VzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgdmFsdWUgPSBpZGVudGl0eSxcbiAgICAgIGRvbWFpbiA9IGV4dGVudCxcbiAgICAgIHRocmVzaG9sZCA9IHN0dXJnZXM7XG5cbiAgZnVuY3Rpb24gaGlzdG9ncmFtKGRhdGEpIHtcbiAgICB2YXIgaSxcbiAgICAgICAgbiA9IGRhdGEubGVuZ3RoLFxuICAgICAgICB4LFxuICAgICAgICB2YWx1ZXMgPSBuZXcgQXJyYXkobik7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICB2YWx1ZXNbaV0gPSB2YWx1ZShkYXRhW2ldLCBpLCBkYXRhKTtcbiAgICB9XG5cbiAgICB2YXIgeHogPSBkb21haW4odmFsdWVzKSxcbiAgICAgICAgeDAgPSB4elswXSxcbiAgICAgICAgeDEgPSB4elsxXSxcbiAgICAgICAgdHogPSB0aHJlc2hvbGQodmFsdWVzLCB4MCwgeDEpO1xuXG4gICAgLy8gQ29udmVydCBudW1iZXIgb2YgdGhyZXNob2xkcyBpbnRvIHVuaWZvcm0gdGhyZXNob2xkcy5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodHopKSB7XG4gICAgICB0eiA9IHRpY2tTdGVwKHgwLCB4MSwgdHopO1xuICAgICAgdHogPSByYW5nZShNYXRoLmNlaWwoeDAgLyB0eikgKiB0eiwgeDEsIHR6KTsgLy8gZXhjbHVzaXZlXG4gICAgfVxuXG4gICAgLy8gUmVtb3ZlIGFueSB0aHJlc2hvbGRzIG91dHNpZGUgdGhlIGRvbWFpbi5cbiAgICB2YXIgbSA9IHR6Lmxlbmd0aDtcbiAgICB3aGlsZSAodHpbMF0gPD0geDApIHR6LnNoaWZ0KCksIC0tbTtcbiAgICB3aGlsZSAodHpbbSAtIDFdID4geDEpIHR6LnBvcCgpLCAtLW07XG5cbiAgICB2YXIgYmlucyA9IG5ldyBBcnJheShtICsgMSksXG4gICAgICAgIGJpbjtcblxuICAgIC8vIEluaXRpYWxpemUgYmlucy5cbiAgICBmb3IgKGkgPSAwOyBpIDw9IG07ICsraSkge1xuICAgICAgYmluID0gYmluc1tpXSA9IFtdO1xuICAgICAgYmluLngwID0gaSA+IDAgPyB0eltpIC0gMV0gOiB4MDtcbiAgICAgIGJpbi54MSA9IGkgPCBtID8gdHpbaV0gOiB4MTtcbiAgICB9XG5cbiAgICAvLyBBc3NpZ24gZGF0YSB0byBiaW5zIGJ5IHZhbHVlLCBpZ25vcmluZyBhbnkgb3V0c2lkZSB0aGUgZG9tYWluLlxuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHggPSB2YWx1ZXNbaV07XG4gICAgICBpZiAoeDAgPD0geCAmJiB4IDw9IHgxKSB7XG4gICAgICAgIGJpbnNbYmlzZWN0KHR6LCB4LCAwLCBtKV0ucHVzaChkYXRhW2ldKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gYmlucztcbiAgfVxuXG4gIGhpc3RvZ3JhbS52YWx1ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh2YWx1ZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoXyksIGhpc3RvZ3JhbSkgOiB2YWx1ZTtcbiAgfTtcblxuICBoaXN0b2dyYW0uZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRvbWFpbiA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoW19bMF0sIF9bMV1dKSwgaGlzdG9ncmFtKSA6IGRvbWFpbjtcbiAgfTtcblxuICBoaXN0b2dyYW0udGhyZXNob2xkcyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aHJlc2hvbGQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IEFycmF5LmlzQXJyYXkoXykgPyBjb25zdGFudChzbGljZS5jYWxsKF8pKSA6IGNvbnN0YW50KF8pLCBoaXN0b2dyYW0pIDogdGhyZXNob2xkO1xuICB9O1xuXG4gIHJldHVybiBoaXN0b2dyYW07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiB4O1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGJpc2VjdCwgYmlzZWN0UmlnaHQsIGJpc2VjdExlZnR9IGZyb20gXCIuL2Jpc2VjdFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGFzY2VuZGluZ30gZnJvbSBcIi4vYXNjZW5kaW5nXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgYmlzZWN0b3J9IGZyb20gXCIuL2Jpc2VjdG9yXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3Jvc3N9IGZyb20gXCIuL2Nyb3NzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZGVzY2VuZGluZ30gZnJvbSBcIi4vZGVzY2VuZGluZ1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGRldmlhdGlvbn0gZnJvbSBcIi4vZGV2aWF0aW9uXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZXh0ZW50fSBmcm9tIFwiLi9leHRlbnRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBoaXN0b2dyYW19IGZyb20gXCIuL2hpc3RvZ3JhbVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRocmVzaG9sZEZyZWVkbWFuRGlhY29uaXN9IGZyb20gXCIuL3RocmVzaG9sZC9mcmVlZG1hbkRpYWNvbmlzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdGhyZXNob2xkU2NvdHR9IGZyb20gXCIuL3RocmVzaG9sZC9zY290dFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRocmVzaG9sZFN0dXJnZXN9IGZyb20gXCIuL3RocmVzaG9sZC9zdHVyZ2VzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbWF4fSBmcm9tIFwiLi9tYXhcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBtZWFufSBmcm9tIFwiLi9tZWFuXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbWVkaWFufSBmcm9tIFwiLi9tZWRpYW5cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBtZXJnZX0gZnJvbSBcIi4vbWVyZ2VcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBtaW59IGZyb20gXCIuL21pblwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHBhaXJzfSBmcm9tIFwiLi9wYWlyc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHBlcm11dGV9IGZyb20gXCIuL3Blcm11dGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBxdWFudGlsZX0gZnJvbSBcIi4vcXVhbnRpbGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByYW5nZX0gZnJvbSBcIi4vcmFuZ2VcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzY2FufSBmcm9tIFwiLi9zY2FuXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2h1ZmZsZX0gZnJvbSBcIi4vc2h1ZmZsZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN1bX0gZnJvbSBcIi4vc3VtXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdGlja3MsIHRpY2tJbmNyZW1lbnQsIHRpY2tTdGVwfSBmcm9tIFwiLi90aWNrc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyYW5zcG9zZX0gZnJvbSBcIi4vdHJhbnNwb3NlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdmFyaWFuY2V9IGZyb20gXCIuL3ZhcmlhbmNlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgemlwfSBmcm9tIFwiLi96aXBcIjtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgdmFsdWVvZikge1xuICB2YXIgbiA9IHZhbHVlcy5sZW5ndGgsXG4gICAgICBpID0gLTEsXG4gICAgICB2YWx1ZSxcbiAgICAgIG1heDtcblxuICBpZiAodmFsdWVvZiA9PSBudWxsKSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gRmluZCB0aGUgZmlyc3QgY29tcGFyYWJsZSB2YWx1ZS5cbiAgICAgIGlmICgodmFsdWUgPSB2YWx1ZXNbaV0pICE9IG51bGwgJiYgdmFsdWUgPj0gdmFsdWUpIHtcbiAgICAgICAgbWF4ID0gdmFsdWU7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7IC8vIENvbXBhcmUgdGhlIHJlbWFpbmluZyB2YWx1ZXMuXG4gICAgICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlc1tpXSkgIT0gbnVsbCAmJiB2YWx1ZSA+IG1heCkge1xuICAgICAgICAgICAgbWF4ID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZWxzZSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gRmluZCB0aGUgZmlyc3QgY29tcGFyYWJsZSB2YWx1ZS5cbiAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkgIT0gbnVsbCAmJiB2YWx1ZSA+PSB2YWx1ZSkge1xuICAgICAgICBtYXggPSB2YWx1ZTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy5cbiAgICAgICAgICBpZiAoKHZhbHVlID0gdmFsdWVvZih2YWx1ZXNbaV0sIGksIHZhbHVlcykpICE9IG51bGwgJiYgdmFsdWUgPiBtYXgpIHtcbiAgICAgICAgICAgIG1heCA9IHZhbHVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtYXg7XG59XG4iLCJpbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMsIHZhbHVlb2YpIHtcbiAgdmFyIG4gPSB2YWx1ZXMubGVuZ3RoLFxuICAgICAgbSA9IG4sXG4gICAgICBpID0gLTEsXG4gICAgICB2YWx1ZSxcbiAgICAgIHN1bSA9IDA7XG5cbiAgaWYgKHZhbHVlb2YgPT0gbnVsbCkge1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAoIWlzTmFOKHZhbHVlID0gbnVtYmVyKHZhbHVlc1tpXSkpKSBzdW0gKz0gdmFsdWU7XG4gICAgICBlbHNlIC0tbTtcbiAgICB9XG4gIH1cblxuICBlbHNlIHtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgaWYgKCFpc05hTih2YWx1ZSA9IG51bWJlcih2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkpKSBzdW0gKz0gdmFsdWU7XG4gICAgICBlbHNlIC0tbTtcbiAgICB9XG4gIH1cblxuICBpZiAobSkgcmV0dXJuIHN1bSAvIG07XG59XG4iLCJpbXBvcnQgYXNjZW5kaW5nIGZyb20gXCIuL2FzY2VuZGluZ1wiO1xuaW1wb3J0IG51bWJlciBmcm9tIFwiLi9udW1iZXJcIjtcbmltcG9ydCBxdWFudGlsZSBmcm9tIFwiLi9xdWFudGlsZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMsIHZhbHVlb2YpIHtcbiAgdmFyIG4gPSB2YWx1ZXMubGVuZ3RoLFxuICAgICAgaSA9IC0xLFxuICAgICAgdmFsdWUsXG4gICAgICBudW1iZXJzID0gW107XG5cbiAgaWYgKHZhbHVlb2YgPT0gbnVsbCkge1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAoIWlzTmFOKHZhbHVlID0gbnVtYmVyKHZhbHVlc1tpXSkpKSB7XG4gICAgICAgIG51bWJlcnMucHVzaCh2YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZWxzZSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICghaXNOYU4odmFsdWUgPSBudW1iZXIodmFsdWVvZih2YWx1ZXNbaV0sIGksIHZhbHVlcykpKSkge1xuICAgICAgICBudW1iZXJzLnB1c2godmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBxdWFudGlsZShudW1iZXJzLnNvcnQoYXNjZW5kaW5nKSwgMC41KTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGFycmF5cykge1xuICB2YXIgbiA9IGFycmF5cy5sZW5ndGgsXG4gICAgICBtLFxuICAgICAgaSA9IC0xLFxuICAgICAgaiA9IDAsXG4gICAgICBtZXJnZWQsXG4gICAgICBhcnJheTtcblxuICB3aGlsZSAoKytpIDwgbikgaiArPSBhcnJheXNbaV0ubGVuZ3RoO1xuICBtZXJnZWQgPSBuZXcgQXJyYXkoaik7XG5cbiAgd2hpbGUgKC0tbiA+PSAwKSB7XG4gICAgYXJyYXkgPSBhcnJheXNbbl07XG4gICAgbSA9IGFycmF5Lmxlbmd0aDtcbiAgICB3aGlsZSAoLS1tID49IDApIHtcbiAgICAgIG1lcmdlZFstLWpdID0gYXJyYXlbbV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1lcmdlZDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgdmFsdWVvZikge1xuICB2YXIgbiA9IHZhbHVlcy5sZW5ndGgsXG4gICAgICBpID0gLTEsXG4gICAgICB2YWx1ZSxcbiAgICAgIG1pbjtcblxuICBpZiAodmFsdWVvZiA9PSBudWxsKSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gRmluZCB0aGUgZmlyc3QgY29tcGFyYWJsZSB2YWx1ZS5cbiAgICAgIGlmICgodmFsdWUgPSB2YWx1ZXNbaV0pICE9IG51bGwgJiYgdmFsdWUgPj0gdmFsdWUpIHtcbiAgICAgICAgbWluID0gdmFsdWU7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7IC8vIENvbXBhcmUgdGhlIHJlbWFpbmluZyB2YWx1ZXMuXG4gICAgICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlc1tpXSkgIT0gbnVsbCAmJiBtaW4gPiB2YWx1ZSkge1xuICAgICAgICAgICAgbWluID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZWxzZSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gRmluZCB0aGUgZmlyc3QgY29tcGFyYWJsZSB2YWx1ZS5cbiAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkgIT0gbnVsbCAmJiB2YWx1ZSA+PSB2YWx1ZSkge1xuICAgICAgICBtaW4gPSB2YWx1ZTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy5cbiAgICAgICAgICBpZiAoKHZhbHVlID0gdmFsdWVvZih2YWx1ZXNbaV0sIGksIHZhbHVlcykpICE9IG51bGwgJiYgbWluID4gdmFsdWUpIHtcbiAgICAgICAgICAgIG1pbiA9IHZhbHVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtaW47XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiB4ID09PSBudWxsID8gTmFOIDogK3g7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhcnJheSwgZikge1xuICBpZiAoZiA9PSBudWxsKSBmID0gcGFpcjtcbiAgdmFyIGkgPSAwLCBuID0gYXJyYXkubGVuZ3RoIC0gMSwgcCA9IGFycmF5WzBdLCBwYWlycyA9IG5ldyBBcnJheShuIDwgMCA/IDAgOiBuKTtcbiAgd2hpbGUgKGkgPCBuKSBwYWlyc1tpXSA9IGYocCwgcCA9IGFycmF5WysraV0pO1xuICByZXR1cm4gcGFpcnM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYWlyKGEsIGIpIHtcbiAgcmV0dXJuIFthLCBiXTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGFycmF5LCBpbmRleGVzKSB7XG4gIHZhciBpID0gaW5kZXhlcy5sZW5ndGgsIHBlcm11dGVzID0gbmV3IEFycmF5KGkpO1xuICB3aGlsZSAoaS0tKSBwZXJtdXRlc1tpXSA9IGFycmF5W2luZGV4ZXNbaV1dO1xuICByZXR1cm4gcGVybXV0ZXM7XG59XG4iLCJpbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMsIHAsIHZhbHVlb2YpIHtcbiAgaWYgKHZhbHVlb2YgPT0gbnVsbCkgdmFsdWVvZiA9IG51bWJlcjtcbiAgaWYgKCEobiA9IHZhbHVlcy5sZW5ndGgpKSByZXR1cm47XG4gIGlmICgocCA9ICtwKSA8PSAwIHx8IG4gPCAyKSByZXR1cm4gK3ZhbHVlb2YodmFsdWVzWzBdLCAwLCB2YWx1ZXMpO1xuICBpZiAocCA+PSAxKSByZXR1cm4gK3ZhbHVlb2YodmFsdWVzW24gLSAxXSwgbiAtIDEsIHZhbHVlcyk7XG4gIHZhciBuLFxuICAgICAgaSA9IChuIC0gMSkgKiBwLFxuICAgICAgaTAgPSBNYXRoLmZsb29yKGkpLFxuICAgICAgdmFsdWUwID0gK3ZhbHVlb2YodmFsdWVzW2kwXSwgaTAsIHZhbHVlcyksXG4gICAgICB2YWx1ZTEgPSArdmFsdWVvZih2YWx1ZXNbaTAgKyAxXSwgaTAgKyAxLCB2YWx1ZXMpO1xuICByZXR1cm4gdmFsdWUwICsgKHZhbHVlMSAtIHZhbHVlMCkgKiAoaSAtIGkwKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHN0YXJ0LCBzdG9wLCBzdGVwKSB7XG4gIHN0YXJ0ID0gK3N0YXJ0LCBzdG9wID0gK3N0b3AsIHN0ZXAgPSAobiA9IGFyZ3VtZW50cy5sZW5ndGgpIDwgMiA/IChzdG9wID0gc3RhcnQsIHN0YXJ0ID0gMCwgMSkgOiBuIDwgMyA/IDEgOiArc3RlcDtcblxuICB2YXIgaSA9IC0xLFxuICAgICAgbiA9IE1hdGgubWF4KDAsIE1hdGguY2VpbCgoc3RvcCAtIHN0YXJ0KSAvIHN0ZXApKSB8IDAsXG4gICAgICByYW5nZSA9IG5ldyBBcnJheShuKTtcblxuICB3aGlsZSAoKytpIDwgbikge1xuICAgIHJhbmdlW2ldID0gc3RhcnQgKyBpICogc3RlcDtcbiAgfVxuXG4gIHJldHVybiByYW5nZTtcbn1cbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgY29tcGFyZSkge1xuICBpZiAoIShuID0gdmFsdWVzLmxlbmd0aCkpIHJldHVybjtcbiAgdmFyIG4sXG4gICAgICBpID0gMCxcbiAgICAgIGogPSAwLFxuICAgICAgeGksXG4gICAgICB4aiA9IHZhbHVlc1tqXTtcblxuICBpZiAoY29tcGFyZSA9PSBudWxsKSBjb21wYXJlID0gYXNjZW5kaW5nO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgaWYgKGNvbXBhcmUoeGkgPSB2YWx1ZXNbaV0sIHhqKSA8IDAgfHwgY29tcGFyZSh4aiwgeGopICE9PSAwKSB7XG4gICAgICB4aiA9IHhpLCBqID0gaTtcbiAgICB9XG4gIH1cblxuICBpZiAoY29tcGFyZSh4aiwgeGopID09PSAwKSByZXR1cm4gajtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGFycmF5LCBpMCwgaTEpIHtcbiAgdmFyIG0gPSAoaTEgPT0gbnVsbCA/IGFycmF5Lmxlbmd0aCA6IGkxKSAtIChpMCA9IGkwID09IG51bGwgPyAwIDogK2kwKSxcbiAgICAgIHQsXG4gICAgICBpO1xuXG4gIHdoaWxlIChtKSB7XG4gICAgaSA9IE1hdGgucmFuZG9tKCkgKiBtLS0gfCAwO1xuICAgIHQgPSBhcnJheVttICsgaTBdO1xuICAgIGFycmF5W20gKyBpMF0gPSBhcnJheVtpICsgaTBdO1xuICAgIGFycmF5W2kgKyBpMF0gPSB0O1xuICB9XG5cbiAgcmV0dXJuIGFycmF5O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCB2YWx1ZW9mKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCxcbiAgICAgIGkgPSAtMSxcbiAgICAgIHZhbHVlLFxuICAgICAgc3VtID0gMDtcblxuICBpZiAodmFsdWVvZiA9PSBudWxsKSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICh2YWx1ZSA9ICt2YWx1ZXNbaV0pIHN1bSArPSB2YWx1ZTsgLy8gTm90ZTogemVybyBhbmQgbnVsbCBhcmUgZXF1aXZhbGVudC5cbiAgICB9XG4gIH1cblxuICBlbHNlIHtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgaWYgKHZhbHVlID0gK3ZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSBzdW0gKz0gdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHN1bTtcbn1cbiIsImltcG9ydCB7bWFwfSBmcm9tIFwiLi4vYXJyYXlcIjtcbmltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4uL2FzY2VuZGluZ1wiO1xuaW1wb3J0IG51bWJlciBmcm9tIFwiLi4vbnVtYmVyXCI7XG5pbXBvcnQgcXVhbnRpbGUgZnJvbSBcIi4uL3F1YW50aWxlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgbWluLCBtYXgpIHtcbiAgdmFsdWVzID0gbWFwLmNhbGwodmFsdWVzLCBudW1iZXIpLnNvcnQoYXNjZW5kaW5nKTtcbiAgcmV0dXJuIE1hdGguY2VpbCgobWF4IC0gbWluKSAvICgyICogKHF1YW50aWxlKHZhbHVlcywgMC43NSkgLSBxdWFudGlsZSh2YWx1ZXMsIDAuMjUpKSAqIE1hdGgucG93KHZhbHVlcy5sZW5ndGgsIC0xIC8gMykpKTtcbn1cbiIsImltcG9ydCBkZXZpYXRpb24gZnJvbSBcIi4uL2RldmlhdGlvblwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMsIG1pbiwgbWF4KSB7XG4gIHJldHVybiBNYXRoLmNlaWwoKG1heCAtIG1pbikgLyAoMy41ICogZGV2aWF0aW9uKHZhbHVlcykgKiBNYXRoLnBvdyh2YWx1ZXMubGVuZ3RoLCAtMSAvIDMpKSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMpIHtcbiAgcmV0dXJuIE1hdGguY2VpbChNYXRoLmxvZyh2YWx1ZXMubGVuZ3RoKSAvIE1hdGguTE4yKSArIDE7XG59XG4iLCJ2YXIgZTEwID0gTWF0aC5zcXJ0KDUwKSxcbiAgICBlNSA9IE1hdGguc3FydCgxMCksXG4gICAgZTIgPSBNYXRoLnNxcnQoMik7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHN0YXJ0LCBzdG9wLCBjb3VudCkge1xuICB2YXIgcmV2ZXJzZSxcbiAgICAgIGkgPSAtMSxcbiAgICAgIG4sXG4gICAgICB0aWNrcyxcbiAgICAgIHN0ZXA7XG5cbiAgc3RvcCA9ICtzdG9wLCBzdGFydCA9ICtzdGFydCwgY291bnQgPSArY291bnQ7XG4gIGlmIChzdGFydCA9PT0gc3RvcCAmJiBjb3VudCA+IDApIHJldHVybiBbc3RhcnRdO1xuICBpZiAocmV2ZXJzZSA9IHN0b3AgPCBzdGFydCkgbiA9IHN0YXJ0LCBzdGFydCA9IHN0b3AsIHN0b3AgPSBuO1xuICBpZiAoKHN0ZXAgPSB0aWNrSW5jcmVtZW50KHN0YXJ0LCBzdG9wLCBjb3VudCkpID09PSAwIHx8ICFpc0Zpbml0ZShzdGVwKSkgcmV0dXJuIFtdO1xuXG4gIGlmIChzdGVwID4gMCkge1xuICAgIHN0YXJ0ID0gTWF0aC5jZWlsKHN0YXJ0IC8gc3RlcCk7XG4gICAgc3RvcCA9IE1hdGguZmxvb3Ioc3RvcCAvIHN0ZXApO1xuICAgIHRpY2tzID0gbmV3IEFycmF5KG4gPSBNYXRoLmNlaWwoc3RvcCAtIHN0YXJ0ICsgMSkpO1xuICAgIHdoaWxlICgrK2kgPCBuKSB0aWNrc1tpXSA9IChzdGFydCArIGkpICogc3RlcDtcbiAgfSBlbHNlIHtcbiAgICBzdGFydCA9IE1hdGguZmxvb3Ioc3RhcnQgKiBzdGVwKTtcbiAgICBzdG9wID0gTWF0aC5jZWlsKHN0b3AgKiBzdGVwKTtcbiAgICB0aWNrcyA9IG5ldyBBcnJheShuID0gTWF0aC5jZWlsKHN0YXJ0IC0gc3RvcCArIDEpKTtcbiAgICB3aGlsZSAoKytpIDwgbikgdGlja3NbaV0gPSAoc3RhcnQgLSBpKSAvIHN0ZXA7XG4gIH1cblxuICBpZiAocmV2ZXJzZSkgdGlja3MucmV2ZXJzZSgpO1xuXG4gIHJldHVybiB0aWNrcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRpY2tJbmNyZW1lbnQoc3RhcnQsIHN0b3AsIGNvdW50KSB7XG4gIHZhciBzdGVwID0gKHN0b3AgLSBzdGFydCkgLyBNYXRoLm1heCgwLCBjb3VudCksXG4gICAgICBwb3dlciA9IE1hdGguZmxvb3IoTWF0aC5sb2coc3RlcCkgLyBNYXRoLkxOMTApLFxuICAgICAgZXJyb3IgPSBzdGVwIC8gTWF0aC5wb3coMTAsIHBvd2VyKTtcbiAgcmV0dXJuIHBvd2VyID49IDBcbiAgICAgID8gKGVycm9yID49IGUxMCA/IDEwIDogZXJyb3IgPj0gZTUgPyA1IDogZXJyb3IgPj0gZTIgPyAyIDogMSkgKiBNYXRoLnBvdygxMCwgcG93ZXIpXG4gICAgICA6IC1NYXRoLnBvdygxMCwgLXBvd2VyKSAvIChlcnJvciA+PSBlMTAgPyAxMCA6IGVycm9yID49IGU1ID8gNSA6IGVycm9yID49IGUyID8gMiA6IDEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdGlja1N0ZXAoc3RhcnQsIHN0b3AsIGNvdW50KSB7XG4gIHZhciBzdGVwMCA9IE1hdGguYWJzKHN0b3AgLSBzdGFydCkgLyBNYXRoLm1heCgwLCBjb3VudCksXG4gICAgICBzdGVwMSA9IE1hdGgucG93KDEwLCBNYXRoLmZsb29yKE1hdGgubG9nKHN0ZXAwKSAvIE1hdGguTE4xMCkpLFxuICAgICAgZXJyb3IgPSBzdGVwMCAvIHN0ZXAxO1xuICBpZiAoZXJyb3IgPj0gZTEwKSBzdGVwMSAqPSAxMDtcbiAgZWxzZSBpZiAoZXJyb3IgPj0gZTUpIHN0ZXAxICo9IDU7XG4gIGVsc2UgaWYgKGVycm9yID49IGUyKSBzdGVwMSAqPSAyO1xuICByZXR1cm4gc3RvcCA8IHN0YXJ0ID8gLXN0ZXAxIDogc3RlcDE7XG59XG4iLCJpbXBvcnQgbWluIGZyb20gXCIuL21pblwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihtYXRyaXgpIHtcbiAgaWYgKCEobiA9IG1hdHJpeC5sZW5ndGgpKSByZXR1cm4gW107XG4gIGZvciAodmFyIGkgPSAtMSwgbSA9IG1pbihtYXRyaXgsIGxlbmd0aCksIHRyYW5zcG9zZSA9IG5ldyBBcnJheShtKTsgKytpIDwgbTspIHtcbiAgICBmb3IgKHZhciBqID0gLTEsIG4sIHJvdyA9IHRyYW5zcG9zZVtpXSA9IG5ldyBBcnJheShuKTsgKytqIDwgbjspIHtcbiAgICAgIHJvd1tqXSA9IG1hdHJpeFtqXVtpXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRyYW5zcG9zZTtcbn1cblxuZnVuY3Rpb24gbGVuZ3RoKGQpIHtcbiAgcmV0dXJuIGQubGVuZ3RoO1xufVxuIiwiaW1wb3J0IG51bWJlciBmcm9tIFwiLi9udW1iZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCB2YWx1ZW9mKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCxcbiAgICAgIG0gPSAwLFxuICAgICAgaSA9IC0xLFxuICAgICAgbWVhbiA9IDAsXG4gICAgICB2YWx1ZSxcbiAgICAgIGRlbHRhLFxuICAgICAgc3VtID0gMDtcblxuICBpZiAodmFsdWVvZiA9PSBudWxsKSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICghaXNOYU4odmFsdWUgPSBudW1iZXIodmFsdWVzW2ldKSkpIHtcbiAgICAgICAgZGVsdGEgPSB2YWx1ZSAtIG1lYW47XG4gICAgICAgIG1lYW4gKz0gZGVsdGEgLyArK207XG4gICAgICAgIHN1bSArPSBkZWx0YSAqICh2YWx1ZSAtIG1lYW4pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGVsc2Uge1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAoIWlzTmFOKHZhbHVlID0gbnVtYmVyKHZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSkpIHtcbiAgICAgICAgZGVsdGEgPSB2YWx1ZSAtIG1lYW47XG4gICAgICAgIG1lYW4gKz0gZGVsdGEgLyArK207XG4gICAgICAgIHN1bSArPSBkZWx0YSAqICh2YWx1ZSAtIG1lYW4pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmIChtID4gMSkgcmV0dXJuIHN1bSAvIChtIC0gMSk7XG59XG4iLCJpbXBvcnQgdHJhbnNwb3NlIGZyb20gXCIuL3RyYW5zcG9zZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRyYW5zcG9zZShhcmd1bWVudHMpO1xufVxuIiwiZXhwb3J0IHZhciBzbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcbiIsImltcG9ydCB7c2xpY2V9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQgaWRlbnRpdHkgZnJvbSBcIi4vaWRlbnRpdHlcIjtcblxudmFyIHRvcCA9IDEsXG4gICAgcmlnaHQgPSAyLFxuICAgIGJvdHRvbSA9IDMsXG4gICAgbGVmdCA9IDQsXG4gICAgZXBzaWxvbiA9IDFlLTY7XG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZVgoeCkge1xuICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyAoeCArIDAuNSkgKyBcIiwwKVwiO1xufVxuXG5mdW5jdGlvbiB0cmFuc2xhdGVZKHkpIHtcbiAgcmV0dXJuIFwidHJhbnNsYXRlKDAsXCIgKyAoeSArIDAuNSkgKyBcIilcIjtcbn1cblxuZnVuY3Rpb24gbnVtYmVyKHNjYWxlKSB7XG4gIHJldHVybiBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuICtzY2FsZShkKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY2VudGVyKHNjYWxlKSB7XG4gIHZhciBvZmZzZXQgPSBNYXRoLm1heCgwLCBzY2FsZS5iYW5kd2lkdGgoKSAtIDEpIC8gMjsgLy8gQWRqdXN0IGZvciAwLjVweCBvZmZzZXQuXG4gIGlmIChzY2FsZS5yb3VuZCgpKSBvZmZzZXQgPSBNYXRoLnJvdW5kKG9mZnNldCk7XG4gIHJldHVybiBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuICtzY2FsZShkKSArIG9mZnNldDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZW50ZXJpbmcoKSB7XG4gIHJldHVybiAhdGhpcy5fX2F4aXM7XG59XG5cbmZ1bmN0aW9uIGF4aXMob3JpZW50LCBzY2FsZSkge1xuICB2YXIgdGlja0FyZ3VtZW50cyA9IFtdLFxuICAgICAgdGlja1ZhbHVlcyA9IG51bGwsXG4gICAgICB0aWNrRm9ybWF0ID0gbnVsbCxcbiAgICAgIHRpY2tTaXplSW5uZXIgPSA2LFxuICAgICAgdGlja1NpemVPdXRlciA9IDYsXG4gICAgICB0aWNrUGFkZGluZyA9IDMsXG4gICAgICBrID0gb3JpZW50ID09PSB0b3AgfHwgb3JpZW50ID09PSBsZWZ0ID8gLTEgOiAxLFxuICAgICAgeCA9IG9yaWVudCA9PT0gbGVmdCB8fCBvcmllbnQgPT09IHJpZ2h0ID8gXCJ4XCIgOiBcInlcIixcbiAgICAgIHRyYW5zZm9ybSA9IG9yaWVudCA9PT0gdG9wIHx8IG9yaWVudCA9PT0gYm90dG9tID8gdHJhbnNsYXRlWCA6IHRyYW5zbGF0ZVk7XG5cbiAgZnVuY3Rpb24gYXhpcyhjb250ZXh0KSB7XG4gICAgdmFyIHZhbHVlcyA9IHRpY2tWYWx1ZXMgPT0gbnVsbCA/IChzY2FsZS50aWNrcyA/IHNjYWxlLnRpY2tzLmFwcGx5KHNjYWxlLCB0aWNrQXJndW1lbnRzKSA6IHNjYWxlLmRvbWFpbigpKSA6IHRpY2tWYWx1ZXMsXG4gICAgICAgIGZvcm1hdCA9IHRpY2tGb3JtYXQgPT0gbnVsbCA/IChzY2FsZS50aWNrRm9ybWF0ID8gc2NhbGUudGlja0Zvcm1hdC5hcHBseShzY2FsZSwgdGlja0FyZ3VtZW50cykgOiBpZGVudGl0eSkgOiB0aWNrRm9ybWF0LFxuICAgICAgICBzcGFjaW5nID0gTWF0aC5tYXgodGlja1NpemVJbm5lciwgMCkgKyB0aWNrUGFkZGluZyxcbiAgICAgICAgcmFuZ2UgPSBzY2FsZS5yYW5nZSgpLFxuICAgICAgICByYW5nZTAgPSArcmFuZ2VbMF0gKyAwLjUsXG4gICAgICAgIHJhbmdlMSA9ICtyYW5nZVtyYW5nZS5sZW5ndGggLSAxXSArIDAuNSxcbiAgICAgICAgcG9zaXRpb24gPSAoc2NhbGUuYmFuZHdpZHRoID8gY2VudGVyIDogbnVtYmVyKShzY2FsZS5jb3B5KCkpLFxuICAgICAgICBzZWxlY3Rpb24gPSBjb250ZXh0LnNlbGVjdGlvbiA/IGNvbnRleHQuc2VsZWN0aW9uKCkgOiBjb250ZXh0LFxuICAgICAgICBwYXRoID0gc2VsZWN0aW9uLnNlbGVjdEFsbChcIi5kb21haW5cIikuZGF0YShbbnVsbF0pLFxuICAgICAgICB0aWNrID0gc2VsZWN0aW9uLnNlbGVjdEFsbChcIi50aWNrXCIpLmRhdGEodmFsdWVzLCBzY2FsZSkub3JkZXIoKSxcbiAgICAgICAgdGlja0V4aXQgPSB0aWNrLmV4aXQoKSxcbiAgICAgICAgdGlja0VudGVyID0gdGljay5lbnRlcigpLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsIFwidGlja1wiKSxcbiAgICAgICAgbGluZSA9IHRpY2suc2VsZWN0KFwibGluZVwiKSxcbiAgICAgICAgdGV4dCA9IHRpY2suc2VsZWN0KFwidGV4dFwiKTtcblxuICAgIHBhdGggPSBwYXRoLm1lcmdlKHBhdGguZW50ZXIoKS5pbnNlcnQoXCJwYXRoXCIsIFwiLnRpY2tcIilcbiAgICAgICAgLmF0dHIoXCJjbGFzc1wiLCBcImRvbWFpblwiKVxuICAgICAgICAuYXR0cihcInN0cm9rZVwiLCBcImN1cnJlbnRDb2xvclwiKSk7XG5cbiAgICB0aWNrID0gdGljay5tZXJnZSh0aWNrRW50ZXIpO1xuXG4gICAgbGluZSA9IGxpbmUubWVyZ2UodGlja0VudGVyLmFwcGVuZChcImxpbmVcIilcbiAgICAgICAgLmF0dHIoXCJzdHJva2VcIiwgXCJjdXJyZW50Q29sb3JcIilcbiAgICAgICAgLmF0dHIoeCArIFwiMlwiLCBrICogdGlja1NpemVJbm5lcikpO1xuXG4gICAgdGV4dCA9IHRleHQubWVyZ2UodGlja0VudGVyLmFwcGVuZChcInRleHRcIilcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIFwiY3VycmVudENvbG9yXCIpXG4gICAgICAgIC5hdHRyKHgsIGsgKiBzcGFjaW5nKVxuICAgICAgICAuYXR0cihcImR5XCIsIG9yaWVudCA9PT0gdG9wID8gXCIwZW1cIiA6IG9yaWVudCA9PT0gYm90dG9tID8gXCIwLjcxZW1cIiA6IFwiMC4zMmVtXCIpKTtcblxuICAgIGlmIChjb250ZXh0ICE9PSBzZWxlY3Rpb24pIHtcbiAgICAgIHBhdGggPSBwYXRoLnRyYW5zaXRpb24oY29udGV4dCk7XG4gICAgICB0aWNrID0gdGljay50cmFuc2l0aW9uKGNvbnRleHQpO1xuICAgICAgbGluZSA9IGxpbmUudHJhbnNpdGlvbihjb250ZXh0KTtcbiAgICAgIHRleHQgPSB0ZXh0LnRyYW5zaXRpb24oY29udGV4dCk7XG5cbiAgICAgIHRpY2tFeGl0ID0gdGlja0V4aXQudHJhbnNpdGlvbihjb250ZXh0KVxuICAgICAgICAgIC5hdHRyKFwib3BhY2l0eVwiLCBlcHNpbG9uKVxuICAgICAgICAgIC5hdHRyKFwidHJhbnNmb3JtXCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGlzRmluaXRlKGQgPSBwb3NpdGlvbihkKSkgPyB0cmFuc2Zvcm0oZCkgOiB0aGlzLmdldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiKTsgfSk7XG5cbiAgICAgIHRpY2tFbnRlclxuICAgICAgICAgIC5hdHRyKFwib3BhY2l0eVwiLCBlcHNpbG9uKVxuICAgICAgICAgIC5hdHRyKFwidHJhbnNmb3JtXCIsIGZ1bmN0aW9uKGQpIHsgdmFyIHAgPSB0aGlzLnBhcmVudE5vZGUuX19heGlzOyByZXR1cm4gdHJhbnNmb3JtKHAgJiYgaXNGaW5pdGUocCA9IHAoZCkpID8gcCA6IHBvc2l0aW9uKGQpKTsgfSk7XG4gICAgfVxuXG4gICAgdGlja0V4aXQucmVtb3ZlKCk7XG5cbiAgICBwYXRoXG4gICAgICAgIC5hdHRyKFwiZFwiLCBvcmllbnQgPT09IGxlZnQgfHwgb3JpZW50ID09IHJpZ2h0XG4gICAgICAgICAgICA/ICh0aWNrU2l6ZU91dGVyID8gXCJNXCIgKyBrICogdGlja1NpemVPdXRlciArIFwiLFwiICsgcmFuZ2UwICsgXCJIMC41VlwiICsgcmFuZ2UxICsgXCJIXCIgKyBrICogdGlja1NpemVPdXRlciA6IFwiTTAuNSxcIiArIHJhbmdlMCArIFwiVlwiICsgcmFuZ2UxKVxuICAgICAgICAgICAgOiAodGlja1NpemVPdXRlciA/IFwiTVwiICsgcmFuZ2UwICsgXCIsXCIgKyBrICogdGlja1NpemVPdXRlciArIFwiVjAuNUhcIiArIHJhbmdlMSArIFwiVlwiICsgayAqIHRpY2tTaXplT3V0ZXIgOiBcIk1cIiArIHJhbmdlMCArIFwiLDAuNUhcIiArIHJhbmdlMSkpO1xuXG4gICAgdGlja1xuICAgICAgICAuYXR0cihcIm9wYWNpdHlcIiwgMSlcbiAgICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gdHJhbnNmb3JtKHBvc2l0aW9uKGQpKTsgfSk7XG5cbiAgICBsaW5lXG4gICAgICAgIC5hdHRyKHggKyBcIjJcIiwgayAqIHRpY2tTaXplSW5uZXIpO1xuXG4gICAgdGV4dFxuICAgICAgICAuYXR0cih4LCBrICogc3BhY2luZylcbiAgICAgICAgLnRleHQoZm9ybWF0KTtcblxuICAgIHNlbGVjdGlvbi5maWx0ZXIoZW50ZXJpbmcpXG4gICAgICAgIC5hdHRyKFwiZmlsbFwiLCBcIm5vbmVcIilcbiAgICAgICAgLmF0dHIoXCJmb250LXNpemVcIiwgMTApXG4gICAgICAgIC5hdHRyKFwiZm9udC1mYW1pbHlcIiwgXCJzYW5zLXNlcmlmXCIpXG4gICAgICAgIC5hdHRyKFwidGV4dC1hbmNob3JcIiwgb3JpZW50ID09PSByaWdodCA/IFwic3RhcnRcIiA6IG9yaWVudCA9PT0gbGVmdCA/IFwiZW5kXCIgOiBcIm1pZGRsZVwiKTtcblxuICAgIHNlbGVjdGlvblxuICAgICAgICAuZWFjaChmdW5jdGlvbigpIHsgdGhpcy5fX2F4aXMgPSBwb3NpdGlvbjsgfSk7XG4gIH1cblxuICBheGlzLnNjYWxlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNjYWxlID0gXywgYXhpcykgOiBzY2FsZTtcbiAgfTtcblxuICBheGlzLnRpY2tzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRpY2tBcmd1bWVudHMgPSBzbGljZS5jYWxsKGFyZ3VtZW50cyksIGF4aXM7XG4gIH07XG5cbiAgYXhpcy50aWNrQXJndW1lbnRzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpY2tBcmd1bWVudHMgPSBfID09IG51bGwgPyBbXSA6IHNsaWNlLmNhbGwoXyksIGF4aXMpIDogdGlja0FyZ3VtZW50cy5zbGljZSgpO1xuICB9O1xuXG4gIGF4aXMudGlja1ZhbHVlcyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aWNrVmFsdWVzID0gXyA9PSBudWxsID8gbnVsbCA6IHNsaWNlLmNhbGwoXyksIGF4aXMpIDogdGlja1ZhbHVlcyAmJiB0aWNrVmFsdWVzLnNsaWNlKCk7XG4gIH07XG5cbiAgYXhpcy50aWNrRm9ybWF0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpY2tGb3JtYXQgPSBfLCBheGlzKSA6IHRpY2tGb3JtYXQ7XG4gIH07XG5cbiAgYXhpcy50aWNrU2l6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aWNrU2l6ZUlubmVyID0gdGlja1NpemVPdXRlciA9ICtfLCBheGlzKSA6IHRpY2tTaXplSW5uZXI7XG4gIH07XG5cbiAgYXhpcy50aWNrU2l6ZUlubmVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpY2tTaXplSW5uZXIgPSArXywgYXhpcykgOiB0aWNrU2l6ZUlubmVyO1xuICB9O1xuXG4gIGF4aXMudGlja1NpemVPdXRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aWNrU2l6ZU91dGVyID0gK18sIGF4aXMpIDogdGlja1NpemVPdXRlcjtcbiAgfTtcblxuICBheGlzLnRpY2tQYWRkaW5nID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpY2tQYWRkaW5nID0gK18sIGF4aXMpIDogdGlja1BhZGRpbmc7XG4gIH07XG5cbiAgcmV0dXJuIGF4aXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBheGlzVG9wKHNjYWxlKSB7XG4gIHJldHVybiBheGlzKHRvcCwgc2NhbGUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXhpc1JpZ2h0KHNjYWxlKSB7XG4gIHJldHVybiBheGlzKHJpZ2h0LCBzY2FsZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBheGlzQm90dG9tKHNjYWxlKSB7XG4gIHJldHVybiBheGlzKGJvdHRvbSwgc2NhbGUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXhpc0xlZnQoc2NhbGUpIHtcbiAgcmV0dXJuIGF4aXMobGVmdCwgc2NhbGUpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4geDtcbn1cbiIsImV4cG9ydCB7XG4gIGF4aXNUb3AsXG4gIGF4aXNSaWdodCxcbiAgYXhpc0JvdHRvbSxcbiAgYXhpc0xlZnRcbn0gZnJvbSBcIi4vYXhpc1wiO1xuIiwiaW1wb3J0IHtkaXNwYXRjaH0gZnJvbSBcImQzLWRpc3BhdGNoXCI7XG5pbXBvcnQge2RyYWdEaXNhYmxlLCBkcmFnRW5hYmxlfSBmcm9tIFwiZDMtZHJhZ1wiO1xuaW1wb3J0IHtpbnRlcnBvbGF0ZX0gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5pbXBvcnQge2N1c3RvbUV2ZW50LCBldmVudCwgbW91c2UsIHNlbGVjdH0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHtpbnRlcnJ1cHR9IGZyb20gXCJkMy10cmFuc2l0aW9uXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBCcnVzaEV2ZW50IGZyb20gXCIuL2V2ZW50XCI7XG5pbXBvcnQgbm9ldmVudCwge25vcHJvcGFnYXRpb259IGZyb20gXCIuL25vZXZlbnRcIjtcblxudmFyIE1PREVfRFJBRyA9IHtuYW1lOiBcImRyYWdcIn0sXG4gICAgTU9ERV9TUEFDRSA9IHtuYW1lOiBcInNwYWNlXCJ9LFxuICAgIE1PREVfSEFORExFID0ge25hbWU6IFwiaGFuZGxlXCJ9LFxuICAgIE1PREVfQ0VOVEVSID0ge25hbWU6IFwiY2VudGVyXCJ9O1xuXG52YXIgWCA9IHtcbiAgbmFtZTogXCJ4XCIsXG4gIGhhbmRsZXM6IFtcImVcIiwgXCJ3XCJdLm1hcCh0eXBlKSxcbiAgaW5wdXQ6IGZ1bmN0aW9uKHgsIGUpIHsgcmV0dXJuIHggJiYgW1t4WzBdLCBlWzBdWzFdXSwgW3hbMV0sIGVbMV1bMV1dXTsgfSxcbiAgb3V0cHV0OiBmdW5jdGlvbih4eSkgeyByZXR1cm4geHkgJiYgW3h5WzBdWzBdLCB4eVsxXVswXV07IH1cbn07XG5cbnZhciBZID0ge1xuICBuYW1lOiBcInlcIixcbiAgaGFuZGxlczogW1wiblwiLCBcInNcIl0ubWFwKHR5cGUpLFxuICBpbnB1dDogZnVuY3Rpb24oeSwgZSkgeyByZXR1cm4geSAmJiBbW2VbMF1bMF0sIHlbMF1dLCBbZVsxXVswXSwgeVsxXV1dOyB9LFxuICBvdXRwdXQ6IGZ1bmN0aW9uKHh5KSB7IHJldHVybiB4eSAmJiBbeHlbMF1bMV0sIHh5WzFdWzFdXTsgfVxufTtcblxudmFyIFhZID0ge1xuICBuYW1lOiBcInh5XCIsXG4gIGhhbmRsZXM6IFtcIm5cIiwgXCJlXCIsIFwic1wiLCBcIndcIiwgXCJud1wiLCBcIm5lXCIsIFwic2VcIiwgXCJzd1wiXS5tYXAodHlwZSksXG4gIGlucHV0OiBmdW5jdGlvbih4eSkgeyByZXR1cm4geHk7IH0sXG4gIG91dHB1dDogZnVuY3Rpb24oeHkpIHsgcmV0dXJuIHh5OyB9XG59O1xuXG52YXIgY3Vyc29ycyA9IHtcbiAgb3ZlcmxheTogXCJjcm9zc2hhaXJcIixcbiAgc2VsZWN0aW9uOiBcIm1vdmVcIixcbiAgbjogXCJucy1yZXNpemVcIixcbiAgZTogXCJldy1yZXNpemVcIixcbiAgczogXCJucy1yZXNpemVcIixcbiAgdzogXCJldy1yZXNpemVcIixcbiAgbnc6IFwibndzZS1yZXNpemVcIixcbiAgbmU6IFwibmVzdy1yZXNpemVcIixcbiAgc2U6IFwibndzZS1yZXNpemVcIixcbiAgc3c6IFwibmVzdy1yZXNpemVcIlxufTtcblxudmFyIGZsaXBYID0ge1xuICBlOiBcIndcIixcbiAgdzogXCJlXCIsXG4gIG53OiBcIm5lXCIsXG4gIG5lOiBcIm53XCIsXG4gIHNlOiBcInN3XCIsXG4gIHN3OiBcInNlXCJcbn07XG5cbnZhciBmbGlwWSA9IHtcbiAgbjogXCJzXCIsXG4gIHM6IFwiblwiLFxuICBudzogXCJzd1wiLFxuICBuZTogXCJzZVwiLFxuICBzZTogXCJuZVwiLFxuICBzdzogXCJud1wiXG59O1xuXG52YXIgc2lnbnNYID0ge1xuICBvdmVybGF5OiArMSxcbiAgc2VsZWN0aW9uOiArMSxcbiAgbjogbnVsbCxcbiAgZTogKzEsXG4gIHM6IG51bGwsXG4gIHc6IC0xLFxuICBudzogLTEsXG4gIG5lOiArMSxcbiAgc2U6ICsxLFxuICBzdzogLTFcbn07XG5cbnZhciBzaWduc1kgPSB7XG4gIG92ZXJsYXk6ICsxLFxuICBzZWxlY3Rpb246ICsxLFxuICBuOiAtMSxcbiAgZTogbnVsbCxcbiAgczogKzEsXG4gIHc6IG51bGwsXG4gIG53OiAtMSxcbiAgbmU6IC0xLFxuICBzZTogKzEsXG4gIHN3OiArMVxufTtcblxuZnVuY3Rpb24gdHlwZSh0KSB7XG4gIHJldHVybiB7dHlwZTogdH07XG59XG5cbi8vIElnbm9yZSByaWdodC1jbGljaywgc2luY2UgdGhhdCBzaG91bGQgb3BlbiB0aGUgY29udGV4dCBtZW51LlxuZnVuY3Rpb24gZGVmYXVsdEZpbHRlcigpIHtcbiAgcmV0dXJuICFldmVudC5idXR0b247XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRFeHRlbnQoKSB7XG4gIHZhciBzdmcgPSB0aGlzLm93bmVyU1ZHRWxlbWVudCB8fCB0aGlzO1xuICByZXR1cm4gW1swLCAwXSwgW3N2Zy53aWR0aC5iYXNlVmFsLnZhbHVlLCBzdmcuaGVpZ2h0LmJhc2VWYWwudmFsdWVdXTtcbn1cblxuLy8gTGlrZSBkMy5sb2NhbCwgYnV0IHdpdGggdGhlIG5hbWUg4oCcX19icnVzaOKAnSByYXRoZXIgdGhhbiBhdXRvLWdlbmVyYXRlZC5cbmZ1bmN0aW9uIGxvY2FsKG5vZGUpIHtcbiAgd2hpbGUgKCFub2RlLl9fYnJ1c2gpIGlmICghKG5vZGUgPSBub2RlLnBhcmVudE5vZGUpKSByZXR1cm47XG4gIHJldHVybiBub2RlLl9fYnJ1c2g7XG59XG5cbmZ1bmN0aW9uIGVtcHR5KGV4dGVudCkge1xuICByZXR1cm4gZXh0ZW50WzBdWzBdID09PSBleHRlbnRbMV1bMF1cbiAgICAgIHx8IGV4dGVudFswXVsxXSA9PT0gZXh0ZW50WzFdWzFdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYnJ1c2hTZWxlY3Rpb24obm9kZSkge1xuICB2YXIgc3RhdGUgPSBub2RlLl9fYnJ1c2g7XG4gIHJldHVybiBzdGF0ZSA/IHN0YXRlLmRpbS5vdXRwdXQoc3RhdGUuc2VsZWN0aW9uKSA6IG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBicnVzaFgoKSB7XG4gIHJldHVybiBicnVzaChYKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJydXNoWSgpIHtcbiAgcmV0dXJuIGJydXNoKFkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGJydXNoKFhZKTtcbn1cblxuZnVuY3Rpb24gYnJ1c2goZGltKSB7XG4gIHZhciBleHRlbnQgPSBkZWZhdWx0RXh0ZW50LFxuICAgICAgZmlsdGVyID0gZGVmYXVsdEZpbHRlcixcbiAgICAgIGxpc3RlbmVycyA9IGRpc3BhdGNoKGJydXNoLCBcInN0YXJ0XCIsIFwiYnJ1c2hcIiwgXCJlbmRcIiksXG4gICAgICBoYW5kbGVTaXplID0gNixcbiAgICAgIHRvdWNoZW5kaW5nO1xuXG4gIGZ1bmN0aW9uIGJydXNoKGdyb3VwKSB7XG4gICAgdmFyIG92ZXJsYXkgPSBncm91cFxuICAgICAgICAucHJvcGVydHkoXCJfX2JydXNoXCIsIGluaXRpYWxpemUpXG4gICAgICAuc2VsZWN0QWxsKFwiLm92ZXJsYXlcIilcbiAgICAgIC5kYXRhKFt0eXBlKFwib3ZlcmxheVwiKV0pO1xuXG4gICAgb3ZlcmxheS5lbnRlcigpLmFwcGVuZChcInJlY3RcIilcbiAgICAgICAgLmF0dHIoXCJjbGFzc1wiLCBcIm92ZXJsYXlcIilcbiAgICAgICAgLmF0dHIoXCJwb2ludGVyLWV2ZW50c1wiLCBcImFsbFwiKVxuICAgICAgICAuYXR0cihcImN1cnNvclwiLCBjdXJzb3JzLm92ZXJsYXkpXG4gICAgICAubWVyZ2Uob3ZlcmxheSlcbiAgICAgICAgLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIGV4dGVudCA9IGxvY2FsKHRoaXMpLmV4dGVudDtcbiAgICAgICAgICBzZWxlY3QodGhpcylcbiAgICAgICAgICAgICAgLmF0dHIoXCJ4XCIsIGV4dGVudFswXVswXSlcbiAgICAgICAgICAgICAgLmF0dHIoXCJ5XCIsIGV4dGVudFswXVsxXSlcbiAgICAgICAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCBleHRlbnRbMV1bMF0gLSBleHRlbnRbMF1bMF0pXG4gICAgICAgICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIGV4dGVudFsxXVsxXSAtIGV4dGVudFswXVsxXSk7XG4gICAgICAgIH0pO1xuXG4gICAgZ3JvdXAuc2VsZWN0QWxsKFwiLnNlbGVjdGlvblwiKVxuICAgICAgLmRhdGEoW3R5cGUoXCJzZWxlY3Rpb25cIildKVxuICAgICAgLmVudGVyKCkuYXBwZW5kKFwicmVjdFwiKVxuICAgICAgICAuYXR0cihcImNsYXNzXCIsIFwic2VsZWN0aW9uXCIpXG4gICAgICAgIC5hdHRyKFwiY3Vyc29yXCIsIGN1cnNvcnMuc2VsZWN0aW9uKVxuICAgICAgICAuYXR0cihcImZpbGxcIiwgXCIjNzc3XCIpXG4gICAgICAgIC5hdHRyKFwiZmlsbC1vcGFjaXR5XCIsIDAuMylcbiAgICAgICAgLmF0dHIoXCJzdHJva2VcIiwgXCIjZmZmXCIpXG4gICAgICAgIC5hdHRyKFwic2hhcGUtcmVuZGVyaW5nXCIsIFwiY3Jpc3BFZGdlc1wiKTtcblxuICAgIHZhciBoYW5kbGUgPSBncm91cC5zZWxlY3RBbGwoXCIuaGFuZGxlXCIpXG4gICAgICAuZGF0YShkaW0uaGFuZGxlcywgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC50eXBlOyB9KTtcblxuICAgIGhhbmRsZS5leGl0KCkucmVtb3ZlKCk7XG5cbiAgICBoYW5kbGUuZW50ZXIoKS5hcHBlbmQoXCJyZWN0XCIpXG4gICAgICAgIC5hdHRyKFwiY2xhc3NcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gXCJoYW5kbGUgaGFuZGxlLS1cIiArIGQudHlwZTsgfSlcbiAgICAgICAgLmF0dHIoXCJjdXJzb3JcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gY3Vyc29yc1tkLnR5cGVdOyB9KTtcblxuICAgIGdyb3VwXG4gICAgICAgIC5lYWNoKHJlZHJhdylcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIFwibm9uZVwiKVxuICAgICAgICAuYXR0cihcInBvaW50ZXItZXZlbnRzXCIsIFwiYWxsXCIpXG4gICAgICAgIC5zdHlsZShcIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvclwiLCBcInJnYmEoMCwwLDAsMClcIilcbiAgICAgICAgLm9uKFwibW91c2Vkb3duLmJydXNoIHRvdWNoc3RhcnQuYnJ1c2hcIiwgc3RhcnRlZCk7XG4gIH1cblxuICBicnVzaC5tb3ZlID0gZnVuY3Rpb24oZ3JvdXAsIHNlbGVjdGlvbikge1xuICAgIGlmIChncm91cC5zZWxlY3Rpb24pIHtcbiAgICAgIGdyb3VwXG4gICAgICAgICAgLm9uKFwic3RhcnQuYnJ1c2hcIiwgZnVuY3Rpb24oKSB7IGVtaXR0ZXIodGhpcywgYXJndW1lbnRzKS5iZWZvcmVzdGFydCgpLnN0YXJ0KCk7IH0pXG4gICAgICAgICAgLm9uKFwiaW50ZXJydXB0LmJydXNoIGVuZC5icnVzaFwiLCBmdW5jdGlvbigpIHsgZW1pdHRlcih0aGlzLCBhcmd1bWVudHMpLmVuZCgpOyB9KVxuICAgICAgICAgIC50d2VlbihcImJydXNoXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHRoYXQgPSB0aGlzLFxuICAgICAgICAgICAgICAgIHN0YXRlID0gdGhhdC5fX2JydXNoLFxuICAgICAgICAgICAgICAgIGVtaXQgPSBlbWl0dGVyKHRoYXQsIGFyZ3VtZW50cyksXG4gICAgICAgICAgICAgICAgc2VsZWN0aW9uMCA9IHN0YXRlLnNlbGVjdGlvbixcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb24xID0gZGltLmlucHV0KHR5cGVvZiBzZWxlY3Rpb24gPT09IFwiZnVuY3Rpb25cIiA/IHNlbGVjdGlvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogc2VsZWN0aW9uLCBzdGF0ZS5leHRlbnQpLFxuICAgICAgICAgICAgICAgIGkgPSBpbnRlcnBvbGF0ZShzZWxlY3Rpb24wLCBzZWxlY3Rpb24xKTtcblxuICAgICAgICAgICAgZnVuY3Rpb24gdHdlZW4odCkge1xuICAgICAgICAgICAgICBzdGF0ZS5zZWxlY3Rpb24gPSB0ID09PSAxICYmIGVtcHR5KHNlbGVjdGlvbjEpID8gbnVsbCA6IGkodCk7XG4gICAgICAgICAgICAgIHJlZHJhdy5jYWxsKHRoYXQpO1xuICAgICAgICAgICAgICBlbWl0LmJydXNoKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBzZWxlY3Rpb24wICYmIHNlbGVjdGlvbjEgPyB0d2VlbiA6IHR3ZWVuKDEpO1xuICAgICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBncm91cFxuICAgICAgICAgIC5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHRoYXQgPSB0aGlzLFxuICAgICAgICAgICAgICAgIGFyZ3MgPSBhcmd1bWVudHMsXG4gICAgICAgICAgICAgICAgc3RhdGUgPSB0aGF0Ll9fYnJ1c2gsXG4gICAgICAgICAgICAgICAgc2VsZWN0aW9uMSA9IGRpbS5pbnB1dCh0eXBlb2Ygc2VsZWN0aW9uID09PSBcImZ1bmN0aW9uXCIgPyBzZWxlY3Rpb24uYXBwbHkodGhhdCwgYXJncykgOiBzZWxlY3Rpb24sIHN0YXRlLmV4dGVudCksXG4gICAgICAgICAgICAgICAgZW1pdCA9IGVtaXR0ZXIodGhhdCwgYXJncykuYmVmb3Jlc3RhcnQoKTtcblxuICAgICAgICAgICAgaW50ZXJydXB0KHRoYXQpO1xuICAgICAgICAgICAgc3RhdGUuc2VsZWN0aW9uID0gc2VsZWN0aW9uMSA9PSBudWxsIHx8IGVtcHR5KHNlbGVjdGlvbjEpID8gbnVsbCA6IHNlbGVjdGlvbjE7XG4gICAgICAgICAgICByZWRyYXcuY2FsbCh0aGF0KTtcbiAgICAgICAgICAgIGVtaXQuc3RhcnQoKS5icnVzaCgpLmVuZCgpO1xuICAgICAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICBmdW5jdGlvbiByZWRyYXcoKSB7XG4gICAgdmFyIGdyb3VwID0gc2VsZWN0KHRoaXMpLFxuICAgICAgICBzZWxlY3Rpb24gPSBsb2NhbCh0aGlzKS5zZWxlY3Rpb247XG5cbiAgICBpZiAoc2VsZWN0aW9uKSB7XG4gICAgICBncm91cC5zZWxlY3RBbGwoXCIuc2VsZWN0aW9uXCIpXG4gICAgICAgICAgLnN0eWxlKFwiZGlzcGxheVwiLCBudWxsKVxuICAgICAgICAgIC5hdHRyKFwieFwiLCBzZWxlY3Rpb25bMF1bMF0pXG4gICAgICAgICAgLmF0dHIoXCJ5XCIsIHNlbGVjdGlvblswXVsxXSlcbiAgICAgICAgICAuYXR0cihcIndpZHRoXCIsIHNlbGVjdGlvblsxXVswXSAtIHNlbGVjdGlvblswXVswXSlcbiAgICAgICAgICAuYXR0cihcImhlaWdodFwiLCBzZWxlY3Rpb25bMV1bMV0gLSBzZWxlY3Rpb25bMF1bMV0pO1xuXG4gICAgICBncm91cC5zZWxlY3RBbGwoXCIuaGFuZGxlXCIpXG4gICAgICAgICAgLnN0eWxlKFwiZGlzcGxheVwiLCBudWxsKVxuICAgICAgICAgIC5hdHRyKFwieFwiLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLnR5cGVbZC50eXBlLmxlbmd0aCAtIDFdID09PSBcImVcIiA/IHNlbGVjdGlvblsxXVswXSAtIGhhbmRsZVNpemUgLyAyIDogc2VsZWN0aW9uWzBdWzBdIC0gaGFuZGxlU2l6ZSAvIDI7IH0pXG4gICAgICAgICAgLmF0dHIoXCJ5XCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQudHlwZVswXSA9PT0gXCJzXCIgPyBzZWxlY3Rpb25bMV1bMV0gLSBoYW5kbGVTaXplIC8gMiA6IHNlbGVjdGlvblswXVsxXSAtIGhhbmRsZVNpemUgLyAyOyB9KVxuICAgICAgICAgIC5hdHRyKFwid2lkdGhcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC50eXBlID09PSBcIm5cIiB8fCBkLnR5cGUgPT09IFwic1wiID8gc2VsZWN0aW9uWzFdWzBdIC0gc2VsZWN0aW9uWzBdWzBdICsgaGFuZGxlU2l6ZSA6IGhhbmRsZVNpemU7IH0pXG4gICAgICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC50eXBlID09PSBcImVcIiB8fCBkLnR5cGUgPT09IFwid1wiID8gc2VsZWN0aW9uWzFdWzFdIC0gc2VsZWN0aW9uWzBdWzFdICsgaGFuZGxlU2l6ZSA6IGhhbmRsZVNpemU7IH0pO1xuICAgIH1cblxuICAgIGVsc2Uge1xuICAgICAgZ3JvdXAuc2VsZWN0QWxsKFwiLnNlbGVjdGlvbiwuaGFuZGxlXCIpXG4gICAgICAgICAgLnN0eWxlKFwiZGlzcGxheVwiLCBcIm5vbmVcIilcbiAgICAgICAgICAuYXR0cihcInhcIiwgbnVsbClcbiAgICAgICAgICAuYXR0cihcInlcIiwgbnVsbClcbiAgICAgICAgICAuYXR0cihcIndpZHRoXCIsIG51bGwpXG4gICAgICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgbnVsbCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZW1pdHRlcih0aGF0LCBhcmdzKSB7XG4gICAgcmV0dXJuIHRoYXQuX19icnVzaC5lbWl0dGVyIHx8IG5ldyBFbWl0dGVyKHRoYXQsIGFyZ3MpO1xuICB9XG5cbiAgZnVuY3Rpb24gRW1pdHRlcih0aGF0LCBhcmdzKSB7XG4gICAgdGhpcy50aGF0ID0gdGhhdDtcbiAgICB0aGlzLmFyZ3MgPSBhcmdzO1xuICAgIHRoaXMuc3RhdGUgPSB0aGF0Ll9fYnJ1c2g7XG4gICAgdGhpcy5hY3RpdmUgPSAwO1xuICB9XG5cbiAgRW1pdHRlci5wcm90b3R5cGUgPSB7XG4gICAgYmVmb3Jlc3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCsrdGhpcy5hY3RpdmUgPT09IDEpIHRoaXMuc3RhdGUuZW1pdHRlciA9IHRoaXMsIHRoaXMuc3RhcnRpbmcgPSB0cnVlO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBzdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAodGhpcy5zdGFydGluZykgdGhpcy5zdGFydGluZyA9IGZhbHNlLCB0aGlzLmVtaXQoXCJzdGFydFwiKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgYnJ1c2g6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5lbWl0KFwiYnJ1c2hcIik7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIGVuZDogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoLS10aGlzLmFjdGl2ZSA9PT0gMCkgZGVsZXRlIHRoaXMuc3RhdGUuZW1pdHRlciwgdGhpcy5lbWl0KFwiZW5kXCIpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBlbWl0OiBmdW5jdGlvbih0eXBlKSB7XG4gICAgICBjdXN0b21FdmVudChuZXcgQnJ1c2hFdmVudChicnVzaCwgdHlwZSwgZGltLm91dHB1dCh0aGlzLnN0YXRlLnNlbGVjdGlvbikpLCBsaXN0ZW5lcnMuYXBwbHksIGxpc3RlbmVycywgW3R5cGUsIHRoaXMudGhhdCwgdGhpcy5hcmdzXSk7XG4gICAgfVxuICB9O1xuXG4gIGZ1bmN0aW9uIHN0YXJ0ZWQoKSB7XG4gICAgaWYgKGV2ZW50LnRvdWNoZXMpIHsgaWYgKGV2ZW50LmNoYW5nZWRUb3VjaGVzLmxlbmd0aCA8IGV2ZW50LnRvdWNoZXMubGVuZ3RoKSByZXR1cm4gbm9ldmVudCgpOyB9XG4gICAgZWxzZSBpZiAodG91Y2hlbmRpbmcpIHJldHVybjtcbiAgICBpZiAoIWZpbHRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSByZXR1cm47XG5cbiAgICB2YXIgdGhhdCA9IHRoaXMsXG4gICAgICAgIHR5cGUgPSBldmVudC50YXJnZXQuX19kYXRhX18udHlwZSxcbiAgICAgICAgbW9kZSA9IChldmVudC5tZXRhS2V5ID8gdHlwZSA9IFwib3ZlcmxheVwiIDogdHlwZSkgPT09IFwic2VsZWN0aW9uXCIgPyBNT0RFX0RSQUcgOiAoZXZlbnQuYWx0S2V5ID8gTU9ERV9DRU5URVIgOiBNT0RFX0hBTkRMRSksXG4gICAgICAgIHNpZ25YID0gZGltID09PSBZID8gbnVsbCA6IHNpZ25zWFt0eXBlXSxcbiAgICAgICAgc2lnblkgPSBkaW0gPT09IFggPyBudWxsIDogc2lnbnNZW3R5cGVdLFxuICAgICAgICBzdGF0ZSA9IGxvY2FsKHRoYXQpLFxuICAgICAgICBleHRlbnQgPSBzdGF0ZS5leHRlbnQsXG4gICAgICAgIHNlbGVjdGlvbiA9IHN0YXRlLnNlbGVjdGlvbixcbiAgICAgICAgVyA9IGV4dGVudFswXVswXSwgdzAsIHcxLFxuICAgICAgICBOID0gZXh0ZW50WzBdWzFdLCBuMCwgbjEsXG4gICAgICAgIEUgPSBleHRlbnRbMV1bMF0sIGUwLCBlMSxcbiAgICAgICAgUyA9IGV4dGVudFsxXVsxXSwgczAsIHMxLFxuICAgICAgICBkeCxcbiAgICAgICAgZHksXG4gICAgICAgIG1vdmluZyxcbiAgICAgICAgc2hpZnRpbmcgPSBzaWduWCAmJiBzaWduWSAmJiBldmVudC5zaGlmdEtleSxcbiAgICAgICAgbG9ja1gsXG4gICAgICAgIGxvY2tZLFxuICAgICAgICBwb2ludDAgPSBtb3VzZSh0aGF0KSxcbiAgICAgICAgcG9pbnQgPSBwb2ludDAsXG4gICAgICAgIGVtaXQgPSBlbWl0dGVyKHRoYXQsIGFyZ3VtZW50cykuYmVmb3Jlc3RhcnQoKTtcblxuICAgIGlmICh0eXBlID09PSBcIm92ZXJsYXlcIikge1xuICAgICAgc3RhdGUuc2VsZWN0aW9uID0gc2VsZWN0aW9uID0gW1xuICAgICAgICBbdzAgPSBkaW0gPT09IFkgPyBXIDogcG9pbnQwWzBdLCBuMCA9IGRpbSA9PT0gWCA/IE4gOiBwb2ludDBbMV1dLFxuICAgICAgICBbZTAgPSBkaW0gPT09IFkgPyBFIDogdzAsIHMwID0gZGltID09PSBYID8gUyA6IG4wXVxuICAgICAgXTtcbiAgICB9IGVsc2Uge1xuICAgICAgdzAgPSBzZWxlY3Rpb25bMF1bMF07XG4gICAgICBuMCA9IHNlbGVjdGlvblswXVsxXTtcbiAgICAgIGUwID0gc2VsZWN0aW9uWzFdWzBdO1xuICAgICAgczAgPSBzZWxlY3Rpb25bMV1bMV07XG4gICAgfVxuXG4gICAgdzEgPSB3MDtcbiAgICBuMSA9IG4wO1xuICAgIGUxID0gZTA7XG4gICAgczEgPSBzMDtcblxuICAgIHZhciBncm91cCA9IHNlbGVjdCh0aGF0KVxuICAgICAgICAuYXR0cihcInBvaW50ZXItZXZlbnRzXCIsIFwibm9uZVwiKTtcblxuICAgIHZhciBvdmVybGF5ID0gZ3JvdXAuc2VsZWN0QWxsKFwiLm92ZXJsYXlcIilcbiAgICAgICAgLmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29yc1t0eXBlXSk7XG5cbiAgICBpZiAoZXZlbnQudG91Y2hlcykge1xuICAgICAgZ3JvdXBcbiAgICAgICAgICAub24oXCJ0b3VjaG1vdmUuYnJ1c2hcIiwgbW92ZWQsIHRydWUpXG4gICAgICAgICAgLm9uKFwidG91Y2hlbmQuYnJ1c2ggdG91Y2hjYW5jZWwuYnJ1c2hcIiwgZW5kZWQsIHRydWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdmlldyA9IHNlbGVjdChldmVudC52aWV3KVxuICAgICAgICAgIC5vbihcImtleWRvd24uYnJ1c2hcIiwga2V5ZG93bmVkLCB0cnVlKVxuICAgICAgICAgIC5vbihcImtleXVwLmJydXNoXCIsIGtleXVwcGVkLCB0cnVlKVxuICAgICAgICAgIC5vbihcIm1vdXNlbW92ZS5icnVzaFwiLCBtb3ZlZCwgdHJ1ZSlcbiAgICAgICAgICAub24oXCJtb3VzZXVwLmJydXNoXCIsIGVuZGVkLCB0cnVlKTtcblxuICAgICAgZHJhZ0Rpc2FibGUoZXZlbnQudmlldyk7XG4gICAgfVxuXG4gICAgbm9wcm9wYWdhdGlvbigpO1xuICAgIGludGVycnVwdCh0aGF0KTtcbiAgICByZWRyYXcuY2FsbCh0aGF0KTtcbiAgICBlbWl0LnN0YXJ0KCk7XG5cbiAgICBmdW5jdGlvbiBtb3ZlZCgpIHtcbiAgICAgIHZhciBwb2ludDEgPSBtb3VzZSh0aGF0KTtcbiAgICAgIGlmIChzaGlmdGluZyAmJiAhbG9ja1ggJiYgIWxvY2tZKSB7XG4gICAgICAgIGlmIChNYXRoLmFicyhwb2ludDFbMF0gLSBwb2ludFswXSkgPiBNYXRoLmFicyhwb2ludDFbMV0gLSBwb2ludFsxXSkpIGxvY2tZID0gdHJ1ZTtcbiAgICAgICAgZWxzZSBsb2NrWCA9IHRydWU7XG4gICAgICB9XG4gICAgICBwb2ludCA9IHBvaW50MTtcbiAgICAgIG1vdmluZyA9IHRydWU7XG4gICAgICBub2V2ZW50KCk7XG4gICAgICBtb3ZlKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbW92ZSgpIHtcbiAgICAgIHZhciB0O1xuXG4gICAgICBkeCA9IHBvaW50WzBdIC0gcG9pbnQwWzBdO1xuICAgICAgZHkgPSBwb2ludFsxXSAtIHBvaW50MFsxXTtcblxuICAgICAgc3dpdGNoIChtb2RlKSB7XG4gICAgICAgIGNhc2UgTU9ERV9TUEFDRTpcbiAgICAgICAgY2FzZSBNT0RFX0RSQUc6IHtcbiAgICAgICAgICBpZiAoc2lnblgpIGR4ID0gTWF0aC5tYXgoVyAtIHcwLCBNYXRoLm1pbihFIC0gZTAsIGR4KSksIHcxID0gdzAgKyBkeCwgZTEgPSBlMCArIGR4O1xuICAgICAgICAgIGlmIChzaWduWSkgZHkgPSBNYXRoLm1heChOIC0gbjAsIE1hdGgubWluKFMgLSBzMCwgZHkpKSwgbjEgPSBuMCArIGR5LCBzMSA9IHMwICsgZHk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBNT0RFX0hBTkRMRToge1xuICAgICAgICAgIGlmIChzaWduWCA8IDApIGR4ID0gTWF0aC5tYXgoVyAtIHcwLCBNYXRoLm1pbihFIC0gdzAsIGR4KSksIHcxID0gdzAgKyBkeCwgZTEgPSBlMDtcbiAgICAgICAgICBlbHNlIGlmIChzaWduWCA+IDApIGR4ID0gTWF0aC5tYXgoVyAtIGUwLCBNYXRoLm1pbihFIC0gZTAsIGR4KSksIHcxID0gdzAsIGUxID0gZTAgKyBkeDtcbiAgICAgICAgICBpZiAoc2lnblkgPCAwKSBkeSA9IE1hdGgubWF4KE4gLSBuMCwgTWF0aC5taW4oUyAtIG4wLCBkeSkpLCBuMSA9IG4wICsgZHksIHMxID0gczA7XG4gICAgICAgICAgZWxzZSBpZiAoc2lnblkgPiAwKSBkeSA9IE1hdGgubWF4KE4gLSBzMCwgTWF0aC5taW4oUyAtIHMwLCBkeSkpLCBuMSA9IG4wLCBzMSA9IHMwICsgZHk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBNT0RFX0NFTlRFUjoge1xuICAgICAgICAgIGlmIChzaWduWCkgdzEgPSBNYXRoLm1heChXLCBNYXRoLm1pbihFLCB3MCAtIGR4ICogc2lnblgpKSwgZTEgPSBNYXRoLm1heChXLCBNYXRoLm1pbihFLCBlMCArIGR4ICogc2lnblgpKTtcbiAgICAgICAgICBpZiAoc2lnblkpIG4xID0gTWF0aC5tYXgoTiwgTWF0aC5taW4oUywgbjAgLSBkeSAqIHNpZ25ZKSksIHMxID0gTWF0aC5tYXgoTiwgTWF0aC5taW4oUywgczAgKyBkeSAqIHNpZ25ZKSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGUxIDwgdzEpIHtcbiAgICAgICAgc2lnblggKj0gLTE7XG4gICAgICAgIHQgPSB3MCwgdzAgPSBlMCwgZTAgPSB0O1xuICAgICAgICB0ID0gdzEsIHcxID0gZTEsIGUxID0gdDtcbiAgICAgICAgaWYgKHR5cGUgaW4gZmxpcFgpIG92ZXJsYXkuYXR0cihcImN1cnNvclwiLCBjdXJzb3JzW3R5cGUgPSBmbGlwWFt0eXBlXV0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoczEgPCBuMSkge1xuICAgICAgICBzaWduWSAqPSAtMTtcbiAgICAgICAgdCA9IG4wLCBuMCA9IHMwLCBzMCA9IHQ7XG4gICAgICAgIHQgPSBuMSwgbjEgPSBzMSwgczEgPSB0O1xuICAgICAgICBpZiAodHlwZSBpbiBmbGlwWSkgb3ZlcmxheS5hdHRyKFwiY3Vyc29yXCIsIGN1cnNvcnNbdHlwZSA9IGZsaXBZW3R5cGVdXSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChzdGF0ZS5zZWxlY3Rpb24pIHNlbGVjdGlvbiA9IHN0YXRlLnNlbGVjdGlvbjsgLy8gTWF5IGJlIHNldCBieSBicnVzaC5tb3ZlIVxuICAgICAgaWYgKGxvY2tYKSB3MSA9IHNlbGVjdGlvblswXVswXSwgZTEgPSBzZWxlY3Rpb25bMV1bMF07XG4gICAgICBpZiAobG9ja1kpIG4xID0gc2VsZWN0aW9uWzBdWzFdLCBzMSA9IHNlbGVjdGlvblsxXVsxXTtcblxuICAgICAgaWYgKHNlbGVjdGlvblswXVswXSAhPT0gdzFcbiAgICAgICAgICB8fCBzZWxlY3Rpb25bMF1bMV0gIT09IG4xXG4gICAgICAgICAgfHwgc2VsZWN0aW9uWzFdWzBdICE9PSBlMVxuICAgICAgICAgIHx8IHNlbGVjdGlvblsxXVsxXSAhPT0gczEpIHtcbiAgICAgICAgc3RhdGUuc2VsZWN0aW9uID0gW1t3MSwgbjFdLCBbZTEsIHMxXV07XG4gICAgICAgIHJlZHJhdy5jYWxsKHRoYXQpO1xuICAgICAgICBlbWl0LmJydXNoKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZW5kZWQoKSB7XG4gICAgICBub3Byb3BhZ2F0aW9uKCk7XG4gICAgICBpZiAoZXZlbnQudG91Y2hlcykge1xuICAgICAgICBpZiAoZXZlbnQudG91Y2hlcy5sZW5ndGgpIHJldHVybjtcbiAgICAgICAgaWYgKHRvdWNoZW5kaW5nKSBjbGVhclRpbWVvdXQodG91Y2hlbmRpbmcpO1xuICAgICAgICB0b3VjaGVuZGluZyA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IHRvdWNoZW5kaW5nID0gbnVsbDsgfSwgNTAwKTsgLy8gR2hvc3QgY2xpY2tzIGFyZSBkZWxheWVkIVxuICAgICAgICBncm91cC5vbihcInRvdWNobW92ZS5icnVzaCB0b3VjaGVuZC5icnVzaCB0b3VjaGNhbmNlbC5icnVzaFwiLCBudWxsKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRyYWdFbmFibGUoZXZlbnQudmlldywgbW92aW5nKTtcbiAgICAgICAgdmlldy5vbihcImtleWRvd24uYnJ1c2gga2V5dXAuYnJ1c2ggbW91c2Vtb3ZlLmJydXNoIG1vdXNldXAuYnJ1c2hcIiwgbnVsbCk7XG4gICAgICB9XG4gICAgICBncm91cC5hdHRyKFwicG9pbnRlci1ldmVudHNcIiwgXCJhbGxcIik7XG4gICAgICBvdmVybGF5LmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29ycy5vdmVybGF5KTtcbiAgICAgIGlmIChzdGF0ZS5zZWxlY3Rpb24pIHNlbGVjdGlvbiA9IHN0YXRlLnNlbGVjdGlvbjsgLy8gTWF5IGJlIHNldCBieSBicnVzaC5tb3ZlIChvbiBzdGFydCkhXG4gICAgICBpZiAoZW1wdHkoc2VsZWN0aW9uKSkgc3RhdGUuc2VsZWN0aW9uID0gbnVsbCwgcmVkcmF3LmNhbGwodGhhdCk7XG4gICAgICBlbWl0LmVuZCgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGtleWRvd25lZCgpIHtcbiAgICAgIHN3aXRjaCAoZXZlbnQua2V5Q29kZSkge1xuICAgICAgICBjYXNlIDE2OiB7IC8vIFNISUZUXG4gICAgICAgICAgc2hpZnRpbmcgPSBzaWduWCAmJiBzaWduWTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIDE4OiB7IC8vIEFMVFxuICAgICAgICAgIGlmIChtb2RlID09PSBNT0RFX0hBTkRMRSkge1xuICAgICAgICAgICAgaWYgKHNpZ25YKSBlMCA9IGUxIC0gZHggKiBzaWduWCwgdzAgPSB3MSArIGR4ICogc2lnblg7XG4gICAgICAgICAgICBpZiAoc2lnblkpIHMwID0gczEgLSBkeSAqIHNpZ25ZLCBuMCA9IG4xICsgZHkgKiBzaWduWTtcbiAgICAgICAgICAgIG1vZGUgPSBNT0RFX0NFTlRFUjtcbiAgICAgICAgICAgIG1vdmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAzMjogeyAvLyBTUEFDRTsgdGFrZXMgcHJpb3JpdHkgb3ZlciBBTFRcbiAgICAgICAgICBpZiAobW9kZSA9PT0gTU9ERV9IQU5ETEUgfHwgbW9kZSA9PT0gTU9ERV9DRU5URVIpIHtcbiAgICAgICAgICAgIGlmIChzaWduWCA8IDApIGUwID0gZTEgLSBkeDsgZWxzZSBpZiAoc2lnblggPiAwKSB3MCA9IHcxIC0gZHg7XG4gICAgICAgICAgICBpZiAoc2lnblkgPCAwKSBzMCA9IHMxIC0gZHk7IGVsc2UgaWYgKHNpZ25ZID4gMCkgbjAgPSBuMSAtIGR5O1xuICAgICAgICAgICAgbW9kZSA9IE1PREVfU1BBQ0U7XG4gICAgICAgICAgICBvdmVybGF5LmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29ycy5zZWxlY3Rpb24pO1xuICAgICAgICAgICAgbW92ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiByZXR1cm47XG4gICAgICB9XG4gICAgICBub2V2ZW50KCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24ga2V5dXBwZWQoKSB7XG4gICAgICBzd2l0Y2ggKGV2ZW50LmtleUNvZGUpIHtcbiAgICAgICAgY2FzZSAxNjogeyAvLyBTSElGVFxuICAgICAgICAgIGlmIChzaGlmdGluZykge1xuICAgICAgICAgICAgbG9ja1ggPSBsb2NrWSA9IHNoaWZ0aW5nID0gZmFsc2U7XG4gICAgICAgICAgICBtb3ZlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgMTg6IHsgLy8gQUxUXG4gICAgICAgICAgaWYgKG1vZGUgPT09IE1PREVfQ0VOVEVSKSB7XG4gICAgICAgICAgICBpZiAoc2lnblggPCAwKSBlMCA9IGUxOyBlbHNlIGlmIChzaWduWCA+IDApIHcwID0gdzE7XG4gICAgICAgICAgICBpZiAoc2lnblkgPCAwKSBzMCA9IHMxOyBlbHNlIGlmIChzaWduWSA+IDApIG4wID0gbjE7XG4gICAgICAgICAgICBtb2RlID0gTU9ERV9IQU5ETEU7XG4gICAgICAgICAgICBtb3ZlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgMzI6IHsgLy8gU1BBQ0VcbiAgICAgICAgICBpZiAobW9kZSA9PT0gTU9ERV9TUEFDRSkge1xuICAgICAgICAgICAgaWYgKGV2ZW50LmFsdEtleSkge1xuICAgICAgICAgICAgICBpZiAoc2lnblgpIGUwID0gZTEgLSBkeCAqIHNpZ25YLCB3MCA9IHcxICsgZHggKiBzaWduWDtcbiAgICAgICAgICAgICAgaWYgKHNpZ25ZKSBzMCA9IHMxIC0gZHkgKiBzaWduWSwgbjAgPSBuMSArIGR5ICogc2lnblk7XG4gICAgICAgICAgICAgIG1vZGUgPSBNT0RFX0NFTlRFUjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGlmIChzaWduWCA8IDApIGUwID0gZTE7IGVsc2UgaWYgKHNpZ25YID4gMCkgdzAgPSB3MTtcbiAgICAgICAgICAgICAgaWYgKHNpZ25ZIDwgMCkgczAgPSBzMTsgZWxzZSBpZiAoc2lnblkgPiAwKSBuMCA9IG4xO1xuICAgICAgICAgICAgICBtb2RlID0gTU9ERV9IQU5ETEU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvdmVybGF5LmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29yc1t0eXBlXSk7XG4gICAgICAgICAgICBtb3ZlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHJldHVybjtcbiAgICAgIH1cbiAgICAgIG5vZXZlbnQoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xuICAgIHZhciBzdGF0ZSA9IHRoaXMuX19icnVzaCB8fCB7c2VsZWN0aW9uOiBudWxsfTtcbiAgICBzdGF0ZS5leHRlbnQgPSBleHRlbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBzdGF0ZS5kaW0gPSBkaW07XG4gICAgcmV0dXJuIHN0YXRlO1xuICB9XG5cbiAgYnJ1c2guZXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGV4dGVudCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoW1srX1swXVswXSwgK19bMF1bMV1dLCBbK19bMV1bMF0sICtfWzFdWzFdXV0pLCBicnVzaCkgOiBleHRlbnQ7XG4gIH07XG5cbiAgYnJ1c2guZmlsdGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGZpbHRlciA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgYnJ1c2gpIDogZmlsdGVyO1xuICB9O1xuXG4gIGJydXNoLmhhbmRsZVNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaGFuZGxlU2l6ZSA9ICtfLCBicnVzaCkgOiBoYW5kbGVTaXplO1xuICB9O1xuXG4gIGJydXNoLm9uID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlID0gbGlzdGVuZXJzLm9uLmFwcGx5KGxpc3RlbmVycywgYXJndW1lbnRzKTtcbiAgICByZXR1cm4gdmFsdWUgPT09IGxpc3RlbmVycyA/IGJydXNoIDogdmFsdWU7XG4gIH07XG5cbiAgcmV0dXJuIGJydXNoO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0YXJnZXQsIHR5cGUsIHNlbGVjdGlvbikge1xuICB0aGlzLnRhcmdldCA9IHRhcmdldDtcbiAgdGhpcy50eXBlID0gdHlwZTtcbiAgdGhpcy5zZWxlY3Rpb24gPSBzZWxlY3Rpb247XG59XG4iLCJleHBvcnQge1xuICBkZWZhdWx0IGFzIGJydXNoLFxuICBicnVzaFgsXG4gIGJydXNoWSxcbiAgYnJ1c2hTZWxlY3Rpb25cbn0gZnJvbSBcIi4vYnJ1c2hcIjtcbiIsImltcG9ydCB7ZXZlbnR9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG5vcHJvcGFnYXRpb24oKSB7XG4gIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG4iLCJleHBvcnQgdmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xuIiwiaW1wb3J0IHtyYW5nZX0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge21heCwgdGF1fSBmcm9tIFwiLi9tYXRoXCI7XG5cbmZ1bmN0aW9uIGNvbXBhcmVWYWx1ZShjb21wYXJlKSB7XG4gIHJldHVybiBmdW5jdGlvbihhLCBiKSB7XG4gICAgcmV0dXJuIGNvbXBhcmUoXG4gICAgICBhLnNvdXJjZS52YWx1ZSArIGEudGFyZ2V0LnZhbHVlLFxuICAgICAgYi5zb3VyY2UudmFsdWUgKyBiLnRhcmdldC52YWx1ZVxuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgcGFkQW5nbGUgPSAwLFxuICAgICAgc29ydEdyb3VwcyA9IG51bGwsXG4gICAgICBzb3J0U3ViZ3JvdXBzID0gbnVsbCxcbiAgICAgIHNvcnRDaG9yZHMgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGNob3JkKG1hdHJpeCkge1xuICAgIHZhciBuID0gbWF0cml4Lmxlbmd0aCxcbiAgICAgICAgZ3JvdXBTdW1zID0gW10sXG4gICAgICAgIGdyb3VwSW5kZXggPSByYW5nZShuKSxcbiAgICAgICAgc3ViZ3JvdXBJbmRleCA9IFtdLFxuICAgICAgICBjaG9yZHMgPSBbXSxcbiAgICAgICAgZ3JvdXBzID0gY2hvcmRzLmdyb3VwcyA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgc3ViZ3JvdXBzID0gbmV3IEFycmF5KG4gKiBuKSxcbiAgICAgICAgayxcbiAgICAgICAgeCxcbiAgICAgICAgeDAsXG4gICAgICAgIGR4LFxuICAgICAgICBpLFxuICAgICAgICBqO1xuXG4gICAgLy8gQ29tcHV0ZSB0aGUgc3VtLlxuICAgIGsgPSAwLCBpID0gLTE7IHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICB4ID0gMCwgaiA9IC0xOyB3aGlsZSAoKytqIDwgbikge1xuICAgICAgICB4ICs9IG1hdHJpeFtpXVtqXTtcbiAgICAgIH1cbiAgICAgIGdyb3VwU3Vtcy5wdXNoKHgpO1xuICAgICAgc3ViZ3JvdXBJbmRleC5wdXNoKHJhbmdlKG4pKTtcbiAgICAgIGsgKz0geDtcbiAgICB9XG5cbiAgICAvLyBTb3J0IGdyb3Vwc+KAplxuICAgIGlmIChzb3J0R3JvdXBzKSBncm91cEluZGV4LnNvcnQoZnVuY3Rpb24oYSwgYikge1xuICAgICAgcmV0dXJuIHNvcnRHcm91cHMoZ3JvdXBTdW1zW2FdLCBncm91cFN1bXNbYl0pO1xuICAgIH0pO1xuXG4gICAgLy8gU29ydCBzdWJncm91cHPigKZcbiAgICBpZiAoc29ydFN1Ymdyb3Vwcykgc3ViZ3JvdXBJbmRleC5mb3JFYWNoKGZ1bmN0aW9uKGQsIGkpIHtcbiAgICAgIGQuc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgIHJldHVybiBzb3J0U3ViZ3JvdXBzKG1hdHJpeFtpXVthXSwgbWF0cml4W2ldW2JdKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgLy8gQ29udmVydCB0aGUgc3VtIHRvIHNjYWxpbmcgZmFjdG9yIGZvciBbMCwgMnBpXS5cbiAgICAvLyBUT0RPIEFsbG93IHN0YXJ0IGFuZCBlbmQgYW5nbGUgdG8gYmUgc3BlY2lmaWVkP1xuICAgIC8vIFRPRE8gQWxsb3cgcGFkZGluZyB0byBiZSBzcGVjaWZpZWQgYXMgcGVyY2VudGFnZT9cbiAgICBrID0gbWF4KDAsIHRhdSAtIHBhZEFuZ2xlICogbikgLyBrO1xuICAgIGR4ID0gayA/IHBhZEFuZ2xlIDogdGF1IC8gbjtcblxuICAgIC8vIENvbXB1dGUgdGhlIHN0YXJ0IGFuZCBlbmQgYW5nbGUgZm9yIGVhY2ggZ3JvdXAgYW5kIHN1Ymdyb3VwLlxuICAgIC8vIE5vdGU6IE9wZXJhIGhhcyBhIGJ1ZyByZW9yZGVyaW5nIG9iamVjdCBsaXRlcmFsIHByb3BlcnRpZXMhXG4gICAgeCA9IDAsIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIHgwID0geCwgaiA9IC0xOyB3aGlsZSAoKytqIDwgbikge1xuICAgICAgICB2YXIgZGkgPSBncm91cEluZGV4W2ldLFxuICAgICAgICAgICAgZGogPSBzdWJncm91cEluZGV4W2RpXVtqXSxcbiAgICAgICAgICAgIHYgPSBtYXRyaXhbZGldW2RqXSxcbiAgICAgICAgICAgIGEwID0geCxcbiAgICAgICAgICAgIGExID0geCArPSB2ICogaztcbiAgICAgICAgc3ViZ3JvdXBzW2RqICogbiArIGRpXSA9IHtcbiAgICAgICAgICBpbmRleDogZGksXG4gICAgICAgICAgc3ViaW5kZXg6IGRqLFxuICAgICAgICAgIHN0YXJ0QW5nbGU6IGEwLFxuICAgICAgICAgIGVuZEFuZ2xlOiBhMSxcbiAgICAgICAgICB2YWx1ZTogdlxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgZ3JvdXBzW2RpXSA9IHtcbiAgICAgICAgaW5kZXg6IGRpLFxuICAgICAgICBzdGFydEFuZ2xlOiB4MCxcbiAgICAgICAgZW5kQW5nbGU6IHgsXG4gICAgICAgIHZhbHVlOiBncm91cFN1bXNbZGldXG4gICAgICB9O1xuICAgICAgeCArPSBkeDtcbiAgICB9XG5cbiAgICAvLyBHZW5lcmF0ZSBjaG9yZHMgZm9yIGVhY2ggKG5vbi1lbXB0eSkgc3ViZ3JvdXAtc3ViZ3JvdXAgbGluay5cbiAgICBpID0gLTE7IHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBqID0gaSAtIDE7IHdoaWxlICgrK2ogPCBuKSB7XG4gICAgICAgIHZhciBzb3VyY2UgPSBzdWJncm91cHNbaiAqIG4gKyBpXSxcbiAgICAgICAgICAgIHRhcmdldCA9IHN1Ymdyb3Vwc1tpICogbiArIGpdO1xuICAgICAgICBpZiAoc291cmNlLnZhbHVlIHx8IHRhcmdldC52YWx1ZSkge1xuICAgICAgICAgIGNob3Jkcy5wdXNoKHNvdXJjZS52YWx1ZSA8IHRhcmdldC52YWx1ZVxuICAgICAgICAgICAgICA/IHtzb3VyY2U6IHRhcmdldCwgdGFyZ2V0OiBzb3VyY2V9XG4gICAgICAgICAgICAgIDoge3NvdXJjZTogc291cmNlLCB0YXJnZXQ6IHRhcmdldH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHNvcnRDaG9yZHMgPyBjaG9yZHMuc29ydChzb3J0Q2hvcmRzKSA6IGNob3JkcztcbiAgfVxuXG4gIGNob3JkLnBhZEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZEFuZ2xlID0gbWF4KDAsIF8pLCBjaG9yZCkgOiBwYWRBbmdsZTtcbiAgfTtcblxuICBjaG9yZC5zb3J0R3JvdXBzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNvcnRHcm91cHMgPSBfLCBjaG9yZCkgOiBzb3J0R3JvdXBzO1xuICB9O1xuXG4gIGNob3JkLnNvcnRTdWJncm91cHMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc29ydFN1Ymdyb3VwcyA9IF8sIGNob3JkKSA6IHNvcnRTdWJncm91cHM7XG4gIH07XG5cbiAgY2hvcmQuc29ydENob3JkcyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChfID09IG51bGwgPyBzb3J0Q2hvcmRzID0gbnVsbCA6IChzb3J0Q2hvcmRzID0gY29tcGFyZVZhbHVlKF8pKS5fID0gXywgY2hvcmQpIDogc29ydENob3JkcyAmJiBzb3J0Q2hvcmRzLl87XG4gIH07XG5cbiAgcmV0dXJuIGNob3JkO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgY2hvcmR9IGZyb20gXCIuL2Nob3JkXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcmliYm9ufSBmcm9tIFwiLi9yaWJib25cIjtcbiIsImV4cG9ydCB2YXIgY29zID0gTWF0aC5jb3M7XG5leHBvcnQgdmFyIHNpbiA9IE1hdGguc2luO1xuZXhwb3J0IHZhciBwaSA9IE1hdGguUEk7XG5leHBvcnQgdmFyIGhhbGZQaSA9IHBpIC8gMjtcbmV4cG9ydCB2YXIgdGF1ID0gcGkgKiAyO1xuZXhwb3J0IHZhciBtYXggPSBNYXRoLm1heDtcbiIsImltcG9ydCB7c2xpY2V9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCB7Y29zLCBoYWxmUGksIHNpbn0gZnJvbSBcIi4vbWF0aFwiO1xuaW1wb3J0IHtwYXRofSBmcm9tIFwiZDMtcGF0aFwiO1xuXG5mdW5jdGlvbiBkZWZhdWx0U291cmNlKGQpIHtcbiAgcmV0dXJuIGQuc291cmNlO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0VGFyZ2V0KGQpIHtcbiAgcmV0dXJuIGQudGFyZ2V0O1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0UmFkaXVzKGQpIHtcbiAgcmV0dXJuIGQucmFkaXVzO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0U3RhcnRBbmdsZShkKSB7XG4gIHJldHVybiBkLnN0YXJ0QW5nbGU7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRFbmRBbmdsZShkKSB7XG4gIHJldHVybiBkLmVuZEFuZ2xlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHNvdXJjZSA9IGRlZmF1bHRTb3VyY2UsXG4gICAgICB0YXJnZXQgPSBkZWZhdWx0VGFyZ2V0LFxuICAgICAgcmFkaXVzID0gZGVmYXVsdFJhZGl1cyxcbiAgICAgIHN0YXJ0QW5nbGUgPSBkZWZhdWx0U3RhcnRBbmdsZSxcbiAgICAgIGVuZEFuZ2xlID0gZGVmYXVsdEVuZEFuZ2xlLFxuICAgICAgY29udGV4dCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gcmliYm9uKCkge1xuICAgIHZhciBidWZmZXIsXG4gICAgICAgIGFyZ3YgPSBzbGljZS5jYWxsKGFyZ3VtZW50cyksXG4gICAgICAgIHMgPSBzb3VyY2UuYXBwbHkodGhpcywgYXJndiksXG4gICAgICAgIHQgPSB0YXJnZXQuYXBwbHkodGhpcywgYXJndiksXG4gICAgICAgIHNyID0gK3JhZGl1cy5hcHBseSh0aGlzLCAoYXJndlswXSA9IHMsIGFyZ3YpKSxcbiAgICAgICAgc2EwID0gc3RhcnRBbmdsZS5hcHBseSh0aGlzLCBhcmd2KSAtIGhhbGZQaSxcbiAgICAgICAgc2ExID0gZW5kQW5nbGUuYXBwbHkodGhpcywgYXJndikgLSBoYWxmUGksXG4gICAgICAgIHN4MCA9IHNyICogY29zKHNhMCksXG4gICAgICAgIHN5MCA9IHNyICogc2luKHNhMCksXG4gICAgICAgIHRyID0gK3JhZGl1cy5hcHBseSh0aGlzLCAoYXJndlswXSA9IHQsIGFyZ3YpKSxcbiAgICAgICAgdGEwID0gc3RhcnRBbmdsZS5hcHBseSh0aGlzLCBhcmd2KSAtIGhhbGZQaSxcbiAgICAgICAgdGExID0gZW5kQW5nbGUuYXBwbHkodGhpcywgYXJndikgLSBoYWxmUGk7XG5cbiAgICBpZiAoIWNvbnRleHQpIGNvbnRleHQgPSBidWZmZXIgPSBwYXRoKCk7XG5cbiAgICBjb250ZXh0Lm1vdmVUbyhzeDAsIHN5MCk7XG4gICAgY29udGV4dC5hcmMoMCwgMCwgc3IsIHNhMCwgc2ExKTtcbiAgICBpZiAoc2EwICE9PSB0YTAgfHwgc2ExICE9PSB0YTEpIHsgLy8gVE9ETyBzciAhPT0gdHI/XG4gICAgICBjb250ZXh0LnF1YWRyYXRpY0N1cnZlVG8oMCwgMCwgdHIgKiBjb3ModGEwKSwgdHIgKiBzaW4odGEwKSk7XG4gICAgICBjb250ZXh0LmFyYygwLCAwLCB0ciwgdGEwLCB0YTEpO1xuICAgIH1cbiAgICBjb250ZXh0LnF1YWRyYXRpY0N1cnZlVG8oMCwgMCwgc3gwLCBzeTApO1xuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG5cbiAgICBpZiAoYnVmZmVyKSByZXR1cm4gY29udGV4dCA9IG51bGwsIGJ1ZmZlciArIFwiXCIgfHwgbnVsbDtcbiAgfVxuXG4gIHJpYmJvbi5yYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocmFkaXVzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHJpYmJvbikgOiByYWRpdXM7XG4gIH07XG5cbiAgcmliYm9uLnN0YXJ0QW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RhcnRBbmdsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCByaWJib24pIDogc3RhcnRBbmdsZTtcbiAgfTtcblxuICByaWJib24uZW5kQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZW5kQW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgcmliYm9uKSA6IGVuZEFuZ2xlO1xuICB9O1xuXG4gIHJpYmJvbi5zb3VyY2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc291cmNlID0gXywgcmliYm9uKSA6IHNvdXJjZTtcbiAgfTtcblxuICByaWJib24udGFyZ2V0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRhcmdldCA9IF8sIHJpYmJvbikgOiB0YXJnZXQ7XG4gIH07XG5cbiAgcmliYm9uLmNvbnRleHQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoKGNvbnRleHQgPSBfID09IG51bGwgPyBudWxsIDogXyksIHJpYmJvbikgOiBjb250ZXh0O1xuICB9O1xuXG4gIHJldHVybiByaWJib247XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihtYXApIHtcbiAgdmFyIGVudHJpZXMgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIG1hcCkgZW50cmllcy5wdXNoKHtrZXk6IGtleSwgdmFsdWU6IG1hcFtrZXldfSk7XG4gIHJldHVybiBlbnRyaWVzO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIG5lc3R9IGZyb20gXCIuL25lc3RcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzZXR9IGZyb20gXCIuL3NldFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1hcH0gZnJvbSBcIi4vbWFwXCI7XG5leHBvcnQge2RlZmF1bHQgYXMga2V5c30gZnJvbSBcIi4va2V5c1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHZhbHVlc30gZnJvbSBcIi4vdmFsdWVzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZW50cmllc30gZnJvbSBcIi4vZW50cmllc1wiO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWFwKSB7XG4gIHZhciBrZXlzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBtYXApIGtleXMucHVzaChrZXkpO1xuICByZXR1cm4ga2V5cztcbn1cbiIsImV4cG9ydCB2YXIgcHJlZml4ID0gXCIkXCI7XG5cbmZ1bmN0aW9uIE1hcCgpIHt9XG5cbk1hcC5wcm90b3R5cGUgPSBtYXAucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogTWFwLFxuICBoYXM6IGZ1bmN0aW9uKGtleSkge1xuICAgIHJldHVybiAocHJlZml4ICsga2V5KSBpbiB0aGlzO1xuICB9LFxuICBnZXQ6IGZ1bmN0aW9uKGtleSkge1xuICAgIHJldHVybiB0aGlzW3ByZWZpeCArIGtleV07XG4gIH0sXG4gIHNldDogZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIHRoaXNbcHJlZml4ICsga2V5XSA9IHZhbHVlO1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxuICByZW1vdmU6IGZ1bmN0aW9uKGtleSkge1xuICAgIHZhciBwcm9wZXJ0eSA9IHByZWZpeCArIGtleTtcbiAgICByZXR1cm4gcHJvcGVydHkgaW4gdGhpcyAmJiBkZWxldGUgdGhpc1twcm9wZXJ0eV07XG4gIH0sXG4gIGNsZWFyOiBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiB0aGlzKSBpZiAocHJvcGVydHlbMF0gPT09IHByZWZpeCkgZGVsZXRlIHRoaXNbcHJvcGVydHldO1xuICB9LFxuICBrZXlzOiBmdW5jdGlvbigpIHtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHRoaXMpIGlmIChwcm9wZXJ0eVswXSA9PT0gcHJlZml4KSBrZXlzLnB1c2gocHJvcGVydHkuc2xpY2UoMSkpO1xuICAgIHJldHVybiBrZXlzO1xuICB9LFxuICB2YWx1ZXM6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiB0aGlzKSBpZiAocHJvcGVydHlbMF0gPT09IHByZWZpeCkgdmFsdWVzLnB1c2godGhpc1twcm9wZXJ0eV0pO1xuICAgIHJldHVybiB2YWx1ZXM7XG4gIH0sXG4gIGVudHJpZXM6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBlbnRyaWVzID0gW107XG4gICAgZm9yICh2YXIgcHJvcGVydHkgaW4gdGhpcykgaWYgKHByb3BlcnR5WzBdID09PSBwcmVmaXgpIGVudHJpZXMucHVzaCh7a2V5OiBwcm9wZXJ0eS5zbGljZSgxKSwgdmFsdWU6IHRoaXNbcHJvcGVydHldfSk7XG4gICAgcmV0dXJuIGVudHJpZXM7XG4gIH0sXG4gIHNpemU6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzaXplID0gMDtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiB0aGlzKSBpZiAocHJvcGVydHlbMF0gPT09IHByZWZpeCkgKytzaXplO1xuICAgIHJldHVybiBzaXplO1xuICB9LFxuICBlbXB0eTogZnVuY3Rpb24oKSB7XG4gICAgZm9yICh2YXIgcHJvcGVydHkgaW4gdGhpcykgaWYgKHByb3BlcnR5WzBdID09PSBwcmVmaXgpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcbiAgZWFjaDogZnVuY3Rpb24oZikge1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHRoaXMpIGlmIChwcm9wZXJ0eVswXSA9PT0gcHJlZml4KSBmKHRoaXNbcHJvcGVydHldLCBwcm9wZXJ0eS5zbGljZSgxKSwgdGhpcyk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIG1hcChvYmplY3QsIGYpIHtcbiAgdmFyIG1hcCA9IG5ldyBNYXA7XG5cbiAgLy8gQ29weSBjb25zdHJ1Y3Rvci5cbiAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIE1hcCkgb2JqZWN0LmVhY2goZnVuY3Rpb24odmFsdWUsIGtleSkgeyBtYXAuc2V0KGtleSwgdmFsdWUpOyB9KTtcblxuICAvLyBJbmRleCBhcnJheSBieSBudW1lcmljIGluZGV4IG9yIHNwZWNpZmllZCBrZXkgZnVuY3Rpb24uXG4gIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkob2JqZWN0KSkge1xuICAgIHZhciBpID0gLTEsXG4gICAgICAgIG4gPSBvYmplY3QubGVuZ3RoLFxuICAgICAgICBvO1xuXG4gICAgaWYgKGYgPT0gbnVsbCkgd2hpbGUgKCsraSA8IG4pIG1hcC5zZXQoaSwgb2JqZWN0W2ldKTtcbiAgICBlbHNlIHdoaWxlICgrK2kgPCBuKSBtYXAuc2V0KGYobyA9IG9iamVjdFtpXSwgaSwgb2JqZWN0KSwgbyk7XG4gIH1cblxuICAvLyBDb252ZXJ0IG9iamVjdCB0byBtYXAuXG4gIGVsc2UgaWYgKG9iamVjdCkgZm9yICh2YXIga2V5IGluIG9iamVjdCkgbWFwLnNldChrZXksIG9iamVjdFtrZXldKTtcblxuICByZXR1cm4gbWFwO1xufVxuXG5leHBvcnQgZGVmYXVsdCBtYXA7XG4iLCJpbXBvcnQgbWFwIGZyb20gXCIuL21hcFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGtleXMgPSBbXSxcbiAgICAgIHNvcnRLZXlzID0gW10sXG4gICAgICBzb3J0VmFsdWVzLFxuICAgICAgcm9sbHVwLFxuICAgICAgbmVzdDtcblxuICBmdW5jdGlvbiBhcHBseShhcnJheSwgZGVwdGgsIGNyZWF0ZVJlc3VsdCwgc2V0UmVzdWx0KSB7XG4gICAgaWYgKGRlcHRoID49IGtleXMubGVuZ3RoKSB7XG4gICAgICBpZiAoc29ydFZhbHVlcyAhPSBudWxsKSBhcnJheS5zb3J0KHNvcnRWYWx1ZXMpO1xuICAgICAgcmV0dXJuIHJvbGx1cCAhPSBudWxsID8gcm9sbHVwKGFycmF5KSA6IGFycmF5O1xuICAgIH1cblxuICAgIHZhciBpID0gLTEsXG4gICAgICAgIG4gPSBhcnJheS5sZW5ndGgsXG4gICAgICAgIGtleSA9IGtleXNbZGVwdGgrK10sXG4gICAgICAgIGtleVZhbHVlLFxuICAgICAgICB2YWx1ZSxcbiAgICAgICAgdmFsdWVzQnlLZXkgPSBtYXAoKSxcbiAgICAgICAgdmFsdWVzLFxuICAgICAgICByZXN1bHQgPSBjcmVhdGVSZXN1bHQoKTtcblxuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAodmFsdWVzID0gdmFsdWVzQnlLZXkuZ2V0KGtleVZhbHVlID0ga2V5KHZhbHVlID0gYXJyYXlbaV0pICsgXCJcIikpIHtcbiAgICAgICAgdmFsdWVzLnB1c2godmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsdWVzQnlLZXkuc2V0KGtleVZhbHVlLCBbdmFsdWVdKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YWx1ZXNCeUtleS5lYWNoKGZ1bmN0aW9uKHZhbHVlcywga2V5KSB7XG4gICAgICBzZXRSZXN1bHQocmVzdWx0LCBrZXksIGFwcGx5KHZhbHVlcywgZGVwdGgsIGNyZWF0ZVJlc3VsdCwgc2V0UmVzdWx0KSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gZW50cmllcyhtYXAsIGRlcHRoKSB7XG4gICAgaWYgKCsrZGVwdGggPiBrZXlzLmxlbmd0aCkgcmV0dXJuIG1hcDtcbiAgICB2YXIgYXJyYXksIHNvcnRLZXkgPSBzb3J0S2V5c1tkZXB0aCAtIDFdO1xuICAgIGlmIChyb2xsdXAgIT0gbnVsbCAmJiBkZXB0aCA+PSBrZXlzLmxlbmd0aCkgYXJyYXkgPSBtYXAuZW50cmllcygpO1xuICAgIGVsc2UgYXJyYXkgPSBbXSwgbWFwLmVhY2goZnVuY3Rpb24odiwgaykgeyBhcnJheS5wdXNoKHtrZXk6IGssIHZhbHVlczogZW50cmllcyh2LCBkZXB0aCl9KTsgfSk7XG4gICAgcmV0dXJuIHNvcnRLZXkgIT0gbnVsbCA/IGFycmF5LnNvcnQoZnVuY3Rpb24oYSwgYikgeyByZXR1cm4gc29ydEtleShhLmtleSwgYi5rZXkpOyB9KSA6IGFycmF5O1xuICB9XG5cbiAgcmV0dXJuIG5lc3QgPSB7XG4gICAgb2JqZWN0OiBmdW5jdGlvbihhcnJheSkgeyByZXR1cm4gYXBwbHkoYXJyYXksIDAsIGNyZWF0ZU9iamVjdCwgc2V0T2JqZWN0KTsgfSxcbiAgICBtYXA6IGZ1bmN0aW9uKGFycmF5KSB7IHJldHVybiBhcHBseShhcnJheSwgMCwgY3JlYXRlTWFwLCBzZXRNYXApOyB9LFxuICAgIGVudHJpZXM6IGZ1bmN0aW9uKGFycmF5KSB7IHJldHVybiBlbnRyaWVzKGFwcGx5KGFycmF5LCAwLCBjcmVhdGVNYXAsIHNldE1hcCksIDApOyB9LFxuICAgIGtleTogZnVuY3Rpb24oZCkgeyBrZXlzLnB1c2goZCk7IHJldHVybiBuZXN0OyB9LFxuICAgIHNvcnRLZXlzOiBmdW5jdGlvbihvcmRlcikgeyBzb3J0S2V5c1trZXlzLmxlbmd0aCAtIDFdID0gb3JkZXI7IHJldHVybiBuZXN0OyB9LFxuICAgIHNvcnRWYWx1ZXM6IGZ1bmN0aW9uKG9yZGVyKSB7IHNvcnRWYWx1ZXMgPSBvcmRlcjsgcmV0dXJuIG5lc3Q7IH0sXG4gICAgcm9sbHVwOiBmdW5jdGlvbihmKSB7IHJvbGx1cCA9IGY7IHJldHVybiBuZXN0OyB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU9iamVjdCgpIHtcbiAgcmV0dXJuIHt9O1xufVxuXG5mdW5jdGlvbiBzZXRPYmplY3Qob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU1hcCgpIHtcbiAgcmV0dXJuIG1hcCgpO1xufVxuXG5mdW5jdGlvbiBzZXRNYXAobWFwLCBrZXksIHZhbHVlKSB7XG4gIG1hcC5zZXQoa2V5LCB2YWx1ZSk7XG59XG4iLCJpbXBvcnQge2RlZmF1bHQgYXMgbWFwLCBwcmVmaXh9IGZyb20gXCIuL21hcFwiO1xuXG5mdW5jdGlvbiBTZXQoKSB7fVxuXG52YXIgcHJvdG8gPSBtYXAucHJvdG90eXBlO1xuXG5TZXQucHJvdG90eXBlID0gc2V0LnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFNldCxcbiAgaGFzOiBwcm90by5oYXMsXG4gIGFkZDogZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YWx1ZSArPSBcIlwiO1xuICAgIHRoaXNbcHJlZml4ICsgdmFsdWVdID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIHJlbW92ZTogcHJvdG8ucmVtb3ZlLFxuICBjbGVhcjogcHJvdG8uY2xlYXIsXG4gIHZhbHVlczogcHJvdG8ua2V5cyxcbiAgc2l6ZTogcHJvdG8uc2l6ZSxcbiAgZW1wdHk6IHByb3RvLmVtcHR5LFxuICBlYWNoOiBwcm90by5lYWNoXG59O1xuXG5mdW5jdGlvbiBzZXQob2JqZWN0LCBmKSB7XG4gIHZhciBzZXQgPSBuZXcgU2V0O1xuXG4gIC8vIENvcHkgY29uc3RydWN0b3IuXG4gIGlmIChvYmplY3QgaW5zdGFuY2VvZiBTZXQpIG9iamVjdC5lYWNoKGZ1bmN0aW9uKHZhbHVlKSB7IHNldC5hZGQodmFsdWUpOyB9KTtcblxuICAvLyBPdGhlcndpc2UsIGFzc3VtZSBpdOKAmXMgYW4gYXJyYXkuXG4gIGVsc2UgaWYgKG9iamVjdCkge1xuICAgIHZhciBpID0gLTEsIG4gPSBvYmplY3QubGVuZ3RoO1xuICAgIGlmIChmID09IG51bGwpIHdoaWxlICgrK2kgPCBuKSBzZXQuYWRkKG9iamVjdFtpXSk7XG4gICAgZWxzZSB3aGlsZSAoKytpIDwgbikgc2V0LmFkZChmKG9iamVjdFtpXSwgaSwgb2JqZWN0KSk7XG4gIH1cblxuICByZXR1cm4gc2V0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBzZXQ7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihtYXApIHtcbiAgdmFyIHZhbHVlcyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gbWFwKSB2YWx1ZXMucHVzaChtYXBba2V5XSk7XG4gIHJldHVybiB2YWx1ZXM7XG59XG4iLCJpbXBvcnQgZGVmaW5lLCB7ZXh0ZW5kfSBmcm9tIFwiLi9kZWZpbmVcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIENvbG9yKCkge31cblxuZXhwb3J0IHZhciBkYXJrZXIgPSAwLjc7XG5leHBvcnQgdmFyIGJyaWdodGVyID0gMSAvIGRhcmtlcjtcblxudmFyIHJlSSA9IFwiXFxcXHMqKFsrLV0/XFxcXGQrKVxcXFxzKlwiLFxuICAgIHJlTiA9IFwiXFxcXHMqKFsrLV0/XFxcXGQqXFxcXC4/XFxcXGQrKD86W2VFXVsrLV0/XFxcXGQrKT8pXFxcXHMqXCIsXG4gICAgcmVQID0gXCJcXFxccyooWystXT9cXFxcZCpcXFxcLj9cXFxcZCsoPzpbZUVdWystXT9cXFxcZCspPyklXFxcXHMqXCIsXG4gICAgcmVIZXgzID0gL14jKFswLTlhLWZdezN9KSQvLFxuICAgIHJlSGV4NiA9IC9eIyhbMC05YS1mXXs2fSkkLyxcbiAgICByZVJnYkludGVnZXIgPSBuZXcgUmVnRXhwKFwiXnJnYlxcXFwoXCIgKyBbcmVJLCByZUksIHJlSV0gKyBcIlxcXFwpJFwiKSxcbiAgICByZVJnYlBlcmNlbnQgPSBuZXcgUmVnRXhwKFwiXnJnYlxcXFwoXCIgKyBbcmVQLCByZVAsIHJlUF0gKyBcIlxcXFwpJFwiKSxcbiAgICByZVJnYmFJbnRlZ2VyID0gbmV3IFJlZ0V4cChcIl5yZ2JhXFxcXChcIiArIFtyZUksIHJlSSwgcmVJLCByZU5dICsgXCJcXFxcKSRcIiksXG4gICAgcmVSZ2JhUGVyY2VudCA9IG5ldyBSZWdFeHAoXCJecmdiYVxcXFwoXCIgKyBbcmVQLCByZVAsIHJlUCwgcmVOXSArIFwiXFxcXCkkXCIpLFxuICAgIHJlSHNsUGVyY2VudCA9IG5ldyBSZWdFeHAoXCJeaHNsXFxcXChcIiArIFtyZU4sIHJlUCwgcmVQXSArIFwiXFxcXCkkXCIpLFxuICAgIHJlSHNsYVBlcmNlbnQgPSBuZXcgUmVnRXhwKFwiXmhzbGFcXFxcKFwiICsgW3JlTiwgcmVQLCByZVAsIHJlTl0gKyBcIlxcXFwpJFwiKTtcblxudmFyIG5hbWVkID0ge1xuICBhbGljZWJsdWU6IDB4ZjBmOGZmLFxuICBhbnRpcXVld2hpdGU6IDB4ZmFlYmQ3LFxuICBhcXVhOiAweDAwZmZmZixcbiAgYXF1YW1hcmluZTogMHg3ZmZmZDQsXG4gIGF6dXJlOiAweGYwZmZmZixcbiAgYmVpZ2U6IDB4ZjVmNWRjLFxuICBiaXNxdWU6IDB4ZmZlNGM0LFxuICBibGFjazogMHgwMDAwMDAsXG4gIGJsYW5jaGVkYWxtb25kOiAweGZmZWJjZCxcbiAgYmx1ZTogMHgwMDAwZmYsXG4gIGJsdWV2aW9sZXQ6IDB4OGEyYmUyLFxuICBicm93bjogMHhhNTJhMmEsXG4gIGJ1cmx5d29vZDogMHhkZWI4ODcsXG4gIGNhZGV0Ymx1ZTogMHg1ZjllYTAsXG4gIGNoYXJ0cmV1c2U6IDB4N2ZmZjAwLFxuICBjaG9jb2xhdGU6IDB4ZDI2OTFlLFxuICBjb3JhbDogMHhmZjdmNTAsXG4gIGNvcm5mbG93ZXJibHVlOiAweDY0OTVlZCxcbiAgY29ybnNpbGs6IDB4ZmZmOGRjLFxuICBjcmltc29uOiAweGRjMTQzYyxcbiAgY3lhbjogMHgwMGZmZmYsXG4gIGRhcmtibHVlOiAweDAwMDA4YixcbiAgZGFya2N5YW46IDB4MDA4YjhiLFxuICBkYXJrZ29sZGVucm9kOiAweGI4ODYwYixcbiAgZGFya2dyYXk6IDB4YTlhOWE5LFxuICBkYXJrZ3JlZW46IDB4MDA2NDAwLFxuICBkYXJrZ3JleTogMHhhOWE5YTksXG4gIGRhcmtraGFraTogMHhiZGI3NmIsXG4gIGRhcmttYWdlbnRhOiAweDhiMDA4YixcbiAgZGFya29saXZlZ3JlZW46IDB4NTU2YjJmLFxuICBkYXJrb3JhbmdlOiAweGZmOGMwMCxcbiAgZGFya29yY2hpZDogMHg5OTMyY2MsXG4gIGRhcmtyZWQ6IDB4OGIwMDAwLFxuICBkYXJrc2FsbW9uOiAweGU5OTY3YSxcbiAgZGFya3NlYWdyZWVuOiAweDhmYmM4ZixcbiAgZGFya3NsYXRlYmx1ZTogMHg0ODNkOGIsXG4gIGRhcmtzbGF0ZWdyYXk6IDB4MmY0ZjRmLFxuICBkYXJrc2xhdGVncmV5OiAweDJmNGY0ZixcbiAgZGFya3R1cnF1b2lzZTogMHgwMGNlZDEsXG4gIGRhcmt2aW9sZXQ6IDB4OTQwMGQzLFxuICBkZWVwcGluazogMHhmZjE0OTMsXG4gIGRlZXBza3libHVlOiAweDAwYmZmZixcbiAgZGltZ3JheTogMHg2OTY5NjksXG4gIGRpbWdyZXk6IDB4Njk2OTY5LFxuICBkb2RnZXJibHVlOiAweDFlOTBmZixcbiAgZmlyZWJyaWNrOiAweGIyMjIyMixcbiAgZmxvcmFsd2hpdGU6IDB4ZmZmYWYwLFxuICBmb3Jlc3RncmVlbjogMHgyMjhiMjIsXG4gIGZ1Y2hzaWE6IDB4ZmYwMGZmLFxuICBnYWluc2Jvcm86IDB4ZGNkY2RjLFxuICBnaG9zdHdoaXRlOiAweGY4ZjhmZixcbiAgZ29sZDogMHhmZmQ3MDAsXG4gIGdvbGRlbnJvZDogMHhkYWE1MjAsXG4gIGdyYXk6IDB4ODA4MDgwLFxuICBncmVlbjogMHgwMDgwMDAsXG4gIGdyZWVueWVsbG93OiAweGFkZmYyZixcbiAgZ3JleTogMHg4MDgwODAsXG4gIGhvbmV5ZGV3OiAweGYwZmZmMCxcbiAgaG90cGluazogMHhmZjY5YjQsXG4gIGluZGlhbnJlZDogMHhjZDVjNWMsXG4gIGluZGlnbzogMHg0YjAwODIsXG4gIGl2b3J5OiAweGZmZmZmMCxcbiAga2hha2k6IDB4ZjBlNjhjLFxuICBsYXZlbmRlcjogMHhlNmU2ZmEsXG4gIGxhdmVuZGVyYmx1c2g6IDB4ZmZmMGY1LFxuICBsYXduZ3JlZW46IDB4N2NmYzAwLFxuICBsZW1vbmNoaWZmb246IDB4ZmZmYWNkLFxuICBsaWdodGJsdWU6IDB4YWRkOGU2LFxuICBsaWdodGNvcmFsOiAweGYwODA4MCxcbiAgbGlnaHRjeWFuOiAweGUwZmZmZixcbiAgbGlnaHRnb2xkZW5yb2R5ZWxsb3c6IDB4ZmFmYWQyLFxuICBsaWdodGdyYXk6IDB4ZDNkM2QzLFxuICBsaWdodGdyZWVuOiAweDkwZWU5MCxcbiAgbGlnaHRncmV5OiAweGQzZDNkMyxcbiAgbGlnaHRwaW5rOiAweGZmYjZjMSxcbiAgbGlnaHRzYWxtb246IDB4ZmZhMDdhLFxuICBsaWdodHNlYWdyZWVuOiAweDIwYjJhYSxcbiAgbGlnaHRza3libHVlOiAweDg3Y2VmYSxcbiAgbGlnaHRzbGF0ZWdyYXk6IDB4Nzc4ODk5LFxuICBsaWdodHNsYXRlZ3JleTogMHg3Nzg4OTksXG4gIGxpZ2h0c3RlZWxibHVlOiAweGIwYzRkZSxcbiAgbGlnaHR5ZWxsb3c6IDB4ZmZmZmUwLFxuICBsaW1lOiAweDAwZmYwMCxcbiAgbGltZWdyZWVuOiAweDMyY2QzMixcbiAgbGluZW46IDB4ZmFmMGU2LFxuICBtYWdlbnRhOiAweGZmMDBmZixcbiAgbWFyb29uOiAweDgwMDAwMCxcbiAgbWVkaXVtYXF1YW1hcmluZTogMHg2NmNkYWEsXG4gIG1lZGl1bWJsdWU6IDB4MDAwMGNkLFxuICBtZWRpdW1vcmNoaWQ6IDB4YmE1NWQzLFxuICBtZWRpdW1wdXJwbGU6IDB4OTM3MGRiLFxuICBtZWRpdW1zZWFncmVlbjogMHgzY2IzNzEsXG4gIG1lZGl1bXNsYXRlYmx1ZTogMHg3YjY4ZWUsXG4gIG1lZGl1bXNwcmluZ2dyZWVuOiAweDAwZmE5YSxcbiAgbWVkaXVtdHVycXVvaXNlOiAweDQ4ZDFjYyxcbiAgbWVkaXVtdmlvbGV0cmVkOiAweGM3MTU4NSxcbiAgbWlkbmlnaHRibHVlOiAweDE5MTk3MCxcbiAgbWludGNyZWFtOiAweGY1ZmZmYSxcbiAgbWlzdHlyb3NlOiAweGZmZTRlMSxcbiAgbW9jY2FzaW46IDB4ZmZlNGI1LFxuICBuYXZham93aGl0ZTogMHhmZmRlYWQsXG4gIG5hdnk6IDB4MDAwMDgwLFxuICBvbGRsYWNlOiAweGZkZjVlNixcbiAgb2xpdmU6IDB4ODA4MDAwLFxuICBvbGl2ZWRyYWI6IDB4NmI4ZTIzLFxuICBvcmFuZ2U6IDB4ZmZhNTAwLFxuICBvcmFuZ2VyZWQ6IDB4ZmY0NTAwLFxuICBvcmNoaWQ6IDB4ZGE3MGQ2LFxuICBwYWxlZ29sZGVucm9kOiAweGVlZThhYSxcbiAgcGFsZWdyZWVuOiAweDk4ZmI5OCxcbiAgcGFsZXR1cnF1b2lzZTogMHhhZmVlZWUsXG4gIHBhbGV2aW9sZXRyZWQ6IDB4ZGI3MDkzLFxuICBwYXBheWF3aGlwOiAweGZmZWZkNSxcbiAgcGVhY2hwdWZmOiAweGZmZGFiOSxcbiAgcGVydTogMHhjZDg1M2YsXG4gIHBpbms6IDB4ZmZjMGNiLFxuICBwbHVtOiAweGRkYTBkZCxcbiAgcG93ZGVyYmx1ZTogMHhiMGUwZTYsXG4gIHB1cnBsZTogMHg4MDAwODAsXG4gIHJlYmVjY2FwdXJwbGU6IDB4NjYzMzk5LFxuICByZWQ6IDB4ZmYwMDAwLFxuICByb3N5YnJvd246IDB4YmM4ZjhmLFxuICByb3lhbGJsdWU6IDB4NDE2OWUxLFxuICBzYWRkbGVicm93bjogMHg4YjQ1MTMsXG4gIHNhbG1vbjogMHhmYTgwNzIsXG4gIHNhbmR5YnJvd246IDB4ZjRhNDYwLFxuICBzZWFncmVlbjogMHgyZThiNTcsXG4gIHNlYXNoZWxsOiAweGZmZjVlZSxcbiAgc2llbm5hOiAweGEwNTIyZCxcbiAgc2lsdmVyOiAweGMwYzBjMCxcbiAgc2t5Ymx1ZTogMHg4N2NlZWIsXG4gIHNsYXRlYmx1ZTogMHg2YTVhY2QsXG4gIHNsYXRlZ3JheTogMHg3MDgwOTAsXG4gIHNsYXRlZ3JleTogMHg3MDgwOTAsXG4gIHNub3c6IDB4ZmZmYWZhLFxuICBzcHJpbmdncmVlbjogMHgwMGZmN2YsXG4gIHN0ZWVsYmx1ZTogMHg0NjgyYjQsXG4gIHRhbjogMHhkMmI0OGMsXG4gIHRlYWw6IDB4MDA4MDgwLFxuICB0aGlzdGxlOiAweGQ4YmZkOCxcbiAgdG9tYXRvOiAweGZmNjM0NyxcbiAgdHVycXVvaXNlOiAweDQwZTBkMCxcbiAgdmlvbGV0OiAweGVlODJlZSxcbiAgd2hlYXQ6IDB4ZjVkZWIzLFxuICB3aGl0ZTogMHhmZmZmZmYsXG4gIHdoaXRlc21va2U6IDB4ZjVmNWY1LFxuICB5ZWxsb3c6IDB4ZmZmZjAwLFxuICB5ZWxsb3dncmVlbjogMHg5YWNkMzJcbn07XG5cbmRlZmluZShDb2xvciwgY29sb3IsIHtcbiAgZGlzcGxheWFibGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnJnYigpLmRpc3BsYXlhYmxlKCk7XG4gIH0sXG4gIGhleDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMucmdiKCkuaGV4KCk7XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5yZ2IoKSArIFwiXCI7XG4gIH1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb2xvcihmb3JtYXQpIHtcbiAgdmFyIG07XG4gIGZvcm1hdCA9IChmb3JtYXQgKyBcIlwiKS50cmltKCkudG9Mb3dlckNhc2UoKTtcbiAgcmV0dXJuIChtID0gcmVIZXgzLmV4ZWMoZm9ybWF0KSkgPyAobSA9IHBhcnNlSW50KG1bMV0sIDE2KSwgbmV3IFJnYigobSA+PiA4ICYgMHhmKSB8IChtID4+IDQgJiAweDBmMCksIChtID4+IDQgJiAweGYpIHwgKG0gJiAweGYwKSwgKChtICYgMHhmKSA8PCA0KSB8IChtICYgMHhmKSwgMSkpIC8vICNmMDBcbiAgICAgIDogKG0gPSByZUhleDYuZXhlYyhmb3JtYXQpKSA/IHJnYm4ocGFyc2VJbnQobVsxXSwgMTYpKSAvLyAjZmYwMDAwXG4gICAgICA6IChtID0gcmVSZ2JJbnRlZ2VyLmV4ZWMoZm9ybWF0KSkgPyBuZXcgUmdiKG1bMV0sIG1bMl0sIG1bM10sIDEpIC8vIHJnYigyNTUsIDAsIDApXG4gICAgICA6IChtID0gcmVSZ2JQZXJjZW50LmV4ZWMoZm9ybWF0KSkgPyBuZXcgUmdiKG1bMV0gKiAyNTUgLyAxMDAsIG1bMl0gKiAyNTUgLyAxMDAsIG1bM10gKiAyNTUgLyAxMDAsIDEpIC8vIHJnYigxMDAlLCAwJSwgMCUpXG4gICAgICA6IChtID0gcmVSZ2JhSW50ZWdlci5leGVjKGZvcm1hdCkpID8gcmdiYShtWzFdLCBtWzJdLCBtWzNdLCBtWzRdKSAvLyByZ2JhKDI1NSwgMCwgMCwgMSlcbiAgICAgIDogKG0gPSByZVJnYmFQZXJjZW50LmV4ZWMoZm9ybWF0KSkgPyByZ2JhKG1bMV0gKiAyNTUgLyAxMDAsIG1bMl0gKiAyNTUgLyAxMDAsIG1bM10gKiAyNTUgLyAxMDAsIG1bNF0pIC8vIHJnYigxMDAlLCAwJSwgMCUsIDEpXG4gICAgICA6IChtID0gcmVIc2xQZXJjZW50LmV4ZWMoZm9ybWF0KSkgPyBoc2xhKG1bMV0sIG1bMl0gLyAxMDAsIG1bM10gLyAxMDAsIDEpIC8vIGhzbCgxMjAsIDUwJSwgNTAlKVxuICAgICAgOiAobSA9IHJlSHNsYVBlcmNlbnQuZXhlYyhmb3JtYXQpKSA/IGhzbGEobVsxXSwgbVsyXSAvIDEwMCwgbVszXSAvIDEwMCwgbVs0XSkgLy8gaHNsYSgxMjAsIDUwJSwgNTAlLCAxKVxuICAgICAgOiBuYW1lZC5oYXNPd25Qcm9wZXJ0eShmb3JtYXQpID8gcmdibihuYW1lZFtmb3JtYXRdKVxuICAgICAgOiBmb3JtYXQgPT09IFwidHJhbnNwYXJlbnRcIiA/IG5ldyBSZ2IoTmFOLCBOYU4sIE5hTiwgMClcbiAgICAgIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gcmdibihuKSB7XG4gIHJldHVybiBuZXcgUmdiKG4gPj4gMTYgJiAweGZmLCBuID4+IDggJiAweGZmLCBuICYgMHhmZiwgMSk7XG59XG5cbmZ1bmN0aW9uIHJnYmEociwgZywgYiwgYSkge1xuICBpZiAoYSA8PSAwKSByID0gZyA9IGIgPSBOYU47XG4gIHJldHVybiBuZXcgUmdiKHIsIGcsIGIsIGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmdiQ29udmVydChvKSB7XG4gIGlmICghKG8gaW5zdGFuY2VvZiBDb2xvcikpIG8gPSBjb2xvcihvKTtcbiAgaWYgKCFvKSByZXR1cm4gbmV3IFJnYjtcbiAgbyA9IG8ucmdiKCk7XG4gIHJldHVybiBuZXcgUmdiKG8uciwgby5nLCBvLmIsIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZ2IociwgZywgYiwgb3BhY2l0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IHJnYkNvbnZlcnQocikgOiBuZXcgUmdiKHIsIGcsIGIsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFJnYihyLCBnLCBiLCBvcGFjaXR5KSB7XG4gIHRoaXMuciA9ICtyO1xuICB0aGlzLmcgPSArZztcbiAgdGhpcy5iID0gK2I7XG4gIHRoaXMub3BhY2l0eSA9ICtvcGFjaXR5O1xufVxuXG5kZWZpbmUoUmdiLCByZ2IsIGV4dGVuZChDb2xvciwge1xuICBicmlnaHRlcjogZnVuY3Rpb24oaykge1xuICAgIGsgPSBrID09IG51bGwgPyBicmlnaHRlciA6IE1hdGgucG93KGJyaWdodGVyLCBrKTtcbiAgICByZXR1cm4gbmV3IFJnYih0aGlzLnIgKiBrLCB0aGlzLmcgKiBrLCB0aGlzLmIgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICBkYXJrZXI6IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gZGFya2VyIDogTWF0aC5wb3coZGFya2VyLCBrKTtcbiAgICByZXR1cm4gbmV3IFJnYih0aGlzLnIgKiBrLCB0aGlzLmcgKiBrLCB0aGlzLmIgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICByZ2I6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxuICBkaXNwbGF5YWJsZTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICgwIDw9IHRoaXMuciAmJiB0aGlzLnIgPD0gMjU1KVxuICAgICAgICAmJiAoMCA8PSB0aGlzLmcgJiYgdGhpcy5nIDw9IDI1NSlcbiAgICAgICAgJiYgKDAgPD0gdGhpcy5iICYmIHRoaXMuYiA8PSAyNTUpXG4gICAgICAgICYmICgwIDw9IHRoaXMub3BhY2l0eSAmJiB0aGlzLm9wYWNpdHkgPD0gMSk7XG4gIH0sXG4gIGhleDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFwiI1wiICsgaGV4KHRoaXMucikgKyBoZXgodGhpcy5nKSArIGhleCh0aGlzLmIpO1xuICB9LFxuICB0b1N0cmluZzogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGEgPSB0aGlzLm9wYWNpdHk7IGEgPSBpc05hTihhKSA/IDEgOiBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCBhKSk7XG4gICAgcmV0dXJuIChhID09PSAxID8gXCJyZ2IoXCIgOiBcInJnYmEoXCIpXG4gICAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKHRoaXMucikgfHwgMCkpICsgXCIsIFwiXG4gICAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKHRoaXMuZykgfHwgMCkpICsgXCIsIFwiXG4gICAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKHRoaXMuYikgfHwgMCkpXG4gICAgICAgICsgKGEgPT09IDEgPyBcIilcIiA6IFwiLCBcIiArIGEgKyBcIilcIik7XG4gIH1cbn0pKTtcblxuZnVuY3Rpb24gaGV4KHZhbHVlKSB7XG4gIHZhbHVlID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKHZhbHVlKSB8fCAwKSk7XG4gIHJldHVybiAodmFsdWUgPCAxNiA/IFwiMFwiIDogXCJcIikgKyB2YWx1ZS50b1N0cmluZygxNik7XG59XG5cbmZ1bmN0aW9uIGhzbGEoaCwgcywgbCwgYSkge1xuICBpZiAoYSA8PSAwKSBoID0gcyA9IGwgPSBOYU47XG4gIGVsc2UgaWYgKGwgPD0gMCB8fCBsID49IDEpIGggPSBzID0gTmFOO1xuICBlbHNlIGlmIChzIDw9IDApIGggPSBOYU47XG4gIHJldHVybiBuZXcgSHNsKGgsIHMsIGwsIGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaHNsQ29udmVydChvKSB7XG4gIGlmIChvIGluc3RhbmNlb2YgSHNsKSByZXR1cm4gbmV3IEhzbChvLmgsIG8ucywgby5sLCBvLm9wYWNpdHkpO1xuICBpZiAoIShvIGluc3RhbmNlb2YgQ29sb3IpKSBvID0gY29sb3Iobyk7XG4gIGlmICghbykgcmV0dXJuIG5ldyBIc2w7XG4gIGlmIChvIGluc3RhbmNlb2YgSHNsKSByZXR1cm4gbztcbiAgbyA9IG8ucmdiKCk7XG4gIHZhciByID0gby5yIC8gMjU1LFxuICAgICAgZyA9IG8uZyAvIDI1NSxcbiAgICAgIGIgPSBvLmIgLyAyNTUsXG4gICAgICBtaW4gPSBNYXRoLm1pbihyLCBnLCBiKSxcbiAgICAgIG1heCA9IE1hdGgubWF4KHIsIGcsIGIpLFxuICAgICAgaCA9IE5hTixcbiAgICAgIHMgPSBtYXggLSBtaW4sXG4gICAgICBsID0gKG1heCArIG1pbikgLyAyO1xuICBpZiAocykge1xuICAgIGlmIChyID09PSBtYXgpIGggPSAoZyAtIGIpIC8gcyArIChnIDwgYikgKiA2O1xuICAgIGVsc2UgaWYgKGcgPT09IG1heCkgaCA9IChiIC0gcikgLyBzICsgMjtcbiAgICBlbHNlIGggPSAociAtIGcpIC8gcyArIDQ7XG4gICAgcyAvPSBsIDwgMC41ID8gbWF4ICsgbWluIDogMiAtIG1heCAtIG1pbjtcbiAgICBoICo9IDYwO1xuICB9IGVsc2Uge1xuICAgIHMgPSBsID4gMCAmJiBsIDwgMSA/IDAgOiBoO1xuICB9XG4gIHJldHVybiBuZXcgSHNsKGgsIHMsIGwsIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoc2woaCwgcywgbCwgb3BhY2l0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IGhzbENvbnZlcnQoaCkgOiBuZXcgSHNsKGgsIHMsIGwsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZnVuY3Rpb24gSHNsKGgsIHMsIGwsIG9wYWNpdHkpIHtcbiAgdGhpcy5oID0gK2g7XG4gIHRoaXMucyA9ICtzO1xuICB0aGlzLmwgPSArbDtcbiAgdGhpcy5vcGFjaXR5ID0gK29wYWNpdHk7XG59XG5cbmRlZmluZShIc2wsIGhzbCwgZXh0ZW5kKENvbG9yLCB7XG4gIGJyaWdodGVyOiBmdW5jdGlvbihrKSB7XG4gICAgayA9IGsgPT0gbnVsbCA/IGJyaWdodGVyIDogTWF0aC5wb3coYnJpZ2h0ZXIsIGspO1xuICAgIHJldHVybiBuZXcgSHNsKHRoaXMuaCwgdGhpcy5zLCB0aGlzLmwgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICBkYXJrZXI6IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gZGFya2VyIDogTWF0aC5wb3coZGFya2VyLCBrKTtcbiAgICByZXR1cm4gbmV3IEhzbCh0aGlzLmgsIHRoaXMucywgdGhpcy5sICogaywgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgcmdiOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgaCA9IHRoaXMuaCAlIDM2MCArICh0aGlzLmggPCAwKSAqIDM2MCxcbiAgICAgICAgcyA9IGlzTmFOKGgpIHx8IGlzTmFOKHRoaXMucykgPyAwIDogdGhpcy5zLFxuICAgICAgICBsID0gdGhpcy5sLFxuICAgICAgICBtMiA9IGwgKyAobCA8IDAuNSA/IGwgOiAxIC0gbCkgKiBzLFxuICAgICAgICBtMSA9IDIgKiBsIC0gbTI7XG4gICAgcmV0dXJuIG5ldyBSZ2IoXG4gICAgICBoc2wycmdiKGggPj0gMjQwID8gaCAtIDI0MCA6IGggKyAxMjAsIG0xLCBtMiksXG4gICAgICBoc2wycmdiKGgsIG0xLCBtMiksXG4gICAgICBoc2wycmdiKGggPCAxMjAgPyBoICsgMjQwIDogaCAtIDEyMCwgbTEsIG0yKSxcbiAgICAgIHRoaXMub3BhY2l0eVxuICAgICk7XG4gIH0sXG4gIGRpc3BsYXlhYmxlOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gKDAgPD0gdGhpcy5zICYmIHRoaXMucyA8PSAxIHx8IGlzTmFOKHRoaXMucykpXG4gICAgICAgICYmICgwIDw9IHRoaXMubCAmJiB0aGlzLmwgPD0gMSlcbiAgICAgICAgJiYgKDAgPD0gdGhpcy5vcGFjaXR5ICYmIHRoaXMub3BhY2l0eSA8PSAxKTtcbiAgfVxufSkpO1xuXG4vKiBGcm9tIEZ2RCAxMy4zNywgQ1NTIENvbG9yIE1vZHVsZSBMZXZlbCAzICovXG5mdW5jdGlvbiBoc2wycmdiKGgsIG0xLCBtMikge1xuICByZXR1cm4gKGggPCA2MCA/IG0xICsgKG0yIC0gbTEpICogaCAvIDYwXG4gICAgICA6IGggPCAxODAgPyBtMlxuICAgICAgOiBoIDwgMjQwID8gbTEgKyAobTIgLSBtMSkgKiAoMjQwIC0gaCkgLyA2MFxuICAgICAgOiBtMSkgKiAyNTU7XG59XG4iLCJpbXBvcnQgZGVmaW5lLCB7ZXh0ZW5kfSBmcm9tIFwiLi9kZWZpbmVcIjtcbmltcG9ydCB7Q29sb3IsIHJnYkNvbnZlcnQsIFJnYiwgZGFya2VyLCBicmlnaHRlcn0gZnJvbSBcIi4vY29sb3JcIjtcbmltcG9ydCB7ZGVnMnJhZCwgcmFkMmRlZ30gZnJvbSBcIi4vbWF0aFwiO1xuXG52YXIgQSA9IC0wLjE0ODYxLFxuICAgIEIgPSArMS43ODI3NyxcbiAgICBDID0gLTAuMjkyMjcsXG4gICAgRCA9IC0wLjkwNjQ5LFxuICAgIEUgPSArMS45NzI5NCxcbiAgICBFRCA9IEUgKiBELFxuICAgIEVCID0gRSAqIEIsXG4gICAgQkNfREEgPSBCICogQyAtIEQgKiBBO1xuXG5mdW5jdGlvbiBjdWJlaGVsaXhDb252ZXJ0KG8pIHtcbiAgaWYgKG8gaW5zdGFuY2VvZiBDdWJlaGVsaXgpIHJldHVybiBuZXcgQ3ViZWhlbGl4KG8uaCwgby5zLCBvLmwsIG8ub3BhY2l0eSk7XG4gIGlmICghKG8gaW5zdGFuY2VvZiBSZ2IpKSBvID0gcmdiQ29udmVydChvKTtcbiAgdmFyIHIgPSBvLnIgLyAyNTUsXG4gICAgICBnID0gby5nIC8gMjU1LFxuICAgICAgYiA9IG8uYiAvIDI1NSxcbiAgICAgIGwgPSAoQkNfREEgKiBiICsgRUQgKiByIC0gRUIgKiBnKSAvIChCQ19EQSArIEVEIC0gRUIpLFxuICAgICAgYmwgPSBiIC0gbCxcbiAgICAgIGsgPSAoRSAqIChnIC0gbCkgLSBDICogYmwpIC8gRCxcbiAgICAgIHMgPSBNYXRoLnNxcnQoayAqIGsgKyBibCAqIGJsKSAvIChFICogbCAqICgxIC0gbCkpLCAvLyBOYU4gaWYgbD0wIG9yIGw9MVxuICAgICAgaCA9IHMgPyBNYXRoLmF0YW4yKGssIGJsKSAqIHJhZDJkZWcgLSAxMjAgOiBOYU47XG4gIHJldHVybiBuZXcgQ3ViZWhlbGl4KGggPCAwID8gaCArIDM2MCA6IGgsIHMsIGwsIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGN1YmVoZWxpeChoLCBzLCBsLCBvcGFjaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gY3ViZWhlbGl4Q29udmVydChoKSA6IG5ldyBDdWJlaGVsaXgoaCwgcywgbCwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQ3ViZWhlbGl4KGgsIHMsIGwsIG9wYWNpdHkpIHtcbiAgdGhpcy5oID0gK2g7XG4gIHRoaXMucyA9ICtzO1xuICB0aGlzLmwgPSArbDtcbiAgdGhpcy5vcGFjaXR5ID0gK29wYWNpdHk7XG59XG5cbmRlZmluZShDdWJlaGVsaXgsIGN1YmVoZWxpeCwgZXh0ZW5kKENvbG9yLCB7XG4gIGJyaWdodGVyOiBmdW5jdGlvbihrKSB7XG4gICAgayA9IGsgPT0gbnVsbCA/IGJyaWdodGVyIDogTWF0aC5wb3coYnJpZ2h0ZXIsIGspO1xuICAgIHJldHVybiBuZXcgQ3ViZWhlbGl4KHRoaXMuaCwgdGhpcy5zLCB0aGlzLmwgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICBkYXJrZXI6IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gZGFya2VyIDogTWF0aC5wb3coZGFya2VyLCBrKTtcbiAgICByZXR1cm4gbmV3IEN1YmVoZWxpeCh0aGlzLmgsIHRoaXMucywgdGhpcy5sICogaywgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgcmdiOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgaCA9IGlzTmFOKHRoaXMuaCkgPyAwIDogKHRoaXMuaCArIDEyMCkgKiBkZWcycmFkLFxuICAgICAgICBsID0gK3RoaXMubCxcbiAgICAgICAgYSA9IGlzTmFOKHRoaXMucykgPyAwIDogdGhpcy5zICogbCAqICgxIC0gbCksXG4gICAgICAgIGNvc2ggPSBNYXRoLmNvcyhoKSxcbiAgICAgICAgc2luaCA9IE1hdGguc2luKGgpO1xuICAgIHJldHVybiBuZXcgUmdiKFxuICAgICAgMjU1ICogKGwgKyBhICogKEEgKiBjb3NoICsgQiAqIHNpbmgpKSxcbiAgICAgIDI1NSAqIChsICsgYSAqIChDICogY29zaCArIEQgKiBzaW5oKSksXG4gICAgICAyNTUgKiAobCArIGEgKiAoRSAqIGNvc2gpKSxcbiAgICAgIHRoaXMub3BhY2l0eVxuICAgICk7XG4gIH1cbn0pKTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnN0cnVjdG9yLCBmYWN0b3J5LCBwcm90b3R5cGUpIHtcbiAgY29uc3RydWN0b3IucHJvdG90eXBlID0gZmFjdG9yeS5wcm90b3R5cGUgPSBwcm90b3R5cGU7XG4gIHByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGNvbnN0cnVjdG9yO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXh0ZW5kKHBhcmVudCwgZGVmaW5pdGlvbikge1xuICB2YXIgcHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShwYXJlbnQucHJvdG90eXBlKTtcbiAgZm9yICh2YXIga2V5IGluIGRlZmluaXRpb24pIHByb3RvdHlwZVtrZXldID0gZGVmaW5pdGlvbltrZXldO1xuICByZXR1cm4gcHJvdG90eXBlO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGNvbG9yLCByZ2IsIGhzbH0gZnJvbSBcIi4vY29sb3JcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBsYWIsIGhjbCwgbGNoLCBncmF5fSBmcm9tIFwiLi9sYWJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdWJlaGVsaXh9IGZyb20gXCIuL2N1YmVoZWxpeFwiO1xuIiwiaW1wb3J0IGRlZmluZSwge2V4dGVuZH0gZnJvbSBcIi4vZGVmaW5lXCI7XG5pbXBvcnQge0NvbG9yLCByZ2JDb252ZXJ0LCBSZ2J9IGZyb20gXCIuL2NvbG9yXCI7XG5pbXBvcnQge2RlZzJyYWQsIHJhZDJkZWd9IGZyb20gXCIuL21hdGhcIjtcblxuLy8gaHR0cHM6Ly9iZXRhLm9ic2VydmFibGVocS5jb20vQG1ib3N0b2NrL2xhYi1hbmQtcmdiXG52YXIgSyA9IDE4LFxuICAgIFhuID0gMC45NjQyMixcbiAgICBZbiA9IDEsXG4gICAgWm4gPSAwLjgyNTIxLFxuICAgIHQwID0gNCAvIDI5LFxuICAgIHQxID0gNiAvIDI5LFxuICAgIHQyID0gMyAqIHQxICogdDEsXG4gICAgdDMgPSB0MSAqIHQxICogdDE7XG5cbmZ1bmN0aW9uIGxhYkNvbnZlcnQobykge1xuICBpZiAobyBpbnN0YW5jZW9mIExhYikgcmV0dXJuIG5ldyBMYWIoby5sLCBvLmEsIG8uYiwgby5vcGFjaXR5KTtcbiAgaWYgKG8gaW5zdGFuY2VvZiBIY2wpIHtcbiAgICBpZiAoaXNOYU4oby5oKSkgcmV0dXJuIG5ldyBMYWIoby5sLCAwLCAwLCBvLm9wYWNpdHkpO1xuICAgIHZhciBoID0gby5oICogZGVnMnJhZDtcbiAgICByZXR1cm4gbmV3IExhYihvLmwsIE1hdGguY29zKGgpICogby5jLCBNYXRoLnNpbihoKSAqIG8uYywgby5vcGFjaXR5KTtcbiAgfVxuICBpZiAoIShvIGluc3RhbmNlb2YgUmdiKSkgbyA9IHJnYkNvbnZlcnQobyk7XG4gIHZhciByID0gcmdiMmxyZ2Ioby5yKSxcbiAgICAgIGcgPSByZ2IybHJnYihvLmcpLFxuICAgICAgYiA9IHJnYjJscmdiKG8uYiksXG4gICAgICB5ID0geHl6MmxhYigoMC4yMjI1MDQ1ICogciArIDAuNzE2ODc4NiAqIGcgKyAwLjA2MDYxNjkgKiBiKSAvIFluKSwgeCwgejtcbiAgaWYgKHIgPT09IGcgJiYgZyA9PT0gYikgeCA9IHogPSB5OyBlbHNlIHtcbiAgICB4ID0geHl6MmxhYigoMC40MzYwNzQ3ICogciArIDAuMzg1MDY0OSAqIGcgKyAwLjE0MzA4MDQgKiBiKSAvIFhuKTtcbiAgICB6ID0geHl6MmxhYigoMC4wMTM5MzIyICogciArIDAuMDk3MTA0NSAqIGcgKyAwLjcxNDE3MzMgKiBiKSAvIFpuKTtcbiAgfVxuICByZXR1cm4gbmV3IExhYigxMTYgKiB5IC0gMTYsIDUwMCAqICh4IC0geSksIDIwMCAqICh5IC0geiksIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBncmF5KGwsIG9wYWNpdHkpIHtcbiAgcmV0dXJuIG5ldyBMYWIobCwgMCwgMCwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsYWIobCwgYSwgYiwgb3BhY2l0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IGxhYkNvbnZlcnQobCkgOiBuZXcgTGFiKGwsIGEsIGIsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIExhYihsLCBhLCBiLCBvcGFjaXR5KSB7XG4gIHRoaXMubCA9ICtsO1xuICB0aGlzLmEgPSArYTtcbiAgdGhpcy5iID0gK2I7XG4gIHRoaXMub3BhY2l0eSA9ICtvcGFjaXR5O1xufVxuXG5kZWZpbmUoTGFiLCBsYWIsIGV4dGVuZChDb2xvciwge1xuICBicmlnaHRlcjogZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBuZXcgTGFiKHRoaXMubCArIEsgKiAoayA9PSBudWxsID8gMSA6IGspLCB0aGlzLmEsIHRoaXMuYiwgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgZGFya2VyOiBmdW5jdGlvbihrKSB7XG4gICAgcmV0dXJuIG5ldyBMYWIodGhpcy5sIC0gSyAqIChrID09IG51bGwgPyAxIDogayksIHRoaXMuYSwgdGhpcy5iLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICByZ2I6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB5ID0gKHRoaXMubCArIDE2KSAvIDExNixcbiAgICAgICAgeCA9IGlzTmFOKHRoaXMuYSkgPyB5IDogeSArIHRoaXMuYSAvIDUwMCxcbiAgICAgICAgeiA9IGlzTmFOKHRoaXMuYikgPyB5IDogeSAtIHRoaXMuYiAvIDIwMDtcbiAgICB4ID0gWG4gKiBsYWIyeHl6KHgpO1xuICAgIHkgPSBZbiAqIGxhYjJ4eXooeSk7XG4gICAgeiA9IFpuICogbGFiMnh5eih6KTtcbiAgICByZXR1cm4gbmV3IFJnYihcbiAgICAgIGxyZ2IycmdiKCAzLjEzMzg1NjEgKiB4IC0gMS42MTY4NjY3ICogeSAtIDAuNDkwNjE0NiAqIHopLFxuICAgICAgbHJnYjJyZ2IoLTAuOTc4NzY4NCAqIHggKyAxLjkxNjE0MTUgKiB5ICsgMC4wMzM0NTQwICogeiksXG4gICAgICBscmdiMnJnYiggMC4wNzE5NDUzICogeCAtIDAuMjI4OTkxNCAqIHkgKyAxLjQwNTI0MjcgKiB6KSxcbiAgICAgIHRoaXMub3BhY2l0eVxuICAgICk7XG4gIH1cbn0pKTtcblxuZnVuY3Rpb24geHl6MmxhYih0KSB7XG4gIHJldHVybiB0ID4gdDMgPyBNYXRoLnBvdyh0LCAxIC8gMykgOiB0IC8gdDIgKyB0MDtcbn1cblxuZnVuY3Rpb24gbGFiMnh5eih0KSB7XG4gIHJldHVybiB0ID4gdDEgPyB0ICogdCAqIHQgOiB0MiAqICh0IC0gdDApO1xufVxuXG5mdW5jdGlvbiBscmdiMnJnYih4KSB7XG4gIHJldHVybiAyNTUgKiAoeCA8PSAwLjAwMzEzMDggPyAxMi45MiAqIHggOiAxLjA1NSAqIE1hdGgucG93KHgsIDEgLyAyLjQpIC0gMC4wNTUpO1xufVxuXG5mdW5jdGlvbiByZ2IybHJnYih4KSB7XG4gIHJldHVybiAoeCAvPSAyNTUpIDw9IDAuMDQwNDUgPyB4IC8gMTIuOTIgOiBNYXRoLnBvdygoeCArIDAuMDU1KSAvIDEuMDU1LCAyLjQpO1xufVxuXG5mdW5jdGlvbiBoY2xDb252ZXJ0KG8pIHtcbiAgaWYgKG8gaW5zdGFuY2VvZiBIY2wpIHJldHVybiBuZXcgSGNsKG8uaCwgby5jLCBvLmwsIG8ub3BhY2l0eSk7XG4gIGlmICghKG8gaW5zdGFuY2VvZiBMYWIpKSBvID0gbGFiQ29udmVydChvKTtcbiAgaWYgKG8uYSA9PT0gMCAmJiBvLmIgPT09IDApIHJldHVybiBuZXcgSGNsKE5hTiwgMCwgby5sLCBvLm9wYWNpdHkpO1xuICB2YXIgaCA9IE1hdGguYXRhbjIoby5iLCBvLmEpICogcmFkMmRlZztcbiAgcmV0dXJuIG5ldyBIY2woaCA8IDAgPyBoICsgMzYwIDogaCwgTWF0aC5zcXJ0KG8uYSAqIG8uYSArIG8uYiAqIG8uYiksIG8ubCwgby5vcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxjaChsLCBjLCBoLCBvcGFjaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gaGNsQ29udmVydChsKSA6IG5ldyBIY2woaCwgYywgbCwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGNsKGgsIGMsIGwsIG9wYWNpdHkpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgPyBoY2xDb252ZXJ0KGgpIDogbmV3IEhjbChoLCBjLCBsLCBvcGFjaXR5ID09IG51bGwgPyAxIDogb3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBIY2woaCwgYywgbCwgb3BhY2l0eSkge1xuICB0aGlzLmggPSAraDtcbiAgdGhpcy5jID0gK2M7XG4gIHRoaXMubCA9ICtsO1xuICB0aGlzLm9wYWNpdHkgPSArb3BhY2l0eTtcbn1cblxuZGVmaW5lKEhjbCwgaGNsLCBleHRlbmQoQ29sb3IsIHtcbiAgYnJpZ2h0ZXI6IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gbmV3IEhjbCh0aGlzLmgsIHRoaXMuYywgdGhpcy5sICsgSyAqIChrID09IG51bGwgPyAxIDogayksIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIGRhcmtlcjogZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBuZXcgSGNsKHRoaXMuaCwgdGhpcy5jLCB0aGlzLmwgLSBLICogKGsgPT0gbnVsbCA/IDEgOiBrKSwgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgcmdiOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gbGFiQ29udmVydCh0aGlzKS5yZ2IoKTtcbiAgfVxufSkpO1xuIiwiZXhwb3J0IHZhciBkZWcycmFkID0gTWF0aC5QSSAvIDE4MDtcbmV4cG9ydCB2YXIgcmFkMmRlZyA9IDE4MCAvIE1hdGguUEk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihyaW5nKSB7XG4gIHZhciBpID0gMCwgbiA9IHJpbmcubGVuZ3RoLCBhcmVhID0gcmluZ1tuIC0gMV1bMV0gKiByaW5nWzBdWzBdIC0gcmluZ1tuIC0gMV1bMF0gKiByaW5nWzBdWzFdO1xuICB3aGlsZSAoKytpIDwgbikgYXJlYSArPSByaW5nW2kgLSAxXVsxXSAqIHJpbmdbaV1bMF0gLSByaW5nW2kgLSAxXVswXSAqIHJpbmdbaV1bMV07XG4gIHJldHVybiBhcmVhO1xufVxuIiwidmFyIGFycmF5ID0gQXJyYXkucHJvdG90eXBlO1xuXG5leHBvcnQgdmFyIHNsaWNlID0gYXJyYXkuc2xpY2U7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBhIC0gYjtcbn1cbiIsIi8vIFRPRE8gT3B0aW1pemUgZWRnZSBjYXNlcy5cbi8vIFRPRE8gT3B0aW1pemUgaW5kZXggY2FsY3VsYXRpb24uXG4vLyBUT0RPIE9wdGltaXplIGFyZ3VtZW50cy5cbmV4cG9ydCBmdW5jdGlvbiBibHVyWChzb3VyY2UsIHRhcmdldCwgcikge1xuICB2YXIgbiA9IHNvdXJjZS53aWR0aCxcbiAgICAgIG0gPSBzb3VyY2UuaGVpZ2h0LFxuICAgICAgdyA9IChyIDw8IDEpICsgMTtcbiAgZm9yICh2YXIgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBpID0gMCwgc3IgPSAwOyBpIDwgbiArIHI7ICsraSkge1xuICAgICAgaWYgKGkgPCBuKSB7XG4gICAgICAgIHNyICs9IHNvdXJjZS5kYXRhW2kgKyBqICogbl07XG4gICAgICB9XG4gICAgICBpZiAoaSA+PSByKSB7XG4gICAgICAgIGlmIChpID49IHcpIHtcbiAgICAgICAgICBzciAtPSBzb3VyY2UuZGF0YVtpIC0gdyArIGogKiBuXTtcbiAgICAgICAgfVxuICAgICAgICB0YXJnZXQuZGF0YVtpIC0gciArIGogKiBuXSA9IHNyIC8gTWF0aC5taW4oaSArIDEsIG4gLSAxICsgdyAtIGksIHcpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLyBUT0RPIE9wdGltaXplIGVkZ2UgY2FzZXMuXG4vLyBUT0RPIE9wdGltaXplIGluZGV4IGNhbGN1bGF0aW9uLlxuLy8gVE9ETyBPcHRpbWl6ZSBhcmd1bWVudHMuXG5leHBvcnQgZnVuY3Rpb24gYmx1clkoc291cmNlLCB0YXJnZXQsIHIpIHtcbiAgdmFyIG4gPSBzb3VyY2Uud2lkdGgsXG4gICAgICBtID0gc291cmNlLmhlaWdodCxcbiAgICAgIHcgPSAociA8PCAxKSArIDE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgZm9yICh2YXIgaiA9IDAsIHNyID0gMDsgaiA8IG0gKyByOyArK2opIHtcbiAgICAgIGlmIChqIDwgbSkge1xuICAgICAgICBzciArPSBzb3VyY2UuZGF0YVtpICsgaiAqIG5dO1xuICAgICAgfVxuICAgICAgaWYgKGogPj0gcikge1xuICAgICAgICBpZiAoaiA+PSB3KSB7XG4gICAgICAgICAgc3IgLT0gc291cmNlLmRhdGFbaSArIChqIC0gdykgKiBuXTtcbiAgICAgICAgfVxuICAgICAgICB0YXJnZXQuZGF0YVtpICsgKGogLSByKSAqIG5dID0gc3IgLyBNYXRoLm1pbihqICsgMSwgbSAtIDEgKyB3IC0gaiwgdyk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHJpbmcsIGhvbGUpIHtcbiAgdmFyIGkgPSAtMSwgbiA9IGhvbGUubGVuZ3RoLCBjO1xuICB3aGlsZSAoKytpIDwgbikgaWYgKGMgPSByaW5nQ29udGFpbnMocmluZywgaG9sZVtpXSkpIHJldHVybiBjO1xuICByZXR1cm4gMDtcbn1cblxuZnVuY3Rpb24gcmluZ0NvbnRhaW5zKHJpbmcsIHBvaW50KSB7XG4gIHZhciB4ID0gcG9pbnRbMF0sIHkgPSBwb2ludFsxXSwgY29udGFpbnMgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDAsIG4gPSByaW5nLmxlbmd0aCwgaiA9IG4gLSAxOyBpIDwgbjsgaiA9IGkrKykge1xuICAgIHZhciBwaSA9IHJpbmdbaV0sIHhpID0gcGlbMF0sIHlpID0gcGlbMV0sIHBqID0gcmluZ1tqXSwgeGogPSBwalswXSwgeWogPSBwalsxXTtcbiAgICBpZiAoc2VnbWVudENvbnRhaW5zKHBpLCBwaiwgcG9pbnQpKSByZXR1cm4gMDtcbiAgICBpZiAoKCh5aSA+IHkpICE9PSAoeWogPiB5KSkgJiYgKCh4IDwgKHhqIC0geGkpICogKHkgLSB5aSkgLyAoeWogLSB5aSkgKyB4aSkpKSBjb250YWlucyA9IC1jb250YWlucztcbiAgfVxuICByZXR1cm4gY29udGFpbnM7XG59XG5cbmZ1bmN0aW9uIHNlZ21lbnRDb250YWlucyhhLCBiLCBjKSB7XG4gIHZhciBpOyByZXR1cm4gY29sbGluZWFyKGEsIGIsIGMpICYmIHdpdGhpbihhW2kgPSArKGFbMF0gPT09IGJbMF0pXSwgY1tpXSwgYltpXSk7XG59XG5cbmZ1bmN0aW9uIGNvbGxpbmVhcihhLCBiLCBjKSB7XG4gIHJldHVybiAoYlswXSAtIGFbMF0pICogKGNbMV0gLSBhWzFdKSA9PT0gKGNbMF0gLSBhWzBdKSAqIChiWzFdIC0gYVsxXSk7XG59XG5cbmZ1bmN0aW9uIHdpdGhpbihwLCBxLCByKSB7XG4gIHJldHVybiBwIDw9IHEgJiYgcSA8PSByIHx8IHIgPD0gcSAmJiBxIDw9IHA7XG59XG4iLCJpbXBvcnQge2V4dGVudCwgdGhyZXNob2xkU3R1cmdlcywgdGlja1N0ZXAsIHJhbmdlfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7c2xpY2V9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQgYXNjZW5kaW5nIGZyb20gXCIuL2FzY2VuZGluZ1wiO1xuaW1wb3J0IGFyZWEgZnJvbSBcIi4vYXJlYVwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQgY29udGFpbnMgZnJvbSBcIi4vY29udGFpbnNcIjtcbmltcG9ydCBub29wIGZyb20gXCIuL25vb3BcIjtcblxudmFyIGNhc2VzID0gW1xuICBbXSxcbiAgW1tbMS4wLCAxLjVdLCBbMC41LCAxLjBdXV0sXG4gIFtbWzEuNSwgMS4wXSwgWzEuMCwgMS41XV1dLFxuICBbW1sxLjUsIDEuMF0sIFswLjUsIDEuMF1dXSxcbiAgW1tbMS4wLCAwLjVdLCBbMS41LCAxLjBdXV0sXG4gIFtbWzEuMCwgMS41XSwgWzAuNSwgMS4wXV0sIFtbMS4wLCAwLjVdLCBbMS41LCAxLjBdXV0sXG4gIFtbWzEuMCwgMC41XSwgWzEuMCwgMS41XV1dLFxuICBbW1sxLjAsIDAuNV0sIFswLjUsIDEuMF1dXSxcbiAgW1tbMC41LCAxLjBdLCBbMS4wLCAwLjVdXV0sXG4gIFtbWzEuMCwgMS41XSwgWzEuMCwgMC41XV1dLFxuICBbW1swLjUsIDEuMF0sIFsxLjAsIDAuNV1dLCBbWzEuNSwgMS4wXSwgWzEuMCwgMS41XV1dLFxuICBbW1sxLjUsIDEuMF0sIFsxLjAsIDAuNV1dXSxcbiAgW1tbMC41LCAxLjBdLCBbMS41LCAxLjBdXV0sXG4gIFtbWzEuMCwgMS41XSwgWzEuNSwgMS4wXV1dLFxuICBbW1swLjUsIDEuMF0sIFsxLjAsIDEuNV1dXSxcbiAgW11cbl07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgZHggPSAxLFxuICAgICAgZHkgPSAxLFxuICAgICAgdGhyZXNob2xkID0gdGhyZXNob2xkU3R1cmdlcyxcbiAgICAgIHNtb290aCA9IHNtb290aExpbmVhcjtcblxuICBmdW5jdGlvbiBjb250b3Vycyh2YWx1ZXMpIHtcbiAgICB2YXIgdHogPSB0aHJlc2hvbGQodmFsdWVzKTtcblxuICAgIC8vIENvbnZlcnQgbnVtYmVyIG9mIHRocmVzaG9sZHMgaW50byB1bmlmb3JtIHRocmVzaG9sZHMuXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHR6KSkge1xuICAgICAgdmFyIGRvbWFpbiA9IGV4dGVudCh2YWx1ZXMpLCBzdGFydCA9IGRvbWFpblswXSwgc3RvcCA9IGRvbWFpblsxXTtcbiAgICAgIHR6ID0gdGlja1N0ZXAoc3RhcnQsIHN0b3AsIHR6KTtcbiAgICAgIHR6ID0gcmFuZ2UoTWF0aC5mbG9vcihzdGFydCAvIHR6KSAqIHR6LCBNYXRoLmZsb29yKHN0b3AgLyB0eikgKiB0eiwgdHopO1xuICAgIH0gZWxzZSB7XG4gICAgICB0eiA9IHR6LnNsaWNlKCkuc29ydChhc2NlbmRpbmcpO1xuICAgIH1cblxuICAgIHJldHVybiB0ei5tYXAoZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHJldHVybiBjb250b3VyKHZhbHVlcywgdmFsdWUpO1xuICAgIH0pO1xuICB9XG5cbiAgLy8gQWNjdW11bGF0ZSwgc21vb3RoIGNvbnRvdXIgcmluZ3MsIGFzc2lnbiBob2xlcyB0byBleHRlcmlvciByaW5ncy5cbiAgLy8gQmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL21ib3N0b2NrL3NoYXBlZmlsZS9ibG9iL3YwLjYuMi9zaHAvcG9seWdvbi5qc1xuICBmdW5jdGlvbiBjb250b3VyKHZhbHVlcywgdmFsdWUpIHtcbiAgICB2YXIgcG9seWdvbnMgPSBbXSxcbiAgICAgICAgaG9sZXMgPSBbXTtcblxuICAgIGlzb3JpbmdzKHZhbHVlcywgdmFsdWUsIGZ1bmN0aW9uKHJpbmcpIHtcbiAgICAgIHNtb290aChyaW5nLCB2YWx1ZXMsIHZhbHVlKTtcbiAgICAgIGlmIChhcmVhKHJpbmcpID4gMCkgcG9seWdvbnMucHVzaChbcmluZ10pO1xuICAgICAgZWxzZSBob2xlcy5wdXNoKHJpbmcpO1xuICAgIH0pO1xuXG4gICAgaG9sZXMuZm9yRWFjaChmdW5jdGlvbihob2xlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbiA9IHBvbHlnb25zLmxlbmd0aCwgcG9seWdvbjsgaSA8IG47ICsraSkge1xuICAgICAgICBpZiAoY29udGFpbnMoKHBvbHlnb24gPSBwb2x5Z29uc1tpXSlbMF0sIGhvbGUpICE9PSAtMSkge1xuICAgICAgICAgIHBvbHlnb24ucHVzaChob2xlKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBcIk11bHRpUG9seWdvblwiLFxuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgY29vcmRpbmF0ZXM6IHBvbHlnb25zXG4gICAgfTtcbiAgfVxuXG4gIC8vIE1hcmNoaW5nIHNxdWFyZXMgd2l0aCBpc29saW5lcyBzdGl0Y2hlZCBpbnRvIHJpbmdzLlxuICAvLyBCYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vdG9wb2pzb24vdG9wb2pzb24tY2xpZW50L2Jsb2IvdjMuMC4wL3NyYy9zdGl0Y2guanNcbiAgZnVuY3Rpb24gaXNvcmluZ3ModmFsdWVzLCB2YWx1ZSwgY2FsbGJhY2spIHtcbiAgICB2YXIgZnJhZ21lbnRCeVN0YXJ0ID0gbmV3IEFycmF5LFxuICAgICAgICBmcmFnbWVudEJ5RW5kID0gbmV3IEFycmF5LFxuICAgICAgICB4LCB5LCB0MCwgdDEsIHQyLCB0MztcblxuICAgIC8vIFNwZWNpYWwgY2FzZSBmb3IgdGhlIGZpcnN0IHJvdyAoeSA9IC0xLCB0MiA9IHQzID0gMCkuXG4gICAgeCA9IHkgPSAtMTtcbiAgICB0MSA9IHZhbHVlc1swXSA+PSB2YWx1ZTtcbiAgICBjYXNlc1t0MSA8PCAxXS5mb3JFYWNoKHN0aXRjaCk7XG4gICAgd2hpbGUgKCsreCA8IGR4IC0gMSkge1xuICAgICAgdDAgPSB0MSwgdDEgPSB2YWx1ZXNbeCArIDFdID49IHZhbHVlO1xuICAgICAgY2FzZXNbdDAgfCB0MSA8PCAxXS5mb3JFYWNoKHN0aXRjaCk7XG4gICAgfVxuICAgIGNhc2VzW3QxIDw8IDBdLmZvckVhY2goc3RpdGNoKTtcblxuICAgIC8vIEdlbmVyYWwgY2FzZSBmb3IgdGhlIGludGVybWVkaWF0ZSByb3dzLlxuICAgIHdoaWxlICgrK3kgPCBkeSAtIDEpIHtcbiAgICAgIHggPSAtMTtcbiAgICAgIHQxID0gdmFsdWVzW3kgKiBkeCArIGR4XSA+PSB2YWx1ZTtcbiAgICAgIHQyID0gdmFsdWVzW3kgKiBkeF0gPj0gdmFsdWU7XG4gICAgICBjYXNlc1t0MSA8PCAxIHwgdDIgPDwgMl0uZm9yRWFjaChzdGl0Y2gpO1xuICAgICAgd2hpbGUgKCsreCA8IGR4IC0gMSkge1xuICAgICAgICB0MCA9IHQxLCB0MSA9IHZhbHVlc1t5ICogZHggKyBkeCArIHggKyAxXSA+PSB2YWx1ZTtcbiAgICAgICAgdDMgPSB0MiwgdDIgPSB2YWx1ZXNbeSAqIGR4ICsgeCArIDFdID49IHZhbHVlO1xuICAgICAgICBjYXNlc1t0MCB8IHQxIDw8IDEgfCB0MiA8PCAyIHwgdDMgPDwgM10uZm9yRWFjaChzdGl0Y2gpO1xuICAgICAgfVxuICAgICAgY2FzZXNbdDEgfCB0MiA8PCAzXS5mb3JFYWNoKHN0aXRjaCk7XG4gICAgfVxuXG4gICAgLy8gU3BlY2lhbCBjYXNlIGZvciB0aGUgbGFzdCByb3cgKHkgPSBkeSAtIDEsIHQwID0gdDEgPSAwKS5cbiAgICB4ID0gLTE7XG4gICAgdDIgPSB2YWx1ZXNbeSAqIGR4XSA+PSB2YWx1ZTtcbiAgICBjYXNlc1t0MiA8PCAyXS5mb3JFYWNoKHN0aXRjaCk7XG4gICAgd2hpbGUgKCsreCA8IGR4IC0gMSkge1xuICAgICAgdDMgPSB0MiwgdDIgPSB2YWx1ZXNbeSAqIGR4ICsgeCArIDFdID49IHZhbHVlO1xuICAgICAgY2FzZXNbdDIgPDwgMiB8IHQzIDw8IDNdLmZvckVhY2goc3RpdGNoKTtcbiAgICB9XG4gICAgY2FzZXNbdDIgPDwgM10uZm9yRWFjaChzdGl0Y2gpO1xuXG4gICAgZnVuY3Rpb24gc3RpdGNoKGxpbmUpIHtcbiAgICAgIHZhciBzdGFydCA9IFtsaW5lWzBdWzBdICsgeCwgbGluZVswXVsxXSArIHldLFxuICAgICAgICAgIGVuZCA9IFtsaW5lWzFdWzBdICsgeCwgbGluZVsxXVsxXSArIHldLFxuICAgICAgICAgIHN0YXJ0SW5kZXggPSBpbmRleChzdGFydCksXG4gICAgICAgICAgZW5kSW5kZXggPSBpbmRleChlbmQpLFxuICAgICAgICAgIGYsIGc7XG4gICAgICBpZiAoZiA9IGZyYWdtZW50QnlFbmRbc3RhcnRJbmRleF0pIHtcbiAgICAgICAgaWYgKGcgPSBmcmFnbWVudEJ5U3RhcnRbZW5kSW5kZXhdKSB7XG4gICAgICAgICAgZGVsZXRlIGZyYWdtZW50QnlFbmRbZi5lbmRdO1xuICAgICAgICAgIGRlbGV0ZSBmcmFnbWVudEJ5U3RhcnRbZy5zdGFydF07XG4gICAgICAgICAgaWYgKGYgPT09IGcpIHtcbiAgICAgICAgICAgIGYucmluZy5wdXNoKGVuZCk7XG4gICAgICAgICAgICBjYWxsYmFjayhmLnJpbmcpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBmcmFnbWVudEJ5U3RhcnRbZi5zdGFydF0gPSBmcmFnbWVudEJ5RW5kW2cuZW5kXSA9IHtzdGFydDogZi5zdGFydCwgZW5kOiBnLmVuZCwgcmluZzogZi5yaW5nLmNvbmNhdChnLnJpbmcpfTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZGVsZXRlIGZyYWdtZW50QnlFbmRbZi5lbmRdO1xuICAgICAgICAgIGYucmluZy5wdXNoKGVuZCk7XG4gICAgICAgICAgZnJhZ21lbnRCeUVuZFtmLmVuZCA9IGVuZEluZGV4XSA9IGY7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoZiA9IGZyYWdtZW50QnlTdGFydFtlbmRJbmRleF0pIHtcbiAgICAgICAgaWYgKGcgPSBmcmFnbWVudEJ5RW5kW3N0YXJ0SW5kZXhdKSB7XG4gICAgICAgICAgZGVsZXRlIGZyYWdtZW50QnlTdGFydFtmLnN0YXJ0XTtcbiAgICAgICAgICBkZWxldGUgZnJhZ21lbnRCeUVuZFtnLmVuZF07XG4gICAgICAgICAgaWYgKGYgPT09IGcpIHtcbiAgICAgICAgICAgIGYucmluZy5wdXNoKGVuZCk7XG4gICAgICAgICAgICBjYWxsYmFjayhmLnJpbmcpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBmcmFnbWVudEJ5U3RhcnRbZy5zdGFydF0gPSBmcmFnbWVudEJ5RW5kW2YuZW5kXSA9IHtzdGFydDogZy5zdGFydCwgZW5kOiBmLmVuZCwgcmluZzogZy5yaW5nLmNvbmNhdChmLnJpbmcpfTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZGVsZXRlIGZyYWdtZW50QnlTdGFydFtmLnN0YXJ0XTtcbiAgICAgICAgICBmLnJpbmcudW5zaGlmdChzdGFydCk7XG4gICAgICAgICAgZnJhZ21lbnRCeVN0YXJ0W2Yuc3RhcnQgPSBzdGFydEluZGV4XSA9IGY7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZyYWdtZW50QnlTdGFydFtzdGFydEluZGV4XSA9IGZyYWdtZW50QnlFbmRbZW5kSW5kZXhdID0ge3N0YXJ0OiBzdGFydEluZGV4LCBlbmQ6IGVuZEluZGV4LCByaW5nOiBbc3RhcnQsIGVuZF19O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluZGV4KHBvaW50KSB7XG4gICAgcmV0dXJuIHBvaW50WzBdICogMiArIHBvaW50WzFdICogKGR4ICsgMSkgKiA0O1xuICB9XG5cbiAgZnVuY3Rpb24gc21vb3RoTGluZWFyKHJpbmcsIHZhbHVlcywgdmFsdWUpIHtcbiAgICByaW5nLmZvckVhY2goZnVuY3Rpb24ocG9pbnQpIHtcbiAgICAgIHZhciB4ID0gcG9pbnRbMF0sXG4gICAgICAgICAgeSA9IHBvaW50WzFdLFxuICAgICAgICAgIHh0ID0geCB8IDAsXG4gICAgICAgICAgeXQgPSB5IHwgMCxcbiAgICAgICAgICB2MCxcbiAgICAgICAgICB2MSA9IHZhbHVlc1t5dCAqIGR4ICsgeHRdO1xuICAgICAgaWYgKHggPiAwICYmIHggPCBkeCAmJiB4dCA9PT0geCkge1xuICAgICAgICB2MCA9IHZhbHVlc1t5dCAqIGR4ICsgeHQgLSAxXTtcbiAgICAgICAgcG9pbnRbMF0gPSB4ICsgKHZhbHVlIC0gdjApIC8gKHYxIC0gdjApIC0gMC41O1xuICAgICAgfVxuICAgICAgaWYgKHkgPiAwICYmIHkgPCBkeSAmJiB5dCA9PT0geSkge1xuICAgICAgICB2MCA9IHZhbHVlc1soeXQgLSAxKSAqIGR4ICsgeHRdO1xuICAgICAgICBwb2ludFsxXSA9IHkgKyAodmFsdWUgLSB2MCkgLyAodjEgLSB2MCkgLSAwLjU7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBjb250b3Vycy5jb250b3VyID0gY29udG91cjtcblxuICBjb250b3Vycy5zaXplID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFtkeCwgZHldO1xuICAgIHZhciBfMCA9IE1hdGguY2VpbChfWzBdKSwgXzEgPSBNYXRoLmNlaWwoX1sxXSk7XG4gICAgaWYgKCEoXzAgPiAwKSB8fCAhKF8xID4gMCkpIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgc2l6ZVwiKTtcbiAgICByZXR1cm4gZHggPSBfMCwgZHkgPSBfMSwgY29udG91cnM7XG4gIH07XG5cbiAgY29udG91cnMudGhyZXNob2xkcyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aHJlc2hvbGQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IEFycmF5LmlzQXJyYXkoXykgPyBjb25zdGFudChzbGljZS5jYWxsKF8pKSA6IGNvbnN0YW50KF8pLCBjb250b3VycykgOiB0aHJlc2hvbGQ7XG4gIH07XG5cbiAgY29udG91cnMuc21vb3RoID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNtb290aCA9IF8gPyBzbW9vdGhMaW5lYXIgOiBub29wLCBjb250b3VycykgOiBzbW9vdGggPT09IHNtb290aExpbmVhcjtcbiAgfTtcblxuICByZXR1cm4gY29udG91cnM7XG59XG4iLCJpbXBvcnQge21heCwgcmFuZ2UsIHRpY2tTdGVwfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7c2xpY2V9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQge2JsdXJYLCBibHVyWX0gZnJvbSBcIi4vYmx1clwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQgY29udG91cnMgZnJvbSBcIi4vY29udG91cnNcIjtcblxuZnVuY3Rpb24gZGVmYXVsdFgoZCkge1xuICByZXR1cm4gZFswXTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFkoZCkge1xuICByZXR1cm4gZFsxXTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFdlaWdodCgpIHtcbiAgcmV0dXJuIDE7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgeCA9IGRlZmF1bHRYLFxuICAgICAgeSA9IGRlZmF1bHRZLFxuICAgICAgd2VpZ2h0ID0gZGVmYXVsdFdlaWdodCxcbiAgICAgIGR4ID0gOTYwLFxuICAgICAgZHkgPSA1MDAsXG4gICAgICByID0gMjAsIC8vIGJsdXIgcmFkaXVzXG4gICAgICBrID0gMiwgLy8gbG9nMihncmlkIGNlbGwgc2l6ZSlcbiAgICAgIG8gPSByICogMywgLy8gZ3JpZCBvZmZzZXQsIHRvIHBhZCBmb3IgYmx1clxuICAgICAgbiA9IChkeCArIG8gKiAyKSA+PiBrLCAvLyBncmlkIHdpZHRoXG4gICAgICBtID0gKGR5ICsgbyAqIDIpID4+IGssIC8vIGdyaWQgaGVpZ2h0XG4gICAgICB0aHJlc2hvbGQgPSBjb25zdGFudCgyMCk7XG5cbiAgZnVuY3Rpb24gZGVuc2l0eShkYXRhKSB7XG4gICAgdmFyIHZhbHVlczAgPSBuZXcgRmxvYXQzMkFycmF5KG4gKiBtKSxcbiAgICAgICAgdmFsdWVzMSA9IG5ldyBGbG9hdDMyQXJyYXkobiAqIG0pO1xuXG4gICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uKGQsIGksIGRhdGEpIHtcbiAgICAgIHZhciB4aSA9ICgreChkLCBpLCBkYXRhKSArIG8pID4+IGssXG4gICAgICAgICAgeWkgPSAoK3koZCwgaSwgZGF0YSkgKyBvKSA+PiBrLFxuICAgICAgICAgIHdpID0gK3dlaWdodChkLCBpLCBkYXRhKTtcbiAgICAgIGlmICh4aSA+PSAwICYmIHhpIDwgbiAmJiB5aSA+PSAwICYmIHlpIDwgbSkge1xuICAgICAgICB2YWx1ZXMwW3hpICsgeWkgKiBuXSArPSB3aTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIFRPRE8gT3B0aW1pemUuXG4gICAgYmx1clgoe3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczB9LCB7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMX0sIHIgPj4gayk7XG4gICAgYmx1clkoe3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczF9LCB7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMH0sIHIgPj4gayk7XG4gICAgYmx1clgoe3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczB9LCB7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMX0sIHIgPj4gayk7XG4gICAgYmx1clkoe3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczF9LCB7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMH0sIHIgPj4gayk7XG4gICAgYmx1clgoe3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczB9LCB7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMX0sIHIgPj4gayk7XG4gICAgYmx1clkoe3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczF9LCB7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMH0sIHIgPj4gayk7XG5cbiAgICB2YXIgdHogPSB0aHJlc2hvbGQodmFsdWVzMCk7XG5cbiAgICAvLyBDb252ZXJ0IG51bWJlciBvZiB0aHJlc2hvbGRzIGludG8gdW5pZm9ybSB0aHJlc2hvbGRzLlxuICAgIGlmICghQXJyYXkuaXNBcnJheSh0eikpIHtcbiAgICAgIHZhciBzdG9wID0gbWF4KHZhbHVlczApO1xuICAgICAgdHogPSB0aWNrU3RlcCgwLCBzdG9wLCB0eik7XG4gICAgICB0eiA9IHJhbmdlKDAsIE1hdGguZmxvb3Ioc3RvcCAvIHR6KSAqIHR6LCB0eik7XG4gICAgICB0ei5zaGlmdCgpO1xuICAgIH1cblxuICAgIHJldHVybiBjb250b3VycygpXG4gICAgICAgIC50aHJlc2hvbGRzKHR6KVxuICAgICAgICAuc2l6ZShbbiwgbV0pXG4gICAgICAodmFsdWVzMClcbiAgICAgICAgLm1hcCh0cmFuc2Zvcm0pO1xuICB9XG5cbiAgZnVuY3Rpb24gdHJhbnNmb3JtKGdlb21ldHJ5KSB7XG4gICAgZ2VvbWV0cnkudmFsdWUgKj0gTWF0aC5wb3coMiwgLTIgKiBrKTsgLy8gRGVuc2l0eSBpbiBwb2ludHMgcGVyIHNxdWFyZSBwaXhlbC5cbiAgICBnZW9tZXRyeS5jb29yZGluYXRlcy5mb3JFYWNoKHRyYW5zZm9ybVBvbHlnb24pO1xuICAgIHJldHVybiBnZW9tZXRyeTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyYW5zZm9ybVBvbHlnb24oY29vcmRpbmF0ZXMpIHtcbiAgICBjb29yZGluYXRlcy5mb3JFYWNoKHRyYW5zZm9ybVJpbmcpO1xuICB9XG5cbiAgZnVuY3Rpb24gdHJhbnNmb3JtUmluZyhjb29yZGluYXRlcykge1xuICAgIGNvb3JkaW5hdGVzLmZvckVhY2godHJhbnNmb3JtUG9pbnQpO1xuICB9XG5cbiAgLy8gVE9ETyBPcHRpbWl6ZS5cbiAgZnVuY3Rpb24gdHJhbnNmb3JtUG9pbnQoY29vcmRpbmF0ZXMpIHtcbiAgICBjb29yZGluYXRlc1swXSA9IGNvb3JkaW5hdGVzWzBdICogTWF0aC5wb3coMiwgaykgLSBvO1xuICAgIGNvb3JkaW5hdGVzWzFdID0gY29vcmRpbmF0ZXNbMV0gKiBNYXRoLnBvdygyLCBrKSAtIG87XG4gIH1cblxuICBmdW5jdGlvbiByZXNpemUoKSB7XG4gICAgbyA9IHIgKiAzO1xuICAgIG4gPSAoZHggKyBvICogMikgPj4gaztcbiAgICBtID0gKGR5ICsgbyAqIDIpID4+IGs7XG4gICAgcmV0dXJuIGRlbnNpdHk7XG4gIH1cblxuICBkZW5zaXR5LnggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBkZW5zaXR5KSA6IHg7XG4gIH07XG5cbiAgZGVuc2l0eS55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgZGVuc2l0eSkgOiB5O1xuICB9O1xuXG4gIGRlbnNpdHkud2VpZ2h0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHdlaWdodCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBkZW5zaXR5KSA6IHdlaWdodDtcbiAgfTtcblxuICBkZW5zaXR5LnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gW2R4LCBkeV07XG4gICAgdmFyIF8wID0gTWF0aC5jZWlsKF9bMF0pLCBfMSA9IE1hdGguY2VpbChfWzFdKTtcbiAgICBpZiAoIShfMCA+PSAwKSAmJiAhKF8wID49IDApKSB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHNpemVcIik7XG4gICAgcmV0dXJuIGR4ID0gXzAsIGR5ID0gXzEsIHJlc2l6ZSgpO1xuICB9O1xuXG4gIGRlbnNpdHkuY2VsbFNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gMSA8PCBrO1xuICAgIGlmICghKChfID0gK18pID49IDEpKSB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGNlbGwgc2l6ZVwiKTtcbiAgICByZXR1cm4gayA9IE1hdGguZmxvb3IoTWF0aC5sb2coXykgLyBNYXRoLkxOMiksIHJlc2l6ZSgpO1xuICB9O1xuXG4gIGRlbnNpdHkudGhyZXNob2xkcyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aHJlc2hvbGQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IEFycmF5LmlzQXJyYXkoXykgPyBjb25zdGFudChzbGljZS5jYWxsKF8pKSA6IGNvbnN0YW50KF8pLCBkZW5zaXR5KSA6IHRocmVzaG9sZDtcbiAgfTtcblxuICBkZW5zaXR5LmJhbmR3aWR0aCA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBNYXRoLnNxcnQociAqIChyICsgMSkpO1xuICAgIGlmICghKChfID0gK18pID49IDApKSB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGJhbmR3aWR0aFwiKTtcbiAgICByZXR1cm4gciA9IE1hdGgucm91bmQoKE1hdGguc3FydCg0ICogXyAqIF8gKyAxKSAtIDEpIC8gMiksIHJlc2l6ZSgpO1xuICB9O1xuXG4gIHJldHVybiBkZW5zaXR5O1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGNvbnRvdXJzfSBmcm9tIFwiLi9jb250b3Vyc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGNvbnRvdXJEZW5zaXR5fSBmcm9tIFwiLi9kZW5zaXR5XCI7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHt9XG4iLCJ2YXIgbm9vcCA9IHt2YWx1ZTogZnVuY3Rpb24oKSB7fX07XG5cbmZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IGFyZ3VtZW50cy5sZW5ndGgsIF8gPSB7fSwgdDsgaSA8IG47ICsraSkge1xuICAgIGlmICghKHQgPSBhcmd1bWVudHNbaV0gKyBcIlwiKSB8fCAodCBpbiBfKSkgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCB0eXBlOiBcIiArIHQpO1xuICAgIF9bdF0gPSBbXTtcbiAgfVxuICByZXR1cm4gbmV3IERpc3BhdGNoKF8pO1xufVxuXG5mdW5jdGlvbiBEaXNwYXRjaChfKSB7XG4gIHRoaXMuXyA9IF87XG59XG5cbmZ1bmN0aW9uIHBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lcywgdHlwZXMpIHtcbiAgcmV0dXJuIHR5cGVuYW1lcy50cmltKCkuc3BsaXQoL158XFxzKy8pLm1hcChmdW5jdGlvbih0KSB7XG4gICAgdmFyIG5hbWUgPSBcIlwiLCBpID0gdC5pbmRleE9mKFwiLlwiKTtcbiAgICBpZiAoaSA+PSAwKSBuYW1lID0gdC5zbGljZShpICsgMSksIHQgPSB0LnNsaWNlKDAsIGkpO1xuICAgIGlmICh0ICYmICF0eXBlcy5oYXNPd25Qcm9wZXJ0eSh0KSkgdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biB0eXBlOiBcIiArIHQpO1xuICAgIHJldHVybiB7dHlwZTogdCwgbmFtZTogbmFtZX07XG4gIH0pO1xufVxuXG5EaXNwYXRjaC5wcm90b3R5cGUgPSBkaXNwYXRjaC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBEaXNwYXRjaCxcbiAgb246IGZ1bmN0aW9uKHR5cGVuYW1lLCBjYWxsYmFjaykge1xuICAgIHZhciBfID0gdGhpcy5fLFxuICAgICAgICBUID0gcGFyc2VUeXBlbmFtZXModHlwZW5hbWUgKyBcIlwiLCBfKSxcbiAgICAgICAgdCxcbiAgICAgICAgaSA9IC0xLFxuICAgICAgICBuID0gVC5sZW5ndGg7XG5cbiAgICAvLyBJZiBubyBjYWxsYmFjayB3YXMgc3BlY2lmaWVkLCByZXR1cm4gdGhlIGNhbGxiYWNrIG9mIHRoZSBnaXZlbiB0eXBlIGFuZCBuYW1lLlxuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgodCA9ICh0eXBlbmFtZSA9IFRbaV0pLnR5cGUpICYmICh0ID0gZ2V0KF9bdF0sIHR5cGVuYW1lLm5hbWUpKSkgcmV0dXJuIHQ7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gSWYgYSB0eXBlIHdhcyBzcGVjaWZpZWQsIHNldCB0aGUgY2FsbGJhY2sgZm9yIHRoZSBnaXZlbiB0eXBlIGFuZCBuYW1lLlxuICAgIC8vIE90aGVyd2lzZSwgaWYgYSBudWxsIGNhbGxiYWNrIHdhcyBzcGVjaWZpZWQsIHJlbW92ZSBjYWxsYmFja3Mgb2YgdGhlIGdpdmVuIG5hbWUuXG4gICAgaWYgKGNhbGxiYWNrICE9IG51bGwgJiYgdHlwZW9mIGNhbGxiYWNrICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgY2FsbGJhY2s6IFwiICsgY2FsbGJhY2spO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAodCA9ICh0eXBlbmFtZSA9IFRbaV0pLnR5cGUpIF9bdF0gPSBzZXQoX1t0XSwgdHlwZW5hbWUubmFtZSwgY2FsbGJhY2spO1xuICAgICAgZWxzZSBpZiAoY2FsbGJhY2sgPT0gbnVsbCkgZm9yICh0IGluIF8pIF9bdF0gPSBzZXQoX1t0XSwgdHlwZW5hbWUubmFtZSwgbnVsbCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIGNvcHk6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBjb3B5ID0ge30sIF8gPSB0aGlzLl87XG4gICAgZm9yICh2YXIgdCBpbiBfKSBjb3B5W3RdID0gX1t0XS5zbGljZSgpO1xuICAgIHJldHVybiBuZXcgRGlzcGF0Y2goY29weSk7XG4gIH0sXG4gIGNhbGw6IGZ1bmN0aW9uKHR5cGUsIHRoYXQpIHtcbiAgICBpZiAoKG4gPSBhcmd1bWVudHMubGVuZ3RoIC0gMikgPiAwKSBmb3IgKHZhciBhcmdzID0gbmV3IEFycmF5KG4pLCBpID0gMCwgbiwgdDsgaSA8IG47ICsraSkgYXJnc1tpXSA9IGFyZ3VtZW50c1tpICsgMl07XG4gICAgaWYgKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodHlwZSkpIHRocm93IG5ldyBFcnJvcihcInVua25vd24gdHlwZTogXCIgKyB0eXBlKTtcbiAgICBmb3IgKHQgPSB0aGlzLl9bdHlwZV0sIGkgPSAwLCBuID0gdC5sZW5ndGg7IGkgPCBuOyArK2kpIHRbaV0udmFsdWUuYXBwbHkodGhhdCwgYXJncyk7XG4gIH0sXG4gIGFwcGx5OiBmdW5jdGlvbih0eXBlLCB0aGF0LCBhcmdzKSB7XG4gICAgaWYgKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodHlwZSkpIHRocm93IG5ldyBFcnJvcihcInVua25vd24gdHlwZTogXCIgKyB0eXBlKTtcbiAgICBmb3IgKHZhciB0ID0gdGhpcy5fW3R5cGVdLCBpID0gMCwgbiA9IHQubGVuZ3RoOyBpIDwgbjsgKytpKSB0W2ldLnZhbHVlLmFwcGx5KHRoYXQsIGFyZ3MpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBnZXQodHlwZSwgbmFtZSkge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IHR5cGUubGVuZ3RoLCBjOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKChjID0gdHlwZVtpXSkubmFtZSA9PT0gbmFtZSkge1xuICAgICAgcmV0dXJuIGMudmFsdWU7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHNldCh0eXBlLCBuYW1lLCBjYWxsYmFjaykge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IHR5cGUubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKHR5cGVbaV0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgdHlwZVtpXSA9IG5vb3AsIHR5cGUgPSB0eXBlLnNsaWNlKDAsIGkpLmNvbmNhdCh0eXBlLnNsaWNlKGkgKyAxKSk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgaWYgKGNhbGxiYWNrICE9IG51bGwpIHR5cGUucHVzaCh7bmFtZTogbmFtZSwgdmFsdWU6IGNhbGxiYWNrfSk7XG4gIHJldHVybiB0eXBlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBkaXNwYXRjaDtcbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBkaXNwYXRjaH0gZnJvbSBcIi4vZGlzcGF0Y2hcIjtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiaW1wb3J0IHtkaXNwYXRjaH0gZnJvbSBcImQzLWRpc3BhdGNoXCI7XG5pbXBvcnQge2V2ZW50LCBjdXN0b21FdmVudCwgc2VsZWN0LCBtb3VzZSwgdG91Y2h9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCBub2RyYWcsIHt5ZXNkcmFnfSBmcm9tIFwiLi9ub2RyYWdcIjtcbmltcG9ydCBub2V2ZW50LCB7bm9wcm9wYWdhdGlvbn0gZnJvbSBcIi4vbm9ldmVudFwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQgRHJhZ0V2ZW50IGZyb20gXCIuL2V2ZW50XCI7XG5cbi8vIElnbm9yZSByaWdodC1jbGljaywgc2luY2UgdGhhdCBzaG91bGQgb3BlbiB0aGUgY29udGV4dCBtZW51LlxuZnVuY3Rpb24gZGVmYXVsdEZpbHRlcigpIHtcbiAgcmV0dXJuICFldmVudC5idXR0b247XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRDb250YWluZXIoKSB7XG4gIHJldHVybiB0aGlzLnBhcmVudE5vZGU7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRTdWJqZWN0KGQpIHtcbiAgcmV0dXJuIGQgPT0gbnVsbCA/IHt4OiBldmVudC54LCB5OiBldmVudC55fSA6IGQ7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRUb3VjaGFibGUoKSB7XG4gIHJldHVybiBcIm9udG91Y2hzdGFydFwiIGluIHRoaXM7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgZmlsdGVyID0gZGVmYXVsdEZpbHRlcixcbiAgICAgIGNvbnRhaW5lciA9IGRlZmF1bHRDb250YWluZXIsXG4gICAgICBzdWJqZWN0ID0gZGVmYXVsdFN1YmplY3QsXG4gICAgICB0b3VjaGFibGUgPSBkZWZhdWx0VG91Y2hhYmxlLFxuICAgICAgZ2VzdHVyZXMgPSB7fSxcbiAgICAgIGxpc3RlbmVycyA9IGRpc3BhdGNoKFwic3RhcnRcIiwgXCJkcmFnXCIsIFwiZW5kXCIpLFxuICAgICAgYWN0aXZlID0gMCxcbiAgICAgIG1vdXNlZG93bngsXG4gICAgICBtb3VzZWRvd255LFxuICAgICAgbW91c2Vtb3ZpbmcsXG4gICAgICB0b3VjaGVuZGluZyxcbiAgICAgIGNsaWNrRGlzdGFuY2UyID0gMDtcblxuICBmdW5jdGlvbiBkcmFnKHNlbGVjdGlvbikge1xuICAgIHNlbGVjdGlvblxuICAgICAgICAub24oXCJtb3VzZWRvd24uZHJhZ1wiLCBtb3VzZWRvd25lZClcbiAgICAgIC5maWx0ZXIodG91Y2hhYmxlKVxuICAgICAgICAub24oXCJ0b3VjaHN0YXJ0LmRyYWdcIiwgdG91Y2hzdGFydGVkKVxuICAgICAgICAub24oXCJ0b3VjaG1vdmUuZHJhZ1wiLCB0b3VjaG1vdmVkKVxuICAgICAgICAub24oXCJ0b3VjaGVuZC5kcmFnIHRvdWNoY2FuY2VsLmRyYWdcIiwgdG91Y2hlbmRlZClcbiAgICAgICAgLnN0eWxlKFwidG91Y2gtYWN0aW9uXCIsIFwibm9uZVwiKVxuICAgICAgICAuc3R5bGUoXCItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3JcIiwgXCJyZ2JhKDAsMCwwLDApXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gbW91c2Vkb3duZWQoKSB7XG4gICAgaWYgKHRvdWNoZW5kaW5nIHx8ICFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciBnZXN0dXJlID0gYmVmb3Jlc3RhcnQoXCJtb3VzZVwiLCBjb250YWluZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgbW91c2UsIHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKCFnZXN0dXJlKSByZXR1cm47XG4gICAgc2VsZWN0KGV2ZW50LnZpZXcpLm9uKFwibW91c2Vtb3ZlLmRyYWdcIiwgbW91c2Vtb3ZlZCwgdHJ1ZSkub24oXCJtb3VzZXVwLmRyYWdcIiwgbW91c2V1cHBlZCwgdHJ1ZSk7XG4gICAgbm9kcmFnKGV2ZW50LnZpZXcpO1xuICAgIG5vcHJvcGFnYXRpb24oKTtcbiAgICBtb3VzZW1vdmluZyA9IGZhbHNlO1xuICAgIG1vdXNlZG93bnggPSBldmVudC5jbGllbnRYO1xuICAgIG1vdXNlZG93bnkgPSBldmVudC5jbGllbnRZO1xuICAgIGdlc3R1cmUoXCJzdGFydFwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG1vdXNlbW92ZWQoKSB7XG4gICAgbm9ldmVudCgpO1xuICAgIGlmICghbW91c2Vtb3ZpbmcpIHtcbiAgICAgIHZhciBkeCA9IGV2ZW50LmNsaWVudFggLSBtb3VzZWRvd254LCBkeSA9IGV2ZW50LmNsaWVudFkgLSBtb3VzZWRvd255O1xuICAgICAgbW91c2Vtb3ZpbmcgPSBkeCAqIGR4ICsgZHkgKiBkeSA+IGNsaWNrRGlzdGFuY2UyO1xuICAgIH1cbiAgICBnZXN0dXJlcy5tb3VzZShcImRyYWdcIik7XG4gIH1cblxuICBmdW5jdGlvbiBtb3VzZXVwcGVkKCkge1xuICAgIHNlbGVjdChldmVudC52aWV3KS5vbihcIm1vdXNlbW92ZS5kcmFnIG1vdXNldXAuZHJhZ1wiLCBudWxsKTtcbiAgICB5ZXNkcmFnKGV2ZW50LnZpZXcsIG1vdXNlbW92aW5nKTtcbiAgICBub2V2ZW50KCk7XG4gICAgZ2VzdHVyZXMubW91c2UoXCJlbmRcIik7XG4gIH1cblxuICBmdW5jdGlvbiB0b3VjaHN0YXJ0ZWQoKSB7XG4gICAgaWYgKCFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciB0b3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXMsXG4gICAgICAgIGMgPSBjb250YWluZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgbiA9IHRvdWNoZXMubGVuZ3RoLCBpLCBnZXN0dXJlO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKGdlc3R1cmUgPSBiZWZvcmVzdGFydCh0b3VjaGVzW2ldLmlkZW50aWZpZXIsIGMsIHRvdWNoLCB0aGlzLCBhcmd1bWVudHMpKSB7XG4gICAgICAgIG5vcHJvcGFnYXRpb24oKTtcbiAgICAgICAgZ2VzdHVyZShcInN0YXJ0XCIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHRvdWNobW92ZWQoKSB7XG4gICAgdmFyIHRvdWNoZXMgPSBldmVudC5jaGFuZ2VkVG91Y2hlcyxcbiAgICAgICAgbiA9IHRvdWNoZXMubGVuZ3RoLCBpLCBnZXN0dXJlO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKGdlc3R1cmUgPSBnZXN0dXJlc1t0b3VjaGVzW2ldLmlkZW50aWZpZXJdKSB7XG4gICAgICAgIG5vZXZlbnQoKTtcbiAgICAgICAgZ2VzdHVyZShcImRyYWdcIik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdG91Y2hlbmRlZCgpIHtcbiAgICB2YXIgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzLFxuICAgICAgICBuID0gdG91Y2hlcy5sZW5ndGgsIGksIGdlc3R1cmU7XG5cbiAgICBpZiAodG91Y2hlbmRpbmcpIGNsZWFyVGltZW91dCh0b3VjaGVuZGluZyk7XG4gICAgdG91Y2hlbmRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0b3VjaGVuZGluZyA9IG51bGw7IH0sIDUwMCk7IC8vIEdob3N0IGNsaWNrcyBhcmUgZGVsYXllZCFcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoZ2VzdHVyZSA9IGdlc3R1cmVzW3RvdWNoZXNbaV0uaWRlbnRpZmllcl0pIHtcbiAgICAgICAgbm9wcm9wYWdhdGlvbigpO1xuICAgICAgICBnZXN0dXJlKFwiZW5kXCIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGJlZm9yZXN0YXJ0KGlkLCBjb250YWluZXIsIHBvaW50LCB0aGF0LCBhcmdzKSB7XG4gICAgdmFyIHAgPSBwb2ludChjb250YWluZXIsIGlkKSwgcywgZHgsIGR5LFxuICAgICAgICBzdWJsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuY29weSgpO1xuXG4gICAgaWYgKCFjdXN0b21FdmVudChuZXcgRHJhZ0V2ZW50KGRyYWcsIFwiYmVmb3Jlc3RhcnRcIiwgcywgaWQsIGFjdGl2ZSwgcFswXSwgcFsxXSwgMCwgMCwgc3VibGlzdGVuZXJzKSwgZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoKGV2ZW50LnN1YmplY3QgPSBzID0gc3ViamVjdC5hcHBseSh0aGF0LCBhcmdzKSkgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuICAgICAgZHggPSBzLnggLSBwWzBdIHx8IDA7XG4gICAgICBkeSA9IHMueSAtIHBbMV0gfHwgMDtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0pKSByZXR1cm47XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gZ2VzdHVyZSh0eXBlKSB7XG4gICAgICB2YXIgcDAgPSBwLCBuO1xuICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgXCJzdGFydFwiOiBnZXN0dXJlc1tpZF0gPSBnZXN0dXJlLCBuID0gYWN0aXZlKys7IGJyZWFrO1xuICAgICAgICBjYXNlIFwiZW5kXCI6IGRlbGV0ZSBnZXN0dXJlc1tpZF0sIC0tYWN0aXZlOyAvLyBub2JyZWFrXG4gICAgICAgIGNhc2UgXCJkcmFnXCI6IHAgPSBwb2ludChjb250YWluZXIsIGlkKSwgbiA9IGFjdGl2ZTsgYnJlYWs7XG4gICAgICB9XG4gICAgICBjdXN0b21FdmVudChuZXcgRHJhZ0V2ZW50KGRyYWcsIHR5cGUsIHMsIGlkLCBuLCBwWzBdICsgZHgsIHBbMV0gKyBkeSwgcFswXSAtIHAwWzBdLCBwWzFdIC0gcDBbMV0sIHN1Ymxpc3RlbmVycyksIHN1Ymxpc3RlbmVycy5hcHBseSwgc3VibGlzdGVuZXJzLCBbdHlwZSwgdGhhdCwgYXJnc10pO1xuICAgIH07XG4gIH1cblxuICBkcmFnLmZpbHRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChmaWx0ZXIgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCEhXyksIGRyYWcpIDogZmlsdGVyO1xuICB9O1xuXG4gIGRyYWcuY29udGFpbmVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNvbnRhaW5lciA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoXyksIGRyYWcpIDogY29udGFpbmVyO1xuICB9O1xuXG4gIGRyYWcuc3ViamVjdCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzdWJqZWN0ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgZHJhZykgOiBzdWJqZWN0O1xuICB9O1xuXG4gIGRyYWcudG91Y2hhYmxlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRvdWNoYWJsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgZHJhZykgOiB0b3VjaGFibGU7XG4gIH07XG5cbiAgZHJhZy5vbiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZSA9IGxpc3RlbmVycy5vbi5hcHBseShsaXN0ZW5lcnMsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIHZhbHVlID09PSBsaXN0ZW5lcnMgPyBkcmFnIDogdmFsdWU7XG4gIH07XG5cbiAgZHJhZy5jbGlja0Rpc3RhbmNlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNsaWNrRGlzdGFuY2UyID0gKF8gPSArXykgKiBfLCBkcmFnKSA6IE1hdGguc3FydChjbGlja0Rpc3RhbmNlMik7XG4gIH07XG5cbiAgcmV0dXJuIGRyYWc7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEcmFnRXZlbnQodGFyZ2V0LCB0eXBlLCBzdWJqZWN0LCBpZCwgYWN0aXZlLCB4LCB5LCBkeCwgZHksIGRpc3BhdGNoKSB7XG4gIHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuICB0aGlzLnR5cGUgPSB0eXBlO1xuICB0aGlzLnN1YmplY3QgPSBzdWJqZWN0O1xuICB0aGlzLmlkZW50aWZpZXIgPSBpZDtcbiAgdGhpcy5hY3RpdmUgPSBhY3RpdmU7XG4gIHRoaXMueCA9IHg7XG4gIHRoaXMueSA9IHk7XG4gIHRoaXMuZHggPSBkeDtcbiAgdGhpcy5keSA9IGR5O1xuICB0aGlzLl8gPSBkaXNwYXRjaDtcbn1cblxuRHJhZ0V2ZW50LnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uKCkge1xuICB2YXIgdmFsdWUgPSB0aGlzLl8ub24uYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpO1xuICByZXR1cm4gdmFsdWUgPT09IHRoaXMuXyA/IHRoaXMgOiB2YWx1ZTtcbn07XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgZHJhZ30gZnJvbSBcIi4vZHJhZ1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGRyYWdEaXNhYmxlLCB5ZXNkcmFnIGFzIGRyYWdFbmFibGV9IGZyb20gXCIuL25vZHJhZ1wiO1xuIiwiaW1wb3J0IHtzZWxlY3R9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCBub2V2ZW50IGZyb20gXCIuL25vZXZlbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmlldykge1xuICB2YXIgcm9vdCA9IHZpZXcuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LFxuICAgICAgc2VsZWN0aW9uID0gc2VsZWN0KHZpZXcpLm9uKFwiZHJhZ3N0YXJ0LmRyYWdcIiwgbm9ldmVudCwgdHJ1ZSk7XG4gIGlmIChcIm9uc2VsZWN0c3RhcnRcIiBpbiByb290KSB7XG4gICAgc2VsZWN0aW9uLm9uKFwic2VsZWN0c3RhcnQuZHJhZ1wiLCBub2V2ZW50LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICByb290Ll9fbm9zZWxlY3QgPSByb290LnN0eWxlLk1velVzZXJTZWxlY3Q7XG4gICAgcm9vdC5zdHlsZS5Nb3pVc2VyU2VsZWN0ID0gXCJub25lXCI7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHllc2RyYWcodmlldywgbm9jbGljaykge1xuICB2YXIgcm9vdCA9IHZpZXcuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LFxuICAgICAgc2VsZWN0aW9uID0gc2VsZWN0KHZpZXcpLm9uKFwiZHJhZ3N0YXJ0LmRyYWdcIiwgbnVsbCk7XG4gIGlmIChub2NsaWNrKSB7XG4gICAgc2VsZWN0aW9uLm9uKFwiY2xpY2suZHJhZ1wiLCBub2V2ZW50LCB0cnVlKTtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyBzZWxlY3Rpb24ub24oXCJjbGljay5kcmFnXCIsIG51bGwpOyB9LCAwKTtcbiAgfVxuICBpZiAoXCJvbnNlbGVjdHN0YXJ0XCIgaW4gcm9vdCkge1xuICAgIHNlbGVjdGlvbi5vbihcInNlbGVjdHN0YXJ0LmRyYWdcIiwgbnVsbCk7XG4gIH0gZWxzZSB7XG4gICAgcm9vdC5zdHlsZS5Nb3pVc2VyU2VsZWN0ID0gcm9vdC5fX25vc2VsZWN0O1xuICAgIGRlbGV0ZSByb290Ll9fbm9zZWxlY3Q7XG4gIH1cbn1cbiIsImltcG9ydCB7ZXZlbnR9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG5vcHJvcGFnYXRpb24oKSB7XG4gIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhdXRvVHlwZShvYmplY3QpIHtcbiAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgIHZhciB2YWx1ZSA9IG9iamVjdFtrZXldLnRyaW0oKSwgbnVtYmVyO1xuICAgIGlmICghdmFsdWUpIHZhbHVlID0gbnVsbDtcbiAgICBlbHNlIGlmICh2YWx1ZSA9PT0gXCJ0cnVlXCIpIHZhbHVlID0gdHJ1ZTtcbiAgICBlbHNlIGlmICh2YWx1ZSA9PT0gXCJmYWxzZVwiKSB2YWx1ZSA9IGZhbHNlO1xuICAgIGVsc2UgaWYgKHZhbHVlID09PSBcIk5hTlwiKSB2YWx1ZSA9IE5hTjtcbiAgICBlbHNlIGlmICghaXNOYU4obnVtYmVyID0gK3ZhbHVlKSkgdmFsdWUgPSBudW1iZXI7XG4gICAgZWxzZSBpZiAoL14oWy0rXVxcZHsyfSk/XFxkezR9KC1cXGR7Mn0oLVxcZHsyfSk/KT8oVFxcZHsyfTpcXGR7Mn0oOlxcZHsyfShcXC5cXGR7M30pPyk/KFp8Wy0rXVxcZHsyfTpcXGR7Mn0pPyk/JC8udGVzdCh2YWx1ZSkpIHZhbHVlID0gbmV3IERhdGUodmFsdWUpO1xuICAgIGVsc2UgY29udGludWU7XG4gICAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgfVxuICByZXR1cm4gb2JqZWN0O1xufVxuIiwiaW1wb3J0IGRzdiBmcm9tIFwiLi9kc3ZcIjtcblxudmFyIGNzdiA9IGRzdihcIixcIik7XG5cbmV4cG9ydCB2YXIgY3N2UGFyc2UgPSBjc3YucGFyc2U7XG5leHBvcnQgdmFyIGNzdlBhcnNlUm93cyA9IGNzdi5wYXJzZVJvd3M7XG5leHBvcnQgdmFyIGNzdkZvcm1hdCA9IGNzdi5mb3JtYXQ7XG5leHBvcnQgdmFyIGNzdkZvcm1hdEJvZHkgPSBjc3YuZm9ybWF0Qm9keTtcbmV4cG9ydCB2YXIgY3N2Rm9ybWF0Um93cyA9IGNzdi5mb3JtYXRSb3dzO1xuIiwidmFyIEVPTCA9IHt9LFxuICAgIEVPRiA9IHt9LFxuICAgIFFVT1RFID0gMzQsXG4gICAgTkVXTElORSA9IDEwLFxuICAgIFJFVFVSTiA9IDEzO1xuXG5mdW5jdGlvbiBvYmplY3RDb252ZXJ0ZXIoY29sdW1ucykge1xuICByZXR1cm4gbmV3IEZ1bmN0aW9uKFwiZFwiLCBcInJldHVybiB7XCIgKyBjb2x1bW5zLm1hcChmdW5jdGlvbihuYW1lLCBpKSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG5hbWUpICsgXCI6IGRbXCIgKyBpICsgXCJdXCI7XG4gIH0pLmpvaW4oXCIsXCIpICsgXCJ9XCIpO1xufVxuXG5mdW5jdGlvbiBjdXN0b21Db252ZXJ0ZXIoY29sdW1ucywgZikge1xuICB2YXIgb2JqZWN0ID0gb2JqZWN0Q29udmVydGVyKGNvbHVtbnMpO1xuICByZXR1cm4gZnVuY3Rpb24ocm93LCBpKSB7XG4gICAgcmV0dXJuIGYob2JqZWN0KHJvdyksIGksIGNvbHVtbnMpO1xuICB9O1xufVxuXG4vLyBDb21wdXRlIHVuaXF1ZSBjb2x1bW5zIGluIG9yZGVyIG9mIGRpc2NvdmVyeS5cbmZ1bmN0aW9uIGluZmVyQ29sdW1ucyhyb3dzKSB7XG4gIHZhciBjb2x1bW5TZXQgPSBPYmplY3QuY3JlYXRlKG51bGwpLFxuICAgICAgY29sdW1ucyA9IFtdO1xuXG4gIHJvd3MuZm9yRWFjaChmdW5jdGlvbihyb3cpIHtcbiAgICBmb3IgKHZhciBjb2x1bW4gaW4gcm93KSB7XG4gICAgICBpZiAoIShjb2x1bW4gaW4gY29sdW1uU2V0KSkge1xuICAgICAgICBjb2x1bW5zLnB1c2goY29sdW1uU2V0W2NvbHVtbl0gPSBjb2x1bW4pO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGNvbHVtbnM7XG59XG5cbmZ1bmN0aW9uIHBhZCh2YWx1ZSwgd2lkdGgpIHtcbiAgdmFyIHMgPSB2YWx1ZSArIFwiXCIsIGxlbmd0aCA9IHMubGVuZ3RoO1xuICByZXR1cm4gbGVuZ3RoIDwgd2lkdGggPyBuZXcgQXJyYXkod2lkdGggLSBsZW5ndGggKyAxKS5qb2luKDApICsgcyA6IHM7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFllYXIoeWVhcikge1xuICByZXR1cm4geWVhciA8IDAgPyBcIi1cIiArIHBhZCgteWVhciwgNilcbiAgICA6IHllYXIgPiA5OTk5ID8gXCIrXCIgKyBwYWQoeWVhciwgNilcbiAgICA6IHBhZCh5ZWFyLCA0KTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0RGF0ZShkYXRlKSB7XG4gIHZhciBob3VycyA9IGRhdGUuZ2V0VVRDSG91cnMoKSxcbiAgICAgIG1pbnV0ZXMgPSBkYXRlLmdldFVUQ01pbnV0ZXMoKSxcbiAgICAgIHNlY29uZHMgPSBkYXRlLmdldFVUQ1NlY29uZHMoKSxcbiAgICAgIG1pbGxpc2Vjb25kcyA9IGRhdGUuZ2V0VVRDTWlsbGlzZWNvbmRzKCk7XG4gIHJldHVybiBpc05hTihkYXRlKSA/IFwiSW52YWxpZCBEYXRlXCJcbiAgICAgIDogZm9ybWF0WWVhcihkYXRlLmdldFVUQ0Z1bGxZZWFyKCksIDQpICsgXCItXCIgKyBwYWQoZGF0ZS5nZXRVVENNb250aCgpICsgMSwgMikgKyBcIi1cIiArIHBhZChkYXRlLmdldFVUQ0RhdGUoKSwgMilcbiAgICAgICsgKG1pbGxpc2Vjb25kcyA/IFwiVFwiICsgcGFkKGhvdXJzLCAyKSArIFwiOlwiICsgcGFkKG1pbnV0ZXMsIDIpICsgXCI6XCIgKyBwYWQoc2Vjb25kcywgMikgKyBcIi5cIiArIHBhZChtaWxsaXNlY29uZHMsIDMpICsgXCJaXCJcbiAgICAgIDogc2Vjb25kcyA/IFwiVFwiICsgcGFkKGhvdXJzLCAyKSArIFwiOlwiICsgcGFkKG1pbnV0ZXMsIDIpICsgXCI6XCIgKyBwYWQoc2Vjb25kcywgMikgKyBcIlpcIlxuICAgICAgOiBtaW51dGVzIHx8IGhvdXJzID8gXCJUXCIgKyBwYWQoaG91cnMsIDIpICsgXCI6XCIgKyBwYWQobWludXRlcywgMikgKyBcIlpcIlxuICAgICAgOiBcIlwiKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZGVsaW1pdGVyKSB7XG4gIHZhciByZUZvcm1hdCA9IG5ldyBSZWdFeHAoXCJbXFxcIlwiICsgZGVsaW1pdGVyICsgXCJcXG5cXHJdXCIpLFxuICAgICAgREVMSU1JVEVSID0gZGVsaW1pdGVyLmNoYXJDb2RlQXQoMCk7XG5cbiAgZnVuY3Rpb24gcGFyc2UodGV4dCwgZikge1xuICAgIHZhciBjb252ZXJ0LCBjb2x1bW5zLCByb3dzID0gcGFyc2VSb3dzKHRleHQsIGZ1bmN0aW9uKHJvdywgaSkge1xuICAgICAgaWYgKGNvbnZlcnQpIHJldHVybiBjb252ZXJ0KHJvdywgaSAtIDEpO1xuICAgICAgY29sdW1ucyA9IHJvdywgY29udmVydCA9IGYgPyBjdXN0b21Db252ZXJ0ZXIocm93LCBmKSA6IG9iamVjdENvbnZlcnRlcihyb3cpO1xuICAgIH0pO1xuICAgIHJvd3MuY29sdW1ucyA9IGNvbHVtbnMgfHwgW107XG4gICAgcmV0dXJuIHJvd3M7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZVJvd3ModGV4dCwgZikge1xuICAgIHZhciByb3dzID0gW10sIC8vIG91dHB1dCByb3dzXG4gICAgICAgIE4gPSB0ZXh0Lmxlbmd0aCxcbiAgICAgICAgSSA9IDAsIC8vIGN1cnJlbnQgY2hhcmFjdGVyIGluZGV4XG4gICAgICAgIG4gPSAwLCAvLyBjdXJyZW50IGxpbmUgbnVtYmVyXG4gICAgICAgIHQsIC8vIGN1cnJlbnQgdG9rZW5cbiAgICAgICAgZW9mID0gTiA8PSAwLCAvLyBjdXJyZW50IHRva2VuIGZvbGxvd2VkIGJ5IEVPRj9cbiAgICAgICAgZW9sID0gZmFsc2U7IC8vIGN1cnJlbnQgdG9rZW4gZm9sbG93ZWQgYnkgRU9MP1xuXG4gICAgLy8gU3RyaXAgdGhlIHRyYWlsaW5nIG5ld2xpbmUuXG4gICAgaWYgKHRleHQuY2hhckNvZGVBdChOIC0gMSkgPT09IE5FV0xJTkUpIC0tTjtcbiAgICBpZiAodGV4dC5jaGFyQ29kZUF0KE4gLSAxKSA9PT0gUkVUVVJOKSAtLU47XG5cbiAgICBmdW5jdGlvbiB0b2tlbigpIHtcbiAgICAgIGlmIChlb2YpIHJldHVybiBFT0Y7XG4gICAgICBpZiAoZW9sKSByZXR1cm4gZW9sID0gZmFsc2UsIEVPTDtcblxuICAgICAgLy8gVW5lc2NhcGUgcXVvdGVzLlxuICAgICAgdmFyIGksIGogPSBJLCBjO1xuICAgICAgaWYgKHRleHQuY2hhckNvZGVBdChqKSA9PT0gUVVPVEUpIHtcbiAgICAgICAgd2hpbGUgKEkrKyA8IE4gJiYgdGV4dC5jaGFyQ29kZUF0KEkpICE9PSBRVU9URSB8fCB0ZXh0LmNoYXJDb2RlQXQoKytJKSA9PT0gUVVPVEUpO1xuICAgICAgICBpZiAoKGkgPSBJKSA+PSBOKSBlb2YgPSB0cnVlO1xuICAgICAgICBlbHNlIGlmICgoYyA9IHRleHQuY2hhckNvZGVBdChJKyspKSA9PT0gTkVXTElORSkgZW9sID0gdHJ1ZTtcbiAgICAgICAgZWxzZSBpZiAoYyA9PT0gUkVUVVJOKSB7IGVvbCA9IHRydWU7IGlmICh0ZXh0LmNoYXJDb2RlQXQoSSkgPT09IE5FV0xJTkUpICsrSTsgfVxuICAgICAgICByZXR1cm4gdGV4dC5zbGljZShqICsgMSwgaSAtIDEpLnJlcGxhY2UoL1wiXCIvZywgXCJcXFwiXCIpO1xuICAgICAgfVxuXG4gICAgICAvLyBGaW5kIG5leHQgZGVsaW1pdGVyIG9yIG5ld2xpbmUuXG4gICAgICB3aGlsZSAoSSA8IE4pIHtcbiAgICAgICAgaWYgKChjID0gdGV4dC5jaGFyQ29kZUF0KGkgPSBJKyspKSA9PT0gTkVXTElORSkgZW9sID0gdHJ1ZTtcbiAgICAgICAgZWxzZSBpZiAoYyA9PT0gUkVUVVJOKSB7IGVvbCA9IHRydWU7IGlmICh0ZXh0LmNoYXJDb2RlQXQoSSkgPT09IE5FV0xJTkUpICsrSTsgfVxuICAgICAgICBlbHNlIGlmIChjICE9PSBERUxJTUlURVIpIGNvbnRpbnVlO1xuICAgICAgICByZXR1cm4gdGV4dC5zbGljZShqLCBpKTtcbiAgICAgIH1cblxuICAgICAgLy8gUmV0dXJuIGxhc3QgdG9rZW4gYmVmb3JlIEVPRi5cbiAgICAgIHJldHVybiBlb2YgPSB0cnVlLCB0ZXh0LnNsaWNlKGosIE4pO1xuICAgIH1cblxuICAgIHdoaWxlICgodCA9IHRva2VuKCkpICE9PSBFT0YpIHtcbiAgICAgIHZhciByb3cgPSBbXTtcbiAgICAgIHdoaWxlICh0ICE9PSBFT0wgJiYgdCAhPT0gRU9GKSByb3cucHVzaCh0KSwgdCA9IHRva2VuKCk7XG4gICAgICBpZiAoZiAmJiAocm93ID0gZihyb3csIG4rKykpID09IG51bGwpIGNvbnRpbnVlO1xuICAgICAgcm93cy5wdXNoKHJvdyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJvd3M7XG4gIH1cblxuICBmdW5jdGlvbiBwcmVmb3JtYXRCb2R5KHJvd3MsIGNvbHVtbnMpIHtcbiAgICByZXR1cm4gcm93cy5tYXAoZnVuY3Rpb24ocm93KSB7XG4gICAgICByZXR1cm4gY29sdW1ucy5tYXAoZnVuY3Rpb24oY29sdW1uKSB7XG4gICAgICAgIHJldHVybiBmb3JtYXRWYWx1ZShyb3dbY29sdW1uXSk7XG4gICAgICB9KS5qb2luKGRlbGltaXRlcik7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXQocm93cywgY29sdW1ucykge1xuICAgIGlmIChjb2x1bW5zID09IG51bGwpIGNvbHVtbnMgPSBpbmZlckNvbHVtbnMocm93cyk7XG4gICAgcmV0dXJuIFtjb2x1bW5zLm1hcChmb3JtYXRWYWx1ZSkuam9pbihkZWxpbWl0ZXIpXS5jb25jYXQocHJlZm9ybWF0Qm9keShyb3dzLCBjb2x1bW5zKSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdEJvZHkocm93cywgY29sdW1ucykge1xuICAgIGlmIChjb2x1bW5zID09IG51bGwpIGNvbHVtbnMgPSBpbmZlckNvbHVtbnMocm93cyk7XG4gICAgcmV0dXJuIHByZWZvcm1hdEJvZHkocm93cywgY29sdW1ucykuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFJvd3Mocm93cykge1xuICAgIHJldHVybiByb3dzLm1hcChmb3JtYXRSb3cpLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRSb3cocm93KSB7XG4gICAgcmV0dXJuIHJvdy5tYXAoZm9ybWF0VmFsdWUpLmpvaW4oZGVsaW1pdGVyKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFZhbHVlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlID09IG51bGwgPyBcIlwiXG4gICAgICAgIDogdmFsdWUgaW5zdGFuY2VvZiBEYXRlID8gZm9ybWF0RGF0ZSh2YWx1ZSlcbiAgICAgICAgOiByZUZvcm1hdC50ZXN0KHZhbHVlICs9IFwiXCIpID8gXCJcXFwiXCIgKyB2YWx1ZS5yZXBsYWNlKC9cIi9nLCBcIlxcXCJcXFwiXCIpICsgXCJcXFwiXCJcbiAgICAgICAgOiB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGFyc2U6IHBhcnNlLFxuICAgIHBhcnNlUm93czogcGFyc2VSb3dzLFxuICAgIGZvcm1hdDogZm9ybWF0LFxuICAgIGZvcm1hdEJvZHk6IGZvcm1hdEJvZHksXG4gICAgZm9ybWF0Um93czogZm9ybWF0Um93c1xuICB9O1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGRzdkZvcm1hdH0gZnJvbSBcIi4vZHN2XCI7XG5leHBvcnQge2NzdlBhcnNlLCBjc3ZQYXJzZVJvd3MsIGNzdkZvcm1hdCwgY3N2Rm9ybWF0Qm9keSwgY3N2Rm9ybWF0Um93c30gZnJvbSBcIi4vY3N2XCI7XG5leHBvcnQge3RzdlBhcnNlLCB0c3ZQYXJzZVJvd3MsIHRzdkZvcm1hdCwgdHN2Rm9ybWF0Qm9keSwgdHN2Rm9ybWF0Um93c30gZnJvbSBcIi4vdHN2XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgYXV0b1R5cGV9IGZyb20gXCIuL2F1dG9UeXBlXCI7XG4iLCJpbXBvcnQgZHN2IGZyb20gXCIuL2RzdlwiO1xuXG52YXIgdHN2ID0gZHN2KFwiXFx0XCIpO1xuXG5leHBvcnQgdmFyIHRzdlBhcnNlID0gdHN2LnBhcnNlO1xuZXhwb3J0IHZhciB0c3ZQYXJzZVJvd3MgPSB0c3YucGFyc2VSb3dzO1xuZXhwb3J0IHZhciB0c3ZGb3JtYXQgPSB0c3YuZm9ybWF0O1xuZXhwb3J0IHZhciB0c3ZGb3JtYXRCb2R5ID0gdHN2LmZvcm1hdEJvZHk7XG5leHBvcnQgdmFyIHRzdkZvcm1hdFJvd3MgPSB0c3YuZm9ybWF0Um93cztcbiIsInZhciBvdmVyc2hvb3QgPSAxLjcwMTU4O1xuXG5leHBvcnQgdmFyIGJhY2tJbiA9IChmdW5jdGlvbiBjdXN0b20ocykge1xuICBzID0gK3M7XG5cbiAgZnVuY3Rpb24gYmFja0luKHQpIHtcbiAgICByZXR1cm4gdCAqIHQgKiAoKHMgKyAxKSAqIHQgLSBzKTtcbiAgfVxuXG4gIGJhY2tJbi5vdmVyc2hvb3QgPSBjdXN0b207XG5cbiAgcmV0dXJuIGJhY2tJbjtcbn0pKG92ZXJzaG9vdCk7XG5cbmV4cG9ydCB2YXIgYmFja091dCA9IChmdW5jdGlvbiBjdXN0b20ocykge1xuICBzID0gK3M7XG5cbiAgZnVuY3Rpb24gYmFja091dCh0KSB7XG4gICAgcmV0dXJuIC0tdCAqIHQgKiAoKHMgKyAxKSAqIHQgKyBzKSArIDE7XG4gIH1cblxuICBiYWNrT3V0Lm92ZXJzaG9vdCA9IGN1c3RvbTtcblxuICByZXR1cm4gYmFja091dDtcbn0pKG92ZXJzaG9vdCk7XG5cbmV4cG9ydCB2YXIgYmFja0luT3V0ID0gKGZ1bmN0aW9uIGN1c3RvbShzKSB7XG4gIHMgPSArcztcblxuICBmdW5jdGlvbiBiYWNrSW5PdXQodCkge1xuICAgIHJldHVybiAoKHQgKj0gMikgPCAxID8gdCAqIHQgKiAoKHMgKyAxKSAqIHQgLSBzKSA6ICh0IC09IDIpICogdCAqICgocyArIDEpICogdCArIHMpICsgMikgLyAyO1xuICB9XG5cbiAgYmFja0luT3V0Lm92ZXJzaG9vdCA9IGN1c3RvbTtcblxuICByZXR1cm4gYmFja0luT3V0O1xufSkob3ZlcnNob290KTtcbiIsInZhciBiMSA9IDQgLyAxMSxcbiAgICBiMiA9IDYgLyAxMSxcbiAgICBiMyA9IDggLyAxMSxcbiAgICBiNCA9IDMgLyA0LFxuICAgIGI1ID0gOSAvIDExLFxuICAgIGI2ID0gMTAgLyAxMSxcbiAgICBiNyA9IDE1IC8gMTYsXG4gICAgYjggPSAyMSAvIDIyLFxuICAgIGI5ID0gNjMgLyA2NCxcbiAgICBiMCA9IDEgLyBiMSAvIGIxO1xuXG5leHBvcnQgZnVuY3Rpb24gYm91bmNlSW4odCkge1xuICByZXR1cm4gMSAtIGJvdW5jZU91dCgxIC0gdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBib3VuY2VPdXQodCkge1xuICByZXR1cm4gKHQgPSArdCkgPCBiMSA/IGIwICogdCAqIHQgOiB0IDwgYjMgPyBiMCAqICh0IC09IGIyKSAqIHQgKyBiNCA6IHQgPCBiNiA/IGIwICogKHQgLT0gYjUpICogdCArIGI3IDogYjAgKiAodCAtPSBiOCkgKiB0ICsgYjk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBib3VuY2VJbk91dCh0KSB7XG4gIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IDEgLSBib3VuY2VPdXQoMSAtIHQpIDogYm91bmNlT3V0KHQgLSAxKSArIDEpIC8gMjtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBjaXJjbGVJbih0KSB7XG4gIHJldHVybiAxIC0gTWF0aC5zcXJ0KDEgLSB0ICogdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaXJjbGVPdXQodCkge1xuICByZXR1cm4gTWF0aC5zcXJ0KDEgLSAtLXQgKiB0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNpcmNsZUluT3V0KHQpIHtcbiAgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gMSAtIE1hdGguc3FydCgxIC0gdCAqIHQpIDogTWF0aC5zcXJ0KDEgLSAodCAtPSAyKSAqIHQpICsgMSkgLyAyO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGN1YmljSW4odCkge1xuICByZXR1cm4gdCAqIHQgKiB0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3ViaWNPdXQodCkge1xuICByZXR1cm4gLS10ICogdCAqIHQgKyAxO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3ViaWNJbk91dCh0KSB7XG4gIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IHQgKiB0ICogdCA6ICh0IC09IDIpICogdCAqIHQgKyAyKSAvIDI7XG59XG4iLCJ2YXIgdGF1ID0gMiAqIE1hdGguUEksXG4gICAgYW1wbGl0dWRlID0gMSxcbiAgICBwZXJpb2QgPSAwLjM7XG5cbmV4cG9ydCB2YXIgZWxhc3RpY0luID0gKGZ1bmN0aW9uIGN1c3RvbShhLCBwKSB7XG4gIHZhciBzID0gTWF0aC5hc2luKDEgLyAoYSA9IE1hdGgubWF4KDEsIGEpKSkgKiAocCAvPSB0YXUpO1xuXG4gIGZ1bmN0aW9uIGVsYXN0aWNJbih0KSB7XG4gICAgcmV0dXJuIGEgKiBNYXRoLnBvdygyLCAxMCAqIC0tdCkgKiBNYXRoLnNpbigocyAtIHQpIC8gcCk7XG4gIH1cblxuICBlbGFzdGljSW4uYW1wbGl0dWRlID0gZnVuY3Rpb24oYSkgeyByZXR1cm4gY3VzdG9tKGEsIHAgKiB0YXUpOyB9O1xuICBlbGFzdGljSW4ucGVyaW9kID0gZnVuY3Rpb24ocCkgeyByZXR1cm4gY3VzdG9tKGEsIHApOyB9O1xuXG4gIHJldHVybiBlbGFzdGljSW47XG59KShhbXBsaXR1ZGUsIHBlcmlvZCk7XG5cbmV4cG9ydCB2YXIgZWxhc3RpY091dCA9IChmdW5jdGlvbiBjdXN0b20oYSwgcCkge1xuICB2YXIgcyA9IE1hdGguYXNpbigxIC8gKGEgPSBNYXRoLm1heCgxLCBhKSkpICogKHAgLz0gdGF1KTtcblxuICBmdW5jdGlvbiBlbGFzdGljT3V0KHQpIHtcbiAgICByZXR1cm4gMSAtIGEgKiBNYXRoLnBvdygyLCAtMTAgKiAodCA9ICt0KSkgKiBNYXRoLnNpbigodCArIHMpIC8gcCk7XG4gIH1cblxuICBlbGFzdGljT3V0LmFtcGxpdHVkZSA9IGZ1bmN0aW9uKGEpIHsgcmV0dXJuIGN1c3RvbShhLCBwICogdGF1KTsgfTtcbiAgZWxhc3RpY091dC5wZXJpb2QgPSBmdW5jdGlvbihwKSB7IHJldHVybiBjdXN0b20oYSwgcCk7IH07XG5cbiAgcmV0dXJuIGVsYXN0aWNPdXQ7XG59KShhbXBsaXR1ZGUsIHBlcmlvZCk7XG5cbmV4cG9ydCB2YXIgZWxhc3RpY0luT3V0ID0gKGZ1bmN0aW9uIGN1c3RvbShhLCBwKSB7XG4gIHZhciBzID0gTWF0aC5hc2luKDEgLyAoYSA9IE1hdGgubWF4KDEsIGEpKSkgKiAocCAvPSB0YXUpO1xuXG4gIGZ1bmN0aW9uIGVsYXN0aWNJbk91dCh0KSB7XG4gICAgcmV0dXJuICgodCA9IHQgKiAyIC0gMSkgPCAwXG4gICAgICAgID8gYSAqIE1hdGgucG93KDIsIDEwICogdCkgKiBNYXRoLnNpbigocyAtIHQpIC8gcClcbiAgICAgICAgOiAyIC0gYSAqIE1hdGgucG93KDIsIC0xMCAqIHQpICogTWF0aC5zaW4oKHMgKyB0KSAvIHApKSAvIDI7XG4gIH1cblxuICBlbGFzdGljSW5PdXQuYW1wbGl0dWRlID0gZnVuY3Rpb24oYSkgeyByZXR1cm4gY3VzdG9tKGEsIHAgKiB0YXUpOyB9O1xuICBlbGFzdGljSW5PdXQucGVyaW9kID0gZnVuY3Rpb24ocCkgeyByZXR1cm4gY3VzdG9tKGEsIHApOyB9O1xuXG4gIHJldHVybiBlbGFzdGljSW5PdXQ7XG59KShhbXBsaXR1ZGUsIHBlcmlvZCk7XG4iLCJleHBvcnQgZnVuY3Rpb24gZXhwSW4odCkge1xuICByZXR1cm4gTWF0aC5wb3coMiwgMTAgKiB0IC0gMTApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXhwT3V0KHQpIHtcbiAgcmV0dXJuIDEgLSBNYXRoLnBvdygyLCAtMTAgKiB0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGV4cEluT3V0KHQpIHtcbiAgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gTWF0aC5wb3coMiwgMTAgKiB0IC0gMTApIDogMiAtIE1hdGgucG93KDIsIDEwIC0gMTAgKiB0KSkgLyAyO1xufVxuIiwiZXhwb3J0IHtcbiAgbGluZWFyIGFzIGVhc2VMaW5lYXJcbn0gZnJvbSBcIi4vbGluZWFyXCI7XG5cbmV4cG9ydCB7XG4gIHF1YWRJbk91dCBhcyBlYXNlUXVhZCxcbiAgcXVhZEluIGFzIGVhc2VRdWFkSW4sXG4gIHF1YWRPdXQgYXMgZWFzZVF1YWRPdXQsXG4gIHF1YWRJbk91dCBhcyBlYXNlUXVhZEluT3V0XG59IGZyb20gXCIuL3F1YWRcIjtcblxuZXhwb3J0IHtcbiAgY3ViaWNJbk91dCBhcyBlYXNlQ3ViaWMsXG4gIGN1YmljSW4gYXMgZWFzZUN1YmljSW4sXG4gIGN1YmljT3V0IGFzIGVhc2VDdWJpY091dCxcbiAgY3ViaWNJbk91dCBhcyBlYXNlQ3ViaWNJbk91dFxufSBmcm9tIFwiLi9jdWJpY1wiO1xuXG5leHBvcnQge1xuICBwb2x5SW5PdXQgYXMgZWFzZVBvbHksXG4gIHBvbHlJbiBhcyBlYXNlUG9seUluLFxuICBwb2x5T3V0IGFzIGVhc2VQb2x5T3V0LFxuICBwb2x5SW5PdXQgYXMgZWFzZVBvbHlJbk91dFxufSBmcm9tIFwiLi9wb2x5XCI7XG5cbmV4cG9ydCB7XG4gIHNpbkluT3V0IGFzIGVhc2VTaW4sXG4gIHNpbkluIGFzIGVhc2VTaW5JbixcbiAgc2luT3V0IGFzIGVhc2VTaW5PdXQsXG4gIHNpbkluT3V0IGFzIGVhc2VTaW5Jbk91dFxufSBmcm9tIFwiLi9zaW5cIjtcblxuZXhwb3J0IHtcbiAgZXhwSW5PdXQgYXMgZWFzZUV4cCxcbiAgZXhwSW4gYXMgZWFzZUV4cEluLFxuICBleHBPdXQgYXMgZWFzZUV4cE91dCxcbiAgZXhwSW5PdXQgYXMgZWFzZUV4cEluT3V0XG59IGZyb20gXCIuL2V4cFwiO1xuXG5leHBvcnQge1xuICBjaXJjbGVJbk91dCBhcyBlYXNlQ2lyY2xlLFxuICBjaXJjbGVJbiBhcyBlYXNlQ2lyY2xlSW4sXG4gIGNpcmNsZU91dCBhcyBlYXNlQ2lyY2xlT3V0LFxuICBjaXJjbGVJbk91dCBhcyBlYXNlQ2lyY2xlSW5PdXRcbn0gZnJvbSBcIi4vY2lyY2xlXCI7XG5cbmV4cG9ydCB7XG4gIGJvdW5jZU91dCBhcyBlYXNlQm91bmNlLFxuICBib3VuY2VJbiBhcyBlYXNlQm91bmNlSW4sXG4gIGJvdW5jZU91dCBhcyBlYXNlQm91bmNlT3V0LFxuICBib3VuY2VJbk91dCBhcyBlYXNlQm91bmNlSW5PdXRcbn0gZnJvbSBcIi4vYm91bmNlXCI7XG5cbmV4cG9ydCB7XG4gIGJhY2tJbk91dCBhcyBlYXNlQmFjayxcbiAgYmFja0luIGFzIGVhc2VCYWNrSW4sXG4gIGJhY2tPdXQgYXMgZWFzZUJhY2tPdXQsXG4gIGJhY2tJbk91dCBhcyBlYXNlQmFja0luT3V0XG59IGZyb20gXCIuL2JhY2tcIjtcblxuZXhwb3J0IHtcbiAgZWxhc3RpY091dCBhcyBlYXNlRWxhc3RpYyxcbiAgZWxhc3RpY0luIGFzIGVhc2VFbGFzdGljSW4sXG4gIGVsYXN0aWNPdXQgYXMgZWFzZUVsYXN0aWNPdXQsXG4gIGVsYXN0aWNJbk91dCBhcyBlYXNlRWxhc3RpY0luT3V0XG59IGZyb20gXCIuL2VsYXN0aWNcIjtcbiIsImV4cG9ydCBmdW5jdGlvbiBsaW5lYXIodCkge1xuICByZXR1cm4gK3Q7XG59XG4iLCJ2YXIgZXhwb25lbnQgPSAzO1xuXG5leHBvcnQgdmFyIHBvbHlJbiA9IChmdW5jdGlvbiBjdXN0b20oZSkge1xuICBlID0gK2U7XG5cbiAgZnVuY3Rpb24gcG9seUluKHQpIHtcbiAgICByZXR1cm4gTWF0aC5wb3codCwgZSk7XG4gIH1cblxuICBwb2x5SW4uZXhwb25lbnQgPSBjdXN0b207XG5cbiAgcmV0dXJuIHBvbHlJbjtcbn0pKGV4cG9uZW50KTtcblxuZXhwb3J0IHZhciBwb2x5T3V0ID0gKGZ1bmN0aW9uIGN1c3RvbShlKSB7XG4gIGUgPSArZTtcblxuICBmdW5jdGlvbiBwb2x5T3V0KHQpIHtcbiAgICByZXR1cm4gMSAtIE1hdGgucG93KDEgLSB0LCBlKTtcbiAgfVxuXG4gIHBvbHlPdXQuZXhwb25lbnQgPSBjdXN0b207XG5cbiAgcmV0dXJuIHBvbHlPdXQ7XG59KShleHBvbmVudCk7XG5cbmV4cG9ydCB2YXIgcG9seUluT3V0ID0gKGZ1bmN0aW9uIGN1c3RvbShlKSB7XG4gIGUgPSArZTtcblxuICBmdW5jdGlvbiBwb2x5SW5PdXQodCkge1xuICAgIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IE1hdGgucG93KHQsIGUpIDogMiAtIE1hdGgucG93KDIgLSB0LCBlKSkgLyAyO1xuICB9XG5cbiAgcG9seUluT3V0LmV4cG9uZW50ID0gY3VzdG9tO1xuXG4gIHJldHVybiBwb2x5SW5PdXQ7XG59KShleHBvbmVudCk7XG4iLCJleHBvcnQgZnVuY3Rpb24gcXVhZEluKHQpIHtcbiAgcmV0dXJuIHQgKiB0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcXVhZE91dCh0KSB7XG4gIHJldHVybiB0ICogKDIgLSB0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHF1YWRJbk91dCh0KSB7XG4gIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IHQgKiB0IDogLS10ICogKDIgLSB0KSArIDEpIC8gMjtcbn1cbiIsInZhciBwaSA9IE1hdGguUEksXG4gICAgaGFsZlBpID0gcGkgLyAyO1xuXG5leHBvcnQgZnVuY3Rpb24gc2luSW4odCkge1xuICByZXR1cm4gMSAtIE1hdGguY29zKHQgKiBoYWxmUGkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2luT3V0KHQpIHtcbiAgcmV0dXJuIE1hdGguc2luKHQgKiBoYWxmUGkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2luSW5PdXQodCkge1xuICByZXR1cm4gKDEgLSBNYXRoLmNvcyhwaSAqIHQpKSAvIDI7XG59XG4iLCJmdW5jdGlvbiByZXNwb25zZUJsb2IocmVzcG9uc2UpIHtcbiAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKHJlc3BvbnNlLnN0YXR1cyArIFwiIFwiICsgcmVzcG9uc2Uuc3RhdHVzVGV4dCk7XG4gIHJldHVybiByZXNwb25zZS5ibG9iKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGlucHV0LCBpbml0KSB7XG4gIHJldHVybiBmZXRjaChpbnB1dCwgaW5pdCkudGhlbihyZXNwb25zZUJsb2IpO1xufVxuIiwiZnVuY3Rpb24gcmVzcG9uc2VBcnJheUJ1ZmZlcihyZXNwb25zZSkge1xuICBpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IocmVzcG9uc2Uuc3RhdHVzICsgXCIgXCIgKyByZXNwb25zZS5zdGF0dXNUZXh0KTtcbiAgcmV0dXJuIHJlc3BvbnNlLmFycmF5QnVmZmVyKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGlucHV0LCBpbml0KSB7XG4gIHJldHVybiBmZXRjaChpbnB1dCwgaW5pdCkudGhlbihyZXNwb25zZUFycmF5QnVmZmVyKTtcbn1cbiIsImltcG9ydCB7Y3N2UGFyc2UsIGRzdkZvcm1hdCwgdHN2UGFyc2V9IGZyb20gXCJkMy1kc3ZcIjtcbmltcG9ydCB0ZXh0IGZyb20gXCIuL3RleHRcIjtcblxuZnVuY3Rpb24gZHN2UGFyc2UocGFyc2UpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGlucHV0LCBpbml0LCByb3cpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMiAmJiB0eXBlb2YgaW5pdCA9PT0gXCJmdW5jdGlvblwiKSByb3cgPSBpbml0LCBpbml0ID0gdW5kZWZpbmVkO1xuICAgIHJldHVybiB0ZXh0KGlucHV0LCBpbml0KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICByZXR1cm4gcGFyc2UocmVzcG9uc2UsIHJvdyk7XG4gICAgfSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRzdihkZWxpbWl0ZXIsIGlucHV0LCBpbml0LCByb3cpIHtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDMgJiYgdHlwZW9mIGluaXQgPT09IFwiZnVuY3Rpb25cIikgcm93ID0gaW5pdCwgaW5pdCA9IHVuZGVmaW5lZDtcbiAgdmFyIGZvcm1hdCA9IGRzdkZvcm1hdChkZWxpbWl0ZXIpO1xuICByZXR1cm4gdGV4dChpbnB1dCwgaW5pdCkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgIHJldHVybiBmb3JtYXQucGFyc2UocmVzcG9uc2UsIHJvdyk7XG4gIH0pO1xufVxuXG5leHBvcnQgdmFyIGNzdiA9IGRzdlBhcnNlKGNzdlBhcnNlKTtcbmV4cG9ydCB2YXIgdHN2ID0gZHN2UGFyc2UodHN2UGFyc2UpO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5wdXQsIGluaXQpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciBpbWFnZSA9IG5ldyBJbWFnZTtcbiAgICBmb3IgKHZhciBrZXkgaW4gaW5pdCkgaW1hZ2Vba2V5XSA9IGluaXRba2V5XTtcbiAgICBpbWFnZS5vbmVycm9yID0gcmVqZWN0O1xuICAgIGltYWdlLm9ubG9hZCA9IGZ1bmN0aW9uKCkgeyByZXNvbHZlKGltYWdlKTsgfTtcbiAgICBpbWFnZS5zcmMgPSBpbnB1dDtcbiAgfSk7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgYmxvYn0gZnJvbSBcIi4vYmxvYlwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGJ1ZmZlcn0gZnJvbSBcIi4vYnVmZmVyXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZHN2LCBjc3YsIHRzdn0gZnJvbSBcIi4vZHN2XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW1hZ2V9IGZyb20gXCIuL2ltYWdlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMganNvbn0gZnJvbSBcIi4vanNvblwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRleHR9IGZyb20gXCIuL3RleHRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB4bWwsIGh0bWwsIHN2Z30gZnJvbSBcIi4veG1sXCI7XG4iLCJmdW5jdGlvbiByZXNwb25zZUpzb24ocmVzcG9uc2UpIHtcbiAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKHJlc3BvbnNlLnN0YXR1cyArIFwiIFwiICsgcmVzcG9uc2Uuc3RhdHVzVGV4dCk7XG4gIHJldHVybiByZXNwb25zZS5qc29uKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGlucHV0LCBpbml0KSB7XG4gIHJldHVybiBmZXRjaChpbnB1dCwgaW5pdCkudGhlbihyZXNwb25zZUpzb24pO1xufVxuIiwiZnVuY3Rpb24gcmVzcG9uc2VUZXh0KHJlc3BvbnNlKSB7XG4gIGlmICghcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcihyZXNwb25zZS5zdGF0dXMgKyBcIiBcIiArIHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuICByZXR1cm4gcmVzcG9uc2UudGV4dCgpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnB1dCwgaW5pdCkge1xuICByZXR1cm4gZmV0Y2goaW5wdXQsIGluaXQpLnRoZW4ocmVzcG9uc2VUZXh0KTtcbn1cbiIsImltcG9ydCB0ZXh0IGZyb20gXCIuL3RleHRcIjtcblxuZnVuY3Rpb24gcGFyc2VyKHR5cGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGlucHV0LCBpbml0KSAge1xuICAgIHJldHVybiB0ZXh0KGlucHV0LCBpbml0KS50aGVuKGZ1bmN0aW9uKHRleHQpIHtcbiAgICAgIHJldHVybiAobmV3IERPTVBhcnNlcikucGFyc2VGcm9tU3RyaW5nKHRleHQsIHR5cGUpO1xuICAgIH0pO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBwYXJzZXIoXCJhcHBsaWNhdGlvbi94bWxcIik7XG5cbmV4cG9ydCB2YXIgaHRtbCA9IHBhcnNlcihcInRleHQvaHRtbFwiKTtcblxuZXhwb3J0IHZhciBzdmcgPSBwYXJzZXIoXCJpbWFnZS9zdmcreG1sXCIpO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCwgeSkge1xuICB2YXIgbm9kZXM7XG5cbiAgaWYgKHggPT0gbnVsbCkgeCA9IDA7XG4gIGlmICh5ID09IG51bGwpIHkgPSAwO1xuXG4gIGZ1bmN0aW9uIGZvcmNlKCkge1xuICAgIHZhciBpLFxuICAgICAgICBuID0gbm9kZXMubGVuZ3RoLFxuICAgICAgICBub2RlLFxuICAgICAgICBzeCA9IDAsXG4gICAgICAgIHN5ID0gMDtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIG5vZGUgPSBub2Rlc1tpXSwgc3ggKz0gbm9kZS54LCBzeSArPSBub2RlLnk7XG4gICAgfVxuXG4gICAgZm9yIChzeCA9IHN4IC8gbiAtIHgsIHN5ID0gc3kgLyBuIC0geSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIG5vZGUgPSBub2Rlc1tpXSwgbm9kZS54IC09IHN4LCBub2RlLnkgLT0gc3k7XG4gICAgfVxuICB9XG5cbiAgZm9yY2UuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICBub2RlcyA9IF87XG4gIH07XG5cbiAgZm9yY2UueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4ID0gK18sIGZvcmNlKSA6IHg7XG4gIH07XG5cbiAgZm9yY2UueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5ID0gK18sIGZvcmNlKSA6IHk7XG4gIH07XG5cbiAgcmV0dXJuIGZvcmNlO1xufVxuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQgamlnZ2xlIGZyb20gXCIuL2ppZ2dsZVwiO1xuaW1wb3J0IHtxdWFkdHJlZX0gZnJvbSBcImQzLXF1YWR0cmVlXCI7XG5cbmZ1bmN0aW9uIHgoZCkge1xuICByZXR1cm4gZC54ICsgZC52eDtcbn1cblxuZnVuY3Rpb24geShkKSB7XG4gIHJldHVybiBkLnkgKyBkLnZ5O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihyYWRpdXMpIHtcbiAgdmFyIG5vZGVzLFxuICAgICAgcmFkaWksXG4gICAgICBzdHJlbmd0aCA9IDEsXG4gICAgICBpdGVyYXRpb25zID0gMTtcblxuICBpZiAodHlwZW9mIHJhZGl1cyAhPT0gXCJmdW5jdGlvblwiKSByYWRpdXMgPSBjb25zdGFudChyYWRpdXMgPT0gbnVsbCA/IDEgOiArcmFkaXVzKTtcblxuICBmdW5jdGlvbiBmb3JjZSgpIHtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aCxcbiAgICAgICAgdHJlZSxcbiAgICAgICAgbm9kZSxcbiAgICAgICAgeGksXG4gICAgICAgIHlpLFxuICAgICAgICByaSxcbiAgICAgICAgcmkyO1xuXG4gICAgZm9yICh2YXIgayA9IDA7IGsgPCBpdGVyYXRpb25zOyArK2spIHtcbiAgICAgIHRyZWUgPSBxdWFkdHJlZShub2RlcywgeCwgeSkudmlzaXRBZnRlcihwcmVwYXJlKTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgbm9kZSA9IG5vZGVzW2ldO1xuICAgICAgICByaSA9IHJhZGlpW25vZGUuaW5kZXhdLCByaTIgPSByaSAqIHJpO1xuICAgICAgICB4aSA9IG5vZGUueCArIG5vZGUudng7XG4gICAgICAgIHlpID0gbm9kZS55ICsgbm9kZS52eTtcbiAgICAgICAgdHJlZS52aXNpdChhcHBseSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYXBwbHkocXVhZCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgICAgIHZhciBkYXRhID0gcXVhZC5kYXRhLCByaiA9IHF1YWQuciwgciA9IHJpICsgcmo7XG4gICAgICBpZiAoZGF0YSkge1xuICAgICAgICBpZiAoZGF0YS5pbmRleCA+IG5vZGUuaW5kZXgpIHtcbiAgICAgICAgICB2YXIgeCA9IHhpIC0gZGF0YS54IC0gZGF0YS52eCxcbiAgICAgICAgICAgICAgeSA9IHlpIC0gZGF0YS55IC0gZGF0YS52eSxcbiAgICAgICAgICAgICAgbCA9IHggKiB4ICsgeSAqIHk7XG4gICAgICAgICAgaWYgKGwgPCByICogcikge1xuICAgICAgICAgICAgaWYgKHggPT09IDApIHggPSBqaWdnbGUoKSwgbCArPSB4ICogeDtcbiAgICAgICAgICAgIGlmICh5ID09PSAwKSB5ID0gamlnZ2xlKCksIGwgKz0geSAqIHk7XG4gICAgICAgICAgICBsID0gKHIgLSAobCA9IE1hdGguc3FydChsKSkpIC8gbCAqIHN0cmVuZ3RoO1xuICAgICAgICAgICAgbm9kZS52eCArPSAoeCAqPSBsKSAqIChyID0gKHJqICo9IHJqKSAvIChyaTIgKyByaikpO1xuICAgICAgICAgICAgbm9kZS52eSArPSAoeSAqPSBsKSAqIHI7XG4gICAgICAgICAgICBkYXRhLnZ4IC09IHggKiAociA9IDEgLSByKTtcbiAgICAgICAgICAgIGRhdGEudnkgLT0geSAqIHI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHJldHVybiB4MCA+IHhpICsgciB8fCB4MSA8IHhpIC0gciB8fCB5MCA+IHlpICsgciB8fCB5MSA8IHlpIC0gcjtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwcmVwYXJlKHF1YWQpIHtcbiAgICBpZiAocXVhZC5kYXRhKSByZXR1cm4gcXVhZC5yID0gcmFkaWlbcXVhZC5kYXRhLmluZGV4XTtcbiAgICBmb3IgKHZhciBpID0gcXVhZC5yID0gMDsgaSA8IDQ7ICsraSkge1xuICAgICAgaWYgKHF1YWRbaV0gJiYgcXVhZFtpXS5yID4gcXVhZC5yKSB7XG4gICAgICAgIHF1YWQuciA9IHF1YWRbaV0ucjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xuICAgIGlmICghbm9kZXMpIHJldHVybjtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aCwgbm9kZTtcbiAgICByYWRpaSA9IG5ldyBBcnJheShuKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBub2RlID0gbm9kZXNbaV0sIHJhZGlpW25vZGUuaW5kZXhdID0gK3JhZGl1cyhub2RlLCBpLCBub2Rlcyk7XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oXykge1xuICAgIG5vZGVzID0gXztcbiAgICBpbml0aWFsaXplKCk7XG4gIH07XG5cbiAgZm9yY2UuaXRlcmF0aW9ucyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpdGVyYXRpb25zID0gK18sIGZvcmNlKSA6IGl0ZXJhdGlvbnM7XG4gIH07XG5cbiAgZm9yY2Uuc3RyZW5ndGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RyZW5ndGggPSArXywgZm9yY2UpIDogc3RyZW5ndGg7XG4gIH07XG5cbiAgZm9yY2UucmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBpbml0aWFsaXplKCksIGZvcmNlKSA6IHJhZGl1cztcbiAgfTtcblxuICByZXR1cm4gZm9yY2U7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBmb3JjZUNlbnRlcn0gZnJvbSBcIi4vY2VudGVyXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZm9yY2VDb2xsaWRlfSBmcm9tIFwiLi9jb2xsaWRlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZm9yY2VMaW5rfSBmcm9tIFwiLi9saW5rXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZm9yY2VNYW55Qm9keX0gZnJvbSBcIi4vbWFueUJvZHlcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBmb3JjZVJhZGlhbH0gZnJvbSBcIi4vcmFkaWFsXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZm9yY2VTaW11bGF0aW9ufSBmcm9tIFwiLi9zaW11bGF0aW9uXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZm9yY2VYfSBmcm9tIFwiLi94XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZm9yY2VZfSBmcm9tIFwiLi95XCI7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIChNYXRoLnJhbmRvbSgpIC0gMC41KSAqIDFlLTY7XG59XG4iLCJpbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBqaWdnbGUgZnJvbSBcIi4vamlnZ2xlXCI7XG5pbXBvcnQge21hcH0gZnJvbSBcImQzLWNvbGxlY3Rpb25cIjtcblxuZnVuY3Rpb24gaW5kZXgoZCkge1xuICByZXR1cm4gZC5pbmRleDtcbn1cblxuZnVuY3Rpb24gZmluZChub2RlQnlJZCwgbm9kZUlkKSB7XG4gIHZhciBub2RlID0gbm9kZUJ5SWQuZ2V0KG5vZGVJZCk7XG4gIGlmICghbm9kZSkgdGhyb3cgbmV3IEVycm9yKFwibWlzc2luZzogXCIgKyBub2RlSWQpO1xuICByZXR1cm4gbm9kZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obGlua3MpIHtcbiAgdmFyIGlkID0gaW5kZXgsXG4gICAgICBzdHJlbmd0aCA9IGRlZmF1bHRTdHJlbmd0aCxcbiAgICAgIHN0cmVuZ3RocyxcbiAgICAgIGRpc3RhbmNlID0gY29uc3RhbnQoMzApLFxuICAgICAgZGlzdGFuY2VzLFxuICAgICAgbm9kZXMsXG4gICAgICBjb3VudCxcbiAgICAgIGJpYXMsXG4gICAgICBpdGVyYXRpb25zID0gMTtcblxuICBpZiAobGlua3MgPT0gbnVsbCkgbGlua3MgPSBbXTtcblxuICBmdW5jdGlvbiBkZWZhdWx0U3RyZW5ndGgobGluaykge1xuICAgIHJldHVybiAxIC8gTWF0aC5taW4oY291bnRbbGluay5zb3VyY2UuaW5kZXhdLCBjb3VudFtsaW5rLnRhcmdldC5pbmRleF0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9yY2UoYWxwaGEpIHtcbiAgICBmb3IgKHZhciBrID0gMCwgbiA9IGxpbmtzLmxlbmd0aDsgayA8IGl0ZXJhdGlvbnM7ICsraykge1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGxpbmssIHNvdXJjZSwgdGFyZ2V0LCB4LCB5LCBsLCBiOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGxpbmsgPSBsaW5rc1tpXSwgc291cmNlID0gbGluay5zb3VyY2UsIHRhcmdldCA9IGxpbmsudGFyZ2V0O1xuICAgICAgICB4ID0gdGFyZ2V0LnggKyB0YXJnZXQudnggLSBzb3VyY2UueCAtIHNvdXJjZS52eCB8fCBqaWdnbGUoKTtcbiAgICAgICAgeSA9IHRhcmdldC55ICsgdGFyZ2V0LnZ5IC0gc291cmNlLnkgLSBzb3VyY2UudnkgfHwgamlnZ2xlKCk7XG4gICAgICAgIGwgPSBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSk7XG4gICAgICAgIGwgPSAobCAtIGRpc3RhbmNlc1tpXSkgLyBsICogYWxwaGEgKiBzdHJlbmd0aHNbaV07XG4gICAgICAgIHggKj0gbCwgeSAqPSBsO1xuICAgICAgICB0YXJnZXQudnggLT0geCAqIChiID0gYmlhc1tpXSk7XG4gICAgICAgIHRhcmdldC52eSAtPSB5ICogYjtcbiAgICAgICAgc291cmNlLnZ4ICs9IHggKiAoYiA9IDEgLSBiKTtcbiAgICAgICAgc291cmNlLnZ5ICs9IHkgKiBiO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgaWYgKCFub2RlcykgcmV0dXJuO1xuXG4gICAgdmFyIGksXG4gICAgICAgIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICAgIG0gPSBsaW5rcy5sZW5ndGgsXG4gICAgICAgIG5vZGVCeUlkID0gbWFwKG5vZGVzLCBpZCksXG4gICAgICAgIGxpbms7XG5cbiAgICBmb3IgKGkgPSAwLCBjb3VudCA9IG5ldyBBcnJheShuKTsgaSA8IG07ICsraSkge1xuICAgICAgbGluayA9IGxpbmtzW2ldLCBsaW5rLmluZGV4ID0gaTtcbiAgICAgIGlmICh0eXBlb2YgbGluay5zb3VyY2UgIT09IFwib2JqZWN0XCIpIGxpbmsuc291cmNlID0gZmluZChub2RlQnlJZCwgbGluay5zb3VyY2UpO1xuICAgICAgaWYgKHR5cGVvZiBsaW5rLnRhcmdldCAhPT0gXCJvYmplY3RcIikgbGluay50YXJnZXQgPSBmaW5kKG5vZGVCeUlkLCBsaW5rLnRhcmdldCk7XG4gICAgICBjb3VudFtsaW5rLnNvdXJjZS5pbmRleF0gPSAoY291bnRbbGluay5zb3VyY2UuaW5kZXhdIHx8IDApICsgMTtcbiAgICAgIGNvdW50W2xpbmsudGFyZ2V0LmluZGV4XSA9IChjb3VudFtsaW5rLnRhcmdldC5pbmRleF0gfHwgMCkgKyAxO1xuICAgIH1cblxuICAgIGZvciAoaSA9IDAsIGJpYXMgPSBuZXcgQXJyYXkobSk7IGkgPCBtOyArK2kpIHtcbiAgICAgIGxpbmsgPSBsaW5rc1tpXSwgYmlhc1tpXSA9IGNvdW50W2xpbmsuc291cmNlLmluZGV4XSAvIChjb3VudFtsaW5rLnNvdXJjZS5pbmRleF0gKyBjb3VudFtsaW5rLnRhcmdldC5pbmRleF0pO1xuICAgIH1cblxuICAgIHN0cmVuZ3RocyA9IG5ldyBBcnJheShtKSwgaW5pdGlhbGl6ZVN0cmVuZ3RoKCk7XG4gICAgZGlzdGFuY2VzID0gbmV3IEFycmF5KG0pLCBpbml0aWFsaXplRGlzdGFuY2UoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemVTdHJlbmd0aCgpIHtcbiAgICBpZiAoIW5vZGVzKSByZXR1cm47XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IGxpbmtzLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgc3RyZW5ndGhzW2ldID0gK3N0cmVuZ3RoKGxpbmtzW2ldLCBpLCBsaW5rcyk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZURpc3RhbmNlKCkge1xuICAgIGlmICghbm9kZXMpIHJldHVybjtcblxuICAgIGZvciAodmFyIGkgPSAwLCBuID0gbGlua3MubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICBkaXN0YW5jZXNbaV0gPSArZGlzdGFuY2UobGlua3NbaV0sIGksIGxpbmtzKTtcbiAgICB9XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oXykge1xuICAgIG5vZGVzID0gXztcbiAgICBpbml0aWFsaXplKCk7XG4gIH07XG5cbiAgZm9yY2UubGlua3MgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobGlua3MgPSBfLCBpbml0aWFsaXplKCksIGZvcmNlKSA6IGxpbmtzO1xuICB9O1xuXG4gIGZvcmNlLmlkID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGlkID0gXywgZm9yY2UpIDogaWQ7XG4gIH07XG5cbiAgZm9yY2UuaXRlcmF0aW9ucyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpdGVyYXRpb25zID0gK18sIGZvcmNlKSA6IGl0ZXJhdGlvbnM7XG4gIH07XG5cbiAgZm9yY2Uuc3RyZW5ndGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RyZW5ndGggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZVN0cmVuZ3RoKCksIGZvcmNlKSA6IHN0cmVuZ3RoO1xuICB9O1xuXG4gIGZvcmNlLmRpc3RhbmNlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRpc3RhbmNlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemVEaXN0YW5jZSgpLCBmb3JjZSkgOiBkaXN0YW5jZTtcbiAgfTtcblxuICByZXR1cm4gZm9yY2U7XG59XG4iLCJpbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBqaWdnbGUgZnJvbSBcIi4vamlnZ2xlXCI7XG5pbXBvcnQge3F1YWR0cmVlfSBmcm9tIFwiZDMtcXVhZHRyZWVcIjtcbmltcG9ydCB7eCwgeX0gZnJvbSBcIi4vc2ltdWxhdGlvblwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIG5vZGVzLFxuICAgICAgbm9kZSxcbiAgICAgIGFscGhhLFxuICAgICAgc3RyZW5ndGggPSBjb25zdGFudCgtMzApLFxuICAgICAgc3RyZW5ndGhzLFxuICAgICAgZGlzdGFuY2VNaW4yID0gMSxcbiAgICAgIGRpc3RhbmNlTWF4MiA9IEluZmluaXR5LFxuICAgICAgdGhldGEyID0gMC44MTtcblxuICBmdW5jdGlvbiBmb3JjZShfKSB7XG4gICAgdmFyIGksIG4gPSBub2Rlcy5sZW5ndGgsIHRyZWUgPSBxdWFkdHJlZShub2RlcywgeCwgeSkudmlzaXRBZnRlcihhY2N1bXVsYXRlKTtcbiAgICBmb3IgKGFscGhhID0gXywgaSA9IDA7IGkgPCBuOyArK2kpIG5vZGUgPSBub2Rlc1tpXSwgdHJlZS52aXNpdChhcHBseSk7XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xuICAgIGlmICghbm9kZXMpIHJldHVybjtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aCwgbm9kZTtcbiAgICBzdHJlbmd0aHMgPSBuZXcgQXJyYXkobik7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkgbm9kZSA9IG5vZGVzW2ldLCBzdHJlbmd0aHNbbm9kZS5pbmRleF0gPSArc3RyZW5ndGgobm9kZSwgaSwgbm9kZXMpO1xuICB9XG5cbiAgZnVuY3Rpb24gYWNjdW11bGF0ZShxdWFkKSB7XG4gICAgdmFyIHN0cmVuZ3RoID0gMCwgcSwgYywgd2VpZ2h0ID0gMCwgeCwgeSwgaTtcblxuICAgIC8vIEZvciBpbnRlcm5hbCBub2RlcywgYWNjdW11bGF0ZSBmb3JjZXMgZnJvbSBjaGlsZCBxdWFkcmFudHMuXG4gICAgaWYgKHF1YWQubGVuZ3RoKSB7XG4gICAgICBmb3IgKHggPSB5ID0gaSA9IDA7IGkgPCA0OyArK2kpIHtcbiAgICAgICAgaWYgKChxID0gcXVhZFtpXSkgJiYgKGMgPSBNYXRoLmFicyhxLnZhbHVlKSkpIHtcbiAgICAgICAgICBzdHJlbmd0aCArPSBxLnZhbHVlLCB3ZWlnaHQgKz0gYywgeCArPSBjICogcS54LCB5ICs9IGMgKiBxLnk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHF1YWQueCA9IHggLyB3ZWlnaHQ7XG4gICAgICBxdWFkLnkgPSB5IC8gd2VpZ2h0O1xuICAgIH1cblxuICAgIC8vIEZvciBsZWFmIG5vZGVzLCBhY2N1bXVsYXRlIGZvcmNlcyBmcm9tIGNvaW5jaWRlbnQgcXVhZHJhbnRzLlxuICAgIGVsc2Uge1xuICAgICAgcSA9IHF1YWQ7XG4gICAgICBxLnggPSBxLmRhdGEueDtcbiAgICAgIHEueSA9IHEuZGF0YS55O1xuICAgICAgZG8gc3RyZW5ndGggKz0gc3RyZW5ndGhzW3EuZGF0YS5pbmRleF07XG4gICAgICB3aGlsZSAocSA9IHEubmV4dCk7XG4gICAgfVxuXG4gICAgcXVhZC52YWx1ZSA9IHN0cmVuZ3RoO1xuICB9XG5cbiAgZnVuY3Rpb24gYXBwbHkocXVhZCwgeDEsIF8sIHgyKSB7XG4gICAgaWYgKCFxdWFkLnZhbHVlKSByZXR1cm4gdHJ1ZTtcblxuICAgIHZhciB4ID0gcXVhZC54IC0gbm9kZS54LFxuICAgICAgICB5ID0gcXVhZC55IC0gbm9kZS55LFxuICAgICAgICB3ID0geDIgLSB4MSxcbiAgICAgICAgbCA9IHggKiB4ICsgeSAqIHk7XG5cbiAgICAvLyBBcHBseSB0aGUgQmFybmVzLUh1dCBhcHByb3hpbWF0aW9uIGlmIHBvc3NpYmxlLlxuICAgIC8vIExpbWl0IGZvcmNlcyBmb3IgdmVyeSBjbG9zZSBub2RlczsgcmFuZG9taXplIGRpcmVjdGlvbiBpZiBjb2luY2lkZW50LlxuICAgIGlmICh3ICogdyAvIHRoZXRhMiA8IGwpIHtcbiAgICAgIGlmIChsIDwgZGlzdGFuY2VNYXgyKSB7XG4gICAgICAgIGlmICh4ID09PSAwKSB4ID0gamlnZ2xlKCksIGwgKz0geCAqIHg7XG4gICAgICAgIGlmICh5ID09PSAwKSB5ID0gamlnZ2xlKCksIGwgKz0geSAqIHk7XG4gICAgICAgIGlmIChsIDwgZGlzdGFuY2VNaW4yKSBsID0gTWF0aC5zcXJ0KGRpc3RhbmNlTWluMiAqIGwpO1xuICAgICAgICBub2RlLnZ4ICs9IHggKiBxdWFkLnZhbHVlICogYWxwaGEgLyBsO1xuICAgICAgICBub2RlLnZ5ICs9IHkgKiBxdWFkLnZhbHVlICogYWxwaGEgLyBsO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgLy8gT3RoZXJ3aXNlLCBwcm9jZXNzIHBvaW50cyBkaXJlY3RseS5cbiAgICBlbHNlIGlmIChxdWFkLmxlbmd0aCB8fCBsID49IGRpc3RhbmNlTWF4MikgcmV0dXJuO1xuXG4gICAgLy8gTGltaXQgZm9yY2VzIGZvciB2ZXJ5IGNsb3NlIG5vZGVzOyByYW5kb21pemUgZGlyZWN0aW9uIGlmIGNvaW5jaWRlbnQuXG4gICAgaWYgKHF1YWQuZGF0YSAhPT0gbm9kZSB8fCBxdWFkLm5leHQpIHtcbiAgICAgIGlmICh4ID09PSAwKSB4ID0gamlnZ2xlKCksIGwgKz0geCAqIHg7XG4gICAgICBpZiAoeSA9PT0gMCkgeSA9IGppZ2dsZSgpLCBsICs9IHkgKiB5O1xuICAgICAgaWYgKGwgPCBkaXN0YW5jZU1pbjIpIGwgPSBNYXRoLnNxcnQoZGlzdGFuY2VNaW4yICogbCk7XG4gICAgfVxuXG4gICAgZG8gaWYgKHF1YWQuZGF0YSAhPT0gbm9kZSkge1xuICAgICAgdyA9IHN0cmVuZ3Roc1txdWFkLmRhdGEuaW5kZXhdICogYWxwaGEgLyBsO1xuICAgICAgbm9kZS52eCArPSB4ICogdztcbiAgICAgIG5vZGUudnkgKz0geSAqIHc7XG4gICAgfSB3aGlsZSAocXVhZCA9IHF1YWQubmV4dCk7XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oXykge1xuICAgIG5vZGVzID0gXztcbiAgICBpbml0aWFsaXplKCk7XG4gIH07XG5cbiAgZm9yY2Uuc3RyZW5ndGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RyZW5ndGggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZSgpLCBmb3JjZSkgOiBzdHJlbmd0aDtcbiAgfTtcblxuICBmb3JjZS5kaXN0YW5jZU1pbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkaXN0YW5jZU1pbjIgPSBfICogXywgZm9yY2UpIDogTWF0aC5zcXJ0KGRpc3RhbmNlTWluMik7XG4gIH07XG5cbiAgZm9yY2UuZGlzdGFuY2VNYXggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZGlzdGFuY2VNYXgyID0gXyAqIF8sIGZvcmNlKSA6IE1hdGguc3FydChkaXN0YW5jZU1heDIpO1xuICB9O1xuXG4gIGZvcmNlLnRoZXRhID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoZXRhMiA9IF8gKiBfLCBmb3JjZSkgOiBNYXRoLnNxcnQodGhldGEyKTtcbiAgfTtcblxuICByZXR1cm4gZm9yY2U7XG59XG4iLCJpbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocmFkaXVzLCB4LCB5KSB7XG4gIHZhciBub2RlcyxcbiAgICAgIHN0cmVuZ3RoID0gY29uc3RhbnQoMC4xKSxcbiAgICAgIHN0cmVuZ3RocyxcbiAgICAgIHJhZGl1c2VzO1xuXG4gIGlmICh0eXBlb2YgcmFkaXVzICE9PSBcImZ1bmN0aW9uXCIpIHJhZGl1cyA9IGNvbnN0YW50KCtyYWRpdXMpO1xuICBpZiAoeCA9PSBudWxsKSB4ID0gMDtcbiAgaWYgKHkgPT0gbnVsbCkgeSA9IDA7XG5cbiAgZnVuY3Rpb24gZm9yY2UoYWxwaGEpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IG5vZGVzLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgdmFyIG5vZGUgPSBub2Rlc1tpXSxcbiAgICAgICAgICBkeCA9IG5vZGUueCAtIHggfHwgMWUtNixcbiAgICAgICAgICBkeSA9IG5vZGUueSAtIHkgfHwgMWUtNixcbiAgICAgICAgICByID0gTWF0aC5zcXJ0KGR4ICogZHggKyBkeSAqIGR5KSxcbiAgICAgICAgICBrID0gKHJhZGl1c2VzW2ldIC0gcikgKiBzdHJlbmd0aHNbaV0gKiBhbHBoYSAvIHI7XG4gICAgICBub2RlLnZ4ICs9IGR4ICogaztcbiAgICAgIG5vZGUudnkgKz0gZHkgKiBrO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgaWYgKCFub2RlcykgcmV0dXJuO1xuICAgIHZhciBpLCBuID0gbm9kZXMubGVuZ3RoO1xuICAgIHN0cmVuZ3RocyA9IG5ldyBBcnJheShuKTtcbiAgICByYWRpdXNlcyA9IG5ldyBBcnJheShuKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICByYWRpdXNlc1tpXSA9ICtyYWRpdXMobm9kZXNbaV0sIGksIG5vZGVzKTtcbiAgICAgIHN0cmVuZ3Roc1tpXSA9IGlzTmFOKHJhZGl1c2VzW2ldKSA/IDAgOiArc3RyZW5ndGgobm9kZXNbaV0sIGksIG5vZGVzKTtcbiAgICB9XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oXykge1xuICAgIG5vZGVzID0gXywgaW5pdGlhbGl6ZSgpO1xuICB9O1xuXG4gIGZvcmNlLnN0cmVuZ3RoID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0cmVuZ3RoID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemUoKSwgZm9yY2UpIDogc3RyZW5ndGg7XG4gIH07XG5cbiAgZm9yY2UucmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBpbml0aWFsaXplKCksIGZvcmNlKSA6IHJhZGl1cztcbiAgfTtcblxuICBmb3JjZS54ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSArXywgZm9yY2UpIDogeDtcbiAgfTtcblxuICBmb3JjZS55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSArXywgZm9yY2UpIDogeTtcbiAgfTtcblxuICByZXR1cm4gZm9yY2U7XG59XG4iLCJpbXBvcnQge2Rpc3BhdGNofSBmcm9tIFwiZDMtZGlzcGF0Y2hcIjtcbmltcG9ydCB7bWFwfSBmcm9tIFwiZDMtY29sbGVjdGlvblwiO1xuaW1wb3J0IHt0aW1lcn0gZnJvbSBcImQzLXRpbWVyXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB4KGQpIHtcbiAgcmV0dXJuIGQueDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHkoZCkge1xuICByZXR1cm4gZC55O1xufVxuXG52YXIgaW5pdGlhbFJhZGl1cyA9IDEwLFxuICAgIGluaXRpYWxBbmdsZSA9IE1hdGguUEkgKiAoMyAtIE1hdGguc3FydCg1KSk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGVzKSB7XG4gIHZhciBzaW11bGF0aW9uLFxuICAgICAgYWxwaGEgPSAxLFxuICAgICAgYWxwaGFNaW4gPSAwLjAwMSxcbiAgICAgIGFscGhhRGVjYXkgPSAxIC0gTWF0aC5wb3coYWxwaGFNaW4sIDEgLyAzMDApLFxuICAgICAgYWxwaGFUYXJnZXQgPSAwLFxuICAgICAgdmVsb2NpdHlEZWNheSA9IDAuNixcbiAgICAgIGZvcmNlcyA9IG1hcCgpLFxuICAgICAgc3RlcHBlciA9IHRpbWVyKHN0ZXApLFxuICAgICAgZXZlbnQgPSBkaXNwYXRjaChcInRpY2tcIiwgXCJlbmRcIik7XG5cbiAgaWYgKG5vZGVzID09IG51bGwpIG5vZGVzID0gW107XG5cbiAgZnVuY3Rpb24gc3RlcCgpIHtcbiAgICB0aWNrKCk7XG4gICAgZXZlbnQuY2FsbChcInRpY2tcIiwgc2ltdWxhdGlvbik7XG4gICAgaWYgKGFscGhhIDwgYWxwaGFNaW4pIHtcbiAgICAgIHN0ZXBwZXIuc3RvcCgpO1xuICAgICAgZXZlbnQuY2FsbChcImVuZFwiLCBzaW11bGF0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB0aWNrKGl0ZXJhdGlvbnMpIHtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aCwgbm9kZTtcblxuICAgIGlmIChpdGVyYXRpb25zID09PSB1bmRlZmluZWQpIGl0ZXJhdGlvbnMgPSAxO1xuXG4gICAgZm9yICh2YXIgayA9IDA7IGsgPCBpdGVyYXRpb25zOyArK2spIHtcbiAgICAgIGFscGhhICs9IChhbHBoYVRhcmdldCAtIGFscGhhKSAqIGFscGhhRGVjYXk7XG5cbiAgICAgIGZvcmNlcy5lYWNoKGZ1bmN0aW9uIChmb3JjZSkge1xuICAgICAgICBmb3JjZShhbHBoYSk7XG4gICAgICB9KTtcblxuICAgICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICBub2RlID0gbm9kZXNbaV07XG4gICAgICAgIGlmIChub2RlLmZ4ID09IG51bGwpIG5vZGUueCArPSBub2RlLnZ4ICo9IHZlbG9jaXR5RGVjYXk7XG4gICAgICAgIGVsc2Ugbm9kZS54ID0gbm9kZS5meCwgbm9kZS52eCA9IDA7XG4gICAgICAgIGlmIChub2RlLmZ5ID09IG51bGwpIG5vZGUueSArPSBub2RlLnZ5ICo9IHZlbG9jaXR5RGVjYXk7XG4gICAgICAgIGVsc2Ugbm9kZS55ID0gbm9kZS5meSwgbm9kZS52eSA9IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHNpbXVsYXRpb247XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplTm9kZXMoKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIG4gPSBub2Rlcy5sZW5ndGgsIG5vZGU7IGkgPCBuOyArK2kpIHtcbiAgICAgIG5vZGUgPSBub2Rlc1tpXSwgbm9kZS5pbmRleCA9IGk7XG4gICAgICBpZiAobm9kZS5meCAhPSBudWxsKSBub2RlLnggPSBub2RlLmZ4O1xuICAgICAgaWYgKG5vZGUuZnkgIT0gbnVsbCkgbm9kZS55ID0gbm9kZS5meTtcbiAgICAgIGlmIChpc05hTihub2RlLngpIHx8IGlzTmFOKG5vZGUueSkpIHtcbiAgICAgICAgdmFyIHJhZGl1cyA9IGluaXRpYWxSYWRpdXMgKiBNYXRoLnNxcnQoaSksIGFuZ2xlID0gaSAqIGluaXRpYWxBbmdsZTtcbiAgICAgICAgbm9kZS54ID0gcmFkaXVzICogTWF0aC5jb3MoYW5nbGUpO1xuICAgICAgICBub2RlLnkgPSByYWRpdXMgKiBNYXRoLnNpbihhbmdsZSk7XG4gICAgICB9XG4gICAgICBpZiAoaXNOYU4obm9kZS52eCkgfHwgaXNOYU4obm9kZS52eSkpIHtcbiAgICAgICAgbm9kZS52eCA9IG5vZGUudnkgPSAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemVGb3JjZShmb3JjZSkge1xuICAgIGlmIChmb3JjZS5pbml0aWFsaXplKSBmb3JjZS5pbml0aWFsaXplKG5vZGVzKTtcbiAgICByZXR1cm4gZm9yY2U7XG4gIH1cblxuICBpbml0aWFsaXplTm9kZXMoKTtcblxuICByZXR1cm4gc2ltdWxhdGlvbiA9IHtcbiAgICB0aWNrOiB0aWNrLFxuXG4gICAgcmVzdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gc3RlcHBlci5yZXN0YXJ0KHN0ZXApLCBzaW11bGF0aW9uO1xuICAgIH0sXG5cbiAgICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBzdGVwcGVyLnN0b3AoKSwgc2ltdWxhdGlvbjtcbiAgICB9LFxuXG4gICAgbm9kZXM6IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG5vZGVzID0gXywgaW5pdGlhbGl6ZU5vZGVzKCksIGZvcmNlcy5lYWNoKGluaXRpYWxpemVGb3JjZSksIHNpbXVsYXRpb24pIDogbm9kZXM7XG4gICAgfSxcblxuICAgIGFscGhhOiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhbHBoYSA9ICtfLCBzaW11bGF0aW9uKSA6IGFscGhhO1xuICAgIH0sXG5cbiAgICBhbHBoYU1pbjogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYWxwaGFNaW4gPSArXywgc2ltdWxhdGlvbikgOiBhbHBoYU1pbjtcbiAgICB9LFxuXG4gICAgYWxwaGFEZWNheTogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYWxwaGFEZWNheSA9ICtfLCBzaW11bGF0aW9uKSA6ICthbHBoYURlY2F5O1xuICAgIH0sXG5cbiAgICBhbHBoYVRhcmdldDogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYWxwaGFUYXJnZXQgPSArXywgc2ltdWxhdGlvbikgOiBhbHBoYVRhcmdldDtcbiAgICB9LFxuXG4gICAgdmVsb2NpdHlEZWNheTogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodmVsb2NpdHlEZWNheSA9IDEgLSBfLCBzaW11bGF0aW9uKSA6IDEgLSB2ZWxvY2l0eURlY2F5O1xuICAgIH0sXG5cbiAgICBmb3JjZTogZnVuY3Rpb24obmFtZSwgXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gKChfID09IG51bGwgPyBmb3JjZXMucmVtb3ZlKG5hbWUpIDogZm9yY2VzLnNldChuYW1lLCBpbml0aWFsaXplRm9yY2UoXykpKSwgc2ltdWxhdGlvbikgOiBmb3JjZXMuZ2V0KG5hbWUpO1xuICAgIH0sXG5cbiAgICBmaW5kOiBmdW5jdGlvbih4LCB5LCByYWRpdXMpIHtcbiAgICAgIHZhciBpID0gMCxcbiAgICAgICAgICBuID0gbm9kZXMubGVuZ3RoLFxuICAgICAgICAgIGR4LFxuICAgICAgICAgIGR5LFxuICAgICAgICAgIGQyLFxuICAgICAgICAgIG5vZGUsXG4gICAgICAgICAgY2xvc2VzdDtcblxuICAgICAgaWYgKHJhZGl1cyA9PSBudWxsKSByYWRpdXMgPSBJbmZpbml0eTtcbiAgICAgIGVsc2UgcmFkaXVzICo9IHJhZGl1cztcblxuICAgICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICBub2RlID0gbm9kZXNbaV07XG4gICAgICAgIGR4ID0geCAtIG5vZGUueDtcbiAgICAgICAgZHkgPSB5IC0gbm9kZS55O1xuICAgICAgICBkMiA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgICAgICBpZiAoZDIgPCByYWRpdXMpIGNsb3Nlc3QgPSBub2RlLCByYWRpdXMgPSBkMjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNsb3Nlc3Q7XG4gICAgfSxcblxuICAgIG9uOiBmdW5jdGlvbihuYW1lLCBfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyAoZXZlbnQub24obmFtZSwgXyksIHNpbXVsYXRpb24pIDogZXZlbnQub24obmFtZSk7XG4gICAgfVxuICB9O1xufVxuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgdmFyIHN0cmVuZ3RoID0gY29uc3RhbnQoMC4xKSxcbiAgICAgIG5vZGVzLFxuICAgICAgc3RyZW5ndGhzLFxuICAgICAgeHo7XG5cbiAgaWYgKHR5cGVvZiB4ICE9PSBcImZ1bmN0aW9uXCIpIHggPSBjb25zdGFudCh4ID09IG51bGwgPyAwIDogK3gpO1xuXG4gIGZ1bmN0aW9uIGZvcmNlKGFscGhhKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIG4gPSBub2Rlcy5sZW5ndGgsIG5vZGU7IGkgPCBuOyArK2kpIHtcbiAgICAgIG5vZGUgPSBub2Rlc1tpXSwgbm9kZS52eCArPSAoeHpbaV0gLSBub2RlLngpICogc3RyZW5ndGhzW2ldICogYWxwaGE7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcbiAgICBpZiAoIW5vZGVzKSByZXR1cm47XG4gICAgdmFyIGksIG4gPSBub2Rlcy5sZW5ndGg7XG4gICAgc3RyZW5ndGhzID0gbmV3IEFycmF5KG4pO1xuICAgIHh6ID0gbmV3IEFycmF5KG4pO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHN0cmVuZ3Roc1tpXSA9IGlzTmFOKHh6W2ldID0gK3gobm9kZXNbaV0sIGksIG5vZGVzKSkgPyAwIDogK3N0cmVuZ3RoKG5vZGVzW2ldLCBpLCBub2Rlcyk7XG4gICAgfVxuICB9XG5cbiAgZm9yY2UuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICBub2RlcyA9IF87XG4gICAgaW5pdGlhbGl6ZSgpO1xuICB9O1xuXG4gIGZvcmNlLnN0cmVuZ3RoID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0cmVuZ3RoID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemUoKSwgZm9yY2UpIDogc3RyZW5ndGg7XG4gIH07XG5cbiAgZm9yY2UueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemUoKSwgZm9yY2UpIDogeDtcbiAgfTtcblxuICByZXR1cm4gZm9yY2U7XG59XG4iLCJpbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeSkge1xuICB2YXIgc3RyZW5ndGggPSBjb25zdGFudCgwLjEpLFxuICAgICAgbm9kZXMsXG4gICAgICBzdHJlbmd0aHMsXG4gICAgICB5ejtcblxuICBpZiAodHlwZW9mIHkgIT09IFwiZnVuY3Rpb25cIikgeSA9IGNvbnN0YW50KHkgPT0gbnVsbCA/IDAgOiAreSk7XG5cbiAgZnVuY3Rpb24gZm9yY2UoYWxwaGEpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IG5vZGVzLmxlbmd0aCwgbm9kZTsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlLnZ5ICs9ICh5eltpXSAtIG5vZGUueSkgKiBzdHJlbmd0aHNbaV0gKiBhbHBoYTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xuICAgIGlmICghbm9kZXMpIHJldHVybjtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aDtcbiAgICBzdHJlbmd0aHMgPSBuZXcgQXJyYXkobik7XG4gICAgeXogPSBuZXcgQXJyYXkobik7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgc3RyZW5ndGhzW2ldID0gaXNOYU4oeXpbaV0gPSAreShub2Rlc1tpXSwgaSwgbm9kZXMpKSA/IDAgOiArc3RyZW5ndGgobm9kZXNbaV0sIGksIG5vZGVzKTtcbiAgICB9XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oXykge1xuICAgIG5vZGVzID0gXztcbiAgICBpbml0aWFsaXplKCk7XG4gIH07XG5cbiAgZm9yY2Uuc3RyZW5ndGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RyZW5ndGggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZSgpLCBmb3JjZSkgOiBzdHJlbmd0aDtcbiAgfTtcblxuICBmb3JjZS55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZSgpLCBmb3JjZSkgOiB5O1xuICB9O1xuXG4gIHJldHVybiBmb3JjZTtcbn1cbiIsImltcG9ydCBmb3JtYXRMb2NhbGUgZnJvbSBcIi4vbG9jYWxlXCI7XG5cbnZhciBsb2NhbGU7XG5leHBvcnQgdmFyIGZvcm1hdDtcbmV4cG9ydCB2YXIgZm9ybWF0UHJlZml4O1xuXG5kZWZhdWx0TG9jYWxlKHtcbiAgZGVjaW1hbDogXCIuXCIsXG4gIHRob3VzYW5kczogXCIsXCIsXG4gIGdyb3VwaW5nOiBbM10sXG4gIGN1cnJlbmN5OiBbXCIkXCIsIFwiXCJdXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGVmYXVsdExvY2FsZShkZWZpbml0aW9uKSB7XG4gIGxvY2FsZSA9IGZvcm1hdExvY2FsZShkZWZpbml0aW9uKTtcbiAgZm9ybWF0ID0gbG9jYWxlLmZvcm1hdDtcbiAgZm9ybWF0UHJlZml4ID0gbG9jYWxlLmZvcm1hdFByZWZpeDtcbiAgcmV0dXJuIGxvY2FsZTtcbn1cbiIsImltcG9ydCBmb3JtYXREZWNpbWFsIGZyb20gXCIuL2Zvcm1hdERlY2ltYWxcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4geCA9IGZvcm1hdERlY2ltYWwoTWF0aC5hYnMoeCkpLCB4ID8geFsxXSA6IE5hTjtcbn1cbiIsIi8vIENvbXB1dGVzIHRoZSBkZWNpbWFsIGNvZWZmaWNpZW50IGFuZCBleHBvbmVudCBvZiB0aGUgc3BlY2lmaWVkIG51bWJlciB4IHdpdGhcbi8vIHNpZ25pZmljYW50IGRpZ2l0cyBwLCB3aGVyZSB4IGlzIHBvc2l0aXZlIGFuZCBwIGlzIGluIFsxLCAyMV0gb3IgdW5kZWZpbmVkLlxuLy8gRm9yIGV4YW1wbGUsIGZvcm1hdERlY2ltYWwoMS4yMykgcmV0dXJucyBbXCIxMjNcIiwgMF0uXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4LCBwKSB7XG4gIGlmICgoaSA9ICh4ID0gcCA/IHgudG9FeHBvbmVudGlhbChwIC0gMSkgOiB4LnRvRXhwb25lbnRpYWwoKSkuaW5kZXhPZihcImVcIikpIDwgMCkgcmV0dXJuIG51bGw7IC8vIE5hTiwgwrFJbmZpbml0eVxuICB2YXIgaSwgY29lZmZpY2llbnQgPSB4LnNsaWNlKDAsIGkpO1xuXG4gIC8vIFRoZSBzdHJpbmcgcmV0dXJuZWQgYnkgdG9FeHBvbmVudGlhbCBlaXRoZXIgaGFzIHRoZSBmb3JtIFxcZFxcLlxcZCtlWy0rXVxcZCtcbiAgLy8gKGUuZy4sIDEuMmUrMykgb3IgdGhlIGZvcm0gXFxkZVstK11cXGQrIChlLmcuLCAxZSszKS5cbiAgcmV0dXJuIFtcbiAgICBjb2VmZmljaWVudC5sZW5ndGggPiAxID8gY29lZmZpY2llbnRbMF0gKyBjb2VmZmljaWVudC5zbGljZSgyKSA6IGNvZWZmaWNpZW50LFxuICAgICt4LnNsaWNlKGkgKyAxKVxuICBdO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZ3JvdXBpbmcsIHRob3VzYW5kcykge1xuICByZXR1cm4gZnVuY3Rpb24odmFsdWUsIHdpZHRoKSB7XG4gICAgdmFyIGkgPSB2YWx1ZS5sZW5ndGgsXG4gICAgICAgIHQgPSBbXSxcbiAgICAgICAgaiA9IDAsXG4gICAgICAgIGcgPSBncm91cGluZ1swXSxcbiAgICAgICAgbGVuZ3RoID0gMDtcblxuICAgIHdoaWxlIChpID4gMCAmJiBnID4gMCkge1xuICAgICAgaWYgKGxlbmd0aCArIGcgKyAxID4gd2lkdGgpIGcgPSBNYXRoLm1heCgxLCB3aWR0aCAtIGxlbmd0aCk7XG4gICAgICB0LnB1c2godmFsdWUuc3Vic3RyaW5nKGkgLT0gZywgaSArIGcpKTtcbiAgICAgIGlmICgobGVuZ3RoICs9IGcgKyAxKSA+IHdpZHRoKSBicmVhaztcbiAgICAgIGcgPSBncm91cGluZ1tqID0gKGogKyAxKSAlIGdyb3VwaW5nLmxlbmd0aF07XG4gICAgfVxuXG4gICAgcmV0dXJuIHQucmV2ZXJzZSgpLmpvaW4odGhvdXNhbmRzKTtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG51bWVyYWxzKSB7XG4gIHJldHVybiBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC9bMC05XS9nLCBmdW5jdGlvbihpKSB7XG4gICAgICByZXR1cm4gbnVtZXJhbHNbK2ldO1xuICAgIH0pO1xuICB9O1xufVxuIiwiaW1wb3J0IGZvcm1hdERlY2ltYWwgZnJvbSBcIi4vZm9ybWF0RGVjaW1hbFwiO1xuXG5leHBvcnQgdmFyIHByZWZpeEV4cG9uZW50O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4LCBwKSB7XG4gIHZhciBkID0gZm9ybWF0RGVjaW1hbCh4LCBwKTtcbiAgaWYgKCFkKSByZXR1cm4geCArIFwiXCI7XG4gIHZhciBjb2VmZmljaWVudCA9IGRbMF0sXG4gICAgICBleHBvbmVudCA9IGRbMV0sXG4gICAgICBpID0gZXhwb25lbnQgLSAocHJlZml4RXhwb25lbnQgPSBNYXRoLm1heCgtOCwgTWF0aC5taW4oOCwgTWF0aC5mbG9vcihleHBvbmVudCAvIDMpKSkgKiAzKSArIDEsXG4gICAgICBuID0gY29lZmZpY2llbnQubGVuZ3RoO1xuICByZXR1cm4gaSA9PT0gbiA/IGNvZWZmaWNpZW50XG4gICAgICA6IGkgPiBuID8gY29lZmZpY2llbnQgKyBuZXcgQXJyYXkoaSAtIG4gKyAxKS5qb2luKFwiMFwiKVxuICAgICAgOiBpID4gMCA/IGNvZWZmaWNpZW50LnNsaWNlKDAsIGkpICsgXCIuXCIgKyBjb2VmZmljaWVudC5zbGljZShpKVxuICAgICAgOiBcIjAuXCIgKyBuZXcgQXJyYXkoMSAtIGkpLmpvaW4oXCIwXCIpICsgZm9ybWF0RGVjaW1hbCh4LCBNYXRoLm1heCgwLCBwICsgaSAtIDEpKVswXTsgLy8gbGVzcyB0aGFuIDF5IVxufVxuIiwiaW1wb3J0IGZvcm1hdERlY2ltYWwgZnJvbSBcIi4vZm9ybWF0RGVjaW1hbFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4LCBwKSB7XG4gIHZhciBkID0gZm9ybWF0RGVjaW1hbCh4LCBwKTtcbiAgaWYgKCFkKSByZXR1cm4geCArIFwiXCI7XG4gIHZhciBjb2VmZmljaWVudCA9IGRbMF0sXG4gICAgICBleHBvbmVudCA9IGRbMV07XG4gIHJldHVybiBleHBvbmVudCA8IDAgPyBcIjAuXCIgKyBuZXcgQXJyYXkoLWV4cG9uZW50KS5qb2luKFwiMFwiKSArIGNvZWZmaWNpZW50XG4gICAgICA6IGNvZWZmaWNpZW50Lmxlbmd0aCA+IGV4cG9uZW50ICsgMSA/IGNvZWZmaWNpZW50LnNsaWNlKDAsIGV4cG9uZW50ICsgMSkgKyBcIi5cIiArIGNvZWZmaWNpZW50LnNsaWNlKGV4cG9uZW50ICsgMSlcbiAgICAgIDogY29lZmZpY2llbnQgKyBuZXcgQXJyYXkoZXhwb25lbnQgLSBjb2VmZmljaWVudC5sZW5ndGggKyAyKS5qb2luKFwiMFwiKTtcbn1cbiIsIi8vIFtbZmlsbF1hbGlnbl1bc2lnbl1bc3ltYm9sXVswXVt3aWR0aF1bLF1bLnByZWNpc2lvbl1bfl1bdHlwZV1cbnZhciByZSA9IC9eKD86KC4pPyhbPD49Xl0pKT8oWytcXC0oIF0pPyhbJCNdKT8oMCk/KFxcZCspPygsKT8oXFwuXFxkKyk/KH4pPyhbYS16JV0pPyQvaTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ybWF0U3BlY2lmaWVyKHNwZWNpZmllcikge1xuICByZXR1cm4gbmV3IEZvcm1hdFNwZWNpZmllcihzcGVjaWZpZXIpO1xufVxuXG5mb3JtYXRTcGVjaWZpZXIucHJvdG90eXBlID0gRm9ybWF0U3BlY2lmaWVyLnByb3RvdHlwZTsgLy8gaW5zdGFuY2VvZlxuXG5mdW5jdGlvbiBGb3JtYXRTcGVjaWZpZXIoc3BlY2lmaWVyKSB7XG4gIGlmICghKG1hdGNoID0gcmUuZXhlYyhzcGVjaWZpZXIpKSkgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBmb3JtYXQ6IFwiICsgc3BlY2lmaWVyKTtcbiAgdmFyIG1hdGNoO1xuICB0aGlzLmZpbGwgPSBtYXRjaFsxXSB8fCBcIiBcIjtcbiAgdGhpcy5hbGlnbiA9IG1hdGNoWzJdIHx8IFwiPlwiO1xuICB0aGlzLnNpZ24gPSBtYXRjaFszXSB8fCBcIi1cIjtcbiAgdGhpcy5zeW1ib2wgPSBtYXRjaFs0XSB8fCBcIlwiO1xuICB0aGlzLnplcm8gPSAhIW1hdGNoWzVdO1xuICB0aGlzLndpZHRoID0gbWF0Y2hbNl0gJiYgK21hdGNoWzZdO1xuICB0aGlzLmNvbW1hID0gISFtYXRjaFs3XTtcbiAgdGhpcy5wcmVjaXNpb24gPSBtYXRjaFs4XSAmJiArbWF0Y2hbOF0uc2xpY2UoMSk7XG4gIHRoaXMudHJpbSA9ICEhbWF0Y2hbOV07XG4gIHRoaXMudHlwZSA9IG1hdGNoWzEwXSB8fCBcIlwiO1xufVxuXG5Gb3JtYXRTcGVjaWZpZXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmZpbGxcbiAgICAgICsgdGhpcy5hbGlnblxuICAgICAgKyB0aGlzLnNpZ25cbiAgICAgICsgdGhpcy5zeW1ib2xcbiAgICAgICsgKHRoaXMuemVybyA/IFwiMFwiIDogXCJcIilcbiAgICAgICsgKHRoaXMud2lkdGggPT0gbnVsbCA/IFwiXCIgOiBNYXRoLm1heCgxLCB0aGlzLndpZHRoIHwgMCkpXG4gICAgICArICh0aGlzLmNvbW1hID8gXCIsXCIgOiBcIlwiKVxuICAgICAgKyAodGhpcy5wcmVjaXNpb24gPT0gbnVsbCA/IFwiXCIgOiBcIi5cIiArIE1hdGgubWF4KDAsIHRoaXMucHJlY2lzaW9uIHwgMCkpXG4gICAgICArICh0aGlzLnRyaW0gPyBcIn5cIiA6IFwiXCIpXG4gICAgICArIHRoaXMudHlwZTtcbn07XG4iLCIvLyBUcmltcyBpbnNpZ25pZmljYW50IHplcm9zLCBlLmcuLCByZXBsYWNlcyAxLjIwMDBrIHdpdGggMS4yay5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHMpIHtcbiAgb3V0OiBmb3IgKHZhciBuID0gcy5sZW5ndGgsIGkgPSAxLCBpMCA9IC0xLCBpMTsgaSA8IG47ICsraSkge1xuICAgIHN3aXRjaCAoc1tpXSkge1xuICAgICAgY2FzZSBcIi5cIjogaTAgPSBpMSA9IGk7IGJyZWFrO1xuICAgICAgY2FzZSBcIjBcIjogaWYgKGkwID09PSAwKSBpMCA9IGk7IGkxID0gaTsgYnJlYWs7XG4gICAgICBkZWZhdWx0OiBpZiAoaTAgPiAwKSB7IGlmICghK3NbaV0pIGJyZWFrIG91dDsgaTAgPSAwOyB9IGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gaTAgPiAwID8gcy5zbGljZSgwLCBpMCkgKyBzLnNsaWNlKGkxICsgMSkgOiBzO1xufVxuIiwiaW1wb3J0IGZvcm1hdFByZWZpeEF1dG8gZnJvbSBcIi4vZm9ybWF0UHJlZml4QXV0b1wiO1xuaW1wb3J0IGZvcm1hdFJvdW5kZWQgZnJvbSBcIi4vZm9ybWF0Um91bmRlZFwiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIFwiJVwiOiBmdW5jdGlvbih4LCBwKSB7IHJldHVybiAoeCAqIDEwMCkudG9GaXhlZChwKTsgfSxcbiAgXCJiXCI6IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIE1hdGgucm91bmQoeCkudG9TdHJpbmcoMik7IH0sXG4gIFwiY1wiOiBmdW5jdGlvbih4KSB7IHJldHVybiB4ICsgXCJcIjsgfSxcbiAgXCJkXCI6IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIE1hdGgucm91bmQoeCkudG9TdHJpbmcoMTApOyB9LFxuICBcImVcIjogZnVuY3Rpb24oeCwgcCkgeyByZXR1cm4geC50b0V4cG9uZW50aWFsKHApOyB9LFxuICBcImZcIjogZnVuY3Rpb24oeCwgcCkgeyByZXR1cm4geC50b0ZpeGVkKHApOyB9LFxuICBcImdcIjogZnVuY3Rpb24oeCwgcCkgeyByZXR1cm4geC50b1ByZWNpc2lvbihwKTsgfSxcbiAgXCJvXCI6IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIE1hdGgucm91bmQoeCkudG9TdHJpbmcoOCk7IH0sXG4gIFwicFwiOiBmdW5jdGlvbih4LCBwKSB7IHJldHVybiBmb3JtYXRSb3VuZGVkKHggKiAxMDAsIHApOyB9LFxuICBcInJcIjogZm9ybWF0Um91bmRlZCxcbiAgXCJzXCI6IGZvcm1hdFByZWZpeEF1dG8sXG4gIFwiWFwiOiBmdW5jdGlvbih4KSB7IHJldHVybiBNYXRoLnJvdW5kKHgpLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpOyB9LFxuICBcInhcIjogZnVuY3Rpb24oeCkgeyByZXR1cm4gTWF0aC5yb3VuZCh4KS50b1N0cmluZygxNik7IH1cbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiB4O1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGZvcm1hdERlZmF1bHRMb2NhbGUsIGZvcm1hdCwgZm9ybWF0UHJlZml4fSBmcm9tIFwiLi9kZWZhdWx0TG9jYWxlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZm9ybWF0TG9jYWxlfSBmcm9tIFwiLi9sb2NhbGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBmb3JtYXRTcGVjaWZpZXJ9IGZyb20gXCIuL2Zvcm1hdFNwZWNpZmllclwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHByZWNpc2lvbkZpeGVkfSBmcm9tIFwiLi9wcmVjaXNpb25GaXhlZFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHByZWNpc2lvblByZWZpeH0gZnJvbSBcIi4vcHJlY2lzaW9uUHJlZml4XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcHJlY2lzaW9uUm91bmR9IGZyb20gXCIuL3ByZWNpc2lvblJvdW5kXCI7XG4iLCJpbXBvcnQgZXhwb25lbnQgZnJvbSBcIi4vZXhwb25lbnRcIjtcbmltcG9ydCBmb3JtYXRHcm91cCBmcm9tIFwiLi9mb3JtYXRHcm91cFwiO1xuaW1wb3J0IGZvcm1hdE51bWVyYWxzIGZyb20gXCIuL2Zvcm1hdE51bWVyYWxzXCI7XG5pbXBvcnQgZm9ybWF0U3BlY2lmaWVyIGZyb20gXCIuL2Zvcm1hdFNwZWNpZmllclwiO1xuaW1wb3J0IGZvcm1hdFRyaW0gZnJvbSBcIi4vZm9ybWF0VHJpbVwiO1xuaW1wb3J0IGZvcm1hdFR5cGVzIGZyb20gXCIuL2Zvcm1hdFR5cGVzXCI7XG5pbXBvcnQge3ByZWZpeEV4cG9uZW50fSBmcm9tIFwiLi9mb3JtYXRQcmVmaXhBdXRvXCI7XG5pbXBvcnQgaWRlbnRpdHkgZnJvbSBcIi4vaWRlbnRpdHlcIjtcblxudmFyIHByZWZpeGVzID0gW1wieVwiLFwielwiLFwiYVwiLFwiZlwiLFwicFwiLFwiblwiLFwiwrVcIixcIm1cIixcIlwiLFwia1wiLFwiTVwiLFwiR1wiLFwiVFwiLFwiUFwiLFwiRVwiLFwiWlwiLFwiWVwiXTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obG9jYWxlKSB7XG4gIHZhciBncm91cCA9IGxvY2FsZS5ncm91cGluZyAmJiBsb2NhbGUudGhvdXNhbmRzID8gZm9ybWF0R3JvdXAobG9jYWxlLmdyb3VwaW5nLCBsb2NhbGUudGhvdXNhbmRzKSA6IGlkZW50aXR5LFxuICAgICAgY3VycmVuY3kgPSBsb2NhbGUuY3VycmVuY3ksXG4gICAgICBkZWNpbWFsID0gbG9jYWxlLmRlY2ltYWwsXG4gICAgICBudW1lcmFscyA9IGxvY2FsZS5udW1lcmFscyA/IGZvcm1hdE51bWVyYWxzKGxvY2FsZS5udW1lcmFscykgOiBpZGVudGl0eSxcbiAgICAgIHBlcmNlbnQgPSBsb2NhbGUucGVyY2VudCB8fCBcIiVcIjtcblxuICBmdW5jdGlvbiBuZXdGb3JtYXQoc3BlY2lmaWVyKSB7XG4gICAgc3BlY2lmaWVyID0gZm9ybWF0U3BlY2lmaWVyKHNwZWNpZmllcik7XG5cbiAgICB2YXIgZmlsbCA9IHNwZWNpZmllci5maWxsLFxuICAgICAgICBhbGlnbiA9IHNwZWNpZmllci5hbGlnbixcbiAgICAgICAgc2lnbiA9IHNwZWNpZmllci5zaWduLFxuICAgICAgICBzeW1ib2wgPSBzcGVjaWZpZXIuc3ltYm9sLFxuICAgICAgICB6ZXJvID0gc3BlY2lmaWVyLnplcm8sXG4gICAgICAgIHdpZHRoID0gc3BlY2lmaWVyLndpZHRoLFxuICAgICAgICBjb21tYSA9IHNwZWNpZmllci5jb21tYSxcbiAgICAgICAgcHJlY2lzaW9uID0gc3BlY2lmaWVyLnByZWNpc2lvbixcbiAgICAgICAgdHJpbSA9IHNwZWNpZmllci50cmltLFxuICAgICAgICB0eXBlID0gc3BlY2lmaWVyLnR5cGU7XG5cbiAgICAvLyBUaGUgXCJuXCIgdHlwZSBpcyBhbiBhbGlhcyBmb3IgXCIsZ1wiLlxuICAgIGlmICh0eXBlID09PSBcIm5cIikgY29tbWEgPSB0cnVlLCB0eXBlID0gXCJnXCI7XG5cbiAgICAvLyBUaGUgXCJcIiB0eXBlLCBhbmQgYW55IGludmFsaWQgdHlwZSwgaXMgYW4gYWxpYXMgZm9yIFwiLjEyfmdcIi5cbiAgICBlbHNlIGlmICghZm9ybWF0VHlwZXNbdHlwZV0pIHByZWNpc2lvbiA9PSBudWxsICYmIChwcmVjaXNpb24gPSAxMiksIHRyaW0gPSB0cnVlLCB0eXBlID0gXCJnXCI7XG5cbiAgICAvLyBJZiB6ZXJvIGZpbGwgaXMgc3BlY2lmaWVkLCBwYWRkaW5nIGdvZXMgYWZ0ZXIgc2lnbiBhbmQgYmVmb3JlIGRpZ2l0cy5cbiAgICBpZiAoemVybyB8fCAoZmlsbCA9PT0gXCIwXCIgJiYgYWxpZ24gPT09IFwiPVwiKSkgemVybyA9IHRydWUsIGZpbGwgPSBcIjBcIiwgYWxpZ24gPSBcIj1cIjtcblxuICAgIC8vIENvbXB1dGUgdGhlIHByZWZpeCBhbmQgc3VmZml4LlxuICAgIC8vIEZvciBTSS1wcmVmaXgsIHRoZSBzdWZmaXggaXMgbGF6aWx5IGNvbXB1dGVkLlxuICAgIHZhciBwcmVmaXggPSBzeW1ib2wgPT09IFwiJFwiID8gY3VycmVuY3lbMF0gOiBzeW1ib2wgPT09IFwiI1wiICYmIC9bYm94WF0vLnRlc3QodHlwZSkgPyBcIjBcIiArIHR5cGUudG9Mb3dlckNhc2UoKSA6IFwiXCIsXG4gICAgICAgIHN1ZmZpeCA9IHN5bWJvbCA9PT0gXCIkXCIgPyBjdXJyZW5jeVsxXSA6IC9bJXBdLy50ZXN0KHR5cGUpID8gcGVyY2VudCA6IFwiXCI7XG5cbiAgICAvLyBXaGF0IGZvcm1hdCBmdW5jdGlvbiBzaG91bGQgd2UgdXNlP1xuICAgIC8vIElzIHRoaXMgYW4gaW50ZWdlciB0eXBlP1xuICAgIC8vIENhbiB0aGlzIHR5cGUgZ2VuZXJhdGUgZXhwb25lbnRpYWwgbm90YXRpb24/XG4gICAgdmFyIGZvcm1hdFR5cGUgPSBmb3JtYXRUeXBlc1t0eXBlXSxcbiAgICAgICAgbWF5YmVTdWZmaXggPSAvW2RlZmdwcnMlXS8udGVzdCh0eXBlKTtcblxuICAgIC8vIFNldCB0aGUgZGVmYXVsdCBwcmVjaXNpb24gaWYgbm90IHNwZWNpZmllZCxcbiAgICAvLyBvciBjbGFtcCB0aGUgc3BlY2lmaWVkIHByZWNpc2lvbiB0byB0aGUgc3VwcG9ydGVkIHJhbmdlLlxuICAgIC8vIEZvciBzaWduaWZpY2FudCBwcmVjaXNpb24sIGl0IG11c3QgYmUgaW4gWzEsIDIxXS5cbiAgICAvLyBGb3IgZml4ZWQgcHJlY2lzaW9uLCBpdCBtdXN0IGJlIGluIFswLCAyMF0uXG4gICAgcHJlY2lzaW9uID0gcHJlY2lzaW9uID09IG51bGwgPyA2XG4gICAgICAgIDogL1tncHJzXS8udGVzdCh0eXBlKSA/IE1hdGgubWF4KDEsIE1hdGgubWluKDIxLCBwcmVjaXNpb24pKVxuICAgICAgICA6IE1hdGgubWF4KDAsIE1hdGgubWluKDIwLCBwcmVjaXNpb24pKTtcblxuICAgIGZ1bmN0aW9uIGZvcm1hdCh2YWx1ZSkge1xuICAgICAgdmFyIHZhbHVlUHJlZml4ID0gcHJlZml4LFxuICAgICAgICAgIHZhbHVlU3VmZml4ID0gc3VmZml4LFxuICAgICAgICAgIGksIG4sIGM7XG5cbiAgICAgIGlmICh0eXBlID09PSBcImNcIikge1xuICAgICAgICB2YWx1ZVN1ZmZpeCA9IGZvcm1hdFR5cGUodmFsdWUpICsgdmFsdWVTdWZmaXg7XG4gICAgICAgIHZhbHVlID0gXCJcIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbHVlID0gK3ZhbHVlO1xuXG4gICAgICAgIC8vIFBlcmZvcm0gdGhlIGluaXRpYWwgZm9ybWF0dGluZy5cbiAgICAgICAgdmFyIHZhbHVlTmVnYXRpdmUgPSB2YWx1ZSA8IDA7XG4gICAgICAgIHZhbHVlID0gZm9ybWF0VHlwZShNYXRoLmFicyh2YWx1ZSksIHByZWNpc2lvbik7XG5cbiAgICAgICAgLy8gVHJpbSBpbnNpZ25pZmljYW50IHplcm9zLlxuICAgICAgICBpZiAodHJpbSkgdmFsdWUgPSBmb3JtYXRUcmltKHZhbHVlKTtcblxuICAgICAgICAvLyBJZiBhIG5lZ2F0aXZlIHZhbHVlIHJvdW5kcyB0byB6ZXJvIGR1cmluZyBmb3JtYXR0aW5nLCB0cmVhdCBhcyBwb3NpdGl2ZS5cbiAgICAgICAgaWYgKHZhbHVlTmVnYXRpdmUgJiYgK3ZhbHVlID09PSAwKSB2YWx1ZU5lZ2F0aXZlID0gZmFsc2U7XG5cbiAgICAgICAgLy8gQ29tcHV0ZSB0aGUgcHJlZml4IGFuZCBzdWZmaXguXG4gICAgICAgIHZhbHVlUHJlZml4ID0gKHZhbHVlTmVnYXRpdmUgPyAoc2lnbiA9PT0gXCIoXCIgPyBzaWduIDogXCItXCIpIDogc2lnbiA9PT0gXCItXCIgfHwgc2lnbiA9PT0gXCIoXCIgPyBcIlwiIDogc2lnbikgKyB2YWx1ZVByZWZpeDtcbiAgICAgICAgdmFsdWVTdWZmaXggPSAodHlwZSA9PT0gXCJzXCIgPyBwcmVmaXhlc1s4ICsgcHJlZml4RXhwb25lbnQgLyAzXSA6IFwiXCIpICsgdmFsdWVTdWZmaXggKyAodmFsdWVOZWdhdGl2ZSAmJiBzaWduID09PSBcIihcIiA/IFwiKVwiIDogXCJcIik7XG5cbiAgICAgICAgLy8gQnJlYWsgdGhlIGZvcm1hdHRlZCB2YWx1ZSBpbnRvIHRoZSBpbnRlZ2VyIOKAnHZhbHVl4oCdIHBhcnQgdGhhdCBjYW4gYmVcbiAgICAgICAgLy8gZ3JvdXBlZCwgYW5kIGZyYWN0aW9uYWwgb3IgZXhwb25lbnRpYWwg4oCcc3VmZml44oCdIHBhcnQgdGhhdCBpcyBub3QuXG4gICAgICAgIGlmIChtYXliZVN1ZmZpeCkge1xuICAgICAgICAgIGkgPSAtMSwgbiA9IHZhbHVlLmxlbmd0aDtcbiAgICAgICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICAgICAgaWYgKGMgPSB2YWx1ZS5jaGFyQ29kZUF0KGkpLCA0OCA+IGMgfHwgYyA+IDU3KSB7XG4gICAgICAgICAgICAgIHZhbHVlU3VmZml4ID0gKGMgPT09IDQ2ID8gZGVjaW1hbCArIHZhbHVlLnNsaWNlKGkgKyAxKSA6IHZhbHVlLnNsaWNlKGkpKSArIHZhbHVlU3VmZml4O1xuICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnNsaWNlKDAsIGkpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gSWYgdGhlIGZpbGwgY2hhcmFjdGVyIGlzIG5vdCBcIjBcIiwgZ3JvdXBpbmcgaXMgYXBwbGllZCBiZWZvcmUgcGFkZGluZy5cbiAgICAgIGlmIChjb21tYSAmJiAhemVybykgdmFsdWUgPSBncm91cCh2YWx1ZSwgSW5maW5pdHkpO1xuXG4gICAgICAvLyBDb21wdXRlIHRoZSBwYWRkaW5nLlxuICAgICAgdmFyIGxlbmd0aCA9IHZhbHVlUHJlZml4Lmxlbmd0aCArIHZhbHVlLmxlbmd0aCArIHZhbHVlU3VmZml4Lmxlbmd0aCxcbiAgICAgICAgICBwYWRkaW5nID0gbGVuZ3RoIDwgd2lkdGggPyBuZXcgQXJyYXkod2lkdGggLSBsZW5ndGggKyAxKS5qb2luKGZpbGwpIDogXCJcIjtcblxuICAgICAgLy8gSWYgdGhlIGZpbGwgY2hhcmFjdGVyIGlzIFwiMFwiLCBncm91cGluZyBpcyBhcHBsaWVkIGFmdGVyIHBhZGRpbmcuXG4gICAgICBpZiAoY29tbWEgJiYgemVybykgdmFsdWUgPSBncm91cChwYWRkaW5nICsgdmFsdWUsIHBhZGRpbmcubGVuZ3RoID8gd2lkdGggLSB2YWx1ZVN1ZmZpeC5sZW5ndGggOiBJbmZpbml0eSksIHBhZGRpbmcgPSBcIlwiO1xuXG4gICAgICAvLyBSZWNvbnN0cnVjdCB0aGUgZmluYWwgb3V0cHV0IGJhc2VkIG9uIHRoZSBkZXNpcmVkIGFsaWdubWVudC5cbiAgICAgIHN3aXRjaCAoYWxpZ24pIHtcbiAgICAgICAgY2FzZSBcIjxcIjogdmFsdWUgPSB2YWx1ZVByZWZpeCArIHZhbHVlICsgdmFsdWVTdWZmaXggKyBwYWRkaW5nOyBicmVhaztcbiAgICAgICAgY2FzZSBcIj1cIjogdmFsdWUgPSB2YWx1ZVByZWZpeCArIHBhZGRpbmcgKyB2YWx1ZSArIHZhbHVlU3VmZml4OyBicmVhaztcbiAgICAgICAgY2FzZSBcIl5cIjogdmFsdWUgPSBwYWRkaW5nLnNsaWNlKDAsIGxlbmd0aCA9IHBhZGRpbmcubGVuZ3RoID4+IDEpICsgdmFsdWVQcmVmaXggKyB2YWx1ZSArIHZhbHVlU3VmZml4ICsgcGFkZGluZy5zbGljZShsZW5ndGgpOyBicmVhaztcbiAgICAgICAgZGVmYXVsdDogdmFsdWUgPSBwYWRkaW5nICsgdmFsdWVQcmVmaXggKyB2YWx1ZSArIHZhbHVlU3VmZml4OyBicmVhaztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bWVyYWxzKHZhbHVlKTtcbiAgICB9XG5cbiAgICBmb3JtYXQudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBzcGVjaWZpZXIgKyBcIlwiO1xuICAgIH07XG5cbiAgICByZXR1cm4gZm9ybWF0O1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0UHJlZml4KHNwZWNpZmllciwgdmFsdWUpIHtcbiAgICB2YXIgZiA9IG5ld0Zvcm1hdCgoc3BlY2lmaWVyID0gZm9ybWF0U3BlY2lmaWVyKHNwZWNpZmllciksIHNwZWNpZmllci50eXBlID0gXCJmXCIsIHNwZWNpZmllcikpLFxuICAgICAgICBlID0gTWF0aC5tYXgoLTgsIE1hdGgubWluKDgsIE1hdGguZmxvb3IoZXhwb25lbnQodmFsdWUpIC8gMykpKSAqIDMsXG4gICAgICAgIGsgPSBNYXRoLnBvdygxMCwgLWUpLFxuICAgICAgICBwcmVmaXggPSBwcmVmaXhlc1s4ICsgZSAvIDNdO1xuICAgIHJldHVybiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgcmV0dXJuIGYoayAqIHZhbHVlKSArIHByZWZpeDtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBmb3JtYXQ6IG5ld0Zvcm1hdCxcbiAgICBmb3JtYXRQcmVmaXg6IGZvcm1hdFByZWZpeFxuICB9O1xufVxuIiwiaW1wb3J0IGV4cG9uZW50IGZyb20gXCIuL2V4cG9uZW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHN0ZXApIHtcbiAgcmV0dXJuIE1hdGgubWF4KDAsIC1leHBvbmVudChNYXRoLmFicyhzdGVwKSkpO1xufVxuIiwiaW1wb3J0IGV4cG9uZW50IGZyb20gXCIuL2V4cG9uZW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHN0ZXAsIHZhbHVlKSB7XG4gIHJldHVybiBNYXRoLm1heCgwLCBNYXRoLm1heCgtOCwgTWF0aC5taW4oOCwgTWF0aC5mbG9vcihleHBvbmVudCh2YWx1ZSkgLyAzKSkpICogMyAtIGV4cG9uZW50KE1hdGguYWJzKHN0ZXApKSk7XG59XG4iLCJpbXBvcnQgZXhwb25lbnQgZnJvbSBcIi4vZXhwb25lbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RlcCwgbWF4KSB7XG4gIHN0ZXAgPSBNYXRoLmFicyhzdGVwKSwgbWF4ID0gTWF0aC5hYnMobWF4KSAtIHN0ZXA7XG4gIHJldHVybiBNYXRoLm1heCgwLCBleHBvbmVudChtYXgpIC0gZXhwb25lbnQoc3RlcCkpICsgMTtcbn1cbiIsIi8vIEFkZHMgZmxvYXRpbmcgcG9pbnQgbnVtYmVycyB3aXRoIHR3aWNlIHRoZSBub3JtYWwgcHJlY2lzaW9uLlxuLy8gUmVmZXJlbmNlOiBKLiBSLiBTaGV3Y2h1aywgQWRhcHRpdmUgUHJlY2lzaW9uIEZsb2F0aW5nLVBvaW50IEFyaXRobWV0aWMgYW5kXG4vLyBGYXN0IFJvYnVzdCBHZW9tZXRyaWMgUHJlZGljYXRlcywgRGlzY3JldGUgJiBDb21wdXRhdGlvbmFsIEdlb21ldHJ5IDE4KDMpXG4vLyAzMDXigJMzNjMgKDE5OTcpLlxuLy8gQ29kZSBhZGFwdGVkIGZyb20gR2VvZ3JhcGhpY0xpYiBieSBDaGFybGVzIEYuIEYuIEthcm5leSxcbi8vIGh0dHA6Ly9nZW9ncmFwaGljbGliLnNvdXJjZWZvcmdlLm5ldC9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgQWRkZXI7XG59XG5cbmZ1bmN0aW9uIEFkZGVyKCkge1xuICB0aGlzLnJlc2V0KCk7XG59XG5cbkFkZGVyLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IEFkZGVyLFxuICByZXNldDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zID0gLy8gcm91bmRlZCB2YWx1ZVxuICAgIHRoaXMudCA9IDA7IC8vIGV4YWN0IGVycm9yXG4gIH0sXG4gIGFkZDogZnVuY3Rpb24oeSkge1xuICAgIGFkZCh0ZW1wLCB5LCB0aGlzLnQpO1xuICAgIGFkZCh0aGlzLCB0ZW1wLnMsIHRoaXMucyk7XG4gICAgaWYgKHRoaXMucykgdGhpcy50ICs9IHRlbXAudDtcbiAgICBlbHNlIHRoaXMucyA9IHRlbXAudDtcbiAgfSxcbiAgdmFsdWVPZjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMucztcbiAgfVxufTtcblxudmFyIHRlbXAgPSBuZXcgQWRkZXI7XG5cbmZ1bmN0aW9uIGFkZChhZGRlciwgYSwgYikge1xuICB2YXIgeCA9IGFkZGVyLnMgPSBhICsgYixcbiAgICAgIGJ2ID0geCAtIGEsXG4gICAgICBhdiA9IHggLSBidjtcbiAgYWRkZXIudCA9IChhIC0gYXYpICsgKGIgLSBidik7XG59XG4iLCJpbXBvcnQgYWRkZXIgZnJvbSBcIi4vYWRkZXJcIjtcbmltcG9ydCB7YXRhbjIsIGNvcywgcXVhcnRlclBpLCByYWRpYW5zLCBzaW4sIHRhdX0gZnJvbSBcIi4vbWF0aFwiO1xuaW1wb3J0IG5vb3AgZnJvbSBcIi4vbm9vcFwiO1xuaW1wb3J0IHN0cmVhbSBmcm9tIFwiLi9zdHJlYW1cIjtcblxuZXhwb3J0IHZhciBhcmVhUmluZ1N1bSA9IGFkZGVyKCk7XG5cbnZhciBhcmVhU3VtID0gYWRkZXIoKSxcbiAgICBsYW1iZGEwMCxcbiAgICBwaGkwMCxcbiAgICBsYW1iZGEwLFxuICAgIGNvc1BoaTAsXG4gICAgc2luUGhpMDtcblxuZXhwb3J0IHZhciBhcmVhU3RyZWFtID0ge1xuICBwb2ludDogbm9vcCxcbiAgbGluZVN0YXJ0OiBub29wLFxuICBsaW5lRW5kOiBub29wLFxuICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIGFyZWFSaW5nU3VtLnJlc2V0KCk7XG4gICAgYXJlYVN0cmVhbS5saW5lU3RhcnQgPSBhcmVhUmluZ1N0YXJ0O1xuICAgIGFyZWFTdHJlYW0ubGluZUVuZCA9IGFyZWFSaW5nRW5kO1xuICB9LFxuICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgYXJlYVJpbmcgPSArYXJlYVJpbmdTdW07XG4gICAgYXJlYVN1bS5hZGQoYXJlYVJpbmcgPCAwID8gdGF1ICsgYXJlYVJpbmcgOiBhcmVhUmluZyk7XG4gICAgdGhpcy5saW5lU3RhcnQgPSB0aGlzLmxpbmVFbmQgPSB0aGlzLnBvaW50ID0gbm9vcDtcbiAgfSxcbiAgc3BoZXJlOiBmdW5jdGlvbigpIHtcbiAgICBhcmVhU3VtLmFkZCh0YXUpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBhcmVhUmluZ1N0YXJ0KCkge1xuICBhcmVhU3RyZWFtLnBvaW50ID0gYXJlYVBvaW50Rmlyc3Q7XG59XG5cbmZ1bmN0aW9uIGFyZWFSaW5nRW5kKCkge1xuICBhcmVhUG9pbnQobGFtYmRhMDAsIHBoaTAwKTtcbn1cblxuZnVuY3Rpb24gYXJlYVBvaW50Rmlyc3QobGFtYmRhLCBwaGkpIHtcbiAgYXJlYVN0cmVhbS5wb2ludCA9IGFyZWFQb2ludDtcbiAgbGFtYmRhMDAgPSBsYW1iZGEsIHBoaTAwID0gcGhpO1xuICBsYW1iZGEgKj0gcmFkaWFucywgcGhpICo9IHJhZGlhbnM7XG4gIGxhbWJkYTAgPSBsYW1iZGEsIGNvc1BoaTAgPSBjb3MocGhpID0gcGhpIC8gMiArIHF1YXJ0ZXJQaSksIHNpblBoaTAgPSBzaW4ocGhpKTtcbn1cblxuZnVuY3Rpb24gYXJlYVBvaW50KGxhbWJkYSwgcGhpKSB7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgcGhpID0gcGhpIC8gMiArIHF1YXJ0ZXJQaTsgLy8gaGFsZiB0aGUgYW5ndWxhciBkaXN0YW5jZSBmcm9tIHNvdXRoIHBvbGVcblxuICAvLyBTcGhlcmljYWwgZXhjZXNzIEUgZm9yIGEgc3BoZXJpY2FsIHRyaWFuZ2xlIHdpdGggdmVydGljZXM6IHNvdXRoIHBvbGUsXG4gIC8vIHByZXZpb3VzIHBvaW50LCBjdXJyZW50IHBvaW50LiAgVXNlcyBhIGZvcm11bGEgZGVyaXZlZCBmcm9tIENhZ25vbGnigJlzXG4gIC8vIHRoZW9yZW0uICBTZWUgVG9kaHVudGVyLCBTcGhlcmljYWwgVHJpZy4gKDE4NzEpLCBTZWMuIDEwMywgRXEuICgyKS5cbiAgdmFyIGRMYW1iZGEgPSBsYW1iZGEgLSBsYW1iZGEwLFxuICAgICAgc2RMYW1iZGEgPSBkTGFtYmRhID49IDAgPyAxIDogLTEsXG4gICAgICBhZExhbWJkYSA9IHNkTGFtYmRhICogZExhbWJkYSxcbiAgICAgIGNvc1BoaSA9IGNvcyhwaGkpLFxuICAgICAgc2luUGhpID0gc2luKHBoaSksXG4gICAgICBrID0gc2luUGhpMCAqIHNpblBoaSxcbiAgICAgIHUgPSBjb3NQaGkwICogY29zUGhpICsgayAqIGNvcyhhZExhbWJkYSksXG4gICAgICB2ID0gayAqIHNkTGFtYmRhICogc2luKGFkTGFtYmRhKTtcbiAgYXJlYVJpbmdTdW0uYWRkKGF0YW4yKHYsIHUpKTtcblxuICAvLyBBZHZhbmNlIHRoZSBwcmV2aW91cyBwb2ludHMuXG4gIGxhbWJkYTAgPSBsYW1iZGEsIGNvc1BoaTAgPSBjb3NQaGksIHNpblBoaTAgPSBzaW5QaGk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iamVjdCkge1xuICBhcmVhU3VtLnJlc2V0KCk7XG4gIHN0cmVhbShvYmplY3QsIGFyZWFTdHJlYW0pO1xuICByZXR1cm4gYXJlYVN1bSAqIDI7XG59XG4iLCJpbXBvcnQgYWRkZXIgZnJvbSBcIi4vYWRkZXJcIjtcbmltcG9ydCB7YXJlYVN0cmVhbSwgYXJlYVJpbmdTdW19IGZyb20gXCIuL2FyZWFcIjtcbmltcG9ydCB7Y2FydGVzaWFuLCBjYXJ0ZXNpYW5Dcm9zcywgY2FydGVzaWFuTm9ybWFsaXplSW5QbGFjZSwgc3BoZXJpY2FsfSBmcm9tIFwiLi9jYXJ0ZXNpYW5cIjtcbmltcG9ydCB7YWJzLCBkZWdyZWVzLCBlcHNpbG9uLCByYWRpYW5zfSBmcm9tIFwiLi9tYXRoXCI7XG5pbXBvcnQgc3RyZWFtIGZyb20gXCIuL3N0cmVhbVwiO1xuXG52YXIgbGFtYmRhMCwgcGhpMCwgbGFtYmRhMSwgcGhpMSwgLy8gYm91bmRzXG4gICAgbGFtYmRhMiwgLy8gcHJldmlvdXMgbGFtYmRhLWNvb3JkaW5hdGVcbiAgICBsYW1iZGEwMCwgcGhpMDAsIC8vIGZpcnN0IHBvaW50XG4gICAgcDAsIC8vIHByZXZpb3VzIDNEIHBvaW50XG4gICAgZGVsdGFTdW0gPSBhZGRlcigpLFxuICAgIHJhbmdlcyxcbiAgICByYW5nZTtcblxudmFyIGJvdW5kc1N0cmVhbSA9IHtcbiAgcG9pbnQ6IGJvdW5kc1BvaW50LFxuICBsaW5lU3RhcnQ6IGJvdW5kc0xpbmVTdGFydCxcbiAgbGluZUVuZDogYm91bmRzTGluZUVuZCxcbiAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICBib3VuZHNTdHJlYW0ucG9pbnQgPSBib3VuZHNSaW5nUG9pbnQ7XG4gICAgYm91bmRzU3RyZWFtLmxpbmVTdGFydCA9IGJvdW5kc1JpbmdTdGFydDtcbiAgICBib3VuZHNTdHJlYW0ubGluZUVuZCA9IGJvdW5kc1JpbmdFbmQ7XG4gICAgZGVsdGFTdW0ucmVzZXQoKTtcbiAgICBhcmVhU3RyZWFtLnBvbHlnb25TdGFydCgpO1xuICB9LFxuICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICBhcmVhU3RyZWFtLnBvbHlnb25FbmQoKTtcbiAgICBib3VuZHNTdHJlYW0ucG9pbnQgPSBib3VuZHNQb2ludDtcbiAgICBib3VuZHNTdHJlYW0ubGluZVN0YXJ0ID0gYm91bmRzTGluZVN0YXJ0O1xuICAgIGJvdW5kc1N0cmVhbS5saW5lRW5kID0gYm91bmRzTGluZUVuZDtcbiAgICBpZiAoYXJlYVJpbmdTdW0gPCAwKSBsYW1iZGEwID0gLShsYW1iZGExID0gMTgwKSwgcGhpMCA9IC0ocGhpMSA9IDkwKTtcbiAgICBlbHNlIGlmIChkZWx0YVN1bSA+IGVwc2lsb24pIHBoaTEgPSA5MDtcbiAgICBlbHNlIGlmIChkZWx0YVN1bSA8IC1lcHNpbG9uKSBwaGkwID0gLTkwO1xuICAgIHJhbmdlWzBdID0gbGFtYmRhMCwgcmFuZ2VbMV0gPSBsYW1iZGExO1xuICB9XG59O1xuXG5mdW5jdGlvbiBib3VuZHNQb2ludChsYW1iZGEsIHBoaSkge1xuICByYW5nZXMucHVzaChyYW5nZSA9IFtsYW1iZGEwID0gbGFtYmRhLCBsYW1iZGExID0gbGFtYmRhXSk7XG4gIGlmIChwaGkgPCBwaGkwKSBwaGkwID0gcGhpO1xuICBpZiAocGhpID4gcGhpMSkgcGhpMSA9IHBoaTtcbn1cblxuZnVuY3Rpb24gbGluZVBvaW50KGxhbWJkYSwgcGhpKSB7XG4gIHZhciBwID0gY2FydGVzaWFuKFtsYW1iZGEgKiByYWRpYW5zLCBwaGkgKiByYWRpYW5zXSk7XG4gIGlmIChwMCkge1xuICAgIHZhciBub3JtYWwgPSBjYXJ0ZXNpYW5Dcm9zcyhwMCwgcCksXG4gICAgICAgIGVxdWF0b3JpYWwgPSBbbm9ybWFsWzFdLCAtbm9ybWFsWzBdLCAwXSxcbiAgICAgICAgaW5mbGVjdGlvbiA9IGNhcnRlc2lhbkNyb3NzKGVxdWF0b3JpYWwsIG5vcm1hbCk7XG4gICAgY2FydGVzaWFuTm9ybWFsaXplSW5QbGFjZShpbmZsZWN0aW9uKTtcbiAgICBpbmZsZWN0aW9uID0gc3BoZXJpY2FsKGluZmxlY3Rpb24pO1xuICAgIHZhciBkZWx0YSA9IGxhbWJkYSAtIGxhbWJkYTIsXG4gICAgICAgIHNpZ24gPSBkZWx0YSA+IDAgPyAxIDogLTEsXG4gICAgICAgIGxhbWJkYWkgPSBpbmZsZWN0aW9uWzBdICogZGVncmVlcyAqIHNpZ24sXG4gICAgICAgIHBoaWksXG4gICAgICAgIGFudGltZXJpZGlhbiA9IGFicyhkZWx0YSkgPiAxODA7XG4gICAgaWYgKGFudGltZXJpZGlhbiBeIChzaWduICogbGFtYmRhMiA8IGxhbWJkYWkgJiYgbGFtYmRhaSA8IHNpZ24gKiBsYW1iZGEpKSB7XG4gICAgICBwaGlpID0gaW5mbGVjdGlvblsxXSAqIGRlZ3JlZXM7XG4gICAgICBpZiAocGhpaSA+IHBoaTEpIHBoaTEgPSBwaGlpO1xuICAgIH0gZWxzZSBpZiAobGFtYmRhaSA9IChsYW1iZGFpICsgMzYwKSAlIDM2MCAtIDE4MCwgYW50aW1lcmlkaWFuIF4gKHNpZ24gKiBsYW1iZGEyIDwgbGFtYmRhaSAmJiBsYW1iZGFpIDwgc2lnbiAqIGxhbWJkYSkpIHtcbiAgICAgIHBoaWkgPSAtaW5mbGVjdGlvblsxXSAqIGRlZ3JlZXM7XG4gICAgICBpZiAocGhpaSA8IHBoaTApIHBoaTAgPSBwaGlpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocGhpIDwgcGhpMCkgcGhpMCA9IHBoaTtcbiAgICAgIGlmIChwaGkgPiBwaGkxKSBwaGkxID0gcGhpO1xuICAgIH1cbiAgICBpZiAoYW50aW1lcmlkaWFuKSB7XG4gICAgICBpZiAobGFtYmRhIDwgbGFtYmRhMikge1xuICAgICAgICBpZiAoYW5nbGUobGFtYmRhMCwgbGFtYmRhKSA+IGFuZ2xlKGxhbWJkYTAsIGxhbWJkYTEpKSBsYW1iZGExID0gbGFtYmRhO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGFuZ2xlKGxhbWJkYSwgbGFtYmRhMSkgPiBhbmdsZShsYW1iZGEwLCBsYW1iZGExKSkgbGFtYmRhMCA9IGxhbWJkYTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGxhbWJkYTEgPj0gbGFtYmRhMCkge1xuICAgICAgICBpZiAobGFtYmRhIDwgbGFtYmRhMCkgbGFtYmRhMCA9IGxhbWJkYTtcbiAgICAgICAgaWYgKGxhbWJkYSA+IGxhbWJkYTEpIGxhbWJkYTEgPSBsYW1iZGE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAobGFtYmRhID4gbGFtYmRhMikge1xuICAgICAgICAgIGlmIChhbmdsZShsYW1iZGEwLCBsYW1iZGEpID4gYW5nbGUobGFtYmRhMCwgbGFtYmRhMSkpIGxhbWJkYTEgPSBsYW1iZGE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKGFuZ2xlKGxhbWJkYSwgbGFtYmRhMSkgPiBhbmdsZShsYW1iZGEwLCBsYW1iZGExKSkgbGFtYmRhMCA9IGxhbWJkYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByYW5nZXMucHVzaChyYW5nZSA9IFtsYW1iZGEwID0gbGFtYmRhLCBsYW1iZGExID0gbGFtYmRhXSk7XG4gIH1cbiAgaWYgKHBoaSA8IHBoaTApIHBoaTAgPSBwaGk7XG4gIGlmIChwaGkgPiBwaGkxKSBwaGkxID0gcGhpO1xuICBwMCA9IHAsIGxhbWJkYTIgPSBsYW1iZGE7XG59XG5cbmZ1bmN0aW9uIGJvdW5kc0xpbmVTdGFydCgpIHtcbiAgYm91bmRzU3RyZWFtLnBvaW50ID0gbGluZVBvaW50O1xufVxuXG5mdW5jdGlvbiBib3VuZHNMaW5lRW5kKCkge1xuICByYW5nZVswXSA9IGxhbWJkYTAsIHJhbmdlWzFdID0gbGFtYmRhMTtcbiAgYm91bmRzU3RyZWFtLnBvaW50ID0gYm91bmRzUG9pbnQ7XG4gIHAwID0gbnVsbDtcbn1cblxuZnVuY3Rpb24gYm91bmRzUmluZ1BvaW50KGxhbWJkYSwgcGhpKSB7XG4gIGlmIChwMCkge1xuICAgIHZhciBkZWx0YSA9IGxhbWJkYSAtIGxhbWJkYTI7XG4gICAgZGVsdGFTdW0uYWRkKGFicyhkZWx0YSkgPiAxODAgPyBkZWx0YSArIChkZWx0YSA+IDAgPyAzNjAgOiAtMzYwKSA6IGRlbHRhKTtcbiAgfSBlbHNlIHtcbiAgICBsYW1iZGEwMCA9IGxhbWJkYSwgcGhpMDAgPSBwaGk7XG4gIH1cbiAgYXJlYVN0cmVhbS5wb2ludChsYW1iZGEsIHBoaSk7XG4gIGxpbmVQb2ludChsYW1iZGEsIHBoaSk7XG59XG5cbmZ1bmN0aW9uIGJvdW5kc1JpbmdTdGFydCgpIHtcbiAgYXJlYVN0cmVhbS5saW5lU3RhcnQoKTtcbn1cblxuZnVuY3Rpb24gYm91bmRzUmluZ0VuZCgpIHtcbiAgYm91bmRzUmluZ1BvaW50KGxhbWJkYTAwLCBwaGkwMCk7XG4gIGFyZWFTdHJlYW0ubGluZUVuZCgpO1xuICBpZiAoYWJzKGRlbHRhU3VtKSA+IGVwc2lsb24pIGxhbWJkYTAgPSAtKGxhbWJkYTEgPSAxODApO1xuICByYW5nZVswXSA9IGxhbWJkYTAsIHJhbmdlWzFdID0gbGFtYmRhMTtcbiAgcDAgPSBudWxsO1xufVxuXG4vLyBGaW5kcyB0aGUgbGVmdC1yaWdodCBkaXN0YW5jZSBiZXR3ZWVuIHR3byBsb25naXR1ZGVzLlxuLy8gVGhpcyBpcyBhbG1vc3QgdGhlIHNhbWUgYXMgKGxhbWJkYTEgLSBsYW1iZGEwICsgMzYwwrApICUgMzYwwrAsIGV4Y2VwdCB0aGF0IHdlIHdhbnRcbi8vIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIMKxMTgwwrAgdG8gYmUgMzYwwrAuXG5mdW5jdGlvbiBhbmdsZShsYW1iZGEwLCBsYW1iZGExKSB7XG4gIHJldHVybiAobGFtYmRhMSAtPSBsYW1iZGEwKSA8IDAgPyBsYW1iZGExICsgMzYwIDogbGFtYmRhMTtcbn1cblxuZnVuY3Rpb24gcmFuZ2VDb21wYXJlKGEsIGIpIHtcbiAgcmV0dXJuIGFbMF0gLSBiWzBdO1xufVxuXG5mdW5jdGlvbiByYW5nZUNvbnRhaW5zKHJhbmdlLCB4KSB7XG4gIHJldHVybiByYW5nZVswXSA8PSByYW5nZVsxXSA/IHJhbmdlWzBdIDw9IHggJiYgeCA8PSByYW5nZVsxXSA6IHggPCByYW5nZVswXSB8fCByYW5nZVsxXSA8IHg7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGZlYXR1cmUpIHtcbiAgdmFyIGksIG4sIGEsIGIsIG1lcmdlZCwgZGVsdGFNYXgsIGRlbHRhO1xuXG4gIHBoaTEgPSBsYW1iZGExID0gLShsYW1iZGEwID0gcGhpMCA9IEluZmluaXR5KTtcbiAgcmFuZ2VzID0gW107XG4gIHN0cmVhbShmZWF0dXJlLCBib3VuZHNTdHJlYW0pO1xuXG4gIC8vIEZpcnN0LCBzb3J0IHJhbmdlcyBieSB0aGVpciBtaW5pbXVtIGxvbmdpdHVkZXMuXG4gIGlmIChuID0gcmFuZ2VzLmxlbmd0aCkge1xuICAgIHJhbmdlcy5zb3J0KHJhbmdlQ29tcGFyZSk7XG5cbiAgICAvLyBUaGVuLCBtZXJnZSBhbnkgcmFuZ2VzIHRoYXQgb3ZlcmxhcC5cbiAgICBmb3IgKGkgPSAxLCBhID0gcmFuZ2VzWzBdLCBtZXJnZWQgPSBbYV07IGkgPCBuOyArK2kpIHtcbiAgICAgIGIgPSByYW5nZXNbaV07XG4gICAgICBpZiAocmFuZ2VDb250YWlucyhhLCBiWzBdKSB8fCByYW5nZUNvbnRhaW5zKGEsIGJbMV0pKSB7XG4gICAgICAgIGlmIChhbmdsZShhWzBdLCBiWzFdKSA+IGFuZ2xlKGFbMF0sIGFbMV0pKSBhWzFdID0gYlsxXTtcbiAgICAgICAgaWYgKGFuZ2xlKGJbMF0sIGFbMV0pID4gYW5nbGUoYVswXSwgYVsxXSkpIGFbMF0gPSBiWzBdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbWVyZ2VkLnB1c2goYSA9IGIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEZpbmFsbHksIGZpbmQgdGhlIGxhcmdlc3QgZ2FwIGJldHdlZW4gdGhlIG1lcmdlZCByYW5nZXMuXG4gICAgLy8gVGhlIGZpbmFsIGJvdW5kaW5nIGJveCB3aWxsIGJlIHRoZSBpbnZlcnNlIG9mIHRoaXMgZ2FwLlxuICAgIGZvciAoZGVsdGFNYXggPSAtSW5maW5pdHksIG4gPSBtZXJnZWQubGVuZ3RoIC0gMSwgaSA9IDAsIGEgPSBtZXJnZWRbbl07IGkgPD0gbjsgYSA9IGIsICsraSkge1xuICAgICAgYiA9IG1lcmdlZFtpXTtcbiAgICAgIGlmICgoZGVsdGEgPSBhbmdsZShhWzFdLCBiWzBdKSkgPiBkZWx0YU1heCkgZGVsdGFNYXggPSBkZWx0YSwgbGFtYmRhMCA9IGJbMF0sIGxhbWJkYTEgPSBhWzFdO1xuICAgIH1cbiAgfVxuXG4gIHJhbmdlcyA9IHJhbmdlID0gbnVsbDtcblxuICByZXR1cm4gbGFtYmRhMCA9PT0gSW5maW5pdHkgfHwgcGhpMCA9PT0gSW5maW5pdHlcbiAgICAgID8gW1tOYU4sIE5hTl0sIFtOYU4sIE5hTl1dXG4gICAgICA6IFtbbGFtYmRhMCwgcGhpMF0sIFtsYW1iZGExLCBwaGkxXV07XG59XG4iLCJpbXBvcnQge2FzaW4sIGF0YW4yLCBjb3MsIHNpbiwgc3FydH0gZnJvbSBcIi4vbWF0aFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gc3BoZXJpY2FsKGNhcnRlc2lhbikge1xuICByZXR1cm4gW2F0YW4yKGNhcnRlc2lhblsxXSwgY2FydGVzaWFuWzBdKSwgYXNpbihjYXJ0ZXNpYW5bMl0pXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhbihzcGhlcmljYWwpIHtcbiAgdmFyIGxhbWJkYSA9IHNwaGVyaWNhbFswXSwgcGhpID0gc3BoZXJpY2FsWzFdLCBjb3NQaGkgPSBjb3MocGhpKTtcbiAgcmV0dXJuIFtjb3NQaGkgKiBjb3MobGFtYmRhKSwgY29zUGhpICogc2luKGxhbWJkYSksIHNpbihwaGkpXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhbkRvdChhLCBiKSB7XG4gIHJldHVybiBhWzBdICogYlswXSArIGFbMV0gKiBiWzFdICsgYVsyXSAqIGJbMl07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYXJ0ZXNpYW5Dcm9zcyhhLCBiKSB7XG4gIHJldHVybiBbYVsxXSAqIGJbMl0gLSBhWzJdICogYlsxXSwgYVsyXSAqIGJbMF0gLSBhWzBdICogYlsyXSwgYVswXSAqIGJbMV0gLSBhWzFdICogYlswXV07XG59XG5cbi8vIFRPRE8gcmV0dXJuIGFcbmV4cG9ydCBmdW5jdGlvbiBjYXJ0ZXNpYW5BZGRJblBsYWNlKGEsIGIpIHtcbiAgYVswXSArPSBiWzBdLCBhWzFdICs9IGJbMV0sIGFbMl0gKz0gYlsyXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhblNjYWxlKHZlY3Rvciwgaykge1xuICByZXR1cm4gW3ZlY3RvclswXSAqIGssIHZlY3RvclsxXSAqIGssIHZlY3RvclsyXSAqIGtdO1xufVxuXG4vLyBUT0RPIHJldHVybiBkXG5leHBvcnQgZnVuY3Rpb24gY2FydGVzaWFuTm9ybWFsaXplSW5QbGFjZShkKSB7XG4gIHZhciBsID0gc3FydChkWzBdICogZFswXSArIGRbMV0gKiBkWzFdICsgZFsyXSAqIGRbMl0pO1xuICBkWzBdIC89IGwsIGRbMV0gLz0gbCwgZFsyXSAvPSBsO1xufVxuIiwiaW1wb3J0IHthc2luLCBhdGFuMiwgY29zLCBkZWdyZWVzLCBlcHNpbG9uLCBlcHNpbG9uMiwgcmFkaWFucywgc2luLCBzcXJ0fSBmcm9tIFwiLi9tYXRoXCI7XG5pbXBvcnQgbm9vcCBmcm9tIFwiLi9ub29wXCI7XG5pbXBvcnQgc3RyZWFtIGZyb20gXCIuL3N0cmVhbVwiO1xuXG52YXIgVzAsIFcxLFxuICAgIFgwLCBZMCwgWjAsXG4gICAgWDEsIFkxLCBaMSxcbiAgICBYMiwgWTIsIFoyLFxuICAgIGxhbWJkYTAwLCBwaGkwMCwgLy8gZmlyc3QgcG9pbnRcbiAgICB4MCwgeTAsIHowOyAvLyBwcmV2aW91cyBwb2ludFxuXG52YXIgY2VudHJvaWRTdHJlYW0gPSB7XG4gIHNwaGVyZTogbm9vcCxcbiAgcG9pbnQ6IGNlbnRyb2lkUG9pbnQsXG4gIGxpbmVTdGFydDogY2VudHJvaWRMaW5lU3RhcnQsXG4gIGxpbmVFbmQ6IGNlbnRyb2lkTGluZUVuZCxcbiAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lU3RhcnQgPSBjZW50cm9pZFJpbmdTdGFydDtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lRW5kID0gY2VudHJvaWRSaW5nRW5kO1xuICB9LFxuICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lU3RhcnQgPSBjZW50cm9pZExpbmVTdGFydDtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lRW5kID0gY2VudHJvaWRMaW5lRW5kO1xuICB9XG59O1xuXG4vLyBBcml0aG1ldGljIG1lYW4gb2YgQ2FydGVzaWFuIHZlY3RvcnMuXG5mdW5jdGlvbiBjZW50cm9pZFBvaW50KGxhbWJkYSwgcGhpKSB7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgdmFyIGNvc1BoaSA9IGNvcyhwaGkpO1xuICBjZW50cm9pZFBvaW50Q2FydGVzaWFuKGNvc1BoaSAqIGNvcyhsYW1iZGEpLCBjb3NQaGkgKiBzaW4obGFtYmRhKSwgc2luKHBoaSkpO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZFBvaW50Q2FydGVzaWFuKHgsIHksIHopIHtcbiAgKytXMDtcbiAgWDAgKz0gKHggLSBYMCkgLyBXMDtcbiAgWTAgKz0gKHkgLSBZMCkgLyBXMDtcbiAgWjAgKz0gKHogLSBaMCkgLyBXMDtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRMaW5lU3RhcnQoKSB7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRMaW5lUG9pbnRGaXJzdDtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRMaW5lUG9pbnRGaXJzdChsYW1iZGEsIHBoaSkge1xuICBsYW1iZGEgKj0gcmFkaWFucywgcGhpICo9IHJhZGlhbnM7XG4gIHZhciBjb3NQaGkgPSBjb3MocGhpKTtcbiAgeDAgPSBjb3NQaGkgKiBjb3MobGFtYmRhKTtcbiAgeTAgPSBjb3NQaGkgKiBzaW4obGFtYmRhKTtcbiAgejAgPSBzaW4ocGhpKTtcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZExpbmVQb2ludDtcbiAgY2VudHJvaWRQb2ludENhcnRlc2lhbih4MCwgeTAsIHowKTtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRMaW5lUG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgbGFtYmRhICo9IHJhZGlhbnMsIHBoaSAqPSByYWRpYW5zO1xuICB2YXIgY29zUGhpID0gY29zKHBoaSksXG4gICAgICB4ID0gY29zUGhpICogY29zKGxhbWJkYSksXG4gICAgICB5ID0gY29zUGhpICogc2luKGxhbWJkYSksXG4gICAgICB6ID0gc2luKHBoaSksXG4gICAgICB3ID0gYXRhbjIoc3FydCgodyA9IHkwICogeiAtIHowICogeSkgKiB3ICsgKHcgPSB6MCAqIHggLSB4MCAqIHopICogdyArICh3ID0geDAgKiB5IC0geTAgKiB4KSAqIHcpLCB4MCAqIHggKyB5MCAqIHkgKyB6MCAqIHopO1xuICBXMSArPSB3O1xuICBYMSArPSB3ICogKHgwICsgKHgwID0geCkpO1xuICBZMSArPSB3ICogKHkwICsgKHkwID0geSkpO1xuICBaMSArPSB3ICogKHowICsgKHowID0geikpO1xuICBjZW50cm9pZFBvaW50Q2FydGVzaWFuKHgwLCB5MCwgejApO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZExpbmVFbmQoKSB7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRQb2ludDtcbn1cblxuLy8gU2VlIEouIEUuIEJyb2NrLCBUaGUgSW5lcnRpYSBUZW5zb3IgZm9yIGEgU3BoZXJpY2FsIFRyaWFuZ2xlLFxuLy8gSi4gQXBwbGllZCBNZWNoYW5pY3MgNDIsIDIzOSAoMTk3NSkuXG5mdW5jdGlvbiBjZW50cm9pZFJpbmdTdGFydCgpIHtcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZFJpbmdQb2ludEZpcnN0O1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZFJpbmdFbmQoKSB7XG4gIGNlbnRyb2lkUmluZ1BvaW50KGxhbWJkYTAwLCBwaGkwMCk7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRQb2ludDtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRSaW5nUG9pbnRGaXJzdChsYW1iZGEsIHBoaSkge1xuICBsYW1iZGEwMCA9IGxhbWJkYSwgcGhpMDAgPSBwaGk7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZFJpbmdQb2ludDtcbiAgdmFyIGNvc1BoaSA9IGNvcyhwaGkpO1xuICB4MCA9IGNvc1BoaSAqIGNvcyhsYW1iZGEpO1xuICB5MCA9IGNvc1BoaSAqIHNpbihsYW1iZGEpO1xuICB6MCA9IHNpbihwaGkpO1xuICBjZW50cm9pZFBvaW50Q2FydGVzaWFuKHgwLCB5MCwgejApO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZFJpbmdQb2ludChsYW1iZGEsIHBoaSkge1xuICBsYW1iZGEgKj0gcmFkaWFucywgcGhpICo9IHJhZGlhbnM7XG4gIHZhciBjb3NQaGkgPSBjb3MocGhpKSxcbiAgICAgIHggPSBjb3NQaGkgKiBjb3MobGFtYmRhKSxcbiAgICAgIHkgPSBjb3NQaGkgKiBzaW4obGFtYmRhKSxcbiAgICAgIHogPSBzaW4ocGhpKSxcbiAgICAgIGN4ID0geTAgKiB6IC0gejAgKiB5LFxuICAgICAgY3kgPSB6MCAqIHggLSB4MCAqIHosXG4gICAgICBjeiA9IHgwICogeSAtIHkwICogeCxcbiAgICAgIG0gPSBzcXJ0KGN4ICogY3ggKyBjeSAqIGN5ICsgY3ogKiBjeiksXG4gICAgICB3ID0gYXNpbihtKSwgLy8gbGluZSB3ZWlnaHQgPSBhbmdsZVxuICAgICAgdiA9IG0gJiYgLXcgLyBtOyAvLyBhcmVhIHdlaWdodCBtdWx0aXBsaWVyXG4gIFgyICs9IHYgKiBjeDtcbiAgWTIgKz0gdiAqIGN5O1xuICBaMiArPSB2ICogY3o7XG4gIFcxICs9IHc7XG4gIFgxICs9IHcgKiAoeDAgKyAoeDAgPSB4KSk7XG4gIFkxICs9IHcgKiAoeTAgKyAoeTAgPSB5KSk7XG4gIFoxICs9IHcgKiAoejAgKyAoejAgPSB6KSk7XG4gIGNlbnRyb2lkUG9pbnRDYXJ0ZXNpYW4oeDAsIHkwLCB6MCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iamVjdCkge1xuICBXMCA9IFcxID1cbiAgWDAgPSBZMCA9IFowID1cbiAgWDEgPSBZMSA9IFoxID1cbiAgWDIgPSBZMiA9IFoyID0gMDtcbiAgc3RyZWFtKG9iamVjdCwgY2VudHJvaWRTdHJlYW0pO1xuXG4gIHZhciB4ID0gWDIsXG4gICAgICB5ID0gWTIsXG4gICAgICB6ID0gWjIsXG4gICAgICBtID0geCAqIHggKyB5ICogeSArIHogKiB6O1xuXG4gIC8vIElmIHRoZSBhcmVhLXdlaWdodGVkIGNjZW50cm9pZCBpcyB1bmRlZmluZWQsIGZhbGwgYmFjayB0byBsZW5ndGgtd2VpZ2h0ZWQgY2NlbnRyb2lkLlxuICBpZiAobSA8IGVwc2lsb24yKSB7XG4gICAgeCA9IFgxLCB5ID0gWTEsIHogPSBaMTtcbiAgICAvLyBJZiB0aGUgZmVhdHVyZSBoYXMgemVybyBsZW5ndGgsIGZhbGwgYmFjayB0byBhcml0aG1ldGljIG1lYW4gb2YgcG9pbnQgdmVjdG9ycy5cbiAgICBpZiAoVzEgPCBlcHNpbG9uKSB4ID0gWDAsIHkgPSBZMCwgeiA9IFowO1xuICAgIG0gPSB4ICogeCArIHkgKiB5ICsgeiAqIHo7XG4gICAgLy8gSWYgdGhlIGZlYXR1cmUgc3RpbGwgaGFzIGFuIHVuZGVmaW5lZCBjY2VudHJvaWQsIHRoZW4gcmV0dXJuLlxuICAgIGlmIChtIDwgZXBzaWxvbjIpIHJldHVybiBbTmFOLCBOYU5dO1xuICB9XG5cbiAgcmV0dXJuIFthdGFuMih5LCB4KSAqIGRlZ3JlZXMsIGFzaW4oeiAvIHNxcnQobSkpICogZGVncmVlc107XG59XG4iLCJpbXBvcnQge2NhcnRlc2lhbiwgY2FydGVzaWFuTm9ybWFsaXplSW5QbGFjZSwgc3BoZXJpY2FsfSBmcm9tIFwiLi9jYXJ0ZXNpYW5cIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IHthY29zLCBjb3MsIGRlZ3JlZXMsIGVwc2lsb24sIHJhZGlhbnMsIHNpbiwgdGF1fSBmcm9tIFwiLi9tYXRoXCI7XG5pbXBvcnQge3JvdGF0ZVJhZGlhbnN9IGZyb20gXCIuL3JvdGF0aW9uXCI7XG5cbi8vIEdlbmVyYXRlcyBhIGNpcmNsZSBjZW50ZXJlZCBhdCBbMMKwLCAwwrBdLCB3aXRoIGEgZ2l2ZW4gcmFkaXVzIGFuZCBwcmVjaXNpb24uXG5leHBvcnQgZnVuY3Rpb24gY2lyY2xlU3RyZWFtKHN0cmVhbSwgcmFkaXVzLCBkZWx0YSwgZGlyZWN0aW9uLCB0MCwgdDEpIHtcbiAgaWYgKCFkZWx0YSkgcmV0dXJuO1xuICB2YXIgY29zUmFkaXVzID0gY29zKHJhZGl1cyksXG4gICAgICBzaW5SYWRpdXMgPSBzaW4ocmFkaXVzKSxcbiAgICAgIHN0ZXAgPSBkaXJlY3Rpb24gKiBkZWx0YTtcbiAgaWYgKHQwID09IG51bGwpIHtcbiAgICB0MCA9IHJhZGl1cyArIGRpcmVjdGlvbiAqIHRhdTtcbiAgICB0MSA9IHJhZGl1cyAtIHN0ZXAgLyAyO1xuICB9IGVsc2Uge1xuICAgIHQwID0gY2lyY2xlUmFkaXVzKGNvc1JhZGl1cywgdDApO1xuICAgIHQxID0gY2lyY2xlUmFkaXVzKGNvc1JhZGl1cywgdDEpO1xuICAgIGlmIChkaXJlY3Rpb24gPiAwID8gdDAgPCB0MSA6IHQwID4gdDEpIHQwICs9IGRpcmVjdGlvbiAqIHRhdTtcbiAgfVxuICBmb3IgKHZhciBwb2ludCwgdCA9IHQwOyBkaXJlY3Rpb24gPiAwID8gdCA+IHQxIDogdCA8IHQxOyB0IC09IHN0ZXApIHtcbiAgICBwb2ludCA9IHNwaGVyaWNhbChbY29zUmFkaXVzLCAtc2luUmFkaXVzICogY29zKHQpLCAtc2luUmFkaXVzICogc2luKHQpXSk7XG4gICAgc3RyZWFtLnBvaW50KHBvaW50WzBdLCBwb2ludFsxXSk7XG4gIH1cbn1cblxuLy8gUmV0dXJucyB0aGUgc2lnbmVkIGFuZ2xlIG9mIGEgY2FydGVzaWFuIHBvaW50IHJlbGF0aXZlIHRvIFtjb3NSYWRpdXMsIDAsIDBdLlxuZnVuY3Rpb24gY2lyY2xlUmFkaXVzKGNvc1JhZGl1cywgcG9pbnQpIHtcbiAgcG9pbnQgPSBjYXJ0ZXNpYW4ocG9pbnQpLCBwb2ludFswXSAtPSBjb3NSYWRpdXM7XG4gIGNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UocG9pbnQpO1xuICB2YXIgcmFkaXVzID0gYWNvcygtcG9pbnRbMV0pO1xuICByZXR1cm4gKCgtcG9pbnRbMl0gPCAwID8gLXJhZGl1cyA6IHJhZGl1cykgKyB0YXUgLSBlcHNpbG9uKSAlIHRhdTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBjZW50ZXIgPSBjb25zdGFudChbMCwgMF0pLFxuICAgICAgcmFkaXVzID0gY29uc3RhbnQoOTApLFxuICAgICAgcHJlY2lzaW9uID0gY29uc3RhbnQoNiksXG4gICAgICByaW5nLFxuICAgICAgcm90YXRlLFxuICAgICAgc3RyZWFtID0ge3BvaW50OiBwb2ludH07XG5cbiAgZnVuY3Rpb24gcG9pbnQoeCwgeSkge1xuICAgIHJpbmcucHVzaCh4ID0gcm90YXRlKHgsIHkpKTtcbiAgICB4WzBdICo9IGRlZ3JlZXMsIHhbMV0gKj0gZGVncmVlcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGNpcmNsZSgpIHtcbiAgICB2YXIgYyA9IGNlbnRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICByID0gcmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgKiByYWRpYW5zLFxuICAgICAgICBwID0gcHJlY2lzaW9uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgKiByYWRpYW5zO1xuICAgIHJpbmcgPSBbXTtcbiAgICByb3RhdGUgPSByb3RhdGVSYWRpYW5zKC1jWzBdICogcmFkaWFucywgLWNbMV0gKiByYWRpYW5zLCAwKS5pbnZlcnQ7XG4gICAgY2lyY2xlU3RyZWFtKHN0cmVhbSwgciwgcCwgMSk7XG4gICAgYyA9IHt0eXBlOiBcIlBvbHlnb25cIiwgY29vcmRpbmF0ZXM6IFtyaW5nXX07XG4gICAgcmluZyA9IHJvdGF0ZSA9IG51bGw7XG4gICAgcmV0dXJuIGM7XG4gIH1cblxuICBjaXJjbGUuY2VudGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNlbnRlciA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoWytfWzBdLCArX1sxXV0pLCBjaXJjbGUpIDogY2VudGVyO1xuICB9O1xuXG4gIGNpcmNsZS5yYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocmFkaXVzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGNpcmNsZSkgOiByYWRpdXM7XG4gIH07XG5cbiAgY2lyY2xlLnByZWNpc2lvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwcmVjaXNpb24gPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgY2lyY2xlKSA6IHByZWNpc2lvbjtcbiAgfTtcblxuICByZXR1cm4gY2lyY2xlO1xufVxuIiwiaW1wb3J0IGNsaXAgZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCB7YWJzLCBhdGFuLCBjb3MsIGVwc2lsb24sIGhhbGZQaSwgcGksIHNpbn0gZnJvbSBcIi4uL21hdGhcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xpcChcbiAgZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9LFxuICBjbGlwQW50aW1lcmlkaWFuTGluZSxcbiAgY2xpcEFudGltZXJpZGlhbkludGVycG9sYXRlLFxuICBbLXBpLCAtaGFsZlBpXVxuKTtcblxuLy8gVGFrZXMgYSBsaW5lIGFuZCBjdXRzIGludG8gdmlzaWJsZSBzZWdtZW50cy4gUmV0dXJuIHZhbHVlczogMCAtIHRoZXJlIHdlcmVcbi8vIGludGVyc2VjdGlvbnMgb3IgdGhlIGxpbmUgd2FzIGVtcHR5OyAxIC0gbm8gaW50ZXJzZWN0aW9uczsgMiAtIHRoZXJlIHdlcmVcbi8vIGludGVyc2VjdGlvbnMsIGFuZCB0aGUgZmlyc3QgYW5kIGxhc3Qgc2VnbWVudHMgc2hvdWxkIGJlIHJlam9pbmVkLlxuZnVuY3Rpb24gY2xpcEFudGltZXJpZGlhbkxpbmUoc3RyZWFtKSB7XG4gIHZhciBsYW1iZGEwID0gTmFOLFxuICAgICAgcGhpMCA9IE5hTixcbiAgICAgIHNpZ24wID0gTmFOLFxuICAgICAgY2xlYW47IC8vIG5vIGludGVyc2VjdGlvbnNcblxuICByZXR1cm4ge1xuICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICBjbGVhbiA9IDE7XG4gICAgfSxcbiAgICBwb2ludDogZnVuY3Rpb24obGFtYmRhMSwgcGhpMSkge1xuICAgICAgdmFyIHNpZ24xID0gbGFtYmRhMSA+IDAgPyBwaSA6IC1waSxcbiAgICAgICAgICBkZWx0YSA9IGFicyhsYW1iZGExIC0gbGFtYmRhMCk7XG4gICAgICBpZiAoYWJzKGRlbHRhIC0gcGkpIDwgZXBzaWxvbikgeyAvLyBsaW5lIGNyb3NzZXMgYSBwb2xlXG4gICAgICAgIHN0cmVhbS5wb2ludChsYW1iZGEwLCBwaGkwID0gKHBoaTAgKyBwaGkxKSAvIDIgPiAwID8gaGFsZlBpIDogLWhhbGZQaSk7XG4gICAgICAgIHN0cmVhbS5wb2ludChzaWduMCwgcGhpMCk7XG4gICAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgc3RyZWFtLnBvaW50KHNpZ24xLCBwaGkwKTtcbiAgICAgICAgc3RyZWFtLnBvaW50KGxhbWJkYTEsIHBoaTApO1xuICAgICAgICBjbGVhbiA9IDA7XG4gICAgICB9IGVsc2UgaWYgKHNpZ24wICE9PSBzaWduMSAmJiBkZWx0YSA+PSBwaSkgeyAvLyBsaW5lIGNyb3NzZXMgYW50aW1lcmlkaWFuXG4gICAgICAgIGlmIChhYnMobGFtYmRhMCAtIHNpZ24wKSA8IGVwc2lsb24pIGxhbWJkYTAgLT0gc2lnbjAgKiBlcHNpbG9uOyAvLyBoYW5kbGUgZGVnZW5lcmFjaWVzXG4gICAgICAgIGlmIChhYnMobGFtYmRhMSAtIHNpZ24xKSA8IGVwc2lsb24pIGxhbWJkYTEgLT0gc2lnbjEgKiBlcHNpbG9uO1xuICAgICAgICBwaGkwID0gY2xpcEFudGltZXJpZGlhbkludGVyc2VjdChsYW1iZGEwLCBwaGkwLCBsYW1iZGExLCBwaGkxKTtcbiAgICAgICAgc3RyZWFtLnBvaW50KHNpZ24wLCBwaGkwKTtcbiAgICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICBzdHJlYW0ucG9pbnQoc2lnbjEsIHBoaTApO1xuICAgICAgICBjbGVhbiA9IDA7XG4gICAgICB9XG4gICAgICBzdHJlYW0ucG9pbnQobGFtYmRhMCA9IGxhbWJkYTEsIHBoaTAgPSBwaGkxKTtcbiAgICAgIHNpZ24wID0gc2lnbjE7XG4gICAgfSxcbiAgICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICBsYW1iZGEwID0gcGhpMCA9IE5hTjtcbiAgICB9LFxuICAgIGNsZWFuOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAyIC0gY2xlYW47IC8vIGlmIGludGVyc2VjdGlvbnMsIHJlam9pbiBmaXJzdCBhbmQgbGFzdCBzZWdtZW50c1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gY2xpcEFudGltZXJpZGlhbkludGVyc2VjdChsYW1iZGEwLCBwaGkwLCBsYW1iZGExLCBwaGkxKSB7XG4gIHZhciBjb3NQaGkwLFxuICAgICAgY29zUGhpMSxcbiAgICAgIHNpbkxhbWJkYTBMYW1iZGExID0gc2luKGxhbWJkYTAgLSBsYW1iZGExKTtcbiAgcmV0dXJuIGFicyhzaW5MYW1iZGEwTGFtYmRhMSkgPiBlcHNpbG9uXG4gICAgICA/IGF0YW4oKHNpbihwaGkwKSAqIChjb3NQaGkxID0gY29zKHBoaTEpKSAqIHNpbihsYW1iZGExKVxuICAgICAgICAgIC0gc2luKHBoaTEpICogKGNvc1BoaTAgPSBjb3MocGhpMCkpICogc2luKGxhbWJkYTApKVxuICAgICAgICAgIC8gKGNvc1BoaTAgKiBjb3NQaGkxICogc2luTGFtYmRhMExhbWJkYTEpKVxuICAgICAgOiAocGhpMCArIHBoaTEpIC8gMjtcbn1cblxuZnVuY3Rpb24gY2xpcEFudGltZXJpZGlhbkludGVycG9sYXRlKGZyb20sIHRvLCBkaXJlY3Rpb24sIHN0cmVhbSkge1xuICB2YXIgcGhpO1xuICBpZiAoZnJvbSA9PSBudWxsKSB7XG4gICAgcGhpID0gZGlyZWN0aW9uICogaGFsZlBpO1xuICAgIHN0cmVhbS5wb2ludCgtcGksIHBoaSk7XG4gICAgc3RyZWFtLnBvaW50KDAsIHBoaSk7XG4gICAgc3RyZWFtLnBvaW50KHBpLCBwaGkpO1xuICAgIHN0cmVhbS5wb2ludChwaSwgMCk7XG4gICAgc3RyZWFtLnBvaW50KHBpLCAtcGhpKTtcbiAgICBzdHJlYW0ucG9pbnQoMCwgLXBoaSk7XG4gICAgc3RyZWFtLnBvaW50KC1waSwgLXBoaSk7XG4gICAgc3RyZWFtLnBvaW50KC1waSwgMCk7XG4gICAgc3RyZWFtLnBvaW50KC1waSwgcGhpKTtcbiAgfSBlbHNlIGlmIChhYnMoZnJvbVswXSAtIHRvWzBdKSA+IGVwc2lsb24pIHtcbiAgICB2YXIgbGFtYmRhID0gZnJvbVswXSA8IHRvWzBdID8gcGkgOiAtcGk7XG4gICAgcGhpID0gZGlyZWN0aW9uICogbGFtYmRhIC8gMjtcbiAgICBzdHJlYW0ucG9pbnQoLWxhbWJkYSwgcGhpKTtcbiAgICBzdHJlYW0ucG9pbnQoMCwgcGhpKTtcbiAgICBzdHJlYW0ucG9pbnQobGFtYmRhLCBwaGkpO1xuICB9IGVsc2Uge1xuICAgIHN0cmVhbS5wb2ludCh0b1swXSwgdG9bMV0pO1xuICB9XG59XG4iLCJpbXBvcnQgbm9vcCBmcm9tIFwiLi4vbm9vcFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGxpbmVzID0gW10sXG4gICAgICBsaW5lO1xuICByZXR1cm4ge1xuICAgIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgICBsaW5lLnB1c2goW3gsIHldKTtcbiAgICB9LFxuICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBsaW5lcy5wdXNoKGxpbmUgPSBbXSk7XG4gICAgfSxcbiAgICBsaW5lRW5kOiBub29wLFxuICAgIHJlam9pbjogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAobGluZXMubGVuZ3RoID4gMSkgbGluZXMucHVzaChsaW5lcy5wb3AoKS5jb25jYXQobGluZXMuc2hpZnQoKSkpO1xuICAgIH0sXG4gICAgcmVzdWx0OiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciByZXN1bHQgPSBsaW5lcztcbiAgICAgIGxpbmVzID0gW107XG4gICAgICBsaW5lID0gbnVsbDtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICB9O1xufVxuIiwiaW1wb3J0IHtjYXJ0ZXNpYW4sIGNhcnRlc2lhbkFkZEluUGxhY2UsIGNhcnRlc2lhbkNyb3NzLCBjYXJ0ZXNpYW5Eb3QsIGNhcnRlc2lhblNjYWxlLCBzcGhlcmljYWx9IGZyb20gXCIuLi9jYXJ0ZXNpYW5cIjtcbmltcG9ydCB7Y2lyY2xlU3RyZWFtfSBmcm9tIFwiLi4vY2lyY2xlXCI7XG5pbXBvcnQge2FicywgY29zLCBlcHNpbG9uLCBwaSwgcmFkaWFucywgc3FydH0gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCBwb2ludEVxdWFsIGZyb20gXCIuLi9wb2ludEVxdWFsXCI7XG5pbXBvcnQgY2xpcCBmcm9tIFwiLi9pbmRleFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihyYWRpdXMpIHtcbiAgdmFyIGNyID0gY29zKHJhZGl1cyksXG4gICAgICBkZWx0YSA9IDYgKiByYWRpYW5zLFxuICAgICAgc21hbGxSYWRpdXMgPSBjciA+IDAsXG4gICAgICBub3RIZW1pc3BoZXJlID0gYWJzKGNyKSA+IGVwc2lsb247IC8vIFRPRE8gb3B0aW1pc2UgZm9yIHRoaXMgY29tbW9uIGNhc2VcblxuICBmdW5jdGlvbiBpbnRlcnBvbGF0ZShmcm9tLCB0bywgZGlyZWN0aW9uLCBzdHJlYW0pIHtcbiAgICBjaXJjbGVTdHJlYW0oc3RyZWFtLCByYWRpdXMsIGRlbHRhLCBkaXJlY3Rpb24sIGZyb20sIHRvKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHZpc2libGUobGFtYmRhLCBwaGkpIHtcbiAgICByZXR1cm4gY29zKGxhbWJkYSkgKiBjb3MocGhpKSA+IGNyO1xuICB9XG5cbiAgLy8gVGFrZXMgYSBsaW5lIGFuZCBjdXRzIGludG8gdmlzaWJsZSBzZWdtZW50cy4gUmV0dXJuIHZhbHVlcyB1c2VkIGZvciBwb2x5Z29uXG4gIC8vIGNsaXBwaW5nOiAwIC0gdGhlcmUgd2VyZSBpbnRlcnNlY3Rpb25zIG9yIHRoZSBsaW5lIHdhcyBlbXB0eTsgMSAtIG5vXG4gIC8vIGludGVyc2VjdGlvbnMgMiAtIHRoZXJlIHdlcmUgaW50ZXJzZWN0aW9ucywgYW5kIHRoZSBmaXJzdCBhbmQgbGFzdCBzZWdtZW50c1xuICAvLyBzaG91bGQgYmUgcmVqb2luZWQuXG4gIGZ1bmN0aW9uIGNsaXBMaW5lKHN0cmVhbSkge1xuICAgIHZhciBwb2ludDAsIC8vIHByZXZpb3VzIHBvaW50XG4gICAgICAgIGMwLCAvLyBjb2RlIGZvciBwcmV2aW91cyBwb2ludFxuICAgICAgICB2MCwgLy8gdmlzaWJpbGl0eSBvZiBwcmV2aW91cyBwb2ludFxuICAgICAgICB2MDAsIC8vIHZpc2liaWxpdHkgb2YgZmlyc3QgcG9pbnRcbiAgICAgICAgY2xlYW47IC8vIG5vIGludGVyc2VjdGlvbnNcbiAgICByZXR1cm4ge1xuICAgICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgdjAwID0gdjAgPSBmYWxzZTtcbiAgICAgICAgY2xlYW4gPSAxO1xuICAgICAgfSxcbiAgICAgIHBvaW50OiBmdW5jdGlvbihsYW1iZGEsIHBoaSkge1xuICAgICAgICB2YXIgcG9pbnQxID0gW2xhbWJkYSwgcGhpXSxcbiAgICAgICAgICAgIHBvaW50MixcbiAgICAgICAgICAgIHYgPSB2aXNpYmxlKGxhbWJkYSwgcGhpKSxcbiAgICAgICAgICAgIGMgPSBzbWFsbFJhZGl1c1xuICAgICAgICAgICAgICA/IHYgPyAwIDogY29kZShsYW1iZGEsIHBoaSlcbiAgICAgICAgICAgICAgOiB2ID8gY29kZShsYW1iZGEgKyAobGFtYmRhIDwgMCA/IHBpIDogLXBpKSwgcGhpKSA6IDA7XG4gICAgICAgIGlmICghcG9pbnQwICYmICh2MDAgPSB2MCA9IHYpKSBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgIC8vIEhhbmRsZSBkZWdlbmVyYWNpZXMuXG4gICAgICAgIC8vIFRPRE8gaWdub3JlIGlmIG5vdCBjbGlwcGluZyBwb2x5Z29ucy5cbiAgICAgICAgaWYgKHYgIT09IHYwKSB7XG4gICAgICAgICAgcG9pbnQyID0gaW50ZXJzZWN0KHBvaW50MCwgcG9pbnQxKTtcbiAgICAgICAgICBpZiAoIXBvaW50MiB8fCBwb2ludEVxdWFsKHBvaW50MCwgcG9pbnQyKSB8fCBwb2ludEVxdWFsKHBvaW50MSwgcG9pbnQyKSkge1xuICAgICAgICAgICAgcG9pbnQxWzBdICs9IGVwc2lsb247XG4gICAgICAgICAgICBwb2ludDFbMV0gKz0gZXBzaWxvbjtcbiAgICAgICAgICAgIHYgPSB2aXNpYmxlKHBvaW50MVswXSwgcG9pbnQxWzFdKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHYgIT09IHYwKSB7XG4gICAgICAgICAgY2xlYW4gPSAwO1xuICAgICAgICAgIGlmICh2KSB7XG4gICAgICAgICAgICAvLyBvdXRzaWRlIGdvaW5nIGluXG4gICAgICAgICAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICBwb2ludDIgPSBpbnRlcnNlY3QocG9pbnQxLCBwb2ludDApO1xuICAgICAgICAgICAgc3RyZWFtLnBvaW50KHBvaW50MlswXSwgcG9pbnQyWzFdKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gaW5zaWRlIGdvaW5nIG91dFxuICAgICAgICAgICAgcG9pbnQyID0gaW50ZXJzZWN0KHBvaW50MCwgcG9pbnQxKTtcbiAgICAgICAgICAgIHN0cmVhbS5wb2ludChwb2ludDJbMF0sIHBvaW50MlsxXSk7XG4gICAgICAgICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBwb2ludDAgPSBwb2ludDI7XG4gICAgICAgIH0gZWxzZSBpZiAobm90SGVtaXNwaGVyZSAmJiBwb2ludDAgJiYgc21hbGxSYWRpdXMgXiB2KSB7XG4gICAgICAgICAgdmFyIHQ7XG4gICAgICAgICAgLy8gSWYgdGhlIGNvZGVzIGZvciB0d28gcG9pbnRzIGFyZSBkaWZmZXJlbnQsIG9yIGFyZSBib3RoIHplcm8sXG4gICAgICAgICAgLy8gYW5kIHRoZXJlIHRoaXMgc2VnbWVudCBpbnRlcnNlY3RzIHdpdGggdGhlIHNtYWxsIGNpcmNsZS5cbiAgICAgICAgICBpZiAoIShjICYgYzApICYmICh0ID0gaW50ZXJzZWN0KHBvaW50MSwgcG9pbnQwLCB0cnVlKSkpIHtcbiAgICAgICAgICAgIGNsZWFuID0gMDtcbiAgICAgICAgICAgIGlmIChzbWFsbFJhZGl1cykge1xuICAgICAgICAgICAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICAgIHN0cmVhbS5wb2ludCh0WzBdWzBdLCB0WzBdWzFdKTtcbiAgICAgICAgICAgICAgc3RyZWFtLnBvaW50KHRbMV1bMF0sIHRbMV1bMV0pO1xuICAgICAgICAgICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgc3RyZWFtLnBvaW50KHRbMV1bMF0sIHRbMV1bMV0pO1xuICAgICAgICAgICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICAgICAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICAgIHN0cmVhbS5wb2ludCh0WzBdWzBdLCB0WzBdWzFdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHYgJiYgKCFwb2ludDAgfHwgIXBvaW50RXF1YWwocG9pbnQwLCBwb2ludDEpKSkge1xuICAgICAgICAgIHN0cmVhbS5wb2ludChwb2ludDFbMF0sIHBvaW50MVsxXSk7XG4gICAgICAgIH1cbiAgICAgICAgcG9pbnQwID0gcG9pbnQxLCB2MCA9IHYsIGMwID0gYztcbiAgICAgIH0sXG4gICAgICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHYwKSBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICBwb2ludDAgPSBudWxsO1xuICAgICAgfSxcbiAgICAgIC8vIFJlam9pbiBmaXJzdCBhbmQgbGFzdCBzZWdtZW50cyBpZiB0aGVyZSB3ZXJlIGludGVyc2VjdGlvbnMgYW5kIHRoZSBmaXJzdFxuICAgICAgLy8gYW5kIGxhc3QgcG9pbnRzIHdlcmUgdmlzaWJsZS5cbiAgICAgIGNsZWFuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGNsZWFuIHwgKCh2MDAgJiYgdjApIDw8IDEpO1xuICAgICAgfVxuICAgIH07XG4gIH1cblxuICAvLyBJbnRlcnNlY3RzIHRoZSBncmVhdCBjaXJjbGUgYmV0d2VlbiBhIGFuZCBiIHdpdGggdGhlIGNsaXAgY2lyY2xlLlxuICBmdW5jdGlvbiBpbnRlcnNlY3QoYSwgYiwgdHdvKSB7XG4gICAgdmFyIHBhID0gY2FydGVzaWFuKGEpLFxuICAgICAgICBwYiA9IGNhcnRlc2lhbihiKTtcblxuICAgIC8vIFdlIGhhdmUgdHdvIHBsYW5lcywgbjEucCA9IGQxIGFuZCBuMi5wID0gZDIuXG4gICAgLy8gRmluZCBpbnRlcnNlY3Rpb24gbGluZSBwKHQpID0gYzEgbjEgKyBjMiBuMiArIHQgKG4xIOKoryBuMikuXG4gICAgdmFyIG4xID0gWzEsIDAsIDBdLCAvLyBub3JtYWxcbiAgICAgICAgbjIgPSBjYXJ0ZXNpYW5Dcm9zcyhwYSwgcGIpLFxuICAgICAgICBuMm4yID0gY2FydGVzaWFuRG90KG4yLCBuMiksXG4gICAgICAgIG4xbjIgPSBuMlswXSwgLy8gY2FydGVzaWFuRG90KG4xLCBuMiksXG4gICAgICAgIGRldGVybWluYW50ID0gbjJuMiAtIG4xbjIgKiBuMW4yO1xuXG4gICAgLy8gVHdvIHBvbGFyIHBvaW50cy5cbiAgICBpZiAoIWRldGVybWluYW50KSByZXR1cm4gIXR3byAmJiBhO1xuXG4gICAgdmFyIGMxID0gIGNyICogbjJuMiAvIGRldGVybWluYW50LFxuICAgICAgICBjMiA9IC1jciAqIG4xbjIgLyBkZXRlcm1pbmFudCxcbiAgICAgICAgbjF4bjIgPSBjYXJ0ZXNpYW5Dcm9zcyhuMSwgbjIpLFxuICAgICAgICBBID0gY2FydGVzaWFuU2NhbGUobjEsIGMxKSxcbiAgICAgICAgQiA9IGNhcnRlc2lhblNjYWxlKG4yLCBjMik7XG4gICAgY2FydGVzaWFuQWRkSW5QbGFjZShBLCBCKTtcblxuICAgIC8vIFNvbHZlIHxwKHQpfF4yID0gMS5cbiAgICB2YXIgdSA9IG4xeG4yLFxuICAgICAgICB3ID0gY2FydGVzaWFuRG90KEEsIHUpLFxuICAgICAgICB1dSA9IGNhcnRlc2lhbkRvdCh1LCB1KSxcbiAgICAgICAgdDIgPSB3ICogdyAtIHV1ICogKGNhcnRlc2lhbkRvdChBLCBBKSAtIDEpO1xuXG4gICAgaWYgKHQyIDwgMCkgcmV0dXJuO1xuXG4gICAgdmFyIHQgPSBzcXJ0KHQyKSxcbiAgICAgICAgcSA9IGNhcnRlc2lhblNjYWxlKHUsICgtdyAtIHQpIC8gdXUpO1xuICAgIGNhcnRlc2lhbkFkZEluUGxhY2UocSwgQSk7XG4gICAgcSA9IHNwaGVyaWNhbChxKTtcblxuICAgIGlmICghdHdvKSByZXR1cm4gcTtcblxuICAgIC8vIFR3byBpbnRlcnNlY3Rpb24gcG9pbnRzLlxuICAgIHZhciBsYW1iZGEwID0gYVswXSxcbiAgICAgICAgbGFtYmRhMSA9IGJbMF0sXG4gICAgICAgIHBoaTAgPSBhWzFdLFxuICAgICAgICBwaGkxID0gYlsxXSxcbiAgICAgICAgejtcblxuICAgIGlmIChsYW1iZGExIDwgbGFtYmRhMCkgeiA9IGxhbWJkYTAsIGxhbWJkYTAgPSBsYW1iZGExLCBsYW1iZGExID0gejtcblxuICAgIHZhciBkZWx0YSA9IGxhbWJkYTEgLSBsYW1iZGEwLFxuICAgICAgICBwb2xhciA9IGFicyhkZWx0YSAtIHBpKSA8IGVwc2lsb24sXG4gICAgICAgIG1lcmlkaWFuID0gcG9sYXIgfHwgZGVsdGEgPCBlcHNpbG9uO1xuXG4gICAgaWYgKCFwb2xhciAmJiBwaGkxIDwgcGhpMCkgeiA9IHBoaTAsIHBoaTAgPSBwaGkxLCBwaGkxID0gejtcblxuICAgIC8vIENoZWNrIHRoYXQgdGhlIGZpcnN0IHBvaW50IGlzIGJldHdlZW4gYSBhbmQgYi5cbiAgICBpZiAobWVyaWRpYW5cbiAgICAgICAgPyBwb2xhclxuICAgICAgICAgID8gcGhpMCArIHBoaTEgPiAwIF4gcVsxXSA8IChhYnMocVswXSAtIGxhbWJkYTApIDwgZXBzaWxvbiA/IHBoaTAgOiBwaGkxKVxuICAgICAgICAgIDogcGhpMCA8PSBxWzFdICYmIHFbMV0gPD0gcGhpMVxuICAgICAgICA6IGRlbHRhID4gcGkgXiAobGFtYmRhMCA8PSBxWzBdICYmIHFbMF0gPD0gbGFtYmRhMSkpIHtcbiAgICAgIHZhciBxMSA9IGNhcnRlc2lhblNjYWxlKHUsICgtdyArIHQpIC8gdXUpO1xuICAgICAgY2FydGVzaWFuQWRkSW5QbGFjZShxMSwgQSk7XG4gICAgICByZXR1cm4gW3EsIHNwaGVyaWNhbChxMSldO1xuICAgIH1cbiAgfVxuXG4gIC8vIEdlbmVyYXRlcyBhIDQtYml0IHZlY3RvciByZXByZXNlbnRpbmcgdGhlIGxvY2F0aW9uIG9mIGEgcG9pbnQgcmVsYXRpdmUgdG9cbiAgLy8gdGhlIHNtYWxsIGNpcmNsZSdzIGJvdW5kaW5nIGJveC5cbiAgZnVuY3Rpb24gY29kZShsYW1iZGEsIHBoaSkge1xuICAgIHZhciByID0gc21hbGxSYWRpdXMgPyByYWRpdXMgOiBwaSAtIHJhZGl1cyxcbiAgICAgICAgY29kZSA9IDA7XG4gICAgaWYgKGxhbWJkYSA8IC1yKSBjb2RlIHw9IDE7IC8vIGxlZnRcbiAgICBlbHNlIGlmIChsYW1iZGEgPiByKSBjb2RlIHw9IDI7IC8vIHJpZ2h0XG4gICAgaWYgKHBoaSA8IC1yKSBjb2RlIHw9IDQ7IC8vIGJlbG93XG4gICAgZWxzZSBpZiAocGhpID4gcikgY29kZSB8PSA4OyAvLyBhYm92ZVxuICAgIHJldHVybiBjb2RlO1xuICB9XG5cbiAgcmV0dXJuIGNsaXAodmlzaWJsZSwgY2xpcExpbmUsIGludGVycG9sYXRlLCBzbWFsbFJhZGl1cyA/IFswLCAtcmFkaXVzXSA6IFstcGksIHJhZGl1cyAtIHBpXSk7XG59XG4iLCJpbXBvcnQgY2xpcFJlY3RhbmdsZSBmcm9tIFwiLi9yZWN0YW5nbGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciB4MCA9IDAsXG4gICAgICB5MCA9IDAsXG4gICAgICB4MSA9IDk2MCxcbiAgICAgIHkxID0gNTAwLFxuICAgICAgY2FjaGUsXG4gICAgICBjYWNoZVN0cmVhbSxcbiAgICAgIGNsaXA7XG5cbiAgcmV0dXJuIGNsaXAgPSB7XG4gICAgc3RyZWFtOiBmdW5jdGlvbihzdHJlYW0pIHtcbiAgICAgIHJldHVybiBjYWNoZSAmJiBjYWNoZVN0cmVhbSA9PT0gc3RyZWFtID8gY2FjaGUgOiBjYWNoZSA9IGNsaXBSZWN0YW5nbGUoeDAsIHkwLCB4MSwgeTEpKGNhY2hlU3RyZWFtID0gc3RyZWFtKTtcbiAgICB9LFxuICAgIGV4dGVudDogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeDAgPSArX1swXVswXSwgeTAgPSArX1swXVsxXSwgeDEgPSArX1sxXVswXSwgeTEgPSArX1sxXVsxXSwgY2FjaGUgPSBjYWNoZVN0cmVhbSA9IG51bGwsIGNsaXApIDogW1t4MCwgeTBdLCBbeDEsIHkxXV07XG4gICAgfVxuICB9O1xufVxuIiwiaW1wb3J0IGNsaXBCdWZmZXIgZnJvbSBcIi4vYnVmZmVyXCI7XG5pbXBvcnQgY2xpcFJlam9pbiBmcm9tIFwiLi9yZWpvaW5cIjtcbmltcG9ydCB7ZXBzaWxvbiwgaGFsZlBpfSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHBvbHlnb25Db250YWlucyBmcm9tIFwiLi4vcG9seWdvbkNvbnRhaW5zXCI7XG5pbXBvcnQge21lcmdlfSBmcm9tIFwiZDMtYXJyYXlcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocG9pbnRWaXNpYmxlLCBjbGlwTGluZSwgaW50ZXJwb2xhdGUsIHN0YXJ0KSB7XG4gIHJldHVybiBmdW5jdGlvbihzaW5rKSB7XG4gICAgdmFyIGxpbmUgPSBjbGlwTGluZShzaW5rKSxcbiAgICAgICAgcmluZ0J1ZmZlciA9IGNsaXBCdWZmZXIoKSxcbiAgICAgICAgcmluZ1NpbmsgPSBjbGlwTGluZShyaW5nQnVmZmVyKSxcbiAgICAgICAgcG9seWdvblN0YXJ0ZWQgPSBmYWxzZSxcbiAgICAgICAgcG9seWdvbixcbiAgICAgICAgc2VnbWVudHMsXG4gICAgICAgIHJpbmc7XG5cbiAgICB2YXIgY2xpcCA9IHtcbiAgICAgIHBvaW50OiBwb2ludCxcbiAgICAgIGxpbmVTdGFydDogbGluZVN0YXJ0LFxuICAgICAgbGluZUVuZDogbGluZUVuZCxcbiAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGNsaXAucG9pbnQgPSBwb2ludFJpbmc7XG4gICAgICAgIGNsaXAubGluZVN0YXJ0ID0gcmluZ1N0YXJ0O1xuICAgICAgICBjbGlwLmxpbmVFbmQgPSByaW5nRW5kO1xuICAgICAgICBzZWdtZW50cyA9IFtdO1xuICAgICAgICBwb2x5Z29uID0gW107XG4gICAgICB9LFxuICAgICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGNsaXAucG9pbnQgPSBwb2ludDtcbiAgICAgICAgY2xpcC5saW5lU3RhcnQgPSBsaW5lU3RhcnQ7XG4gICAgICAgIGNsaXAubGluZUVuZCA9IGxpbmVFbmQ7XG4gICAgICAgIHNlZ21lbnRzID0gbWVyZ2Uoc2VnbWVudHMpO1xuICAgICAgICB2YXIgc3RhcnRJbnNpZGUgPSBwb2x5Z29uQ29udGFpbnMocG9seWdvbiwgc3RhcnQpO1xuICAgICAgICBpZiAoc2VnbWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgaWYgKCFwb2x5Z29uU3RhcnRlZCkgc2luay5wb2x5Z29uU3RhcnQoKSwgcG9seWdvblN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICAgIGNsaXBSZWpvaW4oc2VnbWVudHMsIGNvbXBhcmVJbnRlcnNlY3Rpb24sIHN0YXJ0SW5zaWRlLCBpbnRlcnBvbGF0ZSwgc2luayk7XG4gICAgICAgIH0gZWxzZSBpZiAoc3RhcnRJbnNpZGUpIHtcbiAgICAgICAgICBpZiAoIXBvbHlnb25TdGFydGVkKSBzaW5rLnBvbHlnb25TdGFydCgpLCBwb2x5Z29uU3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgc2luay5saW5lU3RhcnQoKTtcbiAgICAgICAgICBpbnRlcnBvbGF0ZShudWxsLCBudWxsLCAxLCBzaW5rKTtcbiAgICAgICAgICBzaW5rLmxpbmVFbmQoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocG9seWdvblN0YXJ0ZWQpIHNpbmsucG9seWdvbkVuZCgpLCBwb2x5Z29uU3RhcnRlZCA9IGZhbHNlO1xuICAgICAgICBzZWdtZW50cyA9IHBvbHlnb24gPSBudWxsO1xuICAgICAgfSxcbiAgICAgIHNwaGVyZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHNpbmsucG9seWdvblN0YXJ0KCk7XG4gICAgICAgIHNpbmsubGluZVN0YXJ0KCk7XG4gICAgICAgIGludGVycG9sYXRlKG51bGwsIG51bGwsIDEsIHNpbmspO1xuICAgICAgICBzaW5rLmxpbmVFbmQoKTtcbiAgICAgICAgc2luay5wb2x5Z29uRW5kKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHBvaW50KGxhbWJkYSwgcGhpKSB7XG4gICAgICBpZiAocG9pbnRWaXNpYmxlKGxhbWJkYSwgcGhpKSkgc2luay5wb2ludChsYW1iZGEsIHBoaSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcG9pbnRMaW5lKGxhbWJkYSwgcGhpKSB7XG4gICAgICBsaW5lLnBvaW50KGxhbWJkYSwgcGhpKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsaW5lU3RhcnQoKSB7XG4gICAgICBjbGlwLnBvaW50ID0gcG9pbnRMaW5lO1xuICAgICAgbGluZS5saW5lU3RhcnQoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgY2xpcC5wb2ludCA9IHBvaW50O1xuICAgICAgbGluZS5saW5lRW5kKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcG9pbnRSaW5nKGxhbWJkYSwgcGhpKSB7XG4gICAgICByaW5nLnB1c2goW2xhbWJkYSwgcGhpXSk7XG4gICAgICByaW5nU2luay5wb2ludChsYW1iZGEsIHBoaSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmluZ1N0YXJ0KCkge1xuICAgICAgcmluZ1NpbmsubGluZVN0YXJ0KCk7XG4gICAgICByaW5nID0gW107XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmluZ0VuZCgpIHtcbiAgICAgIHBvaW50UmluZyhyaW5nWzBdWzBdLCByaW5nWzBdWzFdKTtcbiAgICAgIHJpbmdTaW5rLmxpbmVFbmQoKTtcblxuICAgICAgdmFyIGNsZWFuID0gcmluZ1NpbmsuY2xlYW4oKSxcbiAgICAgICAgICByaW5nU2VnbWVudHMgPSByaW5nQnVmZmVyLnJlc3VsdCgpLFxuICAgICAgICAgIGksIG4gPSByaW5nU2VnbWVudHMubGVuZ3RoLCBtLFxuICAgICAgICAgIHNlZ21lbnQsXG4gICAgICAgICAgcG9pbnQ7XG5cbiAgICAgIHJpbmcucG9wKCk7XG4gICAgICBwb2x5Z29uLnB1c2gocmluZyk7XG4gICAgICByaW5nID0gbnVsbDtcblxuICAgICAgaWYgKCFuKSByZXR1cm47XG5cbiAgICAgIC8vIE5vIGludGVyc2VjdGlvbnMuXG4gICAgICBpZiAoY2xlYW4gJiAxKSB7XG4gICAgICAgIHNlZ21lbnQgPSByaW5nU2VnbWVudHNbMF07XG4gICAgICAgIGlmICgobSA9IHNlZ21lbnQubGVuZ3RoIC0gMSkgPiAwKSB7XG4gICAgICAgICAgaWYgKCFwb2x5Z29uU3RhcnRlZCkgc2luay5wb2x5Z29uU3RhcnQoKSwgcG9seWdvblN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICAgIHNpbmsubGluZVN0YXJ0KCk7XG4gICAgICAgICAgZm9yIChpID0gMDsgaSA8IG07ICsraSkgc2luay5wb2ludCgocG9pbnQgPSBzZWdtZW50W2ldKVswXSwgcG9pbnRbMV0pO1xuICAgICAgICAgIHNpbmsubGluZUVuZCgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gUmVqb2luIGNvbm5lY3RlZCBzZWdtZW50cy5cbiAgICAgIC8vIFRPRE8gcmV1c2UgcmluZ0J1ZmZlci5yZWpvaW4oKT9cbiAgICAgIGlmIChuID4gMSAmJiBjbGVhbiAmIDIpIHJpbmdTZWdtZW50cy5wdXNoKHJpbmdTZWdtZW50cy5wb3AoKS5jb25jYXQocmluZ1NlZ21lbnRzLnNoaWZ0KCkpKTtcblxuICAgICAgc2VnbWVudHMucHVzaChyaW5nU2VnbWVudHMuZmlsdGVyKHZhbGlkU2VnbWVudCkpO1xuICAgIH1cblxuICAgIHJldHVybiBjbGlwO1xuICB9O1xufVxuXG5mdW5jdGlvbiB2YWxpZFNlZ21lbnQoc2VnbWVudCkge1xuICByZXR1cm4gc2VnbWVudC5sZW5ndGggPiAxO1xufVxuXG4vLyBJbnRlcnNlY3Rpb25zIGFyZSBzb3J0ZWQgYWxvbmcgdGhlIGNsaXAgZWRnZS4gRm9yIGJvdGggYW50aW1lcmlkaWFuIGN1dHRpbmdcbi8vIGFuZCBjaXJjbGUgY2xpcHBpbmcsIHRoZSBzYW1lIGNvbXBhcmlzb24gaXMgdXNlZC5cbmZ1bmN0aW9uIGNvbXBhcmVJbnRlcnNlY3Rpb24oYSwgYikge1xuICByZXR1cm4gKChhID0gYS54KVswXSA8IDAgPyBhWzFdIC0gaGFsZlBpIC0gZXBzaWxvbiA6IGhhbGZQaSAtIGFbMV0pXG4gICAgICAgLSAoKGIgPSBiLngpWzBdIDwgMCA/IGJbMV0gLSBoYWxmUGkgLSBlcHNpbG9uIDogaGFsZlBpIC0gYlsxXSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiLCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgYXggPSBhWzBdLFxuICAgICAgYXkgPSBhWzFdLFxuICAgICAgYnggPSBiWzBdLFxuICAgICAgYnkgPSBiWzFdLFxuICAgICAgdDAgPSAwLFxuICAgICAgdDEgPSAxLFxuICAgICAgZHggPSBieCAtIGF4LFxuICAgICAgZHkgPSBieSAtIGF5LFxuICAgICAgcjtcblxuICByID0geDAgLSBheDtcbiAgaWYgKCFkeCAmJiByID4gMCkgcmV0dXJuO1xuICByIC89IGR4O1xuICBpZiAoZHggPCAwKSB7XG4gICAgaWYgKHIgPCB0MCkgcmV0dXJuO1xuICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgfSBlbHNlIGlmIChkeCA+IDApIHtcbiAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICB9XG5cbiAgciA9IHgxIC0gYXg7XG4gIGlmICghZHggJiYgciA8IDApIHJldHVybjtcbiAgciAvPSBkeDtcbiAgaWYgKGR4IDwgMCkge1xuICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICBpZiAociA+IHQwKSB0MCA9IHI7XG4gIH0gZWxzZSBpZiAoZHggPiAwKSB7XG4gICAgaWYgKHIgPCB0MCkgcmV0dXJuO1xuICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgfVxuXG4gIHIgPSB5MCAtIGF5O1xuICBpZiAoIWR5ICYmIHIgPiAwKSByZXR1cm47XG4gIHIgLz0gZHk7XG4gIGlmIChkeSA8IDApIHtcbiAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICB9IGVsc2UgaWYgKGR5ID4gMCkge1xuICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICBpZiAociA+IHQwKSB0MCA9IHI7XG4gIH1cblxuICByID0geTEgLSBheTtcbiAgaWYgKCFkeSAmJiByIDwgMCkgcmV0dXJuO1xuICByIC89IGR5O1xuICBpZiAoZHkgPCAwKSB7XG4gICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgfSBlbHNlIGlmIChkeSA+IDApIHtcbiAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICB9XG5cbiAgaWYgKHQwID4gMCkgYVswXSA9IGF4ICsgdDAgKiBkeCwgYVsxXSA9IGF5ICsgdDAgKiBkeTtcbiAgaWYgKHQxIDwgMSkgYlswXSA9IGF4ICsgdDEgKiBkeCwgYlsxXSA9IGF5ICsgdDEgKiBkeTtcbiAgcmV0dXJuIHRydWU7XG59XG4iLCJpbXBvcnQge2FicywgZXBzaWxvbn0gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCBjbGlwQnVmZmVyIGZyb20gXCIuL2J1ZmZlclwiO1xuaW1wb3J0IGNsaXBMaW5lIGZyb20gXCIuL2xpbmVcIjtcbmltcG9ydCBjbGlwUmVqb2luIGZyb20gXCIuL3Jlam9pblwiO1xuaW1wb3J0IHttZXJnZX0gZnJvbSBcImQzLWFycmF5XCI7XG5cbnZhciBjbGlwTWF4ID0gMWU5LCBjbGlwTWluID0gLWNsaXBNYXg7XG5cbi8vIFRPRE8gVXNlIGQzLXBvbHlnb27igJlzIHBvbHlnb25Db250YWlucyBoZXJlIGZvciB0aGUgcmluZyBjaGVjaz9cbi8vIFRPRE8gRWxpbWluYXRlIGR1cGxpY2F0ZSBidWZmZXJpbmcgaW4gY2xpcEJ1ZmZlciBhbmQgcG9seWdvbi5wdXNoP1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjbGlwUmVjdGFuZ2xlKHgwLCB5MCwgeDEsIHkxKSB7XG5cbiAgZnVuY3Rpb24gdmlzaWJsZSh4LCB5KSB7XG4gICAgcmV0dXJuIHgwIDw9IHggJiYgeCA8PSB4MSAmJiB5MCA8PSB5ICYmIHkgPD0geTE7XG4gIH1cblxuICBmdW5jdGlvbiBpbnRlcnBvbGF0ZShmcm9tLCB0bywgZGlyZWN0aW9uLCBzdHJlYW0pIHtcbiAgICB2YXIgYSA9IDAsIGExID0gMDtcbiAgICBpZiAoZnJvbSA9PSBudWxsXG4gICAgICAgIHx8IChhID0gY29ybmVyKGZyb20sIGRpcmVjdGlvbikpICE9PSAoYTEgPSBjb3JuZXIodG8sIGRpcmVjdGlvbikpXG4gICAgICAgIHx8IGNvbXBhcmVQb2ludChmcm9tLCB0bykgPCAwIF4gZGlyZWN0aW9uID4gMCkge1xuICAgICAgZG8gc3RyZWFtLnBvaW50KGEgPT09IDAgfHwgYSA9PT0gMyA/IHgwIDogeDEsIGEgPiAxID8geTEgOiB5MCk7XG4gICAgICB3aGlsZSAoKGEgPSAoYSArIGRpcmVjdGlvbiArIDQpICUgNCkgIT09IGExKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RyZWFtLnBvaW50KHRvWzBdLCB0b1sxXSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY29ybmVyKHAsIGRpcmVjdGlvbikge1xuICAgIHJldHVybiBhYnMocFswXSAtIHgwKSA8IGVwc2lsb24gPyBkaXJlY3Rpb24gPiAwID8gMCA6IDNcbiAgICAgICAgOiBhYnMocFswXSAtIHgxKSA8IGVwc2lsb24gPyBkaXJlY3Rpb24gPiAwID8gMiA6IDFcbiAgICAgICAgOiBhYnMocFsxXSAtIHkwKSA8IGVwc2lsb24gPyBkaXJlY3Rpb24gPiAwID8gMSA6IDBcbiAgICAgICAgOiBkaXJlY3Rpb24gPiAwID8gMyA6IDI7IC8vIGFicyhwWzFdIC0geTEpIDwgZXBzaWxvblxuICB9XG5cbiAgZnVuY3Rpb24gY29tcGFyZUludGVyc2VjdGlvbihhLCBiKSB7XG4gICAgcmV0dXJuIGNvbXBhcmVQb2ludChhLngsIGIueCk7XG4gIH1cblxuICBmdW5jdGlvbiBjb21wYXJlUG9pbnQoYSwgYikge1xuICAgIHZhciBjYSA9IGNvcm5lcihhLCAxKSxcbiAgICAgICAgY2IgPSBjb3JuZXIoYiwgMSk7XG4gICAgcmV0dXJuIGNhICE9PSBjYiA/IGNhIC0gY2JcbiAgICAgICAgOiBjYSA9PT0gMCA/IGJbMV0gLSBhWzFdXG4gICAgICAgIDogY2EgPT09IDEgPyBhWzBdIC0gYlswXVxuICAgICAgICA6IGNhID09PSAyID8gYVsxXSAtIGJbMV1cbiAgICAgICAgOiBiWzBdIC0gYVswXTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbihzdHJlYW0pIHtcbiAgICB2YXIgYWN0aXZlU3RyZWFtID0gc3RyZWFtLFxuICAgICAgICBidWZmZXJTdHJlYW0gPSBjbGlwQnVmZmVyKCksXG4gICAgICAgIHNlZ21lbnRzLFxuICAgICAgICBwb2x5Z29uLFxuICAgICAgICByaW5nLFxuICAgICAgICB4X18sIHlfXywgdl9fLCAvLyBmaXJzdCBwb2ludFxuICAgICAgICB4XywgeV8sIHZfLCAvLyBwcmV2aW91cyBwb2ludFxuICAgICAgICBmaXJzdCxcbiAgICAgICAgY2xlYW47XG5cbiAgICB2YXIgY2xpcFN0cmVhbSA9IHtcbiAgICAgIHBvaW50OiBwb2ludCxcbiAgICAgIGxpbmVTdGFydDogbGluZVN0YXJ0LFxuICAgICAgbGluZUVuZDogbGluZUVuZCxcbiAgICAgIHBvbHlnb25TdGFydDogcG9seWdvblN0YXJ0LFxuICAgICAgcG9seWdvbkVuZDogcG9seWdvbkVuZFxuICAgIH07XG5cbiAgICBmdW5jdGlvbiBwb2ludCh4LCB5KSB7XG4gICAgICBpZiAodmlzaWJsZSh4LCB5KSkgYWN0aXZlU3RyZWFtLnBvaW50KHgsIHkpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHBvbHlnb25JbnNpZGUoKSB7XG4gICAgICB2YXIgd2luZGluZyA9IDA7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwLCBuID0gcG9seWdvbi5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgZm9yICh2YXIgcmluZyA9IHBvbHlnb25baV0sIGogPSAxLCBtID0gcmluZy5sZW5ndGgsIHBvaW50ID0gcmluZ1swXSwgYTAsIGExLCBiMCA9IHBvaW50WzBdLCBiMSA9IHBvaW50WzFdOyBqIDwgbTsgKytqKSB7XG4gICAgICAgICAgYTAgPSBiMCwgYTEgPSBiMSwgcG9pbnQgPSByaW5nW2pdLCBiMCA9IHBvaW50WzBdLCBiMSA9IHBvaW50WzFdO1xuICAgICAgICAgIGlmIChhMSA8PSB5MSkgeyBpZiAoYjEgPiB5MSAmJiAoYjAgLSBhMCkgKiAoeTEgLSBhMSkgPiAoYjEgLSBhMSkgKiAoeDAgLSBhMCkpICsrd2luZGluZzsgfVxuICAgICAgICAgIGVsc2UgeyBpZiAoYjEgPD0geTEgJiYgKGIwIC0gYTApICogKHkxIC0gYTEpIDwgKGIxIC0gYTEpICogKHgwIC0gYTApKSAtLXdpbmRpbmc7IH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gd2luZGluZztcbiAgICB9XG5cbiAgICAvLyBCdWZmZXIgZ2VvbWV0cnkgd2l0aGluIGEgcG9seWdvbiBhbmQgdGhlbiBjbGlwIGl0IGVuIG1hc3NlLlxuICAgIGZ1bmN0aW9uIHBvbHlnb25TdGFydCgpIHtcbiAgICAgIGFjdGl2ZVN0cmVhbSA9IGJ1ZmZlclN0cmVhbSwgc2VnbWVudHMgPSBbXSwgcG9seWdvbiA9IFtdLCBjbGVhbiA9IHRydWU7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcG9seWdvbkVuZCgpIHtcbiAgICAgIHZhciBzdGFydEluc2lkZSA9IHBvbHlnb25JbnNpZGUoKSxcbiAgICAgICAgICBjbGVhbkluc2lkZSA9IGNsZWFuICYmIHN0YXJ0SW5zaWRlLFxuICAgICAgICAgIHZpc2libGUgPSAoc2VnbWVudHMgPSBtZXJnZShzZWdtZW50cykpLmxlbmd0aDtcbiAgICAgIGlmIChjbGVhbkluc2lkZSB8fCB2aXNpYmxlKSB7XG4gICAgICAgIHN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgICAgICAgaWYgKGNsZWFuSW5zaWRlKSB7XG4gICAgICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICAgIGludGVycG9sYXRlKG51bGwsIG51bGwsIDEsIHN0cmVhbSk7XG4gICAgICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmlzaWJsZSkge1xuICAgICAgICAgIGNsaXBSZWpvaW4oc2VnbWVudHMsIGNvbXBhcmVJbnRlcnNlY3Rpb24sIHN0YXJ0SW5zaWRlLCBpbnRlcnBvbGF0ZSwgc3RyZWFtKTtcbiAgICAgICAgfVxuICAgICAgICBzdHJlYW0ucG9seWdvbkVuZCgpO1xuICAgICAgfVxuICAgICAgYWN0aXZlU3RyZWFtID0gc3RyZWFtLCBzZWdtZW50cyA9IHBvbHlnb24gPSByaW5nID0gbnVsbDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsaW5lU3RhcnQoKSB7XG4gICAgICBjbGlwU3RyZWFtLnBvaW50ID0gbGluZVBvaW50O1xuICAgICAgaWYgKHBvbHlnb24pIHBvbHlnb24ucHVzaChyaW5nID0gW10pO1xuICAgICAgZmlyc3QgPSB0cnVlO1xuICAgICAgdl8gPSBmYWxzZTtcbiAgICAgIHhfID0geV8gPSBOYU47XG4gICAgfVxuXG4gICAgLy8gVE9ETyByYXRoZXIgdGhhbiBzcGVjaWFsLWNhc2UgcG9seWdvbnMsIHNpbXBseSBoYW5kbGUgdGhlbSBzZXBhcmF0ZWx5LlxuICAgIC8vIElkZWFsbHksIGNvaW5jaWRlbnQgaW50ZXJzZWN0aW9uIHBvaW50cyBzaG91bGQgYmUgaml0dGVyZWQgdG8gYXZvaWRcbiAgICAvLyBjbGlwcGluZyBpc3N1ZXMuXG4gICAgZnVuY3Rpb24gbGluZUVuZCgpIHtcbiAgICAgIGlmIChzZWdtZW50cykge1xuICAgICAgICBsaW5lUG9pbnQoeF9fLCB5X18pO1xuICAgICAgICBpZiAodl9fICYmIHZfKSBidWZmZXJTdHJlYW0ucmVqb2luKCk7XG4gICAgICAgIHNlZ21lbnRzLnB1c2goYnVmZmVyU3RyZWFtLnJlc3VsdCgpKTtcbiAgICAgIH1cbiAgICAgIGNsaXBTdHJlYW0ucG9pbnQgPSBwb2ludDtcbiAgICAgIGlmICh2XykgYWN0aXZlU3RyZWFtLmxpbmVFbmQoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsaW5lUG9pbnQoeCwgeSkge1xuICAgICAgdmFyIHYgPSB2aXNpYmxlKHgsIHkpO1xuICAgICAgaWYgKHBvbHlnb24pIHJpbmcucHVzaChbeCwgeV0pO1xuICAgICAgaWYgKGZpcnN0KSB7XG4gICAgICAgIHhfXyA9IHgsIHlfXyA9IHksIHZfXyA9IHY7XG4gICAgICAgIGZpcnN0ID0gZmFsc2U7XG4gICAgICAgIGlmICh2KSB7XG4gICAgICAgICAgYWN0aXZlU3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICAgIGFjdGl2ZVN0cmVhbS5wb2ludCh4LCB5KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHYgJiYgdl8pIGFjdGl2ZVN0cmVhbS5wb2ludCh4LCB5KTtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgdmFyIGEgPSBbeF8gPSBNYXRoLm1heChjbGlwTWluLCBNYXRoLm1pbihjbGlwTWF4LCB4XykpLCB5XyA9IE1hdGgubWF4KGNsaXBNaW4sIE1hdGgubWluKGNsaXBNYXgsIHlfKSldLFxuICAgICAgICAgICAgICBiID0gW3ggPSBNYXRoLm1heChjbGlwTWluLCBNYXRoLm1pbihjbGlwTWF4LCB4KSksIHkgPSBNYXRoLm1heChjbGlwTWluLCBNYXRoLm1pbihjbGlwTWF4LCB5KSldO1xuICAgICAgICAgIGlmIChjbGlwTGluZShhLCBiLCB4MCwgeTAsIHgxLCB5MSkpIHtcbiAgICAgICAgICAgIGlmICghdl8pIHtcbiAgICAgICAgICAgICAgYWN0aXZlU3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgICBhY3RpdmVTdHJlYW0ucG9pbnQoYVswXSwgYVsxXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhY3RpdmVTdHJlYW0ucG9pbnQoYlswXSwgYlsxXSk7XG4gICAgICAgICAgICBpZiAoIXYpIGFjdGl2ZVN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgICAgICBjbGVhbiA9IGZhbHNlO1xuICAgICAgICAgIH0gZWxzZSBpZiAodikge1xuICAgICAgICAgICAgYWN0aXZlU3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgYWN0aXZlU3RyZWFtLnBvaW50KHgsIHkpO1xuICAgICAgICAgICAgY2xlYW4gPSBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHhfID0geCwgeV8gPSB5LCB2XyA9IHY7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNsaXBTdHJlYW07XG4gIH07XG59XG4iLCJpbXBvcnQgcG9pbnRFcXVhbCBmcm9tIFwiLi4vcG9pbnRFcXVhbFwiO1xuXG5mdW5jdGlvbiBJbnRlcnNlY3Rpb24ocG9pbnQsIHBvaW50cywgb3RoZXIsIGVudHJ5KSB7XG4gIHRoaXMueCA9IHBvaW50O1xuICB0aGlzLnogPSBwb2ludHM7XG4gIHRoaXMubyA9IG90aGVyOyAvLyBhbm90aGVyIGludGVyc2VjdGlvblxuICB0aGlzLmUgPSBlbnRyeTsgLy8gaXMgYW4gZW50cnk/XG4gIHRoaXMudiA9IGZhbHNlOyAvLyB2aXNpdGVkXG4gIHRoaXMubiA9IHRoaXMucCA9IG51bGw7IC8vIG5leHQgJiBwcmV2aW91c1xufVxuXG4vLyBBIGdlbmVyYWxpemVkIHBvbHlnb24gY2xpcHBpbmcgYWxnb3JpdGhtOiBnaXZlbiBhIHBvbHlnb24gdGhhdCBoYXMgYmVlbiBjdXRcbi8vIGludG8gaXRzIHZpc2libGUgbGluZSBzZWdtZW50cywgYW5kIHJlam9pbnMgdGhlIHNlZ21lbnRzIGJ5IGludGVycG9sYXRpbmdcbi8vIGFsb25nIHRoZSBjbGlwIGVkZ2UuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWdtZW50cywgY29tcGFyZUludGVyc2VjdGlvbiwgc3RhcnRJbnNpZGUsIGludGVycG9sYXRlLCBzdHJlYW0pIHtcbiAgdmFyIHN1YmplY3QgPSBbXSxcbiAgICAgIGNsaXAgPSBbXSxcbiAgICAgIGksXG4gICAgICBuO1xuXG4gIHNlZ21lbnRzLmZvckVhY2goZnVuY3Rpb24oc2VnbWVudCkge1xuICAgIGlmICgobiA9IHNlZ21lbnQubGVuZ3RoIC0gMSkgPD0gMCkgcmV0dXJuO1xuICAgIHZhciBuLCBwMCA9IHNlZ21lbnRbMF0sIHAxID0gc2VnbWVudFtuXSwgeDtcblxuICAgIC8vIElmIHRoZSBmaXJzdCBhbmQgbGFzdCBwb2ludHMgb2YgYSBzZWdtZW50IGFyZSBjb2luY2lkZW50LCB0aGVuIHRyZWF0IGFzIGFcbiAgICAvLyBjbG9zZWQgcmluZy4gVE9ETyBpZiBhbGwgcmluZ3MgYXJlIGNsb3NlZCwgdGhlbiB0aGUgd2luZGluZyBvcmRlciBvZiB0aGVcbiAgICAvLyBleHRlcmlvciByaW5nIHNob3VsZCBiZSBjaGVja2VkLlxuICAgIGlmIChwb2ludEVxdWFsKHAwLCBwMSkpIHtcbiAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHN0cmVhbS5wb2ludCgocDAgPSBzZWdtZW50W2ldKVswXSwgcDBbMV0pO1xuICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzdWJqZWN0LnB1c2goeCA9IG5ldyBJbnRlcnNlY3Rpb24ocDAsIHNlZ21lbnQsIG51bGwsIHRydWUpKTtcbiAgICBjbGlwLnB1c2goeC5vID0gbmV3IEludGVyc2VjdGlvbihwMCwgbnVsbCwgeCwgZmFsc2UpKTtcbiAgICBzdWJqZWN0LnB1c2goeCA9IG5ldyBJbnRlcnNlY3Rpb24ocDEsIHNlZ21lbnQsIG51bGwsIGZhbHNlKSk7XG4gICAgY2xpcC5wdXNoKHgubyA9IG5ldyBJbnRlcnNlY3Rpb24ocDEsIG51bGwsIHgsIHRydWUpKTtcbiAgfSk7XG5cbiAgaWYgKCFzdWJqZWN0Lmxlbmd0aCkgcmV0dXJuO1xuXG4gIGNsaXAuc29ydChjb21wYXJlSW50ZXJzZWN0aW9uKTtcbiAgbGluayhzdWJqZWN0KTtcbiAgbGluayhjbGlwKTtcblxuICBmb3IgKGkgPSAwLCBuID0gY2xpcC5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICBjbGlwW2ldLmUgPSBzdGFydEluc2lkZSA9ICFzdGFydEluc2lkZTtcbiAgfVxuXG4gIHZhciBzdGFydCA9IHN1YmplY3RbMF0sXG4gICAgICBwb2ludHMsXG4gICAgICBwb2ludDtcblxuICB3aGlsZSAoMSkge1xuICAgIC8vIEZpbmQgZmlyc3QgdW52aXNpdGVkIGludGVyc2VjdGlvbi5cbiAgICB2YXIgY3VycmVudCA9IHN0YXJ0LFxuICAgICAgICBpc1N1YmplY3QgPSB0cnVlO1xuICAgIHdoaWxlIChjdXJyZW50LnYpIGlmICgoY3VycmVudCA9IGN1cnJlbnQubikgPT09IHN0YXJ0KSByZXR1cm47XG4gICAgcG9pbnRzID0gY3VycmVudC56O1xuICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICBkbyB7XG4gICAgICBjdXJyZW50LnYgPSBjdXJyZW50Lm8udiA9IHRydWU7XG4gICAgICBpZiAoY3VycmVudC5lKSB7XG4gICAgICAgIGlmIChpc1N1YmplY3QpIHtcbiAgICAgICAgICBmb3IgKGkgPSAwLCBuID0gcG9pbnRzLmxlbmd0aDsgaSA8IG47ICsraSkgc3RyZWFtLnBvaW50KChwb2ludCA9IHBvaW50c1tpXSlbMF0sIHBvaW50WzFdKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpbnRlcnBvbGF0ZShjdXJyZW50LngsIGN1cnJlbnQubi54LCAxLCBzdHJlYW0pO1xuICAgICAgICB9XG4gICAgICAgIGN1cnJlbnQgPSBjdXJyZW50Lm47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoaXNTdWJqZWN0KSB7XG4gICAgICAgICAgcG9pbnRzID0gY3VycmVudC5wLno7XG4gICAgICAgICAgZm9yIChpID0gcG9pbnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSBzdHJlYW0ucG9pbnQoKHBvaW50ID0gcG9pbnRzW2ldKVswXSwgcG9pbnRbMV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGludGVycG9sYXRlKGN1cnJlbnQueCwgY3VycmVudC5wLngsIC0xLCBzdHJlYW0pO1xuICAgICAgICB9XG4gICAgICAgIGN1cnJlbnQgPSBjdXJyZW50LnA7XG4gICAgICB9XG4gICAgICBjdXJyZW50ID0gY3VycmVudC5vO1xuICAgICAgcG9pbnRzID0gY3VycmVudC56O1xuICAgICAgaXNTdWJqZWN0ID0gIWlzU3ViamVjdDtcbiAgICB9IHdoaWxlICghY3VycmVudC52KTtcbiAgICBzdHJlYW0ubGluZUVuZCgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGxpbmsoYXJyYXkpIHtcbiAgaWYgKCEobiA9IGFycmF5Lmxlbmd0aCkpIHJldHVybjtcbiAgdmFyIG4sXG4gICAgICBpID0gMCxcbiAgICAgIGEgPSBhcnJheVswXSxcbiAgICAgIGI7XG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgYS5uID0gYiA9IGFycmF5W2ldO1xuICAgIGIucCA9IGE7XG4gICAgYSA9IGI7XG4gIH1cbiAgYS5uID0gYiA9IGFycmF5WzBdO1xuICBiLnAgPSBhO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuXG4gIGZ1bmN0aW9uIGNvbXBvc2UoeCwgeSkge1xuICAgIHJldHVybiB4ID0gYSh4LCB5KSwgYih4WzBdLCB4WzFdKTtcbiAgfVxuXG4gIGlmIChhLmludmVydCAmJiBiLmludmVydCkgY29tcG9zZS5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIHggPSBiLmludmVydCh4LCB5KSwgeCAmJiBhLmludmVydCh4WzBdLCB4WzFdKTtcbiAgfTtcblxuICByZXR1cm4gY29tcG9zZTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiaW1wb3J0IHtkZWZhdWx0IGFzIHBvbHlnb25Db250YWluc30gZnJvbSBcIi4vcG9seWdvbkNvbnRhaW5zXCI7XG5pbXBvcnQge2RlZmF1bHQgYXMgZGlzdGFuY2V9IGZyb20gXCIuL2Rpc3RhbmNlXCI7XG5pbXBvcnQge2Vwc2lsb24sIHJhZGlhbnN9IGZyb20gXCIuL21hdGhcIjtcblxudmFyIGNvbnRhaW5zT2JqZWN0VHlwZSA9IHtcbiAgRmVhdHVyZTogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHJldHVybiBjb250YWluc0dlb21ldHJ5KG9iamVjdC5nZW9tZXRyeSwgcG9pbnQpO1xuICB9LFxuICBGZWF0dXJlQ29sbGVjdGlvbjogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHZhciBmZWF0dXJlcyA9IG9iamVjdC5mZWF0dXJlcywgaSA9IC0xLCBuID0gZmVhdHVyZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoY29udGFpbnNHZW9tZXRyeShmZWF0dXJlc1tpXS5nZW9tZXRyeSwgcG9pbnQpKSByZXR1cm4gdHJ1ZTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbnZhciBjb250YWluc0dlb21ldHJ5VHlwZSA9IHtcbiAgU3BoZXJlOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcbiAgUG9pbnQ6IGZ1bmN0aW9uKG9iamVjdCwgcG9pbnQpIHtcbiAgICByZXR1cm4gY29udGFpbnNQb2ludChvYmplY3QuY29vcmRpbmF0ZXMsIHBvaW50KTtcbiAgfSxcbiAgTXVsdGlQb2ludDogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHZhciBjb29yZGluYXRlcyA9IG9iamVjdC5jb29yZGluYXRlcywgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoY29udGFpbnNQb2ludChjb29yZGluYXRlc1tpXSwgcG9pbnQpKSByZXR1cm4gdHJ1ZTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG4gIExpbmVTdHJpbmc6IGZ1bmN0aW9uKG9iamVjdCwgcG9pbnQpIHtcbiAgICByZXR1cm4gY29udGFpbnNMaW5lKG9iamVjdC5jb29yZGluYXRlcywgcG9pbnQpO1xuICB9LFxuICBNdWx0aUxpbmVTdHJpbmc6IGZ1bmN0aW9uKG9iamVjdCwgcG9pbnQpIHtcbiAgICB2YXIgY29vcmRpbmF0ZXMgPSBvYmplY3QuY29vcmRpbmF0ZXMsIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgaWYgKGNvbnRhaW5zTGluZShjb29yZGluYXRlc1tpXSwgcG9pbnQpKSByZXR1cm4gdHJ1ZTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG4gIFBvbHlnb246IGZ1bmN0aW9uKG9iamVjdCwgcG9pbnQpIHtcbiAgICByZXR1cm4gY29udGFpbnNQb2x5Z29uKG9iamVjdC5jb29yZGluYXRlcywgcG9pbnQpO1xuICB9LFxuICBNdWx0aVBvbHlnb246IGZ1bmN0aW9uKG9iamVjdCwgcG9pbnQpIHtcbiAgICB2YXIgY29vcmRpbmF0ZXMgPSBvYmplY3QuY29vcmRpbmF0ZXMsIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgaWYgKGNvbnRhaW5zUG9seWdvbihjb29yZGluYXRlc1tpXSwgcG9pbnQpKSByZXR1cm4gdHJ1ZTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG4gIEdlb21ldHJ5Q29sbGVjdGlvbjogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHZhciBnZW9tZXRyaWVzID0gb2JqZWN0Lmdlb21ldHJpZXMsIGkgPSAtMSwgbiA9IGdlb21ldHJpZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoY29udGFpbnNHZW9tZXRyeShnZW9tZXRyaWVzW2ldLCBwb2ludCkpIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufTtcblxuZnVuY3Rpb24gY29udGFpbnNHZW9tZXRyeShnZW9tZXRyeSwgcG9pbnQpIHtcbiAgcmV0dXJuIGdlb21ldHJ5ICYmIGNvbnRhaW5zR2VvbWV0cnlUeXBlLmhhc093blByb3BlcnR5KGdlb21ldHJ5LnR5cGUpXG4gICAgICA/IGNvbnRhaW5zR2VvbWV0cnlUeXBlW2dlb21ldHJ5LnR5cGVdKGdlb21ldHJ5LCBwb2ludClcbiAgICAgIDogZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGNvbnRhaW5zUG9pbnQoY29vcmRpbmF0ZXMsIHBvaW50KSB7XG4gIHJldHVybiBkaXN0YW5jZShjb29yZGluYXRlcywgcG9pbnQpID09PSAwO1xufVxuXG5mdW5jdGlvbiBjb250YWluc0xpbmUoY29vcmRpbmF0ZXMsIHBvaW50KSB7XG4gIHZhciBhYiA9IGRpc3RhbmNlKGNvb3JkaW5hdGVzWzBdLCBjb29yZGluYXRlc1sxXSksXG4gICAgICBhbyA9IGRpc3RhbmNlKGNvb3JkaW5hdGVzWzBdLCBwb2ludCksXG4gICAgICBvYiA9IGRpc3RhbmNlKHBvaW50LCBjb29yZGluYXRlc1sxXSk7XG4gIHJldHVybiBhbyArIG9iIDw9IGFiICsgZXBzaWxvbjtcbn1cblxuZnVuY3Rpb24gY29udGFpbnNQb2x5Z29uKGNvb3JkaW5hdGVzLCBwb2ludCkge1xuICByZXR1cm4gISFwb2x5Z29uQ29udGFpbnMoY29vcmRpbmF0ZXMubWFwKHJpbmdSYWRpYW5zKSwgcG9pbnRSYWRpYW5zKHBvaW50KSk7XG59XG5cbmZ1bmN0aW9uIHJpbmdSYWRpYW5zKHJpbmcpIHtcbiAgcmV0dXJuIHJpbmcgPSByaW5nLm1hcChwb2ludFJhZGlhbnMpLCByaW5nLnBvcCgpLCByaW5nO1xufVxuXG5mdW5jdGlvbiBwb2ludFJhZGlhbnMocG9pbnQpIHtcbiAgcmV0dXJuIFtwb2ludFswXSAqIHJhZGlhbnMsIHBvaW50WzFdICogcmFkaWFuc107XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iamVjdCwgcG9pbnQpIHtcbiAgcmV0dXJuIChvYmplY3QgJiYgY29udGFpbnNPYmplY3RUeXBlLmhhc093blByb3BlcnR5KG9iamVjdC50eXBlKVxuICAgICAgPyBjb250YWluc09iamVjdFR5cGVbb2JqZWN0LnR5cGVdXG4gICAgICA6IGNvbnRhaW5zR2VvbWV0cnkpKG9iamVjdCwgcG9pbnQpO1xufVxuIiwiaW1wb3J0IGxlbmd0aCBmcm9tIFwiLi9sZW5ndGhcIjtcblxudmFyIGNvb3JkaW5hdGVzID0gW251bGwsIG51bGxdLFxuICAgIG9iamVjdCA9IHt0eXBlOiBcIkxpbmVTdHJpbmdcIiwgY29vcmRpbmF0ZXM6IGNvb3JkaW5hdGVzfTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICBjb29yZGluYXRlc1swXSA9IGE7XG4gIGNvb3JkaW5hdGVzWzFdID0gYjtcbiAgcmV0dXJuIGxlbmd0aChvYmplY3QpO1xufVxuIiwiaW1wb3J0IHtyYW5nZX0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge2FicywgY2VpbCwgZXBzaWxvbn0gZnJvbSBcIi4vbWF0aFwiO1xuXG5mdW5jdGlvbiBncmF0aWN1bGVYKHkwLCB5MSwgZHkpIHtcbiAgdmFyIHkgPSByYW5nZSh5MCwgeTEgLSBlcHNpbG9uLCBkeSkuY29uY2F0KHkxKTtcbiAgcmV0dXJuIGZ1bmN0aW9uKHgpIHsgcmV0dXJuIHkubWFwKGZ1bmN0aW9uKHkpIHsgcmV0dXJuIFt4LCB5XTsgfSk7IH07XG59XG5cbmZ1bmN0aW9uIGdyYXRpY3VsZVkoeDAsIHgxLCBkeCkge1xuICB2YXIgeCA9IHJhbmdlKHgwLCB4MSAtIGVwc2lsb24sIGR4KS5jb25jYXQoeDEpO1xuICByZXR1cm4gZnVuY3Rpb24oeSkgeyByZXR1cm4geC5tYXAoZnVuY3Rpb24oeCkgeyByZXR1cm4gW3gsIHldOyB9KTsgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ3JhdGljdWxlKCkge1xuICB2YXIgeDEsIHgwLCBYMSwgWDAsXG4gICAgICB5MSwgeTAsIFkxLCBZMCxcbiAgICAgIGR4ID0gMTAsIGR5ID0gZHgsIERYID0gOTAsIERZID0gMzYwLFxuICAgICAgeCwgeSwgWCwgWSxcbiAgICAgIHByZWNpc2lvbiA9IDIuNTtcblxuICBmdW5jdGlvbiBncmF0aWN1bGUoKSB7XG4gICAgcmV0dXJuIHt0eXBlOiBcIk11bHRpTGluZVN0cmluZ1wiLCBjb29yZGluYXRlczogbGluZXMoKX07XG4gIH1cblxuICBmdW5jdGlvbiBsaW5lcygpIHtcbiAgICByZXR1cm4gcmFuZ2UoY2VpbChYMCAvIERYKSAqIERYLCBYMSwgRFgpLm1hcChYKVxuICAgICAgICAuY29uY2F0KHJhbmdlKGNlaWwoWTAgLyBEWSkgKiBEWSwgWTEsIERZKS5tYXAoWSkpXG4gICAgICAgIC5jb25jYXQocmFuZ2UoY2VpbCh4MCAvIGR4KSAqIGR4LCB4MSwgZHgpLmZpbHRlcihmdW5jdGlvbih4KSB7IHJldHVybiBhYnMoeCAlIERYKSA+IGVwc2lsb247IH0pLm1hcCh4KSlcbiAgICAgICAgLmNvbmNhdChyYW5nZShjZWlsKHkwIC8gZHkpICogZHksIHkxLCBkeSkuZmlsdGVyKGZ1bmN0aW9uKHkpIHsgcmV0dXJuIGFicyh5ICUgRFkpID4gZXBzaWxvbjsgfSkubWFwKHkpKTtcbiAgfVxuXG4gIGdyYXRpY3VsZS5saW5lcyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBsaW5lcygpLm1hcChmdW5jdGlvbihjb29yZGluYXRlcykgeyByZXR1cm4ge3R5cGU6IFwiTGluZVN0cmluZ1wiLCBjb29yZGluYXRlczogY29vcmRpbmF0ZXN9OyB9KTtcbiAgfTtcblxuICBncmF0aWN1bGUub3V0bGluZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBcIlBvbHlnb25cIixcbiAgICAgIGNvb3JkaW5hdGVzOiBbXG4gICAgICAgIFgoWDApLmNvbmNhdChcbiAgICAgICAgWShZMSkuc2xpY2UoMSksXG4gICAgICAgIFgoWDEpLnJldmVyc2UoKS5zbGljZSgxKSxcbiAgICAgICAgWShZMCkucmV2ZXJzZSgpLnNsaWNlKDEpKVxuICAgICAgXVxuICAgIH07XG4gIH07XG5cbiAgZ3JhdGljdWxlLmV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBncmF0aWN1bGUuZXh0ZW50TWlub3IoKTtcbiAgICByZXR1cm4gZ3JhdGljdWxlLmV4dGVudE1ham9yKF8pLmV4dGVudE1pbm9yKF8pO1xuICB9O1xuXG4gIGdyYXRpY3VsZS5leHRlbnRNYWpvciA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbW1gwLCBZMF0sIFtYMSwgWTFdXTtcbiAgICBYMCA9ICtfWzBdWzBdLCBYMSA9ICtfWzFdWzBdO1xuICAgIFkwID0gK19bMF1bMV0sIFkxID0gK19bMV1bMV07XG4gICAgaWYgKFgwID4gWDEpIF8gPSBYMCwgWDAgPSBYMSwgWDEgPSBfO1xuICAgIGlmIChZMCA+IFkxKSBfID0gWTAsIFkwID0gWTEsIFkxID0gXztcbiAgICByZXR1cm4gZ3JhdGljdWxlLnByZWNpc2lvbihwcmVjaXNpb24pO1xuICB9O1xuXG4gIGdyYXRpY3VsZS5leHRlbnRNaW5vciA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbW3gwLCB5MF0sIFt4MSwgeTFdXTtcbiAgICB4MCA9ICtfWzBdWzBdLCB4MSA9ICtfWzFdWzBdO1xuICAgIHkwID0gK19bMF1bMV0sIHkxID0gK19bMV1bMV07XG4gICAgaWYgKHgwID4geDEpIF8gPSB4MCwgeDAgPSB4MSwgeDEgPSBfO1xuICAgIGlmICh5MCA+IHkxKSBfID0geTAsIHkwID0geTEsIHkxID0gXztcbiAgICByZXR1cm4gZ3JhdGljdWxlLnByZWNpc2lvbihwcmVjaXNpb24pO1xuICB9O1xuXG4gIGdyYXRpY3VsZS5zdGVwID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGdyYXRpY3VsZS5zdGVwTWlub3IoKTtcbiAgICByZXR1cm4gZ3JhdGljdWxlLnN0ZXBNYWpvcihfKS5zdGVwTWlub3IoXyk7XG4gIH07XG5cbiAgZ3JhdGljdWxlLnN0ZXBNYWpvciA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbRFgsIERZXTtcbiAgICBEWCA9ICtfWzBdLCBEWSA9ICtfWzFdO1xuICAgIHJldHVybiBncmF0aWN1bGU7XG4gIH07XG5cbiAgZ3JhdGljdWxlLnN0ZXBNaW5vciA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbZHgsIGR5XTtcbiAgICBkeCA9ICtfWzBdLCBkeSA9ICtfWzFdO1xuICAgIHJldHVybiBncmF0aWN1bGU7XG4gIH07XG5cbiAgZ3JhdGljdWxlLnByZWNpc2lvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwcmVjaXNpb247XG4gICAgcHJlY2lzaW9uID0gK187XG4gICAgeCA9IGdyYXRpY3VsZVgoeTAsIHkxLCA5MCk7XG4gICAgeSA9IGdyYXRpY3VsZVkoeDAsIHgxLCBwcmVjaXNpb24pO1xuICAgIFggPSBncmF0aWN1bGVYKFkwLCBZMSwgOTApO1xuICAgIFkgPSBncmF0aWN1bGVZKFgwLCBYMSwgcHJlY2lzaW9uKTtcbiAgICByZXR1cm4gZ3JhdGljdWxlO1xuICB9O1xuXG4gIHJldHVybiBncmF0aWN1bGVcbiAgICAgIC5leHRlbnRNYWpvcihbWy0xODAsIC05MCArIGVwc2lsb25dLCBbMTgwLCA5MCAtIGVwc2lsb25dXSlcbiAgICAgIC5leHRlbnRNaW5vcihbWy0xODAsIC04MCAtIGVwc2lsb25dLCBbMTgwLCA4MCArIGVwc2lsb25dXSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBncmF0aWN1bGUxMCgpIHtcbiAgcmV0dXJuIGdyYXRpY3VsZSgpKCk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiB4O1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0FyZWF9IGZyb20gXCIuL2FyZWFcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9Cb3VuZHN9IGZyb20gXCIuL2JvdW5kc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0NlbnRyb2lkfSBmcm9tIFwiLi9jZW50cm9pZFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0NpcmNsZX0gZnJvbSBcIi4vY2lyY2xlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ2xpcEFudGltZXJpZGlhbn0gZnJvbSBcIi4vY2xpcC9hbnRpbWVyaWRpYW5cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9DbGlwQ2lyY2xlfSBmcm9tIFwiLi9jbGlwL2NpcmNsZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0NsaXBFeHRlbnR9IGZyb20gXCIuL2NsaXAvZXh0ZW50XCI7IC8vIERFUFJFQ0FURUQhIFVzZSBkMy5nZW9JZGVudGl0eSgpLmNsaXBFeHRlbnQo4oCmKS5cbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9DbGlwUmVjdGFuZ2xlfSBmcm9tIFwiLi9jbGlwL3JlY3RhbmdsZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0NvbnRhaW5zfSBmcm9tIFwiLi9jb250YWluc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0Rpc3RhbmNlfSBmcm9tIFwiLi9kaXN0YW5jZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0dyYXRpY3VsZSwgZ3JhdGljdWxlMTAgYXMgZ2VvR3JhdGljdWxlMTB9IGZyb20gXCIuL2dyYXRpY3VsZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0ludGVycG9sYXRlfSBmcm9tIFwiLi9pbnRlcnBvbGF0ZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0xlbmd0aH0gZnJvbSBcIi4vbGVuZ3RoXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvUGF0aH0gZnJvbSBcIi4vcGF0aC9pbmRleFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0FsYmVyc30gZnJvbSBcIi4vcHJvamVjdGlvbi9hbGJlcnNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9BbGJlcnNVc2F9IGZyb20gXCIuL3Byb2plY3Rpb24vYWxiZXJzVXNhXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQXppbXV0aGFsRXF1YWxBcmVhLCBhemltdXRoYWxFcXVhbEFyZWFSYXcgYXMgZ2VvQXppbXV0aGFsRXF1YWxBcmVhUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL2F6aW11dGhhbEVxdWFsQXJlYVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0F6aW11dGhhbEVxdWlkaXN0YW50LCBhemltdXRoYWxFcXVpZGlzdGFudFJhdyBhcyBnZW9BemltdXRoYWxFcXVpZGlzdGFudFJhd30gZnJvbSBcIi4vcHJvamVjdGlvbi9hemltdXRoYWxFcXVpZGlzdGFudFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0NvbmljQ29uZm9ybWFsLCBjb25pY0NvbmZvcm1hbFJhdyBhcyBnZW9Db25pY0NvbmZvcm1hbFJhd30gZnJvbSBcIi4vcHJvamVjdGlvbi9jb25pY0NvbmZvcm1hbFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0NvbmljRXF1YWxBcmVhLCBjb25pY0VxdWFsQXJlYVJhdyBhcyBnZW9Db25pY0VxdWFsQXJlYVJhd30gZnJvbSBcIi4vcHJvamVjdGlvbi9jb25pY0VxdWFsQXJlYVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0NvbmljRXF1aWRpc3RhbnQsIGNvbmljRXF1aWRpc3RhbnRSYXcgYXMgZ2VvQ29uaWNFcXVpZGlzdGFudFJhd30gZnJvbSBcIi4vcHJvamVjdGlvbi9jb25pY0VxdWlkaXN0YW50XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvRXF1YWxFYXJ0aCwgZXF1YWxFYXJ0aFJhdyBhcyBnZW9FcXVhbEVhcnRoUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL2VxdWFsRWFydGhcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9FcXVpcmVjdGFuZ3VsYXIsIGVxdWlyZWN0YW5ndWxhclJhdyBhcyBnZW9FcXVpcmVjdGFuZ3VsYXJSYXd9IGZyb20gXCIuL3Byb2plY3Rpb24vZXF1aXJlY3Rhbmd1bGFyXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvR25vbW9uaWMsIGdub21vbmljUmF3IGFzIGdlb0dub21vbmljUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL2dub21vbmljXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvSWRlbnRpdHl9IGZyb20gXCIuL3Byb2plY3Rpb24vaWRlbnRpdHlcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9Qcm9qZWN0aW9uLCBwcm9qZWN0aW9uTXV0YXRvciBhcyBnZW9Qcm9qZWN0aW9uTXV0YXRvcn0gZnJvbSBcIi4vcHJvamVjdGlvbi9pbmRleFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb01lcmNhdG9yLCBtZXJjYXRvclJhdyBhcyBnZW9NZXJjYXRvclJhd30gZnJvbSBcIi4vcHJvamVjdGlvbi9tZXJjYXRvclwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb05hdHVyYWxFYXJ0aDEsIG5hdHVyYWxFYXJ0aDFSYXcgYXMgZ2VvTmF0dXJhbEVhcnRoMVJhd30gZnJvbSBcIi4vcHJvamVjdGlvbi9uYXR1cmFsRWFydGgxXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvT3J0aG9ncmFwaGljLCBvcnRob2dyYXBoaWNSYXcgYXMgZ2VvT3J0aG9ncmFwaGljUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL29ydGhvZ3JhcGhpY1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb1N0ZXJlb2dyYXBoaWMsIHN0ZXJlb2dyYXBoaWNSYXcgYXMgZ2VvU3RlcmVvZ3JhcGhpY1Jhd30gZnJvbSBcIi4vcHJvamVjdGlvbi9zdGVyZW9ncmFwaGljXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvVHJhbnN2ZXJzZU1lcmNhdG9yLCB0cmFuc3ZlcnNlTWVyY2F0b3JSYXcgYXMgZ2VvVHJhbnN2ZXJzZU1lcmNhdG9yUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL3RyYW5zdmVyc2VNZXJjYXRvclwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb1JvdGF0aW9ufSBmcm9tIFwiLi9yb3RhdGlvblwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb1N0cmVhbX0gZnJvbSBcIi4vc3RyZWFtXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvVHJhbnNmb3JtfSBmcm9tIFwiLi90cmFuc2Zvcm1cIjtcbiIsImltcG9ydCB7YXNpbiwgYXRhbjIsIGNvcywgZGVncmVlcywgaGF2ZXJzaW4sIHJhZGlhbnMsIHNpbiwgc3FydH0gZnJvbSBcIi4vbWF0aFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciB4MCA9IGFbMF0gKiByYWRpYW5zLFxuICAgICAgeTAgPSBhWzFdICogcmFkaWFucyxcbiAgICAgIHgxID0gYlswXSAqIHJhZGlhbnMsXG4gICAgICB5MSA9IGJbMV0gKiByYWRpYW5zLFxuICAgICAgY3kwID0gY29zKHkwKSxcbiAgICAgIHN5MCA9IHNpbih5MCksXG4gICAgICBjeTEgPSBjb3MoeTEpLFxuICAgICAgc3kxID0gc2luKHkxKSxcbiAgICAgIGt4MCA9IGN5MCAqIGNvcyh4MCksXG4gICAgICBreTAgPSBjeTAgKiBzaW4oeDApLFxuICAgICAga3gxID0gY3kxICogY29zKHgxKSxcbiAgICAgIGt5MSA9IGN5MSAqIHNpbih4MSksXG4gICAgICBkID0gMiAqIGFzaW4oc3FydChoYXZlcnNpbih5MSAtIHkwKSArIGN5MCAqIGN5MSAqIGhhdmVyc2luKHgxIC0geDApKSksXG4gICAgICBrID0gc2luKGQpO1xuXG4gIHZhciBpbnRlcnBvbGF0ZSA9IGQgPyBmdW5jdGlvbih0KSB7XG4gICAgdmFyIEIgPSBzaW4odCAqPSBkKSAvIGssXG4gICAgICAgIEEgPSBzaW4oZCAtIHQpIC8gayxcbiAgICAgICAgeCA9IEEgKiBreDAgKyBCICoga3gxLFxuICAgICAgICB5ID0gQSAqIGt5MCArIEIgKiBreTEsXG4gICAgICAgIHogPSBBICogc3kwICsgQiAqIHN5MTtcbiAgICByZXR1cm4gW1xuICAgICAgYXRhbjIoeSwgeCkgKiBkZWdyZWVzLFxuICAgICAgYXRhbjIoeiwgc3FydCh4ICogeCArIHkgKiB5KSkgKiBkZWdyZWVzXG4gICAgXTtcbiAgfSA6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBbeDAgKiBkZWdyZWVzLCB5MCAqIGRlZ3JlZXNdO1xuICB9O1xuXG4gIGludGVycG9sYXRlLmRpc3RhbmNlID0gZDtcblxuICByZXR1cm4gaW50ZXJwb2xhdGU7XG59XG4iLCJpbXBvcnQgYWRkZXIgZnJvbSBcIi4vYWRkZXJcIjtcbmltcG9ydCB7YWJzLCBhdGFuMiwgY29zLCByYWRpYW5zLCBzaW4sIHNxcnR9IGZyb20gXCIuL21hdGhcIjtcbmltcG9ydCBub29wIGZyb20gXCIuL25vb3BcIjtcbmltcG9ydCBzdHJlYW0gZnJvbSBcIi4vc3RyZWFtXCI7XG5cbnZhciBsZW5ndGhTdW0gPSBhZGRlcigpLFxuICAgIGxhbWJkYTAsXG4gICAgc2luUGhpMCxcbiAgICBjb3NQaGkwO1xuXG52YXIgbGVuZ3RoU3RyZWFtID0ge1xuICBzcGhlcmU6IG5vb3AsXG4gIHBvaW50OiBub29wLFxuICBsaW5lU3RhcnQ6IGxlbmd0aExpbmVTdGFydCxcbiAgbGluZUVuZDogbm9vcCxcbiAgcG9seWdvblN0YXJ0OiBub29wLFxuICBwb2x5Z29uRW5kOiBub29wXG59O1xuXG5mdW5jdGlvbiBsZW5ndGhMaW5lU3RhcnQoKSB7XG4gIGxlbmd0aFN0cmVhbS5wb2ludCA9IGxlbmd0aFBvaW50Rmlyc3Q7XG4gIGxlbmd0aFN0cmVhbS5saW5lRW5kID0gbGVuZ3RoTGluZUVuZDtcbn1cblxuZnVuY3Rpb24gbGVuZ3RoTGluZUVuZCgpIHtcbiAgbGVuZ3RoU3RyZWFtLnBvaW50ID0gbGVuZ3RoU3RyZWFtLmxpbmVFbmQgPSBub29wO1xufVxuXG5mdW5jdGlvbiBsZW5ndGhQb2ludEZpcnN0KGxhbWJkYSwgcGhpKSB7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgbGFtYmRhMCA9IGxhbWJkYSwgc2luUGhpMCA9IHNpbihwaGkpLCBjb3NQaGkwID0gY29zKHBoaSk7XG4gIGxlbmd0aFN0cmVhbS5wb2ludCA9IGxlbmd0aFBvaW50O1xufVxuXG5mdW5jdGlvbiBsZW5ndGhQb2ludChsYW1iZGEsIHBoaSkge1xuICBsYW1iZGEgKj0gcmFkaWFucywgcGhpICo9IHJhZGlhbnM7XG4gIHZhciBzaW5QaGkgPSBzaW4ocGhpKSxcbiAgICAgIGNvc1BoaSA9IGNvcyhwaGkpLFxuICAgICAgZGVsdGEgPSBhYnMobGFtYmRhIC0gbGFtYmRhMCksXG4gICAgICBjb3NEZWx0YSA9IGNvcyhkZWx0YSksXG4gICAgICBzaW5EZWx0YSA9IHNpbihkZWx0YSksXG4gICAgICB4ID0gY29zUGhpICogc2luRGVsdGEsXG4gICAgICB5ID0gY29zUGhpMCAqIHNpblBoaSAtIHNpblBoaTAgKiBjb3NQaGkgKiBjb3NEZWx0YSxcbiAgICAgIHogPSBzaW5QaGkwICogc2luUGhpICsgY29zUGhpMCAqIGNvc1BoaSAqIGNvc0RlbHRhO1xuICBsZW5ndGhTdW0uYWRkKGF0YW4yKHNxcnQoeCAqIHggKyB5ICogeSksIHopKTtcbiAgbGFtYmRhMCA9IGxhbWJkYSwgc2luUGhpMCA9IHNpblBoaSwgY29zUGhpMCA9IGNvc1BoaTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqZWN0KSB7XG4gIGxlbmd0aFN1bS5yZXNldCgpO1xuICBzdHJlYW0ob2JqZWN0LCBsZW5ndGhTdHJlYW0pO1xuICByZXR1cm4gK2xlbmd0aFN1bTtcbn1cbiIsImV4cG9ydCB2YXIgZXBzaWxvbiA9IDFlLTY7XG5leHBvcnQgdmFyIGVwc2lsb24yID0gMWUtMTI7XG5leHBvcnQgdmFyIHBpID0gTWF0aC5QSTtcbmV4cG9ydCB2YXIgaGFsZlBpID0gcGkgLyAyO1xuZXhwb3J0IHZhciBxdWFydGVyUGkgPSBwaSAvIDQ7XG5leHBvcnQgdmFyIHRhdSA9IHBpICogMjtcblxuZXhwb3J0IHZhciBkZWdyZWVzID0gMTgwIC8gcGk7XG5leHBvcnQgdmFyIHJhZGlhbnMgPSBwaSAvIDE4MDtcblxuZXhwb3J0IHZhciBhYnMgPSBNYXRoLmFicztcbmV4cG9ydCB2YXIgYXRhbiA9IE1hdGguYXRhbjtcbmV4cG9ydCB2YXIgYXRhbjIgPSBNYXRoLmF0YW4yO1xuZXhwb3J0IHZhciBjb3MgPSBNYXRoLmNvcztcbmV4cG9ydCB2YXIgY2VpbCA9IE1hdGguY2VpbDtcbmV4cG9ydCB2YXIgZXhwID0gTWF0aC5leHA7XG5leHBvcnQgdmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbmV4cG9ydCB2YXIgbG9nID0gTWF0aC5sb2c7XG5leHBvcnQgdmFyIHBvdyA9IE1hdGgucG93O1xuZXhwb3J0IHZhciBzaW4gPSBNYXRoLnNpbjtcbmV4cG9ydCB2YXIgc2lnbiA9IE1hdGguc2lnbiB8fCBmdW5jdGlvbih4KSB7IHJldHVybiB4ID4gMCA/IDEgOiB4IDwgMCA/IC0xIDogMDsgfTtcbmV4cG9ydCB2YXIgc3FydCA9IE1hdGguc3FydDtcbmV4cG9ydCB2YXIgdGFuID0gTWF0aC50YW47XG5cbmV4cG9ydCBmdW5jdGlvbiBhY29zKHgpIHtcbiAgcmV0dXJuIHggPiAxID8gMCA6IHggPCAtMSA/IHBpIDogTWF0aC5hY29zKHgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNpbih4KSB7XG4gIHJldHVybiB4ID4gMSA/IGhhbGZQaSA6IHggPCAtMSA/IC1oYWxmUGkgOiBNYXRoLmFzaW4oeCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYXZlcnNpbih4KSB7XG4gIHJldHVybiAoeCA9IHNpbih4IC8gMikpICogeDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vb3AoKSB7fVxuIiwiaW1wb3J0IGFkZGVyIGZyb20gXCIuLi9hZGRlclwiO1xuaW1wb3J0IHthYnN9IGZyb20gXCIuLi9tYXRoXCI7XG5pbXBvcnQgbm9vcCBmcm9tIFwiLi4vbm9vcFwiO1xuXG52YXIgYXJlYVN1bSA9IGFkZGVyKCksXG4gICAgYXJlYVJpbmdTdW0gPSBhZGRlcigpLFxuICAgIHgwMCxcbiAgICB5MDAsXG4gICAgeDAsXG4gICAgeTA7XG5cbnZhciBhcmVhU3RyZWFtID0ge1xuICBwb2ludDogbm9vcCxcbiAgbGluZVN0YXJ0OiBub29wLFxuICBsaW5lRW5kOiBub29wLFxuICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIGFyZWFTdHJlYW0ubGluZVN0YXJ0ID0gYXJlYVJpbmdTdGFydDtcbiAgICBhcmVhU3RyZWFtLmxpbmVFbmQgPSBhcmVhUmluZ0VuZDtcbiAgfSxcbiAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgYXJlYVN0cmVhbS5saW5lU3RhcnQgPSBhcmVhU3RyZWFtLmxpbmVFbmQgPSBhcmVhU3RyZWFtLnBvaW50ID0gbm9vcDtcbiAgICBhcmVhU3VtLmFkZChhYnMoYXJlYVJpbmdTdW0pKTtcbiAgICBhcmVhUmluZ1N1bS5yZXNldCgpO1xuICB9LFxuICByZXN1bHQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBhcmVhID0gYXJlYVN1bSAvIDI7XG4gICAgYXJlYVN1bS5yZXNldCgpO1xuICAgIHJldHVybiBhcmVhO1xuICB9XG59O1xuXG5mdW5jdGlvbiBhcmVhUmluZ1N0YXJ0KCkge1xuICBhcmVhU3RyZWFtLnBvaW50ID0gYXJlYVBvaW50Rmlyc3Q7XG59XG5cbmZ1bmN0aW9uIGFyZWFQb2ludEZpcnN0KHgsIHkpIHtcbiAgYXJlYVN0cmVhbS5wb2ludCA9IGFyZWFQb2ludDtcbiAgeDAwID0geDAgPSB4LCB5MDAgPSB5MCA9IHk7XG59XG5cbmZ1bmN0aW9uIGFyZWFQb2ludCh4LCB5KSB7XG4gIGFyZWFSaW5nU3VtLmFkZCh5MCAqIHggLSB4MCAqIHkpO1xuICB4MCA9IHgsIHkwID0geTtcbn1cblxuZnVuY3Rpb24gYXJlYVJpbmdFbmQoKSB7XG4gIGFyZWFQb2ludCh4MDAsIHkwMCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFyZWFTdHJlYW07XG4iLCJpbXBvcnQgbm9vcCBmcm9tIFwiLi4vbm9vcFwiO1xuXG52YXIgeDAgPSBJbmZpbml0eSxcbiAgICB5MCA9IHgwLFxuICAgIHgxID0gLXgwLFxuICAgIHkxID0geDE7XG5cbnZhciBib3VuZHNTdHJlYW0gPSB7XG4gIHBvaW50OiBib3VuZHNQb2ludCxcbiAgbGluZVN0YXJ0OiBub29wLFxuICBsaW5lRW5kOiBub29wLFxuICBwb2x5Z29uU3RhcnQ6IG5vb3AsXG4gIHBvbHlnb25FbmQ6IG5vb3AsXG4gIHJlc3VsdDogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGJvdW5kcyA9IFtbeDAsIHkwXSwgW3gxLCB5MV1dO1xuICAgIHgxID0geTEgPSAtKHkwID0geDAgPSBJbmZpbml0eSk7XG4gICAgcmV0dXJuIGJvdW5kcztcbiAgfVxufTtcblxuZnVuY3Rpb24gYm91bmRzUG9pbnQoeCwgeSkge1xuICBpZiAoeCA8IHgwKSB4MCA9IHg7XG4gIGlmICh4ID4geDEpIHgxID0geDtcbiAgaWYgKHkgPCB5MCkgeTAgPSB5O1xuICBpZiAoeSA+IHkxKSB5MSA9IHk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGJvdW5kc1N0cmVhbTtcbiIsImltcG9ydCB7c3FydH0gZnJvbSBcIi4uL21hdGhcIjtcblxuLy8gVE9ETyBFbmZvcmNlIHBvc2l0aXZlIGFyZWEgZm9yIGV4dGVyaW9yLCBuZWdhdGl2ZSBhcmVhIGZvciBpbnRlcmlvcj9cblxudmFyIFgwID0gMCxcbiAgICBZMCA9IDAsXG4gICAgWjAgPSAwLFxuICAgIFgxID0gMCxcbiAgICBZMSA9IDAsXG4gICAgWjEgPSAwLFxuICAgIFgyID0gMCxcbiAgICBZMiA9IDAsXG4gICAgWjIgPSAwLFxuICAgIHgwMCxcbiAgICB5MDAsXG4gICAgeDAsXG4gICAgeTA7XG5cbnZhciBjZW50cm9pZFN0cmVhbSA9IHtcbiAgcG9pbnQ6IGNlbnRyb2lkUG9pbnQsXG4gIGxpbmVTdGFydDogY2VudHJvaWRMaW5lU3RhcnQsXG4gIGxpbmVFbmQ6IGNlbnRyb2lkTGluZUVuZCxcbiAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lU3RhcnQgPSBjZW50cm9pZFJpbmdTdGFydDtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lRW5kID0gY2VudHJvaWRSaW5nRW5kO1xuICB9LFxuICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUG9pbnQ7XG4gICAgY2VudHJvaWRTdHJlYW0ubGluZVN0YXJ0ID0gY2VudHJvaWRMaW5lU3RhcnQ7XG4gICAgY2VudHJvaWRTdHJlYW0ubGluZUVuZCA9IGNlbnRyb2lkTGluZUVuZDtcbiAgfSxcbiAgcmVzdWx0OiBmdW5jdGlvbigpIHtcbiAgICB2YXIgY2VudHJvaWQgPSBaMiA/IFtYMiAvIFoyLCBZMiAvIFoyXVxuICAgICAgICA6IFoxID8gW1gxIC8gWjEsIFkxIC8gWjFdXG4gICAgICAgIDogWjAgPyBbWDAgLyBaMCwgWTAgLyBaMF1cbiAgICAgICAgOiBbTmFOLCBOYU5dO1xuICAgIFgwID0gWTAgPSBaMCA9XG4gICAgWDEgPSBZMSA9IFoxID1cbiAgICBYMiA9IFkyID0gWjIgPSAwO1xuICAgIHJldHVybiBjZW50cm9pZDtcbiAgfVxufTtcblxuZnVuY3Rpb24gY2VudHJvaWRQb2ludCh4LCB5KSB7XG4gIFgwICs9IHg7XG4gIFkwICs9IHk7XG4gICsrWjA7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkTGluZVN0YXJ0KCkge1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUG9pbnRGaXJzdExpbmU7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkUG9pbnRGaXJzdExpbmUoeCwgeSkge1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUG9pbnRMaW5lO1xuICBjZW50cm9pZFBvaW50KHgwID0geCwgeTAgPSB5KTtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRQb2ludExpbmUoeCwgeSkge1xuICB2YXIgZHggPSB4IC0geDAsIGR5ID0geSAtIHkwLCB6ID0gc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XG4gIFgxICs9IHogKiAoeDAgKyB4KSAvIDI7XG4gIFkxICs9IHogKiAoeTAgKyB5KSAvIDI7XG4gIFoxICs9IHo7XG4gIGNlbnRyb2lkUG9pbnQoeDAgPSB4LCB5MCA9IHkpO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZExpbmVFbmQoKSB7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRQb2ludDtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRSaW5nU3RhcnQoKSB7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRQb2ludEZpcnN0UmluZztcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRSaW5nRW5kKCkge1xuICBjZW50cm9pZFBvaW50UmluZyh4MDAsIHkwMCk7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkUG9pbnRGaXJzdFJpbmcoeCwgeSkge1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUG9pbnRSaW5nO1xuICBjZW50cm9pZFBvaW50KHgwMCA9IHgwID0geCwgeTAwID0geTAgPSB5KTtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRQb2ludFJpbmcoeCwgeSkge1xuICB2YXIgZHggPSB4IC0geDAsXG4gICAgICBkeSA9IHkgLSB5MCxcbiAgICAgIHogPSBzcXJ0KGR4ICogZHggKyBkeSAqIGR5KTtcblxuICBYMSArPSB6ICogKHgwICsgeCkgLyAyO1xuICBZMSArPSB6ICogKHkwICsgeSkgLyAyO1xuICBaMSArPSB6O1xuXG4gIHogPSB5MCAqIHggLSB4MCAqIHk7XG4gIFgyICs9IHogKiAoeDAgKyB4KTtcbiAgWTIgKz0geiAqICh5MCArIHkpO1xuICBaMiArPSB6ICogMztcbiAgY2VudHJvaWRQb2ludCh4MCA9IHgsIHkwID0geSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNlbnRyb2lkU3RyZWFtO1xuIiwiaW1wb3J0IHt0YXV9IGZyb20gXCIuLi9tYXRoXCI7XG5pbXBvcnQgbm9vcCBmcm9tIFwiLi4vbm9vcFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQYXRoQ29udGV4dChjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5QYXRoQ29udGV4dC5wcm90b3R5cGUgPSB7XG4gIF9yYWRpdXM6IDQuNSxcbiAgcG9pbnRSYWRpdXM6IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gdGhpcy5fcmFkaXVzID0gXywgdGhpcztcbiAgfSxcbiAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9saW5lID09PSAwKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX3BvaW50ID0gTmFOO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDoge1xuICAgICAgICB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LCB5KTtcbiAgICAgICAgdGhpcy5fcG9pbnQgPSAxO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMToge1xuICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBkZWZhdWx0OiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKHggKyB0aGlzLl9yYWRpdXMsIHkpO1xuICAgICAgICB0aGlzLl9jb250ZXh0LmFyYyh4LCB5LCB0aGlzLl9yYWRpdXMsIDAsIHRhdSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgcmVzdWx0OiBub29wXG59O1xuIiwiaW1wb3J0IGlkZW50aXR5IGZyb20gXCIuLi9pZGVudGl0eVwiO1xuaW1wb3J0IHN0cmVhbSBmcm9tIFwiLi4vc3RyZWFtXCI7XG5pbXBvcnQgcGF0aEFyZWEgZnJvbSBcIi4vYXJlYVwiO1xuaW1wb3J0IHBhdGhCb3VuZHMgZnJvbSBcIi4vYm91bmRzXCI7XG5pbXBvcnQgcGF0aENlbnRyb2lkIGZyb20gXCIuL2NlbnRyb2lkXCI7XG5pbXBvcnQgUGF0aENvbnRleHQgZnJvbSBcIi4vY29udGV4dFwiO1xuaW1wb3J0IHBhdGhNZWFzdXJlIGZyb20gXCIuL21lYXN1cmVcIjtcbmltcG9ydCBQYXRoU3RyaW5nIGZyb20gXCIuL3N0cmluZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwcm9qZWN0aW9uLCBjb250ZXh0KSB7XG4gIHZhciBwb2ludFJhZGl1cyA9IDQuNSxcbiAgICAgIHByb2plY3Rpb25TdHJlYW0sXG4gICAgICBjb250ZXh0U3RyZWFtO1xuXG4gIGZ1bmN0aW9uIHBhdGgob2JqZWN0KSB7XG4gICAgaWYgKG9iamVjdCkge1xuICAgICAgaWYgKHR5cGVvZiBwb2ludFJhZGl1cyA9PT0gXCJmdW5jdGlvblwiKSBjb250ZXh0U3RyZWFtLnBvaW50UmFkaXVzKCtwb2ludFJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgICAgIHN0cmVhbShvYmplY3QsIHByb2plY3Rpb25TdHJlYW0oY29udGV4dFN0cmVhbSkpO1xuICAgIH1cbiAgICByZXR1cm4gY29udGV4dFN0cmVhbS5yZXN1bHQoKTtcbiAgfVxuXG4gIHBhdGguYXJlYSA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHN0cmVhbShvYmplY3QsIHByb2plY3Rpb25TdHJlYW0ocGF0aEFyZWEpKTtcbiAgICByZXR1cm4gcGF0aEFyZWEucmVzdWx0KCk7XG4gIH07XG5cbiAgcGF0aC5tZWFzdXJlID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgc3RyZWFtKG9iamVjdCwgcHJvamVjdGlvblN0cmVhbShwYXRoTWVhc3VyZSkpO1xuICAgIHJldHVybiBwYXRoTWVhc3VyZS5yZXN1bHQoKTtcbiAgfTtcblxuICBwYXRoLmJvdW5kcyA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHN0cmVhbShvYmplY3QsIHByb2plY3Rpb25TdHJlYW0ocGF0aEJvdW5kcykpO1xuICAgIHJldHVybiBwYXRoQm91bmRzLnJlc3VsdCgpO1xuICB9O1xuXG4gIHBhdGguY2VudHJvaWQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICBzdHJlYW0ob2JqZWN0LCBwcm9qZWN0aW9uU3RyZWFtKHBhdGhDZW50cm9pZCkpO1xuICAgIHJldHVybiBwYXRoQ2VudHJvaWQucmVzdWx0KCk7XG4gIH07XG5cbiAgcGF0aC5wcm9qZWN0aW9uID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHByb2plY3Rpb25TdHJlYW0gPSBfID09IG51bGwgPyAocHJvamVjdGlvbiA9IG51bGwsIGlkZW50aXR5KSA6IChwcm9qZWN0aW9uID0gXykuc3RyZWFtLCBwYXRoKSA6IHByb2plY3Rpb247XG4gIH07XG5cbiAgcGF0aC5jb250ZXh0ID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGNvbnRleHQ7XG4gICAgY29udGV4dFN0cmVhbSA9IF8gPT0gbnVsbCA/IChjb250ZXh0ID0gbnVsbCwgbmV3IFBhdGhTdHJpbmcpIDogbmV3IFBhdGhDb250ZXh0KGNvbnRleHQgPSBfKTtcbiAgICBpZiAodHlwZW9mIHBvaW50UmFkaXVzICE9PSBcImZ1bmN0aW9uXCIpIGNvbnRleHRTdHJlYW0ucG9pbnRSYWRpdXMocG9pbnRSYWRpdXMpO1xuICAgIHJldHVybiBwYXRoO1xuICB9O1xuXG4gIHBhdGgucG9pbnRSYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcG9pbnRSYWRpdXM7XG4gICAgcG9pbnRSYWRpdXMgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IChjb250ZXh0U3RyZWFtLnBvaW50UmFkaXVzKCtfKSwgK18pO1xuICAgIHJldHVybiBwYXRoO1xuICB9O1xuXG4gIHJldHVybiBwYXRoLnByb2plY3Rpb24ocHJvamVjdGlvbikuY29udGV4dChjb250ZXh0KTtcbn1cbiIsImltcG9ydCBhZGRlciBmcm9tIFwiLi4vYWRkZXJcIjtcbmltcG9ydCB7c3FydH0gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCBub29wIGZyb20gXCIuLi9ub29wXCI7XG5cbnZhciBsZW5ndGhTdW0gPSBhZGRlcigpLFxuICAgIGxlbmd0aFJpbmcsXG4gICAgeDAwLFxuICAgIHkwMCxcbiAgICB4MCxcbiAgICB5MDtcblxudmFyIGxlbmd0aFN0cmVhbSA9IHtcbiAgcG9pbnQ6IG5vb3AsXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgbGVuZ3RoU3RyZWFtLnBvaW50ID0gbGVuZ3RoUG9pbnRGaXJzdDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKGxlbmd0aFJpbmcpIGxlbmd0aFBvaW50KHgwMCwgeTAwKTtcbiAgICBsZW5ndGhTdHJlYW0ucG9pbnQgPSBub29wO1xuICB9LFxuICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIGxlbmd0aFJpbmcgPSB0cnVlO1xuICB9LFxuICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICBsZW5ndGhSaW5nID0gbnVsbDtcbiAgfSxcbiAgcmVzdWx0OiBmdW5jdGlvbigpIHtcbiAgICB2YXIgbGVuZ3RoID0gK2xlbmd0aFN1bTtcbiAgICBsZW5ndGhTdW0ucmVzZXQoKTtcbiAgICByZXR1cm4gbGVuZ3RoO1xuICB9XG59O1xuXG5mdW5jdGlvbiBsZW5ndGhQb2ludEZpcnN0KHgsIHkpIHtcbiAgbGVuZ3RoU3RyZWFtLnBvaW50ID0gbGVuZ3RoUG9pbnQ7XG4gIHgwMCA9IHgwID0geCwgeTAwID0geTAgPSB5O1xufVxuXG5mdW5jdGlvbiBsZW5ndGhQb2ludCh4LCB5KSB7XG4gIHgwIC09IHgsIHkwIC09IHk7XG4gIGxlbmd0aFN1bS5hZGQoc3FydCh4MCAqIHgwICsgeTAgKiB5MCkpO1xuICB4MCA9IHgsIHkwID0geTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbGVuZ3RoU3RyZWFtO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUGF0aFN0cmluZygpIHtcbiAgdGhpcy5fc3RyaW5nID0gW107XG59XG5cblBhdGhTdHJpbmcucHJvdG90eXBlID0ge1xuICBfcmFkaXVzOiA0LjUsXG4gIF9jaXJjbGU6IGNpcmNsZSg0LjUpLFxuICBwb2ludFJhZGl1czogZnVuY3Rpb24oXykge1xuICAgIGlmICgoXyA9ICtfKSAhPT0gdGhpcy5fcmFkaXVzKSB0aGlzLl9yYWRpdXMgPSBfLCB0aGlzLl9jaXJjbGUgPSBudWxsO1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxuICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX2xpbmUgPT09IDApIHRoaXMuX3N0cmluZy5wdXNoKFwiWlwiKTtcbiAgICB0aGlzLl9wb2ludCA9IE5hTjtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHtcbiAgICAgICAgdGhpcy5fc3RyaW5nLnB1c2goXCJNXCIsIHgsIFwiLFwiLCB5KTtcbiAgICAgICAgdGhpcy5fcG9pbnQgPSAxO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMToge1xuICAgICAgICB0aGlzLl9zdHJpbmcucHVzaChcIkxcIiwgeCwgXCIsXCIsIHkpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgaWYgKHRoaXMuX2NpcmNsZSA9PSBudWxsKSB0aGlzLl9jaXJjbGUgPSBjaXJjbGUodGhpcy5fcmFkaXVzKTtcbiAgICAgICAgdGhpcy5fc3RyaW5nLnB1c2goXCJNXCIsIHgsIFwiLFwiLCB5LCB0aGlzLl9jaXJjbGUpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHJlc3VsdDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX3N0cmluZy5sZW5ndGgpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0aGlzLl9zdHJpbmcuam9pbihcIlwiKTtcbiAgICAgIHRoaXMuX3N0cmluZyA9IFtdO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG59O1xuXG5mdW5jdGlvbiBjaXJjbGUocmFkaXVzKSB7XG4gIHJldHVybiBcIm0wLFwiICsgcmFkaXVzXG4gICAgICArIFwiYVwiICsgcmFkaXVzICsgXCIsXCIgKyByYWRpdXMgKyBcIiAwIDEsMSAwLFwiICsgLTIgKiByYWRpdXNcbiAgICAgICsgXCJhXCIgKyByYWRpdXMgKyBcIixcIiArIHJhZGl1cyArIFwiIDAgMSwxIDAsXCIgKyAyICogcmFkaXVzXG4gICAgICArIFwielwiO1xufVxuIiwiaW1wb3J0IHthYnMsIGVwc2lsb259IGZyb20gXCIuL21hdGhcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICByZXR1cm4gYWJzKGFbMF0gLSBiWzBdKSA8IGVwc2lsb24gJiYgYWJzKGFbMV0gLSBiWzFdKSA8IGVwc2lsb247XG59XG4iLCJpbXBvcnQgYWRkZXIgZnJvbSBcIi4vYWRkZXJcIjtcbmltcG9ydCB7Y2FydGVzaWFuLCBjYXJ0ZXNpYW5Dcm9zcywgY2FydGVzaWFuTm9ybWFsaXplSW5QbGFjZX0gZnJvbSBcIi4vY2FydGVzaWFuXCI7XG5pbXBvcnQge2FzaW4sIGF0YW4yLCBjb3MsIGVwc2lsb24sIGhhbGZQaSwgcGksIHF1YXJ0ZXJQaSwgc2luLCB0YXV9IGZyb20gXCIuL21hdGhcIjtcblxudmFyIHN1bSA9IGFkZGVyKCk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHBvbHlnb24sIHBvaW50KSB7XG4gIHZhciBsYW1iZGEgPSBwb2ludFswXSxcbiAgICAgIHBoaSA9IHBvaW50WzFdLFxuICAgICAgc2luUGhpID0gc2luKHBoaSksXG4gICAgICBub3JtYWwgPSBbc2luKGxhbWJkYSksIC1jb3MobGFtYmRhKSwgMF0sXG4gICAgICBhbmdsZSA9IDAsXG4gICAgICB3aW5kaW5nID0gMDtcblxuICBzdW0ucmVzZXQoKTtcblxuICBpZiAoc2luUGhpID09PSAxKSBwaGkgPSBoYWxmUGkgKyBlcHNpbG9uO1xuICBlbHNlIGlmIChzaW5QaGkgPT09IC0xKSBwaGkgPSAtaGFsZlBpIC0gZXBzaWxvbjtcblxuICBmb3IgKHZhciBpID0gMCwgbiA9IHBvbHlnb24ubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKCEobSA9IChyaW5nID0gcG9seWdvbltpXSkubGVuZ3RoKSkgY29udGludWU7XG4gICAgdmFyIHJpbmcsXG4gICAgICAgIG0sXG4gICAgICAgIHBvaW50MCA9IHJpbmdbbSAtIDFdLFxuICAgICAgICBsYW1iZGEwID0gcG9pbnQwWzBdLFxuICAgICAgICBwaGkwID0gcG9pbnQwWzFdIC8gMiArIHF1YXJ0ZXJQaSxcbiAgICAgICAgc2luUGhpMCA9IHNpbihwaGkwKSxcbiAgICAgICAgY29zUGhpMCA9IGNvcyhwaGkwKTtcblxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgbTsgKytqLCBsYW1iZGEwID0gbGFtYmRhMSwgc2luUGhpMCA9IHNpblBoaTEsIGNvc1BoaTAgPSBjb3NQaGkxLCBwb2ludDAgPSBwb2ludDEpIHtcbiAgICAgIHZhciBwb2ludDEgPSByaW5nW2pdLFxuICAgICAgICAgIGxhbWJkYTEgPSBwb2ludDFbMF0sXG4gICAgICAgICAgcGhpMSA9IHBvaW50MVsxXSAvIDIgKyBxdWFydGVyUGksXG4gICAgICAgICAgc2luUGhpMSA9IHNpbihwaGkxKSxcbiAgICAgICAgICBjb3NQaGkxID0gY29zKHBoaTEpLFxuICAgICAgICAgIGRlbHRhID0gbGFtYmRhMSAtIGxhbWJkYTAsXG4gICAgICAgICAgc2lnbiA9IGRlbHRhID49IDAgPyAxIDogLTEsXG4gICAgICAgICAgYWJzRGVsdGEgPSBzaWduICogZGVsdGEsXG4gICAgICAgICAgYW50aW1lcmlkaWFuID0gYWJzRGVsdGEgPiBwaSxcbiAgICAgICAgICBrID0gc2luUGhpMCAqIHNpblBoaTE7XG5cbiAgICAgIHN1bS5hZGQoYXRhbjIoayAqIHNpZ24gKiBzaW4oYWJzRGVsdGEpLCBjb3NQaGkwICogY29zUGhpMSArIGsgKiBjb3MoYWJzRGVsdGEpKSk7XG4gICAgICBhbmdsZSArPSBhbnRpbWVyaWRpYW4gPyBkZWx0YSArIHNpZ24gKiB0YXUgOiBkZWx0YTtcblxuICAgICAgLy8gQXJlIHRoZSBsb25naXR1ZGVzIGVpdGhlciBzaWRlIG9mIHRoZSBwb2ludOKAmXMgbWVyaWRpYW4gKGxhbWJkYSksXG4gICAgICAvLyBhbmQgYXJlIHRoZSBsYXRpdHVkZXMgc21hbGxlciB0aGFuIHRoZSBwYXJhbGxlbCAocGhpKT9cbiAgICAgIGlmIChhbnRpbWVyaWRpYW4gXiBsYW1iZGEwID49IGxhbWJkYSBeIGxhbWJkYTEgPj0gbGFtYmRhKSB7XG4gICAgICAgIHZhciBhcmMgPSBjYXJ0ZXNpYW5Dcm9zcyhjYXJ0ZXNpYW4ocG9pbnQwKSwgY2FydGVzaWFuKHBvaW50MSkpO1xuICAgICAgICBjYXJ0ZXNpYW5Ob3JtYWxpemVJblBsYWNlKGFyYyk7XG4gICAgICAgIHZhciBpbnRlcnNlY3Rpb24gPSBjYXJ0ZXNpYW5Dcm9zcyhub3JtYWwsIGFyYyk7XG4gICAgICAgIGNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UoaW50ZXJzZWN0aW9uKTtcbiAgICAgICAgdmFyIHBoaUFyYyA9IChhbnRpbWVyaWRpYW4gXiBkZWx0YSA+PSAwID8gLTEgOiAxKSAqIGFzaW4oaW50ZXJzZWN0aW9uWzJdKTtcbiAgICAgICAgaWYgKHBoaSA+IHBoaUFyYyB8fCBwaGkgPT09IHBoaUFyYyAmJiAoYXJjWzBdIHx8IGFyY1sxXSkpIHtcbiAgICAgICAgICB3aW5kaW5nICs9IGFudGltZXJpZGlhbiBeIGRlbHRhID49IDAgPyAxIDogLTE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBGaXJzdCwgZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIFNvdXRoIHBvbGUgaXMgaW5zaWRlIG9yIG91dHNpZGU6XG4gIC8vXG4gIC8vIEl0IGlzIGluc2lkZSBpZjpcbiAgLy8gKiB0aGUgcG9seWdvbiB3aW5kcyBhcm91bmQgaXQgaW4gYSBjbG9ja3dpc2UgZGlyZWN0aW9uLlxuICAvLyAqIHRoZSBwb2x5Z29uIGRvZXMgbm90IChjdW11bGF0aXZlbHkpIHdpbmQgYXJvdW5kIGl0LCBidXQgaGFzIGEgbmVnYXRpdmVcbiAgLy8gICAoY291bnRlci1jbG9ja3dpc2UpIGFyZWEuXG4gIC8vXG4gIC8vIFNlY29uZCwgY291bnQgdGhlIChzaWduZWQpIG51bWJlciBvZiB0aW1lcyBhIHNlZ21lbnQgY3Jvc3NlcyBhIGxhbWJkYVxuICAvLyBmcm9tIHRoZSBwb2ludCB0byB0aGUgU291dGggcG9sZS4gIElmIGl0IGlzIHplcm8sIHRoZW4gdGhlIHBvaW50IGlzIHRoZVxuICAvLyBzYW1lIHNpZGUgYXMgdGhlIFNvdXRoIHBvbGUuXG5cbiAgcmV0dXJuIChhbmdsZSA8IC1lcHNpbG9uIHx8IGFuZ2xlIDwgZXBzaWxvbiAmJiBzdW0gPCAtZXBzaWxvbikgXiAod2luZGluZyAmIDEpO1xufVxuIiwiaW1wb3J0IGNvbmljRXF1YWxBcmVhIGZyb20gXCIuL2NvbmljRXF1YWxBcmVhXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gY29uaWNFcXVhbEFyZWEoKVxuICAgICAgLnBhcmFsbGVscyhbMjkuNSwgNDUuNV0pXG4gICAgICAuc2NhbGUoMTA3MClcbiAgICAgIC50cmFuc2xhdGUoWzQ4MCwgMjUwXSlcbiAgICAgIC5yb3RhdGUoWzk2LCAwXSlcbiAgICAgIC5jZW50ZXIoWy0wLjYsIDM4LjddKTtcbn1cbiIsImltcG9ydCB7ZXBzaWxvbn0gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCBhbGJlcnMgZnJvbSBcIi4vYWxiZXJzXCI7XG5pbXBvcnQgY29uaWNFcXVhbEFyZWEgZnJvbSBcIi4vY29uaWNFcXVhbEFyZWFcIjtcbmltcG9ydCB7Zml0RXh0ZW50LCBmaXRTaXplLCBmaXRXaWR0aCwgZml0SGVpZ2h0fSBmcm9tIFwiLi9maXRcIjtcblxuLy8gVGhlIHByb2plY3Rpb25zIG11c3QgaGF2ZSBtdXR1YWxseSBleGNsdXNpdmUgY2xpcCByZWdpb25zIG9uIHRoZSBzcGhlcmUsXG4vLyBhcyB0aGlzIHdpbGwgYXZvaWQgZW1pdHRpbmcgaW50ZXJsZWF2aW5nIGxpbmVzIGFuZCBwb2x5Z29ucy5cbmZ1bmN0aW9uIG11bHRpcGxleChzdHJlYW1zKSB7XG4gIHZhciBuID0gc3RyZWFtcy5sZW5ndGg7XG4gIHJldHVybiB7XG4gICAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHsgdmFyIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHN0cmVhbXNbaV0ucG9pbnQoeCwgeSk7IH0sXG4gICAgc3BoZXJlOiBmdW5jdGlvbigpIHsgdmFyIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHN0cmVhbXNbaV0uc3BoZXJlKCk7IH0sXG4gICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHsgdmFyIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHN0cmVhbXNbaV0ubGluZVN0YXJ0KCk7IH0sXG4gICAgbGluZUVuZDogZnVuY3Rpb24oKSB7IHZhciBpID0gLTE7IHdoaWxlICgrK2kgPCBuKSBzdHJlYW1zW2ldLmxpbmVFbmQoKTsgfSxcbiAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkgeyB2YXIgaSA9IC0xOyB3aGlsZSAoKytpIDwgbikgc3RyZWFtc1tpXS5wb2x5Z29uU3RhcnQoKTsgfSxcbiAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHsgdmFyIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHN0cmVhbXNbaV0ucG9seWdvbkVuZCgpOyB9XG4gIH07XG59XG5cbi8vIEEgY29tcG9zaXRlIHByb2plY3Rpb24gZm9yIHRoZSBVbml0ZWQgU3RhdGVzLCBjb25maWd1cmVkIGJ5IGRlZmF1bHQgZm9yXG4vLyA5NjDDlzUwMC4gVGhlIHByb2plY3Rpb24gYWxzbyB3b3JrcyBxdWl0ZSB3ZWxsIGF0IDk2MMOXNjAwIGlmIHlvdSBjaGFuZ2UgdGhlXG4vLyBzY2FsZSB0byAxMjg1IGFuZCBhZGp1c3QgdGhlIHRyYW5zbGF0ZSBhY2NvcmRpbmdseS4gVGhlIHNldCBvZiBzdGFuZGFyZFxuLy8gcGFyYWxsZWxzIGZvciBlYWNoIHJlZ2lvbiBjb21lcyBmcm9tIFVTR1MsIHdoaWNoIGlzIHB1Ymxpc2hlZCBoZXJlOlxuLy8gaHR0cDovL2Vnc2MudXNncy5nb3YvaXNiL3B1YnMvTWFwUHJvamVjdGlvbnMvcHJvamVjdGlvbnMuaHRtbCNhbGJlcnNcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgY2FjaGUsXG4gICAgICBjYWNoZVN0cmVhbSxcbiAgICAgIGxvd2VyNDggPSBhbGJlcnMoKSwgbG93ZXI0OFBvaW50LFxuICAgICAgYWxhc2thID0gY29uaWNFcXVhbEFyZWEoKS5yb3RhdGUoWzE1NCwgMF0pLmNlbnRlcihbLTIsIDU4LjVdKS5wYXJhbGxlbHMoWzU1LCA2NV0pLCBhbGFza2FQb2ludCwgLy8gRVBTRzozMzM4XG4gICAgICBoYXdhaWkgPSBjb25pY0VxdWFsQXJlYSgpLnJvdGF0ZShbMTU3LCAwXSkuY2VudGVyKFstMywgMTkuOV0pLnBhcmFsbGVscyhbOCwgMThdKSwgaGF3YWlpUG9pbnQsIC8vIEVTUkk6MTAyMDA3XG4gICAgICBwb2ludCwgcG9pbnRTdHJlYW0gPSB7cG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHsgcG9pbnQgPSBbeCwgeV07IH19O1xuXG4gIGZ1bmN0aW9uIGFsYmVyc1VzYShjb29yZGluYXRlcykge1xuICAgIHZhciB4ID0gY29vcmRpbmF0ZXNbMF0sIHkgPSBjb29yZGluYXRlc1sxXTtcbiAgICByZXR1cm4gcG9pbnQgPSBudWxsLFxuICAgICAgICAobG93ZXI0OFBvaW50LnBvaW50KHgsIHkpLCBwb2ludClcbiAgICAgICAgfHwgKGFsYXNrYVBvaW50LnBvaW50KHgsIHkpLCBwb2ludClcbiAgICAgICAgfHwgKGhhd2FpaVBvaW50LnBvaW50KHgsIHkpLCBwb2ludCk7XG4gIH1cblxuICBhbGJlcnNVc2EuaW52ZXJ0ID0gZnVuY3Rpb24oY29vcmRpbmF0ZXMpIHtcbiAgICB2YXIgayA9IGxvd2VyNDguc2NhbGUoKSxcbiAgICAgICAgdCA9IGxvd2VyNDgudHJhbnNsYXRlKCksXG4gICAgICAgIHggPSAoY29vcmRpbmF0ZXNbMF0gLSB0WzBdKSAvIGssXG4gICAgICAgIHkgPSAoY29vcmRpbmF0ZXNbMV0gLSB0WzFdKSAvIGs7XG4gICAgcmV0dXJuICh5ID49IDAuMTIwICYmIHkgPCAwLjIzNCAmJiB4ID49IC0wLjQyNSAmJiB4IDwgLTAuMjE0ID8gYWxhc2thXG4gICAgICAgIDogeSA+PSAwLjE2NiAmJiB5IDwgMC4yMzQgJiYgeCA+PSAtMC4yMTQgJiYgeCA8IC0wLjExNSA/IGhhd2FpaVxuICAgICAgICA6IGxvd2VyNDgpLmludmVydChjb29yZGluYXRlcyk7XG4gIH07XG5cbiAgYWxiZXJzVXNhLnN0cmVhbSA9IGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgIHJldHVybiBjYWNoZSAmJiBjYWNoZVN0cmVhbSA9PT0gc3RyZWFtID8gY2FjaGUgOiBjYWNoZSA9IG11bHRpcGxleChbbG93ZXI0OC5zdHJlYW0oY2FjaGVTdHJlYW0gPSBzdHJlYW0pLCBhbGFza2Euc3RyZWFtKHN0cmVhbSksIGhhd2FpaS5zdHJlYW0oc3RyZWFtKV0pO1xuICB9O1xuXG4gIGFsYmVyc1VzYS5wcmVjaXNpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbG93ZXI0OC5wcmVjaXNpb24oKTtcbiAgICBsb3dlcjQ4LnByZWNpc2lvbihfKSwgYWxhc2thLnByZWNpc2lvbihfKSwgaGF3YWlpLnByZWNpc2lvbihfKTtcbiAgICByZXR1cm4gcmVzZXQoKTtcbiAgfTtcblxuICBhbGJlcnNVc2Euc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbG93ZXI0OC5zY2FsZSgpO1xuICAgIGxvd2VyNDguc2NhbGUoXyksIGFsYXNrYS5zY2FsZShfICogMC4zNSksIGhhd2FpaS5zY2FsZShfKTtcbiAgICByZXR1cm4gYWxiZXJzVXNhLnRyYW5zbGF0ZShsb3dlcjQ4LnRyYW5zbGF0ZSgpKTtcbiAgfTtcblxuICBhbGJlcnNVc2EudHJhbnNsYXRlID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGxvd2VyNDgudHJhbnNsYXRlKCk7XG4gICAgdmFyIGsgPSBsb3dlcjQ4LnNjYWxlKCksIHggPSArX1swXSwgeSA9ICtfWzFdO1xuXG4gICAgbG93ZXI0OFBvaW50ID0gbG93ZXI0OFxuICAgICAgICAudHJhbnNsYXRlKF8pXG4gICAgICAgIC5jbGlwRXh0ZW50KFtbeCAtIDAuNDU1ICogaywgeSAtIDAuMjM4ICoga10sIFt4ICsgMC40NTUgKiBrLCB5ICsgMC4yMzggKiBrXV0pXG4gICAgICAgIC5zdHJlYW0ocG9pbnRTdHJlYW0pO1xuXG4gICAgYWxhc2thUG9pbnQgPSBhbGFza2FcbiAgICAgICAgLnRyYW5zbGF0ZShbeCAtIDAuMzA3ICogaywgeSArIDAuMjAxICoga10pXG4gICAgICAgIC5jbGlwRXh0ZW50KFtbeCAtIDAuNDI1ICogayArIGVwc2lsb24sIHkgKyAwLjEyMCAqIGsgKyBlcHNpbG9uXSwgW3ggLSAwLjIxNCAqIGsgLSBlcHNpbG9uLCB5ICsgMC4yMzQgKiBrIC0gZXBzaWxvbl1dKVxuICAgICAgICAuc3RyZWFtKHBvaW50U3RyZWFtKTtcblxuICAgIGhhd2FpaVBvaW50ID0gaGF3YWlpXG4gICAgICAgIC50cmFuc2xhdGUoW3ggLSAwLjIwNSAqIGssIHkgKyAwLjIxMiAqIGtdKVxuICAgICAgICAuY2xpcEV4dGVudChbW3ggLSAwLjIxNCAqIGsgKyBlcHNpbG9uLCB5ICsgMC4xNjYgKiBrICsgZXBzaWxvbl0sIFt4IC0gMC4xMTUgKiBrIC0gZXBzaWxvbiwgeSArIDAuMjM0ICogayAtIGVwc2lsb25dXSlcbiAgICAgICAgLnN0cmVhbShwb2ludFN0cmVhbSk7XG5cbiAgICByZXR1cm4gcmVzZXQoKTtcbiAgfTtcblxuICBhbGJlcnNVc2EuZml0RXh0ZW50ID0gZnVuY3Rpb24oZXh0ZW50LCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0RXh0ZW50KGFsYmVyc1VzYSwgZXh0ZW50LCBvYmplY3QpO1xuICB9O1xuXG4gIGFsYmVyc1VzYS5maXRTaXplID0gZnVuY3Rpb24oc2l6ZSwgb2JqZWN0KSB7XG4gICAgcmV0dXJuIGZpdFNpemUoYWxiZXJzVXNhLCBzaXplLCBvYmplY3QpO1xuICB9O1xuXG4gIGFsYmVyc1VzYS5maXRXaWR0aCA9IGZ1bmN0aW9uKHdpZHRoLCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0V2lkdGgoYWxiZXJzVXNhLCB3aWR0aCwgb2JqZWN0KTtcbiAgfTtcblxuICBhbGJlcnNVc2EuZml0SGVpZ2h0ID0gZnVuY3Rpb24oaGVpZ2h0LCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0SGVpZ2h0KGFsYmVyc1VzYSwgaGVpZ2h0LCBvYmplY3QpO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgIGNhY2hlID0gY2FjaGVTdHJlYW0gPSBudWxsO1xuICAgIHJldHVybiBhbGJlcnNVc2E7XG4gIH1cblxuICByZXR1cm4gYWxiZXJzVXNhLnNjYWxlKDEwNzApO1xufVxuIiwiaW1wb3J0IHthc2luLCBhdGFuMiwgY29zLCBzaW4sIHNxcnR9IGZyb20gXCIuLi9tYXRoXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBhemltdXRoYWxSYXcoc2NhbGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB2YXIgY3ggPSBjb3MoeCksXG4gICAgICAgIGN5ID0gY29zKHkpLFxuICAgICAgICBrID0gc2NhbGUoY3ggKiBjeSk7XG4gICAgcmV0dXJuIFtcbiAgICAgIGsgKiBjeSAqIHNpbih4KSxcbiAgICAgIGsgKiBzaW4oeSlcbiAgICBdO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhemltdXRoYWxJbnZlcnQoYW5nbGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB2YXIgeiA9IHNxcnQoeCAqIHggKyB5ICogeSksXG4gICAgICAgIGMgPSBhbmdsZSh6KSxcbiAgICAgICAgc2MgPSBzaW4oYyksXG4gICAgICAgIGNjID0gY29zKGMpO1xuICAgIHJldHVybiBbXG4gICAgICBhdGFuMih4ICogc2MsIHogKiBjYyksXG4gICAgICBhc2luKHogJiYgeSAqIHNjIC8geilcbiAgICBdO1xuICB9XG59XG4iLCJpbXBvcnQge2FzaW4sIHNxcnR9IGZyb20gXCIuLi9tYXRoXCI7XG5pbXBvcnQge2F6aW11dGhhbFJhdywgYXppbXV0aGFsSW52ZXJ0fSBmcm9tIFwiLi9hemltdXRoYWxcIjtcbmltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCB2YXIgYXppbXV0aGFsRXF1YWxBcmVhUmF3ID0gYXppbXV0aGFsUmF3KGZ1bmN0aW9uKGN4Y3kpIHtcbiAgcmV0dXJuIHNxcnQoMiAvICgxICsgY3hjeSkpO1xufSk7XG5cbmF6aW11dGhhbEVxdWFsQXJlYVJhdy5pbnZlcnQgPSBhemltdXRoYWxJbnZlcnQoZnVuY3Rpb24oeikge1xuICByZXR1cm4gMiAqIGFzaW4oeiAvIDIpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcHJvamVjdGlvbihhemltdXRoYWxFcXVhbEFyZWFSYXcpXG4gICAgICAuc2NhbGUoMTI0Ljc1KVxuICAgICAgLmNsaXBBbmdsZSgxODAgLSAxZS0zKTtcbn1cbiIsImltcG9ydCB7YWNvcywgc2lufSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHthemltdXRoYWxSYXcsIGF6aW11dGhhbEludmVydH0gZnJvbSBcIi4vYXppbXV0aGFsXCI7XG5pbXBvcnQgcHJvamVjdGlvbiBmcm9tIFwiLi9pbmRleFwiO1xuXG5leHBvcnQgdmFyIGF6aW11dGhhbEVxdWlkaXN0YW50UmF3ID0gYXppbXV0aGFsUmF3KGZ1bmN0aW9uKGMpIHtcbiAgcmV0dXJuIChjID0gYWNvcyhjKSkgJiYgYyAvIHNpbihjKTtcbn0pO1xuXG5hemltdXRoYWxFcXVpZGlzdGFudFJhdy5pbnZlcnQgPSBhemltdXRoYWxJbnZlcnQoZnVuY3Rpb24oeikge1xuICByZXR1cm4gejtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHByb2plY3Rpb24oYXppbXV0aGFsRXF1aWRpc3RhbnRSYXcpXG4gICAgICAuc2NhbGUoNzkuNDE4OClcbiAgICAgIC5jbGlwQW5nbGUoMTgwIC0gMWUtMyk7XG59XG4iLCJpbXBvcnQge2RlZ3JlZXMsIHBpLCByYWRpYW5zfSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHtwcm9qZWN0aW9uTXV0YXRvcn0gZnJvbSBcIi4vaW5kZXhcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbmljUHJvamVjdGlvbihwcm9qZWN0QXQpIHtcbiAgdmFyIHBoaTAgPSAwLFxuICAgICAgcGhpMSA9IHBpIC8gMyxcbiAgICAgIG0gPSBwcm9qZWN0aW9uTXV0YXRvcihwcm9qZWN0QXQpLFxuICAgICAgcCA9IG0ocGhpMCwgcGhpMSk7XG5cbiAgcC5wYXJhbGxlbHMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBtKHBoaTAgPSBfWzBdICogcmFkaWFucywgcGhpMSA9IF9bMV0gKiByYWRpYW5zKSA6IFtwaGkwICogZGVncmVlcywgcGhpMSAqIGRlZ3JlZXNdO1xuICB9O1xuXG4gIHJldHVybiBwO1xufVxuIiwiaW1wb3J0IHthYnMsIGF0YW4sIGF0YW4yLCBjb3MsIGVwc2lsb24sIGhhbGZQaSwgbG9nLCBwb3csIHNpZ24sIHNpbiwgc3FydCwgdGFufSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHtjb25pY1Byb2plY3Rpb259IGZyb20gXCIuL2NvbmljXCI7XG5pbXBvcnQge21lcmNhdG9yUmF3fSBmcm9tIFwiLi9tZXJjYXRvclwiO1xuXG5mdW5jdGlvbiB0YW55KHkpIHtcbiAgcmV0dXJuIHRhbigoaGFsZlBpICsgeSkgLyAyKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbmljQ29uZm9ybWFsUmF3KHkwLCB5MSkge1xuICB2YXIgY3kwID0gY29zKHkwKSxcbiAgICAgIG4gPSB5MCA9PT0geTEgPyBzaW4oeTApIDogbG9nKGN5MCAvIGNvcyh5MSkpIC8gbG9nKHRhbnkoeTEpIC8gdGFueSh5MCkpLFxuICAgICAgZiA9IGN5MCAqIHBvdyh0YW55KHkwKSwgbikgLyBuO1xuXG4gIGlmICghbikgcmV0dXJuIG1lcmNhdG9yUmF3O1xuXG4gIGZ1bmN0aW9uIHByb2plY3QoeCwgeSkge1xuICAgIGlmIChmID4gMCkgeyBpZiAoeSA8IC1oYWxmUGkgKyBlcHNpbG9uKSB5ID0gLWhhbGZQaSArIGVwc2lsb247IH1cbiAgICBlbHNlIHsgaWYgKHkgPiBoYWxmUGkgLSBlcHNpbG9uKSB5ID0gaGFsZlBpIC0gZXBzaWxvbjsgfVxuICAgIHZhciByID0gZiAvIHBvdyh0YW55KHkpLCBuKTtcbiAgICByZXR1cm4gW3IgKiBzaW4obiAqIHgpLCBmIC0gciAqIGNvcyhuICogeCldO1xuICB9XG5cbiAgcHJvamVjdC5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgdmFyIGZ5ID0gZiAtIHksIHIgPSBzaWduKG4pICogc3FydCh4ICogeCArIGZ5ICogZnkpO1xuICAgIHJldHVybiBbYXRhbjIoeCwgYWJzKGZ5KSkgLyBuICogc2lnbihmeSksIDIgKiBhdGFuKHBvdyhmIC8gciwgMSAvIG4pKSAtIGhhbGZQaV07XG4gIH07XG5cbiAgcmV0dXJuIHByb2plY3Q7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gY29uaWNQcm9qZWN0aW9uKGNvbmljQ29uZm9ybWFsUmF3KVxuICAgICAgLnNjYWxlKDEwOS41KVxuICAgICAgLnBhcmFsbGVscyhbMzAsIDMwXSk7XG59XG4iLCJpbXBvcnQge2FicywgYXNpbiwgYXRhbjIsIGNvcywgZXBzaWxvbiwgc2lnbiwgc2luLCBzcXJ0fSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHtjb25pY1Byb2plY3Rpb259IGZyb20gXCIuL2NvbmljXCI7XG5pbXBvcnQge2N5bGluZHJpY2FsRXF1YWxBcmVhUmF3fSBmcm9tIFwiLi9jeWxpbmRyaWNhbEVxdWFsQXJlYVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gY29uaWNFcXVhbEFyZWFSYXcoeTAsIHkxKSB7XG4gIHZhciBzeTAgPSBzaW4oeTApLCBuID0gKHN5MCArIHNpbih5MSkpIC8gMjtcblxuICAvLyBBcmUgdGhlIHBhcmFsbGVscyBzeW1tZXRyaWNhbCBhcm91bmQgdGhlIEVxdWF0b3I/XG4gIGlmIChhYnMobikgPCBlcHNpbG9uKSByZXR1cm4gY3lsaW5kcmljYWxFcXVhbEFyZWFSYXcoeTApO1xuXG4gIHZhciBjID0gMSArIHN5MCAqICgyICogbiAtIHN5MCksIHIwID0gc3FydChjKSAvIG47XG5cbiAgZnVuY3Rpb24gcHJvamVjdCh4LCB5KSB7XG4gICAgdmFyIHIgPSBzcXJ0KGMgLSAyICogbiAqIHNpbih5KSkgLyBuO1xuICAgIHJldHVybiBbciAqIHNpbih4ICo9IG4pLCByMCAtIHIgKiBjb3MoeCldO1xuICB9XG5cbiAgcHJvamVjdC5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgdmFyIHIweSA9IHIwIC0geTtcbiAgICByZXR1cm4gW2F0YW4yKHgsIGFicyhyMHkpKSAvIG4gKiBzaWduKHIweSksIGFzaW4oKGMgLSAoeCAqIHggKyByMHkgKiByMHkpICogbiAqIG4pIC8gKDIgKiBuKSldO1xuICB9O1xuXG4gIHJldHVybiBwcm9qZWN0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGNvbmljUHJvamVjdGlvbihjb25pY0VxdWFsQXJlYVJhdylcbiAgICAgIC5zY2FsZSgxNTUuNDI0KVxuICAgICAgLmNlbnRlcihbMCwgMzMuNjQ0Ml0pO1xufVxuIiwiaW1wb3J0IHthYnMsIGF0YW4yLCBjb3MsIGVwc2lsb24sIHNpZ24sIHNpbiwgc3FydH0gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCB7Y29uaWNQcm9qZWN0aW9ufSBmcm9tIFwiLi9jb25pY1wiO1xuaW1wb3J0IHtlcXVpcmVjdGFuZ3VsYXJSYXd9IGZyb20gXCIuL2VxdWlyZWN0YW5ndWxhclwiO1xuXG5leHBvcnQgZnVuY3Rpb24gY29uaWNFcXVpZGlzdGFudFJhdyh5MCwgeTEpIHtcbiAgdmFyIGN5MCA9IGNvcyh5MCksXG4gICAgICBuID0geTAgPT09IHkxID8gc2luKHkwKSA6IChjeTAgLSBjb3MoeTEpKSAvICh5MSAtIHkwKSxcbiAgICAgIGcgPSBjeTAgLyBuICsgeTA7XG5cbiAgaWYgKGFicyhuKSA8IGVwc2lsb24pIHJldHVybiBlcXVpcmVjdGFuZ3VsYXJSYXc7XG5cbiAgZnVuY3Rpb24gcHJvamVjdCh4LCB5KSB7XG4gICAgdmFyIGd5ID0gZyAtIHksIG54ID0gbiAqIHg7XG4gICAgcmV0dXJuIFtneSAqIHNpbihueCksIGcgLSBneSAqIGNvcyhueCldO1xuICB9XG5cbiAgcHJvamVjdC5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgdmFyIGd5ID0gZyAtIHk7XG4gICAgcmV0dXJuIFthdGFuMih4LCBhYnMoZ3kpKSAvIG4gKiBzaWduKGd5KSwgZyAtIHNpZ24obikgKiBzcXJ0KHggKiB4ICsgZ3kgKiBneSldO1xuICB9O1xuXG4gIHJldHVybiBwcm9qZWN0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGNvbmljUHJvamVjdGlvbihjb25pY0VxdWlkaXN0YW50UmF3KVxuICAgICAgLnNjYWxlKDEzMS4xNTQpXG4gICAgICAuY2VudGVyKFswLCAxMy45Mzg5XSk7XG59XG4iLCJpbXBvcnQge2FzaW4sIGNvcywgc2lufSBmcm9tIFwiLi4vbWF0aFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gY3lsaW5kcmljYWxFcXVhbEFyZWFSYXcocGhpMCkge1xuICB2YXIgY29zUGhpMCA9IGNvcyhwaGkwKTtcblxuICBmdW5jdGlvbiBmb3J3YXJkKGxhbWJkYSwgcGhpKSB7XG4gICAgcmV0dXJuIFtsYW1iZGEgKiBjb3NQaGkwLCBzaW4ocGhpKSAvIGNvc1BoaTBdO1xuICB9XG5cbiAgZm9yd2FyZC5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIFt4IC8gY29zUGhpMCwgYXNpbih5ICogY29zUGhpMCldO1xuICB9O1xuXG4gIHJldHVybiBmb3J3YXJkO1xufVxuIiwiaW1wb3J0IHByb2plY3Rpb24gZnJvbSBcIi4vaW5kZXguanNcIjtcbmltcG9ydCB7YWJzLCBhc2luLCBjb3MsIGVwc2lsb24yLCBzaW4sIHNxcnR9IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5cbnZhciBBMSA9IDEuMzQwMjY0LFxuICAgIEEyID0gLTAuMDgxMTA2LFxuICAgIEEzID0gMC4wMDA4OTMsXG4gICAgQTQgPSAwLjAwMzc5NixcbiAgICBNID0gc3FydCgzKSAvIDIsXG4gICAgaXRlcmF0aW9ucyA9IDEyO1xuXG5leHBvcnQgZnVuY3Rpb24gZXF1YWxFYXJ0aFJhdyhsYW1iZGEsIHBoaSkge1xuICB2YXIgbCA9IGFzaW4oTSAqIHNpbihwaGkpKSwgbDIgPSBsICogbCwgbDYgPSBsMiAqIGwyICogbDI7XG4gIHJldHVybiBbXG4gICAgbGFtYmRhICogY29zKGwpIC8gKE0gKiAoQTEgKyAzICogQTIgKiBsMiArIGw2ICogKDcgKiBBMyArIDkgKiBBNCAqIGwyKSkpLFxuICAgIGwgKiAoQTEgKyBBMiAqIGwyICsgbDYgKiAoQTMgKyBBNCAqIGwyKSlcbiAgXTtcbn1cblxuZXF1YWxFYXJ0aFJhdy5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gIHZhciBsID0geSwgbDIgPSBsICogbCwgbDYgPSBsMiAqIGwyICogbDI7XG4gIGZvciAodmFyIGkgPSAwLCBkZWx0YSwgZnksIGZweTsgaSA8IGl0ZXJhdGlvbnM7ICsraSkge1xuICAgIGZ5ID0gbCAqIChBMSArIEEyICogbDIgKyBsNiAqIChBMyArIEE0ICogbDIpKSAtIHk7XG4gICAgZnB5ID0gQTEgKyAzICogQTIgKiBsMiArIGw2ICogKDcgKiBBMyArIDkgKiBBNCAqIGwyKTtcbiAgICBsIC09IGRlbHRhID0gZnkgLyBmcHksIGwyID0gbCAqIGwsIGw2ID0gbDIgKiBsMiAqIGwyO1xuICAgIGlmIChhYnMoZGVsdGEpIDwgZXBzaWxvbjIpIGJyZWFrO1xuICB9XG4gIHJldHVybiBbXG4gICAgTSAqIHggKiAoQTEgKyAzICogQTIgKiBsMiArIGw2ICogKDcgKiBBMyArIDkgKiBBNCAqIGwyKSkgLyBjb3MobCksXG4gICAgYXNpbihzaW4obCkgLyBNKVxuICBdO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBwcm9qZWN0aW9uKGVxdWFsRWFydGhSYXcpXG4gICAgICAuc2NhbGUoMTc3LjE1OCk7XG59XG4iLCJpbXBvcnQgcHJvamVjdGlvbiBmcm9tIFwiLi9pbmRleFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gZXF1aXJlY3Rhbmd1bGFyUmF3KGxhbWJkYSwgcGhpKSB7XG4gIHJldHVybiBbbGFtYmRhLCBwaGldO1xufVxuXG5lcXVpcmVjdGFuZ3VsYXJSYXcuaW52ZXJ0ID0gZXF1aXJlY3Rhbmd1bGFyUmF3O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHByb2plY3Rpb24oZXF1aXJlY3Rhbmd1bGFyUmF3KVxuICAgICAgLnNjYWxlKDE1Mi42Myk7XG59XG4iLCJpbXBvcnQge2RlZmF1bHQgYXMgZ2VvU3RyZWFtfSBmcm9tIFwiLi4vc3RyZWFtXCI7XG5pbXBvcnQgYm91bmRzU3RyZWFtIGZyb20gXCIuLi9wYXRoL2JvdW5kc1wiO1xuXG5mdW5jdGlvbiBmaXQocHJvamVjdGlvbiwgZml0Qm91bmRzLCBvYmplY3QpIHtcbiAgdmFyIGNsaXAgPSBwcm9qZWN0aW9uLmNsaXBFeHRlbnQgJiYgcHJvamVjdGlvbi5jbGlwRXh0ZW50KCk7XG4gIHByb2plY3Rpb24uc2NhbGUoMTUwKS50cmFuc2xhdGUoWzAsIDBdKTtcbiAgaWYgKGNsaXAgIT0gbnVsbCkgcHJvamVjdGlvbi5jbGlwRXh0ZW50KG51bGwpO1xuICBnZW9TdHJlYW0ob2JqZWN0LCBwcm9qZWN0aW9uLnN0cmVhbShib3VuZHNTdHJlYW0pKTtcbiAgZml0Qm91bmRzKGJvdW5kc1N0cmVhbS5yZXN1bHQoKSk7XG4gIGlmIChjbGlwICE9IG51bGwpIHByb2plY3Rpb24uY2xpcEV4dGVudChjbGlwKTtcbiAgcmV0dXJuIHByb2plY3Rpb247XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaXRFeHRlbnQocHJvamVjdGlvbiwgZXh0ZW50LCBvYmplY3QpIHtcbiAgcmV0dXJuIGZpdChwcm9qZWN0aW9uLCBmdW5jdGlvbihiKSB7XG4gICAgdmFyIHcgPSBleHRlbnRbMV1bMF0gLSBleHRlbnRbMF1bMF0sXG4gICAgICAgIGggPSBleHRlbnRbMV1bMV0gLSBleHRlbnRbMF1bMV0sXG4gICAgICAgIGsgPSBNYXRoLm1pbih3IC8gKGJbMV1bMF0gLSBiWzBdWzBdKSwgaCAvIChiWzFdWzFdIC0gYlswXVsxXSkpLFxuICAgICAgICB4ID0gK2V4dGVudFswXVswXSArICh3IC0gayAqIChiWzFdWzBdICsgYlswXVswXSkpIC8gMixcbiAgICAgICAgeSA9ICtleHRlbnRbMF1bMV0gKyAoaCAtIGsgKiAoYlsxXVsxXSArIGJbMF1bMV0pKSAvIDI7XG4gICAgcHJvamVjdGlvbi5zY2FsZSgxNTAgKiBrKS50cmFuc2xhdGUoW3gsIHldKTtcbiAgfSwgb2JqZWN0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpdFNpemUocHJvamVjdGlvbiwgc2l6ZSwgb2JqZWN0KSB7XG4gIHJldHVybiBmaXRFeHRlbnQocHJvamVjdGlvbiwgW1swLCAwXSwgc2l6ZV0sIG9iamVjdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaXRXaWR0aChwcm9qZWN0aW9uLCB3aWR0aCwgb2JqZWN0KSB7XG4gIHJldHVybiBmaXQocHJvamVjdGlvbiwgZnVuY3Rpb24oYikge1xuICAgIHZhciB3ID0gK3dpZHRoLFxuICAgICAgICBrID0gdyAvIChiWzFdWzBdIC0gYlswXVswXSksXG4gICAgICAgIHggPSAodyAtIGsgKiAoYlsxXVswXSArIGJbMF1bMF0pKSAvIDIsXG4gICAgICAgIHkgPSAtayAqIGJbMF1bMV07XG4gICAgcHJvamVjdGlvbi5zY2FsZSgxNTAgKiBrKS50cmFuc2xhdGUoW3gsIHldKTtcbiAgfSwgb2JqZWN0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpdEhlaWdodChwcm9qZWN0aW9uLCBoZWlnaHQsIG9iamVjdCkge1xuICByZXR1cm4gZml0KHByb2plY3Rpb24sIGZ1bmN0aW9uKGIpIHtcbiAgICB2YXIgaCA9ICtoZWlnaHQsXG4gICAgICAgIGsgPSBoIC8gKGJbMV1bMV0gLSBiWzBdWzFdKSxcbiAgICAgICAgeCA9IC1rICogYlswXVswXSxcbiAgICAgICAgeSA9IChoIC0gayAqIChiWzFdWzFdICsgYlswXVsxXSkpIC8gMjtcbiAgICBwcm9qZWN0aW9uLnNjYWxlKDE1MCAqIGspLnRyYW5zbGF0ZShbeCwgeV0pO1xuICB9LCBvYmplY3QpO1xufVxuIiwiaW1wb3J0IHthdGFuLCBjb3MsIHNpbn0gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCB7YXppbXV0aGFsSW52ZXJ0fSBmcm9tIFwiLi9hemltdXRoYWxcIjtcbmltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBnbm9tb25pY1Jhdyh4LCB5KSB7XG4gIHZhciBjeSA9IGNvcyh5KSwgayA9IGNvcyh4KSAqIGN5O1xuICByZXR1cm4gW2N5ICogc2luKHgpIC8gaywgc2luKHkpIC8ga107XG59XG5cbmdub21vbmljUmF3LmludmVydCA9IGF6aW11dGhhbEludmVydChhdGFuKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBwcm9qZWN0aW9uKGdub21vbmljUmF3KVxuICAgICAgLnNjYWxlKDE0NC4wNDkpXG4gICAgICAuY2xpcEFuZ2xlKDYwKTtcbn1cbiIsImltcG9ydCBjbGlwUmVjdGFuZ2xlIGZyb20gXCIuLi9jbGlwL3JlY3RhbmdsZVwiO1xuaW1wb3J0IGlkZW50aXR5IGZyb20gXCIuLi9pZGVudGl0eVwiO1xuaW1wb3J0IHt0cmFuc2Zvcm1lcn0gZnJvbSBcIi4uL3RyYW5zZm9ybVwiO1xuaW1wb3J0IHtmaXRFeHRlbnQsIGZpdFNpemUsIGZpdFdpZHRoLCBmaXRIZWlnaHR9IGZyb20gXCIuL2ZpdFwiO1xuXG5mdW5jdGlvbiBzY2FsZVRyYW5zbGF0ZShreCwga3ksIHR4LCB0eSkge1xuICByZXR1cm4ga3ggPT09IDEgJiYga3kgPT09IDEgJiYgdHggPT09IDAgJiYgdHkgPT09IDAgPyBpZGVudGl0eSA6IHRyYW5zZm9ybWVyKHtcbiAgICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgICAgdGhpcy5zdHJlYW0ucG9pbnQoeCAqIGt4ICsgdHgsIHkgKiBreSArIHR5KTtcbiAgICB9XG4gIH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGsgPSAxLCB0eCA9IDAsIHR5ID0gMCwgc3ggPSAxLCBzeSA9IDEsIHRyYW5zZm9ybSA9IGlkZW50aXR5LCAvLyBzY2FsZSwgdHJhbnNsYXRlIGFuZCByZWZsZWN0XG4gICAgICB4MCA9IG51bGwsIHkwLCB4MSwgeTEsIC8vIGNsaXAgZXh0ZW50XG4gICAgICBwb3N0Y2xpcCA9IGlkZW50aXR5LFxuICAgICAgY2FjaGUsXG4gICAgICBjYWNoZVN0cmVhbSxcbiAgICAgIHByb2plY3Rpb247XG5cbiAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgY2FjaGUgPSBjYWNoZVN0cmVhbSA9IG51bGw7XG4gICAgcmV0dXJuIHByb2plY3Rpb247XG4gIH1cblxuICByZXR1cm4gcHJvamVjdGlvbiA9IHtcbiAgICBzdHJlYW06IGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgICAgcmV0dXJuIGNhY2hlICYmIGNhY2hlU3RyZWFtID09PSBzdHJlYW0gPyBjYWNoZSA6IGNhY2hlID0gdHJhbnNmb3JtKHBvc3RjbGlwKGNhY2hlU3RyZWFtID0gc3RyZWFtKSk7XG4gICAgfSxcbiAgICBwb3N0Y2xpcDogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocG9zdGNsaXAgPSBfLCB4MCA9IHkwID0geDEgPSB5MSA9IG51bGwsIHJlc2V0KCkpIDogcG9zdGNsaXA7XG4gICAgfSxcbiAgICBjbGlwRXh0ZW50OiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwb3N0Y2xpcCA9IF8gPT0gbnVsbCA/ICh4MCA9IHkwID0geDEgPSB5MSA9IG51bGwsIGlkZW50aXR5KSA6IGNsaXBSZWN0YW5nbGUoeDAgPSArX1swXVswXSwgeTAgPSArX1swXVsxXSwgeDEgPSArX1sxXVswXSwgeTEgPSArX1sxXVsxXSksIHJlc2V0KCkpIDogeDAgPT0gbnVsbCA/IG51bGwgOiBbW3gwLCB5MF0sIFt4MSwgeTFdXTtcbiAgICB9LFxuICAgIHNjYWxlOiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0cmFuc2Zvcm0gPSBzY2FsZVRyYW5zbGF0ZSgoayA9ICtfKSAqIHN4LCBrICogc3ksIHR4LCB0eSksIHJlc2V0KCkpIDogaztcbiAgICB9LFxuICAgIHRyYW5zbGF0ZTogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodHJhbnNmb3JtID0gc2NhbGVUcmFuc2xhdGUoayAqIHN4LCBrICogc3ksIHR4ID0gK19bMF0sIHR5ID0gK19bMV0pLCByZXNldCgpKSA6IFt0eCwgdHldO1xuICAgIH0sXG4gICAgcmVmbGVjdFg6IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRyYW5zZm9ybSA9IHNjYWxlVHJhbnNsYXRlKGsgKiAoc3ggPSBfID8gLTEgOiAxKSwgayAqIHN5LCB0eCwgdHkpLCByZXNldCgpKSA6IHN4IDwgMDtcbiAgICB9LFxuICAgIHJlZmxlY3RZOiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0cmFuc2Zvcm0gPSBzY2FsZVRyYW5zbGF0ZShrICogc3gsIGsgKiAoc3kgPSBfID8gLTEgOiAxKSwgdHgsIHR5KSwgcmVzZXQoKSkgOiBzeSA8IDA7XG4gICAgfSxcbiAgICBmaXRFeHRlbnQ6IGZ1bmN0aW9uKGV4dGVudCwgb2JqZWN0KSB7XG4gICAgICByZXR1cm4gZml0RXh0ZW50KHByb2plY3Rpb24sIGV4dGVudCwgb2JqZWN0KTtcbiAgICB9LFxuICAgIGZpdFNpemU6IGZ1bmN0aW9uKHNpemUsIG9iamVjdCkge1xuICAgICAgcmV0dXJuIGZpdFNpemUocHJvamVjdGlvbiwgc2l6ZSwgb2JqZWN0KTtcbiAgICB9LFxuICAgIGZpdFdpZHRoOiBmdW5jdGlvbih3aWR0aCwgb2JqZWN0KSB7XG4gICAgICByZXR1cm4gZml0V2lkdGgocHJvamVjdGlvbiwgd2lkdGgsIG9iamVjdCk7XG4gICAgfSxcbiAgICBmaXRIZWlnaHQ6IGZ1bmN0aW9uKGhlaWdodCwgb2JqZWN0KSB7XG4gICAgICByZXR1cm4gZml0SGVpZ2h0KHByb2plY3Rpb24sIGhlaWdodCwgb2JqZWN0KTtcbiAgICB9XG4gIH07XG59XG4iLCJpbXBvcnQgY2xpcEFudGltZXJpZGlhbiBmcm9tIFwiLi4vY2xpcC9hbnRpbWVyaWRpYW5cIjtcbmltcG9ydCBjbGlwQ2lyY2xlIGZyb20gXCIuLi9jbGlwL2NpcmNsZVwiO1xuaW1wb3J0IGNsaXBSZWN0YW5nbGUgZnJvbSBcIi4uL2NsaXAvcmVjdGFuZ2xlXCI7XG5pbXBvcnQgY29tcG9zZSBmcm9tIFwiLi4vY29tcG9zZVwiO1xuaW1wb3J0IGlkZW50aXR5IGZyb20gXCIuLi9pZGVudGl0eVwiO1xuaW1wb3J0IHtjb3MsIGRlZ3JlZXMsIHJhZGlhbnMsIHNpbiwgc3FydH0gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCB7cm90YXRlUmFkaWFuc30gZnJvbSBcIi4uL3JvdGF0aW9uXCI7XG5pbXBvcnQge3RyYW5zZm9ybWVyfSBmcm9tIFwiLi4vdHJhbnNmb3JtXCI7XG5pbXBvcnQge2ZpdEV4dGVudCwgZml0U2l6ZSwgZml0V2lkdGgsIGZpdEhlaWdodH0gZnJvbSBcIi4vZml0XCI7XG5pbXBvcnQgcmVzYW1wbGUgZnJvbSBcIi4vcmVzYW1wbGVcIjtcblxudmFyIHRyYW5zZm9ybVJhZGlhbnMgPSB0cmFuc2Zvcm1lcih7XG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgdGhpcy5zdHJlYW0ucG9pbnQoeCAqIHJhZGlhbnMsIHkgKiByYWRpYW5zKTtcbiAgfVxufSk7XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybVJvdGF0ZShyb3RhdGUpIHtcbiAgcmV0dXJuIHRyYW5zZm9ybWVyKHtcbiAgICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgICAgdmFyIHIgPSByb3RhdGUoeCwgeSk7XG4gICAgICByZXR1cm4gdGhpcy5zdHJlYW0ucG9pbnQoclswXSwgclsxXSk7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gc2NhbGVUcmFuc2xhdGUoaywgZHgsIGR5KSB7XG4gIGZ1bmN0aW9uIHRyYW5zZm9ybSh4LCB5KSB7XG4gICAgcmV0dXJuIFtkeCArIGsgKiB4LCBkeSAtIGsgKiB5XTtcbiAgfVxuICB0cmFuc2Zvcm0uaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgIHJldHVybiBbKHggLSBkeCkgLyBrLCAoZHkgLSB5KSAvIGtdO1xuICB9O1xuICByZXR1cm4gdHJhbnNmb3JtO1xufVxuXG5mdW5jdGlvbiBzY2FsZVRyYW5zbGF0ZVJvdGF0ZShrLCBkeCwgZHksIGFscGhhKSB7XG4gIHZhciBjb3NBbHBoYSA9IGNvcyhhbHBoYSksXG4gICAgICBzaW5BbHBoYSA9IHNpbihhbHBoYSksXG4gICAgICBhID0gY29zQWxwaGEgKiBrLFxuICAgICAgYiA9IHNpbkFscGhhICogayxcbiAgICAgIGFpID0gY29zQWxwaGEgLyBrLFxuICAgICAgYmkgPSBzaW5BbHBoYSAvIGssXG4gICAgICBjaSA9IChzaW5BbHBoYSAqIGR5IC0gY29zQWxwaGEgKiBkeCkgLyBrLFxuICAgICAgZmkgPSAoc2luQWxwaGEgKiBkeCArIGNvc0FscGhhICogZHkpIC8gaztcbiAgZnVuY3Rpb24gdHJhbnNmb3JtKHgsIHkpIHtcbiAgICByZXR1cm4gW2EgKiB4IC0gYiAqIHkgKyBkeCwgZHkgLSBiICogeCAtIGEgKiB5XTtcbiAgfVxuICB0cmFuc2Zvcm0uaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgIHJldHVybiBbYWkgKiB4IC0gYmkgKiB5ICsgY2ksIGZpIC0gYmkgKiB4IC0gYWkgKiB5XTtcbiAgfTtcbiAgcmV0dXJuIHRyYW5zZm9ybTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcHJvamVjdGlvbihwcm9qZWN0KSB7XG4gIHJldHVybiBwcm9qZWN0aW9uTXV0YXRvcihmdW5jdGlvbigpIHsgcmV0dXJuIHByb2plY3Q7IH0pKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9qZWN0aW9uTXV0YXRvcihwcm9qZWN0QXQpIHtcbiAgdmFyIHByb2plY3QsXG4gICAgICBrID0gMTUwLCAvLyBzY2FsZVxuICAgICAgeCA9IDQ4MCwgeSA9IDI1MCwgLy8gdHJhbnNsYXRlXG4gICAgICBsYW1iZGEgPSAwLCBwaGkgPSAwLCAvLyBjZW50ZXJcbiAgICAgIGRlbHRhTGFtYmRhID0gMCwgZGVsdGFQaGkgPSAwLCBkZWx0YUdhbW1hID0gMCwgcm90YXRlLCAvLyBwcmUtcm90YXRlXG4gICAgICBhbHBoYSA9IDAsIC8vIHBvc3Qtcm90YXRlXG4gICAgICB0aGV0YSA9IG51bGwsIHByZWNsaXAgPSBjbGlwQW50aW1lcmlkaWFuLCAvLyBwcmUtY2xpcCBhbmdsZVxuICAgICAgeDAgPSBudWxsLCB5MCwgeDEsIHkxLCBwb3N0Y2xpcCA9IGlkZW50aXR5LCAvLyBwb3N0LWNsaXAgZXh0ZW50XG4gICAgICBkZWx0YTIgPSAwLjUsIC8vIHByZWNpc2lvblxuICAgICAgcHJvamVjdFJlc2FtcGxlLFxuICAgICAgcHJvamVjdFRyYW5zZm9ybSxcbiAgICAgIHByb2plY3RSb3RhdGVUcmFuc2Zvcm0sXG4gICAgICBjYWNoZSxcbiAgICAgIGNhY2hlU3RyZWFtO1xuXG4gIGZ1bmN0aW9uIHByb2plY3Rpb24ocG9pbnQpIHtcbiAgICByZXR1cm4gcHJvamVjdFJvdGF0ZVRyYW5zZm9ybShwb2ludFswXSAqIHJhZGlhbnMsIHBvaW50WzFdICogcmFkaWFucyk7XG4gIH1cblxuICBmdW5jdGlvbiBpbnZlcnQocG9pbnQpIHtcbiAgICBwb2ludCA9IHByb2plY3RSb3RhdGVUcmFuc2Zvcm0uaW52ZXJ0KHBvaW50WzBdLCBwb2ludFsxXSk7XG4gICAgcmV0dXJuIHBvaW50ICYmIFtwb2ludFswXSAqIGRlZ3JlZXMsIHBvaW50WzFdICogZGVncmVlc107XG4gIH1cblxuICBwcm9qZWN0aW9uLnN0cmVhbSA9IGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgIHJldHVybiBjYWNoZSAmJiBjYWNoZVN0cmVhbSA9PT0gc3RyZWFtID8gY2FjaGUgOiBjYWNoZSA9IHRyYW5zZm9ybVJhZGlhbnModHJhbnNmb3JtUm90YXRlKHJvdGF0ZSkocHJlY2xpcChwcm9qZWN0UmVzYW1wbGUocG9zdGNsaXAoY2FjaGVTdHJlYW0gPSBzdHJlYW0pKSkpKTtcbiAgfTtcblxuICBwcm9qZWN0aW9uLnByZWNsaXAgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocHJlY2xpcCA9IF8sIHRoZXRhID0gdW5kZWZpbmVkLCByZXNldCgpKSA6IHByZWNsaXA7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5wb3N0Y2xpcCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwb3N0Y2xpcCA9IF8sIHgwID0geTAgPSB4MSA9IHkxID0gbnVsbCwgcmVzZXQoKSkgOiBwb3N0Y2xpcDtcbiAgfTtcblxuICBwcm9qZWN0aW9uLmNsaXBBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwcmVjbGlwID0gK18gPyBjbGlwQ2lyY2xlKHRoZXRhID0gXyAqIHJhZGlhbnMpIDogKHRoZXRhID0gbnVsbCwgY2xpcEFudGltZXJpZGlhbiksIHJlc2V0KCkpIDogdGhldGEgKiBkZWdyZWVzO1xuICB9O1xuXG4gIHByb2plY3Rpb24uY2xpcEV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwb3N0Y2xpcCA9IF8gPT0gbnVsbCA/ICh4MCA9IHkwID0geDEgPSB5MSA9IG51bGwsIGlkZW50aXR5KSA6IGNsaXBSZWN0YW5nbGUoeDAgPSArX1swXVswXSwgeTAgPSArX1swXVsxXSwgeDEgPSArX1sxXVswXSwgeTEgPSArX1sxXVsxXSksIHJlc2V0KCkpIDogeDAgPT0gbnVsbCA/IG51bGwgOiBbW3gwLCB5MF0sIFt4MSwgeTFdXTtcbiAgfTtcblxuICBwcm9qZWN0aW9uLnNjYWxlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGsgPSArXywgcmVjZW50ZXIoKSkgOiBrO1xuICB9O1xuXG4gIHByb2plY3Rpb24udHJhbnNsYXRlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSArX1swXSwgeSA9ICtfWzFdLCByZWNlbnRlcigpKSA6IFt4LCB5XTtcbiAgfTtcblxuICBwcm9qZWN0aW9uLmNlbnRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChsYW1iZGEgPSBfWzBdICUgMzYwICogcmFkaWFucywgcGhpID0gX1sxXSAlIDM2MCAqIHJhZGlhbnMsIHJlY2VudGVyKCkpIDogW2xhbWJkYSAqIGRlZ3JlZXMsIHBoaSAqIGRlZ3JlZXNdO1xuICB9O1xuXG4gIHByb2plY3Rpb24ucm90YXRlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRlbHRhTGFtYmRhID0gX1swXSAlIDM2MCAqIHJhZGlhbnMsIGRlbHRhUGhpID0gX1sxXSAlIDM2MCAqIHJhZGlhbnMsIGRlbHRhR2FtbWEgPSBfLmxlbmd0aCA+IDIgPyBfWzJdICUgMzYwICogcmFkaWFucyA6IDAsIHJlY2VudGVyKCkpIDogW2RlbHRhTGFtYmRhICogZGVncmVlcywgZGVsdGFQaGkgKiBkZWdyZWVzLCBkZWx0YUdhbW1hICogZGVncmVlc107XG4gIH07XG5cbiAgcHJvamVjdGlvbi5hbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhbHBoYSA9IF8gJSAzNjAgKiByYWRpYW5zLCByZWNlbnRlcigpKSA6IGFscGhhICogZGVncmVlcztcbiAgfTtcblxuICBwcm9qZWN0aW9uLnByZWNpc2lvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwcm9qZWN0UmVzYW1wbGUgPSByZXNhbXBsZShwcm9qZWN0VHJhbnNmb3JtLCBkZWx0YTIgPSBfICogXyksIHJlc2V0KCkpIDogc3FydChkZWx0YTIpO1xuICB9O1xuXG4gIHByb2plY3Rpb24uZml0RXh0ZW50ID0gZnVuY3Rpb24oZXh0ZW50LCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0RXh0ZW50KHByb2plY3Rpb24sIGV4dGVudCwgb2JqZWN0KTtcbiAgfTtcblxuICBwcm9qZWN0aW9uLmZpdFNpemUgPSBmdW5jdGlvbihzaXplLCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0U2l6ZShwcm9qZWN0aW9uLCBzaXplLCBvYmplY3QpO1xuICB9O1xuXG4gIHByb2plY3Rpb24uZml0V2lkdGggPSBmdW5jdGlvbih3aWR0aCwgb2JqZWN0KSB7XG4gICAgcmV0dXJuIGZpdFdpZHRoKHByb2plY3Rpb24sIHdpZHRoLCBvYmplY3QpO1xuICB9O1xuXG4gIHByb2plY3Rpb24uZml0SGVpZ2h0ID0gZnVuY3Rpb24oaGVpZ2h0LCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0SGVpZ2h0KHByb2plY3Rpb24sIGhlaWdodCwgb2JqZWN0KTtcbiAgfTtcblxuICBmdW5jdGlvbiByZWNlbnRlcigpIHtcbiAgICB2YXIgY2VudGVyID0gc2NhbGVUcmFuc2xhdGVSb3RhdGUoaywgMCwgMCwgYWxwaGEpLmFwcGx5KG51bGwsIHByb2plY3QobGFtYmRhLCBwaGkpKSxcbiAgICAgICAgdHJhbnNmb3JtID0gKGFscGhhID8gc2NhbGVUcmFuc2xhdGVSb3RhdGUgOiBzY2FsZVRyYW5zbGF0ZSkoaywgeCAtIGNlbnRlclswXSwgeSAtIGNlbnRlclsxXSwgYWxwaGEpO1xuICAgIHJvdGF0ZSA9IHJvdGF0ZVJhZGlhbnMoZGVsdGFMYW1iZGEsIGRlbHRhUGhpLCBkZWx0YUdhbW1hKTtcbiAgICBwcm9qZWN0VHJhbnNmb3JtID0gY29tcG9zZShwcm9qZWN0LCB0cmFuc2Zvcm0pO1xuICAgIHByb2plY3RSb3RhdGVUcmFuc2Zvcm0gPSBjb21wb3NlKHJvdGF0ZSwgcHJvamVjdFRyYW5zZm9ybSk7XG4gICAgcHJvamVjdFJlc2FtcGxlID0gcmVzYW1wbGUocHJvamVjdFRyYW5zZm9ybSwgZGVsdGEyKTtcbiAgICByZXR1cm4gcmVzZXQoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgIGNhY2hlID0gY2FjaGVTdHJlYW0gPSBudWxsO1xuICAgIHJldHVybiBwcm9qZWN0aW9uO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHByb2plY3QgPSBwcm9qZWN0QXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBwcm9qZWN0aW9uLmludmVydCA9IHByb2plY3QuaW52ZXJ0ICYmIGludmVydDtcbiAgICByZXR1cm4gcmVjZW50ZXIoKTtcbiAgfTtcbn1cbiIsImltcG9ydCB7YXRhbiwgZXhwLCBoYWxmUGksIGxvZywgcGksIHRhbiwgdGF1fSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHJvdGF0aW9uIGZyb20gXCIuLi9yb3RhdGlvblwiO1xuaW1wb3J0IHByb2plY3Rpb24gZnJvbSBcIi4vaW5kZXhcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG1lcmNhdG9yUmF3KGxhbWJkYSwgcGhpKSB7XG4gIHJldHVybiBbbGFtYmRhLCBsb2codGFuKChoYWxmUGkgKyBwaGkpIC8gMikpXTtcbn1cblxubWVyY2F0b3JSYXcuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICByZXR1cm4gW3gsIDIgKiBhdGFuKGV4cCh5KSkgLSBoYWxmUGldO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBtZXJjYXRvclByb2plY3Rpb24obWVyY2F0b3JSYXcpXG4gICAgICAuc2NhbGUoOTYxIC8gdGF1KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1lcmNhdG9yUHJvamVjdGlvbihwcm9qZWN0KSB7XG4gIHZhciBtID0gcHJvamVjdGlvbihwcm9qZWN0KSxcbiAgICAgIGNlbnRlciA9IG0uY2VudGVyLFxuICAgICAgc2NhbGUgPSBtLnNjYWxlLFxuICAgICAgdHJhbnNsYXRlID0gbS50cmFuc2xhdGUsXG4gICAgICBjbGlwRXh0ZW50ID0gbS5jbGlwRXh0ZW50LFxuICAgICAgeDAgPSBudWxsLCB5MCwgeDEsIHkxOyAvLyBjbGlwIGV4dGVudFxuXG4gIG0uc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2NhbGUoXyksIHJlY2xpcCgpKSA6IHNjYWxlKCk7XG4gIH07XG5cbiAgbS50cmFuc2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodHJhbnNsYXRlKF8pLCByZWNsaXAoKSkgOiB0cmFuc2xhdGUoKTtcbiAgfTtcblxuICBtLmNlbnRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjZW50ZXIoXyksIHJlY2xpcCgpKSA6IGNlbnRlcigpO1xuICB9O1xuXG4gIG0uY2xpcEV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICgoXyA9PSBudWxsID8geDAgPSB5MCA9IHgxID0geTEgPSBudWxsIDogKHgwID0gK19bMF1bMF0sIHkwID0gK19bMF1bMV0sIHgxID0gK19bMV1bMF0sIHkxID0gK19bMV1bMV0pKSwgcmVjbGlwKCkpIDogeDAgPT0gbnVsbCA/IG51bGwgOiBbW3gwLCB5MF0sIFt4MSwgeTFdXTtcbiAgfTtcblxuICBmdW5jdGlvbiByZWNsaXAoKSB7XG4gICAgdmFyIGsgPSBwaSAqIHNjYWxlKCksXG4gICAgICAgIHQgPSBtKHJvdGF0aW9uKG0ucm90YXRlKCkpLmludmVydChbMCwgMF0pKTtcbiAgICByZXR1cm4gY2xpcEV4dGVudCh4MCA9PSBudWxsXG4gICAgICAgID8gW1t0WzBdIC0gaywgdFsxXSAtIGtdLCBbdFswXSArIGssIHRbMV0gKyBrXV0gOiBwcm9qZWN0ID09PSBtZXJjYXRvclJhd1xuICAgICAgICA/IFtbTWF0aC5tYXgodFswXSAtIGssIHgwKSwgeTBdLCBbTWF0aC5taW4odFswXSArIGssIHgxKSwgeTFdXVxuICAgICAgICA6IFtbeDAsIE1hdGgubWF4KHRbMV0gLSBrLCB5MCldLCBbeDEsIE1hdGgubWluKHRbMV0gKyBrLCB5MSldXSk7XG4gIH1cblxuICByZXR1cm4gcmVjbGlwKCk7XG59XG4iLCJpbXBvcnQgcHJvamVjdGlvbiBmcm9tIFwiLi9pbmRleFwiO1xuaW1wb3J0IHthYnMsIGVwc2lsb259IGZyb20gXCIuLi9tYXRoXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBuYXR1cmFsRWFydGgxUmF3KGxhbWJkYSwgcGhpKSB7XG4gIHZhciBwaGkyID0gcGhpICogcGhpLCBwaGk0ID0gcGhpMiAqIHBoaTI7XG4gIHJldHVybiBbXG4gICAgbGFtYmRhICogKDAuODcwNyAtIDAuMTMxOTc5ICogcGhpMiArIHBoaTQgKiAoLTAuMDEzNzkxICsgcGhpNCAqICgwLjAwMzk3MSAqIHBoaTIgLSAwLjAwMTUyOSAqIHBoaTQpKSksXG4gICAgcGhpICogKDEuMDA3MjI2ICsgcGhpMiAqICgwLjAxNTA4NSArIHBoaTQgKiAoLTAuMDQ0NDc1ICsgMC4wMjg4NzQgKiBwaGkyIC0gMC4wMDU5MTYgKiBwaGk0KSkpXG4gIF07XG59XG5cbm5hdHVyYWxFYXJ0aDFSYXcuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICB2YXIgcGhpID0geSwgaSA9IDI1LCBkZWx0YTtcbiAgZG8ge1xuICAgIHZhciBwaGkyID0gcGhpICogcGhpLCBwaGk0ID0gcGhpMiAqIHBoaTI7XG4gICAgcGhpIC09IGRlbHRhID0gKHBoaSAqICgxLjAwNzIyNiArIHBoaTIgKiAoMC4wMTUwODUgKyBwaGk0ICogKC0wLjA0NDQ3NSArIDAuMDI4ODc0ICogcGhpMiAtIDAuMDA1OTE2ICogcGhpNCkpKSAtIHkpIC9cbiAgICAgICAgKDEuMDA3MjI2ICsgcGhpMiAqICgwLjAxNTA4NSAqIDMgKyBwaGk0ICogKC0wLjA0NDQ3NSAqIDcgKyAwLjAyODg3NCAqIDkgKiBwaGkyIC0gMC4wMDU5MTYgKiAxMSAqIHBoaTQpKSk7XG4gIH0gd2hpbGUgKGFicyhkZWx0YSkgPiBlcHNpbG9uICYmIC0taSA+IDApO1xuICByZXR1cm4gW1xuICAgIHggLyAoMC44NzA3ICsgKHBoaTIgPSBwaGkgKiBwaGkpICogKC0wLjEzMTk3OSArIHBoaTIgKiAoLTAuMDEzNzkxICsgcGhpMiAqIHBoaTIgKiBwaGkyICogKDAuMDAzOTcxIC0gMC4wMDE1MjkgKiBwaGkyKSkpKSxcbiAgICBwaGlcbiAgXTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcHJvamVjdGlvbihuYXR1cmFsRWFydGgxUmF3KVxuICAgICAgLnNjYWxlKDE3NS4yOTUpO1xufVxuIiwiaW1wb3J0IHthc2luLCBjb3MsIGVwc2lsb24sIHNpbn0gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCB7YXppbXV0aGFsSW52ZXJ0fSBmcm9tIFwiLi9hemltdXRoYWxcIjtcbmltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBvcnRob2dyYXBoaWNSYXcoeCwgeSkge1xuICByZXR1cm4gW2Nvcyh5KSAqIHNpbih4KSwgc2luKHkpXTtcbn1cblxub3J0aG9ncmFwaGljUmF3LmludmVydCA9IGF6aW11dGhhbEludmVydChhc2luKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBwcm9qZWN0aW9uKG9ydGhvZ3JhcGhpY1JhdylcbiAgICAgIC5zY2FsZSgyNDkuNSlcbiAgICAgIC5jbGlwQW5nbGUoOTAgKyBlcHNpbG9uKTtcbn1cbiIsImltcG9ydCB7Y2FydGVzaWFufSBmcm9tIFwiLi4vY2FydGVzaWFuXCI7XG5pbXBvcnQge2FicywgYXNpbiwgYXRhbjIsIGNvcywgZXBzaWxvbiwgcmFkaWFucywgc3FydH0gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCB7dHJhbnNmb3JtZXJ9IGZyb20gXCIuLi90cmFuc2Zvcm1cIjtcblxudmFyIG1heERlcHRoID0gMTYsIC8vIG1heGltdW0gZGVwdGggb2Ygc3ViZGl2aXNpb25cbiAgICBjb3NNaW5EaXN0YW5jZSA9IGNvcygzMCAqIHJhZGlhbnMpOyAvLyBjb3MobWluaW11bSBhbmd1bGFyIGRpc3RhbmNlKVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwcm9qZWN0LCBkZWx0YTIpIHtcbiAgcmV0dXJuICtkZWx0YTIgPyByZXNhbXBsZShwcm9qZWN0LCBkZWx0YTIpIDogcmVzYW1wbGVOb25lKHByb2plY3QpO1xufVxuXG5mdW5jdGlvbiByZXNhbXBsZU5vbmUocHJvamVjdCkge1xuICByZXR1cm4gdHJhbnNmb3JtZXIoe1xuICAgIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgICB4ID0gcHJvamVjdCh4LCB5KTtcbiAgICAgIHRoaXMuc3RyZWFtLnBvaW50KHhbMF0sIHhbMV0pO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHJlc2FtcGxlKHByb2plY3QsIGRlbHRhMikge1xuXG4gIGZ1bmN0aW9uIHJlc2FtcGxlTGluZVRvKHgwLCB5MCwgbGFtYmRhMCwgYTAsIGIwLCBjMCwgeDEsIHkxLCBsYW1iZGExLCBhMSwgYjEsIGMxLCBkZXB0aCwgc3RyZWFtKSB7XG4gICAgdmFyIGR4ID0geDEgLSB4MCxcbiAgICAgICAgZHkgPSB5MSAtIHkwLFxuICAgICAgICBkMiA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgIGlmIChkMiA+IDQgKiBkZWx0YTIgJiYgZGVwdGgtLSkge1xuICAgICAgdmFyIGEgPSBhMCArIGExLFxuICAgICAgICAgIGIgPSBiMCArIGIxLFxuICAgICAgICAgIGMgPSBjMCArIGMxLFxuICAgICAgICAgIG0gPSBzcXJ0KGEgKiBhICsgYiAqIGIgKyBjICogYyksXG4gICAgICAgICAgcGhpMiA9IGFzaW4oYyAvPSBtKSxcbiAgICAgICAgICBsYW1iZGEyID0gYWJzKGFicyhjKSAtIDEpIDwgZXBzaWxvbiB8fCBhYnMobGFtYmRhMCAtIGxhbWJkYTEpIDwgZXBzaWxvbiA/IChsYW1iZGEwICsgbGFtYmRhMSkgLyAyIDogYXRhbjIoYiwgYSksXG4gICAgICAgICAgcCA9IHByb2plY3QobGFtYmRhMiwgcGhpMiksXG4gICAgICAgICAgeDIgPSBwWzBdLFxuICAgICAgICAgIHkyID0gcFsxXSxcbiAgICAgICAgICBkeDIgPSB4MiAtIHgwLFxuICAgICAgICAgIGR5MiA9IHkyIC0geTAsXG4gICAgICAgICAgZHogPSBkeSAqIGR4MiAtIGR4ICogZHkyO1xuICAgICAgaWYgKGR6ICogZHogLyBkMiA+IGRlbHRhMiAvLyBwZXJwZW5kaWN1bGFyIHByb2plY3RlZCBkaXN0YW5jZVxuICAgICAgICAgIHx8IGFicygoZHggKiBkeDIgKyBkeSAqIGR5MikgLyBkMiAtIDAuNSkgPiAwLjMgLy8gbWlkcG9pbnQgY2xvc2UgdG8gYW4gZW5kXG4gICAgICAgICAgfHwgYTAgKiBhMSArIGIwICogYjEgKyBjMCAqIGMxIDwgY29zTWluRGlzdGFuY2UpIHsgLy8gYW5ndWxhciBkaXN0YW5jZVxuICAgICAgICByZXNhbXBsZUxpbmVUbyh4MCwgeTAsIGxhbWJkYTAsIGEwLCBiMCwgYzAsIHgyLCB5MiwgbGFtYmRhMiwgYSAvPSBtLCBiIC89IG0sIGMsIGRlcHRoLCBzdHJlYW0pO1xuICAgICAgICBzdHJlYW0ucG9pbnQoeDIsIHkyKTtcbiAgICAgICAgcmVzYW1wbGVMaW5lVG8oeDIsIHkyLCBsYW1iZGEyLCBhLCBiLCBjLCB4MSwgeTEsIGxhbWJkYTEsIGExLCBiMSwgYzEsIGRlcHRoLCBzdHJlYW0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgdmFyIGxhbWJkYTAwLCB4MDAsIHkwMCwgYTAwLCBiMDAsIGMwMCwgLy8gZmlyc3QgcG9pbnRcbiAgICAgICAgbGFtYmRhMCwgeDAsIHkwLCBhMCwgYjAsIGMwOyAvLyBwcmV2aW91cyBwb2ludFxuXG4gICAgdmFyIHJlc2FtcGxlU3RyZWFtID0ge1xuICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgbGluZVN0YXJ0OiBsaW5lU3RhcnQsXG4gICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHsgc3RyZWFtLnBvbHlnb25TdGFydCgpOyByZXNhbXBsZVN0cmVhbS5saW5lU3RhcnQgPSByaW5nU3RhcnQ7IH0sXG4gICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHsgc3RyZWFtLnBvbHlnb25FbmQoKTsgcmVzYW1wbGVTdHJlYW0ubGluZVN0YXJ0ID0gbGluZVN0YXJ0OyB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHBvaW50KHgsIHkpIHtcbiAgICAgIHggPSBwcm9qZWN0KHgsIHkpO1xuICAgICAgc3RyZWFtLnBvaW50KHhbMF0sIHhbMV0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpbmVTdGFydCgpIHtcbiAgICAgIHgwID0gTmFOO1xuICAgICAgcmVzYW1wbGVTdHJlYW0ucG9pbnQgPSBsaW5lUG9pbnQ7XG4gICAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbGluZVBvaW50KGxhbWJkYSwgcGhpKSB7XG4gICAgICB2YXIgYyA9IGNhcnRlc2lhbihbbGFtYmRhLCBwaGldKSwgcCA9IHByb2plY3QobGFtYmRhLCBwaGkpO1xuICAgICAgcmVzYW1wbGVMaW5lVG8oeDAsIHkwLCBsYW1iZGEwLCBhMCwgYjAsIGMwLCB4MCA9IHBbMF0sIHkwID0gcFsxXSwgbGFtYmRhMCA9IGxhbWJkYSwgYTAgPSBjWzBdLCBiMCA9IGNbMV0sIGMwID0gY1syXSwgbWF4RGVwdGgsIHN0cmVhbSk7XG4gICAgICBzdHJlYW0ucG9pbnQoeDAsIHkwKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgcmVzYW1wbGVTdHJlYW0ucG9pbnQgPSBwb2ludDtcbiAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmluZ1N0YXJ0KCkge1xuICAgICAgbGluZVN0YXJ0KCk7XG4gICAgICByZXNhbXBsZVN0cmVhbS5wb2ludCA9IHJpbmdQb2ludDtcbiAgICAgIHJlc2FtcGxlU3RyZWFtLmxpbmVFbmQgPSByaW5nRW5kO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJpbmdQb2ludChsYW1iZGEsIHBoaSkge1xuICAgICAgbGluZVBvaW50KGxhbWJkYTAwID0gbGFtYmRhLCBwaGkpLCB4MDAgPSB4MCwgeTAwID0geTAsIGEwMCA9IGEwLCBiMDAgPSBiMCwgYzAwID0gYzA7XG4gICAgICByZXNhbXBsZVN0cmVhbS5wb2ludCA9IGxpbmVQb2ludDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByaW5nRW5kKCkge1xuICAgICAgcmVzYW1wbGVMaW5lVG8oeDAsIHkwLCBsYW1iZGEwLCBhMCwgYjAsIGMwLCB4MDAsIHkwMCwgbGFtYmRhMDAsIGEwMCwgYjAwLCBjMDAsIG1heERlcHRoLCBzdHJlYW0pO1xuICAgICAgcmVzYW1wbGVTdHJlYW0ubGluZUVuZCA9IGxpbmVFbmQ7XG4gICAgICBsaW5lRW5kKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc2FtcGxlU3RyZWFtO1xuICB9O1xufVxuIiwiaW1wb3J0IHthdGFuLCBjb3MsIHNpbn0gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCB7YXppbXV0aGFsSW52ZXJ0fSBmcm9tIFwiLi9hemltdXRoYWxcIjtcbmltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBzdGVyZW9ncmFwaGljUmF3KHgsIHkpIHtcbiAgdmFyIGN5ID0gY29zKHkpLCBrID0gMSArIGNvcyh4KSAqIGN5O1xuICByZXR1cm4gW2N5ICogc2luKHgpIC8gaywgc2luKHkpIC8ga107XG59XG5cbnN0ZXJlb2dyYXBoaWNSYXcuaW52ZXJ0ID0gYXppbXV0aGFsSW52ZXJ0KGZ1bmN0aW9uKHopIHtcbiAgcmV0dXJuIDIgKiBhdGFuKHopO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcHJvamVjdGlvbihzdGVyZW9ncmFwaGljUmF3KVxuICAgICAgLnNjYWxlKDI1MClcbiAgICAgIC5jbGlwQW5nbGUoMTQyKTtcbn1cbiIsImltcG9ydCB7YXRhbiwgZXhwLCBoYWxmUGksIGxvZywgdGFufSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHttZXJjYXRvclByb2plY3Rpb259IGZyb20gXCIuL21lcmNhdG9yXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc3ZlcnNlTWVyY2F0b3JSYXcobGFtYmRhLCBwaGkpIHtcbiAgcmV0dXJuIFtsb2codGFuKChoYWxmUGkgKyBwaGkpIC8gMikpLCAtbGFtYmRhXTtcbn1cblxudHJhbnN2ZXJzZU1lcmNhdG9yUmF3LmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgcmV0dXJuIFsteSwgMiAqIGF0YW4oZXhwKHgpKSAtIGhhbGZQaV07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIG0gPSBtZXJjYXRvclByb2plY3Rpb24odHJhbnN2ZXJzZU1lcmNhdG9yUmF3KSxcbiAgICAgIGNlbnRlciA9IG0uY2VudGVyLFxuICAgICAgcm90YXRlID0gbS5yb3RhdGU7XG5cbiAgbS5jZW50ZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBjZW50ZXIoWy1fWzFdLCBfWzBdXSkgOiAoXyA9IGNlbnRlcigpLCBbX1sxXSwgLV9bMF1dKTtcbiAgfTtcblxuICBtLnJvdGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHJvdGF0ZShbX1swXSwgX1sxXSwgXy5sZW5ndGggPiAyID8gX1syXSArIDkwIDogOTBdKSA6IChfID0gcm90YXRlKCksIFtfWzBdLCBfWzFdLCBfWzJdIC0gOTBdKTtcbiAgfTtcblxuICByZXR1cm4gcm90YXRlKFswLCAwLCA5MF0pXG4gICAgICAuc2NhbGUoMTU5LjE1NSk7XG59XG4iLCJpbXBvcnQgY29tcG9zZSBmcm9tIFwiLi9jb21wb3NlXCI7XG5pbXBvcnQge2FicywgYXNpbiwgYXRhbjIsIGNvcywgZGVncmVlcywgcGksIHJhZGlhbnMsIHNpbiwgdGF1fSBmcm9tIFwiLi9tYXRoXCI7XG5cbmZ1bmN0aW9uIHJvdGF0aW9uSWRlbnRpdHkobGFtYmRhLCBwaGkpIHtcbiAgcmV0dXJuIFthYnMobGFtYmRhKSA+IHBpID8gbGFtYmRhICsgTWF0aC5yb3VuZCgtbGFtYmRhIC8gdGF1KSAqIHRhdSA6IGxhbWJkYSwgcGhpXTtcbn1cblxucm90YXRpb25JZGVudGl0eS5pbnZlcnQgPSByb3RhdGlvbklkZW50aXR5O1xuXG5leHBvcnQgZnVuY3Rpb24gcm90YXRlUmFkaWFucyhkZWx0YUxhbWJkYSwgZGVsdGFQaGksIGRlbHRhR2FtbWEpIHtcbiAgcmV0dXJuIChkZWx0YUxhbWJkYSAlPSB0YXUpID8gKGRlbHRhUGhpIHx8IGRlbHRhR2FtbWEgPyBjb21wb3NlKHJvdGF0aW9uTGFtYmRhKGRlbHRhTGFtYmRhKSwgcm90YXRpb25QaGlHYW1tYShkZWx0YVBoaSwgZGVsdGFHYW1tYSkpXG4gICAgOiByb3RhdGlvbkxhbWJkYShkZWx0YUxhbWJkYSkpXG4gICAgOiAoZGVsdGFQaGkgfHwgZGVsdGFHYW1tYSA/IHJvdGF0aW9uUGhpR2FtbWEoZGVsdGFQaGksIGRlbHRhR2FtbWEpXG4gICAgOiByb3RhdGlvbklkZW50aXR5KTtcbn1cblxuZnVuY3Rpb24gZm9yd2FyZFJvdGF0aW9uTGFtYmRhKGRlbHRhTGFtYmRhKSB7XG4gIHJldHVybiBmdW5jdGlvbihsYW1iZGEsIHBoaSkge1xuICAgIHJldHVybiBsYW1iZGEgKz0gZGVsdGFMYW1iZGEsIFtsYW1iZGEgPiBwaSA/IGxhbWJkYSAtIHRhdSA6IGxhbWJkYSA8IC1waSA/IGxhbWJkYSArIHRhdSA6IGxhbWJkYSwgcGhpXTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gcm90YXRpb25MYW1iZGEoZGVsdGFMYW1iZGEpIHtcbiAgdmFyIHJvdGF0aW9uID0gZm9yd2FyZFJvdGF0aW9uTGFtYmRhKGRlbHRhTGFtYmRhKTtcbiAgcm90YXRpb24uaW52ZXJ0ID0gZm9yd2FyZFJvdGF0aW9uTGFtYmRhKC1kZWx0YUxhbWJkYSk7XG4gIHJldHVybiByb3RhdGlvbjtcbn1cblxuZnVuY3Rpb24gcm90YXRpb25QaGlHYW1tYShkZWx0YVBoaSwgZGVsdGFHYW1tYSkge1xuICB2YXIgY29zRGVsdGFQaGkgPSBjb3MoZGVsdGFQaGkpLFxuICAgICAgc2luRGVsdGFQaGkgPSBzaW4oZGVsdGFQaGkpLFxuICAgICAgY29zRGVsdGFHYW1tYSA9IGNvcyhkZWx0YUdhbW1hKSxcbiAgICAgIHNpbkRlbHRhR2FtbWEgPSBzaW4oZGVsdGFHYW1tYSk7XG5cbiAgZnVuY3Rpb24gcm90YXRpb24obGFtYmRhLCBwaGkpIHtcbiAgICB2YXIgY29zUGhpID0gY29zKHBoaSksXG4gICAgICAgIHggPSBjb3MobGFtYmRhKSAqIGNvc1BoaSxcbiAgICAgICAgeSA9IHNpbihsYW1iZGEpICogY29zUGhpLFxuICAgICAgICB6ID0gc2luKHBoaSksXG4gICAgICAgIGsgPSB6ICogY29zRGVsdGFQaGkgKyB4ICogc2luRGVsdGFQaGk7XG4gICAgcmV0dXJuIFtcbiAgICAgIGF0YW4yKHkgKiBjb3NEZWx0YUdhbW1hIC0gayAqIHNpbkRlbHRhR2FtbWEsIHggKiBjb3NEZWx0YVBoaSAtIHogKiBzaW5EZWx0YVBoaSksXG4gICAgICBhc2luKGsgKiBjb3NEZWx0YUdhbW1hICsgeSAqIHNpbkRlbHRhR2FtbWEpXG4gICAgXTtcbiAgfVxuXG4gIHJvdGF0aW9uLmludmVydCA9IGZ1bmN0aW9uKGxhbWJkYSwgcGhpKSB7XG4gICAgdmFyIGNvc1BoaSA9IGNvcyhwaGkpLFxuICAgICAgICB4ID0gY29zKGxhbWJkYSkgKiBjb3NQaGksXG4gICAgICAgIHkgPSBzaW4obGFtYmRhKSAqIGNvc1BoaSxcbiAgICAgICAgeiA9IHNpbihwaGkpLFxuICAgICAgICBrID0geiAqIGNvc0RlbHRhR2FtbWEgLSB5ICogc2luRGVsdGFHYW1tYTtcbiAgICByZXR1cm4gW1xuICAgICAgYXRhbjIoeSAqIGNvc0RlbHRhR2FtbWEgKyB6ICogc2luRGVsdGFHYW1tYSwgeCAqIGNvc0RlbHRhUGhpICsgayAqIHNpbkRlbHRhUGhpKSxcbiAgICAgIGFzaW4oayAqIGNvc0RlbHRhUGhpIC0geCAqIHNpbkRlbHRhUGhpKVxuICAgIF07XG4gIH07XG5cbiAgcmV0dXJuIHJvdGF0aW9uO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihyb3RhdGUpIHtcbiAgcm90YXRlID0gcm90YXRlUmFkaWFucyhyb3RhdGVbMF0gKiByYWRpYW5zLCByb3RhdGVbMV0gKiByYWRpYW5zLCByb3RhdGUubGVuZ3RoID4gMiA/IHJvdGF0ZVsyXSAqIHJhZGlhbnMgOiAwKTtcblxuICBmdW5jdGlvbiBmb3J3YXJkKGNvb3JkaW5hdGVzKSB7XG4gICAgY29vcmRpbmF0ZXMgPSByb3RhdGUoY29vcmRpbmF0ZXNbMF0gKiByYWRpYW5zLCBjb29yZGluYXRlc1sxXSAqIHJhZGlhbnMpO1xuICAgIHJldHVybiBjb29yZGluYXRlc1swXSAqPSBkZWdyZWVzLCBjb29yZGluYXRlc1sxXSAqPSBkZWdyZWVzLCBjb29yZGluYXRlcztcbiAgfVxuXG4gIGZvcndhcmQuaW52ZXJ0ID0gZnVuY3Rpb24oY29vcmRpbmF0ZXMpIHtcbiAgICBjb29yZGluYXRlcyA9IHJvdGF0ZS5pbnZlcnQoY29vcmRpbmF0ZXNbMF0gKiByYWRpYW5zLCBjb29yZGluYXRlc1sxXSAqIHJhZGlhbnMpO1xuICAgIHJldHVybiBjb29yZGluYXRlc1swXSAqPSBkZWdyZWVzLCBjb29yZGluYXRlc1sxXSAqPSBkZWdyZWVzLCBjb29yZGluYXRlcztcbiAgfTtcblxuICByZXR1cm4gZm9yd2FyZDtcbn1cbiIsImZ1bmN0aW9uIHN0cmVhbUdlb21ldHJ5KGdlb21ldHJ5LCBzdHJlYW0pIHtcbiAgaWYgKGdlb21ldHJ5ICYmIHN0cmVhbUdlb21ldHJ5VHlwZS5oYXNPd25Qcm9wZXJ0eShnZW9tZXRyeS50eXBlKSkge1xuICAgIHN0cmVhbUdlb21ldHJ5VHlwZVtnZW9tZXRyeS50eXBlXShnZW9tZXRyeSwgc3RyZWFtKTtcbiAgfVxufVxuXG52YXIgc3RyZWFtT2JqZWN0VHlwZSA9IHtcbiAgRmVhdHVyZTogZnVuY3Rpb24ob2JqZWN0LCBzdHJlYW0pIHtcbiAgICBzdHJlYW1HZW9tZXRyeShvYmplY3QuZ2VvbWV0cnksIHN0cmVhbSk7XG4gIH0sXG4gIEZlYXR1cmVDb2xsZWN0aW9uOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHZhciBmZWF0dXJlcyA9IG9iamVjdC5mZWF0dXJlcywgaSA9IC0xLCBuID0gZmVhdHVyZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBzdHJlYW1HZW9tZXRyeShmZWF0dXJlc1tpXS5nZW9tZXRyeSwgc3RyZWFtKTtcbiAgfVxufTtcblxudmFyIHN0cmVhbUdlb21ldHJ5VHlwZSA9IHtcbiAgU3BoZXJlOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHN0cmVhbS5zcGhlcmUoKTtcbiAgfSxcbiAgUG9pbnQ6IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gICAgb2JqZWN0ID0gb2JqZWN0LmNvb3JkaW5hdGVzO1xuICAgIHN0cmVhbS5wb2ludChvYmplY3RbMF0sIG9iamVjdFsxXSwgb2JqZWN0WzJdKTtcbiAgfSxcbiAgTXVsdGlQb2ludDogZnVuY3Rpb24ob2JqZWN0LCBzdHJlYW0pIHtcbiAgICB2YXIgY29vcmRpbmF0ZXMgPSBvYmplY3QuY29vcmRpbmF0ZXMsIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgb2JqZWN0ID0gY29vcmRpbmF0ZXNbaV0sIHN0cmVhbS5wb2ludChvYmplY3RbMF0sIG9iamVjdFsxXSwgb2JqZWN0WzJdKTtcbiAgfSxcbiAgTGluZVN0cmluZzogZnVuY3Rpb24ob2JqZWN0LCBzdHJlYW0pIHtcbiAgICBzdHJlYW1MaW5lKG9iamVjdC5jb29yZGluYXRlcywgc3RyZWFtLCAwKTtcbiAgfSxcbiAgTXVsdGlMaW5lU3RyaW5nOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHZhciBjb29yZGluYXRlcyA9IG9iamVjdC5jb29yZGluYXRlcywgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBzdHJlYW1MaW5lKGNvb3JkaW5hdGVzW2ldLCBzdHJlYW0sIDApO1xuICB9LFxuICBQb2x5Z29uOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHN0cmVhbVBvbHlnb24ob2JqZWN0LmNvb3JkaW5hdGVzLCBzdHJlYW0pO1xuICB9LFxuICBNdWx0aVBvbHlnb246IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gICAgdmFyIGNvb3JkaW5hdGVzID0gb2JqZWN0LmNvb3JkaW5hdGVzLCBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIHN0cmVhbVBvbHlnb24oY29vcmRpbmF0ZXNbaV0sIHN0cmVhbSk7XG4gIH0sXG4gIEdlb21ldHJ5Q29sbGVjdGlvbjogZnVuY3Rpb24ob2JqZWN0LCBzdHJlYW0pIHtcbiAgICB2YXIgZ2VvbWV0cmllcyA9IG9iamVjdC5nZW9tZXRyaWVzLCBpID0gLTEsIG4gPSBnZW9tZXRyaWVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgc3RyZWFtR2VvbWV0cnkoZ2VvbWV0cmllc1tpXSwgc3RyZWFtKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gc3RyZWFtTGluZShjb29yZGluYXRlcywgc3RyZWFtLCBjbG9zZWQpIHtcbiAgdmFyIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aCAtIGNsb3NlZCwgY29vcmRpbmF0ZTtcbiAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICB3aGlsZSAoKytpIDwgbikgY29vcmRpbmF0ZSA9IGNvb3JkaW5hdGVzW2ldLCBzdHJlYW0ucG9pbnQoY29vcmRpbmF0ZVswXSwgY29vcmRpbmF0ZVsxXSwgY29vcmRpbmF0ZVsyXSk7XG4gIHN0cmVhbS5saW5lRW5kKCk7XG59XG5cbmZ1bmN0aW9uIHN0cmVhbVBvbHlnb24oY29vcmRpbmF0ZXMsIHN0cmVhbSkge1xuICB2YXIgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICBzdHJlYW0ucG9seWdvblN0YXJ0KCk7XG4gIHdoaWxlICgrK2kgPCBuKSBzdHJlYW1MaW5lKGNvb3JkaW5hdGVzW2ldLCBzdHJlYW0sIDEpO1xuICBzdHJlYW0ucG9seWdvbkVuZCgpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICBpZiAob2JqZWN0ICYmIHN0cmVhbU9iamVjdFR5cGUuaGFzT3duUHJvcGVydHkob2JqZWN0LnR5cGUpKSB7XG4gICAgc3RyZWFtT2JqZWN0VHlwZVtvYmplY3QudHlwZV0ob2JqZWN0LCBzdHJlYW0pO1xuICB9IGVsc2Uge1xuICAgIHN0cmVhbUdlb21ldHJ5KG9iamVjdCwgc3RyZWFtKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWV0aG9kcykge1xuICByZXR1cm4ge1xuICAgIHN0cmVhbTogdHJhbnNmb3JtZXIobWV0aG9kcylcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybWVyKG1ldGhvZHMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgIHZhciBzID0gbmV3IFRyYW5zZm9ybVN0cmVhbTtcbiAgICBmb3IgKHZhciBrZXkgaW4gbWV0aG9kcykgc1trZXldID0gbWV0aG9kc1trZXldO1xuICAgIHMuc3RyZWFtID0gc3RyZWFtO1xuICAgIHJldHVybiBzO1xuICB9O1xufVxuXG5mdW5jdGlvbiBUcmFuc2Zvcm1TdHJlYW0oKSB7fVxuXG5UcmFuc2Zvcm1TdHJlYW0ucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogVHJhbnNmb3JtU3RyZWFtLFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkgeyB0aGlzLnN0cmVhbS5wb2ludCh4LCB5KTsgfSxcbiAgc3BoZXJlOiBmdW5jdGlvbigpIHsgdGhpcy5zdHJlYW0uc3BoZXJlKCk7IH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7IHRoaXMuc3RyZWFtLmxpbmVTdGFydCgpOyB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHsgdGhpcy5zdHJlYW0ubGluZUVuZCgpOyB9LFxuICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkgeyB0aGlzLnN0cmVhbS5wb2x5Z29uU3RhcnQoKTsgfSxcbiAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7IHRoaXMuc3RyZWFtLnBvbHlnb25FbmQoKTsgfVxufTtcbiIsImV4cG9ydCBmdW5jdGlvbiBvcHRpb25hbChmKSB7XG4gIHJldHVybiBmID09IG51bGwgPyBudWxsIDogcmVxdWlyZWQoZik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXF1aXJlZChmKSB7XG4gIGlmICh0eXBlb2YgZiAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gIHJldHVybiBmO1xufVxuIiwiZXhwb3J0IHZhciBzbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcblxuZXhwb3J0IGZ1bmN0aW9uIHNodWZmbGUoYXJyYXkpIHtcbiAgdmFyIG0gPSBhcnJheS5sZW5ndGgsXG4gICAgICB0LFxuICAgICAgaTtcblxuICB3aGlsZSAobSkge1xuICAgIGkgPSBNYXRoLnJhbmRvbSgpICogbS0tIHwgMDtcbiAgICB0ID0gYXJyYXlbbV07XG4gICAgYXJyYXlbbV0gPSBhcnJheVtpXTtcbiAgICBhcnJheVtpXSA9IHQ7XG4gIH1cblxuICByZXR1cm4gYXJyYXk7XG59XG4iLCJmdW5jdGlvbiBkZWZhdWx0U2VwYXJhdGlvbihhLCBiKSB7XG4gIHJldHVybiBhLnBhcmVudCA9PT0gYi5wYXJlbnQgPyAxIDogMjtcbn1cblxuZnVuY3Rpb24gbWVhblgoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIGNoaWxkcmVuLnJlZHVjZShtZWFuWFJlZHVjZSwgMCkgLyBjaGlsZHJlbi5sZW5ndGg7XG59XG5cbmZ1bmN0aW9uIG1lYW5YUmVkdWNlKHgsIGMpIHtcbiAgcmV0dXJuIHggKyBjLng7XG59XG5cbmZ1bmN0aW9uIG1heFkoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIDEgKyBjaGlsZHJlbi5yZWR1Y2UobWF4WVJlZHVjZSwgMCk7XG59XG5cbmZ1bmN0aW9uIG1heFlSZWR1Y2UoeSwgYykge1xuICByZXR1cm4gTWF0aC5tYXgoeSwgYy55KTtcbn1cblxuZnVuY3Rpb24gbGVhZkxlZnQobm9kZSkge1xuICB2YXIgY2hpbGRyZW47XG4gIHdoaWxlIChjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4pIG5vZGUgPSBjaGlsZHJlblswXTtcbiAgcmV0dXJuIG5vZGU7XG59XG5cbmZ1bmN0aW9uIGxlYWZSaWdodChub2RlKSB7XG4gIHZhciBjaGlsZHJlbjtcbiAgd2hpbGUgKGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbikgbm9kZSA9IGNoaWxkcmVuW2NoaWxkcmVuLmxlbmd0aCAtIDFdO1xuICByZXR1cm4gbm9kZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBzZXBhcmF0aW9uID0gZGVmYXVsdFNlcGFyYXRpb24sXG4gICAgICBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBub2RlU2l6ZSA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGNsdXN0ZXIocm9vdCkge1xuICAgIHZhciBwcmV2aW91c05vZGUsXG4gICAgICAgIHggPSAwO1xuXG4gICAgLy8gRmlyc3Qgd2FsaywgY29tcHV0aW5nIHRoZSBpbml0aWFsIHggJiB5IHZhbHVlcy5cbiAgICByb290LmVhY2hBZnRlcihmdW5jdGlvbihub2RlKSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgICAgaWYgKGNoaWxkcmVuKSB7XG4gICAgICAgIG5vZGUueCA9IG1lYW5YKGNoaWxkcmVuKTtcbiAgICAgICAgbm9kZS55ID0gbWF4WShjaGlsZHJlbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub2RlLnggPSBwcmV2aW91c05vZGUgPyB4ICs9IHNlcGFyYXRpb24obm9kZSwgcHJldmlvdXNOb2RlKSA6IDA7XG4gICAgICAgIG5vZGUueSA9IDA7XG4gICAgICAgIHByZXZpb3VzTm9kZSA9IG5vZGU7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB2YXIgbGVmdCA9IGxlYWZMZWZ0KHJvb3QpLFxuICAgICAgICByaWdodCA9IGxlYWZSaWdodChyb290KSxcbiAgICAgICAgeDAgPSBsZWZ0LnggLSBzZXBhcmF0aW9uKGxlZnQsIHJpZ2h0KSAvIDIsXG4gICAgICAgIHgxID0gcmlnaHQueCArIHNlcGFyYXRpb24ocmlnaHQsIGxlZnQpIC8gMjtcblxuICAgIC8vIFNlY29uZCB3YWxrLCBub3JtYWxpemluZyB4ICYgeSB0byB0aGUgZGVzaXJlZCBzaXplLlxuICAgIHJldHVybiByb290LmVhY2hBZnRlcihub2RlU2l6ZSA/IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIG5vZGUueCA9IChub2RlLnggLSByb290LngpICogZHg7XG4gICAgICBub2RlLnkgPSAocm9vdC55IC0gbm9kZS55KSAqIGR5O1xuICAgIH0gOiBmdW5jdGlvbihub2RlKSB7XG4gICAgICBub2RlLnggPSAobm9kZS54IC0geDApIC8gKHgxIC0geDApICogZHg7XG4gICAgICBub2RlLnkgPSAoMSAtIChyb290LnkgPyBub2RlLnkgLyByb290LnkgOiAxKSkgKiBkeTtcbiAgICB9KTtcbiAgfVxuXG4gIGNsdXN0ZXIuc2VwYXJhdGlvbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzZXBhcmF0aW9uID0geCwgY2x1c3RlcikgOiBzZXBhcmF0aW9uO1xuICB9O1xuXG4gIGNsdXN0ZXIuc2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChub2RlU2l6ZSA9IGZhbHNlLCBkeCA9ICt4WzBdLCBkeSA9ICt4WzFdLCBjbHVzdGVyKSA6IChub2RlU2l6ZSA/IG51bGwgOiBbZHgsIGR5XSk7XG4gIH07XG5cbiAgY2x1c3Rlci5ub2RlU2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChub2RlU2l6ZSA9IHRydWUsIGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIGNsdXN0ZXIpIDogKG5vZGVTaXplID8gW2R4LCBkeV0gOiBudWxsKTtcbiAgfTtcblxuICByZXR1cm4gY2x1c3Rlcjtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBjb25zdGFudFplcm8oKSB7XG4gIHJldHVybiAwO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgbm9kZSA9IHRoaXMsIG5vZGVzID0gW25vZGVdO1xuICB3aGlsZSAobm9kZSA9IG5vZGUucGFyZW50KSB7XG4gICAgbm9kZXMucHVzaChub2RlKTtcbiAgfVxuICByZXR1cm4gbm9kZXM7XG59XG4iLCJmdW5jdGlvbiBjb3VudChub2RlKSB7XG4gIHZhciBzdW0gPSAwLFxuICAgICAgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuLFxuICAgICAgaSA9IGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aDtcbiAgaWYgKCFpKSBzdW0gPSAxO1xuICBlbHNlIHdoaWxlICgtLWkgPj0gMCkgc3VtICs9IGNoaWxkcmVuW2ldLnZhbHVlO1xuICBub2RlLnZhbHVlID0gc3VtO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaEFmdGVyKGNvdW50KTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgbm9kZXMgPSBbXTtcbiAgdGhpcy5lYWNoKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICBub2Rlcy5wdXNoKG5vZGUpO1xuICB9KTtcbiAgcmV0dXJuIG5vZGVzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIG5vZGUgPSB0aGlzLCBjdXJyZW50LCBuZXh0ID0gW25vZGVdLCBjaGlsZHJlbiwgaSwgbjtcbiAgZG8ge1xuICAgIGN1cnJlbnQgPSBuZXh0LnJldmVyc2UoKSwgbmV4dCA9IFtdO1xuICAgIHdoaWxlIChub2RlID0gY3VycmVudC5wb3AoKSkge1xuICAgICAgY2FsbGJhY2sobm9kZSksIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbjtcbiAgICAgIGlmIChjaGlsZHJlbikgZm9yIChpID0gMCwgbiA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgICBuZXh0LnB1c2goY2hpbGRyZW5baV0pO1xuICAgICAgfVxuICAgIH1cbiAgfSB3aGlsZSAobmV4dC5sZW5ndGgpO1xuICByZXR1cm4gdGhpcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciBub2RlID0gdGhpcywgbm9kZXMgPSBbbm9kZV0sIG5leHQgPSBbXSwgY2hpbGRyZW4sIGksIG47XG4gIHdoaWxlIChub2RlID0gbm9kZXMucG9wKCkpIHtcbiAgICBuZXh0LnB1c2gobm9kZSksIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbjtcbiAgICBpZiAoY2hpbGRyZW4pIGZvciAoaSA9IDAsIG4gPSBjaGlsZHJlbi5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgIG5vZGVzLnB1c2goY2hpbGRyZW5baV0pO1xuICAgIH1cbiAgfVxuICB3aGlsZSAobm9kZSA9IG5leHQucG9wKCkpIHtcbiAgICBjYWxsYmFjayhub2RlKTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciBub2RlID0gdGhpcywgbm9kZXMgPSBbbm9kZV0sIGNoaWxkcmVuLCBpO1xuICB3aGlsZSAobm9kZSA9IG5vZGVzLnBvcCgpKSB7XG4gICAgY2FsbGJhY2sobm9kZSksIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbjtcbiAgICBpZiAoY2hpbGRyZW4pIGZvciAoaSA9IGNoaWxkcmVuLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICBub2Rlcy5wdXNoKGNoaWxkcmVuW2ldKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJpbXBvcnQgbm9kZV9jb3VudCBmcm9tIFwiLi9jb3VudFwiO1xuaW1wb3J0IG5vZGVfZWFjaCBmcm9tIFwiLi9lYWNoXCI7XG5pbXBvcnQgbm9kZV9lYWNoQmVmb3JlIGZyb20gXCIuL2VhY2hCZWZvcmVcIjtcbmltcG9ydCBub2RlX2VhY2hBZnRlciBmcm9tIFwiLi9lYWNoQWZ0ZXJcIjtcbmltcG9ydCBub2RlX3N1bSBmcm9tIFwiLi9zdW1cIjtcbmltcG9ydCBub2RlX3NvcnQgZnJvbSBcIi4vc29ydFwiO1xuaW1wb3J0IG5vZGVfcGF0aCBmcm9tIFwiLi9wYXRoXCI7XG5pbXBvcnQgbm9kZV9hbmNlc3RvcnMgZnJvbSBcIi4vYW5jZXN0b3JzXCI7XG5pbXBvcnQgbm9kZV9kZXNjZW5kYW50cyBmcm9tIFwiLi9kZXNjZW5kYW50c1wiO1xuaW1wb3J0IG5vZGVfbGVhdmVzIGZyb20gXCIuL2xlYXZlc1wiO1xuaW1wb3J0IG5vZGVfbGlua3MgZnJvbSBcIi4vbGlua3NcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaGllcmFyY2h5KGRhdGEsIGNoaWxkcmVuKSB7XG4gIHZhciByb290ID0gbmV3IE5vZGUoZGF0YSksXG4gICAgICB2YWx1ZWQgPSArZGF0YS52YWx1ZSAmJiAocm9vdC52YWx1ZSA9IGRhdGEudmFsdWUpLFxuICAgICAgbm9kZSxcbiAgICAgIG5vZGVzID0gW3Jvb3RdLFxuICAgICAgY2hpbGQsXG4gICAgICBjaGlsZHMsXG4gICAgICBpLFxuICAgICAgbjtcblxuICBpZiAoY2hpbGRyZW4gPT0gbnVsbCkgY2hpbGRyZW4gPSBkZWZhdWx0Q2hpbGRyZW47XG5cbiAgd2hpbGUgKG5vZGUgPSBub2Rlcy5wb3AoKSkge1xuICAgIGlmICh2YWx1ZWQpIG5vZGUudmFsdWUgPSArbm9kZS5kYXRhLnZhbHVlO1xuICAgIGlmICgoY2hpbGRzID0gY2hpbGRyZW4obm9kZS5kYXRhKSkgJiYgKG4gPSBjaGlsZHMubGVuZ3RoKSkge1xuICAgICAgbm9kZS5jaGlsZHJlbiA9IG5ldyBBcnJheShuKTtcbiAgICAgIGZvciAoaSA9IG4gLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICBub2Rlcy5wdXNoKGNoaWxkID0gbm9kZS5jaGlsZHJlbltpXSA9IG5ldyBOb2RlKGNoaWxkc1tpXSkpO1xuICAgICAgICBjaGlsZC5wYXJlbnQgPSBub2RlO1xuICAgICAgICBjaGlsZC5kZXB0aCA9IG5vZGUuZGVwdGggKyAxO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiByb290LmVhY2hCZWZvcmUoY29tcHV0ZUhlaWdodCk7XG59XG5cbmZ1bmN0aW9uIG5vZGVfY29weSgpIHtcbiAgcmV0dXJuIGhpZXJhcmNoeSh0aGlzKS5lYWNoQmVmb3JlKGNvcHlEYXRhKTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdENoaWxkcmVuKGQpIHtcbiAgcmV0dXJuIGQuY2hpbGRyZW47XG59XG5cbmZ1bmN0aW9uIGNvcHlEYXRhKG5vZGUpIHtcbiAgbm9kZS5kYXRhID0gbm9kZS5kYXRhLmRhdGE7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb21wdXRlSGVpZ2h0KG5vZGUpIHtcbiAgdmFyIGhlaWdodCA9IDA7XG4gIGRvIG5vZGUuaGVpZ2h0ID0gaGVpZ2h0O1xuICB3aGlsZSAoKG5vZGUgPSBub2RlLnBhcmVudCkgJiYgKG5vZGUuaGVpZ2h0IDwgKytoZWlnaHQpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIE5vZGUoZGF0YSkge1xuICB0aGlzLmRhdGEgPSBkYXRhO1xuICB0aGlzLmRlcHRoID1cbiAgdGhpcy5oZWlnaHQgPSAwO1xuICB0aGlzLnBhcmVudCA9IG51bGw7XG59XG5cbk5vZGUucHJvdG90eXBlID0gaGllcmFyY2h5LnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IE5vZGUsXG4gIGNvdW50OiBub2RlX2NvdW50LFxuICBlYWNoOiBub2RlX2VhY2gsXG4gIGVhY2hBZnRlcjogbm9kZV9lYWNoQWZ0ZXIsXG4gIGVhY2hCZWZvcmU6IG5vZGVfZWFjaEJlZm9yZSxcbiAgc3VtOiBub2RlX3N1bSxcbiAgc29ydDogbm9kZV9zb3J0LFxuICBwYXRoOiBub2RlX3BhdGgsXG4gIGFuY2VzdG9yczogbm9kZV9hbmNlc3RvcnMsXG4gIGRlc2NlbmRhbnRzOiBub2RlX2Rlc2NlbmRhbnRzLFxuICBsZWF2ZXM6IG5vZGVfbGVhdmVzLFxuICBsaW5rczogbm9kZV9saW5rcyxcbiAgY29weTogbm9kZV9jb3B5XG59O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBsZWF2ZXMgPSBbXTtcbiAgdGhpcy5lYWNoQmVmb3JlKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICBpZiAoIW5vZGUuY2hpbGRyZW4pIHtcbiAgICAgIGxlYXZlcy5wdXNoKG5vZGUpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBsZWF2ZXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHJvb3QgPSB0aGlzLCBsaW5rcyA9IFtdO1xuICByb290LmVhY2goZnVuY3Rpb24obm9kZSkge1xuICAgIGlmIChub2RlICE9PSByb290KSB7IC8vIERvbuKAmXQgaW5jbHVkZSB0aGUgcm9vdOKAmXMgcGFyZW50LCBpZiBhbnkuXG4gICAgICBsaW5rcy5wdXNoKHtzb3VyY2U6IG5vZGUucGFyZW50LCB0YXJnZXQ6IG5vZGV9KTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gbGlua3M7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihlbmQpIHtcbiAgdmFyIHN0YXJ0ID0gdGhpcyxcbiAgICAgIGFuY2VzdG9yID0gbGVhc3RDb21tb25BbmNlc3RvcihzdGFydCwgZW5kKSxcbiAgICAgIG5vZGVzID0gW3N0YXJ0XTtcbiAgd2hpbGUgKHN0YXJ0ICE9PSBhbmNlc3Rvcikge1xuICAgIHN0YXJ0ID0gc3RhcnQucGFyZW50O1xuICAgIG5vZGVzLnB1c2goc3RhcnQpO1xuICB9XG4gIHZhciBrID0gbm9kZXMubGVuZ3RoO1xuICB3aGlsZSAoZW5kICE9PSBhbmNlc3Rvcikge1xuICAgIG5vZGVzLnNwbGljZShrLCAwLCBlbmQpO1xuICAgIGVuZCA9IGVuZC5wYXJlbnQ7XG4gIH1cbiAgcmV0dXJuIG5vZGVzO1xufVxuXG5mdW5jdGlvbiBsZWFzdENvbW1vbkFuY2VzdG9yKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHJldHVybiBhO1xuICB2YXIgYU5vZGVzID0gYS5hbmNlc3RvcnMoKSxcbiAgICAgIGJOb2RlcyA9IGIuYW5jZXN0b3JzKCksXG4gICAgICBjID0gbnVsbDtcbiAgYSA9IGFOb2Rlcy5wb3AoKTtcbiAgYiA9IGJOb2Rlcy5wb3AoKTtcbiAgd2hpbGUgKGEgPT09IGIpIHtcbiAgICBjID0gYTtcbiAgICBhID0gYU5vZGVzLnBvcCgpO1xuICAgIGIgPSBiTm9kZXMucG9wKCk7XG4gIH1cbiAgcmV0dXJuIGM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb21wYXJlKSB7XG4gIHJldHVybiB0aGlzLmVhY2hCZWZvcmUoZnVuY3Rpb24obm9kZSkge1xuICAgIGlmIChub2RlLmNoaWxkcmVuKSB7XG4gICAgICBub2RlLmNoaWxkcmVuLnNvcnQoY29tcGFyZSk7XG4gICAgfVxuICB9KTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiB0aGlzLmVhY2hBZnRlcihmdW5jdGlvbihub2RlKSB7XG4gICAgdmFyIHN1bSA9ICt2YWx1ZShub2RlLmRhdGEpIHx8IDAsXG4gICAgICAgIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbixcbiAgICAgICAgaSA9IGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aDtcbiAgICB3aGlsZSAoLS1pID49IDApIHN1bSArPSBjaGlsZHJlbltpXS52YWx1ZTtcbiAgICBub2RlLnZhbHVlID0gc3VtO1xuICB9KTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBjbHVzdGVyfSBmcm9tIFwiLi9jbHVzdGVyXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaGllcmFyY2h5fSBmcm9tIFwiLi9oaWVyYXJjaHkvaW5kZXhcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwYWNrfSBmcm9tIFwiLi9wYWNrL2luZGV4XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGFja1NpYmxpbmdzfSBmcm9tIFwiLi9wYWNrL3NpYmxpbmdzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGFja0VuY2xvc2V9IGZyb20gXCIuL3BhY2svZW5jbG9zZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHBhcnRpdGlvbn0gZnJvbSBcIi4vcGFydGl0aW9uXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RyYXRpZnl9IGZyb20gXCIuL3N0cmF0aWZ5XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJlZX0gZnJvbSBcIi4vdHJlZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyZWVtYXB9IGZyb20gXCIuL3RyZWVtYXAvaW5kZXhcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0cmVlbWFwQmluYXJ5fSBmcm9tIFwiLi90cmVlbWFwL2JpbmFyeVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyZWVtYXBEaWNlfSBmcm9tIFwiLi90cmVlbWFwL2RpY2VcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0cmVlbWFwU2xpY2V9IGZyb20gXCIuL3RyZWVtYXAvc2xpY2VcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0cmVlbWFwU2xpY2VEaWNlfSBmcm9tIFwiLi90cmVlbWFwL3NsaWNlRGljZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyZWVtYXBTcXVhcmlmeX0gZnJvbSBcIi4vdHJlZW1hcC9zcXVhcmlmeVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyZWVtYXBSZXNxdWFyaWZ5fSBmcm9tIFwiLi90cmVlbWFwL3Jlc3F1YXJpZnlcIjtcbiIsImltcG9ydCB7c2h1ZmZsZSwgc2xpY2V9IGZyb20gXCIuLi9hcnJheVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjaXJjbGVzKSB7XG4gIHZhciBpID0gMCwgbiA9IChjaXJjbGVzID0gc2h1ZmZsZShzbGljZS5jYWxsKGNpcmNsZXMpKSkubGVuZ3RoLCBCID0gW10sIHAsIGU7XG5cbiAgd2hpbGUgKGkgPCBuKSB7XG4gICAgcCA9IGNpcmNsZXNbaV07XG4gICAgaWYgKGUgJiYgZW5jbG9zZXNXZWFrKGUsIHApKSArK2k7XG4gICAgZWxzZSBlID0gZW5jbG9zZUJhc2lzKEIgPSBleHRlbmRCYXNpcyhCLCBwKSksIGkgPSAwO1xuICB9XG5cbiAgcmV0dXJuIGU7XG59XG5cbmZ1bmN0aW9uIGV4dGVuZEJhc2lzKEIsIHApIHtcbiAgdmFyIGksIGo7XG5cbiAgaWYgKGVuY2xvc2VzV2Vha0FsbChwLCBCKSkgcmV0dXJuIFtwXTtcblxuICAvLyBJZiB3ZSBnZXQgaGVyZSB0aGVuIEIgbXVzdCBoYXZlIGF0IGxlYXN0IG9uZSBlbGVtZW50LlxuICBmb3IgKGkgPSAwOyBpIDwgQi5sZW5ndGg7ICsraSkge1xuICAgIGlmIChlbmNsb3Nlc05vdChwLCBCW2ldKVxuICAgICAgICAmJiBlbmNsb3Nlc1dlYWtBbGwoZW5jbG9zZUJhc2lzMihCW2ldLCBwKSwgQikpIHtcbiAgICAgIHJldHVybiBbQltpXSwgcF07XG4gICAgfVxuICB9XG5cbiAgLy8gSWYgd2UgZ2V0IGhlcmUgdGhlbiBCIG11c3QgaGF2ZSBhdCBsZWFzdCB0d28gZWxlbWVudHMuXG4gIGZvciAoaSA9IDA7IGkgPCBCLmxlbmd0aCAtIDE7ICsraSkge1xuICAgIGZvciAoaiA9IGkgKyAxOyBqIDwgQi5sZW5ndGg7ICsraikge1xuICAgICAgaWYgKGVuY2xvc2VzTm90KGVuY2xvc2VCYXNpczIoQltpXSwgQltqXSksIHApXG4gICAgICAgICAgJiYgZW5jbG9zZXNOb3QoZW5jbG9zZUJhc2lzMihCW2ldLCBwKSwgQltqXSlcbiAgICAgICAgICAmJiBlbmNsb3Nlc05vdChlbmNsb3NlQmFzaXMyKEJbal0sIHApLCBCW2ldKVxuICAgICAgICAgICYmIGVuY2xvc2VzV2Vha0FsbChlbmNsb3NlQmFzaXMzKEJbaV0sIEJbal0sIHApLCBCKSkge1xuICAgICAgICByZXR1cm4gW0JbaV0sIEJbal0sIHBdO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIElmIHdlIGdldCBoZXJlIHRoZW4gc29tZXRoaW5nIGlzIHZlcnkgd3JvbmcuXG4gIHRocm93IG5ldyBFcnJvcjtcbn1cblxuZnVuY3Rpb24gZW5jbG9zZXNOb3QoYSwgYikge1xuICB2YXIgZHIgPSBhLnIgLSBiLnIsIGR4ID0gYi54IC0gYS54LCBkeSA9IGIueSAtIGEueTtcbiAgcmV0dXJuIGRyIDwgMCB8fCBkciAqIGRyIDwgZHggKiBkeCArIGR5ICogZHk7XG59XG5cbmZ1bmN0aW9uIGVuY2xvc2VzV2VhayhhLCBiKSB7XG4gIHZhciBkciA9IGEuciAtIGIuciArIDFlLTYsIGR4ID0gYi54IC0gYS54LCBkeSA9IGIueSAtIGEueTtcbiAgcmV0dXJuIGRyID4gMCAmJiBkciAqIGRyID4gZHggKiBkeCArIGR5ICogZHk7XG59XG5cbmZ1bmN0aW9uIGVuY2xvc2VzV2Vha0FsbChhLCBCKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgQi5sZW5ndGg7ICsraSkge1xuICAgIGlmICghZW5jbG9zZXNXZWFrKGEsIEJbaV0pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBlbmNsb3NlQmFzaXMoQikge1xuICBzd2l0Y2ggKEIubGVuZ3RoKSB7XG4gICAgY2FzZSAxOiByZXR1cm4gZW5jbG9zZUJhc2lzMShCWzBdKTtcbiAgICBjYXNlIDI6IHJldHVybiBlbmNsb3NlQmFzaXMyKEJbMF0sIEJbMV0pO1xuICAgIGNhc2UgMzogcmV0dXJuIGVuY2xvc2VCYXNpczMoQlswXSwgQlsxXSwgQlsyXSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZW5jbG9zZUJhc2lzMShhKSB7XG4gIHJldHVybiB7XG4gICAgeDogYS54LFxuICAgIHk6IGEueSxcbiAgICByOiBhLnJcbiAgfTtcbn1cblxuZnVuY3Rpb24gZW5jbG9zZUJhc2lzMihhLCBiKSB7XG4gIHZhciB4MSA9IGEueCwgeTEgPSBhLnksIHIxID0gYS5yLFxuICAgICAgeDIgPSBiLngsIHkyID0gYi55LCByMiA9IGIucixcbiAgICAgIHgyMSA9IHgyIC0geDEsIHkyMSA9IHkyIC0geTEsIHIyMSA9IHIyIC0gcjEsXG4gICAgICBsID0gTWF0aC5zcXJ0KHgyMSAqIHgyMSArIHkyMSAqIHkyMSk7XG4gIHJldHVybiB7XG4gICAgeDogKHgxICsgeDIgKyB4MjEgLyBsICogcjIxKSAvIDIsXG4gICAgeTogKHkxICsgeTIgKyB5MjEgLyBsICogcjIxKSAvIDIsXG4gICAgcjogKGwgKyByMSArIHIyKSAvIDJcbiAgfTtcbn1cblxuZnVuY3Rpb24gZW5jbG9zZUJhc2lzMyhhLCBiLCBjKSB7XG4gIHZhciB4MSA9IGEueCwgeTEgPSBhLnksIHIxID0gYS5yLFxuICAgICAgeDIgPSBiLngsIHkyID0gYi55LCByMiA9IGIucixcbiAgICAgIHgzID0gYy54LCB5MyA9IGMueSwgcjMgPSBjLnIsXG4gICAgICBhMiA9IHgxIC0geDIsXG4gICAgICBhMyA9IHgxIC0geDMsXG4gICAgICBiMiA9IHkxIC0geTIsXG4gICAgICBiMyA9IHkxIC0geTMsXG4gICAgICBjMiA9IHIyIC0gcjEsXG4gICAgICBjMyA9IHIzIC0gcjEsXG4gICAgICBkMSA9IHgxICogeDEgKyB5MSAqIHkxIC0gcjEgKiByMSxcbiAgICAgIGQyID0gZDEgLSB4MiAqIHgyIC0geTIgKiB5MiArIHIyICogcjIsXG4gICAgICBkMyA9IGQxIC0geDMgKiB4MyAtIHkzICogeTMgKyByMyAqIHIzLFxuICAgICAgYWIgPSBhMyAqIGIyIC0gYTIgKiBiMyxcbiAgICAgIHhhID0gKGIyICogZDMgLSBiMyAqIGQyKSAvIChhYiAqIDIpIC0geDEsXG4gICAgICB4YiA9IChiMyAqIGMyIC0gYjIgKiBjMykgLyBhYixcbiAgICAgIHlhID0gKGEzICogZDIgLSBhMiAqIGQzKSAvIChhYiAqIDIpIC0geTEsXG4gICAgICB5YiA9IChhMiAqIGMzIC0gYTMgKiBjMikgLyBhYixcbiAgICAgIEEgPSB4YiAqIHhiICsgeWIgKiB5YiAtIDEsXG4gICAgICBCID0gMiAqIChyMSArIHhhICogeGIgKyB5YSAqIHliKSxcbiAgICAgIEMgPSB4YSAqIHhhICsgeWEgKiB5YSAtIHIxICogcjEsXG4gICAgICByID0gLShBID8gKEIgKyBNYXRoLnNxcnQoQiAqIEIgLSA0ICogQSAqIEMpKSAvICgyICogQSkgOiBDIC8gQik7XG4gIHJldHVybiB7XG4gICAgeDogeDEgKyB4YSArIHhiICogcixcbiAgICB5OiB5MSArIHlhICsgeWIgKiByLFxuICAgIHI6IHJcbiAgfTtcbn1cbiIsImltcG9ydCB7cGFja0VuY2xvc2V9IGZyb20gXCIuL3NpYmxpbmdzXCI7XG5pbXBvcnQge29wdGlvbmFsfSBmcm9tIFwiLi4vYWNjZXNzb3JzXCI7XG5pbXBvcnQgY29uc3RhbnQsIHtjb25zdGFudFplcm99IGZyb20gXCIuLi9jb25zdGFudFwiO1xuXG5mdW5jdGlvbiBkZWZhdWx0UmFkaXVzKGQpIHtcbiAgcmV0dXJuIE1hdGguc3FydChkLnZhbHVlKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciByYWRpdXMgPSBudWxsLFxuICAgICAgZHggPSAxLFxuICAgICAgZHkgPSAxLFxuICAgICAgcGFkZGluZyA9IGNvbnN0YW50WmVybztcblxuICBmdW5jdGlvbiBwYWNrKHJvb3QpIHtcbiAgICByb290LnggPSBkeCAvIDIsIHJvb3QueSA9IGR5IC8gMjtcbiAgICBpZiAocmFkaXVzKSB7XG4gICAgICByb290LmVhY2hCZWZvcmUocmFkaXVzTGVhZihyYWRpdXMpKVxuICAgICAgICAgIC5lYWNoQWZ0ZXIocGFja0NoaWxkcmVuKHBhZGRpbmcsIDAuNSkpXG4gICAgICAgICAgLmVhY2hCZWZvcmUodHJhbnNsYXRlQ2hpbGQoMSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICByb290LmVhY2hCZWZvcmUocmFkaXVzTGVhZihkZWZhdWx0UmFkaXVzKSlcbiAgICAgICAgICAuZWFjaEFmdGVyKHBhY2tDaGlsZHJlbihjb25zdGFudFplcm8sIDEpKVxuICAgICAgICAgIC5lYWNoQWZ0ZXIocGFja0NoaWxkcmVuKHBhZGRpbmcsIHJvb3QuciAvIE1hdGgubWluKGR4LCBkeSkpKVxuICAgICAgICAgIC5lYWNoQmVmb3JlKHRyYW5zbGF0ZUNoaWxkKE1hdGgubWluKGR4LCBkeSkgLyAoMiAqIHJvb3QucikpKTtcbiAgICB9XG4gICAgcmV0dXJuIHJvb3Q7XG4gIH1cblxuICBwYWNrLnJhZGl1cyA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYWRpdXMgPSBvcHRpb25hbCh4KSwgcGFjaykgOiByYWRpdXM7XG4gIH07XG5cbiAgcGFjay5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIHBhY2spIDogW2R4LCBkeV07XG4gIH07XG5cbiAgcGFjay5wYWRkaW5nID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmcgPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6IGNvbnN0YW50KCt4KSwgcGFjaykgOiBwYWRkaW5nO1xuICB9O1xuXG4gIHJldHVybiBwYWNrO1xufVxuXG5mdW5jdGlvbiByYWRpdXNMZWFmKHJhZGl1cykge1xuICByZXR1cm4gZnVuY3Rpb24obm9kZSkge1xuICAgIGlmICghbm9kZS5jaGlsZHJlbikge1xuICAgICAgbm9kZS5yID0gTWF0aC5tYXgoMCwgK3JhZGl1cyhub2RlKSB8fCAwKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIHBhY2tDaGlsZHJlbihwYWRkaW5nLCBrKSB7XG4gIHJldHVybiBmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbikge1xuICAgICAgdmFyIGNoaWxkcmVuLFxuICAgICAgICAgIGksXG4gICAgICAgICAgbiA9IGNoaWxkcmVuLmxlbmd0aCxcbiAgICAgICAgICByID0gcGFkZGluZyhub2RlKSAqIGsgfHwgMCxcbiAgICAgICAgICBlO1xuXG4gICAgICBpZiAocikgZm9yIChpID0gMDsgaSA8IG47ICsraSkgY2hpbGRyZW5baV0uciArPSByO1xuICAgICAgZSA9IHBhY2tFbmNsb3NlKGNoaWxkcmVuKTtcbiAgICAgIGlmIChyKSBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBjaGlsZHJlbltpXS5yIC09IHI7XG4gICAgICBub2RlLnIgPSBlICsgcjtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZUNoaWxkKGspIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICB2YXIgcGFyZW50ID0gbm9kZS5wYXJlbnQ7XG4gICAgbm9kZS5yICo9IGs7XG4gICAgaWYgKHBhcmVudCkge1xuICAgICAgbm9kZS54ID0gcGFyZW50LnggKyBrICogbm9kZS54O1xuICAgICAgbm9kZS55ID0gcGFyZW50LnkgKyBrICogbm9kZS55O1xuICAgIH1cbiAgfTtcbn1cbiIsImltcG9ydCBlbmNsb3NlIGZyb20gXCIuL2VuY2xvc2VcIjtcblxuZnVuY3Rpb24gcGxhY2UoYiwgYSwgYykge1xuICB2YXIgZHggPSBiLnggLSBhLngsIHgsIGEyLFxuICAgICAgZHkgPSBiLnkgLSBhLnksIHksIGIyLFxuICAgICAgZDIgPSBkeCAqIGR4ICsgZHkgKiBkeTtcbiAgaWYgKGQyKSB7XG4gICAgYTIgPSBhLnIgKyBjLnIsIGEyICo9IGEyO1xuICAgIGIyID0gYi5yICsgYy5yLCBiMiAqPSBiMjtcbiAgICBpZiAoYTIgPiBiMikge1xuICAgICAgeCA9IChkMiArIGIyIC0gYTIpIC8gKDIgKiBkMik7XG4gICAgICB5ID0gTWF0aC5zcXJ0KE1hdGgubWF4KDAsIGIyIC8gZDIgLSB4ICogeCkpO1xuICAgICAgYy54ID0gYi54IC0geCAqIGR4IC0geSAqIGR5O1xuICAgICAgYy55ID0gYi55IC0geCAqIGR5ICsgeSAqIGR4O1xuICAgIH0gZWxzZSB7XG4gICAgICB4ID0gKGQyICsgYTIgLSBiMikgLyAoMiAqIGQyKTtcbiAgICAgIHkgPSBNYXRoLnNxcnQoTWF0aC5tYXgoMCwgYTIgLyBkMiAtIHggKiB4KSk7XG4gICAgICBjLnggPSBhLnggKyB4ICogZHggLSB5ICogZHk7XG4gICAgICBjLnkgPSBhLnkgKyB4ICogZHkgKyB5ICogZHg7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGMueCA9IGEueCArIGMucjtcbiAgICBjLnkgPSBhLnk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaW50ZXJzZWN0cyhhLCBiKSB7XG4gIHZhciBkciA9IGEuciArIGIuciAtIDFlLTYsIGR4ID0gYi54IC0gYS54LCBkeSA9IGIueSAtIGEueTtcbiAgcmV0dXJuIGRyID4gMCAmJiBkciAqIGRyID4gZHggKiBkeCArIGR5ICogZHk7XG59XG5cbmZ1bmN0aW9uIHNjb3JlKG5vZGUpIHtcbiAgdmFyIGEgPSBub2RlLl8sXG4gICAgICBiID0gbm9kZS5uZXh0Ll8sXG4gICAgICBhYiA9IGEuciArIGIucixcbiAgICAgIGR4ID0gKGEueCAqIGIuciArIGIueCAqIGEucikgLyBhYixcbiAgICAgIGR5ID0gKGEueSAqIGIuciArIGIueSAqIGEucikgLyBhYjtcbiAgcmV0dXJuIGR4ICogZHggKyBkeSAqIGR5O1xufVxuXG5mdW5jdGlvbiBOb2RlKGNpcmNsZSkge1xuICB0aGlzLl8gPSBjaXJjbGU7XG4gIHRoaXMubmV4dCA9IG51bGw7XG4gIHRoaXMucHJldmlvdXMgPSBudWxsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFja0VuY2xvc2UoY2lyY2xlcykge1xuICBpZiAoIShuID0gY2lyY2xlcy5sZW5ndGgpKSByZXR1cm4gMDtcblxuICB2YXIgYSwgYiwgYywgbiwgYWEsIGNhLCBpLCBqLCBrLCBzaiwgc2s7XG5cbiAgLy8gUGxhY2UgdGhlIGZpcnN0IGNpcmNsZS5cbiAgYSA9IGNpcmNsZXNbMF0sIGEueCA9IDAsIGEueSA9IDA7XG4gIGlmICghKG4gPiAxKSkgcmV0dXJuIGEucjtcblxuICAvLyBQbGFjZSB0aGUgc2Vjb25kIGNpcmNsZS5cbiAgYiA9IGNpcmNsZXNbMV0sIGEueCA9IC1iLnIsIGIueCA9IGEuciwgYi55ID0gMDtcbiAgaWYgKCEobiA+IDIpKSByZXR1cm4gYS5yICsgYi5yO1xuXG4gIC8vIFBsYWNlIHRoZSB0aGlyZCBjaXJjbGUuXG4gIHBsYWNlKGIsIGEsIGMgPSBjaXJjbGVzWzJdKTtcblxuICAvLyBJbml0aWFsaXplIHRoZSBmcm9udC1jaGFpbiB1c2luZyB0aGUgZmlyc3QgdGhyZWUgY2lyY2xlcyBhLCBiIGFuZCBjLlxuICBhID0gbmV3IE5vZGUoYSksIGIgPSBuZXcgTm9kZShiKSwgYyA9IG5ldyBOb2RlKGMpO1xuICBhLm5leHQgPSBjLnByZXZpb3VzID0gYjtcbiAgYi5uZXh0ID0gYS5wcmV2aW91cyA9IGM7XG4gIGMubmV4dCA9IGIucHJldmlvdXMgPSBhO1xuXG4gIC8vIEF0dGVtcHQgdG8gcGxhY2UgZWFjaCByZW1haW5pbmcgY2lyY2xl4oCmXG4gIHBhY2s6IGZvciAoaSA9IDM7IGkgPCBuOyArK2kpIHtcbiAgICBwbGFjZShhLl8sIGIuXywgYyA9IGNpcmNsZXNbaV0pLCBjID0gbmV3IE5vZGUoYyk7XG5cbiAgICAvLyBGaW5kIHRoZSBjbG9zZXN0IGludGVyc2VjdGluZyBjaXJjbGUgb24gdGhlIGZyb250LWNoYWluLCBpZiBhbnkuXG4gICAgLy8g4oCcQ2xvc2VuZXNz4oCdIGlzIGRldGVybWluZWQgYnkgbGluZWFyIGRpc3RhbmNlIGFsb25nIHRoZSBmcm9udC1jaGFpbi5cbiAgICAvLyDigJxBaGVhZOKAnSBvciDigJxiZWhpbmTigJ0gaXMgbGlrZXdpc2UgZGV0ZXJtaW5lZCBieSBsaW5lYXIgZGlzdGFuY2UuXG4gICAgaiA9IGIubmV4dCwgayA9IGEucHJldmlvdXMsIHNqID0gYi5fLnIsIHNrID0gYS5fLnI7XG4gICAgZG8ge1xuICAgICAgaWYgKHNqIDw9IHNrKSB7XG4gICAgICAgIGlmIChpbnRlcnNlY3RzKGouXywgYy5fKSkge1xuICAgICAgICAgIGIgPSBqLCBhLm5leHQgPSBiLCBiLnByZXZpb3VzID0gYSwgLS1pO1xuICAgICAgICAgIGNvbnRpbnVlIHBhY2s7XG4gICAgICAgIH1cbiAgICAgICAgc2ogKz0gai5fLnIsIGogPSBqLm5leHQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoaW50ZXJzZWN0cyhrLl8sIGMuXykpIHtcbiAgICAgICAgICBhID0gaywgYS5uZXh0ID0gYiwgYi5wcmV2aW91cyA9IGEsIC0taTtcbiAgICAgICAgICBjb250aW51ZSBwYWNrO1xuICAgICAgICB9XG4gICAgICAgIHNrICs9IGsuXy5yLCBrID0gay5wcmV2aW91cztcbiAgICAgIH1cbiAgICB9IHdoaWxlIChqICE9PSBrLm5leHQpO1xuXG4gICAgLy8gU3VjY2VzcyEgSW5zZXJ0IHRoZSBuZXcgY2lyY2xlIGMgYmV0d2VlbiBhIGFuZCBiLlxuICAgIGMucHJldmlvdXMgPSBhLCBjLm5leHQgPSBiLCBhLm5leHQgPSBiLnByZXZpb3VzID0gYiA9IGM7XG5cbiAgICAvLyBDb21wdXRlIHRoZSBuZXcgY2xvc2VzdCBjaXJjbGUgcGFpciB0byB0aGUgY2VudHJvaWQuXG4gICAgYWEgPSBzY29yZShhKTtcbiAgICB3aGlsZSAoKGMgPSBjLm5leHQpICE9PSBiKSB7XG4gICAgICBpZiAoKGNhID0gc2NvcmUoYykpIDwgYWEpIHtcbiAgICAgICAgYSA9IGMsIGFhID0gY2E7XG4gICAgICB9XG4gICAgfVxuICAgIGIgPSBhLm5leHQ7XG4gIH1cblxuICAvLyBDb21wdXRlIHRoZSBlbmNsb3NpbmcgY2lyY2xlIG9mIHRoZSBmcm9udCBjaGFpbi5cbiAgYSA9IFtiLl9dLCBjID0gYjsgd2hpbGUgKChjID0gYy5uZXh0KSAhPT0gYikgYS5wdXNoKGMuXyk7IGMgPSBlbmNsb3NlKGEpO1xuXG4gIC8vIFRyYW5zbGF0ZSB0aGUgY2lyY2xlcyB0byBwdXQgdGhlIGVuY2xvc2luZyBjaXJjbGUgYXJvdW5kIHRoZSBvcmlnaW4uXG4gIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIGEgPSBjaXJjbGVzW2ldLCBhLnggLT0gYy54LCBhLnkgLT0gYy55O1xuXG4gIHJldHVybiBjLnI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNpcmNsZXMpIHtcbiAgcGFja0VuY2xvc2UoY2lyY2xlcyk7XG4gIHJldHVybiBjaXJjbGVzO1xufVxuIiwiaW1wb3J0IHJvdW5kTm9kZSBmcm9tIFwiLi90cmVlbWFwL3JvdW5kXCI7XG5pbXBvcnQgdHJlZW1hcERpY2UgZnJvbSBcIi4vdHJlZW1hcC9kaWNlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgZHggPSAxLFxuICAgICAgZHkgPSAxLFxuICAgICAgcGFkZGluZyA9IDAsXG4gICAgICByb3VuZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIHBhcnRpdGlvbihyb290KSB7XG4gICAgdmFyIG4gPSByb290LmhlaWdodCArIDE7XG4gICAgcm9vdC54MCA9XG4gICAgcm9vdC55MCA9IHBhZGRpbmc7XG4gICAgcm9vdC54MSA9IGR4O1xuICAgIHJvb3QueTEgPSBkeSAvIG47XG4gICAgcm9vdC5lYWNoQmVmb3JlKHBvc2l0aW9uTm9kZShkeSwgbikpO1xuICAgIGlmIChyb3VuZCkgcm9vdC5lYWNoQmVmb3JlKHJvdW5kTm9kZSk7XG4gICAgcmV0dXJuIHJvb3Q7XG4gIH1cblxuICBmdW5jdGlvbiBwb3NpdGlvbk5vZGUoZHksIG4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24obm9kZSkge1xuICAgICAgaWYgKG5vZGUuY2hpbGRyZW4pIHtcbiAgICAgICAgdHJlZW1hcERpY2Uobm9kZSwgbm9kZS54MCwgZHkgKiAobm9kZS5kZXB0aCArIDEpIC8gbiwgbm9kZS54MSwgZHkgKiAobm9kZS5kZXB0aCArIDIpIC8gbik7XG4gICAgICB9XG4gICAgICB2YXIgeDAgPSBub2RlLngwLFxuICAgICAgICAgIHkwID0gbm9kZS55MCxcbiAgICAgICAgICB4MSA9IG5vZGUueDEgLSBwYWRkaW5nLFxuICAgICAgICAgIHkxID0gbm9kZS55MSAtIHBhZGRpbmc7XG4gICAgICBpZiAoeDEgPCB4MCkgeDAgPSB4MSA9ICh4MCArIHgxKSAvIDI7XG4gICAgICBpZiAoeTEgPCB5MCkgeTAgPSB5MSA9ICh5MCArIHkxKSAvIDI7XG4gICAgICBub2RlLngwID0geDA7XG4gICAgICBub2RlLnkwID0geTA7XG4gICAgICBub2RlLngxID0geDE7XG4gICAgICBub2RlLnkxID0geTE7XG4gICAgfTtcbiAgfVxuXG4gIHBhcnRpdGlvbi5yb3VuZCA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyb3VuZCA9ICEheCwgcGFydGl0aW9uKSA6IHJvdW5kO1xuICB9O1xuXG4gIHBhcnRpdGlvbi5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIHBhcnRpdGlvbikgOiBbZHgsIGR5XTtcbiAgfTtcblxuICBwYXJ0aXRpb24ucGFkZGluZyA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nID0gK3gsIHBhcnRpdGlvbikgOiBwYWRkaW5nO1xuICB9O1xuXG4gIHJldHVybiBwYXJ0aXRpb247XG59XG4iLCJpbXBvcnQge3JlcXVpcmVkfSBmcm9tIFwiLi9hY2Nlc3NvcnNcIjtcbmltcG9ydCB7Tm9kZSwgY29tcHV0ZUhlaWdodH0gZnJvbSBcIi4vaGllcmFyY2h5L2luZGV4XCI7XG5cbnZhciBrZXlQcmVmaXggPSBcIiRcIiwgLy8gUHJvdGVjdCBhZ2FpbnN0IGtleXMgbGlrZSDigJxfX3Byb3RvX1/igJ0uXG4gICAgcHJlcm9vdCA9IHtkZXB0aDogLTF9LFxuICAgIGFtYmlndW91cyA9IHt9O1xuXG5mdW5jdGlvbiBkZWZhdWx0SWQoZCkge1xuICByZXR1cm4gZC5pZDtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFBhcmVudElkKGQpIHtcbiAgcmV0dXJuIGQucGFyZW50SWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgaWQgPSBkZWZhdWx0SWQsXG4gICAgICBwYXJlbnRJZCA9IGRlZmF1bHRQYXJlbnRJZDtcblxuICBmdW5jdGlvbiBzdHJhdGlmeShkYXRhKSB7XG4gICAgdmFyIGQsXG4gICAgICAgIGksXG4gICAgICAgIG4gPSBkYXRhLmxlbmd0aCxcbiAgICAgICAgcm9vdCxcbiAgICAgICAgcGFyZW50LFxuICAgICAgICBub2RlLFxuICAgICAgICBub2RlcyA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgbm9kZUlkLFxuICAgICAgICBub2RlS2V5LFxuICAgICAgICBub2RlQnlLZXkgPSB7fTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGQgPSBkYXRhW2ldLCBub2RlID0gbm9kZXNbaV0gPSBuZXcgTm9kZShkKTtcbiAgICAgIGlmICgobm9kZUlkID0gaWQoZCwgaSwgZGF0YSkpICE9IG51bGwgJiYgKG5vZGVJZCArPSBcIlwiKSkge1xuICAgICAgICBub2RlS2V5ID0ga2V5UHJlZml4ICsgKG5vZGUuaWQgPSBub2RlSWQpO1xuICAgICAgICBub2RlQnlLZXlbbm9kZUtleV0gPSBub2RlS2V5IGluIG5vZGVCeUtleSA/IGFtYmlndW91cyA6IG5vZGU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlSWQgPSBwYXJlbnRJZChkYXRhW2ldLCBpLCBkYXRhKTtcbiAgICAgIGlmIChub2RlSWQgPT0gbnVsbCB8fCAhKG5vZGVJZCArPSBcIlwiKSkge1xuICAgICAgICBpZiAocm9vdCkgdGhyb3cgbmV3IEVycm9yKFwibXVsdGlwbGUgcm9vdHNcIik7XG4gICAgICAgIHJvb3QgPSBub2RlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyZW50ID0gbm9kZUJ5S2V5W2tleVByZWZpeCArIG5vZGVJZF07XG4gICAgICAgIGlmICghcGFyZW50KSB0aHJvdyBuZXcgRXJyb3IoXCJtaXNzaW5nOiBcIiArIG5vZGVJZCk7XG4gICAgICAgIGlmIChwYXJlbnQgPT09IGFtYmlndW91cykgdGhyb3cgbmV3IEVycm9yKFwiYW1iaWd1b3VzOiBcIiArIG5vZGVJZCk7XG4gICAgICAgIGlmIChwYXJlbnQuY2hpbGRyZW4pIHBhcmVudC5jaGlsZHJlbi5wdXNoKG5vZGUpO1xuICAgICAgICBlbHNlIHBhcmVudC5jaGlsZHJlbiA9IFtub2RlXTtcbiAgICAgICAgbm9kZS5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFyb290KSB0aHJvdyBuZXcgRXJyb3IoXCJubyByb290XCIpO1xuICAgIHJvb3QucGFyZW50ID0gcHJlcm9vdDtcbiAgICByb290LmVhY2hCZWZvcmUoZnVuY3Rpb24obm9kZSkgeyBub2RlLmRlcHRoID0gbm9kZS5wYXJlbnQuZGVwdGggKyAxOyAtLW47IH0pLmVhY2hCZWZvcmUoY29tcHV0ZUhlaWdodCk7XG4gICAgcm9vdC5wYXJlbnQgPSBudWxsO1xuICAgIGlmIChuID4gMCkgdGhyb3cgbmV3IEVycm9yKFwiY3ljbGVcIik7XG5cbiAgICByZXR1cm4gcm9vdDtcbiAgfVxuXG4gIHN0cmF0aWZ5LmlkID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGlkID0gcmVxdWlyZWQoeCksIHN0cmF0aWZ5KSA6IGlkO1xuICB9O1xuXG4gIHN0cmF0aWZ5LnBhcmVudElkID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhcmVudElkID0gcmVxdWlyZWQoeCksIHN0cmF0aWZ5KSA6IHBhcmVudElkO1xuICB9O1xuXG4gIHJldHVybiBzdHJhdGlmeTtcbn1cbiIsImltcG9ydCB7Tm9kZX0gZnJvbSBcIi4vaGllcmFyY2h5L2luZGV4XCI7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXBhcmF0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGEucGFyZW50ID09PSBiLnBhcmVudCA/IDEgOiAyO1xufVxuXG4vLyBmdW5jdGlvbiByYWRpYWxTZXBhcmF0aW9uKGEsIGIpIHtcbi8vICAgcmV0dXJuIChhLnBhcmVudCA9PT0gYi5wYXJlbnQgPyAxIDogMikgLyBhLmRlcHRoO1xuLy8gfVxuXG4vLyBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgdG8gdHJhdmVyc2UgdGhlIGxlZnQgY29udG91ciBvZiBhIHN1YnRyZWUgKG9yXG4vLyBzdWJmb3Jlc3QpLiBJdCByZXR1cm5zIHRoZSBzdWNjZXNzb3Igb2YgdiBvbiB0aGlzIGNvbnRvdXIuIFRoaXMgc3VjY2Vzc29yIGlzXG4vLyBlaXRoZXIgZ2l2ZW4gYnkgdGhlIGxlZnRtb3N0IGNoaWxkIG9mIHYgb3IgYnkgdGhlIHRocmVhZCBvZiB2LiBUaGUgZnVuY3Rpb25cbi8vIHJldHVybnMgbnVsbCBpZiBhbmQgb25seSBpZiB2IGlzIG9uIHRoZSBoaWdoZXN0IGxldmVsIG9mIGl0cyBzdWJ0cmVlLlxuZnVuY3Rpb24gbmV4dExlZnQodikge1xuICB2YXIgY2hpbGRyZW4gPSB2LmNoaWxkcmVuO1xuICByZXR1cm4gY2hpbGRyZW4gPyBjaGlsZHJlblswXSA6IHYudDtcbn1cblxuLy8gVGhpcyBmdW5jdGlvbiB3b3JrcyBhbmFsb2dvdXNseSB0byBuZXh0TGVmdC5cbmZ1bmN0aW9uIG5leHRSaWdodCh2KSB7XG4gIHZhciBjaGlsZHJlbiA9IHYuY2hpbGRyZW47XG4gIHJldHVybiBjaGlsZHJlbiA/IGNoaWxkcmVuW2NoaWxkcmVuLmxlbmd0aCAtIDFdIDogdi50O1xufVxuXG4vLyBTaGlmdHMgdGhlIGN1cnJlbnQgc3VidHJlZSByb290ZWQgYXQgdysuIFRoaXMgaXMgZG9uZSBieSBpbmNyZWFzaW5nXG4vLyBwcmVsaW0odyspIGFuZCBtb2QodyspIGJ5IHNoaWZ0LlxuZnVuY3Rpb24gbW92ZVN1YnRyZWUod20sIHdwLCBzaGlmdCkge1xuICB2YXIgY2hhbmdlID0gc2hpZnQgLyAod3AuaSAtIHdtLmkpO1xuICB3cC5jIC09IGNoYW5nZTtcbiAgd3AucyArPSBzaGlmdDtcbiAgd20uYyArPSBjaGFuZ2U7XG4gIHdwLnogKz0gc2hpZnQ7XG4gIHdwLm0gKz0gc2hpZnQ7XG59XG5cbi8vIEFsbCBvdGhlciBzaGlmdHMsIGFwcGxpZWQgdG8gdGhlIHNtYWxsZXIgc3VidHJlZXMgYmV0d2VlbiB3LSBhbmQgdyssIGFyZVxuLy8gcGVyZm9ybWVkIGJ5IHRoaXMgZnVuY3Rpb24uIFRvIHByZXBhcmUgdGhlIHNoaWZ0cywgd2UgaGF2ZSB0byBhZGp1c3Rcbi8vIGNoYW5nZSh3KyksIHNoaWZ0KHcrKSwgYW5kIGNoYW5nZSh3LSkuXG5mdW5jdGlvbiBleGVjdXRlU2hpZnRzKHYpIHtcbiAgdmFyIHNoaWZ0ID0gMCxcbiAgICAgIGNoYW5nZSA9IDAsXG4gICAgICBjaGlsZHJlbiA9IHYuY2hpbGRyZW4sXG4gICAgICBpID0gY2hpbGRyZW4ubGVuZ3RoLFxuICAgICAgdztcbiAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgdyA9IGNoaWxkcmVuW2ldO1xuICAgIHcueiArPSBzaGlmdDtcbiAgICB3Lm0gKz0gc2hpZnQ7XG4gICAgc2hpZnQgKz0gdy5zICsgKGNoYW5nZSArPSB3LmMpO1xuICB9XG59XG5cbi8vIElmIHZpLeKAmXMgYW5jZXN0b3IgaXMgYSBzaWJsaW5nIG9mIHYsIHJldHVybnMgdmkt4oCZcyBhbmNlc3Rvci4gT3RoZXJ3aXNlLFxuLy8gcmV0dXJucyB0aGUgc3BlY2lmaWVkIChkZWZhdWx0KSBhbmNlc3Rvci5cbmZ1bmN0aW9uIG5leHRBbmNlc3Rvcih2aW0sIHYsIGFuY2VzdG9yKSB7XG4gIHJldHVybiB2aW0uYS5wYXJlbnQgPT09IHYucGFyZW50ID8gdmltLmEgOiBhbmNlc3Rvcjtcbn1cblxuZnVuY3Rpb24gVHJlZU5vZGUobm9kZSwgaSkge1xuICB0aGlzLl8gPSBub2RlO1xuICB0aGlzLnBhcmVudCA9IG51bGw7XG4gIHRoaXMuY2hpbGRyZW4gPSBudWxsO1xuICB0aGlzLkEgPSBudWxsOyAvLyBkZWZhdWx0IGFuY2VzdG9yXG4gIHRoaXMuYSA9IHRoaXM7IC8vIGFuY2VzdG9yXG4gIHRoaXMueiA9IDA7IC8vIHByZWxpbVxuICB0aGlzLm0gPSAwOyAvLyBtb2RcbiAgdGhpcy5jID0gMDsgLy8gY2hhbmdlXG4gIHRoaXMucyA9IDA7IC8vIHNoaWZ0XG4gIHRoaXMudCA9IG51bGw7IC8vIHRocmVhZFxuICB0aGlzLmkgPSBpOyAvLyBudW1iZXJcbn1cblxuVHJlZU5vZGUucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShOb2RlLnByb3RvdHlwZSk7XG5cbmZ1bmN0aW9uIHRyZWVSb290KHJvb3QpIHtcbiAgdmFyIHRyZWUgPSBuZXcgVHJlZU5vZGUocm9vdCwgMCksXG4gICAgICBub2RlLFxuICAgICAgbm9kZXMgPSBbdHJlZV0sXG4gICAgICBjaGlsZCxcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgaSxcbiAgICAgIG47XG5cbiAgd2hpbGUgKG5vZGUgPSBub2Rlcy5wb3AoKSkge1xuICAgIGlmIChjaGlsZHJlbiA9IG5vZGUuXy5jaGlsZHJlbikge1xuICAgICAgbm9kZS5jaGlsZHJlbiA9IG5ldyBBcnJheShuID0gY2hpbGRyZW4ubGVuZ3RoKTtcbiAgICAgIGZvciAoaSA9IG4gLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICBub2Rlcy5wdXNoKGNoaWxkID0gbm9kZS5jaGlsZHJlbltpXSA9IG5ldyBUcmVlTm9kZShjaGlsZHJlbltpXSwgaSkpO1xuICAgICAgICBjaGlsZC5wYXJlbnQgPSBub2RlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICh0cmVlLnBhcmVudCA9IG5ldyBUcmVlTm9kZShudWxsLCAwKSkuY2hpbGRyZW4gPSBbdHJlZV07XG4gIHJldHVybiB0cmVlO1xufVxuXG4vLyBOb2RlLWxpbmsgdHJlZSBkaWFncmFtIHVzaW5nIHRoZSBSZWluZ29sZC1UaWxmb3JkIFwidGlkeVwiIGFsZ29yaXRobVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBzZXBhcmF0aW9uID0gZGVmYXVsdFNlcGFyYXRpb24sXG4gICAgICBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBub2RlU2l6ZSA9IG51bGw7XG5cbiAgZnVuY3Rpb24gdHJlZShyb290KSB7XG4gICAgdmFyIHQgPSB0cmVlUm9vdChyb290KTtcblxuICAgIC8vIENvbXB1dGUgdGhlIGxheW91dCB1c2luZyBCdWNoaGVpbSBldCBhbC7igJlzIGFsZ29yaXRobS5cbiAgICB0LmVhY2hBZnRlcihmaXJzdFdhbGspLCB0LnBhcmVudC5tID0gLXQuejtcbiAgICB0LmVhY2hCZWZvcmUoc2Vjb25kV2Fsayk7XG5cbiAgICAvLyBJZiBhIGZpeGVkIG5vZGUgc2l6ZSBpcyBzcGVjaWZpZWQsIHNjYWxlIHggYW5kIHkuXG4gICAgaWYgKG5vZGVTaXplKSByb290LmVhY2hCZWZvcmUoc2l6ZU5vZGUpO1xuXG4gICAgLy8gSWYgYSBmaXhlZCB0cmVlIHNpemUgaXMgc3BlY2lmaWVkLCBzY2FsZSB4IGFuZCB5IGJhc2VkIG9uIHRoZSBleHRlbnQuXG4gICAgLy8gQ29tcHV0ZSB0aGUgbGVmdC1tb3N0LCByaWdodC1tb3N0LCBhbmQgZGVwdGgtbW9zdCBub2RlcyBmb3IgZXh0ZW50cy5cbiAgICBlbHNlIHtcbiAgICAgIHZhciBsZWZ0ID0gcm9vdCxcbiAgICAgICAgICByaWdodCA9IHJvb3QsXG4gICAgICAgICAgYm90dG9tID0gcm9vdDtcbiAgICAgIHJvb3QuZWFjaEJlZm9yZShmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIGlmIChub2RlLnggPCBsZWZ0LngpIGxlZnQgPSBub2RlO1xuICAgICAgICBpZiAobm9kZS54ID4gcmlnaHQueCkgcmlnaHQgPSBub2RlO1xuICAgICAgICBpZiAobm9kZS5kZXB0aCA+IGJvdHRvbS5kZXB0aCkgYm90dG9tID0gbm9kZTtcbiAgICAgIH0pO1xuICAgICAgdmFyIHMgPSBsZWZ0ID09PSByaWdodCA/IDEgOiBzZXBhcmF0aW9uKGxlZnQsIHJpZ2h0KSAvIDIsXG4gICAgICAgICAgdHggPSBzIC0gbGVmdC54LFxuICAgICAgICAgIGt4ID0gZHggLyAocmlnaHQueCArIHMgKyB0eCksXG4gICAgICAgICAga3kgPSBkeSAvIChib3R0b20uZGVwdGggfHwgMSk7XG4gICAgICByb290LmVhY2hCZWZvcmUoZnVuY3Rpb24obm9kZSkge1xuICAgICAgICBub2RlLnggPSAobm9kZS54ICsgdHgpICoga3g7XG4gICAgICAgIG5vZGUueSA9IG5vZGUuZGVwdGggKiBreTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiByb290O1xuICB9XG5cbiAgLy8gQ29tcHV0ZXMgYSBwcmVsaW1pbmFyeSB4LWNvb3JkaW5hdGUgZm9yIHYuIEJlZm9yZSB0aGF0LCBGSVJTVCBXQUxLIGlzXG4gIC8vIGFwcGxpZWQgcmVjdXJzaXZlbHkgdG8gdGhlIGNoaWxkcmVuIG9mIHYsIGFzIHdlbGwgYXMgdGhlIGZ1bmN0aW9uXG4gIC8vIEFQUE9SVElPTi4gQWZ0ZXIgc3BhY2luZyBvdXQgdGhlIGNoaWxkcmVuIGJ5IGNhbGxpbmcgRVhFQ1VURSBTSElGVFMsIHRoZVxuICAvLyBub2RlIHYgaXMgcGxhY2VkIHRvIHRoZSBtaWRwb2ludCBvZiBpdHMgb3V0ZXJtb3N0IGNoaWxkcmVuLlxuICBmdW5jdGlvbiBmaXJzdFdhbGsodikge1xuICAgIHZhciBjaGlsZHJlbiA9IHYuY2hpbGRyZW4sXG4gICAgICAgIHNpYmxpbmdzID0gdi5wYXJlbnQuY2hpbGRyZW4sXG4gICAgICAgIHcgPSB2LmkgPyBzaWJsaW5nc1t2LmkgLSAxXSA6IG51bGw7XG4gICAgaWYgKGNoaWxkcmVuKSB7XG4gICAgICBleGVjdXRlU2hpZnRzKHYpO1xuICAgICAgdmFyIG1pZHBvaW50ID0gKGNoaWxkcmVuWzBdLnogKyBjaGlsZHJlbltjaGlsZHJlbi5sZW5ndGggLSAxXS56KSAvIDI7XG4gICAgICBpZiAodykge1xuICAgICAgICB2LnogPSB3LnogKyBzZXBhcmF0aW9uKHYuXywgdy5fKTtcbiAgICAgICAgdi5tID0gdi56IC0gbWlkcG9pbnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2LnogPSBtaWRwb2ludDtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHcpIHtcbiAgICAgIHYueiA9IHcueiArIHNlcGFyYXRpb24odi5fLCB3Ll8pO1xuICAgIH1cbiAgICB2LnBhcmVudC5BID0gYXBwb3J0aW9uKHYsIHcsIHYucGFyZW50LkEgfHwgc2libGluZ3NbMF0pO1xuICB9XG5cbiAgLy8gQ29tcHV0ZXMgYWxsIHJlYWwgeC1jb29yZGluYXRlcyBieSBzdW1taW5nIHVwIHRoZSBtb2RpZmllcnMgcmVjdXJzaXZlbHkuXG4gIGZ1bmN0aW9uIHNlY29uZFdhbGsodikge1xuICAgIHYuXy54ID0gdi56ICsgdi5wYXJlbnQubTtcbiAgICB2Lm0gKz0gdi5wYXJlbnQubTtcbiAgfVxuXG4gIC8vIFRoZSBjb3JlIG9mIHRoZSBhbGdvcml0aG0uIEhlcmUsIGEgbmV3IHN1YnRyZWUgaXMgY29tYmluZWQgd2l0aCB0aGVcbiAgLy8gcHJldmlvdXMgc3VidHJlZXMuIFRocmVhZHMgYXJlIHVzZWQgdG8gdHJhdmVyc2UgdGhlIGluc2lkZSBhbmQgb3V0c2lkZVxuICAvLyBjb250b3VycyBvZiB0aGUgbGVmdCBhbmQgcmlnaHQgc3VidHJlZSB1cCB0byB0aGUgaGlnaGVzdCBjb21tb24gbGV2ZWwuIFRoZVxuICAvLyB2ZXJ0aWNlcyB1c2VkIGZvciB0aGUgdHJhdmVyc2FscyBhcmUgdmkrLCB2aS0sIHZvLSwgYW5kIHZvKywgd2hlcmUgdGhlXG4gIC8vIHN1cGVyc2NyaXB0IG8gbWVhbnMgb3V0c2lkZSBhbmQgaSBtZWFucyBpbnNpZGUsIHRoZSBzdWJzY3JpcHQgLSBtZWFucyBsZWZ0XG4gIC8vIHN1YnRyZWUgYW5kICsgbWVhbnMgcmlnaHQgc3VidHJlZS4gRm9yIHN1bW1pbmcgdXAgdGhlIG1vZGlmaWVycyBhbG9uZyB0aGVcbiAgLy8gY29udG91ciwgd2UgdXNlIHJlc3BlY3RpdmUgdmFyaWFibGVzIHNpKywgc2ktLCBzby0sIGFuZCBzbysuIFdoZW5ldmVyIHR3b1xuICAvLyBub2RlcyBvZiB0aGUgaW5zaWRlIGNvbnRvdXJzIGNvbmZsaWN0LCB3ZSBjb21wdXRlIHRoZSBsZWZ0IG9uZSBvZiB0aGVcbiAgLy8gZ3JlYXRlc3QgdW5jb21tb24gYW5jZXN0b3JzIHVzaW5nIHRoZSBmdW5jdGlvbiBBTkNFU1RPUiBhbmQgY2FsbCBNT1ZFXG4gIC8vIFNVQlRSRUUgdG8gc2hpZnQgdGhlIHN1YnRyZWUgYW5kIHByZXBhcmUgdGhlIHNoaWZ0cyBvZiBzbWFsbGVyIHN1YnRyZWVzLlxuICAvLyBGaW5hbGx5LCB3ZSBhZGQgYSBuZXcgdGhyZWFkIChpZiBuZWNlc3NhcnkpLlxuICBmdW5jdGlvbiBhcHBvcnRpb24odiwgdywgYW5jZXN0b3IpIHtcbiAgICBpZiAodykge1xuICAgICAgdmFyIHZpcCA9IHYsXG4gICAgICAgICAgdm9wID0gdixcbiAgICAgICAgICB2aW0gPSB3LFxuICAgICAgICAgIHZvbSA9IHZpcC5wYXJlbnQuY2hpbGRyZW5bMF0sXG4gICAgICAgICAgc2lwID0gdmlwLm0sXG4gICAgICAgICAgc29wID0gdm9wLm0sXG4gICAgICAgICAgc2ltID0gdmltLm0sXG4gICAgICAgICAgc29tID0gdm9tLm0sXG4gICAgICAgICAgc2hpZnQ7XG4gICAgICB3aGlsZSAodmltID0gbmV4dFJpZ2h0KHZpbSksIHZpcCA9IG5leHRMZWZ0KHZpcCksIHZpbSAmJiB2aXApIHtcbiAgICAgICAgdm9tID0gbmV4dExlZnQodm9tKTtcbiAgICAgICAgdm9wID0gbmV4dFJpZ2h0KHZvcCk7XG4gICAgICAgIHZvcC5hID0gdjtcbiAgICAgICAgc2hpZnQgPSB2aW0ueiArIHNpbSAtIHZpcC56IC0gc2lwICsgc2VwYXJhdGlvbih2aW0uXywgdmlwLl8pO1xuICAgICAgICBpZiAoc2hpZnQgPiAwKSB7XG4gICAgICAgICAgbW92ZVN1YnRyZWUobmV4dEFuY2VzdG9yKHZpbSwgdiwgYW5jZXN0b3IpLCB2LCBzaGlmdCk7XG4gICAgICAgICAgc2lwICs9IHNoaWZ0O1xuICAgICAgICAgIHNvcCArPSBzaGlmdDtcbiAgICAgICAgfVxuICAgICAgICBzaW0gKz0gdmltLm07XG4gICAgICAgIHNpcCArPSB2aXAubTtcbiAgICAgICAgc29tICs9IHZvbS5tO1xuICAgICAgICBzb3AgKz0gdm9wLm07XG4gICAgICB9XG4gICAgICBpZiAodmltICYmICFuZXh0UmlnaHQodm9wKSkge1xuICAgICAgICB2b3AudCA9IHZpbTtcbiAgICAgICAgdm9wLm0gKz0gc2ltIC0gc29wO1xuICAgICAgfVxuICAgICAgaWYgKHZpcCAmJiAhbmV4dExlZnQodm9tKSkge1xuICAgICAgICB2b20udCA9IHZpcDtcbiAgICAgICAgdm9tLm0gKz0gc2lwIC0gc29tO1xuICAgICAgICBhbmNlc3RvciA9IHY7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhbmNlc3RvcjtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNpemVOb2RlKG5vZGUpIHtcbiAgICBub2RlLnggKj0gZHg7XG4gICAgbm9kZS55ID0gbm9kZS5kZXB0aCAqIGR5O1xuICB9XG5cbiAgdHJlZS5zZXBhcmF0aW9uID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNlcGFyYXRpb24gPSB4LCB0cmVlKSA6IHNlcGFyYXRpb247XG4gIH07XG5cbiAgdHJlZS5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG5vZGVTaXplID0gZmFsc2UsIGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIHRyZWUpIDogKG5vZGVTaXplID8gbnVsbCA6IFtkeCwgZHldKTtcbiAgfTtcblxuICB0cmVlLm5vZGVTaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG5vZGVTaXplID0gdHJ1ZSwgZHggPSAreFswXSwgZHkgPSAreFsxXSwgdHJlZSkgOiAobm9kZVNpemUgPyBbZHgsIGR5XSA6IG51bGwpO1xuICB9O1xuXG4gIHJldHVybiB0cmVlO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgbm9kZXMgPSBwYXJlbnQuY2hpbGRyZW4sXG4gICAgICBpLCBuID0gbm9kZXMubGVuZ3RoLFxuICAgICAgc3VtLCBzdW1zID0gbmV3IEFycmF5KG4gKyAxKTtcblxuICBmb3IgKHN1bXNbMF0gPSBzdW0gPSBpID0gMDsgaSA8IG47ICsraSkge1xuICAgIHN1bXNbaSArIDFdID0gc3VtICs9IG5vZGVzW2ldLnZhbHVlO1xuICB9XG5cbiAgcGFydGl0aW9uKDAsIG4sIHBhcmVudC52YWx1ZSwgeDAsIHkwLCB4MSwgeTEpO1xuXG4gIGZ1bmN0aW9uIHBhcnRpdGlvbihpLCBqLCB2YWx1ZSwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgICBpZiAoaSA+PSBqIC0gMSkge1xuICAgICAgdmFyIG5vZGUgPSBub2Rlc1tpXTtcbiAgICAgIG5vZGUueDAgPSB4MCwgbm9kZS55MCA9IHkwO1xuICAgICAgbm9kZS54MSA9IHgxLCBub2RlLnkxID0geTE7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHZhbHVlT2Zmc2V0ID0gc3Vtc1tpXSxcbiAgICAgICAgdmFsdWVUYXJnZXQgPSAodmFsdWUgLyAyKSArIHZhbHVlT2Zmc2V0LFxuICAgICAgICBrID0gaSArIDEsXG4gICAgICAgIGhpID0gaiAtIDE7XG5cbiAgICB3aGlsZSAoayA8IGhpKSB7XG4gICAgICB2YXIgbWlkID0gayArIGhpID4+PiAxO1xuICAgICAgaWYgKHN1bXNbbWlkXSA8IHZhbHVlVGFyZ2V0KSBrID0gbWlkICsgMTtcbiAgICAgIGVsc2UgaGkgPSBtaWQ7XG4gICAgfVxuXG4gICAgaWYgKCh2YWx1ZVRhcmdldCAtIHN1bXNbayAtIDFdKSA8IChzdW1zW2tdIC0gdmFsdWVUYXJnZXQpICYmIGkgKyAxIDwgaykgLS1rO1xuXG4gICAgdmFyIHZhbHVlTGVmdCA9IHN1bXNba10gLSB2YWx1ZU9mZnNldCxcbiAgICAgICAgdmFsdWVSaWdodCA9IHZhbHVlIC0gdmFsdWVMZWZ0O1xuXG4gICAgaWYgKCh4MSAtIHgwKSA+ICh5MSAtIHkwKSkge1xuICAgICAgdmFyIHhrID0gKHgwICogdmFsdWVSaWdodCArIHgxICogdmFsdWVMZWZ0KSAvIHZhbHVlO1xuICAgICAgcGFydGl0aW9uKGksIGssIHZhbHVlTGVmdCwgeDAsIHkwLCB4aywgeTEpO1xuICAgICAgcGFydGl0aW9uKGssIGosIHZhbHVlUmlnaHQsIHhrLCB5MCwgeDEsIHkxKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHlrID0gKHkwICogdmFsdWVSaWdodCArIHkxICogdmFsdWVMZWZ0KSAvIHZhbHVlO1xuICAgICAgcGFydGl0aW9uKGksIGssIHZhbHVlTGVmdCwgeDAsIHkwLCB4MSwgeWspO1xuICAgICAgcGFydGl0aW9uKGssIGosIHZhbHVlUmlnaHQsIHgwLCB5aywgeDEsIHkxKTtcbiAgICB9XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHBhcmVudCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgdmFyIG5vZGVzID0gcGFyZW50LmNoaWxkcmVuLFxuICAgICAgbm9kZSxcbiAgICAgIGkgPSAtMSxcbiAgICAgIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICBrID0gcGFyZW50LnZhbHVlICYmICh4MSAtIHgwKSAvIHBhcmVudC52YWx1ZTtcblxuICB3aGlsZSAoKytpIDwgbikge1xuICAgIG5vZGUgPSBub2Rlc1tpXSwgbm9kZS55MCA9IHkwLCBub2RlLnkxID0geTE7XG4gICAgbm9kZS54MCA9IHgwLCBub2RlLngxID0geDAgKz0gbm9kZS52YWx1ZSAqIGs7XG4gIH1cbn1cbiIsImltcG9ydCByb3VuZE5vZGUgZnJvbSBcIi4vcm91bmRcIjtcbmltcG9ydCBzcXVhcmlmeSBmcm9tIFwiLi9zcXVhcmlmeVwiO1xuaW1wb3J0IHtyZXF1aXJlZH0gZnJvbSBcIi4uL2FjY2Vzc29yc1wiO1xuaW1wb3J0IGNvbnN0YW50LCB7Y29uc3RhbnRaZXJvfSBmcm9tIFwiLi4vY29uc3RhbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciB0aWxlID0gc3F1YXJpZnksXG4gICAgICByb3VuZCA9IGZhbHNlLFxuICAgICAgZHggPSAxLFxuICAgICAgZHkgPSAxLFxuICAgICAgcGFkZGluZ1N0YWNrID0gWzBdLFxuICAgICAgcGFkZGluZ0lubmVyID0gY29uc3RhbnRaZXJvLFxuICAgICAgcGFkZGluZ1RvcCA9IGNvbnN0YW50WmVybyxcbiAgICAgIHBhZGRpbmdSaWdodCA9IGNvbnN0YW50WmVybyxcbiAgICAgIHBhZGRpbmdCb3R0b20gPSBjb25zdGFudFplcm8sXG4gICAgICBwYWRkaW5nTGVmdCA9IGNvbnN0YW50WmVybztcblxuICBmdW5jdGlvbiB0cmVlbWFwKHJvb3QpIHtcbiAgICByb290LngwID1cbiAgICByb290LnkwID0gMDtcbiAgICByb290LngxID0gZHg7XG4gICAgcm9vdC55MSA9IGR5O1xuICAgIHJvb3QuZWFjaEJlZm9yZShwb3NpdGlvbk5vZGUpO1xuICAgIHBhZGRpbmdTdGFjayA9IFswXTtcbiAgICBpZiAocm91bmQpIHJvb3QuZWFjaEJlZm9yZShyb3VuZE5vZGUpO1xuICAgIHJldHVybiByb290O1xuICB9XG5cbiAgZnVuY3Rpb24gcG9zaXRpb25Ob2RlKG5vZGUpIHtcbiAgICB2YXIgcCA9IHBhZGRpbmdTdGFja1tub2RlLmRlcHRoXSxcbiAgICAgICAgeDAgPSBub2RlLngwICsgcCxcbiAgICAgICAgeTAgPSBub2RlLnkwICsgcCxcbiAgICAgICAgeDEgPSBub2RlLngxIC0gcCxcbiAgICAgICAgeTEgPSBub2RlLnkxIC0gcDtcbiAgICBpZiAoeDEgPCB4MCkgeDAgPSB4MSA9ICh4MCArIHgxKSAvIDI7XG4gICAgaWYgKHkxIDwgeTApIHkwID0geTEgPSAoeTAgKyB5MSkgLyAyO1xuICAgIG5vZGUueDAgPSB4MDtcbiAgICBub2RlLnkwID0geTA7XG4gICAgbm9kZS54MSA9IHgxO1xuICAgIG5vZGUueTEgPSB5MTtcbiAgICBpZiAobm9kZS5jaGlsZHJlbikge1xuICAgICAgcCA9IHBhZGRpbmdTdGFja1tub2RlLmRlcHRoICsgMV0gPSBwYWRkaW5nSW5uZXIobm9kZSkgLyAyO1xuICAgICAgeDAgKz0gcGFkZGluZ0xlZnQobm9kZSkgLSBwO1xuICAgICAgeTAgKz0gcGFkZGluZ1RvcChub2RlKSAtIHA7XG4gICAgICB4MSAtPSBwYWRkaW5nUmlnaHQobm9kZSkgLSBwO1xuICAgICAgeTEgLT0gcGFkZGluZ0JvdHRvbShub2RlKSAtIHA7XG4gICAgICBpZiAoeDEgPCB4MCkgeDAgPSB4MSA9ICh4MCArIHgxKSAvIDI7XG4gICAgICBpZiAoeTEgPCB5MCkgeTAgPSB5MSA9ICh5MCArIHkxKSAvIDI7XG4gICAgICB0aWxlKG5vZGUsIHgwLCB5MCwgeDEsIHkxKTtcbiAgICB9XG4gIH1cblxuICB0cmVlbWFwLnJvdW5kID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJvdW5kID0gISF4LCB0cmVlbWFwKSA6IHJvdW5kO1xuICB9O1xuXG4gIHRyZWVtYXAuc2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkeCA9ICt4WzBdLCBkeSA9ICt4WzFdLCB0cmVlbWFwKSA6IFtkeCwgZHldO1xuICB9O1xuXG4gIHRyZWVtYXAudGlsZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aWxlID0gcmVxdWlyZWQoeCksIHRyZWVtYXApIDogdGlsZTtcbiAgfTtcblxuICB0cmVlbWFwLnBhZGRpbmcgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0cmVlbWFwLnBhZGRpbmdJbm5lcih4KS5wYWRkaW5nT3V0ZXIoeCkgOiB0cmVlbWFwLnBhZGRpbmdJbm5lcigpO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZ0lubmVyID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdJbm5lciA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCB0cmVlbWFwKSA6IHBhZGRpbmdJbm5lcjtcbiAgfTtcblxuICB0cmVlbWFwLnBhZGRpbmdPdXRlciA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRyZWVtYXAucGFkZGluZ1RvcCh4KS5wYWRkaW5nUmlnaHQoeCkucGFkZGluZ0JvdHRvbSh4KS5wYWRkaW5nTGVmdCh4KSA6IHRyZWVtYXAucGFkZGluZ1RvcCgpO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZ1RvcCA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nVG9wID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiBjb25zdGFudCgreCksIHRyZWVtYXApIDogcGFkZGluZ1RvcDtcbiAgfTtcblxuICB0cmVlbWFwLnBhZGRpbmdSaWdodCA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nUmlnaHQgPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6IGNvbnN0YW50KCt4KSwgdHJlZW1hcCkgOiBwYWRkaW5nUmlnaHQ7XG4gIH07XG5cbiAgdHJlZW1hcC5wYWRkaW5nQm90dG9tID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdCb3R0b20gPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6IGNvbnN0YW50KCt4KSwgdHJlZW1hcCkgOiBwYWRkaW5nQm90dG9tO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZ0xlZnQgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkZGluZ0xlZnQgPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6IGNvbnN0YW50KCt4KSwgdHJlZW1hcCkgOiBwYWRkaW5nTGVmdDtcbiAgfTtcblxuICByZXR1cm4gdHJlZW1hcDtcbn1cbiIsImltcG9ydCB0cmVlbWFwRGljZSBmcm9tIFwiLi9kaWNlXCI7XG5pbXBvcnQgdHJlZW1hcFNsaWNlIGZyb20gXCIuL3NsaWNlXCI7XG5pbXBvcnQge3BoaSwgc3F1YXJpZnlSYXRpb30gZnJvbSBcIi4vc3F1YXJpZnlcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbShyYXRpbykge1xuXG4gIGZ1bmN0aW9uIHJlc3F1YXJpZnkocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICAgIGlmICgocm93cyA9IHBhcmVudC5fc3F1YXJpZnkpICYmIChyb3dzLnJhdGlvID09PSByYXRpbykpIHtcbiAgICAgIHZhciByb3dzLFxuICAgICAgICAgIHJvdyxcbiAgICAgICAgICBub2RlcyxcbiAgICAgICAgICBpLFxuICAgICAgICAgIGogPSAtMSxcbiAgICAgICAgICBuLFxuICAgICAgICAgIG0gPSByb3dzLmxlbmd0aCxcbiAgICAgICAgICB2YWx1ZSA9IHBhcmVudC52YWx1ZTtcblxuICAgICAgd2hpbGUgKCsraiA8IG0pIHtcbiAgICAgICAgcm93ID0gcm93c1tqXSwgbm9kZXMgPSByb3cuY2hpbGRyZW47XG4gICAgICAgIGZvciAoaSA9IHJvdy52YWx1ZSA9IDAsIG4gPSBub2Rlcy5sZW5ndGg7IGkgPCBuOyArK2kpIHJvdy52YWx1ZSArPSBub2Rlc1tpXS52YWx1ZTtcbiAgICAgICAgaWYgKHJvdy5kaWNlKSB0cmVlbWFwRGljZShyb3csIHgwLCB5MCwgeDEsIHkwICs9ICh5MSAtIHkwKSAqIHJvdy52YWx1ZSAvIHZhbHVlKTtcbiAgICAgICAgZWxzZSB0cmVlbWFwU2xpY2Uocm93LCB4MCwgeTAsIHgwICs9ICh4MSAtIHgwKSAqIHJvdy52YWx1ZSAvIHZhbHVlLCB5MSk7XG4gICAgICAgIHZhbHVlIC09IHJvdy52YWx1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcGFyZW50Ll9zcXVhcmlmeSA9IHJvd3MgPSBzcXVhcmlmeVJhdGlvKHJhdGlvLCBwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKTtcbiAgICAgIHJvd3MucmF0aW8gPSByYXRpbztcbiAgICB9XG4gIH1cblxuICByZXNxdWFyaWZ5LnJhdGlvID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBjdXN0b20oKHggPSAreCkgPiAxID8geCA6IDEpO1xuICB9O1xuXG4gIHJldHVybiByZXNxdWFyaWZ5O1xufSkocGhpKTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUpIHtcbiAgbm9kZS54MCA9IE1hdGgucm91bmQobm9kZS54MCk7XG4gIG5vZGUueTAgPSBNYXRoLnJvdW5kKG5vZGUueTApO1xuICBub2RlLngxID0gTWF0aC5yb3VuZChub2RlLngxKTtcbiAgbm9kZS55MSA9IE1hdGgucm91bmQobm9kZS55MSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIHZhciBub2RlcyA9IHBhcmVudC5jaGlsZHJlbixcbiAgICAgIG5vZGUsXG4gICAgICBpID0gLTEsXG4gICAgICBuID0gbm9kZXMubGVuZ3RoLFxuICAgICAgayA9IHBhcmVudC52YWx1ZSAmJiAoeTEgLSB5MCkgLyBwYXJlbnQudmFsdWU7XG5cbiAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICBub2RlID0gbm9kZXNbaV0sIG5vZGUueDAgPSB4MCwgbm9kZS54MSA9IHgxO1xuICAgIG5vZGUueTAgPSB5MCwgbm9kZS55MSA9IHkwICs9IG5vZGUudmFsdWUgKiBrO1xuICB9XG59XG4iLCJpbXBvcnQgZGljZSBmcm9tIFwiLi9kaWNlXCI7XG5pbXBvcnQgc2xpY2UgZnJvbSBcIi4vc2xpY2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICAocGFyZW50LmRlcHRoICYgMSA/IHNsaWNlIDogZGljZSkocGFyZW50LCB4MCwgeTAsIHgxLCB5MSk7XG59XG4iLCJpbXBvcnQgdHJlZW1hcERpY2UgZnJvbSBcIi4vZGljZVwiO1xuaW1wb3J0IHRyZWVtYXBTbGljZSBmcm9tIFwiLi9zbGljZVwiO1xuXG5leHBvcnQgdmFyIHBoaSA9ICgxICsgTWF0aC5zcXJ0KDUpKSAvIDI7XG5cbmV4cG9ydCBmdW5jdGlvbiBzcXVhcmlmeVJhdGlvKHJhdGlvLCBwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIHZhciByb3dzID0gW10sXG4gICAgICBub2RlcyA9IHBhcmVudC5jaGlsZHJlbixcbiAgICAgIHJvdyxcbiAgICAgIG5vZGVWYWx1ZSxcbiAgICAgIGkwID0gMCxcbiAgICAgIGkxID0gMCxcbiAgICAgIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICBkeCwgZHksXG4gICAgICB2YWx1ZSA9IHBhcmVudC52YWx1ZSxcbiAgICAgIHN1bVZhbHVlLFxuICAgICAgbWluVmFsdWUsXG4gICAgICBtYXhWYWx1ZSxcbiAgICAgIG5ld1JhdGlvLFxuICAgICAgbWluUmF0aW8sXG4gICAgICBhbHBoYSxcbiAgICAgIGJldGE7XG5cbiAgd2hpbGUgKGkwIDwgbikge1xuICAgIGR4ID0geDEgLSB4MCwgZHkgPSB5MSAtIHkwO1xuXG4gICAgLy8gRmluZCB0aGUgbmV4dCBub24tZW1wdHkgbm9kZS5cbiAgICBkbyBzdW1WYWx1ZSA9IG5vZGVzW2kxKytdLnZhbHVlOyB3aGlsZSAoIXN1bVZhbHVlICYmIGkxIDwgbik7XG4gICAgbWluVmFsdWUgPSBtYXhWYWx1ZSA9IHN1bVZhbHVlO1xuICAgIGFscGhhID0gTWF0aC5tYXgoZHkgLyBkeCwgZHggLyBkeSkgLyAodmFsdWUgKiByYXRpbyk7XG4gICAgYmV0YSA9IHN1bVZhbHVlICogc3VtVmFsdWUgKiBhbHBoYTtcbiAgICBtaW5SYXRpbyA9IE1hdGgubWF4KG1heFZhbHVlIC8gYmV0YSwgYmV0YSAvIG1pblZhbHVlKTtcblxuICAgIC8vIEtlZXAgYWRkaW5nIG5vZGVzIHdoaWxlIHRoZSBhc3BlY3QgcmF0aW8gbWFpbnRhaW5zIG9yIGltcHJvdmVzLlxuICAgIGZvciAoOyBpMSA8IG47ICsraTEpIHtcbiAgICAgIHN1bVZhbHVlICs9IG5vZGVWYWx1ZSA9IG5vZGVzW2kxXS52YWx1ZTtcbiAgICAgIGlmIChub2RlVmFsdWUgPCBtaW5WYWx1ZSkgbWluVmFsdWUgPSBub2RlVmFsdWU7XG4gICAgICBpZiAobm9kZVZhbHVlID4gbWF4VmFsdWUpIG1heFZhbHVlID0gbm9kZVZhbHVlO1xuICAgICAgYmV0YSA9IHN1bVZhbHVlICogc3VtVmFsdWUgKiBhbHBoYTtcbiAgICAgIG5ld1JhdGlvID0gTWF0aC5tYXgobWF4VmFsdWUgLyBiZXRhLCBiZXRhIC8gbWluVmFsdWUpO1xuICAgICAgaWYgKG5ld1JhdGlvID4gbWluUmF0aW8pIHsgc3VtVmFsdWUgLT0gbm9kZVZhbHVlOyBicmVhazsgfVxuICAgICAgbWluUmF0aW8gPSBuZXdSYXRpbztcbiAgICB9XG5cbiAgICAvLyBQb3NpdGlvbiBhbmQgcmVjb3JkIHRoZSByb3cgb3JpZW50YXRpb24uXG4gICAgcm93cy5wdXNoKHJvdyA9IHt2YWx1ZTogc3VtVmFsdWUsIGRpY2U6IGR4IDwgZHksIGNoaWxkcmVuOiBub2Rlcy5zbGljZShpMCwgaTEpfSk7XG4gICAgaWYgKHJvdy5kaWNlKSB0cmVlbWFwRGljZShyb3csIHgwLCB5MCwgeDEsIHZhbHVlID8geTAgKz0gZHkgKiBzdW1WYWx1ZSAvIHZhbHVlIDogeTEpO1xuICAgIGVsc2UgdHJlZW1hcFNsaWNlKHJvdywgeDAsIHkwLCB2YWx1ZSA/IHgwICs9IGR4ICogc3VtVmFsdWUgLyB2YWx1ZSA6IHgxLCB5MSk7XG4gICAgdmFsdWUgLT0gc3VtVmFsdWUsIGkwID0gaTE7XG4gIH1cblxuICByZXR1cm4gcm93cztcbn1cblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbShyYXRpbykge1xuXG4gIGZ1bmN0aW9uIHNxdWFyaWZ5KHBhcmVudCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgICBzcXVhcmlmeVJhdGlvKHJhdGlvLCBwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKTtcbiAgfVxuXG4gIHNxdWFyaWZ5LnJhdGlvID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBjdXN0b20oKHggPSAreCkgPiAxID8geCA6IDEpO1xuICB9O1xuXG4gIHJldHVybiBzcXVhcmlmeTtcbn0pKHBoaSk7XG4iLCJpbXBvcnQgdmFsdWUgZnJvbSBcIi4vdmFsdWVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICB2YXIgbmIgPSBiID8gYi5sZW5ndGggOiAwLFxuICAgICAgbmEgPSBhID8gTWF0aC5taW4obmIsIGEubGVuZ3RoKSA6IDAsXG4gICAgICB4ID0gbmV3IEFycmF5KG5hKSxcbiAgICAgIGMgPSBuZXcgQXJyYXkobmIpLFxuICAgICAgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgbmE7ICsraSkgeFtpXSA9IHZhbHVlKGFbaV0sIGJbaV0pO1xuICBmb3IgKDsgaSA8IG5iOyArK2kpIGNbaV0gPSBiW2ldO1xuXG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgZm9yIChpID0gMDsgaSA8IG5hOyArK2kpIGNbaV0gPSB4W2ldKHQpO1xuICAgIHJldHVybiBjO1xuICB9O1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGJhc2lzKHQxLCB2MCwgdjEsIHYyLCB2Mykge1xuICB2YXIgdDIgPSB0MSAqIHQxLCB0MyA9IHQyICogdDE7XG4gIHJldHVybiAoKDEgLSAzICogdDEgKyAzICogdDIgLSB0MykgKiB2MFxuICAgICAgKyAoNCAtIDYgKiB0MiArIDMgKiB0MykgKiB2MVxuICAgICAgKyAoMSArIDMgKiB0MSArIDMgKiB0MiAtIDMgKiB0MykgKiB2MlxuICAgICAgKyB0MyAqIHYzKSAvIDY7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcykge1xuICB2YXIgbiA9IHZhbHVlcy5sZW5ndGggLSAxO1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHZhciBpID0gdCA8PSAwID8gKHQgPSAwKSA6IHQgPj0gMSA/ICh0ID0gMSwgbiAtIDEpIDogTWF0aC5mbG9vcih0ICogbiksXG4gICAgICAgIHYxID0gdmFsdWVzW2ldLFxuICAgICAgICB2MiA9IHZhbHVlc1tpICsgMV0sXG4gICAgICAgIHYwID0gaSA+IDAgPyB2YWx1ZXNbaSAtIDFdIDogMiAqIHYxIC0gdjIsXG4gICAgICAgIHYzID0gaSA8IG4gLSAxID8gdmFsdWVzW2kgKyAyXSA6IDIgKiB2MiAtIHYxO1xuICAgIHJldHVybiBiYXNpcygodCAtIGkgLyBuKSAqIG4sIHYwLCB2MSwgdjIsIHYzKTtcbiAgfTtcbn1cbiIsImltcG9ydCB7YmFzaXN9IGZyb20gXCIuL2Jhc2lzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcykge1xuICB2YXIgbiA9IHZhbHVlcy5sZW5ndGg7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdmFyIGkgPSBNYXRoLmZsb29yKCgodCAlPSAxKSA8IDAgPyArK3QgOiB0KSAqIG4pLFxuICAgICAgICB2MCA9IHZhbHVlc1soaSArIG4gLSAxKSAlIG5dLFxuICAgICAgICB2MSA9IHZhbHVlc1tpICUgbl0sXG4gICAgICAgIHYyID0gdmFsdWVzWyhpICsgMSkgJSBuXSxcbiAgICAgICAgdjMgPSB2YWx1ZXNbKGkgKyAyKSAlIG5dO1xuICAgIHJldHVybiBiYXNpcygodCAtIGkgLyBuKSAqIG4sIHYwLCB2MSwgdjIsIHYzKTtcbiAgfTtcbn1cbiIsImltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuXG5mdW5jdGlvbiBsaW5lYXIoYSwgZCkge1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBhICsgdCAqIGQ7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGV4cG9uZW50aWFsKGEsIGIsIHkpIHtcbiAgcmV0dXJuIGEgPSBNYXRoLnBvdyhhLCB5KSwgYiA9IE1hdGgucG93KGIsIHkpIC0gYSwgeSA9IDEgLyB5LCBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIE1hdGgucG93KGEgKyB0ICogYiwgeSk7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBodWUoYSwgYikge1xuICB2YXIgZCA9IGIgLSBhO1xuICByZXR1cm4gZCA/IGxpbmVhcihhLCBkID4gMTgwIHx8IGQgPCAtMTgwID8gZCAtIDM2MCAqIE1hdGgucm91bmQoZCAvIDM2MCkgOiBkKSA6IGNvbnN0YW50KGlzTmFOKGEpID8gYiA6IGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2FtbWEoeSkge1xuICByZXR1cm4gKHkgPSAreSkgPT09IDEgPyBub2dhbW1hIDogZnVuY3Rpb24oYSwgYikge1xuICAgIHJldHVybiBiIC0gYSA/IGV4cG9uZW50aWFsKGEsIGIsIHkpIDogY29uc3RhbnQoaXNOYU4oYSkgPyBiIDogYSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vZ2FtbWEoYSwgYikge1xuICB2YXIgZCA9IGIgLSBhO1xuICByZXR1cm4gZCA/IGxpbmVhcihhLCBkKSA6IGNvbnN0YW50KGlzTmFOKGEpID8gYiA6IGEpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJpbXBvcnQge2N1YmVoZWxpeCBhcyBjb2xvckN1YmVoZWxpeH0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQgY29sb3IsIHtodWV9IGZyb20gXCIuL2NvbG9yXCI7XG5cbmZ1bmN0aW9uIGN1YmVoZWxpeChodWUpIHtcbiAgcmV0dXJuIChmdW5jdGlvbiBjdWJlaGVsaXhHYW1tYSh5KSB7XG4gICAgeSA9ICt5O1xuXG4gICAgZnVuY3Rpb24gY3ViZWhlbGl4KHN0YXJ0LCBlbmQpIHtcbiAgICAgIHZhciBoID0gaHVlKChzdGFydCA9IGNvbG9yQ3ViZWhlbGl4KHN0YXJ0KSkuaCwgKGVuZCA9IGNvbG9yQ3ViZWhlbGl4KGVuZCkpLmgpLFxuICAgICAgICAgIHMgPSBjb2xvcihzdGFydC5zLCBlbmQucyksXG4gICAgICAgICAgbCA9IGNvbG9yKHN0YXJ0LmwsIGVuZC5sKSxcbiAgICAgICAgICBvcGFjaXR5ID0gY29sb3Ioc3RhcnQub3BhY2l0eSwgZW5kLm9wYWNpdHkpO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgc3RhcnQuaCA9IGgodCk7XG4gICAgICAgIHN0YXJ0LnMgPSBzKHQpO1xuICAgICAgICBzdGFydC5sID0gbChNYXRoLnBvdyh0LCB5KSk7XG4gICAgICAgIHN0YXJ0Lm9wYWNpdHkgPSBvcGFjaXR5KHQpO1xuICAgICAgICByZXR1cm4gc3RhcnQgKyBcIlwiO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICBjdWJlaGVsaXguZ2FtbWEgPSBjdWJlaGVsaXhHYW1tYTtcblxuICAgIHJldHVybiBjdWJlaGVsaXg7XG4gIH0pKDEpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjdWJlaGVsaXgoaHVlKTtcbmV4cG9ydCB2YXIgY3ViZWhlbGl4TG9uZyA9IGN1YmVoZWxpeChjb2xvcik7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciBkID0gbmV3IERhdGU7XG4gIHJldHVybiBhID0gK2EsIGIgLT0gYSwgZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBkLnNldFRpbWUoYSArIGIgKiB0KSwgZDtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHJhbmdlKSB7XG4gIHZhciBuID0gcmFuZ2UubGVuZ3RoO1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHJldHVybiByYW5nZVtNYXRoLm1heCgwLCBNYXRoLm1pbihuIC0gMSwgTWF0aC5mbG9vcih0ICogbikpKV07XG4gIH07XG59XG4iLCJpbXBvcnQge2hjbCBhcyBjb2xvckhjbH0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQgY29sb3IsIHtodWV9IGZyb20gXCIuL2NvbG9yXCI7XG5cbmZ1bmN0aW9uIGhjbChodWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICB2YXIgaCA9IGh1ZSgoc3RhcnQgPSBjb2xvckhjbChzdGFydCkpLmgsIChlbmQgPSBjb2xvckhjbChlbmQpKS5oKSxcbiAgICAgICAgYyA9IGNvbG9yKHN0YXJ0LmMsIGVuZC5jKSxcbiAgICAgICAgbCA9IGNvbG9yKHN0YXJ0LmwsIGVuZC5sKSxcbiAgICAgICAgb3BhY2l0eSA9IGNvbG9yKHN0YXJ0Lm9wYWNpdHksIGVuZC5vcGFjaXR5KTtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgc3RhcnQuaCA9IGgodCk7XG4gICAgICBzdGFydC5jID0gYyh0KTtcbiAgICAgIHN0YXJ0LmwgPSBsKHQpO1xuICAgICAgc3RhcnQub3BhY2l0eSA9IG9wYWNpdHkodCk7XG4gICAgICByZXR1cm4gc3RhcnQgKyBcIlwiO1xuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgaGNsKGh1ZSk7XG5leHBvcnQgdmFyIGhjbExvbmcgPSBoY2woY29sb3IpO1xuIiwiaW1wb3J0IHtoc2wgYXMgY29sb3JIc2x9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IGNvbG9yLCB7aHVlfSBmcm9tIFwiLi9jb2xvclwiO1xuXG5mdW5jdGlvbiBoc2woaHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gICAgdmFyIGggPSBodWUoKHN0YXJ0ID0gY29sb3JIc2woc3RhcnQpKS5oLCAoZW5kID0gY29sb3JIc2woZW5kKSkuaCksXG4gICAgICAgIHMgPSBjb2xvcihzdGFydC5zLCBlbmQucyksXG4gICAgICAgIGwgPSBjb2xvcihzdGFydC5sLCBlbmQubCksXG4gICAgICAgIG9wYWNpdHkgPSBjb2xvcihzdGFydC5vcGFjaXR5LCBlbmQub3BhY2l0eSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHN0YXJ0LmggPSBoKHQpO1xuICAgICAgc3RhcnQucyA9IHModCk7XG4gICAgICBzdGFydC5sID0gbCh0KTtcbiAgICAgIHN0YXJ0Lm9wYWNpdHkgPSBvcGFjaXR5KHQpO1xuICAgICAgcmV0dXJuIHN0YXJ0ICsgXCJcIjtcbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGhzbChodWUpO1xuZXhwb3J0IHZhciBoc2xMb25nID0gaHNsKGNvbG9yKTtcbiIsImltcG9ydCB7aHVlfSBmcm9tIFwiLi9jb2xvclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciBpID0gaHVlKCthLCArYik7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdmFyIHggPSBpKHQpO1xuICAgIHJldHVybiB4IC0gMzYwICogTWF0aC5mbG9vcih4IC8gMzYwKTtcbiAgfTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZX0gZnJvbSBcIi4vdmFsdWVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUFycmF5fSBmcm9tIFwiLi9hcnJheVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlQmFzaXN9IGZyb20gXCIuL2Jhc2lzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVCYXNpc0Nsb3NlZH0gZnJvbSBcIi4vYmFzaXNDbG9zZWRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZURhdGV9IGZyb20gXCIuL2RhdGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZURpc2NyZXRlfSBmcm9tIFwiLi9kaXNjcmV0ZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlSHVlfSBmcm9tIFwiLi9odWVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZU51bWJlcn0gZnJvbSBcIi4vbnVtYmVyXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVPYmplY3R9IGZyb20gXCIuL29iamVjdFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUm91bmR9IGZyb20gXCIuL3JvdW5kXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVTdHJpbmd9IGZyb20gXCIuL3N0cmluZ1wiO1xuZXhwb3J0IHtpbnRlcnBvbGF0ZVRyYW5zZm9ybUNzcywgaW50ZXJwb2xhdGVUcmFuc2Zvcm1Tdmd9IGZyb20gXCIuL3RyYW5zZm9ybS9pbmRleFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlWm9vbX0gZnJvbSBcIi4vem9vbVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUmdiLCByZ2JCYXNpcyBhcyBpbnRlcnBvbGF0ZVJnYkJhc2lzLCByZ2JCYXNpc0Nsb3NlZCBhcyBpbnRlcnBvbGF0ZVJnYkJhc2lzQ2xvc2VkfSBmcm9tIFwiLi9yZ2JcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUhzbCwgaHNsTG9uZyBhcyBpbnRlcnBvbGF0ZUhzbExvbmd9IGZyb20gXCIuL2hzbFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlTGFifSBmcm9tIFwiLi9sYWJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUhjbCwgaGNsTG9uZyBhcyBpbnRlcnBvbGF0ZUhjbExvbmd9IGZyb20gXCIuL2hjbFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlQ3ViZWhlbGl4LCBjdWJlaGVsaXhMb25nIGFzIGludGVycG9sYXRlQ3ViZWhlbGl4TG9uZ30gZnJvbSBcIi4vY3ViZWhlbGl4XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGllY2V3aXNlfSBmcm9tIFwiLi9waWVjZXdpc2VcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBxdWFudGl6ZX0gZnJvbSBcIi4vcXVhbnRpemVcIjtcbiIsImltcG9ydCB7bGFiIGFzIGNvbG9yTGFifSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCBjb2xvciBmcm9tIFwiLi9jb2xvclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsYWIoc3RhcnQsIGVuZCkge1xuICB2YXIgbCA9IGNvbG9yKChzdGFydCA9IGNvbG9yTGFiKHN0YXJ0KSkubCwgKGVuZCA9IGNvbG9yTGFiKGVuZCkpLmwpLFxuICAgICAgYSA9IGNvbG9yKHN0YXJ0LmEsIGVuZC5hKSxcbiAgICAgIGIgPSBjb2xvcihzdGFydC5iLCBlbmQuYiksXG4gICAgICBvcGFjaXR5ID0gY29sb3Ioc3RhcnQub3BhY2l0eSwgZW5kLm9wYWNpdHkpO1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHN0YXJ0LmwgPSBsKHQpO1xuICAgIHN0YXJ0LmEgPSBhKHQpO1xuICAgIHN0YXJ0LmIgPSBiKHQpO1xuICAgIHN0YXJ0Lm9wYWNpdHkgPSBvcGFjaXR5KHQpO1xuICAgIHJldHVybiBzdGFydCArIFwiXCI7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBhID0gK2EsIGIgLT0gYSwgZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBhICsgYiAqIHQ7XG4gIH07XG59XG4iLCJpbXBvcnQgdmFsdWUgZnJvbSBcIi4vdmFsdWVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICB2YXIgaSA9IHt9LFxuICAgICAgYyA9IHt9LFxuICAgICAgaztcblxuICBpZiAoYSA9PT0gbnVsbCB8fCB0eXBlb2YgYSAhPT0gXCJvYmplY3RcIikgYSA9IHt9O1xuICBpZiAoYiA9PT0gbnVsbCB8fCB0eXBlb2YgYiAhPT0gXCJvYmplY3RcIikgYiA9IHt9O1xuXG4gIGZvciAoayBpbiBiKSB7XG4gICAgaWYgKGsgaW4gYSkge1xuICAgICAgaVtrXSA9IHZhbHVlKGFba10sIGJba10pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjW2tdID0gYltrXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIGZvciAoayBpbiBpKSBjW2tdID0gaVtrXSh0KTtcbiAgICByZXR1cm4gYztcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBpZWNld2lzZShpbnRlcnBvbGF0ZSwgdmFsdWVzKSB7XG4gIHZhciBpID0gMCwgbiA9IHZhbHVlcy5sZW5ndGggLSAxLCB2ID0gdmFsdWVzWzBdLCBJID0gbmV3IEFycmF5KG4gPCAwID8gMCA6IG4pO1xuICB3aGlsZSAoaSA8IG4pIElbaV0gPSBpbnRlcnBvbGF0ZSh2LCB2ID0gdmFsdWVzWysraV0pO1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHZhciBpID0gTWF0aC5tYXgoMCwgTWF0aC5taW4obiAtIDEsIE1hdGguZmxvb3IodCAqPSBuKSkpO1xuICAgIHJldHVybiBJW2ldKHQgLSBpKTtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGludGVycG9sYXRvciwgbikge1xuICB2YXIgc2FtcGxlcyA9IG5ldyBBcnJheShuKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyArK2kpIHNhbXBsZXNbaV0gPSBpbnRlcnBvbGF0b3IoaSAvIChuIC0gMSkpO1xuICByZXR1cm4gc2FtcGxlcztcbn1cbiIsImltcG9ydCB7cmdiIGFzIGNvbG9yUmdifSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCBiYXNpcyBmcm9tIFwiLi9iYXNpc1wiO1xuaW1wb3J0IGJhc2lzQ2xvc2VkIGZyb20gXCIuL2Jhc2lzQ2xvc2VkXCI7XG5pbXBvcnQgbm9nYW1tYSwge2dhbW1hfSBmcm9tIFwiLi9jb2xvclwiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gcmdiR2FtbWEoeSkge1xuICB2YXIgY29sb3IgPSBnYW1tYSh5KTtcblxuICBmdW5jdGlvbiByZ2Ioc3RhcnQsIGVuZCkge1xuICAgIHZhciByID0gY29sb3IoKHN0YXJ0ID0gY29sb3JSZ2Ioc3RhcnQpKS5yLCAoZW5kID0gY29sb3JSZ2IoZW5kKSkuciksXG4gICAgICAgIGcgPSBjb2xvcihzdGFydC5nLCBlbmQuZyksXG4gICAgICAgIGIgPSBjb2xvcihzdGFydC5iLCBlbmQuYiksXG4gICAgICAgIG9wYWNpdHkgPSBub2dhbW1hKHN0YXJ0Lm9wYWNpdHksIGVuZC5vcGFjaXR5KTtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgc3RhcnQuciA9IHIodCk7XG4gICAgICBzdGFydC5nID0gZyh0KTtcbiAgICAgIHN0YXJ0LmIgPSBiKHQpO1xuICAgICAgc3RhcnQub3BhY2l0eSA9IG9wYWNpdHkodCk7XG4gICAgICByZXR1cm4gc3RhcnQgKyBcIlwiO1xuICAgIH07XG4gIH1cblxuICByZ2IuZ2FtbWEgPSByZ2JHYW1tYTtcblxuICByZXR1cm4gcmdiO1xufSkoMSk7XG5cbmZ1bmN0aW9uIHJnYlNwbGluZShzcGxpbmUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGNvbG9ycykge1xuICAgIHZhciBuID0gY29sb3JzLmxlbmd0aCxcbiAgICAgICAgciA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgZyA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgYiA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgaSwgY29sb3I7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgY29sb3IgPSBjb2xvclJnYihjb2xvcnNbaV0pO1xuICAgICAgcltpXSA9IGNvbG9yLnIgfHwgMDtcbiAgICAgIGdbaV0gPSBjb2xvci5nIHx8IDA7XG4gICAgICBiW2ldID0gY29sb3IuYiB8fCAwO1xuICAgIH1cbiAgICByID0gc3BsaW5lKHIpO1xuICAgIGcgPSBzcGxpbmUoZyk7XG4gICAgYiA9IHNwbGluZShiKTtcbiAgICBjb2xvci5vcGFjaXR5ID0gMTtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgY29sb3IuciA9IHIodCk7XG4gICAgICBjb2xvci5nID0gZyh0KTtcbiAgICAgIGNvbG9yLmIgPSBiKHQpO1xuICAgICAgcmV0dXJuIGNvbG9yICsgXCJcIjtcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgdmFyIHJnYkJhc2lzID0gcmdiU3BsaW5lKGJhc2lzKTtcbmV4cG9ydCB2YXIgcmdiQmFzaXNDbG9zZWQgPSByZ2JTcGxpbmUoYmFzaXNDbG9zZWQpO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICByZXR1cm4gYSA9ICthLCBiIC09IGEsIGZ1bmN0aW9uKHQpIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChhICsgYiAqIHQpO1xuICB9O1xufVxuIiwiaW1wb3J0IG51bWJlciBmcm9tIFwiLi9udW1iZXJcIjtcblxudmFyIHJlQSA9IC9bLStdPyg/OlxcZCtcXC4/XFxkKnxcXC4/XFxkKykoPzpbZUVdWy0rXT9cXGQrKT8vZyxcbiAgICByZUIgPSBuZXcgUmVnRXhwKHJlQS5zb3VyY2UsIFwiZ1wiKTtcblxuZnVuY3Rpb24gemVybyhiKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gYjtcbiAgfTtcbn1cblxuZnVuY3Rpb24gb25lKGIpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICByZXR1cm4gYih0KSArIFwiXCI7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIGJpID0gcmVBLmxhc3RJbmRleCA9IHJlQi5sYXN0SW5kZXggPSAwLCAvLyBzY2FuIGluZGV4IGZvciBuZXh0IG51bWJlciBpbiBiXG4gICAgICBhbSwgLy8gY3VycmVudCBtYXRjaCBpbiBhXG4gICAgICBibSwgLy8gY3VycmVudCBtYXRjaCBpbiBiXG4gICAgICBicywgLy8gc3RyaW5nIHByZWNlZGluZyBjdXJyZW50IG51bWJlciBpbiBiLCBpZiBhbnlcbiAgICAgIGkgPSAtMSwgLy8gaW5kZXggaW4gc1xuICAgICAgcyA9IFtdLCAvLyBzdHJpbmcgY29uc3RhbnRzIGFuZCBwbGFjZWhvbGRlcnNcbiAgICAgIHEgPSBbXTsgLy8gbnVtYmVyIGludGVycG9sYXRvcnNcblxuICAvLyBDb2VyY2UgaW5wdXRzIHRvIHN0cmluZ3MuXG4gIGEgPSBhICsgXCJcIiwgYiA9IGIgKyBcIlwiO1xuXG4gIC8vIEludGVycG9sYXRlIHBhaXJzIG9mIG51bWJlcnMgaW4gYSAmIGIuXG4gIHdoaWxlICgoYW0gPSByZUEuZXhlYyhhKSlcbiAgICAgICYmIChibSA9IHJlQi5leGVjKGIpKSkge1xuICAgIGlmICgoYnMgPSBibS5pbmRleCkgPiBiaSkgeyAvLyBhIHN0cmluZyBwcmVjZWRlcyB0aGUgbmV4dCBudW1iZXIgaW4gYlxuICAgICAgYnMgPSBiLnNsaWNlKGJpLCBicyk7XG4gICAgICBpZiAoc1tpXSkgc1tpXSArPSBiczsgLy8gY29hbGVzY2Ugd2l0aCBwcmV2aW91cyBzdHJpbmdcbiAgICAgIGVsc2Ugc1srK2ldID0gYnM7XG4gICAgfVxuICAgIGlmICgoYW0gPSBhbVswXSkgPT09IChibSA9IGJtWzBdKSkgeyAvLyBudW1iZXJzIGluIGEgJiBiIG1hdGNoXG4gICAgICBpZiAoc1tpXSkgc1tpXSArPSBibTsgLy8gY29hbGVzY2Ugd2l0aCBwcmV2aW91cyBzdHJpbmdcbiAgICAgIGVsc2Ugc1srK2ldID0gYm07XG4gICAgfSBlbHNlIHsgLy8gaW50ZXJwb2xhdGUgbm9uLW1hdGNoaW5nIG51bWJlcnNcbiAgICAgIHNbKytpXSA9IG51bGw7XG4gICAgICBxLnB1c2goe2k6IGksIHg6IG51bWJlcihhbSwgYm0pfSk7XG4gICAgfVxuICAgIGJpID0gcmVCLmxhc3RJbmRleDtcbiAgfVxuXG4gIC8vIEFkZCByZW1haW5zIG9mIGIuXG4gIGlmIChiaSA8IGIubGVuZ3RoKSB7XG4gICAgYnMgPSBiLnNsaWNlKGJpKTtcbiAgICBpZiAoc1tpXSkgc1tpXSArPSBiczsgLy8gY29hbGVzY2Ugd2l0aCBwcmV2aW91cyBzdHJpbmdcbiAgICBlbHNlIHNbKytpXSA9IGJzO1xuICB9XG5cbiAgLy8gU3BlY2lhbCBvcHRpbWl6YXRpb24gZm9yIG9ubHkgYSBzaW5nbGUgbWF0Y2guXG4gIC8vIE90aGVyd2lzZSwgaW50ZXJwb2xhdGUgZWFjaCBvZiB0aGUgbnVtYmVycyBhbmQgcmVqb2luIHRoZSBzdHJpbmcuXG4gIHJldHVybiBzLmxlbmd0aCA8IDIgPyAocVswXVxuICAgICAgPyBvbmUocVswXS54KVxuICAgICAgOiB6ZXJvKGIpKVxuICAgICAgOiAoYiA9IHEubGVuZ3RoLCBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDAsIG87IGkgPCBiOyArK2kpIHNbKG8gPSBxW2ldKS5pXSA9IG8ueCh0KTtcbiAgICAgICAgICByZXR1cm4gcy5qb2luKFwiXCIpO1xuICAgICAgICB9KTtcbn1cbiIsInZhciBkZWdyZWVzID0gMTgwIC8gTWF0aC5QSTtcblxuZXhwb3J0IHZhciBpZGVudGl0eSA9IHtcbiAgdHJhbnNsYXRlWDogMCxcbiAgdHJhbnNsYXRlWTogMCxcbiAgcm90YXRlOiAwLFxuICBza2V3WDogMCxcbiAgc2NhbGVYOiAxLFxuICBzY2FsZVk6IDFcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgdmFyIHNjYWxlWCwgc2NhbGVZLCBza2V3WDtcbiAgaWYgKHNjYWxlWCA9IE1hdGguc3FydChhICogYSArIGIgKiBiKSkgYSAvPSBzY2FsZVgsIGIgLz0gc2NhbGVYO1xuICBpZiAoc2tld1ggPSBhICogYyArIGIgKiBkKSBjIC09IGEgKiBza2V3WCwgZCAtPSBiICogc2tld1g7XG4gIGlmIChzY2FsZVkgPSBNYXRoLnNxcnQoYyAqIGMgKyBkICogZCkpIGMgLz0gc2NhbGVZLCBkIC89IHNjYWxlWSwgc2tld1ggLz0gc2NhbGVZO1xuICBpZiAoYSAqIGQgPCBiICogYykgYSA9IC1hLCBiID0gLWIsIHNrZXdYID0gLXNrZXdYLCBzY2FsZVggPSAtc2NhbGVYO1xuICByZXR1cm4ge1xuICAgIHRyYW5zbGF0ZVg6IGUsXG4gICAgdHJhbnNsYXRlWTogZixcbiAgICByb3RhdGU6IE1hdGguYXRhbjIoYiwgYSkgKiBkZWdyZWVzLFxuICAgIHNrZXdYOiBNYXRoLmF0YW4oc2tld1gpICogZGVncmVlcyxcbiAgICBzY2FsZVg6IHNjYWxlWCxcbiAgICBzY2FsZVk6IHNjYWxlWVxuICB9O1xufVxuIiwiaW1wb3J0IG51bWJlciBmcm9tIFwiLi4vbnVtYmVyXCI7XG5pbXBvcnQge3BhcnNlQ3NzLCBwYXJzZVN2Z30gZnJvbSBcIi4vcGFyc2VcIjtcblxuZnVuY3Rpb24gaW50ZXJwb2xhdGVUcmFuc2Zvcm0ocGFyc2UsIHB4Q29tbWEsIHB4UGFyZW4sIGRlZ1BhcmVuKSB7XG5cbiAgZnVuY3Rpb24gcG9wKHMpIHtcbiAgICByZXR1cm4gcy5sZW5ndGggPyBzLnBvcCgpICsgXCIgXCIgOiBcIlwiO1xuICB9XG5cbiAgZnVuY3Rpb24gdHJhbnNsYXRlKHhhLCB5YSwgeGIsIHliLCBzLCBxKSB7XG4gICAgaWYgKHhhICE9PSB4YiB8fCB5YSAhPT0geWIpIHtcbiAgICAgIHZhciBpID0gcy5wdXNoKFwidHJhbnNsYXRlKFwiLCBudWxsLCBweENvbW1hLCBudWxsLCBweFBhcmVuKTtcbiAgICAgIHEucHVzaCh7aTogaSAtIDQsIHg6IG51bWJlcih4YSwgeGIpfSwge2k6IGkgLSAyLCB4OiBudW1iZXIoeWEsIHliKX0pO1xuICAgIH0gZWxzZSBpZiAoeGIgfHwgeWIpIHtcbiAgICAgIHMucHVzaChcInRyYW5zbGF0ZShcIiArIHhiICsgcHhDb21tYSArIHliICsgcHhQYXJlbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcm90YXRlKGEsIGIsIHMsIHEpIHtcbiAgICBpZiAoYSAhPT0gYikge1xuICAgICAgaWYgKGEgLSBiID4gMTgwKSBiICs9IDM2MDsgZWxzZSBpZiAoYiAtIGEgPiAxODApIGEgKz0gMzYwOyAvLyBzaG9ydGVzdCBwYXRoXG4gICAgICBxLnB1c2goe2k6IHMucHVzaChwb3AocykgKyBcInJvdGF0ZShcIiwgbnVsbCwgZGVnUGFyZW4pIC0gMiwgeDogbnVtYmVyKGEsIGIpfSk7XG4gICAgfSBlbHNlIGlmIChiKSB7XG4gICAgICBzLnB1c2gocG9wKHMpICsgXCJyb3RhdGUoXCIgKyBiICsgZGVnUGFyZW4pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHNrZXdYKGEsIGIsIHMsIHEpIHtcbiAgICBpZiAoYSAhPT0gYikge1xuICAgICAgcS5wdXNoKHtpOiBzLnB1c2gocG9wKHMpICsgXCJza2V3WChcIiwgbnVsbCwgZGVnUGFyZW4pIC0gMiwgeDogbnVtYmVyKGEsIGIpfSk7XG4gICAgfSBlbHNlIGlmIChiKSB7XG4gICAgICBzLnB1c2gocG9wKHMpICsgXCJza2V3WChcIiArIGIgKyBkZWdQYXJlbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc2NhbGUoeGEsIHlhLCB4YiwgeWIsIHMsIHEpIHtcbiAgICBpZiAoeGEgIT09IHhiIHx8IHlhICE9PSB5Yikge1xuICAgICAgdmFyIGkgPSBzLnB1c2gocG9wKHMpICsgXCJzY2FsZShcIiwgbnVsbCwgXCIsXCIsIG51bGwsIFwiKVwiKTtcbiAgICAgIHEucHVzaCh7aTogaSAtIDQsIHg6IG51bWJlcih4YSwgeGIpfSwge2k6IGkgLSAyLCB4OiBudW1iZXIoeWEsIHliKX0pO1xuICAgIH0gZWxzZSBpZiAoeGIgIT09IDEgfHwgeWIgIT09IDEpIHtcbiAgICAgIHMucHVzaChwb3AocykgKyBcInNjYWxlKFwiICsgeGIgKyBcIixcIiArIHliICsgXCIpXCIpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbihhLCBiKSB7XG4gICAgdmFyIHMgPSBbXSwgLy8gc3RyaW5nIGNvbnN0YW50cyBhbmQgcGxhY2Vob2xkZXJzXG4gICAgICAgIHEgPSBbXTsgLy8gbnVtYmVyIGludGVycG9sYXRvcnNcbiAgICBhID0gcGFyc2UoYSksIGIgPSBwYXJzZShiKTtcbiAgICB0cmFuc2xhdGUoYS50cmFuc2xhdGVYLCBhLnRyYW5zbGF0ZVksIGIudHJhbnNsYXRlWCwgYi50cmFuc2xhdGVZLCBzLCBxKTtcbiAgICByb3RhdGUoYS5yb3RhdGUsIGIucm90YXRlLCBzLCBxKTtcbiAgICBza2V3WChhLnNrZXdYLCBiLnNrZXdYLCBzLCBxKTtcbiAgICBzY2FsZShhLnNjYWxlWCwgYS5zY2FsZVksIGIuc2NhbGVYLCBiLnNjYWxlWSwgcywgcSk7XG4gICAgYSA9IGIgPSBudWxsOyAvLyBnY1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICB2YXIgaSA9IC0xLCBuID0gcS5sZW5ndGgsIG87XG4gICAgICB3aGlsZSAoKytpIDwgbikgc1sobyA9IHFbaV0pLmldID0gby54KHQpO1xuICAgICAgcmV0dXJuIHMuam9pbihcIlwiKTtcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgdmFyIGludGVycG9sYXRlVHJhbnNmb3JtQ3NzID0gaW50ZXJwb2xhdGVUcmFuc2Zvcm0ocGFyc2VDc3MsIFwicHgsIFwiLCBcInB4KVwiLCBcImRlZylcIik7XG5leHBvcnQgdmFyIGludGVycG9sYXRlVHJhbnNmb3JtU3ZnID0gaW50ZXJwb2xhdGVUcmFuc2Zvcm0ocGFyc2VTdmcsIFwiLCBcIiwgXCIpXCIsIFwiKVwiKTtcbiIsImltcG9ydCBkZWNvbXBvc2UsIHtpZGVudGl0eX0gZnJvbSBcIi4vZGVjb21wb3NlXCI7XG5cbnZhciBjc3NOb2RlLFxuICAgIGNzc1Jvb3QsXG4gICAgY3NzVmlldyxcbiAgICBzdmdOb2RlO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDc3ModmFsdWUpIHtcbiAgaWYgKHZhbHVlID09PSBcIm5vbmVcIikgcmV0dXJuIGlkZW50aXR5O1xuICBpZiAoIWNzc05vZGUpIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiRElWXCIpLCBjc3NSb290ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCBjc3NWaWV3ID0gZG9jdW1lbnQuZGVmYXVsdFZpZXc7XG4gIGNzc05vZGUuc3R5bGUudHJhbnNmb3JtID0gdmFsdWU7XG4gIHZhbHVlID0gY3NzVmlldy5nZXRDb21wdXRlZFN0eWxlKGNzc1Jvb3QuYXBwZW5kQ2hpbGQoY3NzTm9kZSksIG51bGwpLmdldFByb3BlcnR5VmFsdWUoXCJ0cmFuc2Zvcm1cIik7XG4gIGNzc1Jvb3QucmVtb3ZlQ2hpbGQoY3NzTm9kZSk7XG4gIHZhbHVlID0gdmFsdWUuc2xpY2UoNywgLTEpLnNwbGl0KFwiLFwiKTtcbiAgcmV0dXJuIGRlY29tcG9zZSgrdmFsdWVbMF0sICt2YWx1ZVsxXSwgK3ZhbHVlWzJdLCArdmFsdWVbM10sICt2YWx1ZVs0XSwgK3ZhbHVlWzVdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlU3ZnKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PSBudWxsKSByZXR1cm4gaWRlbnRpdHk7XG4gIGlmICghc3ZnTm9kZSkgc3ZnTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwiZ1wiKTtcbiAgc3ZnTm9kZS5zZXRBdHRyaWJ1dGUoXCJ0cmFuc2Zvcm1cIiwgdmFsdWUpO1xuICBpZiAoISh2YWx1ZSA9IHN2Z05vZGUudHJhbnNmb3JtLmJhc2VWYWwuY29uc29saWRhdGUoKSkpIHJldHVybiBpZGVudGl0eTtcbiAgdmFsdWUgPSB2YWx1ZS5tYXRyaXg7XG4gIHJldHVybiBkZWNvbXBvc2UodmFsdWUuYSwgdmFsdWUuYiwgdmFsdWUuYywgdmFsdWUuZCwgdmFsdWUuZSwgdmFsdWUuZik7XG59XG4iLCJpbXBvcnQge2NvbG9yfSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCByZ2IgZnJvbSBcIi4vcmdiXCI7XG5pbXBvcnQgYXJyYXkgZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCBkYXRlIGZyb20gXCIuL2RhdGVcIjtcbmltcG9ydCBudW1iZXIgZnJvbSBcIi4vbnVtYmVyXCI7XG5pbXBvcnQgb2JqZWN0IGZyb20gXCIuL29iamVjdFwiO1xuaW1wb3J0IHN0cmluZyBmcm9tIFwiLi9zdHJpbmdcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciB0ID0gdHlwZW9mIGIsIGM7XG4gIHJldHVybiBiID09IG51bGwgfHwgdCA9PT0gXCJib29sZWFuXCIgPyBjb25zdGFudChiKVxuICAgICAgOiAodCA9PT0gXCJudW1iZXJcIiA/IG51bWJlclxuICAgICAgOiB0ID09PSBcInN0cmluZ1wiID8gKChjID0gY29sb3IoYikpID8gKGIgPSBjLCByZ2IpIDogc3RyaW5nKVxuICAgICAgOiBiIGluc3RhbmNlb2YgY29sb3IgPyByZ2JcbiAgICAgIDogYiBpbnN0YW5jZW9mIERhdGUgPyBkYXRlXG4gICAgICA6IEFycmF5LmlzQXJyYXkoYikgPyBhcnJheVxuICAgICAgOiB0eXBlb2YgYi52YWx1ZU9mICE9PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIGIudG9TdHJpbmcgIT09IFwiZnVuY3Rpb25cIiB8fCBpc05hTihiKSA/IG9iamVjdFxuICAgICAgOiBudW1iZXIpKGEsIGIpO1xufVxuIiwidmFyIHJobyA9IE1hdGguU1FSVDIsXG4gICAgcmhvMiA9IDIsXG4gICAgcmhvNCA9IDQsXG4gICAgZXBzaWxvbjIgPSAxZS0xMjtcblxuZnVuY3Rpb24gY29zaCh4KSB7XG4gIHJldHVybiAoKHggPSBNYXRoLmV4cCh4KSkgKyAxIC8geCkgLyAyO1xufVxuXG5mdW5jdGlvbiBzaW5oKHgpIHtcbiAgcmV0dXJuICgoeCA9IE1hdGguZXhwKHgpKSAtIDEgLyB4KSAvIDI7XG59XG5cbmZ1bmN0aW9uIHRhbmgoeCkge1xuICByZXR1cm4gKCh4ID0gTWF0aC5leHAoMiAqIHgpKSAtIDEpIC8gKHggKyAxKTtcbn1cblxuLy8gcDAgPSBbdXgwLCB1eTAsIHcwXVxuLy8gcDEgPSBbdXgxLCB1eTEsIHcxXVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocDAsIHAxKSB7XG4gIHZhciB1eDAgPSBwMFswXSwgdXkwID0gcDBbMV0sIHcwID0gcDBbMl0sXG4gICAgICB1eDEgPSBwMVswXSwgdXkxID0gcDFbMV0sIHcxID0gcDFbMl0sXG4gICAgICBkeCA9IHV4MSAtIHV4MCxcbiAgICAgIGR5ID0gdXkxIC0gdXkwLFxuICAgICAgZDIgPSBkeCAqIGR4ICsgZHkgKiBkeSxcbiAgICAgIGksXG4gICAgICBTO1xuXG4gIC8vIFNwZWNpYWwgY2FzZSBmb3IgdTAg4omFIHUxLlxuICBpZiAoZDIgPCBlcHNpbG9uMikge1xuICAgIFMgPSBNYXRoLmxvZyh3MSAvIHcwKSAvIHJobztcbiAgICBpID0gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIFtcbiAgICAgICAgdXgwICsgdCAqIGR4LFxuICAgICAgICB1eTAgKyB0ICogZHksXG4gICAgICAgIHcwICogTWF0aC5leHAocmhvICogdCAqIFMpXG4gICAgICBdO1xuICAgIH1cbiAgfVxuXG4gIC8vIEdlbmVyYWwgY2FzZS5cbiAgZWxzZSB7XG4gICAgdmFyIGQxID0gTWF0aC5zcXJ0KGQyKSxcbiAgICAgICAgYjAgPSAodzEgKiB3MSAtIHcwICogdzAgKyByaG80ICogZDIpIC8gKDIgKiB3MCAqIHJobzIgKiBkMSksXG4gICAgICAgIGIxID0gKHcxICogdzEgLSB3MCAqIHcwIC0gcmhvNCAqIGQyKSAvICgyICogdzEgKiByaG8yICogZDEpLFxuICAgICAgICByMCA9IE1hdGgubG9nKE1hdGguc3FydChiMCAqIGIwICsgMSkgLSBiMCksXG4gICAgICAgIHIxID0gTWF0aC5sb2coTWF0aC5zcXJ0KGIxICogYjEgKyAxKSAtIGIxKTtcbiAgICBTID0gKHIxIC0gcjApIC8gcmhvO1xuICAgIGkgPSBmdW5jdGlvbih0KSB7XG4gICAgICB2YXIgcyA9IHQgKiBTLFxuICAgICAgICAgIGNvc2hyMCA9IGNvc2gocjApLFxuICAgICAgICAgIHUgPSB3MCAvIChyaG8yICogZDEpICogKGNvc2hyMCAqIHRhbmgocmhvICogcyArIHIwKSAtIHNpbmgocjApKTtcbiAgICAgIHJldHVybiBbXG4gICAgICAgIHV4MCArIHUgKiBkeCxcbiAgICAgICAgdXkwICsgdSAqIGR5LFxuICAgICAgICB3MCAqIGNvc2hyMCAvIGNvc2gocmhvICogcyArIHIwKVxuICAgICAgXTtcbiAgICB9XG4gIH1cblxuICBpLmR1cmF0aW9uID0gUyAqIDEwMDA7XG5cbiAgcmV0dXJuIGk7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgcGF0aH0gZnJvbSBcIi4vcGF0aFwiO1xuIiwidmFyIHBpID0gTWF0aC5QSSxcbiAgICB0YXUgPSAyICogcGksXG4gICAgZXBzaWxvbiA9IDFlLTYsXG4gICAgdGF1RXBzaWxvbiA9IHRhdSAtIGVwc2lsb247XG5cbmZ1bmN0aW9uIFBhdGgoKSB7XG4gIHRoaXMuX3gwID0gdGhpcy5feTAgPSAvLyBzdGFydCBvZiBjdXJyZW50IHN1YnBhdGhcbiAgdGhpcy5feDEgPSB0aGlzLl95MSA9IG51bGw7IC8vIGVuZCBvZiBjdXJyZW50IHN1YnBhdGhcbiAgdGhpcy5fID0gXCJcIjtcbn1cblxuZnVuY3Rpb24gcGF0aCgpIHtcbiAgcmV0dXJuIG5ldyBQYXRoO1xufVxuXG5QYXRoLnByb3RvdHlwZSA9IHBhdGgucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogUGF0aCxcbiAgbW92ZVRvOiBmdW5jdGlvbih4LCB5KSB7XG4gICAgdGhpcy5fICs9IFwiTVwiICsgKHRoaXMuX3gwID0gdGhpcy5feDEgPSAreCkgKyBcIixcIiArICh0aGlzLl95MCA9IHRoaXMuX3kxID0gK3kpO1xuICB9LFxuICBjbG9zZVBhdGg6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl94MSAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5feDEgPSB0aGlzLl94MCwgdGhpcy5feTEgPSB0aGlzLl95MDtcbiAgICAgIHRoaXMuXyArPSBcIlpcIjtcbiAgICB9XG4gIH0sXG4gIGxpbmVUbzogZnVuY3Rpb24oeCwgeSkge1xuICAgIHRoaXMuXyArPSBcIkxcIiArICh0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kxID0gK3kpO1xuICB9LFxuICBxdWFkcmF0aWNDdXJ2ZVRvOiBmdW5jdGlvbih4MSwgeTEsIHgsIHkpIHtcbiAgICB0aGlzLl8gKz0gXCJRXCIgKyAoK3gxKSArIFwiLFwiICsgKCt5MSkgKyBcIixcIiArICh0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kxID0gK3kpO1xuICB9LFxuICBiZXppZXJDdXJ2ZVRvOiBmdW5jdGlvbih4MSwgeTEsIHgyLCB5MiwgeCwgeSkge1xuICAgIHRoaXMuXyArPSBcIkNcIiArICgreDEpICsgXCIsXCIgKyAoK3kxKSArIFwiLFwiICsgKCt4MikgKyBcIixcIiArICgreTIpICsgXCIsXCIgKyAodGhpcy5feDEgPSAreCkgKyBcIixcIiArICh0aGlzLl95MSA9ICt5KTtcbiAgfSxcbiAgYXJjVG86IGZ1bmN0aW9uKHgxLCB5MSwgeDIsIHkyLCByKSB7XG4gICAgeDEgPSAreDEsIHkxID0gK3kxLCB4MiA9ICt4MiwgeTIgPSAreTIsIHIgPSArcjtcbiAgICB2YXIgeDAgPSB0aGlzLl94MSxcbiAgICAgICAgeTAgPSB0aGlzLl95MSxcbiAgICAgICAgeDIxID0geDIgLSB4MSxcbiAgICAgICAgeTIxID0geTIgLSB5MSxcbiAgICAgICAgeDAxID0geDAgLSB4MSxcbiAgICAgICAgeTAxID0geTAgLSB5MSxcbiAgICAgICAgbDAxXzIgPSB4MDEgKiB4MDEgKyB5MDEgKiB5MDE7XG5cbiAgICAvLyBJcyB0aGUgcmFkaXVzIG5lZ2F0aXZlPyBFcnJvci5cbiAgICBpZiAociA8IDApIHRocm93IG5ldyBFcnJvcihcIm5lZ2F0aXZlIHJhZGl1czogXCIgKyByKTtcblxuICAgIC8vIElzIHRoaXMgcGF0aCBlbXB0eT8gTW92ZSB0byAoeDEseTEpLlxuICAgIGlmICh0aGlzLl94MSA9PT0gbnVsbCkge1xuICAgICAgdGhpcy5fICs9IFwiTVwiICsgKHRoaXMuX3gxID0geDEpICsgXCIsXCIgKyAodGhpcy5feTEgPSB5MSk7XG4gICAgfVxuXG4gICAgLy8gT3IsIGlzICh4MSx5MSkgY29pbmNpZGVudCB3aXRoICh4MCx5MCk/IERvIG5vdGhpbmcuXG4gICAgZWxzZSBpZiAoIShsMDFfMiA+IGVwc2lsb24pKTtcblxuICAgIC8vIE9yLCBhcmUgKHgwLHkwKSwgKHgxLHkxKSBhbmQgKHgyLHkyKSBjb2xsaW5lYXI/XG4gICAgLy8gRXF1aXZhbGVudGx5LCBpcyAoeDEseTEpIGNvaW5jaWRlbnQgd2l0aCAoeDIseTIpP1xuICAgIC8vIE9yLCBpcyB0aGUgcmFkaXVzIHplcm8/IExpbmUgdG8gKHgxLHkxKS5cbiAgICBlbHNlIGlmICghKE1hdGguYWJzKHkwMSAqIHgyMSAtIHkyMSAqIHgwMSkgPiBlcHNpbG9uKSB8fCAhcikge1xuICAgICAgdGhpcy5fICs9IFwiTFwiICsgKHRoaXMuX3gxID0geDEpICsgXCIsXCIgKyAodGhpcy5feTEgPSB5MSk7XG4gICAgfVxuXG4gICAgLy8gT3RoZXJ3aXNlLCBkcmF3IGFuIGFyYyFcbiAgICBlbHNlIHtcbiAgICAgIHZhciB4MjAgPSB4MiAtIHgwLFxuICAgICAgICAgIHkyMCA9IHkyIC0geTAsXG4gICAgICAgICAgbDIxXzIgPSB4MjEgKiB4MjEgKyB5MjEgKiB5MjEsXG4gICAgICAgICAgbDIwXzIgPSB4MjAgKiB4MjAgKyB5MjAgKiB5MjAsXG4gICAgICAgICAgbDIxID0gTWF0aC5zcXJ0KGwyMV8yKSxcbiAgICAgICAgICBsMDEgPSBNYXRoLnNxcnQobDAxXzIpLFxuICAgICAgICAgIGwgPSByICogTWF0aC50YW4oKHBpIC0gTWF0aC5hY29zKChsMjFfMiArIGwwMV8yIC0gbDIwXzIpIC8gKDIgKiBsMjEgKiBsMDEpKSkgLyAyKSxcbiAgICAgICAgICB0MDEgPSBsIC8gbDAxLFxuICAgICAgICAgIHQyMSA9IGwgLyBsMjE7XG5cbiAgICAgIC8vIElmIHRoZSBzdGFydCB0YW5nZW50IGlzIG5vdCBjb2luY2lkZW50IHdpdGggKHgwLHkwKSwgbGluZSB0by5cbiAgICAgIGlmIChNYXRoLmFicyh0MDEgLSAxKSA+IGVwc2lsb24pIHtcbiAgICAgICAgdGhpcy5fICs9IFwiTFwiICsgKHgxICsgdDAxICogeDAxKSArIFwiLFwiICsgKHkxICsgdDAxICogeTAxKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fICs9IFwiQVwiICsgciArIFwiLFwiICsgciArIFwiLDAsMCxcIiArICgrKHkwMSAqIHgyMCA+IHgwMSAqIHkyMCkpICsgXCIsXCIgKyAodGhpcy5feDEgPSB4MSArIHQyMSAqIHgyMSkgKyBcIixcIiArICh0aGlzLl95MSA9IHkxICsgdDIxICogeTIxKTtcbiAgICB9XG4gIH0sXG4gIGFyYzogZnVuY3Rpb24oeCwgeSwgciwgYTAsIGExLCBjY3cpIHtcbiAgICB4ID0gK3gsIHkgPSAreSwgciA9ICtyO1xuICAgIHZhciBkeCA9IHIgKiBNYXRoLmNvcyhhMCksXG4gICAgICAgIGR5ID0gciAqIE1hdGguc2luKGEwKSxcbiAgICAgICAgeDAgPSB4ICsgZHgsXG4gICAgICAgIHkwID0geSArIGR5LFxuICAgICAgICBjdyA9IDEgXiBjY3csXG4gICAgICAgIGRhID0gY2N3ID8gYTAgLSBhMSA6IGExIC0gYTA7XG5cbiAgICAvLyBJcyB0aGUgcmFkaXVzIG5lZ2F0aXZlPyBFcnJvci5cbiAgICBpZiAociA8IDApIHRocm93IG5ldyBFcnJvcihcIm5lZ2F0aXZlIHJhZGl1czogXCIgKyByKTtcblxuICAgIC8vIElzIHRoaXMgcGF0aCBlbXB0eT8gTW92ZSB0byAoeDAseTApLlxuICAgIGlmICh0aGlzLl94MSA9PT0gbnVsbCkge1xuICAgICAgdGhpcy5fICs9IFwiTVwiICsgeDAgKyBcIixcIiArIHkwO1xuICAgIH1cblxuICAgIC8vIE9yLCBpcyAoeDAseTApIG5vdCBjb2luY2lkZW50IHdpdGggdGhlIHByZXZpb3VzIHBvaW50PyBMaW5lIHRvICh4MCx5MCkuXG4gICAgZWxzZSBpZiAoTWF0aC5hYnModGhpcy5feDEgLSB4MCkgPiBlcHNpbG9uIHx8IE1hdGguYWJzKHRoaXMuX3kxIC0geTApID4gZXBzaWxvbikge1xuICAgICAgdGhpcy5fICs9IFwiTFwiICsgeDAgKyBcIixcIiArIHkwO1xuICAgIH1cblxuICAgIC8vIElzIHRoaXMgYXJjIGVtcHR5PyBXZeKAmXJlIGRvbmUuXG4gICAgaWYgKCFyKSByZXR1cm47XG5cbiAgICAvLyBEb2VzIHRoZSBhbmdsZSBnbyB0aGUgd3Jvbmcgd2F5PyBGbGlwIHRoZSBkaXJlY3Rpb24uXG4gICAgaWYgKGRhIDwgMCkgZGEgPSBkYSAlIHRhdSArIHRhdTtcblxuICAgIC8vIElzIHRoaXMgYSBjb21wbGV0ZSBjaXJjbGU/IERyYXcgdHdvIGFyY3MgdG8gY29tcGxldGUgdGhlIGNpcmNsZS5cbiAgICBpZiAoZGEgPiB0YXVFcHNpbG9uKSB7XG4gICAgICB0aGlzLl8gKz0gXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIsMCwxLFwiICsgY3cgKyBcIixcIiArICh4IC0gZHgpICsgXCIsXCIgKyAoeSAtIGR5KSArIFwiQVwiICsgciArIFwiLFwiICsgciArIFwiLDAsMSxcIiArIGN3ICsgXCIsXCIgKyAodGhpcy5feDEgPSB4MCkgKyBcIixcIiArICh0aGlzLl95MSA9IHkwKTtcbiAgICB9XG5cbiAgICAvLyBJcyB0aGlzIGFyYyBub24tZW1wdHk/IERyYXcgYW4gYXJjIVxuICAgIGVsc2UgaWYgKGRhID4gZXBzaWxvbikge1xuICAgICAgdGhpcy5fICs9IFwiQVwiICsgciArIFwiLFwiICsgciArIFwiLDAsXCIgKyAoKyhkYSA+PSBwaSkpICsgXCIsXCIgKyBjdyArIFwiLFwiICsgKHRoaXMuX3gxID0geCArIHIgKiBNYXRoLmNvcyhhMSkpICsgXCIsXCIgKyAodGhpcy5feTEgPSB5ICsgciAqIE1hdGguc2luKGExKSk7XG4gICAgfVxuICB9LFxuICByZWN0OiBmdW5jdGlvbih4LCB5LCB3LCBoKSB7XG4gICAgdGhpcy5fICs9IFwiTVwiICsgKHRoaXMuX3gwID0gdGhpcy5feDEgPSAreCkgKyBcIixcIiArICh0aGlzLl95MCA9IHRoaXMuX3kxID0gK3kpICsgXCJoXCIgKyAoK3cpICsgXCJ2XCIgKyAoK2gpICsgXCJoXCIgKyAoLXcpICsgXCJaXCI7XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBwYXRoO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocG9seWdvbikge1xuICB2YXIgaSA9IC0xLFxuICAgICAgbiA9IHBvbHlnb24ubGVuZ3RoLFxuICAgICAgYSxcbiAgICAgIGIgPSBwb2x5Z29uW24gLSAxXSxcbiAgICAgIGFyZWEgPSAwO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgYSA9IGI7XG4gICAgYiA9IHBvbHlnb25baV07XG4gICAgYXJlYSArPSBhWzFdICogYlswXSAtIGFbMF0gKiBiWzFdO1xuICB9XG5cbiAgcmV0dXJuIGFyZWEgLyAyO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocG9seWdvbikge1xuICB2YXIgaSA9IC0xLFxuICAgICAgbiA9IHBvbHlnb24ubGVuZ3RoLFxuICAgICAgeCA9IDAsXG4gICAgICB5ID0gMCxcbiAgICAgIGEsXG4gICAgICBiID0gcG9seWdvbltuIC0gMV0sXG4gICAgICBjLFxuICAgICAgayA9IDA7XG5cbiAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICBhID0gYjtcbiAgICBiID0gcG9seWdvbltpXTtcbiAgICBrICs9IGMgPSBhWzBdICogYlsxXSAtIGJbMF0gKiBhWzFdO1xuICAgIHggKz0gKGFbMF0gKyBiWzBdKSAqIGM7XG4gICAgeSArPSAoYVsxXSArIGJbMV0pICogYztcbiAgfVxuXG4gIHJldHVybiBrICo9IDMsIFt4IC8gaywgeSAvIGtdO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocG9seWdvbiwgcG9pbnQpIHtcbiAgdmFyIG4gPSBwb2x5Z29uLmxlbmd0aCxcbiAgICAgIHAgPSBwb2x5Z29uW24gLSAxXSxcbiAgICAgIHggPSBwb2ludFswXSwgeSA9IHBvaW50WzFdLFxuICAgICAgeDAgPSBwWzBdLCB5MCA9IHBbMV0sXG4gICAgICB4MSwgeTEsXG4gICAgICBpbnNpZGUgPSBmYWxzZTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IG47ICsraSkge1xuICAgIHAgPSBwb2x5Z29uW2ldLCB4MSA9IHBbMF0sIHkxID0gcFsxXTtcbiAgICBpZiAoKCh5MSA+IHkpICE9PSAoeTAgPiB5KSkgJiYgKHggPCAoeDAgLSB4MSkgKiAoeSAtIHkxKSAvICh5MCAtIHkxKSArIHgxKSkgaW5zaWRlID0gIWluc2lkZTtcbiAgICB4MCA9IHgxLCB5MCA9IHkxO1xuICB9XG5cbiAgcmV0dXJuIGluc2lkZTtcbn1cbiIsIi8vIFJldHVybnMgdGhlIDJEIGNyb3NzIHByb2R1Y3Qgb2YgQUIgYW5kIEFDIHZlY3RvcnMsIGkuZS4sIHRoZSB6LWNvbXBvbmVudCBvZlxuLy8gdGhlIDNEIGNyb3NzIHByb2R1Y3QgaW4gYSBxdWFkcmFudCBJIENhcnRlc2lhbiBjb29yZGluYXRlIHN5c3RlbSAoK3ggaXNcbi8vIHJpZ2h0LCAreSBpcyB1cCkuIFJldHVybnMgYSBwb3NpdGl2ZSB2YWx1ZSBpZiBBQkMgaXMgY291bnRlci1jbG9ja3dpc2UsXG4vLyBuZWdhdGl2ZSBpZiBjbG9ja3dpc2UsIGFuZCB6ZXJvIGlmIHRoZSBwb2ludHMgYXJlIGNvbGxpbmVhci5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIsIGMpIHtcbiAgcmV0dXJuIChiWzBdIC0gYVswXSkgKiAoY1sxXSAtIGFbMV0pIC0gKGJbMV0gLSBhWzFdKSAqIChjWzBdIC0gYVswXSk7XG59XG4iLCJpbXBvcnQgY3Jvc3MgZnJvbSBcIi4vY3Jvc3NcIjtcblxuZnVuY3Rpb24gbGV4aWNvZ3JhcGhpY09yZGVyKGEsIGIpIHtcbiAgcmV0dXJuIGFbMF0gLSBiWzBdIHx8IGFbMV0gLSBiWzFdO1xufVxuXG4vLyBDb21wdXRlcyB0aGUgdXBwZXIgY29udmV4IGh1bGwgcGVyIHRoZSBtb25vdG9uZSBjaGFpbiBhbGdvcml0aG0uXG4vLyBBc3N1bWVzIHBvaW50cy5sZW5ndGggPj0gMywgaXMgc29ydGVkIGJ5IHgsIHVuaXF1ZSBpbiB5LlxuLy8gUmV0dXJucyBhbiBhcnJheSBvZiBpbmRpY2VzIGludG8gcG9pbnRzIGluIGxlZnQtdG8tcmlnaHQgb3JkZXIuXG5mdW5jdGlvbiBjb21wdXRlVXBwZXJIdWxsSW5kZXhlcyhwb2ludHMpIHtcbiAgdmFyIG4gPSBwb2ludHMubGVuZ3RoLFxuICAgICAgaW5kZXhlcyA9IFswLCAxXSxcbiAgICAgIHNpemUgPSAyO1xuXG4gIGZvciAodmFyIGkgPSAyOyBpIDwgbjsgKytpKSB7XG4gICAgd2hpbGUgKHNpemUgPiAxICYmIGNyb3NzKHBvaW50c1tpbmRleGVzW3NpemUgLSAyXV0sIHBvaW50c1tpbmRleGVzW3NpemUgLSAxXV0sIHBvaW50c1tpXSkgPD0gMCkgLS1zaXplO1xuICAgIGluZGV4ZXNbc2l6ZSsrXSA9IGk7XG4gIH1cblxuICByZXR1cm4gaW5kZXhlcy5zbGljZSgwLCBzaXplKTsgLy8gcmVtb3ZlIHBvcHBlZCBwb2ludHNcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocG9pbnRzKSB7XG4gIGlmICgobiA9IHBvaW50cy5sZW5ndGgpIDwgMykgcmV0dXJuIG51bGw7XG5cbiAgdmFyIGksXG4gICAgICBuLFxuICAgICAgc29ydGVkUG9pbnRzID0gbmV3IEFycmF5KG4pLFxuICAgICAgZmxpcHBlZFBvaW50cyA9IG5ldyBBcnJheShuKTtcblxuICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBzb3J0ZWRQb2ludHNbaV0gPSBbK3BvaW50c1tpXVswXSwgK3BvaW50c1tpXVsxXSwgaV07XG4gIHNvcnRlZFBvaW50cy5zb3J0KGxleGljb2dyYXBoaWNPcmRlcik7XG4gIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIGZsaXBwZWRQb2ludHNbaV0gPSBbc29ydGVkUG9pbnRzW2ldWzBdLCAtc29ydGVkUG9pbnRzW2ldWzFdXTtcblxuICB2YXIgdXBwZXJJbmRleGVzID0gY29tcHV0ZVVwcGVySHVsbEluZGV4ZXMoc29ydGVkUG9pbnRzKSxcbiAgICAgIGxvd2VySW5kZXhlcyA9IGNvbXB1dGVVcHBlckh1bGxJbmRleGVzKGZsaXBwZWRQb2ludHMpO1xuXG4gIC8vIENvbnN0cnVjdCB0aGUgaHVsbCBwb2x5Z29uLCByZW1vdmluZyBwb3NzaWJsZSBkdXBsaWNhdGUgZW5kcG9pbnRzLlxuICB2YXIgc2tpcExlZnQgPSBsb3dlckluZGV4ZXNbMF0gPT09IHVwcGVySW5kZXhlc1swXSxcbiAgICAgIHNraXBSaWdodCA9IGxvd2VySW5kZXhlc1tsb3dlckluZGV4ZXMubGVuZ3RoIC0gMV0gPT09IHVwcGVySW5kZXhlc1t1cHBlckluZGV4ZXMubGVuZ3RoIC0gMV0sXG4gICAgICBodWxsID0gW107XG5cbiAgLy8gQWRkIHVwcGVyIGh1bGwgaW4gcmlnaHQtdG8tbCBvcmRlci5cbiAgLy8gVGhlbiBhZGQgbG93ZXIgaHVsbCBpbiBsZWZ0LXRvLXJpZ2h0IG9yZGVyLlxuICBmb3IgKGkgPSB1cHBlckluZGV4ZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIGh1bGwucHVzaChwb2ludHNbc29ydGVkUG9pbnRzW3VwcGVySW5kZXhlc1tpXV1bMl1dKTtcbiAgZm9yIChpID0gK3NraXBMZWZ0OyBpIDwgbG93ZXJJbmRleGVzLmxlbmd0aCAtIHNraXBSaWdodDsgKytpKSBodWxsLnB1c2gocG9pbnRzW3NvcnRlZFBvaW50c1tsb3dlckluZGV4ZXNbaV1dWzJdXSk7XG5cbiAgcmV0dXJuIGh1bGw7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgcG9seWdvbkFyZWF9IGZyb20gXCIuL2FyZWFcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwb2x5Z29uQ2VudHJvaWR9IGZyb20gXCIuL2NlbnRyb2lkXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcG9seWdvbkh1bGx9IGZyb20gXCIuL2h1bGxcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwb2x5Z29uQ29udGFpbnN9IGZyb20gXCIuL2NvbnRhaW5zXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcG9seWdvbkxlbmd0aH0gZnJvbSBcIi4vbGVuZ3RoXCI7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwb2x5Z29uKSB7XG4gIHZhciBpID0gLTEsXG4gICAgICBuID0gcG9seWdvbi5sZW5ndGgsXG4gICAgICBiID0gcG9seWdvbltuIC0gMV0sXG4gICAgICB4YSxcbiAgICAgIHlhLFxuICAgICAgeGIgPSBiWzBdLFxuICAgICAgeWIgPSBiWzFdLFxuICAgICAgcGVyaW1ldGVyID0gMDtcblxuICB3aGlsZSAoKytpIDwgbikge1xuICAgIHhhID0geGI7XG4gICAgeWEgPSB5YjtcbiAgICBiID0gcG9seWdvbltpXTtcbiAgICB4YiA9IGJbMF07XG4gICAgeWIgPSBiWzFdO1xuICAgIHhhIC09IHhiO1xuICAgIHlhIC09IHliO1xuICAgIHBlcmltZXRlciArPSBNYXRoLnNxcnQoeGEgKiB4YSArIHlhICogeWEpO1xuICB9XG5cbiAgcmV0dXJuIHBlcmltZXRlcjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGQpIHtcbiAgdmFyIHggPSArdGhpcy5feC5jYWxsKG51bGwsIGQpLFxuICAgICAgeSA9ICt0aGlzLl95LmNhbGwobnVsbCwgZCk7XG4gIHJldHVybiBhZGQodGhpcy5jb3Zlcih4LCB5KSwgeCwgeSwgZCk7XG59XG5cbmZ1bmN0aW9uIGFkZCh0cmVlLCB4LCB5LCBkKSB7XG4gIGlmIChpc05hTih4KSB8fCBpc05hTih5KSkgcmV0dXJuIHRyZWU7IC8vIGlnbm9yZSBpbnZhbGlkIHBvaW50c1xuXG4gIHZhciBwYXJlbnQsXG4gICAgICBub2RlID0gdHJlZS5fcm9vdCxcbiAgICAgIGxlYWYgPSB7ZGF0YTogZH0sXG4gICAgICB4MCA9IHRyZWUuX3gwLFxuICAgICAgeTAgPSB0cmVlLl95MCxcbiAgICAgIHgxID0gdHJlZS5feDEsXG4gICAgICB5MSA9IHRyZWUuX3kxLFxuICAgICAgeG0sXG4gICAgICB5bSxcbiAgICAgIHhwLFxuICAgICAgeXAsXG4gICAgICByaWdodCxcbiAgICAgIGJvdHRvbSxcbiAgICAgIGksXG4gICAgICBqO1xuXG4gIC8vIElmIHRoZSB0cmVlIGlzIGVtcHR5LCBpbml0aWFsaXplIHRoZSByb290IGFzIGEgbGVhZi5cbiAgaWYgKCFub2RlKSByZXR1cm4gdHJlZS5fcm9vdCA9IGxlYWYsIHRyZWU7XG5cbiAgLy8gRmluZCB0aGUgZXhpc3RpbmcgbGVhZiBmb3IgdGhlIG5ldyBwb2ludCwgb3IgYWRkIGl0LlxuICB3aGlsZSAobm9kZS5sZW5ndGgpIHtcbiAgICBpZiAocmlnaHQgPSB4ID49ICh4bSA9ICh4MCArIHgxKSAvIDIpKSB4MCA9IHhtOyBlbHNlIHgxID0geG07XG4gICAgaWYgKGJvdHRvbSA9IHkgPj0gKHltID0gKHkwICsgeTEpIC8gMikpIHkwID0geW07IGVsc2UgeTEgPSB5bTtcbiAgICBpZiAocGFyZW50ID0gbm9kZSwgIShub2RlID0gbm9kZVtpID0gYm90dG9tIDw8IDEgfCByaWdodF0pKSByZXR1cm4gcGFyZW50W2ldID0gbGVhZiwgdHJlZTtcbiAgfVxuXG4gIC8vIElzIHRoZSBuZXcgcG9pbnQgaXMgZXhhY3RseSBjb2luY2lkZW50IHdpdGggdGhlIGV4aXN0aW5nIHBvaW50P1xuICB4cCA9ICt0cmVlLl94LmNhbGwobnVsbCwgbm9kZS5kYXRhKTtcbiAgeXAgPSArdHJlZS5feS5jYWxsKG51bGwsIG5vZGUuZGF0YSk7XG4gIGlmICh4ID09PSB4cCAmJiB5ID09PSB5cCkgcmV0dXJuIGxlYWYubmV4dCA9IG5vZGUsIHBhcmVudCA/IHBhcmVudFtpXSA9IGxlYWYgOiB0cmVlLl9yb290ID0gbGVhZiwgdHJlZTtcblxuICAvLyBPdGhlcndpc2UsIHNwbGl0IHRoZSBsZWFmIG5vZGUgdW50aWwgdGhlIG9sZCBhbmQgbmV3IHBvaW50IGFyZSBzZXBhcmF0ZWQuXG4gIGRvIHtcbiAgICBwYXJlbnQgPSBwYXJlbnQgPyBwYXJlbnRbaV0gPSBuZXcgQXJyYXkoNCkgOiB0cmVlLl9yb290ID0gbmV3IEFycmF5KDQpO1xuICAgIGlmIChyaWdodCA9IHggPj0gKHhtID0gKHgwICsgeDEpIC8gMikpIHgwID0geG07IGVsc2UgeDEgPSB4bTtcbiAgICBpZiAoYm90dG9tID0geSA+PSAoeW0gPSAoeTAgKyB5MSkgLyAyKSkgeTAgPSB5bTsgZWxzZSB5MSA9IHltO1xuICB9IHdoaWxlICgoaSA9IGJvdHRvbSA8PCAxIHwgcmlnaHQpID09PSAoaiA9ICh5cCA+PSB5bSkgPDwgMSB8ICh4cCA+PSB4bSkpKTtcbiAgcmV0dXJuIHBhcmVudFtqXSA9IG5vZGUsIHBhcmVudFtpXSA9IGxlYWYsIHRyZWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRBbGwoZGF0YSkge1xuICB2YXIgZCwgaSwgbiA9IGRhdGEubGVuZ3RoLFxuICAgICAgeCxcbiAgICAgIHksXG4gICAgICB4eiA9IG5ldyBBcnJheShuKSxcbiAgICAgIHl6ID0gbmV3IEFycmF5KG4pLFxuICAgICAgeDAgPSBJbmZpbml0eSxcbiAgICAgIHkwID0gSW5maW5pdHksXG4gICAgICB4MSA9IC1JbmZpbml0eSxcbiAgICAgIHkxID0gLUluZmluaXR5O1xuXG4gIC8vIENvbXB1dGUgdGhlIHBvaW50cyBhbmQgdGhlaXIgZXh0ZW50LlxuICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKGlzTmFOKHggPSArdGhpcy5feC5jYWxsKG51bGwsIGQgPSBkYXRhW2ldKSkgfHwgaXNOYU4oeSA9ICt0aGlzLl95LmNhbGwobnVsbCwgZCkpKSBjb250aW51ZTtcbiAgICB4eltpXSA9IHg7XG4gICAgeXpbaV0gPSB5O1xuICAgIGlmICh4IDwgeDApIHgwID0geDtcbiAgICBpZiAoeCA+IHgxKSB4MSA9IHg7XG4gICAgaWYgKHkgPCB5MCkgeTAgPSB5O1xuICAgIGlmICh5ID4geTEpIHkxID0geTtcbiAgfVxuXG4gIC8vIElmIHRoZXJlIHdlcmUgbm8gKHZhbGlkKSBwb2ludHMsIGFib3J0LlxuICBpZiAoeDAgPiB4MSB8fCB5MCA+IHkxKSByZXR1cm4gdGhpcztcblxuICAvLyBFeHBhbmQgdGhlIHRyZWUgdG8gY292ZXIgdGhlIG5ldyBwb2ludHMuXG4gIHRoaXMuY292ZXIoeDAsIHkwKS5jb3Zlcih4MSwgeTEpO1xuXG4gIC8vIEFkZCB0aGUgbmV3IHBvaW50cy5cbiAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgIGFkZCh0aGlzLCB4eltpXSwgeXpbaV0sIGRhdGFbaV0pO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4LCB5KSB7XG4gIGlmIChpc05hTih4ID0gK3gpIHx8IGlzTmFOKHkgPSAreSkpIHJldHVybiB0aGlzOyAvLyBpZ25vcmUgaW52YWxpZCBwb2ludHNcblxuICB2YXIgeDAgPSB0aGlzLl94MCxcbiAgICAgIHkwID0gdGhpcy5feTAsXG4gICAgICB4MSA9IHRoaXMuX3gxLFxuICAgICAgeTEgPSB0aGlzLl95MTtcblxuICAvLyBJZiB0aGUgcXVhZHRyZWUgaGFzIG5vIGV4dGVudCwgaW5pdGlhbGl6ZSB0aGVtLlxuICAvLyBJbnRlZ2VyIGV4dGVudCBhcmUgbmVjZXNzYXJ5IHNvIHRoYXQgaWYgd2UgbGF0ZXIgZG91YmxlIHRoZSBleHRlbnQsXG4gIC8vIHRoZSBleGlzdGluZyBxdWFkcmFudCBib3VuZGFyaWVzIGRvbuKAmXQgY2hhbmdlIGR1ZSB0byBmbG9hdGluZyBwb2ludCBlcnJvciFcbiAgaWYgKGlzTmFOKHgwKSkge1xuICAgIHgxID0gKHgwID0gTWF0aC5mbG9vcih4KSkgKyAxO1xuICAgIHkxID0gKHkwID0gTWF0aC5mbG9vcih5KSkgKyAxO1xuICB9XG5cbiAgLy8gT3RoZXJ3aXNlLCBkb3VibGUgcmVwZWF0ZWRseSB0byBjb3Zlci5cbiAgZWxzZSB7XG4gICAgdmFyIHogPSB4MSAtIHgwLFxuICAgICAgICBub2RlID0gdGhpcy5fcm9vdCxcbiAgICAgICAgcGFyZW50LFxuICAgICAgICBpO1xuXG4gICAgd2hpbGUgKHgwID4geCB8fCB4ID49IHgxIHx8IHkwID4geSB8fCB5ID49IHkxKSB7XG4gICAgICBpID0gKHkgPCB5MCkgPDwgMSB8ICh4IDwgeDApO1xuICAgICAgcGFyZW50ID0gbmV3IEFycmF5KDQpLCBwYXJlbnRbaV0gPSBub2RlLCBub2RlID0gcGFyZW50LCB6ICo9IDI7XG4gICAgICBzd2l0Y2ggKGkpIHtcbiAgICAgICAgY2FzZSAwOiB4MSA9IHgwICsgeiwgeTEgPSB5MCArIHo7IGJyZWFrO1xuICAgICAgICBjYXNlIDE6IHgwID0geDEgLSB6LCB5MSA9IHkwICsgejsgYnJlYWs7XG4gICAgICAgIGNhc2UgMjogeDEgPSB4MCArIHosIHkwID0geTEgLSB6OyBicmVhaztcbiAgICAgICAgY2FzZSAzOiB4MCA9IHgxIC0geiwgeTAgPSB5MSAtIHo7IGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0aGlzLl9yb290ICYmIHRoaXMuX3Jvb3QubGVuZ3RoKSB0aGlzLl9yb290ID0gbm9kZTtcbiAgfVxuXG4gIHRoaXMuX3gwID0geDA7XG4gIHRoaXMuX3kwID0geTA7XG4gIHRoaXMuX3gxID0geDE7XG4gIHRoaXMuX3kxID0geTE7XG4gIHJldHVybiB0aGlzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBkYXRhID0gW107XG4gIHRoaXMudmlzaXQoZnVuY3Rpb24obm9kZSkge1xuICAgIGlmICghbm9kZS5sZW5ndGgpIGRvIGRhdGEucHVzaChub2RlLmRhdGEpOyB3aGlsZSAobm9kZSA9IG5vZGUubmV4dClcbiAgfSk7XG4gIHJldHVybiBkYXRhO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oXykge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgPyB0aGlzLmNvdmVyKCtfWzBdWzBdLCArX1swXVsxXSkuY292ZXIoK19bMV1bMF0sICtfWzFdWzFdKVxuICAgICAgOiBpc05hTih0aGlzLl94MCkgPyB1bmRlZmluZWQgOiBbW3RoaXMuX3gwLCB0aGlzLl95MF0sIFt0aGlzLl94MSwgdGhpcy5feTFdXTtcbn1cbiIsImltcG9ydCBRdWFkIGZyb20gXCIuL3F1YWRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCwgeSwgcmFkaXVzKSB7XG4gIHZhciBkYXRhLFxuICAgICAgeDAgPSB0aGlzLl94MCxcbiAgICAgIHkwID0gdGhpcy5feTAsXG4gICAgICB4MSxcbiAgICAgIHkxLFxuICAgICAgeDIsXG4gICAgICB5MixcbiAgICAgIHgzID0gdGhpcy5feDEsXG4gICAgICB5MyA9IHRoaXMuX3kxLFxuICAgICAgcXVhZHMgPSBbXSxcbiAgICAgIG5vZGUgPSB0aGlzLl9yb290LFxuICAgICAgcSxcbiAgICAgIGk7XG5cbiAgaWYgKG5vZGUpIHF1YWRzLnB1c2gobmV3IFF1YWQobm9kZSwgeDAsIHkwLCB4MywgeTMpKTtcbiAgaWYgKHJhZGl1cyA9PSBudWxsKSByYWRpdXMgPSBJbmZpbml0eTtcbiAgZWxzZSB7XG4gICAgeDAgPSB4IC0gcmFkaXVzLCB5MCA9IHkgLSByYWRpdXM7XG4gICAgeDMgPSB4ICsgcmFkaXVzLCB5MyA9IHkgKyByYWRpdXM7XG4gICAgcmFkaXVzICo9IHJhZGl1cztcbiAgfVxuXG4gIHdoaWxlIChxID0gcXVhZHMucG9wKCkpIHtcblxuICAgIC8vIFN0b3Agc2VhcmNoaW5nIGlmIHRoaXMgcXVhZHJhbnQgY2Fu4oCZdCBjb250YWluIGEgY2xvc2VyIG5vZGUuXG4gICAgaWYgKCEobm9kZSA9IHEubm9kZSlcbiAgICAgICAgfHwgKHgxID0gcS54MCkgPiB4M1xuICAgICAgICB8fCAoeTEgPSBxLnkwKSA+IHkzXG4gICAgICAgIHx8ICh4MiA9IHEueDEpIDwgeDBcbiAgICAgICAgfHwgKHkyID0gcS55MSkgPCB5MCkgY29udGludWU7XG5cbiAgICAvLyBCaXNlY3QgdGhlIGN1cnJlbnQgcXVhZHJhbnQuXG4gICAgaWYgKG5vZGUubGVuZ3RoKSB7XG4gICAgICB2YXIgeG0gPSAoeDEgKyB4MikgLyAyLFxuICAgICAgICAgIHltID0gKHkxICsgeTIpIC8gMjtcblxuICAgICAgcXVhZHMucHVzaChcbiAgICAgICAgbmV3IFF1YWQobm9kZVszXSwgeG0sIHltLCB4MiwgeTIpLFxuICAgICAgICBuZXcgUXVhZChub2RlWzJdLCB4MSwgeW0sIHhtLCB5MiksXG4gICAgICAgIG5ldyBRdWFkKG5vZGVbMV0sIHhtLCB5MSwgeDIsIHltKSxcbiAgICAgICAgbmV3IFF1YWQobm9kZVswXSwgeDEsIHkxLCB4bSwgeW0pXG4gICAgICApO1xuXG4gICAgICAvLyBWaXNpdCB0aGUgY2xvc2VzdCBxdWFkcmFudCBmaXJzdC5cbiAgICAgIGlmIChpID0gKHkgPj0geW0pIDw8IDEgfCAoeCA+PSB4bSkpIHtcbiAgICAgICAgcSA9IHF1YWRzW3F1YWRzLmxlbmd0aCAtIDFdO1xuICAgICAgICBxdWFkc1txdWFkcy5sZW5ndGggLSAxXSA9IHF1YWRzW3F1YWRzLmxlbmd0aCAtIDEgLSBpXTtcbiAgICAgICAgcXVhZHNbcXVhZHMubGVuZ3RoIC0gMSAtIGldID0gcTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBWaXNpdCB0aGlzIHBvaW50LiAoVmlzaXRpbmcgY29pbmNpZGVudCBwb2ludHMgaXNu4oCZdCBuZWNlc3NhcnkhKVxuICAgIGVsc2Uge1xuICAgICAgdmFyIGR4ID0geCAtICt0aGlzLl94LmNhbGwobnVsbCwgbm9kZS5kYXRhKSxcbiAgICAgICAgICBkeSA9IHkgLSArdGhpcy5feS5jYWxsKG51bGwsIG5vZGUuZGF0YSksXG4gICAgICAgICAgZDIgPSBkeCAqIGR4ICsgZHkgKiBkeTtcbiAgICAgIGlmIChkMiA8IHJhZGl1cykge1xuICAgICAgICB2YXIgZCA9IE1hdGguc3FydChyYWRpdXMgPSBkMik7XG4gICAgICAgIHgwID0geCAtIGQsIHkwID0geSAtIGQ7XG4gICAgICAgIHgzID0geCArIGQsIHkzID0geSArIGQ7XG4gICAgICAgIGRhdGEgPSBub2RlLmRhdGE7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRhdGE7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgcXVhZHRyZWV9IGZyb20gXCIuL3F1YWR0cmVlXCI7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlLCB4MCwgeTAsIHgxLCB5MSkge1xuICB0aGlzLm5vZGUgPSBub2RlO1xuICB0aGlzLngwID0geDA7XG4gIHRoaXMueTAgPSB5MDtcbiAgdGhpcy54MSA9IHgxO1xuICB0aGlzLnkxID0geTE7XG59XG4iLCJpbXBvcnQgdHJlZV9hZGQsIHthZGRBbGwgYXMgdHJlZV9hZGRBbGx9IGZyb20gXCIuL2FkZFwiO1xuaW1wb3J0IHRyZWVfY292ZXIgZnJvbSBcIi4vY292ZXJcIjtcbmltcG9ydCB0cmVlX2RhdGEgZnJvbSBcIi4vZGF0YVwiO1xuaW1wb3J0IHRyZWVfZXh0ZW50IGZyb20gXCIuL2V4dGVudFwiO1xuaW1wb3J0IHRyZWVfZmluZCBmcm9tIFwiLi9maW5kXCI7XG5pbXBvcnQgdHJlZV9yZW1vdmUsIHtyZW1vdmVBbGwgYXMgdHJlZV9yZW1vdmVBbGx9IGZyb20gXCIuL3JlbW92ZVwiO1xuaW1wb3J0IHRyZWVfcm9vdCBmcm9tIFwiLi9yb290XCI7XG5pbXBvcnQgdHJlZV9zaXplIGZyb20gXCIuL3NpemVcIjtcbmltcG9ydCB0cmVlX3Zpc2l0IGZyb20gXCIuL3Zpc2l0XCI7XG5pbXBvcnQgdHJlZV92aXNpdEFmdGVyIGZyb20gXCIuL3Zpc2l0QWZ0ZXJcIjtcbmltcG9ydCB0cmVlX3gsIHtkZWZhdWx0WH0gZnJvbSBcIi4veFwiO1xuaW1wb3J0IHRyZWVfeSwge2RlZmF1bHRZfSBmcm9tIFwiLi95XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHF1YWR0cmVlKG5vZGVzLCB4LCB5KSB7XG4gIHZhciB0cmVlID0gbmV3IFF1YWR0cmVlKHggPT0gbnVsbCA/IGRlZmF1bHRYIDogeCwgeSA9PSBudWxsID8gZGVmYXVsdFkgOiB5LCBOYU4sIE5hTiwgTmFOLCBOYU4pO1xuICByZXR1cm4gbm9kZXMgPT0gbnVsbCA/IHRyZWUgOiB0cmVlLmFkZEFsbChub2Rlcyk7XG59XG5cbmZ1bmN0aW9uIFF1YWR0cmVlKHgsIHksIHgwLCB5MCwgeDEsIHkxKSB7XG4gIHRoaXMuX3ggPSB4O1xuICB0aGlzLl95ID0geTtcbiAgdGhpcy5feDAgPSB4MDtcbiAgdGhpcy5feTAgPSB5MDtcbiAgdGhpcy5feDEgPSB4MTtcbiAgdGhpcy5feTEgPSB5MTtcbiAgdGhpcy5fcm9vdCA9IHVuZGVmaW5lZDtcbn1cblxuZnVuY3Rpb24gbGVhZl9jb3B5KGxlYWYpIHtcbiAgdmFyIGNvcHkgPSB7ZGF0YTogbGVhZi5kYXRhfSwgbmV4dCA9IGNvcHk7XG4gIHdoaWxlIChsZWFmID0gbGVhZi5uZXh0KSBuZXh0ID0gbmV4dC5uZXh0ID0ge2RhdGE6IGxlYWYuZGF0YX07XG4gIHJldHVybiBjb3B5O1xufVxuXG52YXIgdHJlZVByb3RvID0gcXVhZHRyZWUucHJvdG90eXBlID0gUXVhZHRyZWUucHJvdG90eXBlO1xuXG50cmVlUHJvdG8uY29weSA9IGZ1bmN0aW9uKCkge1xuICB2YXIgY29weSA9IG5ldyBRdWFkdHJlZSh0aGlzLl94LCB0aGlzLl95LCB0aGlzLl94MCwgdGhpcy5feTAsIHRoaXMuX3gxLCB0aGlzLl95MSksXG4gICAgICBub2RlID0gdGhpcy5fcm9vdCxcbiAgICAgIG5vZGVzLFxuICAgICAgY2hpbGQ7XG5cbiAgaWYgKCFub2RlKSByZXR1cm4gY29weTtcblxuICBpZiAoIW5vZGUubGVuZ3RoKSByZXR1cm4gY29weS5fcm9vdCA9IGxlYWZfY29weShub2RlKSwgY29weTtcblxuICBub2RlcyA9IFt7c291cmNlOiBub2RlLCB0YXJnZXQ6IGNvcHkuX3Jvb3QgPSBuZXcgQXJyYXkoNCl9XTtcbiAgd2hpbGUgKG5vZGUgPSBub2Rlcy5wb3AoKSkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNDsgKytpKSB7XG4gICAgICBpZiAoY2hpbGQgPSBub2RlLnNvdXJjZVtpXSkge1xuICAgICAgICBpZiAoY2hpbGQubGVuZ3RoKSBub2Rlcy5wdXNoKHtzb3VyY2U6IGNoaWxkLCB0YXJnZXQ6IG5vZGUudGFyZ2V0W2ldID0gbmV3IEFycmF5KDQpfSk7XG4gICAgICAgIGVsc2Ugbm9kZS50YXJnZXRbaV0gPSBsZWFmX2NvcHkoY2hpbGQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjb3B5O1xufTtcblxudHJlZVByb3RvLmFkZCA9IHRyZWVfYWRkO1xudHJlZVByb3RvLmFkZEFsbCA9IHRyZWVfYWRkQWxsO1xudHJlZVByb3RvLmNvdmVyID0gdHJlZV9jb3ZlcjtcbnRyZWVQcm90by5kYXRhID0gdHJlZV9kYXRhO1xudHJlZVByb3RvLmV4dGVudCA9IHRyZWVfZXh0ZW50O1xudHJlZVByb3RvLmZpbmQgPSB0cmVlX2ZpbmQ7XG50cmVlUHJvdG8ucmVtb3ZlID0gdHJlZV9yZW1vdmU7XG50cmVlUHJvdG8ucmVtb3ZlQWxsID0gdHJlZV9yZW1vdmVBbGw7XG50cmVlUHJvdG8ucm9vdCA9IHRyZWVfcm9vdDtcbnRyZWVQcm90by5zaXplID0gdHJlZV9zaXplO1xudHJlZVByb3RvLnZpc2l0ID0gdHJlZV92aXNpdDtcbnRyZWVQcm90by52aXNpdEFmdGVyID0gdHJlZV92aXNpdEFmdGVyO1xudHJlZVByb3RvLnggPSB0cmVlX3g7XG50cmVlUHJvdG8ueSA9IHRyZWVfeTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGQpIHtcbiAgaWYgKGlzTmFOKHggPSArdGhpcy5feC5jYWxsKG51bGwsIGQpKSB8fCBpc05hTih5ID0gK3RoaXMuX3kuY2FsbChudWxsLCBkKSkpIHJldHVybiB0aGlzOyAvLyBpZ25vcmUgaW52YWxpZCBwb2ludHNcblxuICB2YXIgcGFyZW50LFxuICAgICAgbm9kZSA9IHRoaXMuX3Jvb3QsXG4gICAgICByZXRhaW5lcixcbiAgICAgIHByZXZpb3VzLFxuICAgICAgbmV4dCxcbiAgICAgIHgwID0gdGhpcy5feDAsXG4gICAgICB5MCA9IHRoaXMuX3kwLFxuICAgICAgeDEgPSB0aGlzLl94MSxcbiAgICAgIHkxID0gdGhpcy5feTEsXG4gICAgICB4LFxuICAgICAgeSxcbiAgICAgIHhtLFxuICAgICAgeW0sXG4gICAgICByaWdodCxcbiAgICAgIGJvdHRvbSxcbiAgICAgIGksXG4gICAgICBqO1xuXG4gIC8vIElmIHRoZSB0cmVlIGlzIGVtcHR5LCBpbml0aWFsaXplIHRoZSByb290IGFzIGEgbGVhZi5cbiAgaWYgKCFub2RlKSByZXR1cm4gdGhpcztcblxuICAvLyBGaW5kIHRoZSBsZWFmIG5vZGUgZm9yIHRoZSBwb2ludC5cbiAgLy8gV2hpbGUgZGVzY2VuZGluZywgYWxzbyByZXRhaW4gdGhlIGRlZXBlc3QgcGFyZW50IHdpdGggYSBub24tcmVtb3ZlZCBzaWJsaW5nLlxuICBpZiAobm9kZS5sZW5ndGgpIHdoaWxlICh0cnVlKSB7XG4gICAgaWYgKHJpZ2h0ID0geCA+PSAoeG0gPSAoeDAgKyB4MSkgLyAyKSkgeDAgPSB4bTsgZWxzZSB4MSA9IHhtO1xuICAgIGlmIChib3R0b20gPSB5ID49ICh5bSA9ICh5MCArIHkxKSAvIDIpKSB5MCA9IHltOyBlbHNlIHkxID0geW07XG4gICAgaWYgKCEocGFyZW50ID0gbm9kZSwgbm9kZSA9IG5vZGVbaSA9IGJvdHRvbSA8PCAxIHwgcmlnaHRdKSkgcmV0dXJuIHRoaXM7XG4gICAgaWYgKCFub2RlLmxlbmd0aCkgYnJlYWs7XG4gICAgaWYgKHBhcmVudFsoaSArIDEpICYgM10gfHwgcGFyZW50WyhpICsgMikgJiAzXSB8fCBwYXJlbnRbKGkgKyAzKSAmIDNdKSByZXRhaW5lciA9IHBhcmVudCwgaiA9IGk7XG4gIH1cblxuICAvLyBGaW5kIHRoZSBwb2ludCB0byByZW1vdmUuXG4gIHdoaWxlIChub2RlLmRhdGEgIT09IGQpIGlmICghKHByZXZpb3VzID0gbm9kZSwgbm9kZSA9IG5vZGUubmV4dCkpIHJldHVybiB0aGlzO1xuICBpZiAobmV4dCA9IG5vZGUubmV4dCkgZGVsZXRlIG5vZGUubmV4dDtcblxuICAvLyBJZiB0aGVyZSBhcmUgbXVsdGlwbGUgY29pbmNpZGVudCBwb2ludHMsIHJlbW92ZSBqdXN0IHRoZSBwb2ludC5cbiAgaWYgKHByZXZpb3VzKSByZXR1cm4gKG5leHQgPyBwcmV2aW91cy5uZXh0ID0gbmV4dCA6IGRlbGV0ZSBwcmV2aW91cy5uZXh0KSwgdGhpcztcblxuICAvLyBJZiB0aGlzIGlzIHRoZSByb290IHBvaW50LCByZW1vdmUgaXQuXG4gIGlmICghcGFyZW50KSByZXR1cm4gdGhpcy5fcm9vdCA9IG5leHQsIHRoaXM7XG5cbiAgLy8gUmVtb3ZlIHRoaXMgbGVhZi5cbiAgbmV4dCA/IHBhcmVudFtpXSA9IG5leHQgOiBkZWxldGUgcGFyZW50W2ldO1xuXG4gIC8vIElmIHRoZSBwYXJlbnQgbm93IGNvbnRhaW5zIGV4YWN0bHkgb25lIGxlYWYsIGNvbGxhcHNlIHN1cGVyZmx1b3VzIHBhcmVudHMuXG4gIGlmICgobm9kZSA9IHBhcmVudFswXSB8fCBwYXJlbnRbMV0gfHwgcGFyZW50WzJdIHx8IHBhcmVudFszXSlcbiAgICAgICYmIG5vZGUgPT09IChwYXJlbnRbM10gfHwgcGFyZW50WzJdIHx8IHBhcmVudFsxXSB8fCBwYXJlbnRbMF0pXG4gICAgICAmJiAhbm9kZS5sZW5ndGgpIHtcbiAgICBpZiAocmV0YWluZXIpIHJldGFpbmVyW2pdID0gbm9kZTtcbiAgICBlbHNlIHRoaXMuX3Jvb3QgPSBub2RlO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVBbGwoZGF0YSkge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IGRhdGEubGVuZ3RoOyBpIDwgbjsgKytpKSB0aGlzLnJlbW92ZShkYXRhW2ldKTtcbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuX3Jvb3Q7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHNpemUgPSAwO1xuICB0aGlzLnZpc2l0KGZ1bmN0aW9uKG5vZGUpIHtcbiAgICBpZiAoIW5vZGUubGVuZ3RoKSBkbyArK3NpemU7IHdoaWxlIChub2RlID0gbm9kZS5uZXh0KVxuICB9KTtcbiAgcmV0dXJuIHNpemU7XG59XG4iLCJpbXBvcnQgUXVhZCBmcm9tIFwiLi9xdWFkXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciBxdWFkcyA9IFtdLCBxLCBub2RlID0gdGhpcy5fcm9vdCwgY2hpbGQsIHgwLCB5MCwgeDEsIHkxO1xuICBpZiAobm9kZSkgcXVhZHMucHVzaChuZXcgUXVhZChub2RlLCB0aGlzLl94MCwgdGhpcy5feTAsIHRoaXMuX3gxLCB0aGlzLl95MSkpO1xuICB3aGlsZSAocSA9IHF1YWRzLnBvcCgpKSB7XG4gICAgaWYgKCFjYWxsYmFjayhub2RlID0gcS5ub2RlLCB4MCA9IHEueDAsIHkwID0gcS55MCwgeDEgPSBxLngxLCB5MSA9IHEueTEpICYmIG5vZGUubGVuZ3RoKSB7XG4gICAgICB2YXIgeG0gPSAoeDAgKyB4MSkgLyAyLCB5bSA9ICh5MCArIHkxKSAvIDI7XG4gICAgICBpZiAoY2hpbGQgPSBub2RlWzNdKSBxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLCB4bSwgeW0sIHgxLCB5MSkpO1xuICAgICAgaWYgKGNoaWxkID0gbm9kZVsyXSkgcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCwgeDAsIHltLCB4bSwgeTEpKTtcbiAgICAgIGlmIChjaGlsZCA9IG5vZGVbMV0pIHF1YWRzLnB1c2gobmV3IFF1YWQoY2hpbGQsIHhtLCB5MCwgeDEsIHltKSk7XG4gICAgICBpZiAoY2hpbGQgPSBub2RlWzBdKSBxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLCB4MCwgeTAsIHhtLCB5bSkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbiIsImltcG9ydCBRdWFkIGZyb20gXCIuL3F1YWRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHF1YWRzID0gW10sIG5leHQgPSBbXSwgcTtcbiAgaWYgKHRoaXMuX3Jvb3QpIHF1YWRzLnB1c2gobmV3IFF1YWQodGhpcy5fcm9vdCwgdGhpcy5feDAsIHRoaXMuX3kwLCB0aGlzLl94MSwgdGhpcy5feTEpKTtcbiAgd2hpbGUgKHEgPSBxdWFkcy5wb3AoKSkge1xuICAgIHZhciBub2RlID0gcS5ub2RlO1xuICAgIGlmIChub2RlLmxlbmd0aCkge1xuICAgICAgdmFyIGNoaWxkLCB4MCA9IHEueDAsIHkwID0gcS55MCwgeDEgPSBxLngxLCB5MSA9IHEueTEsIHhtID0gKHgwICsgeDEpIC8gMiwgeW0gPSAoeTAgKyB5MSkgLyAyO1xuICAgICAgaWYgKGNoaWxkID0gbm9kZVswXSkgcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCwgeDAsIHkwLCB4bSwgeW0pKTtcbiAgICAgIGlmIChjaGlsZCA9IG5vZGVbMV0pIHF1YWRzLnB1c2gobmV3IFF1YWQoY2hpbGQsIHhtLCB5MCwgeDEsIHltKSk7XG4gICAgICBpZiAoY2hpbGQgPSBub2RlWzJdKSBxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLCB4MCwgeW0sIHhtLCB5MSkpO1xuICAgICAgaWYgKGNoaWxkID0gbm9kZVszXSkgcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCwgeG0sIHltLCB4MSwgeTEpKTtcbiAgICB9XG4gICAgbmV4dC5wdXNoKHEpO1xuICB9XG4gIHdoaWxlIChxID0gbmV4dC5wb3AoKSkge1xuICAgIGNhbGxiYWNrKHEubm9kZSwgcS54MCwgcS55MCwgcS54MSwgcS55MSk7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gZGVmYXVsdFgoZCkge1xuICByZXR1cm4gZFswXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oXykge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aGlzLl94ID0gXywgdGhpcykgOiB0aGlzLl94O1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRZKGQpIHtcbiAgcmV0dXJuIGRbMV07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKF8pIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5feSA9IF8sIHRoaXMpIDogdGhpcy5feTtcbn1cbiIsImltcG9ydCBkZWZhdWx0U291cmNlIGZyb20gXCIuL2RlZmF1bHRTb3VyY2VcIjtcbmltcG9ydCBpcndpbkhhbGwgZnJvbSBcIi4vaXJ3aW5IYWxsXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBzb3VyY2VSYW5kb21CYXRlcyhzb3VyY2UpIHtcbiAgZnVuY3Rpb24gcmFuZG9tQmF0ZXMobikge1xuICAgIHZhciByYW5kb21JcndpbkhhbGwgPSBpcndpbkhhbGwuc291cmNlKHNvdXJjZSkobik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHJhbmRvbUlyd2luSGFsbCgpIC8gbjtcbiAgICB9O1xuICB9XG5cbiAgcmFuZG9tQmF0ZXMuc291cmNlID0gc291cmNlUmFuZG9tQmF0ZXM7XG5cbiAgcmV0dXJuIHJhbmRvbUJhdGVzO1xufSkoZGVmYXVsdFNvdXJjZSk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIE1hdGgucmFuZG9tKCk7XG59XG4iLCJpbXBvcnQgZGVmYXVsdFNvdXJjZSBmcm9tIFwiLi9kZWZhdWx0U291cmNlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBzb3VyY2VSYW5kb21FeHBvbmVudGlhbChzb3VyY2UpIHtcbiAgZnVuY3Rpb24gcmFuZG9tRXhwb25lbnRpYWwobGFtYmRhKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIC1NYXRoLmxvZygxIC0gc291cmNlKCkpIC8gbGFtYmRhO1xuICAgIH07XG4gIH1cblxuICByYW5kb21FeHBvbmVudGlhbC5zb3VyY2UgPSBzb3VyY2VSYW5kb21FeHBvbmVudGlhbDtcblxuICByZXR1cm4gcmFuZG9tRXhwb25lbnRpYWw7XG59KShkZWZhdWx0U291cmNlKTtcbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyByYW5kb21Vbmlmb3JtfSBmcm9tIFwiLi91bmlmb3JtXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcmFuZG9tTm9ybWFsfSBmcm9tIFwiLi9ub3JtYWxcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByYW5kb21Mb2dOb3JtYWx9IGZyb20gXCIuL2xvZ05vcm1hbFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHJhbmRvbUJhdGVzfSBmcm9tIFwiLi9iYXRlc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHJhbmRvbUlyd2luSGFsbH0gZnJvbSBcIi4vaXJ3aW5IYWxsXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcmFuZG9tRXhwb25lbnRpYWx9IGZyb20gXCIuL2V4cG9uZW50aWFsXCI7XG4iLCJpbXBvcnQgZGVmYXVsdFNvdXJjZSBmcm9tIFwiLi9kZWZhdWx0U291cmNlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBzb3VyY2VSYW5kb21JcndpbkhhbGwoc291cmNlKSB7XG4gIGZ1bmN0aW9uIHJhbmRvbUlyd2luSGFsbChuKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgZm9yICh2YXIgc3VtID0gMCwgaSA9IDA7IGkgPCBuOyArK2kpIHN1bSArPSBzb3VyY2UoKTtcbiAgICAgIHJldHVybiBzdW07XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbUlyd2luSGFsbC5zb3VyY2UgPSBzb3VyY2VSYW5kb21JcndpbkhhbGw7XG5cbiAgcmV0dXJuIHJhbmRvbUlyd2luSGFsbDtcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZVwiO1xuaW1wb3J0IG5vcm1hbCBmcm9tIFwiLi9ub3JtYWxcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIHNvdXJjZVJhbmRvbUxvZ05vcm1hbChzb3VyY2UpIHtcbiAgZnVuY3Rpb24gcmFuZG9tTG9nTm9ybWFsKCkge1xuICAgIHZhciByYW5kb21Ob3JtYWwgPSBub3JtYWwuc291cmNlKHNvdXJjZSkuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gTWF0aC5leHAocmFuZG9tTm9ybWFsKCkpO1xuICAgIH07XG4gIH1cblxuICByYW5kb21Mb2dOb3JtYWwuc291cmNlID0gc291cmNlUmFuZG9tTG9nTm9ybWFsO1xuXG4gIHJldHVybiByYW5kb21Mb2dOb3JtYWw7XG59KShkZWZhdWx0U291cmNlKTtcbiIsImltcG9ydCBkZWZhdWx0U291cmNlIGZyb20gXCIuL2RlZmF1bHRTb3VyY2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIHNvdXJjZVJhbmRvbU5vcm1hbChzb3VyY2UpIHtcbiAgZnVuY3Rpb24gcmFuZG9tTm9ybWFsKG11LCBzaWdtYSkge1xuICAgIHZhciB4LCByO1xuICAgIG11ID0gbXUgPT0gbnVsbCA/IDAgOiArbXU7XG4gICAgc2lnbWEgPSBzaWdtYSA9PSBudWxsID8gMSA6ICtzaWdtYTtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgeTtcblxuICAgICAgLy8gSWYgYXZhaWxhYmxlLCB1c2UgdGhlIHNlY29uZCBwcmV2aW91c2x5LWdlbmVyYXRlZCB1bmlmb3JtIHJhbmRvbS5cbiAgICAgIGlmICh4ICE9IG51bGwpIHkgPSB4LCB4ID0gbnVsbDtcblxuICAgICAgLy8gT3RoZXJ3aXNlLCBnZW5lcmF0ZSBhIG5ldyB4IGFuZCB5LlxuICAgICAgZWxzZSBkbyB7XG4gICAgICAgIHggPSBzb3VyY2UoKSAqIDIgLSAxO1xuICAgICAgICB5ID0gc291cmNlKCkgKiAyIC0gMTtcbiAgICAgICAgciA9IHggKiB4ICsgeSAqIHk7XG4gICAgICB9IHdoaWxlICghciB8fCByID4gMSk7XG5cbiAgICAgIHJldHVybiBtdSArIHNpZ21hICogeSAqIE1hdGguc3FydCgtMiAqIE1hdGgubG9nKHIpIC8gcik7XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbU5vcm1hbC5zb3VyY2UgPSBzb3VyY2VSYW5kb21Ob3JtYWw7XG5cbiAgcmV0dXJuIHJhbmRvbU5vcm1hbDtcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZVwiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tVW5pZm9ybShzb3VyY2UpIHtcbiAgZnVuY3Rpb24gcmFuZG9tVW5pZm9ybShtaW4sIG1heCkge1xuICAgIG1pbiA9IG1pbiA9PSBudWxsID8gMCA6ICttaW47XG4gICAgbWF4ID0gbWF4ID09IG51bGwgPyAxIDogK21heDtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkgbWF4ID0gbWluLCBtaW4gPSAwO1xuICAgIGVsc2UgbWF4IC09IG1pbjtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gc291cmNlKCkgKiBtYXggKyBtaW47XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbVVuaWZvcm0uc291cmNlID0gc291cmNlUmFuZG9tVW5pZm9ybTtcblxuICByZXR1cm4gcmFuZG9tVW5pZm9ybTtcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbG9ycyhcIjdmYzk3ZmJlYWVkNGZkYzA4NmZmZmY5OTM4NmNiMGYwMDI3ZmJmNWIxNzY2NjY2NlwiKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCIxYjllNzdkOTVmMDI3NTcwYjNlNzI5OGE2NmE2MWVlNmFiMDJhNjc2MWQ2NjY2NjZcIik7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY29sb3JzKFwiYTZjZWUzMWY3OGI0YjJkZjhhMzNhMDJjZmI5YTk5ZTMxYTFjZmRiZjZmZmY3ZjAwY2FiMmQ2NmEzZDlhZmZmZjk5YjE1OTI4XCIpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbG9ycyhcImZiYjRhZWIzY2RlM2NjZWJjNWRlY2JlNGZlZDlhNmZmZmZjY2U1ZDhiZGZkZGFlY2YyZjJmMlwiKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCJiM2UyY2RmZGNkYWNjYmQ1ZThmNGNhZTRlNmY1YzlmZmYyYWVmMWUyY2NjY2NjY2NcIik7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY29sb3JzKFwiZTQxYTFjMzc3ZWI4NGRhZjRhOTg0ZWEzZmY3ZjAwZmZmZjMzYTY1NjI4Zjc4MWJmOTk5OTk5XCIpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbG9ycyhcIjY2YzJhNWZjOGQ2MjhkYTBjYmU3OGFjM2E2ZDg1NGZmZDkyZmU1YzQ5NGIzYjNiM1wiKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCI4ZGQzYzdmZmZmYjNiZWJhZGFmYjgwNzI4MGIxZDNmZGI0NjJiM2RlNjlmY2NkZTVkOWQ5ZDliYzgwYmRjY2ViYzVmZmVkNmZcIik7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY29sb3JzKFwiMWY3N2I0ZmY3ZjBlMmNhMDJjZDYyNzI4OTQ2N2JkOGM1NjRiZTM3N2MyN2Y3ZjdmYmNiZDIyMTdiZWNmXCIpO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3BlY2lmaWVyKSB7XG4gIHZhciBuID0gc3BlY2lmaWVyLmxlbmd0aCAvIDYgfCAwLCBjb2xvcnMgPSBuZXcgQXJyYXkobiksIGkgPSAwO1xuICB3aGlsZSAoaSA8IG4pIGNvbG9yc1tpXSA9IFwiI1wiICsgc3BlY2lmaWVyLnNsaWNlKGkgKiA2LCArK2kgKiA2KTtcbiAgcmV0dXJuIGNvbG9ycztcbn1cbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImQ4YjM2NWY1ZjVmNTVhYjRhY1wiLFxuICBcImE2NjExYWRmYzI3ZDgwY2RjMTAxODU3MVwiLFxuICBcImE2NjExYWRmYzI3ZGY1ZjVmNTgwY2RjMTAxODU3MVwiLFxuICBcIjhjNTEwYWQ4YjM2NWY2ZThjM2M3ZWFlNTVhYjRhYzAxNjY1ZVwiLFxuICBcIjhjNTEwYWQ4YjM2NWY2ZThjM2Y1ZjVmNWM3ZWFlNTVhYjRhYzAxNjY1ZVwiLFxuICBcIjhjNTEwYWJmODEyZGRmYzI3ZGY2ZThjM2M3ZWFlNTgwY2RjMTM1OTc4ZjAxNjY1ZVwiLFxuICBcIjhjNTEwYWJmODEyZGRmYzI3ZGY2ZThjM2Y1ZjVmNWM3ZWFlNTgwY2RjMTM1OTc4ZjAxNjY1ZVwiLFxuICBcIjU0MzAwNThjNTEwYWJmODEyZGRmYzI3ZGY2ZThjM2M3ZWFlNTgwY2RjMTM1OTc4ZjAxNjY1ZTAwM2MzMFwiLFxuICBcIjU0MzAwNThjNTEwYWJmODEyZGRmYzI3ZGY2ZThjM2Y1ZjVmNWM3ZWFlNTgwY2RjMTM1OTc4ZjAxNjY1ZTAwM2MzMFwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJhZjhkYzNmN2Y3Zjc3ZmJmN2JcIixcbiAgXCI3YjMyOTRjMmE1Y2ZhNmRiYTAwMDg4MzdcIixcbiAgXCI3YjMyOTRjMmE1Y2ZmN2Y3ZjdhNmRiYTAwMDg4MzdcIixcbiAgXCI3NjJhODNhZjhkYzNlN2Q0ZThkOWYwZDM3ZmJmN2IxYjc4MzdcIixcbiAgXCI3NjJhODNhZjhkYzNlN2Q0ZThmN2Y3ZjdkOWYwZDM3ZmJmN2IxYjc4MzdcIixcbiAgXCI3NjJhODM5OTcwYWJjMmE1Y2ZlN2Q0ZThkOWYwZDNhNmRiYTA1YWFlNjExYjc4MzdcIixcbiAgXCI3NjJhODM5OTcwYWJjMmE1Y2ZlN2Q0ZThmN2Y3ZjdkOWYwZDNhNmRiYTA1YWFlNjExYjc4MzdcIixcbiAgXCI0MDAwNGI3NjJhODM5OTcwYWJjMmE1Y2ZlN2Q0ZThkOWYwZDNhNmRiYTA1YWFlNjExYjc4MzcwMDQ0MWJcIixcbiAgXCI0MDAwNGI3NjJhODM5OTcwYWJjMmE1Y2ZlN2Q0ZThmN2Y3ZjdkOWYwZDNhNmRiYTA1YWFlNjExYjc4MzcwMDQ0MWJcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZTlhM2M5ZjdmN2Y3YTFkNzZhXCIsXG4gIFwiZDAxYzhiZjFiNmRhYjhlMTg2NGRhYzI2XCIsXG4gIFwiZDAxYzhiZjFiNmRhZjdmN2Y3YjhlMTg2NGRhYzI2XCIsXG4gIFwiYzUxYjdkZTlhM2M5ZmRlMGVmZTZmNWQwYTFkNzZhNGQ5MjIxXCIsXG4gIFwiYzUxYjdkZTlhM2M5ZmRlMGVmZjdmN2Y3ZTZmNWQwYTFkNzZhNGQ5MjIxXCIsXG4gIFwiYzUxYjdkZGU3N2FlZjFiNmRhZmRlMGVmZTZmNWQwYjhlMTg2N2ZiYzQxNGQ5MjIxXCIsXG4gIFwiYzUxYjdkZGU3N2FlZjFiNmRhZmRlMGVmZjdmN2Y3ZTZmNWQwYjhlMTg2N2ZiYzQxNGQ5MjIxXCIsXG4gIFwiOGUwMTUyYzUxYjdkZGU3N2FlZjFiNmRhZmRlMGVmZTZmNWQwYjhlMTg2N2ZiYzQxNGQ5MjIxMjc2NDE5XCIsXG4gIFwiOGUwMTUyYzUxYjdkZGU3N2FlZjFiNmRhZmRlMGVmZjdmN2Y3ZTZmNWQwYjhlMTg2N2ZiYzQxNGQ5MjIxMjc2NDE5XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcIjk5OGVjM2Y3ZjdmN2YxYTM0MFwiLFxuICBcIjVlM2M5OWIyYWJkMmZkYjg2M2U2NjEwMVwiLFxuICBcIjVlM2M5OWIyYWJkMmY3ZjdmN2ZkYjg2M2U2NjEwMVwiLFxuICBcIjU0Mjc4ODk5OGVjM2Q4ZGFlYmZlZTBiNmYxYTM0MGIzNTgwNlwiLFxuICBcIjU0Mjc4ODk5OGVjM2Q4ZGFlYmY3ZjdmN2ZlZTBiNmYxYTM0MGIzNTgwNlwiLFxuICBcIjU0Mjc4ODgwNzNhY2IyYWJkMmQ4ZGFlYmZlZTBiNmZkYjg2M2UwODIxNGIzNTgwNlwiLFxuICBcIjU0Mjc4ODgwNzNhY2IyYWJkMmQ4ZGFlYmY3ZjdmN2ZlZTBiNmZkYjg2M2UwODIxNGIzNTgwNlwiLFxuICBcIjJkMDA0YjU0Mjc4ODgwNzNhY2IyYWJkMmQ4ZGFlYmZlZTBiNmZkYjg2M2UwODIxNGIzNTgwNjdmM2IwOFwiLFxuICBcIjJkMDA0YjU0Mjc4ODgwNzNhY2IyYWJkMmQ4ZGFlYmY3ZjdmN2ZlZTBiNmZkYjg2M2UwODIxNGIzNTgwNjdmM2IwOFwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlZjhhNjJmN2Y3Zjc2N2E5Y2ZcIixcbiAgXCJjYTAwMjBmNGE1ODI5MmM1ZGUwNTcxYjBcIixcbiAgXCJjYTAwMjBmNGE1ODJmN2Y3Zjc5MmM1ZGUwNTcxYjBcIixcbiAgXCJiMjE4MmJlZjhhNjJmZGRiYzdkMWU1ZjA2N2E5Y2YyMTY2YWNcIixcbiAgXCJiMjE4MmJlZjhhNjJmZGRiYzdmN2Y3ZjdkMWU1ZjA2N2E5Y2YyMTY2YWNcIixcbiAgXCJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdkMWU1ZjA5MmM1ZGU0MzkzYzMyMTY2YWNcIixcbiAgXCJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmN2Y3ZjdkMWU1ZjA5MmM1ZGU0MzkzYzMyMTY2YWNcIixcbiAgXCI2NzAwMWZiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdkMWU1ZjA5MmM1ZGU0MzkzYzMyMTY2YWMwNTMwNjFcIixcbiAgXCI2NzAwMWZiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmN2Y3ZjdkMWU1ZjA5MmM1ZGU0MzkzYzMyMTY2YWMwNTMwNjFcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZWY4YTYyZmZmZmZmOTk5OTk5XCIsXG4gIFwiY2EwMDIwZjRhNTgyYmFiYWJhNDA0MDQwXCIsXG4gIFwiY2EwMDIwZjRhNTgyZmZmZmZmYmFiYWJhNDA0MDQwXCIsXG4gIFwiYjIxODJiZWY4YTYyZmRkYmM3ZTBlMGUwOTk5OTk5NGQ0ZDRkXCIsXG4gIFwiYjIxODJiZWY4YTYyZmRkYmM3ZmZmZmZmZTBlMGUwOTk5OTk5NGQ0ZDRkXCIsXG4gIFwiYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZTBlMGUwYmFiYWJhODc4Nzg3NGQ0ZDRkXCIsXG4gIFwiYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZmZmZmZmZTBlMGUwYmFiYWJhODc4Nzg3NGQ0ZDRkXCIsXG4gIFwiNjcwMDFmYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZTBlMGUwYmFiYWJhODc4Nzg3NGQ0ZDRkMWExYTFhXCIsXG4gIFwiNjcwMDFmYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZmZmZmZmZTBlMGUwYmFiYWJhODc4Nzg3NGQ0ZDRkMWExYTFhXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImZjOGQ1OWZmZmZiZjkxYmZkYlwiLFxuICBcImQ3MTkxY2ZkYWU2MWFiZDllOTJjN2JiNlwiLFxuICBcImQ3MTkxY2ZkYWU2MWZmZmZiZmFiZDllOTJjN2JiNlwiLFxuICBcImQ3MzAyN2ZjOGQ1OWZlZTA5MGUwZjNmODkxYmZkYjQ1NzViNFwiLFxuICBcImQ3MzAyN2ZjOGQ1OWZlZTA5MGZmZmZiZmUwZjNmODkxYmZkYjQ1NzViNFwiLFxuICBcImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA5MGUwZjNmOGFiZDllOTc0YWRkMTQ1NzViNFwiLFxuICBcImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA5MGZmZmZiZmUwZjNmOGFiZDllOTc0YWRkMTQ1NzViNFwiLFxuICBcImE1MDAyNmQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA5MGUwZjNmOGFiZDllOTc0YWRkMTQ1NzViNDMxMzY5NVwiLFxuICBcImE1MDAyNmQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA5MGZmZmZiZmUwZjNmOGFiZDllOTc0YWRkMTQ1NzViNDMxMzY5NVwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJmYzhkNTlmZmZmYmY5MWNmNjBcIixcbiAgXCJkNzE5MWNmZGFlNjFhNmQ5NmExYTk2NDFcIixcbiAgXCJkNzE5MWNmZGFlNjFmZmZmYmZhNmQ5NmExYTk2NDFcIixcbiAgXCJkNzMwMjdmYzhkNTlmZWUwOGJkOWVmOGI5MWNmNjAxYTk4NTBcIixcbiAgXCJkNzMwMjdmYzhkNTlmZWUwOGJmZmZmYmZkOWVmOGI5MWNmNjAxYTk4NTBcIixcbiAgXCJkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOGJkOWVmOGJhNmQ5NmE2NmJkNjMxYTk4NTBcIixcbiAgXCJkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOGJmZmZmYmZkOWVmOGJhNmQ5NmE2NmJkNjMxYTk4NTBcIixcbiAgXCJhNTAwMjZkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOGJkOWVmOGJhNmQ5NmE2NmJkNjMxYTk4NTAwMDY4MzdcIixcbiAgXCJhNTAwMjZkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOGJmZmZmYmZkOWVmOGJhNmQ5NmE2NmJkNjMxYTk4NTAwMDY4MzdcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmM4ZDU5ZmZmZmJmOTlkNTk0XCIsXG4gIFwiZDcxOTFjZmRhZTYxYWJkZGE0MmI4M2JhXCIsXG4gIFwiZDcxOTFjZmRhZTYxZmZmZmJmYWJkZGE0MmI4M2JhXCIsXG4gIFwiZDUzZTRmZmM4ZDU5ZmVlMDhiZTZmNTk4OTlkNTk0MzI4OGJkXCIsXG4gIFwiZDUzZTRmZmM4ZDU5ZmVlMDhiZmZmZmJmZTZmNTk4OTlkNTk0MzI4OGJkXCIsXG4gIFwiZDUzZTRmZjQ2ZDQzZmRhZTYxZmVlMDhiZTZmNTk4YWJkZGE0NjZjMmE1MzI4OGJkXCIsXG4gIFwiZDUzZTRmZjQ2ZDQzZmRhZTYxZmVlMDhiZmZmZmJmZTZmNTk4YWJkZGE0NjZjMmE1MzI4OGJkXCIsXG4gIFwiOWUwMTQyZDUzZTRmZjQ2ZDQzZmRhZTYxZmVlMDhiZTZmNTk4YWJkZGE0NjZjMmE1MzI4OGJkNWU0ZmEyXCIsXG4gIFwiOWUwMTQyZDUzZTRmZjQ2ZDQzZmRhZTYxZmVlMDhiZmZmZmJmZTZmNTk4YWJkZGE0NjZjMmE1MzI4OGJkNWU0ZmEyXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBzY2hlbWVDYXRlZ29yeTEwfSBmcm9tIFwiLi9jYXRlZ29yaWNhbC9jYXRlZ29yeTEwXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2NoZW1lQWNjZW50fSBmcm9tIFwiLi9jYXRlZ29yaWNhbC9BY2NlbnRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzY2hlbWVEYXJrMn0gZnJvbSBcIi4vY2F0ZWdvcmljYWwvRGFyazJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzY2hlbWVQYWlyZWR9IGZyb20gXCIuL2NhdGVnb3JpY2FsL1BhaXJlZFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNjaGVtZVBhc3RlbDF9IGZyb20gXCIuL2NhdGVnb3JpY2FsL1Bhc3RlbDFcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzY2hlbWVQYXN0ZWwyfSBmcm9tIFwiLi9jYXRlZ29yaWNhbC9QYXN0ZWwyXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2NoZW1lU2V0MX0gZnJvbSBcIi4vY2F0ZWdvcmljYWwvU2V0MVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNjaGVtZVNldDJ9IGZyb20gXCIuL2NhdGVnb3JpY2FsL1NldDJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzY2hlbWVTZXQzfSBmcm9tIFwiLi9jYXRlZ29yaWNhbC9TZXQzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVCckJHLCBzY2hlbWUgYXMgc2NoZW1lQnJCR30gZnJvbSBcIi4vZGl2ZXJnaW5nL0JyQkdcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVBSR24sIHNjaGVtZSBhcyBzY2hlbWVQUkdufSBmcm9tIFwiLi9kaXZlcmdpbmcvUFJHblwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUGlZRywgc2NoZW1lIGFzIHNjaGVtZVBpWUd9IGZyb20gXCIuL2RpdmVyZ2luZy9QaVlHXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVQdU9yLCBzY2hlbWUgYXMgc2NoZW1lUHVPcn0gZnJvbSBcIi4vZGl2ZXJnaW5nL1B1T3JcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVJkQnUsIHNjaGVtZSBhcyBzY2hlbWVSZEJ1fSBmcm9tIFwiLi9kaXZlcmdpbmcvUmRCdVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUmRHeSwgc2NoZW1lIGFzIHNjaGVtZVJkR3l9IGZyb20gXCIuL2RpdmVyZ2luZy9SZEd5XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVSZFlsQnUsIHNjaGVtZSBhcyBzY2hlbWVSZFlsQnV9IGZyb20gXCIuL2RpdmVyZ2luZy9SZFlsQnVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVJkWWxHbiwgc2NoZW1lIGFzIHNjaGVtZVJkWWxHbn0gZnJvbSBcIi4vZGl2ZXJnaW5nL1JkWWxHblwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlU3BlY3RyYWwsIHNjaGVtZSBhcyBzY2hlbWVTcGVjdHJhbH0gZnJvbSBcIi4vZGl2ZXJnaW5nL1NwZWN0cmFsXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVCdUduLCBzY2hlbWUgYXMgc2NoZW1lQnVHbn0gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9CdUduXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVCdVB1LCBzY2hlbWUgYXMgc2NoZW1lQnVQdX0gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9CdVB1XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVHbkJ1LCBzY2hlbWUgYXMgc2NoZW1lR25CdX0gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9HbkJ1XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVPclJkLCBzY2hlbWUgYXMgc2NoZW1lT3JSZH0gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9PclJkXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVQdUJ1R24sIHNjaGVtZSBhcyBzY2hlbWVQdUJ1R259IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvUHVCdUduXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVQdUJ1LCBzY2hlbWUgYXMgc2NoZW1lUHVCdX0gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9QdUJ1XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVQdVJkLCBzY2hlbWUgYXMgc2NoZW1lUHVSZH0gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9QdVJkXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVSZFB1LCBzY2hlbWUgYXMgc2NoZW1lUmRQdX0gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9SZFB1XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVZbEduQnUsIHNjaGVtZSBhcyBzY2hlbWVZbEduQnV9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvWWxHbkJ1XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVZbEduLCBzY2hlbWUgYXMgc2NoZW1lWWxHbn0gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9ZbEduXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVZbE9yQnIsIHNjaGVtZSBhcyBzY2hlbWVZbE9yQnJ9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvWWxPckJyXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVZbE9yUmQsIHNjaGVtZSBhcyBzY2hlbWVZbE9yUmR9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvWWxPclJkXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVCbHVlcywgc2NoZW1lIGFzIHNjaGVtZUJsdWVzfSBmcm9tIFwiLi9zZXF1ZW50aWFsLXNpbmdsZS9CbHVlc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlR3JlZW5zLCBzY2hlbWUgYXMgc2NoZW1lR3JlZW5zfSBmcm9tIFwiLi9zZXF1ZW50aWFsLXNpbmdsZS9HcmVlbnNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUdyZXlzLCBzY2hlbWUgYXMgc2NoZW1lR3JleXN9IGZyb20gXCIuL3NlcXVlbnRpYWwtc2luZ2xlL0dyZXlzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVQdXJwbGVzLCBzY2hlbWUgYXMgc2NoZW1lUHVycGxlc30gZnJvbSBcIi4vc2VxdWVudGlhbC1zaW5nbGUvUHVycGxlc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUmVkcywgc2NoZW1lIGFzIHNjaGVtZVJlZHN9IGZyb20gXCIuL3NlcXVlbnRpYWwtc2luZ2xlL1JlZHNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZU9yYW5nZXMsIHNjaGVtZSBhcyBzY2hlbWVPcmFuZ2VzfSBmcm9tIFwiLi9zZXF1ZW50aWFsLXNpbmdsZS9PcmFuZ2VzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVDdWJlaGVsaXhEZWZhdWx0fSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL2N1YmVoZWxpeFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUmFpbmJvdywgd2FybSBhcyBpbnRlcnBvbGF0ZVdhcm0sIGNvb2wgYXMgaW50ZXJwb2xhdGVDb29sfSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL3JhaW5ib3dcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVNpbmVib3d9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvc2luZWJvd1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlVmlyaWRpcywgbWFnbWEgYXMgaW50ZXJwb2xhdGVNYWdtYSwgaW5mZXJubyBhcyBpbnRlcnBvbGF0ZUluZmVybm8sIHBsYXNtYSBhcyBpbnRlcnBvbGF0ZVBsYXNtYX0gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS92aXJpZGlzXCI7XG4iLCJpbXBvcnQge2ludGVycG9sYXRlUmdiQmFzaXN9IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzY2hlbWUpIHtcbiAgcmV0dXJuIGludGVycG9sYXRlUmdiQmFzaXMoc2NoZW1lW3NjaGVtZS5sZW5ndGggLSAxXSk7XG59XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlNWY1Zjk5OWQ4YzkyY2EyNWZcIixcbiAgXCJlZGY4ZmJiMmUyZTI2NmMyYTQyMzhiNDVcIixcbiAgXCJlZGY4ZmJiMmUyZTI2NmMyYTQyY2EyNWYwMDZkMmNcIixcbiAgXCJlZGY4ZmJjY2VjZTY5OWQ4Yzk2NmMyYTQyY2EyNWYwMDZkMmNcIixcbiAgXCJlZGY4ZmJjY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDU4MjRcIixcbiAgXCJmN2ZjZmRlNWY1ZjljY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDU4MjRcIixcbiAgXCJmN2ZjZmRlNWY1ZjljY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDZkMmMwMDQ0MWJcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZTBlY2Y0OWViY2RhODg1NmE3XCIsXG4gIFwiZWRmOGZiYjNjZGUzOGM5NmM2ODg0MTlkXCIsXG4gIFwiZWRmOGZiYjNjZGUzOGM5NmM2ODg1NmE3ODEwZjdjXCIsXG4gIFwiZWRmOGZiYmZkM2U2OWViY2RhOGM5NmM2ODg1NmE3ODEwZjdjXCIsXG4gIFwiZWRmOGZiYmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkNmUwMTZiXCIsXG4gIFwiZjdmY2ZkZTBlY2Y0YmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkNmUwMTZiXCIsXG4gIFwiZjdmY2ZkZTBlY2Y0YmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkODEwZjdjNGQwMDRiXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImUwZjNkYmE4ZGRiNTQzYTJjYVwiLFxuICBcImYwZjllOGJhZTRiYzdiY2NjNDJiOGNiZVwiLFxuICBcImYwZjllOGJhZTRiYzdiY2NjNDQzYTJjYTA4NjhhY1wiLFxuICBcImYwZjllOGNjZWJjNWE4ZGRiNTdiY2NjNDQzYTJjYTA4NjhhY1wiLFxuICBcImYwZjllOGNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NTg5ZVwiLFxuICBcImY3ZmNmMGUwZjNkYmNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NTg5ZVwiLFxuICBcImY3ZmNmMGUwZjNkYmNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NjhhYzA4NDA4MVwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJmZWU4YzhmZGJiODRlMzRhMzNcIixcbiAgXCJmZWYwZDlmZGNjOGFmYzhkNTlkNzMwMWZcIixcbiAgXCJmZWYwZDlmZGNjOGFmYzhkNTllMzRhMzNiMzAwMDBcIixcbiAgXCJmZWYwZDlmZGQ0OWVmZGJiODRmYzhkNTllMzRhMzNiMzAwMDBcIixcbiAgXCJmZWYwZDlmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWY5OTAwMDBcIixcbiAgXCJmZmY3ZWNmZWU4YzhmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWY5OTAwMDBcIixcbiAgXCJmZmY3ZWNmZWU4YzhmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWZiMzAwMDA3ZjAwMDBcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZWNlN2YyYTZiZGRiMmI4Y2JlXCIsXG4gIFwiZjFlZWY2YmRjOWUxNzRhOWNmMDU3MGIwXCIsXG4gIFwiZjFlZWY2YmRjOWUxNzRhOWNmMmI4Y2JlMDQ1YThkXCIsXG4gIFwiZjFlZWY2ZDBkMWU2YTZiZGRiNzRhOWNmMmI4Y2JlMDQ1YThkXCIsXG4gIFwiZjFlZWY2ZDBkMWU2YTZiZGRiNzRhOWNmMzY5MGMwMDU3MGIwMDM0ZTdiXCIsXG4gIFwiZmZmN2ZiZWNlN2YyZDBkMWU2YTZiZGRiNzRhOWNmMzY5MGMwMDU3MGIwMDM0ZTdiXCIsXG4gIFwiZmZmN2ZiZWNlN2YyZDBkMWU2YTZiZGRiNzRhOWNmMzY5MGMwMDU3MGIwMDQ1YThkMDIzODU4XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImVjZTJmMGE2YmRkYjFjOTA5OVwiLFxuICBcImY2ZWZmN2JkYzllMTY3YTljZjAyODE4YVwiLFxuICBcImY2ZWZmN2JkYzllMTY3YTljZjFjOTA5OTAxNmM1OVwiLFxuICBcImY2ZWZmN2QwZDFlNmE2YmRkYjY3YTljZjFjOTA5OTAxNmM1OVwiLFxuICBcImY2ZWZmN2QwZDFlNmE2YmRkYjY3YTljZjM2OTBjMDAyODE4YTAxNjQ1MFwiLFxuICBcImZmZjdmYmVjZTJmMGQwZDFlNmE2YmRkYjY3YTljZjM2OTBjMDAyODE4YTAxNjQ1MFwiLFxuICBcImZmZjdmYmVjZTJmMGQwZDFlNmE2YmRkYjY3YTljZjM2OTBjMDAyODE4YTAxNmM1OTAxNDYzNlwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlN2UxZWZjOTk0YzdkZDFjNzdcIixcbiAgXCJmMWVlZjZkN2I1ZDhkZjY1YjBjZTEyNTZcIixcbiAgXCJmMWVlZjZkN2I1ZDhkZjY1YjBkZDFjNzc5ODAwNDNcIixcbiAgXCJmMWVlZjZkNGI5ZGFjOTk0YzdkZjY1YjBkZDFjNzc5ODAwNDNcIixcbiAgXCJmMWVlZjZkNGI5ZGFjOTk0YzdkZjY1YjBlNzI5OGFjZTEyNTY5MTAwM2ZcIixcbiAgXCJmN2Y0ZjllN2UxZWZkNGI5ZGFjOTk0YzdkZjY1YjBlNzI5OGFjZTEyNTY5MTAwM2ZcIixcbiAgXCJmN2Y0ZjllN2UxZWZkNGI5ZGFjOTk0YzdkZjY1YjBlNzI5OGFjZTEyNTY5ODAwNDM2NzAwMWZcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmRlMGRkZmE5ZmI1YzUxYjhhXCIsXG4gIFwiZmVlYmUyZmJiNGI5Zjc2OGExYWUwMTdlXCIsXG4gIFwiZmVlYmUyZmJiNGI5Zjc2OGExYzUxYjhhN2EwMTc3XCIsXG4gIFwiZmVlYmUyZmNjNWMwZmE5ZmI1Zjc2OGExYzUxYjhhN2EwMTc3XCIsXG4gIFwiZmVlYmUyZmNjNWMwZmE5ZmI1Zjc2OGExZGQzNDk3YWUwMTdlN2EwMTc3XCIsXG4gIFwiZmZmN2YzZmRlMGRkZmNjNWMwZmE5ZmI1Zjc2OGExZGQzNDk3YWUwMTdlN2EwMTc3XCIsXG4gIFwiZmZmN2YzZmRlMGRkZmNjNWMwZmE5ZmI1Zjc2OGExZGQzNDk3YWUwMTdlN2EwMTc3NDkwMDZhXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImY3ZmNiOWFkZGQ4ZTMxYTM1NFwiLFxuICBcImZmZmZjY2MyZTY5OTc4YzY3OTIzODQ0M1wiLFxuICBcImZmZmZjY2MyZTY5OTc4YzY3OTMxYTM1NDAwNjgzN1wiLFxuICBcImZmZmZjY2Q5ZjBhM2FkZGQ4ZTc4YzY3OTMxYTM1NDAwNjgzN1wiLFxuICBcImZmZmZjY2Q5ZjBhM2FkZGQ4ZTc4YzY3OTQxYWI1ZDIzODQ0MzAwNWEzMlwiLFxuICBcImZmZmZlNWY3ZmNiOWQ5ZjBhM2FkZGQ4ZTc4YzY3OTQxYWI1ZDIzODQ0MzAwNWEzMlwiLFxuICBcImZmZmZlNWY3ZmNiOWQ5ZjBhM2FkZGQ4ZTc4YzY3OTQxYWI1ZDIzODQ0MzAwNjgzNzAwNDUyOVwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlZGY4YjE3ZmNkYmIyYzdmYjhcIixcbiAgXCJmZmZmY2NhMWRhYjQ0MWI2YzQyMjVlYThcIixcbiAgXCJmZmZmY2NhMWRhYjQ0MWI2YzQyYzdmYjgyNTM0OTRcIixcbiAgXCJmZmZmY2NjN2U5YjQ3ZmNkYmI0MWI2YzQyYzdmYjgyNTM0OTRcIixcbiAgXCJmZmZmY2NjN2U5YjQ3ZmNkYmI0MWI2YzQxZDkxYzAyMjVlYTgwYzJjODRcIixcbiAgXCJmZmZmZDllZGY4YjFjN2U5YjQ3ZmNkYmI0MWI2YzQxZDkxYzAyMjVlYTgwYzJjODRcIixcbiAgXCJmZmZmZDllZGY4YjFjN2U5YjQ3ZmNkYmI0MWI2YzQxZDkxYzAyMjVlYTgyNTM0OTQwODFkNThcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmZmN2JjZmVjNDRmZDk1ZjBlXCIsXG4gIFwiZmZmZmQ0ZmVkOThlZmU5OTI5Y2M0YzAyXCIsXG4gIFwiZmZmZmQ0ZmVkOThlZmU5OTI5ZDk1ZjBlOTkzNDA0XCIsXG4gIFwiZmZmZmQ0ZmVlMzkxZmVjNDRmZmU5OTI5ZDk1ZjBlOTkzNDA0XCIsXG4gIFwiZmZmZmQ0ZmVlMzkxZmVjNDRmZmU5OTI5ZWM3MDE0Y2M0YzAyOGMyZDA0XCIsXG4gIFwiZmZmZmU1ZmZmN2JjZmVlMzkxZmVjNDRmZmU5OTI5ZWM3MDE0Y2M0YzAyOGMyZDA0XCIsXG4gIFwiZmZmZmU1ZmZmN2JjZmVlMzkxZmVjNDRmZmU5OTI5ZWM3MDE0Y2M0YzAyOTkzNDA0NjYyNTA2XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImZmZWRhMGZlYjI0Y2YwM2IyMFwiLFxuICBcImZmZmZiMmZlY2M1Y2ZkOGQzY2UzMWExY1wiLFxuICBcImZmZmZiMmZlY2M1Y2ZkOGQzY2YwM2IyMGJkMDAyNlwiLFxuICBcImZmZmZiMmZlZDk3NmZlYjI0Y2ZkOGQzY2YwM2IyMGJkMDAyNlwiLFxuICBcImZmZmZiMmZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2IxMDAyNlwiLFxuICBcImZmZmZjY2ZmZWRhMGZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2IxMDAyNlwiLFxuICBcImZmZmZjY2ZmZWRhMGZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2JkMDAyNjgwMDAyNlwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQge2N1YmVoZWxpeH0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQge2ludGVycG9sYXRlQ3ViZWhlbGl4TG9uZ30gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGludGVycG9sYXRlQ3ViZWhlbGl4TG9uZyhjdWJlaGVsaXgoMzAwLCAwLjUsIDAuMCksIGN1YmVoZWxpeCgtMjQwLCAwLjUsIDEuMCkpO1xuIiwiaW1wb3J0IHtjdWJlaGVsaXh9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IHtpbnRlcnBvbGF0ZUN1YmVoZWxpeExvbmd9IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuXG5leHBvcnQgdmFyIHdhcm0gPSBpbnRlcnBvbGF0ZUN1YmVoZWxpeExvbmcoY3ViZWhlbGl4KC0xMDAsIDAuNzUsIDAuMzUpLCBjdWJlaGVsaXgoODAsIDEuNTAsIDAuOCkpO1xuXG5leHBvcnQgdmFyIGNvb2wgPSBpbnRlcnBvbGF0ZUN1YmVoZWxpeExvbmcoY3ViZWhlbGl4KDI2MCwgMC43NSwgMC4zNSksIGN1YmVoZWxpeCg4MCwgMS41MCwgMC44KSk7XG5cbnZhciBjID0gY3ViZWhlbGl4KCk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHQpIHtcbiAgaWYgKHQgPCAwIHx8IHQgPiAxKSB0IC09IE1hdGguZmxvb3IodCk7XG4gIHZhciB0cyA9IE1hdGguYWJzKHQgLSAwLjUpO1xuICBjLmggPSAzNjAgKiB0IC0gMTAwO1xuICBjLnMgPSAxLjUgLSAxLjUgKiB0cztcbiAgYy5sID0gMC44IC0gMC45ICogdHM7XG4gIHJldHVybiBjICsgXCJcIjtcbn1cbiIsImltcG9ydCB7cmdifSBmcm9tIFwiZDMtY29sb3JcIjtcblxudmFyIGMgPSByZ2IoKSxcbiAgICBwaV8xXzMgPSBNYXRoLlBJIC8gMyxcbiAgICBwaV8yXzMgPSBNYXRoLlBJICogMiAvIDM7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHQpIHtcbiAgdmFyIHg7XG4gIHQgPSAoMC41IC0gdCkgKiBNYXRoLlBJO1xuICBjLnIgPSAyNTUgKiAoeCA9IE1hdGguc2luKHQpKSAqIHg7XG4gIGMuZyA9IDI1NSAqICh4ID0gTWF0aC5zaW4odCArIHBpXzFfMykpICogeDtcbiAgYy5iID0gMjU1ICogKHggPSBNYXRoLnNpbih0ICsgcGlfMl8zKSkgKiB4O1xuICByZXR1cm4gYyArIFwiXCI7XG59XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcblxuZnVuY3Rpb24gcmFtcChyYW5nZSkge1xuICB2YXIgbiA9IHJhbmdlLmxlbmd0aDtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICByZXR1cm4gcmFuZ2VbTWF0aC5tYXgoMCwgTWF0aC5taW4obiAtIDEsIE1hdGguZmxvb3IodCAqIG4pKSldO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCByYW1wKGNvbG9ycyhcIjQ0MDE1NDQ0MDI1NjQ1MDQ1NzQ1MDU1OTQ2MDc1YTQ2MDg1YzQ2MGE1ZDQ2MGI1ZTQ3MGQ2MDQ3MGU2MTQ3MTA2MzQ3MTE2NDQ3MTM2NTQ4MTQ2NzQ4MTY2ODQ4MTc2OTQ4MTg2YTQ4MWE2YzQ4MWI2ZDQ4MWM2ZTQ4MWQ2ZjQ4MWY3MDQ4MjA3MTQ4MjE3MzQ4MjM3NDQ4MjQ3NTQ4MjU3NjQ4MjY3NzQ4Mjg3ODQ4Mjk3OTQ3MmE3YTQ3MmM3YTQ3MmQ3YjQ3MmU3YzQ3MmY3ZDQ2MzA3ZTQ2MzI3ZTQ2MzM3ZjQ2MzQ4MDQ1MzU4MTQ1Mzc4MTQ1Mzg4MjQ0Mzk4MzQ0M2E4MzQ0M2I4NDQzM2Q4NDQzM2U4NTQyM2Y4NTQyNDA4NjQyNDE4NjQxNDI4NzQxNDQ4NzQwNDU4ODQwNDY4ODNmNDc4ODNmNDg4OTNlNDk4OTNlNGE4OTNlNGM4YTNkNGQ4YTNkNGU4YTNjNGY4YTNjNTA4YjNiNTE4YjNiNTI4YjNhNTM4YjNhNTQ4YzM5NTU4YzM5NTY4YzM4NTg4YzM4NTk4YzM3NWE4YzM3NWI4ZDM2NWM4ZDM2NWQ4ZDM1NWU4ZDM1NWY4ZDM0NjA4ZDM0NjE4ZDMzNjI4ZDMzNjM4ZDMyNjQ4ZTMyNjU4ZTMxNjY4ZTMxNjc4ZTMxNjg4ZTMwNjk4ZTMwNmE4ZTJmNmI4ZTJmNmM4ZTJlNmQ4ZTJlNmU4ZTJlNmY4ZTJkNzA4ZTJkNzE4ZTJjNzE4ZTJjNzI4ZTJjNzM4ZTJiNzQ4ZTJiNzU4ZTJhNzY4ZTJhNzc4ZTJhNzg4ZTI5Nzk4ZTI5N2E4ZTI5N2I4ZTI4N2M4ZTI4N2Q4ZTI3N2U4ZTI3N2Y4ZTI3ODA4ZTI2ODE4ZTI2ODI4ZTI2ODI4ZTI1ODM4ZTI1ODQ4ZTI1ODU4ZTI0ODY4ZTI0ODc4ZTIzODg4ZTIzODk4ZTIzOGE4ZDIyOGI4ZDIyOGM4ZDIyOGQ4ZDIxOGU4ZDIxOGY4ZDIxOTA4ZDIxOTE4YzIwOTI4YzIwOTI4YzIwOTM4YzFmOTQ4YzFmOTU4YjFmOTY4YjFmOTc4YjFmOTg4YjFmOTk4YTFmOWE4YTFlOWI4YTFlOWM4OTFlOWQ4OTFmOWU4OTFmOWY4ODFmYTA4ODFmYTE4ODFmYTE4NzFmYTI4NzIwYTM4NjIwYTQ4NjIxYTU4NTIxYTY4NTIyYTc4NTIyYTg4NDIzYTk4MzI0YWE4MzI1YWI4MjI1YWM4MjI2YWQ4MTI3YWQ4MTI4YWU4MDI5YWY3ZjJhYjA3ZjJjYjE3ZTJkYjI3ZDJlYjM3YzJmYjQ3YzMxYjU3YjMyYjY3YTM0YjY3OTM1Yjc3OTM3Yjg3ODM4Yjk3NzNhYmE3NjNiYmI3NTNkYmM3NDNmYmM3MzQwYmQ3MjQyYmU3MTQ0YmY3MDQ2YzA2ZjQ4YzE2ZTRhYzE2ZDRjYzI2YzRlYzM2YjUwYzQ2YTUyYzU2OTU0YzU2ODU2YzY2NzU4Yzc2NTVhYzg2NDVjYzg2MzVlYzk2MjYwY2E2MDYzY2I1ZjY1Y2I1ZTY3Y2M1YzY5Y2Q1YjZjY2Q1YTZlY2U1ODcwY2Y1NzczZDA1Njc1ZDA1NDc3ZDE1MzdhZDE1MTdjZDI1MDdmZDM0ZTgxZDM0ZDg0ZDQ0Yjg2ZDU0OTg5ZDU0ODhiZDY0NjhlZDY0NTkwZDc0MzkzZDc0MTk1ZDg0MDk4ZDgzZTliZDkzYzlkZDkzYmEwZGEzOWEyZGEzN2E1ZGIzNmE4ZGIzNGFhZGMzMmFkZGMzMGIwZGQyZmIyZGQyZGI1ZGUyYmI4ZGUyOWJhZGUyOGJkZGYyNmMwZGYyNWMyZGYyM2M1ZTAyMWM4ZTAyMGNhZTExZmNkZTExZGQwZTExY2QyZTIxYmQ1ZTIxYWQ4ZTIxOWRhZTMxOWRkZTMxOGRmZTMxOGUyZTQxOGU1ZTQxOWU3ZTQxOWVhZTUxYWVjZTUxYmVmZTUxY2YxZTUxZGY0ZTYxZWY2ZTYyMGY4ZTYyMWZiZTcyM2ZkZTcyNVwiKSk7XG5cbmV4cG9ydCB2YXIgbWFnbWEgPSByYW1wKGNvbG9ycyhcIjAwMDAwNDAxMDAwNTAxMDEwNjAxMDEwODAyMDEwOTAyMDIwYjAyMDIwZDAzMDMwZjAzMDMxMjA0MDQxNDA1MDQxNjA2MDUxODA2MDUxYTA3MDYxYzA4MDcxZTA5MDcyMDBhMDgyMjBiMDkyNDBjMDkyNjBkMGEyOTBlMGIyYjEwMGIyZDExMGMyZjEyMGQzMTEzMGQzNDE0MGUzNjE1MGUzODE2MGYzYjE4MGYzZDE5MTAzZjFhMTA0MjFjMTA0NDFkMTE0NzFlMTE0OTIwMTE0YjIxMTE0ZTIyMTE1MDI0MTI1MzI1MTI1NTI3MTI1ODI5MTE1YTJhMTE1YzJjMTE1ZjJkMTE2MTJmMTE2MzMxMTE2NTMzMTA2NzM0MTA2OTM2MTA2YjM4MTA2YzM5MGY2ZTNiMGY3MDNkMGY3MTNmMGY3MjQwMGY3NDQyMGY3NTQ0MGY3NjQ1MTA3NzQ3MTA3ODQ5MTA3ODRhMTA3OTRjMTE3YTRlMTE3YjRmMTI3YjUxMTI3YzUyMTM3YzU0MTM3ZDU2MTQ3ZDU3MTU3ZTU5MTU3ZTVhMTY3ZTVjMTY3ZjVkMTc3ZjVmMTg3ZjYwMTg4MDYyMTk4MDY0MWE4MDY1MWE4MDY3MWI4MDY4MWM4MTZhMWM4MTZiMWQ4MTZkMWQ4MTZlMWU4MTcwMWY4MTcyMWY4MTczMjA4MTc1MjE4MTc2MjE4MTc4MjI4MTc5MjI4MjdiMjM4MjdjMjM4MjdlMjQ4MjgwMjU4MjgxMjU4MTgzMjY4MTg0MjY4MTg2Mjc4MTg4Mjc4MTg5Mjg4MThiMjk4MThjMjk4MThlMmE4MTkwMmE4MTkxMmI4MTkzMmI4MDk0MmM4MDk2MmM4MDk4MmQ4MDk5MmQ4MDliMmU3ZjljMmU3ZjllMmY3ZmEwMmY3ZmExMzA3ZWEzMzA3ZWE1MzE3ZWE2MzE3ZGE4MzI3ZGFhMzM3ZGFiMzM3Y2FkMzQ3Y2FlMzQ3YmIwMzU3YmIyMzU3YmIzMzY3YWI1MzY3YWI3Mzc3OWI4Mzc3OWJhMzg3OGJjMzk3OGJkMzk3N2JmM2E3N2MwM2E3NmMyM2I3NWM0M2M3NWM1M2M3NGM3M2Q3M2M4M2U3M2NhM2U3MmNjM2Y3MWNkNDA3MWNmNDA3MGQwNDE2ZmQyNDI2ZmQzNDM2ZWQ1NDQ2ZGQ2NDU2Y2Q4NDU2Y2Q5NDY2YmRiNDc2YWRjNDg2OWRlNDk2OGRmNGE2OGUwNGM2N2UyNGQ2NmUzNGU2NWU0NGY2NGU1NTA2NGU3NTI2M2U4NTM2MmU5NTQ2MmVhNTY2MWViNTc2MGVjNTg2MGVkNWE1ZmVlNWI1ZWVmNWQ1ZWYwNWY1ZWYxNjA1ZGYyNjI1ZGYyNjQ1Y2YzNjU1Y2Y0Njc1Y2Y0Njk1Y2Y1NmI1Y2Y2NmM1Y2Y2NmU1Y2Y3NzA1Y2Y3NzI1Y2Y4NzQ1Y2Y4NzY1Y2Y5Nzg1ZGY5Nzk1ZGY5N2I1ZGZhN2Q1ZWZhN2Y1ZWZhODE1ZmZiODM1ZmZiODU2MGZiODc2MWZjODk2MWZjOGE2MmZjOGM2M2ZjOGU2NGZjOTA2NWZkOTI2NmZkOTQ2N2ZkOTY2OGZkOTg2OWZkOWE2YWZkOWI2YmZlOWQ2Y2ZlOWY2ZGZlYTE2ZWZlYTM2ZmZlYTU3MWZlYTc3MmZlYTk3M2ZlYWE3NGZlYWM3NmZlYWU3N2ZlYjA3OGZlYjI3YWZlYjQ3YmZlYjY3Y2ZlYjc3ZWZlYjk3ZmZlYmI4MWZlYmQ4MmZlYmY4NGZlYzE4NWZlYzI4N2ZlYzQ4OGZlYzY4YWZlYzg4Y2ZlY2E4ZGZlY2M4ZmZlY2Q5MGZlY2Y5MmZlZDE5NGZlZDM5NWZlZDU5N2ZlZDc5OWZlZDg5YWZkZGE5Y2ZkZGM5ZWZkZGVhMGZkZTBhMWZkZTJhM2ZkZTNhNWZkZTVhN2ZkZTdhOWZkZTlhYWZkZWJhY2ZjZWNhZWZjZWViMGZjZjBiMmZjZjJiNGZjZjRiNmZjZjZiOGZjZjdiOWZjZjliYmZjZmJiZGZjZmRiZlwiKSk7XG5cbmV4cG9ydCB2YXIgaW5mZXJubyA9IHJhbXAoY29sb3JzKFwiMDAwMDA0MDEwMDA1MDEwMTA2MDEwMTA4MDIwMTBhMDIwMjBjMDIwMjBlMDMwMjEwMDQwMzEyMDQwMzE0MDUwNDE3MDYwNDE5MDcwNTFiMDgwNTFkMDkwNjFmMGEwNzIyMGIwNzI0MGMwODI2MGQwODI5MGUwOTJiMTAwOTJkMTEwYTMwMTIwYTMyMTQwYjM0MTUwYjM3MTYwYjM5MTgwYzNjMTkwYzNlMWIwYzQxMWMwYzQzMWUwYzQ1MWYwYzQ4MjEwYzRhMjMwYzRjMjQwYzRmMjYwYzUxMjgwYjUzMjkwYjU1MmIwYjU3MmQwYjU5MmYwYTViMzEwYTVjMzIwYTVlMzQwYTVmMzYwOTYxMzgwOTYyMzkwOTYzM2IwOTY0M2QwOTY1M2UwOTY2NDAwYTY3NDIwYTY4NDQwYTY4NDUwYTY5NDcwYjZhNDkwYjZhNGEwYzZiNGMwYzZiNGQwZDZjNGYwZDZjNTEwZTZjNTIwZTZkNTQwZjZkNTUwZjZkNTcxMDZlNTkxMDZlNWExMTZlNWMxMjZlNWQxMjZlNWYxMzZlNjExMzZlNjIxNDZlNjQxNTZlNjUxNTZlNjcxNjZlNjkxNjZlNmExNzZlNmMxODZlNmQxODZlNmYxOTZlNzExOTZlNzIxYTZlNzQxYTZlNzUxYjZlNzcxYzZkNzgxYzZkN2ExZDZkN2MxZDZkN2QxZTZkN2YxZTZjODAxZjZjODIyMDZjODQyMDZiODUyMTZiODcyMTZiODgyMjZhOGEyMjZhOGMyMzY5OGQyMzY5OGYyNDY5OTAyNTY4OTIyNTY4OTMyNjY3OTUyNjY3OTcyNzY2OTgyNzY2OWEyODY1OWIyOTY0OWQyOTY0OWYyYTYzYTAyYTYzYTIyYjYyYTMyYzYxYTUyYzYwYTYyZDYwYTgyZTVmYTkyZTVlYWIyZjVlYWQzMDVkYWUzMDVjYjAzMTViYjEzMjVhYjMzMjVhYjQzMzU5YjYzNDU4YjczNTU3YjkzNTU2YmEzNjU1YmMzNzU0YmQzODUzYmYzOTUyYzAzYTUxYzEzYTUwYzMzYjRmYzQzYzRlYzYzZDRkYzczZTRjYzgzZjRiY2E0MDRhY2I0MTQ5Y2M0MjQ4Y2U0MzQ3Y2Y0NDQ2ZDA0NTQ1ZDI0NjQ0ZDM0NzQzZDQ0ODQyZDU0YTQxZDc0YjNmZDg0YzNlZDk0ZDNkZGE0ZTNjZGI1MDNiZGQ1MTNhZGU1MjM4ZGY1MzM3ZTA1NTM2ZTE1NjM1ZTI1NzM0ZTM1OTMzZTQ1YTMxZTU1YzMwZTY1ZDJmZTc1ZTJlZTg2MDJkZTk2MTJiZWE2MzJhZWI2NDI5ZWI2NjI4ZWM2NzI2ZWQ2OTI1ZWU2YTI0ZWY2YzIzZWY2ZTIxZjA2ZjIwZjE3MTFmZjE3MzFkZjI3NDFjZjM3NjFiZjM3ODE5ZjQ3OTE4ZjU3YjE3ZjU3ZDE1ZjY3ZTE0ZjY4MDEzZjc4MjEyZjc4NDEwZjg4NTBmZjg4NzBlZjg4OTBjZjk4YjBiZjk4YzBhZjk4ZTA5ZmE5MDA4ZmE5MjA3ZmE5NDA3ZmI5NjA2ZmI5NzA2ZmI5OTA2ZmI5YjA2ZmI5ZDA3ZmM5ZjA3ZmNhMTA4ZmNhMzA5ZmNhNTBhZmNhNjBjZmNhODBkZmNhYTBmZmNhYzExZmNhZTEyZmNiMDE0ZmNiMjE2ZmNiNDE4ZmJiNjFhZmJiODFkZmJiYTFmZmJiYzIxZmJiZTIzZmFjMDI2ZmFjMjI4ZmFjNDJhZmFjNjJkZjljNzJmZjljOTMyZjljYjM1ZjhjZDM3ZjhjZjNhZjdkMTNkZjdkMzQwZjZkNTQzZjZkNzQ2ZjVkOTQ5ZjVkYjRjZjRkZDRmZjRkZjUzZjRlMTU2ZjNlMzVhZjNlNTVkZjJlNjYxZjJlODY1ZjJlYTY5ZjFlYzZkZjFlZDcxZjFlZjc1ZjFmMTc5ZjJmMjdkZjJmNDgyZjNmNTg2ZjNmNjhhZjRmODhlZjVmOTkyZjZmYTk2ZjhmYjlhZjlmYzlkZmFmZGExZmNmZmE0XCIpKTtcblxuZXhwb3J0IHZhciBwbGFzbWEgPSByYW1wKGNvbG9ycyhcIjBkMDg4NzEwMDc4ODEzMDc4OTE2MDc4YTE5MDY4YzFiMDY4ZDFkMDY4ZTIwMDY4ZjIyMDY5MDI0MDY5MTI2MDU5MTI4MDU5MjJhMDU5MzJjMDU5NDJlMDU5NTJmMDU5NjMxMDU5NzMzMDU5NzM1MDQ5ODM3MDQ5OTM4MDQ5YTNhMDQ5YTNjMDQ5YjNlMDQ5YzNmMDQ5YzQxMDQ5ZDQzMDM5ZTQ0MDM5ZTQ2MDM5ZjQ4MDM5ZjQ5MDNhMDRiMDNhMTRjMDJhMTRlMDJhMjUwMDJhMjUxMDJhMzUzMDJhMzU1MDJhNDU2MDFhNDU4MDFhNDU5MDFhNTViMDFhNTVjMDFhNjVlMDFhNjYwMDFhNjYxMDBhNzYzMDBhNzY0MDBhNzY2MDBhNzY3MDBhODY5MDBhODZhMDBhODZjMDBhODZlMDBhODZmMDBhODcxMDBhODcyMDFhODc0MDFhODc1MDFhODc3MDFhODc4MDFhODdhMDJhODdiMDJhODdkMDNhODdlMDNhODgwMDRhODgxMDRhNzgzMDVhNzg0MDVhNzg2MDZhNjg3MDdhNjg4MDhhNjhhMDlhNThiMGFhNThkMGJhNThlMGNhNDhmMGRhNDkxMGVhMzkyMGZhMzk0MTBhMjk1MTFhMTk2MTNhMTk4MTRhMDk5MTU5ZjlhMTY5ZjljMTc5ZTlkMTg5ZDllMTk5ZGEwMWE5Y2ExMWI5YmEyMWQ5YWEzMWU5YWE1MWY5OWE2MjA5OGE3MjE5N2E4MjI5NmFhMjM5NWFiMjQ5NGFjMjY5NGFkMjc5M2FlMjg5MmIwMjk5MWIxMmE5MGIyMmI4ZmIzMmM4ZWI0MmU4ZGI1MmY4Y2I2MzA4YmI3MzE4YWI4MzI4OWJhMzM4OGJiMzQ4OGJjMzU4N2JkMzc4NmJlMzg4NWJmMzk4NGMwM2E4M2MxM2I4MmMyM2M4MWMzM2Q4MGM0M2U3ZmM1NDA3ZWM2NDE3ZGM3NDI3Y2M4NDM3YmM5NDQ3YWNhNDU3YWNiNDY3OWNjNDc3OGNjNDk3N2NkNGE3NmNlNGI3NWNmNGM3NGQwNGQ3M2QxNGU3MmQyNGY3MWQzNTE3MWQ0NTI3MGQ1NTM2ZmQ1NTQ2ZWQ2NTU2ZGQ3NTY2Y2Q4NTc2YmQ5NTg2YWRhNWE2YWRhNWI2OWRiNWM2OGRjNWQ2N2RkNWU2NmRlNWY2NWRlNjE2NGRmNjI2M2UwNjM2M2UxNjQ2MmUyNjU2MWUyNjY2MGUzNjg1ZmU0Njk1ZWU1NmE1ZGU1NmI1ZGU2NmM1Y2U3NmU1YmU3NmY1YWU4NzA1OWU5NzE1OGU5NzI1N2VhNzQ1N2ViNzU1NmViNzY1NWVjNzc1NGVkNzk1M2VkN2E1MmVlN2I1MWVmN2M1MWVmN2U1MGYwN2Y0ZmYwODA0ZWYxODE0ZGYxODM0Y2YyODQ0YmYzODU0YmYzODc0YWY0ODg0OWY0ODk0OGY1OGI0N2Y1OGM0NmY2OGQ0NWY2OGY0NGY3OTA0NGY3OTE0M2Y3OTM0MmY4OTQ0MWY4OTU0MGY5OTczZmY5OTgzZWY5OWEzZWZhOWIzZGZhOWMzY2ZhOWUzYmZiOWYzYWZiYTEzOWZiYTIzOGZjYTMzOGZjYTUzN2ZjYTYzNmZjYTgzNWZjYTkzNGZkYWIzM2ZkYWMzM2ZkYWUzMmZkYWYzMWZkYjEzMGZkYjIyZmZkYjQyZmZkYjUyZWZlYjcyZGZlYjgyY2ZlYmEyY2ZlYmIyYmZlYmQyYWZlYmUyYWZlYzAyOWZkYzIyOWZkYzMyOGZkYzUyN2ZkYzYyN2ZkYzgyN2ZkY2EyNmZkY2IyNmZjY2QyNWZjY2UyNWZjZDAyNWZjZDIyNWZiZDMyNGZiZDUyNGZiZDcyNGZhZDgyNGZhZGEyNGY5ZGMyNGY5ZGQyNWY4ZGYyNWY4ZTEyNWY3ZTIyNWY3ZTQyNWY2ZTYyNmY2ZTgyNmY1ZTkyNmY1ZWIyN2Y0ZWQyN2YzZWUyN2YzZjAyN2YyZjIyN2YxZjQyNmYxZjUyNWYwZjcyNGYwZjkyMVwiKSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJkZWViZjc5ZWNhZTEzMTgyYmRcIixcbiAgXCJlZmYzZmZiZGQ3ZTc2YmFlZDYyMTcxYjVcIixcbiAgXCJlZmYzZmZiZGQ3ZTc2YmFlZDYzMTgyYmQwODUxOWNcIixcbiAgXCJlZmYzZmZjNmRiZWY5ZWNhZTE2YmFlZDYzMTgyYmQwODUxOWNcIixcbiAgXCJlZmYzZmZjNmRiZWY5ZWNhZTE2YmFlZDY0MjkyYzYyMTcxYjUwODQ1OTRcIixcbiAgXCJmN2ZiZmZkZWViZjdjNmRiZWY5ZWNhZTE2YmFlZDY0MjkyYzYyMTcxYjUwODQ1OTRcIixcbiAgXCJmN2ZiZmZkZWViZjdjNmRiZWY5ZWNhZTE2YmFlZDY0MjkyYzYyMTcxYjUwODUxOWMwODMwNmJcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZTVmNWUwYTFkOTliMzFhMzU0XCIsXG4gIFwiZWRmOGU5YmFlNGIzNzRjNDc2MjM4YjQ1XCIsXG4gIFwiZWRmOGU5YmFlNGIzNzRjNDc2MzFhMzU0MDA2ZDJjXCIsXG4gIFwiZWRmOGU5YzdlOWMwYTFkOTliNzRjNDc2MzFhMzU0MDA2ZDJjXCIsXG4gIFwiZWRmOGU5YzdlOWMwYTFkOTliNzRjNDc2NDFhYjVkMjM4YjQ1MDA1YTMyXCIsXG4gIFwiZjdmY2Y1ZTVmNWUwYzdlOWMwYTFkOTliNzRjNDc2NDFhYjVkMjM4YjQ1MDA1YTMyXCIsXG4gIFwiZjdmY2Y1ZTVmNWUwYzdlOWMwYTFkOTliNzRjNDc2NDFhYjVkMjM4YjQ1MDA2ZDJjMDA0NDFiXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImYwZjBmMGJkYmRiZDYzNjM2M1wiLFxuICBcImY3ZjdmN2NjY2NjYzk2OTY5NjUyNTI1MlwiLFxuICBcImY3ZjdmN2NjY2NjYzk2OTY5NjYzNjM2MzI1MjUyNVwiLFxuICBcImY3ZjdmN2Q5ZDlkOWJkYmRiZDk2OTY5NjYzNjM2MzI1MjUyNVwiLFxuICBcImY3ZjdmN2Q5ZDlkOWJkYmRiZDk2OTY5NjczNzM3MzUyNTI1MjI1MjUyNVwiLFxuICBcImZmZmZmZmYwZjBmMGQ5ZDlkOWJkYmRiZDk2OTY5NjczNzM3MzUyNTI1MjI1MjUyNVwiLFxuICBcImZmZmZmZmYwZjBmMGQ5ZDlkOWJkYmRiZDk2OTY5NjczNzM3MzUyNTI1MjI1MjUyNTAwMDAwMFwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJmZWU2Y2VmZGFlNmJlNjU1MGRcIixcbiAgXCJmZWVkZGVmZGJlODVmZDhkM2NkOTQ3MDFcIixcbiAgXCJmZWVkZGVmZGJlODVmZDhkM2NlNjU1MGRhNjM2MDNcIixcbiAgXCJmZWVkZGVmZGQwYTJmZGFlNmJmZDhkM2NlNjU1MGRhNjM2MDNcIixcbiAgXCJmZWVkZGVmZGQwYTJmZGFlNmJmZDhkM2NmMTY5MTNkOTQ4MDE4YzJkMDRcIixcbiAgXCJmZmY1ZWJmZWU2Y2VmZGQwYTJmZGFlNmJmZDhkM2NmMTY5MTNkOTQ4MDE4YzJkMDRcIixcbiAgXCJmZmY1ZWJmZWU2Y2VmZGQwYTJmZGFlNmJmZDhkM2NmMTY5MTNkOTQ4MDFhNjM2MDM3ZjI3MDRcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZWZlZGY1YmNiZGRjNzU2YmIxXCIsXG4gIFwiZjJmMGY3Y2JjOWUyOWU5YWM4NmE1MWEzXCIsXG4gIFwiZjJmMGY3Y2JjOWUyOWU5YWM4NzU2YmIxNTQyNzhmXCIsXG4gIFwiZjJmMGY3ZGFkYWViYmNiZGRjOWU5YWM4NzU2YmIxNTQyNzhmXCIsXG4gIFwiZjJmMGY3ZGFkYWViYmNiZGRjOWU5YWM4ODA3ZGJhNmE1MWEzNGExNDg2XCIsXG4gIFwiZmNmYmZkZWZlZGY1ZGFkYWViYmNiZGRjOWU5YWM4ODA3ZGJhNmE1MWEzNGExNDg2XCIsXG4gIFwiZmNmYmZkZWZlZGY1ZGFkYWViYmNiZGRjOWU5YWM4ODA3ZGJhNmE1MWEzNTQyNzhmM2YwMDdkXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImZlZTBkMmZjOTI3MmRlMmQyNlwiLFxuICBcImZlZTVkOWZjYWU5MWZiNmE0YWNiMTgxZFwiLFxuICBcImZlZTVkOWZjYWU5MWZiNmE0YWRlMmQyNmE1MGYxNVwiLFxuICBcImZlZTVkOWZjYmJhMWZjOTI3MmZiNmE0YWRlMmQyNmE1MGYxNVwiLFxuICBcImZlZTVkOWZjYmJhMWZjOTI3MmZiNmE0YWVmM2IyY2NiMTgxZDk5MDAwZFwiLFxuICBcImZmZjVmMGZlZTBkMmZjYmJhMWZjOTI3MmZiNmE0YWVmM2IyY2NiMTgxZDk5MDAwZFwiLFxuICBcImZmZjVmMGZlZTBkMmZjYmJhMWZjOTI3MmZiNmE0YWVmM2IyY2NiMTgxZGE1MGYxNTY3MDAwZFwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJ2YXIgYXJyYXkgPSBBcnJheS5wcm90b3R5cGU7XG5cbmV4cG9ydCB2YXIgbWFwID0gYXJyYXkubWFwO1xuZXhwb3J0IHZhciBzbGljZSA9IGFycmF5LnNsaWNlO1xuIiwiaW1wb3J0IHtyYW5nZSBhcyBzZXF1ZW5jZX0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuaW1wb3J0IG9yZGluYWwgZnJvbSBcIi4vb3JkaW5hbFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBiYW5kKCkge1xuICB2YXIgc2NhbGUgPSBvcmRpbmFsKCkudW5rbm93bih1bmRlZmluZWQpLFxuICAgICAgZG9tYWluID0gc2NhbGUuZG9tYWluLFxuICAgICAgb3JkaW5hbFJhbmdlID0gc2NhbGUucmFuZ2UsXG4gICAgICByYW5nZSA9IFswLCAxXSxcbiAgICAgIHN0ZXAsXG4gICAgICBiYW5kd2lkdGgsXG4gICAgICByb3VuZCA9IGZhbHNlLFxuICAgICAgcGFkZGluZ0lubmVyID0gMCxcbiAgICAgIHBhZGRpbmdPdXRlciA9IDAsXG4gICAgICBhbGlnbiA9IDAuNTtcblxuICBkZWxldGUgc2NhbGUudW5rbm93bjtcblxuICBmdW5jdGlvbiByZXNjYWxlKCkge1xuICAgIHZhciBuID0gZG9tYWluKCkubGVuZ3RoLFxuICAgICAgICByZXZlcnNlID0gcmFuZ2VbMV0gPCByYW5nZVswXSxcbiAgICAgICAgc3RhcnQgPSByYW5nZVtyZXZlcnNlIC0gMF0sXG4gICAgICAgIHN0b3AgPSByYW5nZVsxIC0gcmV2ZXJzZV07XG4gICAgc3RlcCA9IChzdG9wIC0gc3RhcnQpIC8gTWF0aC5tYXgoMSwgbiAtIHBhZGRpbmdJbm5lciArIHBhZGRpbmdPdXRlciAqIDIpO1xuICAgIGlmIChyb3VuZCkgc3RlcCA9IE1hdGguZmxvb3Ioc3RlcCk7XG4gICAgc3RhcnQgKz0gKHN0b3AgLSBzdGFydCAtIHN0ZXAgKiAobiAtIHBhZGRpbmdJbm5lcikpICogYWxpZ247XG4gICAgYmFuZHdpZHRoID0gc3RlcCAqICgxIC0gcGFkZGluZ0lubmVyKTtcbiAgICBpZiAocm91bmQpIHN0YXJ0ID0gTWF0aC5yb3VuZChzdGFydCksIGJhbmR3aWR0aCA9IE1hdGgucm91bmQoYmFuZHdpZHRoKTtcbiAgICB2YXIgdmFsdWVzID0gc2VxdWVuY2UobikubWFwKGZ1bmN0aW9uKGkpIHsgcmV0dXJuIHN0YXJ0ICsgc3RlcCAqIGk7IH0pO1xuICAgIHJldHVybiBvcmRpbmFsUmFuZ2UocmV2ZXJzZSA/IHZhbHVlcy5yZXZlcnNlKCkgOiB2YWx1ZXMpO1xuICB9XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRvbWFpbihfKSwgcmVzY2FsZSgpKSA6IGRvbWFpbigpO1xuICB9O1xuXG4gIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhbmdlID0gWytfWzBdLCArX1sxXV0sIHJlc2NhbGUoKSkgOiByYW5nZS5zbGljZSgpO1xuICB9O1xuXG4gIHNjYWxlLnJhbmdlUm91bmQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIHJhbmdlID0gWytfWzBdLCArX1sxXV0sIHJvdW5kID0gdHJ1ZSwgcmVzY2FsZSgpO1xuICB9O1xuXG4gIHNjYWxlLmJhbmR3aWR0aCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBiYW5kd2lkdGg7XG4gIH07XG5cbiAgc2NhbGUuc3RlcCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBzdGVwO1xuICB9O1xuXG4gIHNjYWxlLnJvdW5kID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJvdW5kID0gISFfLCByZXNjYWxlKCkpIDogcm91bmQ7XG4gIH07XG5cbiAgc2NhbGUucGFkZGluZyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nSW5uZXIgPSBNYXRoLm1pbigxLCBwYWRkaW5nT3V0ZXIgPSArXyksIHJlc2NhbGUoKSkgOiBwYWRkaW5nSW5uZXI7XG4gIH07XG5cbiAgc2NhbGUucGFkZGluZ0lubmVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdJbm5lciA9IE1hdGgubWluKDEsIF8pLCByZXNjYWxlKCkpIDogcGFkZGluZ0lubmVyO1xuICB9O1xuXG4gIHNjYWxlLnBhZGRpbmdPdXRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nT3V0ZXIgPSArXywgcmVzY2FsZSgpKSA6IHBhZGRpbmdPdXRlcjtcbiAgfTtcblxuICBzY2FsZS5hbGlnbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhbGlnbiA9IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIF8pKSwgcmVzY2FsZSgpKSA6IGFsaWduO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gYmFuZChkb21haW4oKSwgcmFuZ2UpXG4gICAgICAgIC5yb3VuZChyb3VuZClcbiAgICAgICAgLnBhZGRpbmdJbm5lcihwYWRkaW5nSW5uZXIpXG4gICAgICAgIC5wYWRkaW5nT3V0ZXIocGFkZGluZ091dGVyKVxuICAgICAgICAuYWxpZ24oYWxpZ24pO1xuICB9O1xuXG4gIHJldHVybiBpbml0UmFuZ2UuYXBwbHkocmVzY2FsZSgpLCBhcmd1bWVudHMpO1xufVxuXG5mdW5jdGlvbiBwb2ludGlzaChzY2FsZSkge1xuICB2YXIgY29weSA9IHNjYWxlLmNvcHk7XG5cbiAgc2NhbGUucGFkZGluZyA9IHNjYWxlLnBhZGRpbmdPdXRlcjtcbiAgZGVsZXRlIHNjYWxlLnBhZGRpbmdJbm5lcjtcbiAgZGVsZXRlIHNjYWxlLnBhZGRpbmdPdXRlcjtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHBvaW50aXNoKGNvcHkoKSk7XG4gIH07XG5cbiAgcmV0dXJuIHNjYWxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcG9pbnQoKSB7XG4gIHJldHVybiBwb2ludGlzaChiYW5kLmFwcGx5KG51bGwsIGFyZ3VtZW50cykucGFkZGluZ0lubmVyKDEpKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiaW1wb3J0IHtiaXNlY3R9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtpbnRlcnBvbGF0ZSBhcyBpbnRlcnBvbGF0ZVZhbHVlLCBpbnRlcnBvbGF0ZU51bWJlciwgaW50ZXJwb2xhdGVSb3VuZH0gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5pbXBvcnQge21hcCwgc2xpY2V9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBudW1iZXIgZnJvbSBcIi4vbnVtYmVyXCI7XG5cbnZhciB1bml0ID0gWzAsIDFdO1xuXG5leHBvcnQgZnVuY3Rpb24gaWRlbnRpdHkoeCkge1xuICByZXR1cm4geDtcbn1cblxuZnVuY3Rpb24gbm9ybWFsaXplKGEsIGIpIHtcbiAgcmV0dXJuIChiIC09IChhID0gK2EpKVxuICAgICAgPyBmdW5jdGlvbih4KSB7IHJldHVybiAoeCAtIGEpIC8gYjsgfVxuICAgICAgOiBjb25zdGFudChpc05hTihiKSA/IE5hTiA6IDAuNSk7XG59XG5cbmZ1bmN0aW9uIGNsYW1wZXIoZG9tYWluKSB7XG4gIHZhciBhID0gZG9tYWluWzBdLCBiID0gZG9tYWluW2RvbWFpbi5sZW5ndGggLSAxXSwgdDtcbiAgaWYgKGEgPiBiKSB0ID0gYSwgYSA9IGIsIGIgPSB0O1xuICByZXR1cm4gZnVuY3Rpb24oeCkgeyByZXR1cm4gTWF0aC5tYXgoYSwgTWF0aC5taW4oYiwgeCkpOyB9O1xufVxuXG4vLyBub3JtYWxpemUoYSwgYikoeCkgdGFrZXMgYSBkb21haW4gdmFsdWUgeCBpbiBbYSxiXSBhbmQgcmV0dXJucyB0aGUgY29ycmVzcG9uZGluZyBwYXJhbWV0ZXIgdCBpbiBbMCwxXS5cbi8vIGludGVycG9sYXRlKGEsIGIpKHQpIHRha2VzIGEgcGFyYW1ldGVyIHQgaW4gWzAsMV0gYW5kIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgcmFuZ2UgdmFsdWUgeCBpbiBbYSxiXS5cbmZ1bmN0aW9uIGJpbWFwKGRvbWFpbiwgcmFuZ2UsIGludGVycG9sYXRlKSB7XG4gIHZhciBkMCA9IGRvbWFpblswXSwgZDEgPSBkb21haW5bMV0sIHIwID0gcmFuZ2VbMF0sIHIxID0gcmFuZ2VbMV07XG4gIGlmIChkMSA8IGQwKSBkMCA9IG5vcm1hbGl6ZShkMSwgZDApLCByMCA9IGludGVycG9sYXRlKHIxLCByMCk7XG4gIGVsc2UgZDAgPSBub3JtYWxpemUoZDAsIGQxKSwgcjAgPSBpbnRlcnBvbGF0ZShyMCwgcjEpO1xuICByZXR1cm4gZnVuY3Rpb24oeCkgeyByZXR1cm4gcjAoZDAoeCkpOyB9O1xufVxuXG5mdW5jdGlvbiBwb2x5bWFwKGRvbWFpbiwgcmFuZ2UsIGludGVycG9sYXRlKSB7XG4gIHZhciBqID0gTWF0aC5taW4oZG9tYWluLmxlbmd0aCwgcmFuZ2UubGVuZ3RoKSAtIDEsXG4gICAgICBkID0gbmV3IEFycmF5KGopLFxuICAgICAgciA9IG5ldyBBcnJheShqKSxcbiAgICAgIGkgPSAtMTtcblxuICAvLyBSZXZlcnNlIGRlc2NlbmRpbmcgZG9tYWlucy5cbiAgaWYgKGRvbWFpbltqXSA8IGRvbWFpblswXSkge1xuICAgIGRvbWFpbiA9IGRvbWFpbi5zbGljZSgpLnJldmVyc2UoKTtcbiAgICByYW5nZSA9IHJhbmdlLnNsaWNlKCkucmV2ZXJzZSgpO1xuICB9XG5cbiAgd2hpbGUgKCsraSA8IGopIHtcbiAgICBkW2ldID0gbm9ybWFsaXplKGRvbWFpbltpXSwgZG9tYWluW2kgKyAxXSk7XG4gICAgcltpXSA9IGludGVycG9sYXRlKHJhbmdlW2ldLCByYW5nZVtpICsgMV0pO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICB2YXIgaSA9IGJpc2VjdChkb21haW4sIHgsIDEsIGopIC0gMTtcbiAgICByZXR1cm4gcltpXShkW2ldKHgpKTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvcHkoc291cmNlLCB0YXJnZXQpIHtcbiAgcmV0dXJuIHRhcmdldFxuICAgICAgLmRvbWFpbihzb3VyY2UuZG9tYWluKCkpXG4gICAgICAucmFuZ2Uoc291cmNlLnJhbmdlKCkpXG4gICAgICAuaW50ZXJwb2xhdGUoc291cmNlLmludGVycG9sYXRlKCkpXG4gICAgICAuY2xhbXAoc291cmNlLmNsYW1wKCkpXG4gICAgICAudW5rbm93bihzb3VyY2UudW5rbm93bigpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybWVyKCkge1xuICB2YXIgZG9tYWluID0gdW5pdCxcbiAgICAgIHJhbmdlID0gdW5pdCxcbiAgICAgIGludGVycG9sYXRlID0gaW50ZXJwb2xhdGVWYWx1ZSxcbiAgICAgIHRyYW5zZm9ybSxcbiAgICAgIHVudHJhbnNmb3JtLFxuICAgICAgdW5rbm93bixcbiAgICAgIGNsYW1wID0gaWRlbnRpdHksXG4gICAgICBwaWVjZXdpc2UsXG4gICAgICBvdXRwdXQsXG4gICAgICBpbnB1dDtcblxuICBmdW5jdGlvbiByZXNjYWxlKCkge1xuICAgIHBpZWNld2lzZSA9IE1hdGgubWluKGRvbWFpbi5sZW5ndGgsIHJhbmdlLmxlbmd0aCkgPiAyID8gcG9seW1hcCA6IGJpbWFwO1xuICAgIG91dHB1dCA9IGlucHV0ID0gbnVsbDtcbiAgICByZXR1cm4gc2NhbGU7XG4gIH1cblxuICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgcmV0dXJuIGlzTmFOKHggPSAreCkgPyB1bmtub3duIDogKG91dHB1dCB8fCAob3V0cHV0ID0gcGllY2V3aXNlKGRvbWFpbi5tYXAodHJhbnNmb3JtKSwgcmFuZ2UsIGludGVycG9sYXRlKSkpKHRyYW5zZm9ybShjbGFtcCh4KSkpO1xuICB9XG5cbiAgc2NhbGUuaW52ZXJ0ID0gZnVuY3Rpb24oeSkge1xuICAgIHJldHVybiBjbGFtcCh1bnRyYW5zZm9ybSgoaW5wdXQgfHwgKGlucHV0ID0gcGllY2V3aXNlKHJhbmdlLCBkb21haW4ubWFwKHRyYW5zZm9ybSksIGludGVycG9sYXRlTnVtYmVyKSkpKHkpKSk7XG4gIH07XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRvbWFpbiA9IG1hcC5jYWxsKF8sIG51bWJlciksIGNsYW1wID09PSBpZGVudGl0eSB8fCAoY2xhbXAgPSBjbGFtcGVyKGRvbWFpbikpLCByZXNjYWxlKCkpIDogZG9tYWluLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocmFuZ2UgPSBzbGljZS5jYWxsKF8pLCByZXNjYWxlKCkpIDogcmFuZ2Uuc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS5yYW5nZVJvdW5kID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiByYW5nZSA9IHNsaWNlLmNhbGwoXyksIGludGVycG9sYXRlID0gaW50ZXJwb2xhdGVSb3VuZCwgcmVzY2FsZSgpO1xuICB9O1xuXG4gIHNjYWxlLmNsYW1wID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNsYW1wID0gXyA/IGNsYW1wZXIoZG9tYWluKSA6IGlkZW50aXR5LCBzY2FsZSkgOiBjbGFtcCAhPT0gaWRlbnRpdHk7XG4gIH07XG5cbiAgc2NhbGUuaW50ZXJwb2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaW50ZXJwb2xhdGUgPSBfLCByZXNjYWxlKCkpIDogaW50ZXJwb2xhdGU7XG4gIH07XG5cbiAgc2NhbGUudW5rbm93biA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1bmtub3duID0gXywgc2NhbGUpIDogdW5rbm93bjtcbiAgfTtcblxuICByZXR1cm4gZnVuY3Rpb24odCwgdSkge1xuICAgIHRyYW5zZm9ybSA9IHQsIHVudHJhbnNmb3JtID0gdTtcbiAgICByZXR1cm4gcmVzY2FsZSgpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb250aW51b3VzKHRyYW5zZm9ybSwgdW50cmFuc2Zvcm0pIHtcbiAgcmV0dXJuIHRyYW5zZm9ybWVyKCkodHJhbnNmb3JtLCB1bnRyYW5zZm9ybSk7XG59XG4iLCJpbXBvcnQge2lkZW50aXR5fSBmcm9tIFwiLi9jb250aW51b3VzXCI7XG5pbXBvcnQge2luaXRJbnRlcnBvbGF0b3J9IGZyb20gXCIuL2luaXRcIjtcbmltcG9ydCB7bGluZWFyaXNofSBmcm9tIFwiLi9saW5lYXJcIjtcbmltcG9ydCB7bG9nZ2lzaH0gZnJvbSBcIi4vbG9nXCI7XG5pbXBvcnQge2NvcHl9IGZyb20gXCIuL3NlcXVlbnRpYWxcIjtcbmltcG9ydCB7c3ltbG9naXNofSBmcm9tIFwiLi9zeW1sb2dcIjtcbmltcG9ydCB7cG93aXNofSBmcm9tIFwiLi9wb3dcIjtcblxuZnVuY3Rpb24gdHJhbnNmb3JtZXIoKSB7XG4gIHZhciB4MCA9IDAsXG4gICAgICB4MSA9IDAuNSxcbiAgICAgIHgyID0gMSxcbiAgICAgIHQwLFxuICAgICAgdDEsXG4gICAgICB0MixcbiAgICAgIGsxMCxcbiAgICAgIGsyMSxcbiAgICAgIGludGVycG9sYXRvciA9IGlkZW50aXR5LFxuICAgICAgdHJhbnNmb3JtLFxuICAgICAgY2xhbXAgPSBmYWxzZSxcbiAgICAgIHVua25vd247XG5cbiAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgIHJldHVybiBpc05hTih4ID0gK3gpID8gdW5rbm93biA6ICh4ID0gMC41ICsgKCh4ID0gK3RyYW5zZm9ybSh4KSkgLSB0MSkgKiAoeCA8IHQxID8gazEwIDogazIxKSwgaW50ZXJwb2xhdG9yKGNsYW1wID8gTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgeCkpIDogeCkpO1xuICB9XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQwID0gdHJhbnNmb3JtKHgwID0gK19bMF0pLCB0MSA9IHRyYW5zZm9ybSh4MSA9ICtfWzFdKSwgdDIgPSB0cmFuc2Zvcm0oeDIgPSArX1syXSksIGsxMCA9IHQwID09PSB0MSA/IDAgOiAwLjUgLyAodDEgLSB0MCksIGsyMSA9IHQxID09PSB0MiA/IDAgOiAwLjUgLyAodDIgLSB0MSksIHNjYWxlKSA6IFt4MCwgeDEsIHgyXTtcbiAgfTtcblxuICBzY2FsZS5jbGFtcCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjbGFtcCA9ICEhXywgc2NhbGUpIDogY2xhbXA7XG4gIH07XG5cbiAgc2NhbGUuaW50ZXJwb2xhdG9yID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGludGVycG9sYXRvciA9IF8sIHNjYWxlKSA6IGludGVycG9sYXRvcjtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdHJhbnNmb3JtID0gdCwgdDAgPSB0KHgwKSwgdDEgPSB0KHgxKSwgdDIgPSB0KHgyKSwgazEwID0gdDAgPT09IHQxID8gMCA6IDAuNSAvICh0MSAtIHQwKSwgazIxID0gdDEgPT09IHQyID8gMCA6IDAuNSAvICh0MiAtIHQxKTtcbiAgICByZXR1cm4gc2NhbGU7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRpdmVyZ2luZygpIHtcbiAgdmFyIHNjYWxlID0gbGluZWFyaXNoKHRyYW5zZm9ybWVyKCkoaWRlbnRpdHkpKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIGRpdmVyZ2luZygpKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdEludGVycG9sYXRvci5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpdmVyZ2luZ0xvZygpIHtcbiAgdmFyIHNjYWxlID0gbG9nZ2lzaCh0cmFuc2Zvcm1lcigpKS5kb21haW4oWzAuMSwgMSwgMTBdKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIGRpdmVyZ2luZ0xvZygpKS5iYXNlKHNjYWxlLmJhc2UoKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXZlcmdpbmdTeW1sb2coKSB7XG4gIHZhciBzY2FsZSA9IHN5bWxvZ2lzaCh0cmFuc2Zvcm1lcigpKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIGRpdmVyZ2luZ1N5bWxvZygpKS5jb25zdGFudChzY2FsZS5jb25zdGFudCgpKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdEludGVycG9sYXRvci5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpdmVyZ2luZ1BvdygpIHtcbiAgdmFyIHNjYWxlID0gcG93aXNoKHRyYW5zZm9ybWVyKCkpO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgZGl2ZXJnaW5nUG93KCkpLmV4cG9uZW50KHNjYWxlLmV4cG9uZW50KCkpO1xuICB9O1xuXG4gIHJldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGl2ZXJnaW5nU3FydCgpIHtcbiAgcmV0dXJuIGRpdmVyZ2luZ1Bvdy5hcHBseShudWxsLCBhcmd1bWVudHMpLmV4cG9uZW50KDAuNSk7XG59XG4iLCJpbXBvcnQge21hcH0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCB7bGluZWFyaXNofSBmcm9tIFwiLi9saW5lYXJcIjtcbmltcG9ydCBudW1iZXIgZnJvbSBcIi4vbnVtYmVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlkZW50aXR5KGRvbWFpbikge1xuICB2YXIgdW5rbm93bjtcblxuICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgcmV0dXJuIGlzTmFOKHggPSAreCkgPyB1bmtub3duIDogeDtcbiAgfVxuXG4gIHNjYWxlLmludmVydCA9IHNjYWxlO1xuXG4gIHNjYWxlLmRvbWFpbiA9IHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRvbWFpbiA9IG1hcC5jYWxsKF8sIG51bWJlciksIHNjYWxlKSA6IGRvbWFpbi5zbGljZSgpO1xuICB9O1xuXG4gIHNjYWxlLnVua25vd24gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodW5rbm93biA9IF8sIHNjYWxlKSA6IHVua25vd247XG4gIH07XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBpZGVudGl0eShkb21haW4pLnVua25vd24odW5rbm93bik7XG4gIH07XG5cbiAgZG9tYWluID0gYXJndW1lbnRzLmxlbmd0aCA/IG1hcC5jYWxsKGRvbWFpbiwgbnVtYmVyKSA6IFswLCAxXTtcblxuICByZXR1cm4gbGluZWFyaXNoKHNjYWxlKTtcbn1cbiIsImV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVCYW5kLFxuICBwb2ludCBhcyBzY2FsZVBvaW50XG59IGZyb20gXCIuL2JhbmRcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZUlkZW50aXR5XG59IGZyb20gXCIuL2lkZW50aXR5XCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVMaW5lYXJcbn0gZnJvbSBcIi4vbGluZWFyXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVMb2dcbn0gZnJvbSBcIi4vbG9nXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVTeW1sb2dcbn0gZnJvbSBcIi4vc3ltbG9nXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVPcmRpbmFsLFxuICBpbXBsaWNpdCBhcyBzY2FsZUltcGxpY2l0XG59IGZyb20gXCIuL29yZGluYWxcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZVBvdyxcbiAgc3FydCBhcyBzY2FsZVNxcnRcbn0gZnJvbSBcIi4vcG93XCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVRdWFudGlsZVxufSBmcm9tIFwiLi9xdWFudGlsZVwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHNjYWxlUXVhbnRpemVcbn0gZnJvbSBcIi4vcXVhbnRpemVcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZVRocmVzaG9sZFxufSBmcm9tIFwiLi90aHJlc2hvbGRcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZVRpbWVcbn0gZnJvbSBcIi4vdGltZVwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHNjYWxlVXRjXG59IGZyb20gXCIuL3V0Y1RpbWVcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZVNlcXVlbnRpYWwsXG4gIHNlcXVlbnRpYWxMb2cgYXMgc2NhbGVTZXF1ZW50aWFsTG9nLFxuICBzZXF1ZW50aWFsUG93IGFzIHNjYWxlU2VxdWVudGlhbFBvdyxcbiAgc2VxdWVudGlhbFNxcnQgYXMgc2NhbGVTZXF1ZW50aWFsU3FydCxcbiAgc2VxdWVudGlhbFN5bWxvZyBhcyBzY2FsZVNlcXVlbnRpYWxTeW1sb2dcbn0gZnJvbSBcIi4vc2VxdWVudGlhbFwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHNjYWxlU2VxdWVudGlhbFF1YW50aWxlXG59IGZyb20gXCIuL3NlcXVlbnRpYWxRdWFudGlsZVwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHNjYWxlRGl2ZXJnaW5nLFxuICBkaXZlcmdpbmdMb2cgYXMgc2NhbGVEaXZlcmdpbmdMb2csXG4gIGRpdmVyZ2luZ1BvdyBhcyBzY2FsZURpdmVyZ2luZ1BvdyxcbiAgZGl2ZXJnaW5nU3FydCBhcyBzY2FsZURpdmVyZ2luZ1NxcnQsXG4gIGRpdmVyZ2luZ1N5bWxvZyBhcyBzY2FsZURpdmVyZ2luZ1N5bWxvZ1xufSBmcm9tIFwiLi9kaXZlcmdpbmdcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB0aWNrRm9ybWF0XG59IGZyb20gXCIuL3RpY2tGb3JtYXRcIjtcbiIsImV4cG9ydCBmdW5jdGlvbiBpbml0UmFuZ2UoZG9tYWluLCByYW5nZSkge1xuICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICBjYXNlIDA6IGJyZWFrO1xuICAgIGNhc2UgMTogdGhpcy5yYW5nZShkb21haW4pOyBicmVhaztcbiAgICBkZWZhdWx0OiB0aGlzLnJhbmdlKHJhbmdlKS5kb21haW4oZG9tYWluKTsgYnJlYWs7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0SW50ZXJwb2xhdG9yKGRvbWFpbiwgaW50ZXJwb2xhdG9yKSB7XG4gIHN3aXRjaCAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgIGNhc2UgMDogYnJlYWs7XG4gICAgY2FzZSAxOiB0aGlzLmludGVycG9sYXRvcihkb21haW4pOyBicmVhaztcbiAgICBkZWZhdWx0OiB0aGlzLmludGVycG9sYXRvcihpbnRlcnBvbGF0b3IpLmRvbWFpbihkb21haW4pOyBicmVhaztcbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbiIsImltcG9ydCB7dGlja3MsIHRpY2tJbmNyZW1lbnR9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IGNvbnRpbnVvdXMsIHtjb3B5LCBpZGVudGl0eX0gZnJvbSBcIi4vY29udGludW91c1wiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXRcIjtcbmltcG9ydCB0aWNrRm9ybWF0IGZyb20gXCIuL3RpY2tGb3JtYXRcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGxpbmVhcmlzaChzY2FsZSkge1xuICB2YXIgZG9tYWluID0gc2NhbGUuZG9tYWluO1xuXG4gIHNjYWxlLnRpY2tzID0gZnVuY3Rpb24oY291bnQpIHtcbiAgICB2YXIgZCA9IGRvbWFpbigpO1xuICAgIHJldHVybiB0aWNrcyhkWzBdLCBkW2QubGVuZ3RoIC0gMV0sIGNvdW50ID09IG51bGwgPyAxMCA6IGNvdW50KTtcbiAgfTtcblxuICBzY2FsZS50aWNrRm9ybWF0ID0gZnVuY3Rpb24oY291bnQsIHNwZWNpZmllcikge1xuICAgIHZhciBkID0gZG9tYWluKCk7XG4gICAgcmV0dXJuIHRpY2tGb3JtYXQoZFswXSwgZFtkLmxlbmd0aCAtIDFdLCBjb3VudCA9PSBudWxsID8gMTAgOiBjb3VudCwgc3BlY2lmaWVyKTtcbiAgfTtcblxuICBzY2FsZS5uaWNlID0gZnVuY3Rpb24oY291bnQpIHtcbiAgICBpZiAoY291bnQgPT0gbnVsbCkgY291bnQgPSAxMDtcblxuICAgIHZhciBkID0gZG9tYWluKCksXG4gICAgICAgIGkwID0gMCxcbiAgICAgICAgaTEgPSBkLmxlbmd0aCAtIDEsXG4gICAgICAgIHN0YXJ0ID0gZFtpMF0sXG4gICAgICAgIHN0b3AgPSBkW2kxXSxcbiAgICAgICAgc3RlcDtcblxuICAgIGlmIChzdG9wIDwgc3RhcnQpIHtcbiAgICAgIHN0ZXAgPSBzdGFydCwgc3RhcnQgPSBzdG9wLCBzdG9wID0gc3RlcDtcbiAgICAgIHN0ZXAgPSBpMCwgaTAgPSBpMSwgaTEgPSBzdGVwO1xuICAgIH1cblxuICAgIHN0ZXAgPSB0aWNrSW5jcmVtZW50KHN0YXJ0LCBzdG9wLCBjb3VudCk7XG5cbiAgICBpZiAoc3RlcCA+IDApIHtcbiAgICAgIHN0YXJ0ID0gTWF0aC5mbG9vcihzdGFydCAvIHN0ZXApICogc3RlcDtcbiAgICAgIHN0b3AgPSBNYXRoLmNlaWwoc3RvcCAvIHN0ZXApICogc3RlcDtcbiAgICAgIHN0ZXAgPSB0aWNrSW5jcmVtZW50KHN0YXJ0LCBzdG9wLCBjb3VudCk7XG4gICAgfSBlbHNlIGlmIChzdGVwIDwgMCkge1xuICAgICAgc3RhcnQgPSBNYXRoLmNlaWwoc3RhcnQgKiBzdGVwKSAvIHN0ZXA7XG4gICAgICBzdG9wID0gTWF0aC5mbG9vcihzdG9wICogc3RlcCkgLyBzdGVwO1xuICAgICAgc3RlcCA9IHRpY2tJbmNyZW1lbnQoc3RhcnQsIHN0b3AsIGNvdW50KTtcbiAgICB9XG5cbiAgICBpZiAoc3RlcCA+IDApIHtcbiAgICAgIGRbaTBdID0gTWF0aC5mbG9vcihzdGFydCAvIHN0ZXApICogc3RlcDtcbiAgICAgIGRbaTFdID0gTWF0aC5jZWlsKHN0b3AgLyBzdGVwKSAqIHN0ZXA7XG4gICAgICBkb21haW4oZCk7XG4gICAgfSBlbHNlIGlmIChzdGVwIDwgMCkge1xuICAgICAgZFtpMF0gPSBNYXRoLmNlaWwoc3RhcnQgKiBzdGVwKSAvIHN0ZXA7XG4gICAgICBkW2kxXSA9IE1hdGguZmxvb3Ioc3RvcCAqIHN0ZXApIC8gc3RlcDtcbiAgICAgIGRvbWFpbihkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc2NhbGU7XG4gIH07XG5cbiAgcmV0dXJuIHNjYWxlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsaW5lYXIoKSB7XG4gIHZhciBzY2FsZSA9IGNvbnRpbnVvdXMoaWRlbnRpdHksIGlkZW50aXR5KTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIGxpbmVhcigpKTtcbiAgfTtcblxuICBpbml0UmFuZ2UuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG5cbiAgcmV0dXJuIGxpbmVhcmlzaChzY2FsZSk7XG59XG4iLCJpbXBvcnQge3RpY2tzfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7Zm9ybWF0fSBmcm9tIFwiZDMtZm9ybWF0XCI7XG5pbXBvcnQgbmljZSBmcm9tIFwiLi9uaWNlXCI7XG5pbXBvcnQge2NvcHksIHRyYW5zZm9ybWVyfSBmcm9tIFwiLi9jb250aW51b3VzXCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuXG5mdW5jdGlvbiB0cmFuc2Zvcm1Mb2coeCkge1xuICByZXR1cm4gTWF0aC5sb2coeCk7XG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybUV4cCh4KSB7XG4gIHJldHVybiBNYXRoLmV4cCh4KTtcbn1cblxuZnVuY3Rpb24gdHJhbnNmb3JtTG9nbih4KSB7XG4gIHJldHVybiAtTWF0aC5sb2coLXgpO1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1FeHBuKHgpIHtcbiAgcmV0dXJuIC1NYXRoLmV4cCgteCk7XG59XG5cbmZ1bmN0aW9uIHBvdzEwKHgpIHtcbiAgcmV0dXJuIGlzRmluaXRlKHgpID8gKyhcIjFlXCIgKyB4KSA6IHggPCAwID8gMCA6IHg7XG59XG5cbmZ1bmN0aW9uIHBvd3AoYmFzZSkge1xuICByZXR1cm4gYmFzZSA9PT0gMTAgPyBwb3cxMFxuICAgICAgOiBiYXNlID09PSBNYXRoLkUgPyBNYXRoLmV4cFxuICAgICAgOiBmdW5jdGlvbih4KSB7IHJldHVybiBNYXRoLnBvdyhiYXNlLCB4KTsgfTtcbn1cblxuZnVuY3Rpb24gbG9ncChiYXNlKSB7XG4gIHJldHVybiBiYXNlID09PSBNYXRoLkUgPyBNYXRoLmxvZ1xuICAgICAgOiBiYXNlID09PSAxMCAmJiBNYXRoLmxvZzEwXG4gICAgICB8fCBiYXNlID09PSAyICYmIE1hdGgubG9nMlxuICAgICAgfHwgKGJhc2UgPSBNYXRoLmxvZyhiYXNlKSwgZnVuY3Rpb24oeCkgeyByZXR1cm4gTWF0aC5sb2coeCkgLyBiYXNlOyB9KTtcbn1cblxuZnVuY3Rpb24gcmVmbGVjdChmKSB7XG4gIHJldHVybiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIC1mKC14KTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvZ2dpc2godHJhbnNmb3JtKSB7XG4gIHZhciBzY2FsZSA9IHRyYW5zZm9ybSh0cmFuc2Zvcm1Mb2csIHRyYW5zZm9ybUV4cCksXG4gICAgICBkb21haW4gPSBzY2FsZS5kb21haW4sXG4gICAgICBiYXNlID0gMTAsXG4gICAgICBsb2dzLFxuICAgICAgcG93cztcblxuICBmdW5jdGlvbiByZXNjYWxlKCkge1xuICAgIGxvZ3MgPSBsb2dwKGJhc2UpLCBwb3dzID0gcG93cChiYXNlKTtcbiAgICBpZiAoZG9tYWluKClbMF0gPCAwKSB7XG4gICAgICBsb2dzID0gcmVmbGVjdChsb2dzKSwgcG93cyA9IHJlZmxlY3QocG93cyk7XG4gICAgICB0cmFuc2Zvcm0odHJhbnNmb3JtTG9nbiwgdHJhbnNmb3JtRXhwbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyYW5zZm9ybSh0cmFuc2Zvcm1Mb2csIHRyYW5zZm9ybUV4cCk7XG4gICAgfVxuICAgIHJldHVybiBzY2FsZTtcbiAgfVxuXG4gIHNjYWxlLmJhc2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYmFzZSA9ICtfLCByZXNjYWxlKCkpIDogYmFzZTtcbiAgfTtcblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZG9tYWluKF8pLCByZXNjYWxlKCkpIDogZG9tYWluKCk7XG4gIH07XG5cbiAgc2NhbGUudGlja3MgPSBmdW5jdGlvbihjb3VudCkge1xuICAgIHZhciBkID0gZG9tYWluKCksXG4gICAgICAgIHUgPSBkWzBdLFxuICAgICAgICB2ID0gZFtkLmxlbmd0aCAtIDFdLFxuICAgICAgICByO1xuXG4gICAgaWYgKHIgPSB2IDwgdSkgaSA9IHUsIHUgPSB2LCB2ID0gaTtcblxuICAgIHZhciBpID0gbG9ncyh1KSxcbiAgICAgICAgaiA9IGxvZ3ModiksXG4gICAgICAgIHAsXG4gICAgICAgIGssXG4gICAgICAgIHQsXG4gICAgICAgIG4gPSBjb3VudCA9PSBudWxsID8gMTAgOiArY291bnQsXG4gICAgICAgIHogPSBbXTtcblxuICAgIGlmICghKGJhc2UgJSAxKSAmJiBqIC0gaSA8IG4pIHtcbiAgICAgIGkgPSBNYXRoLnJvdW5kKGkpIC0gMSwgaiA9IE1hdGgucm91bmQoaikgKyAxO1xuICAgICAgaWYgKHUgPiAwKSBmb3IgKDsgaSA8IGo7ICsraSkge1xuICAgICAgICBmb3IgKGsgPSAxLCBwID0gcG93cyhpKTsgayA8IGJhc2U7ICsraykge1xuICAgICAgICAgIHQgPSBwICogaztcbiAgICAgICAgICBpZiAodCA8IHUpIGNvbnRpbnVlO1xuICAgICAgICAgIGlmICh0ID4gdikgYnJlYWs7XG4gICAgICAgICAgei5wdXNoKHQpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgZm9yICg7IGkgPCBqOyArK2kpIHtcbiAgICAgICAgZm9yIChrID0gYmFzZSAtIDEsIHAgPSBwb3dzKGkpOyBrID49IDE7IC0taykge1xuICAgICAgICAgIHQgPSBwICogaztcbiAgICAgICAgICBpZiAodCA8IHUpIGNvbnRpbnVlO1xuICAgICAgICAgIGlmICh0ID4gdikgYnJlYWs7XG4gICAgICAgICAgei5wdXNoKHQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHogPSB0aWNrcyhpLCBqLCBNYXRoLm1pbihqIC0gaSwgbikpLm1hcChwb3dzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gciA/IHoucmV2ZXJzZSgpIDogejtcbiAgfTtcblxuICBzY2FsZS50aWNrRm9ybWF0ID0gZnVuY3Rpb24oY291bnQsIHNwZWNpZmllcikge1xuICAgIGlmIChzcGVjaWZpZXIgPT0gbnVsbCkgc3BlY2lmaWVyID0gYmFzZSA9PT0gMTAgPyBcIi4wZVwiIDogXCIsXCI7XG4gICAgaWYgKHR5cGVvZiBzcGVjaWZpZXIgIT09IFwiZnVuY3Rpb25cIikgc3BlY2lmaWVyID0gZm9ybWF0KHNwZWNpZmllcik7XG4gICAgaWYgKGNvdW50ID09PSBJbmZpbml0eSkgcmV0dXJuIHNwZWNpZmllcjtcbiAgICBpZiAoY291bnQgPT0gbnVsbCkgY291bnQgPSAxMDtcbiAgICB2YXIgayA9IE1hdGgubWF4KDEsIGJhc2UgKiBjb3VudCAvIHNjYWxlLnRpY2tzKCkubGVuZ3RoKTsgLy8gVE9ETyBmYXN0IGVzdGltYXRlP1xuICAgIHJldHVybiBmdW5jdGlvbihkKSB7XG4gICAgICB2YXIgaSA9IGQgLyBwb3dzKE1hdGgucm91bmQobG9ncyhkKSkpO1xuICAgICAgaWYgKGkgKiBiYXNlIDwgYmFzZSAtIDAuNSkgaSAqPSBiYXNlO1xuICAgICAgcmV0dXJuIGkgPD0gayA/IHNwZWNpZmllcihkKSA6IFwiXCI7XG4gICAgfTtcbiAgfTtcblxuICBzY2FsZS5uaWNlID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGRvbWFpbihuaWNlKGRvbWFpbigpLCB7XG4gICAgICBmbG9vcjogZnVuY3Rpb24oeCkgeyByZXR1cm4gcG93cyhNYXRoLmZsb29yKGxvZ3MoeCkpKTsgfSxcbiAgICAgIGNlaWw6IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIHBvd3MoTWF0aC5jZWlsKGxvZ3MoeCkpKTsgfVxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gc2NhbGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxvZygpIHtcbiAgdmFyIHNjYWxlID0gbG9nZ2lzaCh0cmFuc2Zvcm1lcigpKS5kb21haW4oWzEsIDEwXSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBsb2coKSkuYmFzZShzY2FsZS5iYXNlKCkpO1xuICB9O1xuXG4gIGluaXRSYW5nZS5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcblxuICByZXR1cm4gc2NhbGU7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihkb21haW4sIGludGVydmFsKSB7XG4gIGRvbWFpbiA9IGRvbWFpbi5zbGljZSgpO1xuXG4gIHZhciBpMCA9IDAsXG4gICAgICBpMSA9IGRvbWFpbi5sZW5ndGggLSAxLFxuICAgICAgeDAgPSBkb21haW5baTBdLFxuICAgICAgeDEgPSBkb21haW5baTFdLFxuICAgICAgdDtcblxuICBpZiAoeDEgPCB4MCkge1xuICAgIHQgPSBpMCwgaTAgPSBpMSwgaTEgPSB0O1xuICAgIHQgPSB4MCwgeDAgPSB4MSwgeDEgPSB0O1xuICB9XG5cbiAgZG9tYWluW2kwXSA9IGludGVydmFsLmZsb29yKHgwKTtcbiAgZG9tYWluW2kxXSA9IGludGVydmFsLmNlaWwoeDEpO1xuICByZXR1cm4gZG9tYWluO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gK3g7XG59XG4iLCJpbXBvcnQge21hcH0gZnJvbSBcImQzLWNvbGxlY3Rpb25cIjtcbmltcG9ydCB7c2xpY2V9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuXG5leHBvcnQgdmFyIGltcGxpY2l0ID0ge25hbWU6IFwiaW1wbGljaXRcIn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG9yZGluYWwoKSB7XG4gIHZhciBpbmRleCA9IG1hcCgpLFxuICAgICAgZG9tYWluID0gW10sXG4gICAgICByYW5nZSA9IFtdLFxuICAgICAgdW5rbm93biA9IGltcGxpY2l0O1xuXG4gIGZ1bmN0aW9uIHNjYWxlKGQpIHtcbiAgICB2YXIga2V5ID0gZCArIFwiXCIsIGkgPSBpbmRleC5nZXQoa2V5KTtcbiAgICBpZiAoIWkpIHtcbiAgICAgIGlmICh1bmtub3duICE9PSBpbXBsaWNpdCkgcmV0dXJuIHVua25vd247XG4gICAgICBpbmRleC5zZXQoa2V5LCBpID0gZG9tYWluLnB1c2goZCkpO1xuICAgIH1cbiAgICByZXR1cm4gcmFuZ2VbKGkgLSAxKSAlIHJhbmdlLmxlbmd0aF07XG4gIH1cblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluLnNsaWNlKCk7XG4gICAgZG9tYWluID0gW10sIGluZGV4ID0gbWFwKCk7XG4gICAgdmFyIGkgPSAtMSwgbiA9IF8ubGVuZ3RoLCBkLCBrZXk7XG4gICAgd2hpbGUgKCsraSA8IG4pIGlmICghaW5kZXguaGFzKGtleSA9IChkID0gX1tpXSkgKyBcIlwiKSkgaW5kZXguc2V0KGtleSwgZG9tYWluLnB1c2goZCkpO1xuICAgIHJldHVybiBzY2FsZTtcbiAgfTtcblxuICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYW5nZSA9IHNsaWNlLmNhbGwoXyksIHNjYWxlKSA6IHJhbmdlLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUudW5rbm93biA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1bmtub3duID0gXywgc2NhbGUpIDogdW5rbm93bjtcbiAgfTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIG9yZGluYWwoZG9tYWluLCByYW5nZSkudW5rbm93bih1bmtub3duKTtcbiAgfTtcblxuICBpbml0UmFuZ2UuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG5cbiAgcmV0dXJuIHNjYWxlO1xufVxuIiwiaW1wb3J0IHtsaW5lYXJpc2h9IGZyb20gXCIuL2xpbmVhclwiO1xuaW1wb3J0IHtjb3B5LCBpZGVudGl0eSwgdHJhbnNmb3JtZXJ9IGZyb20gXCIuL2NvbnRpbnVvdXNcIjtcbmltcG9ydCB7aW5pdFJhbmdlfSBmcm9tIFwiLi9pbml0XCI7XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybVBvdyhleHBvbmVudCkge1xuICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiB4IDwgMCA/IC1NYXRoLnBvdygteCwgZXhwb25lbnQpIDogTWF0aC5wb3coeCwgZXhwb25lbnQpO1xuICB9O1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1TcXJ0KHgpIHtcbiAgcmV0dXJuIHggPCAwID8gLU1hdGguc3FydCgteCkgOiBNYXRoLnNxcnQoeCk7XG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybVNxdWFyZSh4KSB7XG4gIHJldHVybiB4IDwgMCA/IC14ICogeCA6IHggKiB4O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcG93aXNoKHRyYW5zZm9ybSkge1xuICB2YXIgc2NhbGUgPSB0cmFuc2Zvcm0oaWRlbnRpdHksIGlkZW50aXR5KSxcbiAgICAgIGV4cG9uZW50ID0gMTtcblxuICBmdW5jdGlvbiByZXNjYWxlKCkge1xuICAgIHJldHVybiBleHBvbmVudCA9PT0gMSA/IHRyYW5zZm9ybShpZGVudGl0eSwgaWRlbnRpdHkpXG4gICAgICAgIDogZXhwb25lbnQgPT09IDAuNSA/IHRyYW5zZm9ybSh0cmFuc2Zvcm1TcXJ0LCB0cmFuc2Zvcm1TcXVhcmUpXG4gICAgICAgIDogdHJhbnNmb3JtKHRyYW5zZm9ybVBvdyhleHBvbmVudCksIHRyYW5zZm9ybVBvdygxIC8gZXhwb25lbnQpKTtcbiAgfVxuXG4gIHNjYWxlLmV4cG9uZW50ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGV4cG9uZW50ID0gK18sIHJlc2NhbGUoKSkgOiBleHBvbmVudDtcbiAgfTtcblxuICByZXR1cm4gbGluZWFyaXNoKHNjYWxlKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcG93KCkge1xuICB2YXIgc2NhbGUgPSBwb3dpc2godHJhbnNmb3JtZXIoKSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBwb3coKSkuZXhwb25lbnQoc2NhbGUuZXhwb25lbnQoKSk7XG4gIH07XG5cbiAgaW5pdFJhbmdlLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xuXG4gIHJldHVybiBzY2FsZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNxcnQoKSB7XG4gIHJldHVybiBwb3cuYXBwbHkobnVsbCwgYXJndW1lbnRzKS5leHBvbmVudCgwLjUpO1xufVxuIiwiaW1wb3J0IHthc2NlbmRpbmcsIGJpc2VjdCwgcXVhbnRpbGUgYXMgdGhyZXNob2xkfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7c2xpY2V9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBxdWFudGlsZSgpIHtcbiAgdmFyIGRvbWFpbiA9IFtdLFxuICAgICAgcmFuZ2UgPSBbXSxcbiAgICAgIHRocmVzaG9sZHMgPSBbXSxcbiAgICAgIHVua25vd247XG5cbiAgZnVuY3Rpb24gcmVzY2FsZSgpIHtcbiAgICB2YXIgaSA9IDAsIG4gPSBNYXRoLm1heCgxLCByYW5nZS5sZW5ndGgpO1xuICAgIHRocmVzaG9sZHMgPSBuZXcgQXJyYXkobiAtIDEpO1xuICAgIHdoaWxlICgrK2kgPCBuKSB0aHJlc2hvbGRzW2kgLSAxXSA9IHRocmVzaG9sZChkb21haW4sIGkgLyBuKTtcbiAgICByZXR1cm4gc2NhbGU7XG4gIH1cblxuICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgcmV0dXJuIGlzTmFOKHggPSAreCkgPyB1bmtub3duIDogcmFuZ2VbYmlzZWN0KHRocmVzaG9sZHMsIHgpXTtcbiAgfVxuXG4gIHNjYWxlLmludmVydEV4dGVudCA9IGZ1bmN0aW9uKHkpIHtcbiAgICB2YXIgaSA9IHJhbmdlLmluZGV4T2YoeSk7XG4gICAgcmV0dXJuIGkgPCAwID8gW05hTiwgTmFOXSA6IFtcbiAgICAgIGkgPiAwID8gdGhyZXNob2xkc1tpIC0gMV0gOiBkb21haW5bMF0sXG4gICAgICBpIDwgdGhyZXNob2xkcy5sZW5ndGggPyB0aHJlc2hvbGRzW2ldIDogZG9tYWluW2RvbWFpbi5sZW5ndGggLSAxXVxuICAgIF07XG4gIH07XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRvbWFpbi5zbGljZSgpO1xuICAgIGRvbWFpbiA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwLCBuID0gXy5sZW5ndGgsIGQ7IGkgPCBuOyArK2kpIGlmIChkID0gX1tpXSwgZCAhPSBudWxsICYmICFpc05hTihkID0gK2QpKSBkb21haW4ucHVzaChkKTtcbiAgICBkb21haW4uc29ydChhc2NlbmRpbmcpO1xuICAgIHJldHVybiByZXNjYWxlKCk7XG4gIH07XG5cbiAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocmFuZ2UgPSBzbGljZS5jYWxsKF8pLCByZXNjYWxlKCkpIDogcmFuZ2Uuc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHNjYWxlLnF1YW50aWxlcyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aHJlc2hvbGRzLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBxdWFudGlsZSgpXG4gICAgICAgIC5kb21haW4oZG9tYWluKVxuICAgICAgICAucmFuZ2UocmFuZ2UpXG4gICAgICAgIC51bmtub3duKHVua25vd24pO1xuICB9O1xuXG4gIHJldHVybiBpbml0UmFuZ2UuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG4iLCJpbXBvcnQge2Jpc2VjdH0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge3NsaWNlfSBmcm9tIFwiLi9hcnJheVwiO1xuaW1wb3J0IHtsaW5lYXJpc2h9IGZyb20gXCIuL2xpbmVhclwiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcXVhbnRpemUoKSB7XG4gIHZhciB4MCA9IDAsXG4gICAgICB4MSA9IDEsXG4gICAgICBuID0gMSxcbiAgICAgIGRvbWFpbiA9IFswLjVdLFxuICAgICAgcmFuZ2UgPSBbMCwgMV0sXG4gICAgICB1bmtub3duO1xuXG4gIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICByZXR1cm4geCA8PSB4ID8gcmFuZ2VbYmlzZWN0KGRvbWFpbiwgeCwgMCwgbildIDogdW5rbm93bjtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgdmFyIGkgPSAtMTtcbiAgICBkb21haW4gPSBuZXcgQXJyYXkobik7XG4gICAgd2hpbGUgKCsraSA8IG4pIGRvbWFpbltpXSA9ICgoaSArIDEpICogeDEgLSAoaSAtIG4pICogeDApIC8gKG4gKyAxKTtcbiAgICByZXR1cm4gc2NhbGU7XG4gIH1cblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeDAgPSArX1swXSwgeDEgPSArX1sxXSwgcmVzY2FsZSgpKSA6IFt4MCwgeDFdO1xuICB9O1xuXG4gIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSAocmFuZ2UgPSBzbGljZS5jYWxsKF8pKS5sZW5ndGggLSAxLCByZXNjYWxlKCkpIDogcmFuZ2Uuc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS5pbnZlcnRFeHRlbnQgPSBmdW5jdGlvbih5KSB7XG4gICAgdmFyIGkgPSByYW5nZS5pbmRleE9mKHkpO1xuICAgIHJldHVybiBpIDwgMCA/IFtOYU4sIE5hTl1cbiAgICAgICAgOiBpIDwgMSA/IFt4MCwgZG9tYWluWzBdXVxuICAgICAgICA6IGkgPj0gbiA/IFtkb21haW5bbiAtIDFdLCB4MV1cbiAgICAgICAgOiBbZG9tYWluW2kgLSAxXSwgZG9tYWluW2ldXTtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiBzY2FsZTtcbiAgfTtcblxuICBzY2FsZS50aHJlc2hvbGRzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGRvbWFpbi5zbGljZSgpO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gcXVhbnRpemUoKVxuICAgICAgICAuZG9tYWluKFt4MCwgeDFdKVxuICAgICAgICAucmFuZ2UocmFuZ2UpXG4gICAgICAgIC51bmtub3duKHVua25vd24pO1xuICB9O1xuXG4gIHJldHVybiBpbml0UmFuZ2UuYXBwbHkobGluZWFyaXNoKHNjYWxlKSwgYXJndW1lbnRzKTtcbn1cbiIsImltcG9ydCB7aWRlbnRpdHl9IGZyb20gXCIuL2NvbnRpbnVvdXNcIjtcbmltcG9ydCB7aW5pdEludGVycG9sYXRvcn0gZnJvbSBcIi4vaW5pdFwiO1xuaW1wb3J0IHtsaW5lYXJpc2h9IGZyb20gXCIuL2xpbmVhclwiO1xuaW1wb3J0IHtsb2dnaXNofSBmcm9tIFwiLi9sb2dcIjtcbmltcG9ydCB7c3ltbG9naXNofSBmcm9tIFwiLi9zeW1sb2dcIjtcbmltcG9ydCB7cG93aXNofSBmcm9tIFwiLi9wb3dcIjtcblxuZnVuY3Rpb24gdHJhbnNmb3JtZXIoKSB7XG4gIHZhciB4MCA9IDAsXG4gICAgICB4MSA9IDEsXG4gICAgICB0MCxcbiAgICAgIHQxLFxuICAgICAgazEwLFxuICAgICAgdHJhbnNmb3JtLFxuICAgICAgaW50ZXJwb2xhdG9yID0gaWRlbnRpdHksXG4gICAgICBjbGFtcCA9IGZhbHNlLFxuICAgICAgdW5rbm93bjtcblxuICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgcmV0dXJuIGlzTmFOKHggPSAreCkgPyB1bmtub3duIDogaW50ZXJwb2xhdG9yKGsxMCA9PT0gMCA/IDAuNSA6ICh4ID0gKHRyYW5zZm9ybSh4KSAtIHQwKSAqIGsxMCwgY2xhbXAgPyBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB4KSkgOiB4KSk7XG4gIH1cblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodDAgPSB0cmFuc2Zvcm0oeDAgPSArX1swXSksIHQxID0gdHJhbnNmb3JtKHgxID0gK19bMV0pLCBrMTAgPSB0MCA9PT0gdDEgPyAwIDogMSAvICh0MSAtIHQwKSwgc2NhbGUpIDogW3gwLCB4MV07XG4gIH07XG5cbiAgc2NhbGUuY2xhbXAgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY2xhbXAgPSAhIV8sIHNjYWxlKSA6IGNsYW1wO1xuICB9O1xuXG4gIHNjYWxlLmludGVycG9sYXRvciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpbnRlcnBvbGF0b3IgPSBfLCBzY2FsZSkgOiBpbnRlcnBvbGF0b3I7XG4gIH07XG5cbiAgc2NhbGUudW5rbm93biA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1bmtub3duID0gXywgc2NhbGUpIDogdW5rbm93bjtcbiAgfTtcblxuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHRyYW5zZm9ybSA9IHQsIHQwID0gdCh4MCksIHQxID0gdCh4MSksIGsxMCA9IHQwID09PSB0MSA/IDAgOiAxIC8gKHQxIC0gdDApO1xuICAgIHJldHVybiBzY2FsZTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvcHkoc291cmNlLCB0YXJnZXQpIHtcbiAgcmV0dXJuIHRhcmdldFxuICAgICAgLmRvbWFpbihzb3VyY2UuZG9tYWluKCkpXG4gICAgICAuaW50ZXJwb2xhdG9yKHNvdXJjZS5pbnRlcnBvbGF0b3IoKSlcbiAgICAgIC5jbGFtcChzb3VyY2UuY2xhbXAoKSlcbiAgICAgIC51bmtub3duKHNvdXJjZS51bmtub3duKCkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZXF1ZW50aWFsKCkge1xuICB2YXIgc2NhbGUgPSBsaW5lYXJpc2godHJhbnNmb3JtZXIoKShpZGVudGl0eSkpO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgc2VxdWVudGlhbCgpKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdEludGVycG9sYXRvci5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlcXVlbnRpYWxMb2coKSB7XG4gIHZhciBzY2FsZSA9IGxvZ2dpc2godHJhbnNmb3JtZXIoKSkuZG9tYWluKFsxLCAxMF0pO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgc2VxdWVudGlhbExvZygpKS5iYXNlKHNjYWxlLmJhc2UoKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXF1ZW50aWFsU3ltbG9nKCkge1xuICB2YXIgc2NhbGUgPSBzeW1sb2dpc2godHJhbnNmb3JtZXIoKSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBzZXF1ZW50aWFsU3ltbG9nKCkpLmNvbnN0YW50KHNjYWxlLmNvbnN0YW50KCkpO1xuICB9O1xuXG4gIHJldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VxdWVudGlhbFBvdygpIHtcbiAgdmFyIHNjYWxlID0gcG93aXNoKHRyYW5zZm9ybWVyKCkpO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgc2VxdWVudGlhbFBvdygpKS5leHBvbmVudChzY2FsZS5leHBvbmVudCgpKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdEludGVycG9sYXRvci5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlcXVlbnRpYWxTcXJ0KCkge1xuICByZXR1cm4gc2VxdWVudGlhbFBvdy5hcHBseShudWxsLCBhcmd1bWVudHMpLmV4cG9uZW50KDAuNSk7XG59XG4iLCJpbXBvcnQge2FzY2VuZGluZywgYmlzZWN0fSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7aWRlbnRpdHl9IGZyb20gXCIuL2NvbnRpbnVvdXNcIjtcbmltcG9ydCB7aW5pdEludGVycG9sYXRvcn0gZnJvbSBcIi4vaW5pdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZXF1ZW50aWFsUXVhbnRpbGUoKSB7XG4gIHZhciBkb21haW4gPSBbXSxcbiAgICAgIGludGVycG9sYXRvciA9IGlkZW50aXR5O1xuXG4gIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICBpZiAoIWlzTmFOKHggPSAreCkpIHJldHVybiBpbnRlcnBvbGF0b3IoKGJpc2VjdChkb21haW4sIHgpIC0gMSkgLyAoZG9tYWluLmxlbmd0aCAtIDEpKTtcbiAgfVxuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW4uc2xpY2UoKTtcbiAgICBkb21haW4gPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IF8ubGVuZ3RoLCBkOyBpIDwgbjsgKytpKSBpZiAoZCA9IF9baV0sIGQgIT0gbnVsbCAmJiAhaXNOYU4oZCA9ICtkKSkgZG9tYWluLnB1c2goZCk7XG4gICAgZG9tYWluLnNvcnQoYXNjZW5kaW5nKTtcbiAgICByZXR1cm4gc2NhbGU7XG4gIH07XG5cbiAgc2NhbGUuaW50ZXJwb2xhdG9yID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGludGVycG9sYXRvciA9IF8sIHNjYWxlKSA6IGludGVycG9sYXRvcjtcbiAgfTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHNlcXVlbnRpYWxRdWFudGlsZShpbnRlcnBvbGF0b3IpLmRvbWFpbihkb21haW4pO1xuICB9O1xuXG4gIHJldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuIiwiaW1wb3J0IHtsaW5lYXJpc2h9IGZyb20gXCIuL2xpbmVhclwiO1xuaW1wb3J0IHtjb3B5LCB0cmFuc2Zvcm1lcn0gZnJvbSBcIi4vY29udGludW91c1wiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXRcIjtcblxuZnVuY3Rpb24gdHJhbnNmb3JtU3ltbG9nKGMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gTWF0aC5zaWduKHgpICogTWF0aC5sb2cxcChNYXRoLmFicyh4IC8gYykpO1xuICB9O1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1TeW1leHAoYykge1xuICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBNYXRoLnNpZ24oeCkgKiBNYXRoLmV4cG0xKE1hdGguYWJzKHgpKSAqIGM7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzeW1sb2dpc2godHJhbnNmb3JtKSB7XG4gIHZhciBjID0gMSwgc2NhbGUgPSB0cmFuc2Zvcm0odHJhbnNmb3JtU3ltbG9nKGMpLCB0cmFuc2Zvcm1TeW1leHAoYykpO1xuXG4gIHNjYWxlLmNvbnN0YW50ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdHJhbnNmb3JtKHRyYW5zZm9ybVN5bWxvZyhjID0gK18pLCB0cmFuc2Zvcm1TeW1leHAoYykpIDogYztcbiAgfTtcblxuICByZXR1cm4gbGluZWFyaXNoKHNjYWxlKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3ltbG9nKCkge1xuICB2YXIgc2NhbGUgPSBzeW1sb2dpc2godHJhbnNmb3JtZXIoKSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBzeW1sb2coKSkuY29uc3RhbnQoc2NhbGUuY29uc3RhbnQoKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cbiIsImltcG9ydCB7YmlzZWN0fSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7c2xpY2V9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0aHJlc2hvbGQoKSB7XG4gIHZhciBkb21haW4gPSBbMC41XSxcbiAgICAgIHJhbmdlID0gWzAsIDFdLFxuICAgICAgdW5rbm93bixcbiAgICAgIG4gPSAxO1xuXG4gIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICByZXR1cm4geCA8PSB4ID8gcmFuZ2VbYmlzZWN0KGRvbWFpbiwgeCwgMCwgbildIDogdW5rbm93bjtcbiAgfVxuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkb21haW4gPSBzbGljZS5jYWxsKF8pLCBuID0gTWF0aC5taW4oZG9tYWluLmxlbmd0aCwgcmFuZ2UubGVuZ3RoIC0gMSksIHNjYWxlKSA6IGRvbWFpbi5zbGljZSgpO1xuICB9O1xuXG4gIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhbmdlID0gc2xpY2UuY2FsbChfKSwgbiA9IE1hdGgubWluKGRvbWFpbi5sZW5ndGgsIHJhbmdlLmxlbmd0aCAtIDEpLCBzY2FsZSkgOiByYW5nZS5zbGljZSgpO1xuICB9O1xuXG4gIHNjYWxlLmludmVydEV4dGVudCA9IGZ1bmN0aW9uKHkpIHtcbiAgICB2YXIgaSA9IHJhbmdlLmluZGV4T2YoeSk7XG4gICAgcmV0dXJuIFtkb21haW5baSAtIDFdLCBkb21haW5baV1dO1xuICB9O1xuXG4gIHNjYWxlLnVua25vd24gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodW5rbm93biA9IF8sIHNjYWxlKSA6IHVua25vd247XG4gIH07XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aHJlc2hvbGQoKVxuICAgICAgICAuZG9tYWluKGRvbWFpbilcbiAgICAgICAgLnJhbmdlKHJhbmdlKVxuICAgICAgICAudW5rbm93bih1bmtub3duKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdFJhbmdlLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuIiwiaW1wb3J0IHt0aWNrU3RlcH0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge2Zvcm1hdCwgZm9ybWF0UHJlZml4LCBmb3JtYXRTcGVjaWZpZXIsIHByZWNpc2lvbkZpeGVkLCBwcmVjaXNpb25QcmVmaXgsIHByZWNpc2lvblJvdW5kfSBmcm9tIFwiZDMtZm9ybWF0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHN0YXJ0LCBzdG9wLCBjb3VudCwgc3BlY2lmaWVyKSB7XG4gIHZhciBzdGVwID0gdGlja1N0ZXAoc3RhcnQsIHN0b3AsIGNvdW50KSxcbiAgICAgIHByZWNpc2lvbjtcbiAgc3BlY2lmaWVyID0gZm9ybWF0U3BlY2lmaWVyKHNwZWNpZmllciA9PSBudWxsID8gXCIsZlwiIDogc3BlY2lmaWVyKTtcbiAgc3dpdGNoIChzcGVjaWZpZXIudHlwZSkge1xuICAgIGNhc2UgXCJzXCI6IHtcbiAgICAgIHZhciB2YWx1ZSA9IE1hdGgubWF4KE1hdGguYWJzKHN0YXJ0KSwgTWF0aC5hYnMoc3RvcCkpO1xuICAgICAgaWYgKHNwZWNpZmllci5wcmVjaXNpb24gPT0gbnVsbCAmJiAhaXNOYU4ocHJlY2lzaW9uID0gcHJlY2lzaW9uUHJlZml4KHN0ZXAsIHZhbHVlKSkpIHNwZWNpZmllci5wcmVjaXNpb24gPSBwcmVjaXNpb247XG4gICAgICByZXR1cm4gZm9ybWF0UHJlZml4KHNwZWNpZmllciwgdmFsdWUpO1xuICAgIH1cbiAgICBjYXNlIFwiXCI6XG4gICAgY2FzZSBcImVcIjpcbiAgICBjYXNlIFwiZ1wiOlxuICAgIGNhc2UgXCJwXCI6XG4gICAgY2FzZSBcInJcIjoge1xuICAgICAgaWYgKHNwZWNpZmllci5wcmVjaXNpb24gPT0gbnVsbCAmJiAhaXNOYU4ocHJlY2lzaW9uID0gcHJlY2lzaW9uUm91bmQoc3RlcCwgTWF0aC5tYXgoTWF0aC5hYnMoc3RhcnQpLCBNYXRoLmFicyhzdG9wKSkpKSkgc3BlY2lmaWVyLnByZWNpc2lvbiA9IHByZWNpc2lvbiAtIChzcGVjaWZpZXIudHlwZSA9PT0gXCJlXCIpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGNhc2UgXCJmXCI6XG4gICAgY2FzZSBcIiVcIjoge1xuICAgICAgaWYgKHNwZWNpZmllci5wcmVjaXNpb24gPT0gbnVsbCAmJiAhaXNOYU4ocHJlY2lzaW9uID0gcHJlY2lzaW9uRml4ZWQoc3RlcCkpKSBzcGVjaWZpZXIucHJlY2lzaW9uID0gcHJlY2lzaW9uIC0gKHNwZWNpZmllci50eXBlID09PSBcIiVcIikgKiAyO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiBmb3JtYXQoc3BlY2lmaWVyKTtcbn1cbiIsImltcG9ydCB7YmlzZWN0b3IsIHRpY2tTdGVwfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7dGltZVllYXIsIHRpbWVNb250aCwgdGltZVdlZWssIHRpbWVEYXksIHRpbWVIb3VyLCB0aW1lTWludXRlLCB0aW1lU2Vjb25kLCB0aW1lTWlsbGlzZWNvbmR9IGZyb20gXCJkMy10aW1lXCI7XG5pbXBvcnQge3RpbWVGb3JtYXR9IGZyb20gXCJkMy10aW1lLWZvcm1hdFwiO1xuaW1wb3J0IHttYXB9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQgY29udGludW91cywge2NvcHksIGlkZW50aXR5fSBmcm9tIFwiLi9jb250aW51b3VzXCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuaW1wb3J0IG5pY2UgZnJvbSBcIi4vbmljZVwiO1xuXG52YXIgZHVyYXRpb25TZWNvbmQgPSAxMDAwLFxuICAgIGR1cmF0aW9uTWludXRlID0gZHVyYXRpb25TZWNvbmQgKiA2MCxcbiAgICBkdXJhdGlvbkhvdXIgPSBkdXJhdGlvbk1pbnV0ZSAqIDYwLFxuICAgIGR1cmF0aW9uRGF5ID0gZHVyYXRpb25Ib3VyICogMjQsXG4gICAgZHVyYXRpb25XZWVrID0gZHVyYXRpb25EYXkgKiA3LFxuICAgIGR1cmF0aW9uTW9udGggPSBkdXJhdGlvbkRheSAqIDMwLFxuICAgIGR1cmF0aW9uWWVhciA9IGR1cmF0aW9uRGF5ICogMzY1O1xuXG5mdW5jdGlvbiBkYXRlKHQpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKHQpO1xufVxuXG5mdW5jdGlvbiBudW1iZXIodCkge1xuICByZXR1cm4gdCBpbnN0YW5jZW9mIERhdGUgPyArdCA6ICtuZXcgRGF0ZSgrdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYWxlbmRhcih5ZWFyLCBtb250aCwgd2VlaywgZGF5LCBob3VyLCBtaW51dGUsIHNlY29uZCwgbWlsbGlzZWNvbmQsIGZvcm1hdCkge1xuICB2YXIgc2NhbGUgPSBjb250aW51b3VzKGlkZW50aXR5LCBpZGVudGl0eSksXG4gICAgICBpbnZlcnQgPSBzY2FsZS5pbnZlcnQsXG4gICAgICBkb21haW4gPSBzY2FsZS5kb21haW47XG5cbiAgdmFyIGZvcm1hdE1pbGxpc2Vjb25kID0gZm9ybWF0KFwiLiVMXCIpLFxuICAgICAgZm9ybWF0U2Vjb25kID0gZm9ybWF0KFwiOiVTXCIpLFxuICAgICAgZm9ybWF0TWludXRlID0gZm9ybWF0KFwiJUk6JU1cIiksXG4gICAgICBmb3JtYXRIb3VyID0gZm9ybWF0KFwiJUkgJXBcIiksXG4gICAgICBmb3JtYXREYXkgPSBmb3JtYXQoXCIlYSAlZFwiKSxcbiAgICAgIGZvcm1hdFdlZWsgPSBmb3JtYXQoXCIlYiAlZFwiKSxcbiAgICAgIGZvcm1hdE1vbnRoID0gZm9ybWF0KFwiJUJcIiksXG4gICAgICBmb3JtYXRZZWFyID0gZm9ybWF0KFwiJVlcIik7XG5cbiAgdmFyIHRpY2tJbnRlcnZhbHMgPSBbXG4gICAgW3NlY29uZCwgIDEsICAgICAgZHVyYXRpb25TZWNvbmRdLFxuICAgIFtzZWNvbmQsICA1LCAgNSAqIGR1cmF0aW9uU2Vjb25kXSxcbiAgICBbc2Vjb25kLCAxNSwgMTUgKiBkdXJhdGlvblNlY29uZF0sXG4gICAgW3NlY29uZCwgMzAsIDMwICogZHVyYXRpb25TZWNvbmRdLFxuICAgIFttaW51dGUsICAxLCAgICAgIGR1cmF0aW9uTWludXRlXSxcbiAgICBbbWludXRlLCAgNSwgIDUgKiBkdXJhdGlvbk1pbnV0ZV0sXG4gICAgW21pbnV0ZSwgMTUsIDE1ICogZHVyYXRpb25NaW51dGVdLFxuICAgIFttaW51dGUsIDMwLCAzMCAqIGR1cmF0aW9uTWludXRlXSxcbiAgICBbICBob3VyLCAgMSwgICAgICBkdXJhdGlvbkhvdXIgIF0sXG4gICAgWyAgaG91ciwgIDMsICAzICogZHVyYXRpb25Ib3VyICBdLFxuICAgIFsgIGhvdXIsICA2LCAgNiAqIGR1cmF0aW9uSG91ciAgXSxcbiAgICBbICBob3VyLCAxMiwgMTIgKiBkdXJhdGlvbkhvdXIgIF0sXG4gICAgWyAgIGRheSwgIDEsICAgICAgZHVyYXRpb25EYXkgICBdLFxuICAgIFsgICBkYXksICAyLCAgMiAqIGR1cmF0aW9uRGF5ICAgXSxcbiAgICBbICB3ZWVrLCAgMSwgICAgICBkdXJhdGlvbldlZWsgIF0sXG4gICAgWyBtb250aCwgIDEsICAgICAgZHVyYXRpb25Nb250aCBdLFxuICAgIFsgbW9udGgsICAzLCAgMyAqIGR1cmF0aW9uTW9udGggXSxcbiAgICBbICB5ZWFyLCAgMSwgICAgICBkdXJhdGlvblllYXIgIF1cbiAgXTtcblxuICBmdW5jdGlvbiB0aWNrRm9ybWF0KGRhdGUpIHtcbiAgICByZXR1cm4gKHNlY29uZChkYXRlKSA8IGRhdGUgPyBmb3JtYXRNaWxsaXNlY29uZFxuICAgICAgICA6IG1pbnV0ZShkYXRlKSA8IGRhdGUgPyBmb3JtYXRTZWNvbmRcbiAgICAgICAgOiBob3VyKGRhdGUpIDwgZGF0ZSA/IGZvcm1hdE1pbnV0ZVxuICAgICAgICA6IGRheShkYXRlKSA8IGRhdGUgPyBmb3JtYXRIb3VyXG4gICAgICAgIDogbW9udGgoZGF0ZSkgPCBkYXRlID8gKHdlZWsoZGF0ZSkgPCBkYXRlID8gZm9ybWF0RGF5IDogZm9ybWF0V2VlaylcbiAgICAgICAgOiB5ZWFyKGRhdGUpIDwgZGF0ZSA/IGZvcm1hdE1vbnRoXG4gICAgICAgIDogZm9ybWF0WWVhcikoZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiB0aWNrSW50ZXJ2YWwoaW50ZXJ2YWwsIHN0YXJ0LCBzdG9wLCBzdGVwKSB7XG4gICAgaWYgKGludGVydmFsID09IG51bGwpIGludGVydmFsID0gMTA7XG5cbiAgICAvLyBJZiBhIGRlc2lyZWQgdGljayBjb3VudCBpcyBzcGVjaWZpZWQsIHBpY2sgYSByZWFzb25hYmxlIHRpY2sgaW50ZXJ2YWxcbiAgICAvLyBiYXNlZCBvbiB0aGUgZXh0ZW50IG9mIHRoZSBkb21haW4gYW5kIGEgcm91Z2ggZXN0aW1hdGUgb2YgdGljayBzaXplLlxuICAgIC8vIE90aGVyd2lzZSwgYXNzdW1lIGludGVydmFsIGlzIGFscmVhZHkgYSB0aW1lIGludGVydmFsIGFuZCB1c2UgaXQuXG4gICAgaWYgKHR5cGVvZiBpbnRlcnZhbCA9PT0gXCJudW1iZXJcIikge1xuICAgICAgdmFyIHRhcmdldCA9IE1hdGguYWJzKHN0b3AgLSBzdGFydCkgLyBpbnRlcnZhbCxcbiAgICAgICAgICBpID0gYmlzZWN0b3IoZnVuY3Rpb24oaSkgeyByZXR1cm4gaVsyXTsgfSkucmlnaHQodGlja0ludGVydmFscywgdGFyZ2V0KTtcbiAgICAgIGlmIChpID09PSB0aWNrSW50ZXJ2YWxzLmxlbmd0aCkge1xuICAgICAgICBzdGVwID0gdGlja1N0ZXAoc3RhcnQgLyBkdXJhdGlvblllYXIsIHN0b3AgLyBkdXJhdGlvblllYXIsIGludGVydmFsKTtcbiAgICAgICAgaW50ZXJ2YWwgPSB5ZWFyO1xuICAgICAgfSBlbHNlIGlmIChpKSB7XG4gICAgICAgIGkgPSB0aWNrSW50ZXJ2YWxzW3RhcmdldCAvIHRpY2tJbnRlcnZhbHNbaSAtIDFdWzJdIDwgdGlja0ludGVydmFsc1tpXVsyXSAvIHRhcmdldCA/IGkgLSAxIDogaV07XG4gICAgICAgIHN0ZXAgPSBpWzFdO1xuICAgICAgICBpbnRlcnZhbCA9IGlbMF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdGVwID0gTWF0aC5tYXgodGlja1N0ZXAoc3RhcnQsIHN0b3AsIGludGVydmFsKSwgMSk7XG4gICAgICAgIGludGVydmFsID0gbWlsbGlzZWNvbmQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0ZXAgPT0gbnVsbCA/IGludGVydmFsIDogaW50ZXJ2YWwuZXZlcnkoc3RlcCk7XG4gIH1cblxuICBzY2FsZS5pbnZlcnQgPSBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKGludmVydCh5KSk7XG4gIH07XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gZG9tYWluKG1hcC5jYWxsKF8sIG51bWJlcikpIDogZG9tYWluKCkubWFwKGRhdGUpO1xuICB9O1xuXG4gIHNjYWxlLnRpY2tzID0gZnVuY3Rpb24oaW50ZXJ2YWwsIHN0ZXApIHtcbiAgICB2YXIgZCA9IGRvbWFpbigpLFxuICAgICAgICB0MCA9IGRbMF0sXG4gICAgICAgIHQxID0gZFtkLmxlbmd0aCAtIDFdLFxuICAgICAgICByID0gdDEgPCB0MCxcbiAgICAgICAgdDtcbiAgICBpZiAocikgdCA9IHQwLCB0MCA9IHQxLCB0MSA9IHQ7XG4gICAgdCA9IHRpY2tJbnRlcnZhbChpbnRlcnZhbCwgdDAsIHQxLCBzdGVwKTtcbiAgICB0ID0gdCA/IHQucmFuZ2UodDAsIHQxICsgMSkgOiBbXTsgLy8gaW5jbHVzaXZlIHN0b3BcbiAgICByZXR1cm4gciA/IHQucmV2ZXJzZSgpIDogdDtcbiAgfTtcblxuICBzY2FsZS50aWNrRm9ybWF0ID0gZnVuY3Rpb24oY291bnQsIHNwZWNpZmllcikge1xuICAgIHJldHVybiBzcGVjaWZpZXIgPT0gbnVsbCA/IHRpY2tGb3JtYXQgOiBmb3JtYXQoc3BlY2lmaWVyKTtcbiAgfTtcblxuICBzY2FsZS5uaWNlID0gZnVuY3Rpb24oaW50ZXJ2YWwsIHN0ZXApIHtcbiAgICB2YXIgZCA9IGRvbWFpbigpO1xuICAgIHJldHVybiAoaW50ZXJ2YWwgPSB0aWNrSW50ZXJ2YWwoaW50ZXJ2YWwsIGRbMF0sIGRbZC5sZW5ndGggLSAxXSwgc3RlcCkpXG4gICAgICAgID8gZG9tYWluKG5pY2UoZCwgaW50ZXJ2YWwpKVxuICAgICAgICA6IHNjYWxlO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgY2FsZW5kYXIoeWVhciwgbW9udGgsIHdlZWssIGRheSwgaG91ciwgbWludXRlLCBzZWNvbmQsIG1pbGxpc2Vjb25kLCBmb3JtYXQpKTtcbiAgfTtcblxuICByZXR1cm4gc2NhbGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gaW5pdFJhbmdlLmFwcGx5KGNhbGVuZGFyKHRpbWVZZWFyLCB0aW1lTW9udGgsIHRpbWVXZWVrLCB0aW1lRGF5LCB0aW1lSG91ciwgdGltZU1pbnV0ZSwgdGltZVNlY29uZCwgdGltZU1pbGxpc2Vjb25kLCB0aW1lRm9ybWF0KS5kb21haW4oW25ldyBEYXRlKDIwMDAsIDAsIDEpLCBuZXcgRGF0ZSgyMDAwLCAwLCAyKV0pLCBhcmd1bWVudHMpO1xufVxuIiwiaW1wb3J0IHtjYWxlbmRhcn0gZnJvbSBcIi4vdGltZVwiO1xuaW1wb3J0IHt1dGNGb3JtYXR9IGZyb20gXCJkMy10aW1lLWZvcm1hdFwiO1xuaW1wb3J0IHt1dGNZZWFyLCB1dGNNb250aCwgdXRjV2VlaywgdXRjRGF5LCB1dGNIb3VyLCB1dGNNaW51dGUsIHV0Y1NlY29uZCwgdXRjTWlsbGlzZWNvbmR9IGZyb20gXCJkMy10aW1lXCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShjYWxlbmRhcih1dGNZZWFyLCB1dGNNb250aCwgdXRjV2VlaywgdXRjRGF5LCB1dGNIb3VyLCB1dGNNaW51dGUsIHV0Y1NlY29uZCwgdXRjTWlsbGlzZWNvbmQsIHV0Y0Zvcm1hdCkuZG9tYWluKFtEYXRlLlVUQygyMDAwLCAwLCAxKSwgRGF0ZS5VVEMoMjAwMCwgMCwgMildKSwgYXJndW1lbnRzKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiaW1wb3J0IGNyZWF0b3IgZnJvbSBcIi4vY3JlYXRvclwiO1xuaW1wb3J0IHNlbGVjdCBmcm9tIFwiLi9zZWxlY3RcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICByZXR1cm4gc2VsZWN0KGNyZWF0b3IobmFtZSkuY2FsbChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpKTtcbn1cbiIsImltcG9ydCBuYW1lc3BhY2UgZnJvbSBcIi4vbmFtZXNwYWNlXCI7XG5pbXBvcnQge3hodG1sfSBmcm9tIFwiLi9uYW1lc3BhY2VzXCI7XG5cbmZ1bmN0aW9uIGNyZWF0b3JJbmhlcml0KG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBkb2N1bWVudCA9IHRoaXMub3duZXJEb2N1bWVudCxcbiAgICAgICAgdXJpID0gdGhpcy5uYW1lc3BhY2VVUkk7XG4gICAgcmV0dXJuIHVyaSA9PT0geGh0bWwgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Lm5hbWVzcGFjZVVSSSA9PT0geGh0bWxcbiAgICAgICAgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KG5hbWUpXG4gICAgICAgIDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHVyaSwgbmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0b3JGaXhlZChmdWxsbmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICB2YXIgZnVsbG5hbWUgPSBuYW1lc3BhY2UobmFtZSk7XG4gIHJldHVybiAoZnVsbG5hbWUubG9jYWxcbiAgICAgID8gY3JlYXRvckZpeGVkXG4gICAgICA6IGNyZWF0b3JJbmhlcml0KShmdWxsbmFtZSk7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgY3JlYXRlfSBmcm9tIFwiLi9jcmVhdGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjcmVhdG9yfSBmcm9tIFwiLi9jcmVhdG9yXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbG9jYWx9IGZyb20gXCIuL2xvY2FsXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbWF0Y2hlcn0gZnJvbSBcIi4vbWF0Y2hlclwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1vdXNlfSBmcm9tIFwiLi9tb3VzZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG5hbWVzcGFjZX0gZnJvbSBcIi4vbmFtZXNwYWNlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbmFtZXNwYWNlc30gZnJvbSBcIi4vbmFtZXNwYWNlc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGNsaWVudFBvaW50fSBmcm9tIFwiLi9wb2ludFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNlbGVjdH0gZnJvbSBcIi4vc2VsZWN0XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2VsZWN0QWxsfSBmcm9tIFwiLi9zZWxlY3RBbGxcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzZWxlY3Rpb259IGZyb20gXCIuL3NlbGVjdGlvbi9pbmRleFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNlbGVjdG9yfSBmcm9tIFwiLi9zZWxlY3RvclwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNlbGVjdG9yQWxsfSBmcm9tIFwiLi9zZWxlY3RvckFsbFwiO1xuZXhwb3J0IHtzdHlsZVZhbHVlIGFzIHN0eWxlfSBmcm9tIFwiLi9zZWxlY3Rpb24vc3R5bGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0b3VjaH0gZnJvbSBcIi4vdG91Y2hcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0b3VjaGVzfSBmcm9tIFwiLi90b3VjaGVzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgd2luZG93fSBmcm9tIFwiLi93aW5kb3dcIjtcbmV4cG9ydCB7ZXZlbnQsIGN1c3RvbUV2ZW50fSBmcm9tIFwiLi9zZWxlY3Rpb24vb25cIjtcbiIsInZhciBuZXh0SWQgPSAwO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsb2NhbCgpIHtcbiAgcmV0dXJuIG5ldyBMb2NhbDtcbn1cblxuZnVuY3Rpb24gTG9jYWwoKSB7XG4gIHRoaXMuXyA9IFwiQFwiICsgKCsrbmV4dElkKS50b1N0cmluZygzNik7XG59XG5cbkxvY2FsLnByb3RvdHlwZSA9IGxvY2FsLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IExvY2FsLFxuICBnZXQ6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICB2YXIgaWQgPSB0aGlzLl87XG4gICAgd2hpbGUgKCEoaWQgaW4gbm9kZSkpIGlmICghKG5vZGUgPSBub2RlLnBhcmVudE5vZGUpKSByZXR1cm47XG4gICAgcmV0dXJuIG5vZGVbaWRdO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uKG5vZGUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIG5vZGVbdGhpcy5fXSA9IHZhbHVlO1xuICB9LFxuICByZW1vdmU6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICByZXR1cm4gdGhpcy5fIGluIG5vZGUgJiYgZGVsZXRlIG5vZGVbdGhpcy5fXTtcbiAgfSxcbiAgdG9TdHJpbmc6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl87XG4gIH1cbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3Rvcikge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMubWF0Y2hlcyhzZWxlY3Rvcik7XG4gIH07XG59XG4iLCJpbXBvcnQgc291cmNlRXZlbnQgZnJvbSBcIi4vc291cmNlRXZlbnRcIjtcbmltcG9ydCBwb2ludCBmcm9tIFwiLi9wb2ludFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlKSB7XG4gIHZhciBldmVudCA9IHNvdXJjZUV2ZW50KCk7XG4gIGlmIChldmVudC5jaGFuZ2VkVG91Y2hlcykgZXZlbnQgPSBldmVudC5jaGFuZ2VkVG91Y2hlc1swXTtcbiAgcmV0dXJuIHBvaW50KG5vZGUsIGV2ZW50KTtcbn1cbiIsImltcG9ydCBuYW1lc3BhY2VzIGZyb20gXCIuL25hbWVzcGFjZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICB2YXIgcHJlZml4ID0gbmFtZSArPSBcIlwiLCBpID0gcHJlZml4LmluZGV4T2YoXCI6XCIpO1xuICBpZiAoaSA+PSAwICYmIChwcmVmaXggPSBuYW1lLnNsaWNlKDAsIGkpKSAhPT0gXCJ4bWxuc1wiKSBuYW1lID0gbmFtZS5zbGljZShpICsgMSk7XG4gIHJldHVybiBuYW1lc3BhY2VzLmhhc093blByb3BlcnR5KHByZWZpeCkgPyB7c3BhY2U6IG5hbWVzcGFjZXNbcHJlZml4XSwgbG9jYWw6IG5hbWV9IDogbmFtZTtcbn1cbiIsImV4cG9ydCB2YXIgeGh0bWwgPSBcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBzdmc6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgeGh0bWw6IHhodG1sLFxuICB4bGluazogXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsXG4gIHhtbDogXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIixcbiAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC94bWxucy9cIlxufTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUsIGV2ZW50KSB7XG4gIHZhciBzdmcgPSBub2RlLm93bmVyU1ZHRWxlbWVudCB8fCBub2RlO1xuXG4gIGlmIChzdmcuY3JlYXRlU1ZHUG9pbnQpIHtcbiAgICB2YXIgcG9pbnQgPSBzdmcuY3JlYXRlU1ZHUG9pbnQoKTtcbiAgICBwb2ludC54ID0gZXZlbnQuY2xpZW50WCwgcG9pbnQueSA9IGV2ZW50LmNsaWVudFk7XG4gICAgcG9pbnQgPSBwb2ludC5tYXRyaXhUcmFuc2Zvcm0obm9kZS5nZXRTY3JlZW5DVE0oKS5pbnZlcnNlKCkpO1xuICAgIHJldHVybiBbcG9pbnQueCwgcG9pbnQueV07XG4gIH1cblxuICB2YXIgcmVjdCA9IG5vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHJldHVybiBbZXZlbnQuY2xpZW50WCAtIHJlY3QubGVmdCAtIG5vZGUuY2xpZW50TGVmdCwgZXZlbnQuY2xpZW50WSAtIHJlY3QudG9wIC0gbm9kZS5jbGllbnRUb3BdO1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb24sIHJvb3R9IGZyb20gXCIuL3NlbGVjdGlvbi9pbmRleFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3Rvcikge1xuICByZXR1cm4gdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiXG4gICAgICA/IG5ldyBTZWxlY3Rpb24oW1tkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKV1dLCBbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XSlcbiAgICAgIDogbmV3IFNlbGVjdGlvbihbW3NlbGVjdG9yXV0sIHJvb3QpO1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb24sIHJvb3R9IGZyb20gXCIuL3NlbGVjdGlvbi9pbmRleFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3Rvcikge1xuICByZXR1cm4gdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiXG4gICAgICA/IG5ldyBTZWxlY3Rpb24oW2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpXSwgW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudF0pXG4gICAgICA6IG5ldyBTZWxlY3Rpb24oW3NlbGVjdG9yID09IG51bGwgPyBbXSA6IHNlbGVjdG9yXSwgcm9vdCk7XG59XG4iLCJpbXBvcnQgY3JlYXRvciBmcm9tIFwiLi4vY3JlYXRvclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lKSB7XG4gIHZhciBjcmVhdGUgPSB0eXBlb2YgbmFtZSA9PT0gXCJmdW5jdGlvblwiID8gbmFtZSA6IGNyZWF0b3IobmFtZSk7XG4gIHJldHVybiB0aGlzLnNlbGVjdChmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5hcHBlbmRDaGlsZChjcmVhdGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH0pO1xufVxuIiwiaW1wb3J0IG5hbWVzcGFjZSBmcm9tIFwiLi4vbmFtZXNwYWNlXCI7XG5cbmZ1bmN0aW9uIGF0dHJSZW1vdmUobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJSZW1vdmVOUyhmdWxsbmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyQ29uc3RhbnQobmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckNvbnN0YW50TlMoZnVsbG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCwgdmFsdWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyRnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAodiA9PSBudWxsKSB0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgICBlbHNlIHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsIHYpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyRnVuY3Rpb25OUyhmdWxsbmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAodiA9PSBudWxsKSB0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gICAgZWxzZSB0aGlzLnNldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCwgdik7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBmdWxsbmFtZSA9IG5hbWVzcGFjZShuYW1lKTtcblxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB2YXIgbm9kZSA9IHRoaXMubm9kZSgpO1xuICAgIHJldHVybiBmdWxsbmFtZS5sb2NhbFxuICAgICAgICA/IG5vZGUuZ2V0QXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKVxuICAgICAgICA6IG5vZGUuZ2V0QXR0cmlidXRlKGZ1bGxuYW1lKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzLmVhY2goKHZhbHVlID09IG51bGxcbiAgICAgID8gKGZ1bGxuYW1lLmxvY2FsID8gYXR0clJlbW92ZU5TIDogYXR0clJlbW92ZSkgOiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgID8gKGZ1bGxuYW1lLmxvY2FsID8gYXR0ckZ1bmN0aW9uTlMgOiBhdHRyRnVuY3Rpb24pXG4gICAgICA6IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJDb25zdGFudE5TIDogYXR0ckNvbnN0YW50KSkpKGZ1bGxuYW1lLCB2YWx1ZSkpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBjYWxsYmFjayA9IGFyZ3VtZW50c1swXTtcbiAgYXJndW1lbnRzWzBdID0gdGhpcztcbiAgY2FsbGJhY2suYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJmdW5jdGlvbiBjbGFzc0FycmF5KHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnRyaW0oKS5zcGxpdCgvXnxcXHMrLyk7XG59XG5cbmZ1bmN0aW9uIGNsYXNzTGlzdChub2RlKSB7XG4gIHJldHVybiBub2RlLmNsYXNzTGlzdCB8fCBuZXcgQ2xhc3NMaXN0KG5vZGUpO1xufVxuXG5mdW5jdGlvbiBDbGFzc0xpc3Qobm9kZSkge1xuICB0aGlzLl9ub2RlID0gbm9kZTtcbiAgdGhpcy5fbmFtZXMgPSBjbGFzc0FycmF5KG5vZGUuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIikgfHwgXCJcIik7XG59XG5cbkNsYXNzTGlzdC5wcm90b3R5cGUgPSB7XG4gIGFkZDogZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBpID0gdGhpcy5fbmFtZXMuaW5kZXhPZihuYW1lKTtcbiAgICBpZiAoaSA8IDApIHtcbiAgICAgIHRoaXMuX25hbWVzLnB1c2gobmFtZSk7XG4gICAgICB0aGlzLl9ub2RlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIHRoaXMuX25hbWVzLmpvaW4oXCIgXCIpKTtcbiAgICB9XG4gIH0sXG4gIHJlbW92ZTogZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBpID0gdGhpcy5fbmFtZXMuaW5kZXhPZihuYW1lKTtcbiAgICBpZiAoaSA+PSAwKSB7XG4gICAgICB0aGlzLl9uYW1lcy5zcGxpY2UoaSwgMSk7XG4gICAgICB0aGlzLl9ub2RlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIHRoaXMuX25hbWVzLmpvaW4oXCIgXCIpKTtcbiAgICB9XG4gIH0sXG4gIGNvbnRhaW5zOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMuX25hbWVzLmluZGV4T2YobmFtZSkgPj0gMDtcbiAgfVxufTtcblxuZnVuY3Rpb24gY2xhc3NlZEFkZChub2RlLCBuYW1lcykge1xuICB2YXIgbGlzdCA9IGNsYXNzTGlzdChub2RlKSwgaSA9IC0xLCBuID0gbmFtZXMubGVuZ3RoO1xuICB3aGlsZSAoKytpIDwgbikgbGlzdC5hZGQobmFtZXNbaV0pO1xufVxuXG5mdW5jdGlvbiBjbGFzc2VkUmVtb3ZlKG5vZGUsIG5hbWVzKSB7XG4gIHZhciBsaXN0ID0gY2xhc3NMaXN0KG5vZGUpLCBpID0gLTEsIG4gPSBuYW1lcy5sZW5ndGg7XG4gIHdoaWxlICgrK2kgPCBuKSBsaXN0LnJlbW92ZShuYW1lc1tpXSk7XG59XG5cbmZ1bmN0aW9uIGNsYXNzZWRUcnVlKG5hbWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBjbGFzc2VkQWRkKHRoaXMsIG5hbWVzKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY2xhc3NlZEZhbHNlKG5hbWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBjbGFzc2VkUmVtb3ZlKHRoaXMsIG5hbWVzKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY2xhc3NlZEZ1bmN0aW9uKG5hbWVzLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgKHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgPyBjbGFzc2VkQWRkIDogY2xhc3NlZFJlbW92ZSkodGhpcywgbmFtZXMpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICB2YXIgbmFtZXMgPSBjbGFzc0FycmF5KG5hbWUgKyBcIlwiKTtcblxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB2YXIgbGlzdCA9IGNsYXNzTGlzdCh0aGlzLm5vZGUoKSksIGkgPSAtMSwgbiA9IG5hbWVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgaWYgKCFsaXN0LmNvbnRhaW5zKG5hbWVzW2ldKSkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIHRoaXMuZWFjaCgodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgID8gY2xhc3NlZEZ1bmN0aW9uIDogdmFsdWVcbiAgICAgID8gY2xhc3NlZFRydWVcbiAgICAgIDogY2xhc3NlZEZhbHNlKShuYW1lcywgdmFsdWUpKTtcbn1cbiIsImZ1bmN0aW9uIHNlbGVjdGlvbl9jbG9uZVNoYWxsb3coKSB7XG4gIHJldHVybiB0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuY2xvbmVOb2RlKGZhbHNlKSwgdGhpcy5uZXh0U2libGluZyk7XG59XG5cbmZ1bmN0aW9uIHNlbGVjdGlvbl9jbG9uZURlZXAoKSB7XG4gIHJldHVybiB0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuY2xvbmVOb2RlKHRydWUpLCB0aGlzLm5leHRTaWJsaW5nKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZGVlcCkge1xuICByZXR1cm4gdGhpcy5zZWxlY3QoZGVlcCA/IHNlbGVjdGlvbl9jbG9uZURlZXAgOiBzZWxlY3Rpb25fY2xvbmVTaGFsbG93KTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleFwiO1xuaW1wb3J0IHtFbnRlck5vZGV9IGZyb20gXCIuL2VudGVyXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4uL2NvbnN0YW50XCI7XG5cbnZhciBrZXlQcmVmaXggPSBcIiRcIjsgLy8gUHJvdGVjdCBhZ2FpbnN0IGtleXMgbGlrZSDigJxfX3Byb3RvX1/igJ0uXG5cbmZ1bmN0aW9uIGJpbmRJbmRleChwYXJlbnQsIGdyb3VwLCBlbnRlciwgdXBkYXRlLCBleGl0LCBkYXRhKSB7XG4gIHZhciBpID0gMCxcbiAgICAgIG5vZGUsXG4gICAgICBncm91cExlbmd0aCA9IGdyb3VwLmxlbmd0aCxcbiAgICAgIGRhdGFMZW5ndGggPSBkYXRhLmxlbmd0aDtcblxuICAvLyBQdXQgYW55IG5vbi1udWxsIG5vZGVzIHRoYXQgZml0IGludG8gdXBkYXRlLlxuICAvLyBQdXQgYW55IG51bGwgbm9kZXMgaW50byBlbnRlci5cbiAgLy8gUHV0IGFueSByZW1haW5pbmcgZGF0YSBpbnRvIGVudGVyLlxuICBmb3IgKDsgaSA8IGRhdGFMZW5ndGg7ICsraSkge1xuICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgIG5vZGUuX19kYXRhX18gPSBkYXRhW2ldO1xuICAgICAgdXBkYXRlW2ldID0gbm9kZTtcbiAgICB9IGVsc2Uge1xuICAgICAgZW50ZXJbaV0gPSBuZXcgRW50ZXJOb2RlKHBhcmVudCwgZGF0YVtpXSk7XG4gICAgfVxuICB9XG5cbiAgLy8gUHV0IGFueSBub24tbnVsbCBub2RlcyB0aGF0IGRvbuKAmXQgZml0IGludG8gZXhpdC5cbiAgZm9yICg7IGkgPCBncm91cExlbmd0aDsgKytpKSB7XG4gICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgZXhpdFtpXSA9IG5vZGU7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGJpbmRLZXkocGFyZW50LCBncm91cCwgZW50ZXIsIHVwZGF0ZSwgZXhpdCwgZGF0YSwga2V5KSB7XG4gIHZhciBpLFxuICAgICAgbm9kZSxcbiAgICAgIG5vZGVCeUtleVZhbHVlID0ge30sXG4gICAgICBncm91cExlbmd0aCA9IGdyb3VwLmxlbmd0aCxcbiAgICAgIGRhdGFMZW5ndGggPSBkYXRhLmxlbmd0aCxcbiAgICAgIGtleVZhbHVlcyA9IG5ldyBBcnJheShncm91cExlbmd0aCksXG4gICAgICBrZXlWYWx1ZTtcblxuICAvLyBDb21wdXRlIHRoZSBrZXkgZm9yIGVhY2ggbm9kZS5cbiAgLy8gSWYgbXVsdGlwbGUgbm9kZXMgaGF2ZSB0aGUgc2FtZSBrZXksIHRoZSBkdXBsaWNhdGVzIGFyZSBhZGRlZCB0byBleGl0LlxuICBmb3IgKGkgPSAwOyBpIDwgZ3JvdXBMZW5ndGg7ICsraSkge1xuICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgIGtleVZhbHVlc1tpXSA9IGtleVZhbHVlID0ga2V5UHJlZml4ICsga2V5LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApO1xuICAgICAgaWYgKGtleVZhbHVlIGluIG5vZGVCeUtleVZhbHVlKSB7XG4gICAgICAgIGV4aXRbaV0gPSBub2RlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbm9kZUJ5S2V5VmFsdWVba2V5VmFsdWVdID0gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBDb21wdXRlIHRoZSBrZXkgZm9yIGVhY2ggZGF0dW0uXG4gIC8vIElmIHRoZXJlIGEgbm9kZSBhc3NvY2lhdGVkIHdpdGggdGhpcyBrZXksIGpvaW4gYW5kIGFkZCBpdCB0byB1cGRhdGUuXG4gIC8vIElmIHRoZXJlIGlzIG5vdCAob3IgdGhlIGtleSBpcyBhIGR1cGxpY2F0ZSksIGFkZCBpdCB0byBlbnRlci5cbiAgZm9yIChpID0gMDsgaSA8IGRhdGFMZW5ndGg7ICsraSkge1xuICAgIGtleVZhbHVlID0ga2V5UHJlZml4ICsga2V5LmNhbGwocGFyZW50LCBkYXRhW2ldLCBpLCBkYXRhKTtcbiAgICBpZiAobm9kZSA9IG5vZGVCeUtleVZhbHVlW2tleVZhbHVlXSkge1xuICAgICAgdXBkYXRlW2ldID0gbm9kZTtcbiAgICAgIG5vZGUuX19kYXRhX18gPSBkYXRhW2ldO1xuICAgICAgbm9kZUJ5S2V5VmFsdWVba2V5VmFsdWVdID0gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgZW50ZXJbaV0gPSBuZXcgRW50ZXJOb2RlKHBhcmVudCwgZGF0YVtpXSk7XG4gICAgfVxuICB9XG5cbiAgLy8gQWRkIGFueSByZW1haW5pbmcgbm9kZXMgdGhhdCB3ZXJlIG5vdCBib3VuZCB0byBkYXRhIHRvIGV4aXQuXG4gIGZvciAoaSA9IDA7IGkgPCBncm91cExlbmd0aDsgKytpKSB7XG4gICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIChub2RlQnlLZXlWYWx1ZVtrZXlWYWx1ZXNbaV1dID09PSBub2RlKSkge1xuICAgICAgZXhpdFtpXSA9IG5vZGU7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgaWYgKCF2YWx1ZSkge1xuICAgIGRhdGEgPSBuZXcgQXJyYXkodGhpcy5zaXplKCkpLCBqID0gLTE7XG4gICAgdGhpcy5lYWNoKGZ1bmN0aW9uKGQpIHsgZGF0YVsrK2pdID0gZDsgfSk7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cblxuICB2YXIgYmluZCA9IGtleSA/IGJpbmRLZXkgOiBiaW5kSW5kZXgsXG4gICAgICBwYXJlbnRzID0gdGhpcy5fcGFyZW50cyxcbiAgICAgIGdyb3VwcyA9IHRoaXMuX2dyb3VwcztcblxuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHZhbHVlID0gY29uc3RhbnQodmFsdWUpO1xuXG4gIGZvciAodmFyIG0gPSBncm91cHMubGVuZ3RoLCB1cGRhdGUgPSBuZXcgQXJyYXkobSksIGVudGVyID0gbmV3IEFycmF5KG0pLCBleGl0ID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIHZhciBwYXJlbnQgPSBwYXJlbnRzW2pdLFxuICAgICAgICBncm91cCA9IGdyb3Vwc1tqXSxcbiAgICAgICAgZ3JvdXBMZW5ndGggPSBncm91cC5sZW5ndGgsXG4gICAgICAgIGRhdGEgPSB2YWx1ZS5jYWxsKHBhcmVudCwgcGFyZW50ICYmIHBhcmVudC5fX2RhdGFfXywgaiwgcGFyZW50cyksXG4gICAgICAgIGRhdGFMZW5ndGggPSBkYXRhLmxlbmd0aCxcbiAgICAgICAgZW50ZXJHcm91cCA9IGVudGVyW2pdID0gbmV3IEFycmF5KGRhdGFMZW5ndGgpLFxuICAgICAgICB1cGRhdGVHcm91cCA9IHVwZGF0ZVtqXSA9IG5ldyBBcnJheShkYXRhTGVuZ3RoKSxcbiAgICAgICAgZXhpdEdyb3VwID0gZXhpdFtqXSA9IG5ldyBBcnJheShncm91cExlbmd0aCk7XG5cbiAgICBiaW5kKHBhcmVudCwgZ3JvdXAsIGVudGVyR3JvdXAsIHVwZGF0ZUdyb3VwLCBleGl0R3JvdXAsIGRhdGEsIGtleSk7XG5cbiAgICAvLyBOb3cgY29ubmVjdCB0aGUgZW50ZXIgbm9kZXMgdG8gdGhlaXIgZm9sbG93aW5nIHVwZGF0ZSBub2RlLCBzdWNoIHRoYXRcbiAgICAvLyBhcHBlbmRDaGlsZCBjYW4gaW5zZXJ0IHRoZSBtYXRlcmlhbGl6ZWQgZW50ZXIgbm9kZSBiZWZvcmUgdGhpcyBub2RlLFxuICAgIC8vIHJhdGhlciB0aGFuIGF0IHRoZSBlbmQgb2YgdGhlIHBhcmVudCBub2RlLlxuICAgIGZvciAodmFyIGkwID0gMCwgaTEgPSAwLCBwcmV2aW91cywgbmV4dDsgaTAgPCBkYXRhTGVuZ3RoOyArK2kwKSB7XG4gICAgICBpZiAocHJldmlvdXMgPSBlbnRlckdyb3VwW2kwXSkge1xuICAgICAgICBpZiAoaTAgPj0gaTEpIGkxID0gaTAgKyAxO1xuICAgICAgICB3aGlsZSAoIShuZXh0ID0gdXBkYXRlR3JvdXBbaTFdKSAmJiArK2kxIDwgZGF0YUxlbmd0aCk7XG4gICAgICAgIHByZXZpb3VzLl9uZXh0ID0gbmV4dCB8fCBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZSA9IG5ldyBTZWxlY3Rpb24odXBkYXRlLCBwYXJlbnRzKTtcbiAgdXBkYXRlLl9lbnRlciA9IGVudGVyO1xuICB1cGRhdGUuX2V4aXQgPSBleGl0O1xuICByZXR1cm4gdXBkYXRlO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5wcm9wZXJ0eShcIl9fZGF0YV9fXCIsIHZhbHVlKVxuICAgICAgOiB0aGlzLm5vZGUoKS5fX2RhdGFfXztcbn1cbiIsImltcG9ydCBkZWZhdWx0VmlldyBmcm9tIFwiLi4vd2luZG93XCI7XG5cbmZ1bmN0aW9uIGRpc3BhdGNoRXZlbnQobm9kZSwgdHlwZSwgcGFyYW1zKSB7XG4gIHZhciB3aW5kb3cgPSBkZWZhdWx0Vmlldyhub2RlKSxcbiAgICAgIGV2ZW50ID0gd2luZG93LkN1c3RvbUV2ZW50O1xuXG4gIGlmICh0eXBlb2YgZXZlbnQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGV2ZW50ID0gbmV3IGV2ZW50KHR5cGUsIHBhcmFtcyk7XG4gIH0gZWxzZSB7XG4gICAgZXZlbnQgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJFdmVudFwiKTtcbiAgICBpZiAocGFyYW1zKSBldmVudC5pbml0RXZlbnQodHlwZSwgcGFyYW1zLmJ1YmJsZXMsIHBhcmFtcy5jYW5jZWxhYmxlKSwgZXZlbnQuZGV0YWlsID0gcGFyYW1zLmRldGFpbDtcbiAgICBlbHNlIGV2ZW50LmluaXRFdmVudCh0eXBlLCBmYWxzZSwgZmFsc2UpO1xuICB9XG5cbiAgbm9kZS5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbn1cblxuZnVuY3Rpb24gZGlzcGF0Y2hDb25zdGFudCh0eXBlLCBwYXJhbXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkaXNwYXRjaEV2ZW50KHRoaXMsIHR5cGUsIHBhcmFtcyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGRpc3BhdGNoRnVuY3Rpb24odHlwZSwgcGFyYW1zKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZGlzcGF0Y2hFdmVudCh0aGlzLCB0eXBlLCBwYXJhbXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHR5cGUsIHBhcmFtcykge1xuICByZXR1cm4gdGhpcy5lYWNoKCh0eXBlb2YgcGFyYW1zID09PSBcImZ1bmN0aW9uXCJcbiAgICAgID8gZGlzcGF0Y2hGdW5jdGlvblxuICAgICAgOiBkaXNwYXRjaENvbnN0YW50KSh0eXBlLCBwYXJhbXMpKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBqID0gMCwgbSA9IGdyb3Vwcy5sZW5ndGg7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgaSA9IDAsIG4gPSBncm91cC5sZW5ndGgsIG5vZGU7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIGNhbGxiYWNrLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiAhdGhpcy5ub2RlKCk7XG59XG4iLCJpbXBvcnQgc3BhcnNlIGZyb20gXCIuL3NwYXJzZVwiO1xuaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFNlbGVjdGlvbih0aGlzLl9lbnRlciB8fCB0aGlzLl9ncm91cHMubWFwKHNwYXJzZSksIHRoaXMuX3BhcmVudHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gRW50ZXJOb2RlKHBhcmVudCwgZGF0dW0pIHtcbiAgdGhpcy5vd25lckRvY3VtZW50ID0gcGFyZW50Lm93bmVyRG9jdW1lbnQ7XG4gIHRoaXMubmFtZXNwYWNlVVJJID0gcGFyZW50Lm5hbWVzcGFjZVVSSTtcbiAgdGhpcy5fbmV4dCA9IG51bGw7XG4gIHRoaXMuX3BhcmVudCA9IHBhcmVudDtcbiAgdGhpcy5fX2RhdGFfXyA9IGRhdHVtO1xufVxuXG5FbnRlck5vZGUucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogRW50ZXJOb2RlLFxuICBhcHBlbmRDaGlsZDogZnVuY3Rpb24oY2hpbGQpIHsgcmV0dXJuIHRoaXMuX3BhcmVudC5pbnNlcnRCZWZvcmUoY2hpbGQsIHRoaXMuX25leHQpOyB9LFxuICBpbnNlcnRCZWZvcmU6IGZ1bmN0aW9uKGNoaWxkLCBuZXh0KSB7IHJldHVybiB0aGlzLl9wYXJlbnQuaW5zZXJ0QmVmb3JlKGNoaWxkLCBuZXh0KTsgfSxcbiAgcXVlcnlTZWxlY3RvcjogZnVuY3Rpb24oc2VsZWN0b3IpIHsgcmV0dXJuIHRoaXMuX3BhcmVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTsgfSxcbiAgcXVlcnlTZWxlY3RvckFsbDogZnVuY3Rpb24oc2VsZWN0b3IpIHsgcmV0dXJuIHRoaXMuX3BhcmVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTsgfVxufTtcbiIsImltcG9ydCBzcGFyc2UgZnJvbSBcIi4vc3BhcnNlXCI7XG5pbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHRoaXMuX2V4aXQgfHwgdGhpcy5fZ3JvdXBzLm1hcChzcGFyc2UpLCB0aGlzLl9wYXJlbnRzKTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleFwiO1xuaW1wb3J0IG1hdGNoZXIgZnJvbSBcIi4uL21hdGNoZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWF0Y2gpIHtcbiAgaWYgKHR5cGVvZiBtYXRjaCAhPT0gXCJmdW5jdGlvblwiKSBtYXRjaCA9IG1hdGNoZXIobWF0Y2gpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc3ViZ3JvdXAgPSBzdWJncm91cHNbal0gPSBbXSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiBtYXRjaC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSkge1xuICAgICAgICBzdWJncm91cC5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHN1Ymdyb3VwcywgdGhpcy5fcGFyZW50cyk7XG59XG4iLCJmdW5jdGlvbiBodG1sUmVtb3ZlKCkge1xuICB0aGlzLmlubmVySFRNTCA9IFwiXCI7XG59XG5cbmZ1bmN0aW9uIGh0bWxDb25zdGFudCh2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5pbm5lckhUTUwgPSB2YWx1ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gaHRtbEZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgdGhpcy5pbm5lckhUTUwgPSB2ID09IG51bGwgPyBcIlwiIDogdjtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKHZhbHVlID09IG51bGxcbiAgICAgICAgICA/IGh0bWxSZW1vdmUgOiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICA/IGh0bWxGdW5jdGlvblxuICAgICAgICAgIDogaHRtbENvbnN0YW50KSh2YWx1ZSkpXG4gICAgICA6IHRoaXMubm9kZSgpLmlubmVySFRNTDtcbn1cbiIsImltcG9ydCBzZWxlY3Rpb25fc2VsZWN0IGZyb20gXCIuL3NlbGVjdFwiO1xuaW1wb3J0IHNlbGVjdGlvbl9zZWxlY3RBbGwgZnJvbSBcIi4vc2VsZWN0QWxsXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2ZpbHRlciBmcm9tIFwiLi9maWx0ZXJcIjtcbmltcG9ydCBzZWxlY3Rpb25fZGF0YSBmcm9tIFwiLi9kYXRhXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2VudGVyIGZyb20gXCIuL2VudGVyXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2V4aXQgZnJvbSBcIi4vZXhpdFwiO1xuaW1wb3J0IHNlbGVjdGlvbl9qb2luIGZyb20gXCIuL2pvaW5cIjtcbmltcG9ydCBzZWxlY3Rpb25fbWVyZ2UgZnJvbSBcIi4vbWVyZ2VcIjtcbmltcG9ydCBzZWxlY3Rpb25fb3JkZXIgZnJvbSBcIi4vb3JkZXJcIjtcbmltcG9ydCBzZWxlY3Rpb25fc29ydCBmcm9tIFwiLi9zb3J0XCI7XG5pbXBvcnQgc2VsZWN0aW9uX2NhbGwgZnJvbSBcIi4vY2FsbFwiO1xuaW1wb3J0IHNlbGVjdGlvbl9ub2RlcyBmcm9tIFwiLi9ub2Rlc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9ub2RlIGZyb20gXCIuL25vZGVcIjtcbmltcG9ydCBzZWxlY3Rpb25fc2l6ZSBmcm9tIFwiLi9zaXplXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2VtcHR5IGZyb20gXCIuL2VtcHR5XCI7XG5pbXBvcnQgc2VsZWN0aW9uX2VhY2ggZnJvbSBcIi4vZWFjaFwiO1xuaW1wb3J0IHNlbGVjdGlvbl9hdHRyIGZyb20gXCIuL2F0dHJcIjtcbmltcG9ydCBzZWxlY3Rpb25fc3R5bGUgZnJvbSBcIi4vc3R5bGVcIjtcbmltcG9ydCBzZWxlY3Rpb25fcHJvcGVydHkgZnJvbSBcIi4vcHJvcGVydHlcIjtcbmltcG9ydCBzZWxlY3Rpb25fY2xhc3NlZCBmcm9tIFwiLi9jbGFzc2VkXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3RleHQgZnJvbSBcIi4vdGV4dFwiO1xuaW1wb3J0IHNlbGVjdGlvbl9odG1sIGZyb20gXCIuL2h0bWxcIjtcbmltcG9ydCBzZWxlY3Rpb25fcmFpc2UgZnJvbSBcIi4vcmFpc2VcIjtcbmltcG9ydCBzZWxlY3Rpb25fbG93ZXIgZnJvbSBcIi4vbG93ZXJcIjtcbmltcG9ydCBzZWxlY3Rpb25fYXBwZW5kIGZyb20gXCIuL2FwcGVuZFwiO1xuaW1wb3J0IHNlbGVjdGlvbl9pbnNlcnQgZnJvbSBcIi4vaW5zZXJ0XCI7XG5pbXBvcnQgc2VsZWN0aW9uX3JlbW92ZSBmcm9tIFwiLi9yZW1vdmVcIjtcbmltcG9ydCBzZWxlY3Rpb25fY2xvbmUgZnJvbSBcIi4vY2xvbmVcIjtcbmltcG9ydCBzZWxlY3Rpb25fZGF0dW0gZnJvbSBcIi4vZGF0dW1cIjtcbmltcG9ydCBzZWxlY3Rpb25fb24gZnJvbSBcIi4vb25cIjtcbmltcG9ydCBzZWxlY3Rpb25fZGlzcGF0Y2ggZnJvbSBcIi4vZGlzcGF0Y2hcIjtcblxuZXhwb3J0IHZhciByb290ID0gW251bGxdO1xuXG5leHBvcnQgZnVuY3Rpb24gU2VsZWN0aW9uKGdyb3VwcywgcGFyZW50cykge1xuICB0aGlzLl9ncm91cHMgPSBncm91cHM7XG4gIHRoaXMuX3BhcmVudHMgPSBwYXJlbnRzO1xufVxuXG5mdW5jdGlvbiBzZWxlY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKFtbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XV0sIHJvb3QpO1xufVxuXG5TZWxlY3Rpb24ucHJvdG90eXBlID0gc2VsZWN0aW9uLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFNlbGVjdGlvbixcbiAgc2VsZWN0OiBzZWxlY3Rpb25fc2VsZWN0LFxuICBzZWxlY3RBbGw6IHNlbGVjdGlvbl9zZWxlY3RBbGwsXG4gIGZpbHRlcjogc2VsZWN0aW9uX2ZpbHRlcixcbiAgZGF0YTogc2VsZWN0aW9uX2RhdGEsXG4gIGVudGVyOiBzZWxlY3Rpb25fZW50ZXIsXG4gIGV4aXQ6IHNlbGVjdGlvbl9leGl0LFxuICBqb2luOiBzZWxlY3Rpb25fam9pbixcbiAgbWVyZ2U6IHNlbGVjdGlvbl9tZXJnZSxcbiAgb3JkZXI6IHNlbGVjdGlvbl9vcmRlcixcbiAgc29ydDogc2VsZWN0aW9uX3NvcnQsXG4gIGNhbGw6IHNlbGVjdGlvbl9jYWxsLFxuICBub2Rlczogc2VsZWN0aW9uX25vZGVzLFxuICBub2RlOiBzZWxlY3Rpb25fbm9kZSxcbiAgc2l6ZTogc2VsZWN0aW9uX3NpemUsXG4gIGVtcHR5OiBzZWxlY3Rpb25fZW1wdHksXG4gIGVhY2g6IHNlbGVjdGlvbl9lYWNoLFxuICBhdHRyOiBzZWxlY3Rpb25fYXR0cixcbiAgc3R5bGU6IHNlbGVjdGlvbl9zdHlsZSxcbiAgcHJvcGVydHk6IHNlbGVjdGlvbl9wcm9wZXJ0eSxcbiAgY2xhc3NlZDogc2VsZWN0aW9uX2NsYXNzZWQsXG4gIHRleHQ6IHNlbGVjdGlvbl90ZXh0LFxuICBodG1sOiBzZWxlY3Rpb25faHRtbCxcbiAgcmFpc2U6IHNlbGVjdGlvbl9yYWlzZSxcbiAgbG93ZXI6IHNlbGVjdGlvbl9sb3dlcixcbiAgYXBwZW5kOiBzZWxlY3Rpb25fYXBwZW5kLFxuICBpbnNlcnQ6IHNlbGVjdGlvbl9pbnNlcnQsXG4gIHJlbW92ZTogc2VsZWN0aW9uX3JlbW92ZSxcbiAgY2xvbmU6IHNlbGVjdGlvbl9jbG9uZSxcbiAgZGF0dW06IHNlbGVjdGlvbl9kYXR1bSxcbiAgb246IHNlbGVjdGlvbl9vbixcbiAgZGlzcGF0Y2g6IHNlbGVjdGlvbl9kaXNwYXRjaFxufTtcblxuZXhwb3J0IGRlZmF1bHQgc2VsZWN0aW9uO1xuIiwiaW1wb3J0IGNyZWF0b3IgZnJvbSBcIi4uL2NyZWF0b3JcIjtcbmltcG9ydCBzZWxlY3RvciBmcm9tIFwiLi4vc2VsZWN0b3JcIjtcblxuZnVuY3Rpb24gY29uc3RhbnROdWxsKCkge1xuICByZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgYmVmb3JlKSB7XG4gIHZhciBjcmVhdGUgPSB0eXBlb2YgbmFtZSA9PT0gXCJmdW5jdGlvblwiID8gbmFtZSA6IGNyZWF0b3IobmFtZSksXG4gICAgICBzZWxlY3QgPSBiZWZvcmUgPT0gbnVsbCA/IGNvbnN0YW50TnVsbCA6IHR5cGVvZiBiZWZvcmUgPT09IFwiZnVuY3Rpb25cIiA/IGJlZm9yZSA6IHNlbGVjdG9yKGJlZm9yZSk7XG4gIHJldHVybiB0aGlzLnNlbGVjdChmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5pbnNlcnRCZWZvcmUoY3JlYXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHNlbGVjdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IG51bGwpO1xuICB9KTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9uZW50ZXIsIG9udXBkYXRlLCBvbmV4aXQpIHtcbiAgdmFyIGVudGVyID0gdGhpcy5lbnRlcigpLCB1cGRhdGUgPSB0aGlzLCBleGl0ID0gdGhpcy5leGl0KCk7XG4gIGVudGVyID0gdHlwZW9mIG9uZW50ZXIgPT09IFwiZnVuY3Rpb25cIiA/IG9uZW50ZXIoZW50ZXIpIDogZW50ZXIuYXBwZW5kKG9uZW50ZXIgKyBcIlwiKTtcbiAgaWYgKG9udXBkYXRlICE9IG51bGwpIHVwZGF0ZSA9IG9udXBkYXRlKHVwZGF0ZSk7XG4gIGlmIChvbmV4aXQgPT0gbnVsbCkgZXhpdC5yZW1vdmUoKTsgZWxzZSBvbmV4aXQoZXhpdCk7XG4gIHJldHVybiBlbnRlciAmJiB1cGRhdGUgPyBlbnRlci5tZXJnZSh1cGRhdGUpLm9yZGVyKCkgOiB1cGRhdGU7XG59XG4iLCJmdW5jdGlvbiBsb3dlcigpIHtcbiAgaWYgKHRoaXMucHJldmlvdXNTaWJsaW5nKSB0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMsIHRoaXMucGFyZW50Tm9kZS5maXJzdENoaWxkKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmVhY2gobG93ZXIpO1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdGlvbikge1xuXG4gIGZvciAodmFyIGdyb3VwczAgPSB0aGlzLl9ncm91cHMsIGdyb3VwczEgPSBzZWxlY3Rpb24uX2dyb3VwcywgbTAgPSBncm91cHMwLmxlbmd0aCwgbTEgPSBncm91cHMxLmxlbmd0aCwgbSA9IE1hdGgubWluKG0wLCBtMSksIG1lcmdlcyA9IG5ldyBBcnJheShtMCksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAwID0gZ3JvdXBzMFtqXSwgZ3JvdXAxID0gZ3JvdXBzMVtqXSwgbiA9IGdyb3VwMC5sZW5ndGgsIG1lcmdlID0gbWVyZ2VzW2pdID0gbmV3IEFycmF5KG4pLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cDBbaV0gfHwgZ3JvdXAxW2ldKSB7XG4gICAgICAgIG1lcmdlW2ldID0gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmb3IgKDsgaiA8IG0wOyArK2opIHtcbiAgICBtZXJnZXNbal0gPSBncm91cHMwW2pdO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24obWVyZ2VzLCB0aGlzLl9wYXJlbnRzKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgaiA9IDAsIG0gPSBncm91cHMubGVuZ3RoOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIGkgPSAwLCBuID0gZ3JvdXAubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICB2YXIgbm9kZSA9IGdyb3VwW2ldO1xuICAgICAgaWYgKG5vZGUpIHJldHVybiBub2RlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBub2RlcyA9IG5ldyBBcnJheSh0aGlzLnNpemUoKSksIGkgPSAtMTtcbiAgdGhpcy5lYWNoKGZ1bmN0aW9uKCkgeyBub2Rlc1srK2ldID0gdGhpczsgfSk7XG4gIHJldHVybiBub2Rlcztcbn1cbiIsInZhciBmaWx0ZXJFdmVudHMgPSB7fTtcblxuZXhwb3J0IHZhciBldmVudCA9IG51bGw7XG5cbmlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gIGlmICghKFwib25tb3VzZWVudGVyXCIgaW4gZWxlbWVudCkpIHtcbiAgICBmaWx0ZXJFdmVudHMgPSB7bW91c2VlbnRlcjogXCJtb3VzZW92ZXJcIiwgbW91c2VsZWF2ZTogXCJtb3VzZW91dFwifTtcbiAgfVxufVxuXG5mdW5jdGlvbiBmaWx0ZXJDb250ZXh0TGlzdGVuZXIobGlzdGVuZXIsIGluZGV4LCBncm91cCkge1xuICBsaXN0ZW5lciA9IGNvbnRleHRMaXN0ZW5lcihsaXN0ZW5lciwgaW5kZXgsIGdyb3VwKTtcbiAgcmV0dXJuIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgdmFyIHJlbGF0ZWQgPSBldmVudC5yZWxhdGVkVGFyZ2V0O1xuICAgIGlmICghcmVsYXRlZCB8fCAocmVsYXRlZCAhPT0gdGhpcyAmJiAhKHJlbGF0ZWQuY29tcGFyZURvY3VtZW50UG9zaXRpb24odGhpcykgJiA4KSkpIHtcbiAgICAgIGxpc3RlbmVyLmNhbGwodGhpcywgZXZlbnQpO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gY29udGV4dExpc3RlbmVyKGxpc3RlbmVyLCBpbmRleCwgZ3JvdXApIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGV2ZW50MSkge1xuICAgIHZhciBldmVudDAgPSBldmVudDsgLy8gRXZlbnRzIGNhbiBiZSByZWVudHJhbnQgKGUuZy4sIGZvY3VzKS5cbiAgICBldmVudCA9IGV2ZW50MTtcbiAgICB0cnkge1xuICAgICAgbGlzdGVuZXIuY2FsbCh0aGlzLCB0aGlzLl9fZGF0YV9fLCBpbmRleCwgZ3JvdXApO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBldmVudCA9IGV2ZW50MDtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIHBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lcykge1xuICByZXR1cm4gdHlwZW5hbWVzLnRyaW0oKS5zcGxpdCgvXnxcXHMrLykubWFwKGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgbmFtZSA9IFwiXCIsIGkgPSB0LmluZGV4T2YoXCIuXCIpO1xuICAgIGlmIChpID49IDApIG5hbWUgPSB0LnNsaWNlKGkgKyAxKSwgdCA9IHQuc2xpY2UoMCwgaSk7XG4gICAgcmV0dXJuIHt0eXBlOiB0LCBuYW1lOiBuYW1lfTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIG9uUmVtb3ZlKHR5cGVuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgb24gPSB0aGlzLl9fb247XG4gICAgaWYgKCFvbikgcmV0dXJuO1xuICAgIGZvciAodmFyIGogPSAwLCBpID0gLTEsIG0gPSBvbi5sZW5ndGgsIG87IGogPCBtOyArK2opIHtcbiAgICAgIGlmIChvID0gb25bal0sICghdHlwZW5hbWUudHlwZSB8fCBvLnR5cGUgPT09IHR5cGVuYW1lLnR5cGUpICYmIG8ubmFtZSA9PT0gdHlwZW5hbWUubmFtZSkge1xuICAgICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoby50eXBlLCBvLmxpc3RlbmVyLCBvLmNhcHR1cmUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb25bKytpXSA9IG87XG4gICAgICB9XG4gICAgfVxuICAgIGlmICgrK2kpIG9uLmxlbmd0aCA9IGk7XG4gICAgZWxzZSBkZWxldGUgdGhpcy5fX29uO1xuICB9O1xufVxuXG5mdW5jdGlvbiBvbkFkZCh0eXBlbmFtZSwgdmFsdWUsIGNhcHR1cmUpIHtcbiAgdmFyIHdyYXAgPSBmaWx0ZXJFdmVudHMuaGFzT3duUHJvcGVydHkodHlwZW5hbWUudHlwZSkgPyBmaWx0ZXJDb250ZXh0TGlzdGVuZXIgOiBjb250ZXh0TGlzdGVuZXI7XG4gIHJldHVybiBmdW5jdGlvbihkLCBpLCBncm91cCkge1xuICAgIHZhciBvbiA9IHRoaXMuX19vbiwgbywgbGlzdGVuZXIgPSB3cmFwKHZhbHVlLCBpLCBncm91cCk7XG4gICAgaWYgKG9uKSBmb3IgKHZhciBqID0gMCwgbSA9IG9uLmxlbmd0aDsgaiA8IG07ICsraikge1xuICAgICAgaWYgKChvID0gb25bal0pLnR5cGUgPT09IHR5cGVuYW1lLnR5cGUgJiYgby5uYW1lID09PSB0eXBlbmFtZS5uYW1lKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihvLnR5cGUsIG8ubGlzdGVuZXIsIG8uY2FwdHVyZSk7XG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihvLnR5cGUsIG8ubGlzdGVuZXIgPSBsaXN0ZW5lciwgby5jYXB0dXJlID0gY2FwdHVyZSk7XG4gICAgICAgIG8udmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIodHlwZW5hbWUudHlwZSwgbGlzdGVuZXIsIGNhcHR1cmUpO1xuICAgIG8gPSB7dHlwZTogdHlwZW5hbWUudHlwZSwgbmFtZTogdHlwZW5hbWUubmFtZSwgdmFsdWU6IHZhbHVlLCBsaXN0ZW5lcjogbGlzdGVuZXIsIGNhcHR1cmU6IGNhcHR1cmV9O1xuICAgIGlmICghb24pIHRoaXMuX19vbiA9IFtvXTtcbiAgICBlbHNlIG9uLnB1c2gobyk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHR5cGVuYW1lLCB2YWx1ZSwgY2FwdHVyZSkge1xuICB2YXIgdHlwZW5hbWVzID0gcGFyc2VUeXBlbmFtZXModHlwZW5hbWUgKyBcIlwiKSwgaSwgbiA9IHR5cGVuYW1lcy5sZW5ndGgsIHQ7XG5cbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgdmFyIG9uID0gdGhpcy5ub2RlKCkuX19vbjtcbiAgICBpZiAob24pIGZvciAodmFyIGogPSAwLCBtID0gb24ubGVuZ3RoLCBvOyBqIDwgbTsgKytqKSB7XG4gICAgICBmb3IgKGkgPSAwLCBvID0gb25bal07IGkgPCBuOyArK2kpIHtcbiAgICAgICAgaWYgKCh0ID0gdHlwZW5hbWVzW2ldKS50eXBlID09PSBvLnR5cGUgJiYgdC5uYW1lID09PSBvLm5hbWUpIHtcbiAgICAgICAgICByZXR1cm4gby52YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm47XG4gIH1cblxuICBvbiA9IHZhbHVlID8gb25BZGQgOiBvblJlbW92ZTtcbiAgaWYgKGNhcHR1cmUgPT0gbnVsbCkgY2FwdHVyZSA9IGZhbHNlO1xuICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB0aGlzLmVhY2gob24odHlwZW5hbWVzW2ldLCB2YWx1ZSwgY2FwdHVyZSkpO1xuICByZXR1cm4gdGhpcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGN1c3RvbUV2ZW50KGV2ZW50MSwgbGlzdGVuZXIsIHRoYXQsIGFyZ3MpIHtcbiAgdmFyIGV2ZW50MCA9IGV2ZW50O1xuICBldmVudDEuc291cmNlRXZlbnQgPSBldmVudDtcbiAgZXZlbnQgPSBldmVudDE7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHRoYXQsIGFyZ3MpO1xuICB9IGZpbmFsbHkge1xuICAgIGV2ZW50ID0gZXZlbnQwO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIGogPSAtMSwgbSA9IGdyb3Vwcy5sZW5ndGg7ICsraiA8IG07KSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIGkgPSBncm91cC5sZW5ndGggLSAxLCBuZXh0ID0gZ3JvdXBbaV0sIG5vZGU7IC0taSA+PSAwOykge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICBpZiAobmV4dCAmJiBub2RlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKG5leHQpIF4gNCkgbmV4dC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShub2RlLCBuZXh0KTtcbiAgICAgICAgbmV4dCA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJmdW5jdGlvbiBwcm9wZXJ0eVJlbW92ZShuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBkZWxldGUgdGhpc1tuYW1lXTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gcHJvcGVydHlDb25zdGFudChuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpc1tuYW1lXSA9IHZhbHVlO1xuICB9O1xufVxuXG5mdW5jdGlvbiBwcm9wZXJ0eUZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHYgPT0gbnVsbCkgZGVsZXRlIHRoaXNbbmFtZV07XG4gICAgZWxzZSB0aGlzW25hbWVdID0gdjtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAxXG4gICAgICA/IHRoaXMuZWFjaCgodmFsdWUgPT0gbnVsbFxuICAgICAgICAgID8gcHJvcGVydHlSZW1vdmUgOiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gcHJvcGVydHlGdW5jdGlvblxuICAgICAgICAgIDogcHJvcGVydHlDb25zdGFudCkobmFtZSwgdmFsdWUpKVxuICAgICAgOiB0aGlzLm5vZGUoKVtuYW1lXTtcbn1cbiIsImZ1bmN0aW9uIHJhaXNlKCkge1xuICBpZiAodGhpcy5uZXh0U2libGluZykgdGhpcy5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHRoaXMpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaChyYWlzZSk7XG59XG4iLCJmdW5jdGlvbiByZW1vdmUoKSB7XG4gIHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG4gIGlmIChwYXJlbnQpIHBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmVhY2gocmVtb3ZlKTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleFwiO1xuaW1wb3J0IHNlbGVjdG9yIGZyb20gXCIuLi9zZWxlY3RvclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3QpIHtcbiAgaWYgKHR5cGVvZiBzZWxlY3QgIT09IFwiZnVuY3Rpb25cIikgc2VsZWN0ID0gc2VsZWN0b3Ioc2VsZWN0KTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIHN1Ymdyb3VwID0gc3ViZ3JvdXBzW2pdID0gbmV3IEFycmF5KG4pLCBub2RlLCBzdWJub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIChzdWJub2RlID0gc2VsZWN0LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApKSkge1xuICAgICAgICBpZiAoXCJfX2RhdGFfX1wiIGluIG5vZGUpIHN1Ym5vZGUuX19kYXRhX18gPSBub2RlLl9fZGF0YV9fO1xuICAgICAgICBzdWJncm91cFtpXSA9IHN1Ym5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24oc3ViZ3JvdXBzLCB0aGlzLl9wYXJlbnRzKTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleFwiO1xuaW1wb3J0IHNlbGVjdG9yQWxsIGZyb20gXCIuLi9zZWxlY3RvckFsbFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3QpIHtcbiAgaWYgKHR5cGVvZiBzZWxlY3QgIT09IFwiZnVuY3Rpb25cIikgc2VsZWN0ID0gc2VsZWN0b3JBbGwoc2VsZWN0KTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBbXSwgcGFyZW50cyA9IFtdLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICBzdWJncm91cHMucHVzaChzZWxlY3QuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCkpO1xuICAgICAgICBwYXJlbnRzLnB1c2gobm9kZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24oc3ViZ3JvdXBzLCBwYXJlbnRzKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgc2l6ZSA9IDA7XG4gIHRoaXMuZWFjaChmdW5jdGlvbigpIHsgKytzaXplOyB9KTtcbiAgcmV0dXJuIHNpemU7XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29tcGFyZSkge1xuICBpZiAoIWNvbXBhcmUpIGNvbXBhcmUgPSBhc2NlbmRpbmc7XG5cbiAgZnVuY3Rpb24gY29tcGFyZU5vZGUoYSwgYikge1xuICAgIHJldHVybiBhICYmIGIgPyBjb21wYXJlKGEuX19kYXRhX18sIGIuX19kYXRhX18pIDogIWEgLSAhYjtcbiAgfVxuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHNvcnRncm91cHMgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIHNvcnRncm91cCA9IHNvcnRncm91cHNbal0gPSBuZXcgQXJyYXkobiksIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgIHNvcnRncm91cFtpXSA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICAgIHNvcnRncm91cC5zb3J0KGNvbXBhcmVOb2RlKTtcbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHNvcnRncm91cHMsIHRoaXMuX3BhcmVudHMpLm9yZGVyKCk7XG59XG5cbmZ1bmN0aW9uIGFzY2VuZGluZyhhLCBiKSB7XG4gIHJldHVybiBhIDwgYiA/IC0xIDogYSA+IGIgPyAxIDogYSA+PSBiID8gMCA6IE5hTjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHVwZGF0ZSkge1xuICByZXR1cm4gbmV3IEFycmF5KHVwZGF0ZS5sZW5ndGgpO1xufVxuIiwiaW1wb3J0IGRlZmF1bHRWaWV3IGZyb20gXCIuLi93aW5kb3dcIjtcblxuZnVuY3Rpb24gc3R5bGVSZW1vdmUobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3R5bGVDb25zdGFudChuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuc3R5bGUuc2V0UHJvcGVydHkobmFtZSwgdmFsdWUsIHByaW9yaXR5KTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3R5bGVGdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAodiA9PSBudWxsKSB0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpO1xuICAgIGVsc2UgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCB2LCBwcmlvcml0eSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDFcbiAgICAgID8gdGhpcy5lYWNoKCh2YWx1ZSA9PSBudWxsXG4gICAgICAgICAgICA/IHN0eWxlUmVtb3ZlIDogdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICAgID8gc3R5bGVGdW5jdGlvblxuICAgICAgICAgICAgOiBzdHlsZUNvbnN0YW50KShuYW1lLCB2YWx1ZSwgcHJpb3JpdHkgPT0gbnVsbCA/IFwiXCIgOiBwcmlvcml0eSkpXG4gICAgICA6IHN0eWxlVmFsdWUodGhpcy5ub2RlKCksIG5hbWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3R5bGVWYWx1ZShub2RlLCBuYW1lKSB7XG4gIHJldHVybiBub2RlLnN0eWxlLmdldFByb3BlcnR5VmFsdWUobmFtZSlcbiAgICAgIHx8IGRlZmF1bHRWaWV3KG5vZGUpLmdldENvbXB1dGVkU3R5bGUobm9kZSwgbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShuYW1lKTtcbn1cbiIsImZ1bmN0aW9uIHRleHRSZW1vdmUoKSB7XG4gIHRoaXMudGV4dENvbnRlbnQgPSBcIlwiO1xufVxuXG5mdW5jdGlvbiB0ZXh0Q29uc3RhbnQodmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdGV4dEZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgdGhpcy50ZXh0Q29udGVudCA9IHYgPT0gbnVsbCA/IFwiXCIgOiB2O1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgPyB0aGlzLmVhY2godmFsdWUgPT0gbnVsbFxuICAgICAgICAgID8gdGV4dFJlbW92ZSA6ICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gdGV4dEZ1bmN0aW9uXG4gICAgICAgICAgOiB0ZXh0Q29uc3RhbnQpKHZhbHVlKSlcbiAgICAgIDogdGhpcy5ub2RlKCkudGV4dENvbnRlbnQ7XG59XG4iLCJmdW5jdGlvbiBub25lKCkge31cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHNlbGVjdG9yID09IG51bGwgPyBub25lIDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gIH07XG59XG4iLCJmdW5jdGlvbiBlbXB0eSgpIHtcbiAgcmV0dXJuIFtdO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3Rvcikge1xuICByZXR1cm4gc2VsZWN0b3IgPT0gbnVsbCA/IGVtcHR5IDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7XG4gIH07XG59XG4iLCJpbXBvcnQge2V2ZW50fSBmcm9tIFwiLi9zZWxlY3Rpb24vb25cIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBjdXJyZW50ID0gZXZlbnQsIHNvdXJjZTtcbiAgd2hpbGUgKHNvdXJjZSA9IGN1cnJlbnQuc291cmNlRXZlbnQpIGN1cnJlbnQgPSBzb3VyY2U7XG4gIHJldHVybiBjdXJyZW50O1xufVxuIiwiaW1wb3J0IHNvdXJjZUV2ZW50IGZyb20gXCIuL3NvdXJjZUV2ZW50XCI7XG5pbXBvcnQgcG9pbnQgZnJvbSBcIi4vcG9pbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSwgdG91Y2hlcywgaWRlbnRpZmllcikge1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDMpIGlkZW50aWZpZXIgPSB0b3VjaGVzLCB0b3VjaGVzID0gc291cmNlRXZlbnQoKS5jaGFuZ2VkVG91Y2hlcztcblxuICBmb3IgKHZhciBpID0gMCwgbiA9IHRvdWNoZXMgPyB0b3VjaGVzLmxlbmd0aCA6IDAsIHRvdWNoOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKCh0b3VjaCA9IHRvdWNoZXNbaV0pLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJldHVybiBwb2ludChub2RlLCB0b3VjaCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG4iLCJpbXBvcnQgc291cmNlRXZlbnQgZnJvbSBcIi4vc291cmNlRXZlbnRcIjtcbmltcG9ydCBwb2ludCBmcm9tIFwiLi9wb2ludFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlLCB0b3VjaGVzKSB7XG4gIGlmICh0b3VjaGVzID09IG51bGwpIHRvdWNoZXMgPSBzb3VyY2VFdmVudCgpLnRvdWNoZXM7XG5cbiAgZm9yICh2YXIgaSA9IDAsIG4gPSB0b3VjaGVzID8gdG91Y2hlcy5sZW5ndGggOiAwLCBwb2ludHMgPSBuZXcgQXJyYXkobik7IGkgPCBuOyArK2kpIHtcbiAgICBwb2ludHNbaV0gPSBwb2ludChub2RlLCB0b3VjaGVzW2ldKTtcbiAgfVxuXG4gIHJldHVybiBwb2ludHM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlKSB7XG4gIHJldHVybiAobm9kZS5vd25lckRvY3VtZW50ICYmIG5vZGUub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldykgLy8gbm9kZSBpcyBhIE5vZGVcbiAgICAgIHx8IChub2RlLmRvY3VtZW50ICYmIG5vZGUpIC8vIG5vZGUgaXMgYSBXaW5kb3dcbiAgICAgIHx8IG5vZGUuZGVmYXVsdFZpZXc7IC8vIG5vZGUgaXMgYSBEb2N1bWVudFxufVxuIiwiaW1wb3J0IHtwYXRofSBmcm9tIFwiZDMtcGF0aFwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQge2FicywgYWNvcywgYXNpbiwgYXRhbjIsIGNvcywgZXBzaWxvbiwgaGFsZlBpLCBtYXgsIG1pbiwgcGksIHNpbiwgc3FydCwgdGF1fSBmcm9tIFwiLi9tYXRoXCI7XG5cbmZ1bmN0aW9uIGFyY0lubmVyUmFkaXVzKGQpIHtcbiAgcmV0dXJuIGQuaW5uZXJSYWRpdXM7XG59XG5cbmZ1bmN0aW9uIGFyY091dGVyUmFkaXVzKGQpIHtcbiAgcmV0dXJuIGQub3V0ZXJSYWRpdXM7XG59XG5cbmZ1bmN0aW9uIGFyY1N0YXJ0QW5nbGUoZCkge1xuICByZXR1cm4gZC5zdGFydEFuZ2xlO1xufVxuXG5mdW5jdGlvbiBhcmNFbmRBbmdsZShkKSB7XG4gIHJldHVybiBkLmVuZEFuZ2xlO1xufVxuXG5mdW5jdGlvbiBhcmNQYWRBbmdsZShkKSB7XG4gIHJldHVybiBkICYmIGQucGFkQW5nbGU7IC8vIE5vdGU6IG9wdGlvbmFsIVxufVxuXG5mdW5jdGlvbiBpbnRlcnNlY3QoeDAsIHkwLCB4MSwgeTEsIHgyLCB5MiwgeDMsIHkzKSB7XG4gIHZhciB4MTAgPSB4MSAtIHgwLCB5MTAgPSB5MSAtIHkwLFxuICAgICAgeDMyID0geDMgLSB4MiwgeTMyID0geTMgLSB5MixcbiAgICAgIHQgPSB5MzIgKiB4MTAgLSB4MzIgKiB5MTA7XG4gIGlmICh0ICogdCA8IGVwc2lsb24pIHJldHVybjtcbiAgdCA9ICh4MzIgKiAoeTAgLSB5MikgLSB5MzIgKiAoeDAgLSB4MikpIC8gdDtcbiAgcmV0dXJuIFt4MCArIHQgKiB4MTAsIHkwICsgdCAqIHkxMF07XG59XG5cbi8vIENvbXB1dGUgcGVycGVuZGljdWxhciBvZmZzZXQgbGluZSBvZiBsZW5ndGggcmMuXG4vLyBodHRwOi8vbWF0aHdvcmxkLndvbGZyYW0uY29tL0NpcmNsZS1MaW5lSW50ZXJzZWN0aW9uLmh0bWxcbmZ1bmN0aW9uIGNvcm5lclRhbmdlbnRzKHgwLCB5MCwgeDEsIHkxLCByMSwgcmMsIGN3KSB7XG4gIHZhciB4MDEgPSB4MCAtIHgxLFxuICAgICAgeTAxID0geTAgLSB5MSxcbiAgICAgIGxvID0gKGN3ID8gcmMgOiAtcmMpIC8gc3FydCh4MDEgKiB4MDEgKyB5MDEgKiB5MDEpLFxuICAgICAgb3ggPSBsbyAqIHkwMSxcbiAgICAgIG95ID0gLWxvICogeDAxLFxuICAgICAgeDExID0geDAgKyBveCxcbiAgICAgIHkxMSA9IHkwICsgb3ksXG4gICAgICB4MTAgPSB4MSArIG94LFxuICAgICAgeTEwID0geTEgKyBveSxcbiAgICAgIHgwMCA9ICh4MTEgKyB4MTApIC8gMixcbiAgICAgIHkwMCA9ICh5MTEgKyB5MTApIC8gMixcbiAgICAgIGR4ID0geDEwIC0geDExLFxuICAgICAgZHkgPSB5MTAgLSB5MTEsXG4gICAgICBkMiA9IGR4ICogZHggKyBkeSAqIGR5LFxuICAgICAgciA9IHIxIC0gcmMsXG4gICAgICBEID0geDExICogeTEwIC0geDEwICogeTExLFxuICAgICAgZCA9IChkeSA8IDAgPyAtMSA6IDEpICogc3FydChtYXgoMCwgciAqIHIgKiBkMiAtIEQgKiBEKSksXG4gICAgICBjeDAgPSAoRCAqIGR5IC0gZHggKiBkKSAvIGQyLFxuICAgICAgY3kwID0gKC1EICogZHggLSBkeSAqIGQpIC8gZDIsXG4gICAgICBjeDEgPSAoRCAqIGR5ICsgZHggKiBkKSAvIGQyLFxuICAgICAgY3kxID0gKC1EICogZHggKyBkeSAqIGQpIC8gZDIsXG4gICAgICBkeDAgPSBjeDAgLSB4MDAsXG4gICAgICBkeTAgPSBjeTAgLSB5MDAsXG4gICAgICBkeDEgPSBjeDEgLSB4MDAsXG4gICAgICBkeTEgPSBjeTEgLSB5MDA7XG5cbiAgLy8gUGljayB0aGUgY2xvc2VyIG9mIHRoZSB0d28gaW50ZXJzZWN0aW9uIHBvaW50cy5cbiAgLy8gVE9ETyBJcyB0aGVyZSBhIGZhc3RlciB3YXkgdG8gZGV0ZXJtaW5lIHdoaWNoIGludGVyc2VjdGlvbiB0byB1c2U/XG4gIGlmIChkeDAgKiBkeDAgKyBkeTAgKiBkeTAgPiBkeDEgKiBkeDEgKyBkeTEgKiBkeTEpIGN4MCA9IGN4MSwgY3kwID0gY3kxO1xuXG4gIHJldHVybiB7XG4gICAgY3g6IGN4MCxcbiAgICBjeTogY3kwLFxuICAgIHgwMTogLW94LFxuICAgIHkwMTogLW95LFxuICAgIHgxMTogY3gwICogKHIxIC8gciAtIDEpLFxuICAgIHkxMTogY3kwICogKHIxIC8gciAtIDEpXG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgaW5uZXJSYWRpdXMgPSBhcmNJbm5lclJhZGl1cyxcbiAgICAgIG91dGVyUmFkaXVzID0gYXJjT3V0ZXJSYWRpdXMsXG4gICAgICBjb3JuZXJSYWRpdXMgPSBjb25zdGFudCgwKSxcbiAgICAgIHBhZFJhZGl1cyA9IG51bGwsXG4gICAgICBzdGFydEFuZ2xlID0gYXJjU3RhcnRBbmdsZSxcbiAgICAgIGVuZEFuZ2xlID0gYXJjRW5kQW5nbGUsXG4gICAgICBwYWRBbmdsZSA9IGFyY1BhZEFuZ2xlLFxuICAgICAgY29udGV4dCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gYXJjKCkge1xuICAgIHZhciBidWZmZXIsXG4gICAgICAgIHIsXG4gICAgICAgIHIwID0gK2lubmVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgIHIxID0gK291dGVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgIGEwID0gc3RhcnRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIC0gaGFsZlBpLFxuICAgICAgICBhMSA9IGVuZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgLSBoYWxmUGksXG4gICAgICAgIGRhID0gYWJzKGExIC0gYTApLFxuICAgICAgICBjdyA9IGExID4gYTA7XG5cbiAgICBpZiAoIWNvbnRleHQpIGNvbnRleHQgPSBidWZmZXIgPSBwYXRoKCk7XG5cbiAgICAvLyBFbnN1cmUgdGhhdCB0aGUgb3V0ZXIgcmFkaXVzIGlzIGFsd2F5cyBsYXJnZXIgdGhhbiB0aGUgaW5uZXIgcmFkaXVzLlxuICAgIGlmIChyMSA8IHIwKSByID0gcjEsIHIxID0gcjAsIHIwID0gcjtcblxuICAgIC8vIElzIGl0IGEgcG9pbnQ/XG4gICAgaWYgKCEocjEgPiBlcHNpbG9uKSkgY29udGV4dC5tb3ZlVG8oMCwgMCk7XG5cbiAgICAvLyBPciBpcyBpdCBhIGNpcmNsZSBvciBhbm51bHVzP1xuICAgIGVsc2UgaWYgKGRhID4gdGF1IC0gZXBzaWxvbikge1xuICAgICAgY29udGV4dC5tb3ZlVG8ocjEgKiBjb3MoYTApLCByMSAqIHNpbihhMCkpO1xuICAgICAgY29udGV4dC5hcmMoMCwgMCwgcjEsIGEwLCBhMSwgIWN3KTtcbiAgICAgIGlmIChyMCA+IGVwc2lsb24pIHtcbiAgICAgICAgY29udGV4dC5tb3ZlVG8ocjAgKiBjb3MoYTEpLCByMCAqIHNpbihhMSkpO1xuICAgICAgICBjb250ZXh0LmFyYygwLCAwLCByMCwgYTEsIGEwLCBjdyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gT3IgaXMgaXQgYSBjaXJjdWxhciBvciBhbm51bGFyIHNlY3Rvcj9cbiAgICBlbHNlIHtcbiAgICAgIHZhciBhMDEgPSBhMCxcbiAgICAgICAgICBhMTEgPSBhMSxcbiAgICAgICAgICBhMDAgPSBhMCxcbiAgICAgICAgICBhMTAgPSBhMSxcbiAgICAgICAgICBkYTAgPSBkYSxcbiAgICAgICAgICBkYTEgPSBkYSxcbiAgICAgICAgICBhcCA9IHBhZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgLyAyLFxuICAgICAgICAgIHJwID0gKGFwID4gZXBzaWxvbikgJiYgKHBhZFJhZGl1cyA/ICtwYWRSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IHNxcnQocjAgKiByMCArIHIxICogcjEpKSxcbiAgICAgICAgICByYyA9IG1pbihhYnMocjEgLSByMCkgLyAyLCArY29ybmVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpLFxuICAgICAgICAgIHJjMCA9IHJjLFxuICAgICAgICAgIHJjMSA9IHJjLFxuICAgICAgICAgIHQwLFxuICAgICAgICAgIHQxO1xuXG4gICAgICAvLyBBcHBseSBwYWRkaW5nPyBOb3RlIHRoYXQgc2luY2UgcjEg4omlIHIwLCBkYTEg4omlIGRhMC5cbiAgICAgIGlmIChycCA+IGVwc2lsb24pIHtcbiAgICAgICAgdmFyIHAwID0gYXNpbihycCAvIHIwICogc2luKGFwKSksXG4gICAgICAgICAgICBwMSA9IGFzaW4ocnAgLyByMSAqIHNpbihhcCkpO1xuICAgICAgICBpZiAoKGRhMCAtPSBwMCAqIDIpID4gZXBzaWxvbikgcDAgKj0gKGN3ID8gMSA6IC0xKSwgYTAwICs9IHAwLCBhMTAgLT0gcDA7XG4gICAgICAgIGVsc2UgZGEwID0gMCwgYTAwID0gYTEwID0gKGEwICsgYTEpIC8gMjtcbiAgICAgICAgaWYgKChkYTEgLT0gcDEgKiAyKSA+IGVwc2lsb24pIHAxICo9IChjdyA/IDEgOiAtMSksIGEwMSArPSBwMSwgYTExIC09IHAxO1xuICAgICAgICBlbHNlIGRhMSA9IDAsIGEwMSA9IGExMSA9IChhMCArIGExKSAvIDI7XG4gICAgICB9XG5cbiAgICAgIHZhciB4MDEgPSByMSAqIGNvcyhhMDEpLFxuICAgICAgICAgIHkwMSA9IHIxICogc2luKGEwMSksXG4gICAgICAgICAgeDEwID0gcjAgKiBjb3MoYTEwKSxcbiAgICAgICAgICB5MTAgPSByMCAqIHNpbihhMTApO1xuXG4gICAgICAvLyBBcHBseSByb3VuZGVkIGNvcm5lcnM/XG4gICAgICBpZiAocmMgPiBlcHNpbG9uKSB7XG4gICAgICAgIHZhciB4MTEgPSByMSAqIGNvcyhhMTEpLFxuICAgICAgICAgICAgeTExID0gcjEgKiBzaW4oYTExKSxcbiAgICAgICAgICAgIHgwMCA9IHIwICogY29zKGEwMCksXG4gICAgICAgICAgICB5MDAgPSByMCAqIHNpbihhMDApLFxuICAgICAgICAgICAgb2M7XG5cbiAgICAgICAgLy8gUmVzdHJpY3QgdGhlIGNvcm5lciByYWRpdXMgYWNjb3JkaW5nIHRvIHRoZSBzZWN0b3IgYW5nbGUuXG4gICAgICAgIGlmIChkYSA8IHBpICYmIChvYyA9IGludGVyc2VjdCh4MDEsIHkwMSwgeDAwLCB5MDAsIHgxMSwgeTExLCB4MTAsIHkxMCkpKSB7XG4gICAgICAgICAgdmFyIGF4ID0geDAxIC0gb2NbMF0sXG4gICAgICAgICAgICAgIGF5ID0geTAxIC0gb2NbMV0sXG4gICAgICAgICAgICAgIGJ4ID0geDExIC0gb2NbMF0sXG4gICAgICAgICAgICAgIGJ5ID0geTExIC0gb2NbMV0sXG4gICAgICAgICAgICAgIGtjID0gMSAvIHNpbihhY29zKChheCAqIGJ4ICsgYXkgKiBieSkgLyAoc3FydChheCAqIGF4ICsgYXkgKiBheSkgKiBzcXJ0KGJ4ICogYnggKyBieSAqIGJ5KSkpIC8gMiksXG4gICAgICAgICAgICAgIGxjID0gc3FydChvY1swXSAqIG9jWzBdICsgb2NbMV0gKiBvY1sxXSk7XG4gICAgICAgICAgcmMwID0gbWluKHJjLCAocjAgLSBsYykgLyAoa2MgLSAxKSk7XG4gICAgICAgICAgcmMxID0gbWluKHJjLCAocjEgLSBsYykgLyAoa2MgKyAxKSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gSXMgdGhlIHNlY3RvciBjb2xsYXBzZWQgdG8gYSBsaW5lP1xuICAgICAgaWYgKCEoZGExID4gZXBzaWxvbikpIGNvbnRleHQubW92ZVRvKHgwMSwgeTAxKTtcblxuICAgICAgLy8gRG9lcyB0aGUgc2VjdG9y4oCZcyBvdXRlciByaW5nIGhhdmUgcm91bmRlZCBjb3JuZXJzP1xuICAgICAgZWxzZSBpZiAocmMxID4gZXBzaWxvbikge1xuICAgICAgICB0MCA9IGNvcm5lclRhbmdlbnRzKHgwMCwgeTAwLCB4MDEsIHkwMSwgcjEsIHJjMSwgY3cpO1xuICAgICAgICB0MSA9IGNvcm5lclRhbmdlbnRzKHgxMSwgeTExLCB4MTAsIHkxMCwgcjEsIHJjMSwgY3cpO1xuXG4gICAgICAgIGNvbnRleHQubW92ZVRvKHQwLmN4ICsgdDAueDAxLCB0MC5jeSArIHQwLnkwMSk7XG5cbiAgICAgICAgLy8gSGF2ZSB0aGUgY29ybmVycyBtZXJnZWQ/XG4gICAgICAgIGlmIChyYzEgPCByYykgY29udGV4dC5hcmModDAuY3gsIHQwLmN5LCByYzEsIGF0YW4yKHQwLnkwMSwgdDAueDAxKSwgYXRhbjIodDEueTAxLCB0MS54MDEpLCAhY3cpO1xuXG4gICAgICAgIC8vIE90aGVyd2lzZSwgZHJhdyB0aGUgdHdvIGNvcm5lcnMgYW5kIHRoZSByaW5nLlxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBjb250ZXh0LmFyYyh0MC5jeCwgdDAuY3ksIHJjMSwgYXRhbjIodDAueTAxLCB0MC54MDEpLCBhdGFuMih0MC55MTEsIHQwLngxMSksICFjdyk7XG4gICAgICAgICAgY29udGV4dC5hcmMoMCwgMCwgcjEsIGF0YW4yKHQwLmN5ICsgdDAueTExLCB0MC5jeCArIHQwLngxMSksIGF0YW4yKHQxLmN5ICsgdDEueTExLCB0MS5jeCArIHQxLngxMSksICFjdyk7XG4gICAgICAgICAgY29udGV4dC5hcmModDEuY3gsIHQxLmN5LCByYzEsIGF0YW4yKHQxLnkxMSwgdDEueDExKSwgYXRhbjIodDEueTAxLCB0MS54MDEpLCAhY3cpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIE9yIGlzIHRoZSBvdXRlciByaW5nIGp1c3QgYSBjaXJjdWxhciBhcmM/XG4gICAgICBlbHNlIGNvbnRleHQubW92ZVRvKHgwMSwgeTAxKSwgY29udGV4dC5hcmMoMCwgMCwgcjEsIGEwMSwgYTExLCAhY3cpO1xuXG4gICAgICAvLyBJcyB0aGVyZSBubyBpbm5lciByaW5nLCBhbmQgaXTigJlzIGEgY2lyY3VsYXIgc2VjdG9yP1xuICAgICAgLy8gT3IgcGVyaGFwcyBpdOKAmXMgYW4gYW5udWxhciBzZWN0b3IgY29sbGFwc2VkIGR1ZSB0byBwYWRkaW5nP1xuICAgICAgaWYgKCEocjAgPiBlcHNpbG9uKSB8fCAhKGRhMCA+IGVwc2lsb24pKSBjb250ZXh0LmxpbmVUbyh4MTAsIHkxMCk7XG5cbiAgICAgIC8vIERvZXMgdGhlIHNlY3RvcuKAmXMgaW5uZXIgcmluZyAob3IgcG9pbnQpIGhhdmUgcm91bmRlZCBjb3JuZXJzP1xuICAgICAgZWxzZSBpZiAocmMwID4gZXBzaWxvbikge1xuICAgICAgICB0MCA9IGNvcm5lclRhbmdlbnRzKHgxMCwgeTEwLCB4MTEsIHkxMSwgcjAsIC1yYzAsIGN3KTtcbiAgICAgICAgdDEgPSBjb3JuZXJUYW5nZW50cyh4MDEsIHkwMSwgeDAwLCB5MDAsIHIwLCAtcmMwLCBjdyk7XG5cbiAgICAgICAgY29udGV4dC5saW5lVG8odDAuY3ggKyB0MC54MDEsIHQwLmN5ICsgdDAueTAxKTtcblxuICAgICAgICAvLyBIYXZlIHRoZSBjb3JuZXJzIG1lcmdlZD9cbiAgICAgICAgaWYgKHJjMCA8IHJjKSBjb250ZXh0LmFyYyh0MC5jeCwgdDAuY3ksIHJjMCwgYXRhbjIodDAueTAxLCB0MC54MDEpLCBhdGFuMih0MS55MDEsIHQxLngwMSksICFjdyk7XG5cbiAgICAgICAgLy8gT3RoZXJ3aXNlLCBkcmF3IHRoZSB0d28gY29ybmVycyBhbmQgdGhlIHJpbmcuXG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGNvbnRleHQuYXJjKHQwLmN4LCB0MC5jeSwgcmMwLCBhdGFuMih0MC55MDEsIHQwLngwMSksIGF0YW4yKHQwLnkxMSwgdDAueDExKSwgIWN3KTtcbiAgICAgICAgICBjb250ZXh0LmFyYygwLCAwLCByMCwgYXRhbjIodDAuY3kgKyB0MC55MTEsIHQwLmN4ICsgdDAueDExKSwgYXRhbjIodDEuY3kgKyB0MS55MTEsIHQxLmN4ICsgdDEueDExKSwgY3cpO1xuICAgICAgICAgIGNvbnRleHQuYXJjKHQxLmN4LCB0MS5jeSwgcmMwLCBhdGFuMih0MS55MTEsIHQxLngxMSksIGF0YW4yKHQxLnkwMSwgdDEueDAxKSwgIWN3KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBPciBpcyB0aGUgaW5uZXIgcmluZyBqdXN0IGEgY2lyY3VsYXIgYXJjP1xuICAgICAgZWxzZSBjb250ZXh0LmFyYygwLCAwLCByMCwgYTEwLCBhMDAsIGN3KTtcbiAgICB9XG5cbiAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuXG4gICAgaWYgKGJ1ZmZlcikgcmV0dXJuIGNvbnRleHQgPSBudWxsLCBidWZmZXIgKyBcIlwiIHx8IG51bGw7XG4gIH1cblxuICBhcmMuY2VudHJvaWQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgciA9ICgraW5uZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSArICtvdXRlclJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSAvIDIsXG4gICAgICAgIGEgPSAoK3N0YXJ0QW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSArICtlbmRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSAvIDIgLSBwaSAvIDI7XG4gICAgcmV0dXJuIFtjb3MoYSkgKiByLCBzaW4oYSkgKiByXTtcbiAgfTtcblxuICBhcmMuaW5uZXJSYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaW5uZXJSYWRpdXMgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJjKSA6IGlubmVyUmFkaXVzO1xuICB9O1xuXG4gIGFyYy5vdXRlclJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChvdXRlclJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmMpIDogb3V0ZXJSYWRpdXM7XG4gIH07XG5cbiAgYXJjLmNvcm5lclJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjb3JuZXJSYWRpdXMgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJjKSA6IGNvcm5lclJhZGl1cztcbiAgfTtcblxuICBhcmMucGFkUmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZFJhZGl1cyA9IF8gPT0gbnVsbCA/IG51bGwgOiB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJjKSA6IHBhZFJhZGl1cztcbiAgfTtcblxuICBhcmMuc3RhcnRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzdGFydEFuZ2xlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyYykgOiBzdGFydEFuZ2xlO1xuICB9O1xuXG4gIGFyYy5lbmRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlbmRBbmdsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmMpIDogZW5kQW5nbGU7XG4gIH07XG5cbiAgYXJjLnBhZEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZEFuZ2xlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyYykgOiBwYWRBbmdsZTtcbiAgfTtcblxuICBhcmMuY29udGV4dCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICgoY29udGV4dCA9IF8gPT0gbnVsbCA/IG51bGwgOiBfKSwgYXJjKSA6IGNvbnRleHQ7XG4gIH07XG5cbiAgcmV0dXJuIGFyYztcbn1cbiIsImltcG9ydCB7cGF0aH0gZnJvbSBcImQzLXBhdGhcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IGN1cnZlTGluZWFyIGZyb20gXCIuL2N1cnZlL2xpbmVhclwiO1xuaW1wb3J0IGxpbmUgZnJvbSBcIi4vbGluZVwiO1xuaW1wb3J0IHt4IGFzIHBvaW50WCwgeSBhcyBwb2ludFl9IGZyb20gXCIuL3BvaW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgeDAgPSBwb2ludFgsXG4gICAgICB4MSA9IG51bGwsXG4gICAgICB5MCA9IGNvbnN0YW50KDApLFxuICAgICAgeTEgPSBwb2ludFksXG4gICAgICBkZWZpbmVkID0gY29uc3RhbnQodHJ1ZSksXG4gICAgICBjb250ZXh0ID0gbnVsbCxcbiAgICAgIGN1cnZlID0gY3VydmVMaW5lYXIsXG4gICAgICBvdXRwdXQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGFyZWEoZGF0YSkge1xuICAgIHZhciBpLFxuICAgICAgICBqLFxuICAgICAgICBrLFxuICAgICAgICBuID0gZGF0YS5sZW5ndGgsXG4gICAgICAgIGQsXG4gICAgICAgIGRlZmluZWQwID0gZmFsc2UsXG4gICAgICAgIGJ1ZmZlcixcbiAgICAgICAgeDB6ID0gbmV3IEFycmF5KG4pLFxuICAgICAgICB5MHogPSBuZXcgQXJyYXkobik7XG5cbiAgICBpZiAoY29udGV4dCA9PSBudWxsKSBvdXRwdXQgPSBjdXJ2ZShidWZmZXIgPSBwYXRoKCkpO1xuXG4gICAgZm9yIChpID0gMDsgaSA8PSBuOyArK2kpIHtcbiAgICAgIGlmICghKGkgPCBuICYmIGRlZmluZWQoZCA9IGRhdGFbaV0sIGksIGRhdGEpKSA9PT0gZGVmaW5lZDApIHtcbiAgICAgICAgaWYgKGRlZmluZWQwID0gIWRlZmluZWQwKSB7XG4gICAgICAgICAgaiA9IGk7XG4gICAgICAgICAgb3V0cHV0LmFyZWFTdGFydCgpO1xuICAgICAgICAgIG91dHB1dC5saW5lU3RhcnQoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvdXRwdXQubGluZUVuZCgpO1xuICAgICAgICAgIG91dHB1dC5saW5lU3RhcnQoKTtcbiAgICAgICAgICBmb3IgKGsgPSBpIC0gMTsgayA+PSBqOyAtLWspIHtcbiAgICAgICAgICAgIG91dHB1dC5wb2ludCh4MHpba10sIHkweltrXSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIG91dHB1dC5saW5lRW5kKCk7XG4gICAgICAgICAgb3V0cHV0LmFyZWFFbmQoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGRlZmluZWQwKSB7XG4gICAgICAgIHgweltpXSA9ICt4MChkLCBpLCBkYXRhKSwgeTB6W2ldID0gK3kwKGQsIGksIGRhdGEpO1xuICAgICAgICBvdXRwdXQucG9pbnQoeDEgPyAreDEoZCwgaSwgZGF0YSkgOiB4MHpbaV0sIHkxID8gK3kxKGQsIGksIGRhdGEpIDogeTB6W2ldKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoYnVmZmVyKSByZXR1cm4gb3V0cHV0ID0gbnVsbCwgYnVmZmVyICsgXCJcIiB8fCBudWxsO1xuICB9XG5cbiAgZnVuY3Rpb24gYXJlYWxpbmUoKSB7XG4gICAgcmV0dXJuIGxpbmUoKS5kZWZpbmVkKGRlZmluZWQpLmN1cnZlKGN1cnZlKS5jb250ZXh0KGNvbnRleHQpO1xuICB9XG5cbiAgYXJlYS54ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHgwID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHgxID0gbnVsbCwgYXJlYSkgOiB4MDtcbiAgfTtcblxuICBhcmVhLngwID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHgwID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyZWEpIDogeDA7XG4gIH07XG5cbiAgYXJlYS54MSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4MSA9IF8gPT0gbnVsbCA/IG51bGwgOiB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJlYSkgOiB4MTtcbiAgfTtcblxuICBhcmVhLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeTAgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgeTEgPSBudWxsLCBhcmVhKSA6IHkwO1xuICB9O1xuXG4gIGFyZWEueTAgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeTAgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJlYSkgOiB5MDtcbiAgfTtcblxuICBhcmVhLnkxID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkxID0gXyA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmVhKSA6IHkxO1xuICB9O1xuXG4gIGFyZWEubGluZVgwID1cbiAgYXJlYS5saW5lWTAgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gYXJlYWxpbmUoKS54KHgwKS55KHkwKTtcbiAgfTtcblxuICBhcmVhLmxpbmVZMSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBhcmVhbGluZSgpLngoeDApLnkoeTEpO1xuICB9O1xuXG4gIGFyZWEubGluZVgxID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGFyZWFsaW5lKCkueCh4MSkueSh5MCk7XG4gIH07XG5cbiAgYXJlYS5kZWZpbmVkID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRlZmluZWQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCEhXyksIGFyZWEpIDogZGVmaW5lZDtcbiAgfTtcblxuICBhcmVhLmN1cnZlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGN1cnZlID0gXywgY29udGV4dCAhPSBudWxsICYmIChvdXRwdXQgPSBjdXJ2ZShjb250ZXh0KSksIGFyZWEpIDogY3VydmU7XG4gIH07XG5cbiAgYXJlYS5jb250ZXh0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKF8gPT0gbnVsbCA/IGNvbnRleHQgPSBvdXRwdXQgPSBudWxsIDogb3V0cHV0ID0gY3VydmUoY29udGV4dCA9IF8pLCBhcmVhKSA6IGNvbnRleHQ7XG4gIH07XG5cbiAgcmV0dXJuIGFyZWE7XG59XG4iLCJpbXBvcnQgY3VydmVSYWRpYWwsIHtjdXJ2ZVJhZGlhbExpbmVhcn0gZnJvbSBcIi4vY3VydmUvcmFkaWFsXCI7XG5pbXBvcnQgYXJlYSBmcm9tIFwiLi9hcmVhXCI7XG5pbXBvcnQge2xpbmVSYWRpYWx9IGZyb20gXCIuL2xpbmVSYWRpYWxcIlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGEgPSBhcmVhKCkuY3VydmUoY3VydmVSYWRpYWxMaW5lYXIpLFxuICAgICAgYyA9IGEuY3VydmUsXG4gICAgICB4MCA9IGEubGluZVgwLFxuICAgICAgeDEgPSBhLmxpbmVYMSxcbiAgICAgIHkwID0gYS5saW5lWTAsXG4gICAgICB5MSA9IGEubGluZVkxO1xuXG4gIGEuYW5nbGUgPSBhLngsIGRlbGV0ZSBhLng7XG4gIGEuc3RhcnRBbmdsZSA9IGEueDAsIGRlbGV0ZSBhLngwO1xuICBhLmVuZEFuZ2xlID0gYS54MSwgZGVsZXRlIGEueDE7XG4gIGEucmFkaXVzID0gYS55LCBkZWxldGUgYS55O1xuICBhLmlubmVyUmFkaXVzID0gYS55MCwgZGVsZXRlIGEueTA7XG4gIGEub3V0ZXJSYWRpdXMgPSBhLnkxLCBkZWxldGUgYS55MTtcbiAgYS5saW5lU3RhcnRBbmdsZSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gbGluZVJhZGlhbCh4MCgpKTsgfSwgZGVsZXRlIGEubGluZVgwO1xuICBhLmxpbmVFbmRBbmdsZSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gbGluZVJhZGlhbCh4MSgpKTsgfSwgZGVsZXRlIGEubGluZVgxO1xuICBhLmxpbmVJbm5lclJhZGl1cyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gbGluZVJhZGlhbCh5MCgpKTsgfSwgZGVsZXRlIGEubGluZVkwO1xuICBhLmxpbmVPdXRlclJhZGl1cyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gbGluZVJhZGlhbCh5MSgpKTsgfSwgZGVsZXRlIGEubGluZVkxO1xuXG4gIGEuY3VydmUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBjKGN1cnZlUmFkaWFsKF8pKSA6IGMoKS5fY3VydmU7XG4gIH07XG5cbiAgcmV0dXJuIGE7XG59XG4iLCJleHBvcnQgdmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24gY29uc3RhbnQoKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gcG9pbnQodGhhdCwgeCwgeSkge1xuICB0aGF0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oXG4gICAgKDIgKiB0aGF0Ll94MCArIHRoYXQuX3gxKSAvIDMsXG4gICAgKDIgKiB0aGF0Ll95MCArIHRoYXQuX3kxKSAvIDMsXG4gICAgKHRoYXQuX3gwICsgMiAqIHRoYXQuX3gxKSAvIDMsXG4gICAgKHRoYXQuX3kwICsgMiAqIHRoYXQuX3kxKSAvIDMsXG4gICAgKHRoYXQuX3gwICsgNCAqIHRoYXQuX3gxICsgeCkgLyA2LFxuICAgICh0aGF0Ll95MCArIDQgKiB0aGF0Ll95MSArIHkpIC8gNlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQmFzaXMoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuQmFzaXMucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDM6IHBvaW50KHRoaXMsIHRoaXMuX3gxLCB0aGlzLl95MSk7IC8vIHByb2NlZWRcbiAgICAgIGNhc2UgMjogdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDEsIHRoaXMuX3kxKTsgYnJlYWs7XG4gICAgfVxuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAxKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHgsIHkpOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl9jb250ZXh0LmxpbmVUbygoNSAqIHRoaXMuX3gwICsgdGhpcy5feDEpIC8gNiwgKDUgKiB0aGlzLl95MCArIHRoaXMuX3kxKSAvIDYpOyAvLyBwcm9jZWVkXG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB4LCB5KTsgYnJlYWs7XG4gICAgfVxuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBCYXNpcyhjb250ZXh0KTtcbn1cbiIsImltcG9ydCBub29wIGZyb20gXCIuLi9ub29wXCI7XG5pbXBvcnQge3BvaW50fSBmcm9tIFwiLi9iYXNpc1wiO1xuXG5mdW5jdGlvbiBCYXNpc0Nsb3NlZChjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5CYXNpc0Nsb3NlZC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogbm9vcCxcbiAgYXJlYUVuZDogbm9vcCxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPSB0aGlzLl94MyA9IHRoaXMuX3g0ID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSB0aGlzLl95MyA9IHRoaXMuX3k0ID0gTmFOO1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAxOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAyOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKCh0aGlzLl94MiArIDIgKiB0aGlzLl94MykgLyAzLCAodGhpcy5feTIgKyAyICogdGhpcy5feTMpIC8gMyk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKCh0aGlzLl94MyArIDIgKiB0aGlzLl94MikgLyAzLCAodGhpcy5feTMgKyAyICogdGhpcy5feTIpIC8gMyk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAzOiB7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDIsIHRoaXMuX3kyKTtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94MywgdGhpcy5feTMpO1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3g0LCB0aGlzLl95NCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5feDIgPSB4LCB0aGlzLl95MiA9IHk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IHRoaXMuX3gzID0geCwgdGhpcy5feTMgPSB5OyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl94NCA9IHgsIHRoaXMuX3k0ID0geTsgdGhpcy5fY29udGV4dC5tb3ZlVG8oKHRoaXMuX3gwICsgNCAqIHRoaXMuX3gxICsgeCkgLyA2LCAodGhpcy5feTAgKyA0ICogdGhpcy5feTEgKyB5KSAvIDYpOyBicmVhaztcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29udGV4dCkge1xuICByZXR1cm4gbmV3IEJhc2lzQ2xvc2VkKGNvbnRleHQpO1xufVxuIiwiaW1wb3J0IHtwb2ludH0gZnJvbSBcIi4vYmFzaXNcIjtcblxuZnVuY3Rpb24gQmFzaXNPcGVuKGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cbkJhc2lzT3Blbi5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9IE5hTjtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAzKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHZhciB4MCA9ICh0aGlzLl94MCArIDQgKiB0aGlzLl94MSArIHgpIC8gNiwgeTAgPSAodGhpcy5feTAgKyA0ICogdGhpcy5feTEgKyB5KSAvIDY7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4MCwgeTApIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeDAsIHkwKTsgYnJlYWs7XG4gICAgICBjYXNlIDM6IHRoaXMuX3BvaW50ID0gNDsgLy8gcHJvY2VlZFxuICAgICAgZGVmYXVsdDogcG9pbnQodGhpcywgeCwgeSk7IGJyZWFrO1xuICAgIH1cbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHg7XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB5O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgQmFzaXNPcGVuKGNvbnRleHQpO1xufVxuIiwiaW1wb3J0IHtCYXNpc30gZnJvbSBcIi4vYmFzaXNcIjtcblxuZnVuY3Rpb24gQnVuZGxlKGNvbnRleHQsIGJldGEpIHtcbiAgdGhpcy5fYmFzaXMgPSBuZXcgQmFzaXMoY29udGV4dCk7XG4gIHRoaXMuX2JldGEgPSBiZXRhO1xufVxuXG5CdW5kbGUucHJvdG90eXBlID0ge1xuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3ggPSBbXTtcbiAgICB0aGlzLl95ID0gW107XG4gICAgdGhpcy5fYmFzaXMubGluZVN0YXJ0KCk7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB4ID0gdGhpcy5feCxcbiAgICAgICAgeSA9IHRoaXMuX3ksXG4gICAgICAgIGogPSB4Lmxlbmd0aCAtIDE7XG5cbiAgICBpZiAoaiA+IDApIHtcbiAgICAgIHZhciB4MCA9IHhbMF0sXG4gICAgICAgICAgeTAgPSB5WzBdLFxuICAgICAgICAgIGR4ID0geFtqXSAtIHgwLFxuICAgICAgICAgIGR5ID0geVtqXSAtIHkwLFxuICAgICAgICAgIGkgPSAtMSxcbiAgICAgICAgICB0O1xuXG4gICAgICB3aGlsZSAoKytpIDw9IGopIHtcbiAgICAgICAgdCA9IGkgLyBqO1xuICAgICAgICB0aGlzLl9iYXNpcy5wb2ludChcbiAgICAgICAgICB0aGlzLl9iZXRhICogeFtpXSArICgxIC0gdGhpcy5fYmV0YSkgKiAoeDAgKyB0ICogZHgpLFxuICAgICAgICAgIHRoaXMuX2JldGEgKiB5W2ldICsgKDEgLSB0aGlzLl9iZXRhKSAqICh5MCArIHQgKiBkeSlcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLl94ID0gdGhpcy5feSA9IG51bGw7XG4gICAgdGhpcy5fYmFzaXMubGluZUVuZCgpO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHRoaXMuX3gucHVzaCgreCk7XG4gICAgdGhpcy5feS5wdXNoKCt5KTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbShiZXRhKSB7XG5cbiAgZnVuY3Rpb24gYnVuZGxlKGNvbnRleHQpIHtcbiAgICByZXR1cm4gYmV0YSA9PT0gMSA/IG5ldyBCYXNpcyhjb250ZXh0KSA6IG5ldyBCdW5kbGUoY29udGV4dCwgYmV0YSk7XG4gIH1cblxuICBidW5kbGUuYmV0YSA9IGZ1bmN0aW9uKGJldGEpIHtcbiAgICByZXR1cm4gY3VzdG9tKCtiZXRhKTtcbiAgfTtcblxuICByZXR1cm4gYnVuZGxlO1xufSkoMC44NSk7XG4iLCJleHBvcnQgZnVuY3Rpb24gcG9pbnQodGhhdCwgeCwgeSkge1xuICB0aGF0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oXG4gICAgdGhhdC5feDEgKyB0aGF0Ll9rICogKHRoYXQuX3gyIC0gdGhhdC5feDApLFxuICAgIHRoYXQuX3kxICsgdGhhdC5fayAqICh0aGF0Ll95MiAtIHRoYXQuX3kwKSxcbiAgICB0aGF0Ll94MiArIHRoYXQuX2sgKiAodGhhdC5feDEgLSB4KSxcbiAgICB0aGF0Ll95MiArIHRoYXQuX2sgKiAodGhhdC5feTEgLSB5KSxcbiAgICB0aGF0Ll94MixcbiAgICB0aGF0Ll95MlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQ2FyZGluYWwoY29udGV4dCwgdGVuc2lvbikge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5fayA9ICgxIC0gdGVuc2lvbikgLyA2O1xufVxuXG5DYXJkaW5hbC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDI6IHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgICAgY2FzZSAzOiBwb2ludCh0aGlzLCB0aGlzLl94MSwgdGhpcy5feTEpOyBicmVhaztcbiAgICB9XG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgdGhpcy5fcG9pbnQgPT09IDEpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeCwgeSk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IHRoaXMuX3gxID0geCwgdGhpcy5feTEgPSB5OyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyAvLyBwcm9jZWVkXG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB4LCB5KTsgYnJlYWs7XG4gICAgfVxuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20odGVuc2lvbikge1xuXG4gIGZ1bmN0aW9uIGNhcmRpbmFsKGNvbnRleHQpIHtcbiAgICByZXR1cm4gbmV3IENhcmRpbmFsKGNvbnRleHQsIHRlbnNpb24pO1xuICB9XG5cbiAgY2FyZGluYWwudGVuc2lvbiA9IGZ1bmN0aW9uKHRlbnNpb24pIHtcbiAgICByZXR1cm4gY3VzdG9tKCt0ZW5zaW9uKTtcbiAgfTtcblxuICByZXR1cm4gY2FyZGluYWw7XG59KSgwKTtcbiIsImltcG9ydCBub29wIGZyb20gXCIuLi9ub29wXCI7XG5pbXBvcnQge3BvaW50fSBmcm9tIFwiLi9jYXJkaW5hbFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gQ2FyZGluYWxDbG9zZWQoY29udGV4dCwgdGVuc2lvbikge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5fayA9ICgxIC0gdGVuc2lvbikgLyA2O1xufVxuXG5DYXJkaW5hbENsb3NlZC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogbm9vcCxcbiAgYXJlYUVuZDogbm9vcCxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPSB0aGlzLl94MyA9IHRoaXMuX3g0ID0gdGhpcy5feDUgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IHRoaXMuX3kzID0gdGhpcy5feTQgPSB0aGlzLl95NSA9IE5hTjtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMToge1xuICAgICAgICB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94MywgdGhpcy5feTMpO1xuICAgICAgICB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMjoge1xuICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MywgdGhpcy5feTMpO1xuICAgICAgICB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMzoge1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3gzLCB0aGlzLl95Myk7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDQsIHRoaXMuX3k0KTtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94NSwgdGhpcy5feTUpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX3gzID0geCwgdGhpcy5feTMgPSB5OyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94NCA9IHgsIHRoaXMuX3k0ID0geSk7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHRoaXMuX3g1ID0geCwgdGhpcy5feTUgPSB5OyBicmVhaztcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbSh0ZW5zaW9uKSB7XG5cbiAgZnVuY3Rpb24gY2FyZGluYWwoY29udGV4dCkge1xuICAgIHJldHVybiBuZXcgQ2FyZGluYWxDbG9zZWQoY29udGV4dCwgdGVuc2lvbik7XG4gIH1cblxuICBjYXJkaW5hbC50ZW5zaW9uID0gZnVuY3Rpb24odGVuc2lvbikge1xuICAgIHJldHVybiBjdXN0b20oK3RlbnNpb24pO1xuICB9O1xuXG4gIHJldHVybiBjYXJkaW5hbDtcbn0pKDApO1xuIiwiaW1wb3J0IHtwb2ludH0gZnJvbSBcIi4vY2FyZGluYWxcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIENhcmRpbmFsT3Blbihjb250ZXh0LCB0ZW5zaW9uKSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLl9rID0gKDEgLSB0ZW5zaW9uKSAvIDY7XG59XG5cbkNhcmRpbmFsT3Blbi5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMykpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDIsIHRoaXMuX3kyKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgICAgY2FzZSAzOiB0aGlzLl9wb2ludCA9IDQ7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbSh0ZW5zaW9uKSB7XG5cbiAgZnVuY3Rpb24gY2FyZGluYWwoY29udGV4dCkge1xuICAgIHJldHVybiBuZXcgQ2FyZGluYWxPcGVuKGNvbnRleHQsIHRlbnNpb24pO1xuICB9XG5cbiAgY2FyZGluYWwudGVuc2lvbiA9IGZ1bmN0aW9uKHRlbnNpb24pIHtcbiAgICByZXR1cm4gY3VzdG9tKCt0ZW5zaW9uKTtcbiAgfTtcblxuICByZXR1cm4gY2FyZGluYWw7XG59KSgwKTtcbiIsImltcG9ydCB7ZXBzaWxvbn0gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCB7Q2FyZGluYWx9IGZyb20gXCIuL2NhcmRpbmFsXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBwb2ludCh0aGF0LCB4LCB5KSB7XG4gIHZhciB4MSA9IHRoYXQuX3gxLFxuICAgICAgeTEgPSB0aGF0Ll95MSxcbiAgICAgIHgyID0gdGhhdC5feDIsXG4gICAgICB5MiA9IHRoYXQuX3kyO1xuXG4gIGlmICh0aGF0Ll9sMDFfYSA+IGVwc2lsb24pIHtcbiAgICB2YXIgYSA9IDIgKiB0aGF0Ll9sMDFfMmEgKyAzICogdGhhdC5fbDAxX2EgKiB0aGF0Ll9sMTJfYSArIHRoYXQuX2wxMl8yYSxcbiAgICAgICAgbiA9IDMgKiB0aGF0Ll9sMDFfYSAqICh0aGF0Ll9sMDFfYSArIHRoYXQuX2wxMl9hKTtcbiAgICB4MSA9ICh4MSAqIGEgLSB0aGF0Ll94MCAqIHRoYXQuX2wxMl8yYSArIHRoYXQuX3gyICogdGhhdC5fbDAxXzJhKSAvIG47XG4gICAgeTEgPSAoeTEgKiBhIC0gdGhhdC5feTAgKiB0aGF0Ll9sMTJfMmEgKyB0aGF0Ll95MiAqIHRoYXQuX2wwMV8yYSkgLyBuO1xuICB9XG5cbiAgaWYgKHRoYXQuX2wyM19hID4gZXBzaWxvbikge1xuICAgIHZhciBiID0gMiAqIHRoYXQuX2wyM18yYSArIDMgKiB0aGF0Ll9sMjNfYSAqIHRoYXQuX2wxMl9hICsgdGhhdC5fbDEyXzJhLFxuICAgICAgICBtID0gMyAqIHRoYXQuX2wyM19hICogKHRoYXQuX2wyM19hICsgdGhhdC5fbDEyX2EpO1xuICAgIHgyID0gKHgyICogYiArIHRoYXQuX3gxICogdGhhdC5fbDIzXzJhIC0geCAqIHRoYXQuX2wxMl8yYSkgLyBtO1xuICAgIHkyID0gKHkyICogYiArIHRoYXQuX3kxICogdGhhdC5fbDIzXzJhIC0geSAqIHRoYXQuX2wxMl8yYSkgLyBtO1xuICB9XG5cbiAgdGhhdC5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHgxLCB5MSwgeDIsIHkyLCB0aGF0Ll94MiwgdGhhdC5feTIpO1xufVxuXG5mdW5jdGlvbiBDYXRtdWxsUm9tKGNvbnRleHQsIGFscGhhKSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLl9hbHBoYSA9IGFscGhhO1xufVxuXG5DYXRtdWxsUm9tLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IE5hTjtcbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hID0gdGhpcy5fbDIzX2EgPVxuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSA9IHRoaXMuX2wyM18yYSA9XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDI6IHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgICAgY2FzZSAzOiB0aGlzLnBvaW50KHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgIH1cbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMSkpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuXG4gICAgaWYgKHRoaXMuX3BvaW50KSB7XG4gICAgICB2YXIgeDIzID0gdGhpcy5feDIgLSB4LFxuICAgICAgICAgIHkyMyA9IHRoaXMuX3kyIC0geTtcbiAgICAgIHRoaXMuX2wyM19hID0gTWF0aC5zcXJ0KHRoaXMuX2wyM18yYSA9IE1hdGgucG93KHgyMyAqIHgyMyArIHkyMyAqIHkyMywgdGhpcy5fYWxwaGEpKTtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeCwgeSk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG5cbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hLCB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hO1xuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSwgdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhO1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20oYWxwaGEpIHtcblxuICBmdW5jdGlvbiBjYXRtdWxsUm9tKGNvbnRleHQpIHtcbiAgICByZXR1cm4gYWxwaGEgPyBuZXcgQ2F0bXVsbFJvbShjb250ZXh0LCBhbHBoYSkgOiBuZXcgQ2FyZGluYWwoY29udGV4dCwgMCk7XG4gIH1cblxuICBjYXRtdWxsUm9tLmFscGhhID0gZnVuY3Rpb24oYWxwaGEpIHtcbiAgICByZXR1cm4gY3VzdG9tKCthbHBoYSk7XG4gIH07XG5cbiAgcmV0dXJuIGNhdG11bGxSb207XG59KSgwLjUpO1xuIiwiaW1wb3J0IHtDYXJkaW5hbENsb3NlZH0gZnJvbSBcIi4vY2FyZGluYWxDbG9zZWRcIjtcbmltcG9ydCBub29wIGZyb20gXCIuLi9ub29wXCI7XG5pbXBvcnQge3BvaW50fSBmcm9tIFwiLi9jYXRtdWxsUm9tXCI7XG5cbmZ1bmN0aW9uIENhdG11bGxSb21DbG9zZWQoY29udGV4dCwgYWxwaGEpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG4gIHRoaXMuX2FscGhhID0gYWxwaGE7XG59XG5cbkNhdG11bGxSb21DbG9zZWQucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IG5vb3AsXG4gIGFyZWFFbmQ6IG5vb3AsXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID0gdGhpcy5feDMgPSB0aGlzLl94NCA9IHRoaXMuX3g1ID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSB0aGlzLl95MyA9IHRoaXMuX3k0ID0gdGhpcy5feTUgPSBOYU47XG4gICAgdGhpcy5fbDAxX2EgPSB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hID1cbiAgICB0aGlzLl9sMDFfMmEgPSB0aGlzLl9sMTJfMmEgPSB0aGlzLl9sMjNfMmEgPVxuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAxOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gzLCB0aGlzLl95Myk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAyOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gzLCB0aGlzLl95Myk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAzOiB7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDMsIHRoaXMuX3kzKTtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94NCwgdGhpcy5feTQpO1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3g1LCB0aGlzLl95NSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcblxuICAgIGlmICh0aGlzLl9wb2ludCkge1xuICAgICAgdmFyIHgyMyA9IHRoaXMuX3gyIC0geCxcbiAgICAgICAgICB5MjMgPSB0aGlzLl95MiAtIHk7XG4gICAgICB0aGlzLl9sMjNfYSA9IE1hdGguc3FydCh0aGlzLl9sMjNfMmEgPSBNYXRoLnBvdyh4MjMgKiB4MjMgKyB5MjMgKiB5MjMsIHRoaXMuX2FscGhhKSk7XG4gICAgfVxuXG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX3gzID0geCwgdGhpcy5feTMgPSB5OyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94NCA9IHgsIHRoaXMuX3k0ID0geSk7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHRoaXMuX3g1ID0geCwgdGhpcy5feTUgPSB5OyBicmVhaztcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG5cbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hLCB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hO1xuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSwgdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhO1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20oYWxwaGEpIHtcblxuICBmdW5jdGlvbiBjYXRtdWxsUm9tKGNvbnRleHQpIHtcbiAgICByZXR1cm4gYWxwaGEgPyBuZXcgQ2F0bXVsbFJvbUNsb3NlZChjb250ZXh0LCBhbHBoYSkgOiBuZXcgQ2FyZGluYWxDbG9zZWQoY29udGV4dCwgMCk7XG4gIH1cblxuICBjYXRtdWxsUm9tLmFscGhhID0gZnVuY3Rpb24oYWxwaGEpIHtcbiAgICByZXR1cm4gY3VzdG9tKCthbHBoYSk7XG4gIH07XG5cbiAgcmV0dXJuIGNhdG11bGxSb207XG59KSgwLjUpO1xuIiwiaW1wb3J0IHtDYXJkaW5hbE9wZW59IGZyb20gXCIuL2NhcmRpbmFsT3BlblwiO1xuaW1wb3J0IHtwb2ludH0gZnJvbSBcIi4vY2F0bXVsbFJvbVwiO1xuXG5mdW5jdGlvbiBDYXRtdWxsUm9tT3Blbihjb250ZXh0LCBhbHBoYSkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5fYWxwaGEgPSBhbHBoYTtcbn1cblxuQ2F0bXVsbFJvbU9wZW4ucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl94MiA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3kyID0gTmFOO1xuICAgIHRoaXMuX2wwMV9hID0gdGhpcy5fbDEyX2EgPSB0aGlzLl9sMjNfYSA9XG4gICAgdGhpcy5fbDAxXzJhID0gdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhID1cbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAzKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG5cbiAgICBpZiAodGhpcy5fcG9pbnQpIHtcbiAgICAgIHZhciB4MjMgPSB0aGlzLl94MiAtIHgsXG4gICAgICAgICAgeTIzID0gdGhpcy5feTIgLSB5O1xuICAgICAgdGhpcy5fbDIzX2EgPSBNYXRoLnNxcnQodGhpcy5fbDIzXzJhID0gTWF0aC5wb3coeDIzICogeDIzICsgeTIzICogeTIzLCB0aGlzLl9hbHBoYSkpO1xuICAgIH1cblxuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDIsIHRoaXMuX3kyKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgICAgY2FzZSAzOiB0aGlzLl9wb2ludCA9IDQ7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG5cbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hLCB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hO1xuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSwgdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhO1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20oYWxwaGEpIHtcblxuICBmdW5jdGlvbiBjYXRtdWxsUm9tKGNvbnRleHQpIHtcbiAgICByZXR1cm4gYWxwaGEgPyBuZXcgQ2F0bXVsbFJvbU9wZW4oY29udGV4dCwgYWxwaGEpIDogbmV3IENhcmRpbmFsT3Blbihjb250ZXh0LCAwKTtcbiAgfVxuXG4gIGNhdG11bGxSb20uYWxwaGEgPSBmdW5jdGlvbihhbHBoYSkge1xuICAgIHJldHVybiBjdXN0b20oK2FscGhhKTtcbiAgfTtcblxuICByZXR1cm4gY2F0bXVsbFJvbTtcbn0pKDAuNSk7XG4iLCJmdW5jdGlvbiBMaW5lYXIoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuTGluZWFyLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAxKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHgsIHkpOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyAvLyBwcm9jZWVkXG4gICAgICBkZWZhdWx0OiB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KTsgYnJlYWs7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgTGluZWFyKGNvbnRleHQpO1xufVxuIiwiaW1wb3J0IG5vb3AgZnJvbSBcIi4uL25vb3BcIjtcblxuZnVuY3Rpb24gTGluZWFyQ2xvc2VkKGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cbkxpbmVhckNsb3NlZC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogbm9vcCxcbiAgYXJlYUVuZDogbm9vcCxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9wb2ludCkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBpZiAodGhpcy5fcG9pbnQpIHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpO1xuICAgIGVsc2UgdGhpcy5fcG9pbnQgPSAxLCB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LCB5KTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29udGV4dCkge1xuICByZXR1cm4gbmV3IExpbmVhckNsb3NlZChjb250ZXh0KTtcbn1cbiIsImZ1bmN0aW9uIHNpZ24oeCkge1xuICByZXR1cm4geCA8IDAgPyAtMSA6IDE7XG59XG5cbi8vIENhbGN1bGF0ZSB0aGUgc2xvcGVzIG9mIHRoZSB0YW5nZW50cyAoSGVybWl0ZS10eXBlIGludGVycG9sYXRpb24pIGJhc2VkIG9uXG4vLyB0aGUgZm9sbG93aW5nIHBhcGVyOiBTdGVmZmVuLCBNLiAxOTkwLiBBIFNpbXBsZSBNZXRob2QgZm9yIE1vbm90b25pY1xuLy8gSW50ZXJwb2xhdGlvbiBpbiBPbmUgRGltZW5zaW9uLiBBc3Ryb25vbXkgYW5kIEFzdHJvcGh5c2ljcywgVm9sLiAyMzksIE5PLlxuLy8gTk9WKElJKSwgUC4gNDQzLCAxOTkwLlxuZnVuY3Rpb24gc2xvcGUzKHRoYXQsIHgyLCB5Mikge1xuICB2YXIgaDAgPSB0aGF0Ll94MSAtIHRoYXQuX3gwLFxuICAgICAgaDEgPSB4MiAtIHRoYXQuX3gxLFxuICAgICAgczAgPSAodGhhdC5feTEgLSB0aGF0Ll95MCkgLyAoaDAgfHwgaDEgPCAwICYmIC0wKSxcbiAgICAgIHMxID0gKHkyIC0gdGhhdC5feTEpIC8gKGgxIHx8IGgwIDwgMCAmJiAtMCksXG4gICAgICBwID0gKHMwICogaDEgKyBzMSAqIGgwKSAvIChoMCArIGgxKTtcbiAgcmV0dXJuIChzaWduKHMwKSArIHNpZ24oczEpKSAqIE1hdGgubWluKE1hdGguYWJzKHMwKSwgTWF0aC5hYnMoczEpLCAwLjUgKiBNYXRoLmFicyhwKSkgfHwgMDtcbn1cblxuLy8gQ2FsY3VsYXRlIGEgb25lLXNpZGVkIHNsb3BlLlxuZnVuY3Rpb24gc2xvcGUyKHRoYXQsIHQpIHtcbiAgdmFyIGggPSB0aGF0Ll94MSAtIHRoYXQuX3gwO1xuICByZXR1cm4gaCA/ICgzICogKHRoYXQuX3kxIC0gdGhhdC5feTApIC8gaCAtIHQpIC8gMiA6IHQ7XG59XG5cbi8vIEFjY29yZGluZyB0byBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9DdWJpY19IZXJtaXRlX3NwbGluZSNSZXByZXNlbnRhdGlvbnNcbi8vIFwieW91IGNhbiBleHByZXNzIGN1YmljIEhlcm1pdGUgaW50ZXJwb2xhdGlvbiBpbiB0ZXJtcyBvZiBjdWJpYyBCw6l6aWVyIGN1cnZlc1xuLy8gd2l0aCByZXNwZWN0IHRvIHRoZSBmb3VyIHZhbHVlcyBwMCwgcDAgKyBtMCAvIDMsIHAxIC0gbTEgLyAzLCBwMVwiLlxuZnVuY3Rpb24gcG9pbnQodGhhdCwgdDAsIHQxKSB7XG4gIHZhciB4MCA9IHRoYXQuX3gwLFxuICAgICAgeTAgPSB0aGF0Ll95MCxcbiAgICAgIHgxID0gdGhhdC5feDEsXG4gICAgICB5MSA9IHRoYXQuX3kxLFxuICAgICAgZHggPSAoeDEgLSB4MCkgLyAzO1xuICB0aGF0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oeDAgKyBkeCwgeTAgKyBkeCAqIHQwLCB4MSAtIGR4LCB5MSAtIGR4ICogdDEsIHgxLCB5MSk7XG59XG5cbmZ1bmN0aW9uIE1vbm90b25lWChjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5Nb25vdG9uZVgucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPVxuICAgIHRoaXMuX3QwID0gTmFOO1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAyOiB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MSwgdGhpcy5feTEpOyBicmVhaztcbiAgICAgIGNhc2UgMzogcG9pbnQodGhpcywgdGhpcy5fdDAsIHNsb3BlMih0aGlzLCB0aGlzLl90MCkpOyBicmVhaztcbiAgICB9XG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgdGhpcy5fcG9pbnQgPT09IDEpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB2YXIgdDEgPSBOYU47XG5cbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBpZiAoeCA9PT0gdGhpcy5feDEgJiYgeSA9PT0gdGhpcy5feTEpIHJldHVybjsgLy8gSWdub3JlIGNvaW5jaWRlbnQgcG9pbnRzLlxuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSkgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LCB5KTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgYnJlYWs7XG4gICAgICBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgcG9pbnQodGhpcywgc2xvcGUyKHRoaXMsIHQxID0gc2xvcGUzKHRoaXMsIHgsIHkpKSwgdDEpOyBicmVhaztcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHRoaXMuX3QwLCB0MSA9IHNsb3BlMyh0aGlzLCB4LCB5KSk7IGJyZWFrO1xuICAgIH1cblxuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHk7XG4gICAgdGhpcy5fdDAgPSB0MTtcbiAgfVxufVxuXG5mdW5jdGlvbiBNb25vdG9uZVkoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gbmV3IFJlZmxlY3RDb250ZXh0KGNvbnRleHQpO1xufVxuXG4oTW9ub3RvbmVZLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoTW9ub3RvbmVYLnByb3RvdHlwZSkpLnBvaW50ID0gZnVuY3Rpb24oeCwgeSkge1xuICBNb25vdG9uZVgucHJvdG90eXBlLnBvaW50LmNhbGwodGhpcywgeSwgeCk7XG59O1xuXG5mdW5jdGlvbiBSZWZsZWN0Q29udGV4dChjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5SZWZsZWN0Q29udGV4dC5wcm90b3R5cGUgPSB7XG4gIG1vdmVUbzogZnVuY3Rpb24oeCwgeSkgeyB0aGlzLl9jb250ZXh0Lm1vdmVUbyh5LCB4KTsgfSxcbiAgY2xvc2VQYXRoOiBmdW5jdGlvbigpIHsgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTsgfSxcbiAgbGluZVRvOiBmdW5jdGlvbih4LCB5KSB7IHRoaXMuX2NvbnRleHQubGluZVRvKHksIHgpOyB9LFxuICBiZXppZXJDdXJ2ZVRvOiBmdW5jdGlvbih4MSwgeTEsIHgyLCB5MiwgeCwgeSkgeyB0aGlzLl9jb250ZXh0LmJlemllckN1cnZlVG8oeTEsIHgxLCB5MiwgeDIsIHksIHgpOyB9XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gbW9ub3RvbmVYKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBNb25vdG9uZVgoY29udGV4dCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb25vdG9uZVkoY29udGV4dCkge1xuICByZXR1cm4gbmV3IE1vbm90b25lWShjb250ZXh0KTtcbn1cbiIsImZ1bmN0aW9uIE5hdHVyYWwoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuTmF0dXJhbC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feCA9IFtdO1xuICAgIHRoaXMuX3kgPSBbXTtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdmFyIHggPSB0aGlzLl94LFxuICAgICAgICB5ID0gdGhpcy5feSxcbiAgICAgICAgbiA9IHgubGVuZ3RoO1xuXG4gICAgaWYgKG4pIHtcbiAgICAgIHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4WzBdLCB5WzBdKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHhbMF0sIHlbMF0pO1xuICAgICAgaWYgKG4gPT09IDIpIHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8oeFsxXSwgeVsxXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcHggPSBjb250cm9sUG9pbnRzKHgpLFxuICAgICAgICAgICAgcHkgPSBjb250cm9sUG9pbnRzKHkpO1xuICAgICAgICBmb3IgKHZhciBpMCA9IDAsIGkxID0gMTsgaTEgPCBuOyArK2kwLCArK2kxKSB7XG4gICAgICAgICAgdGhpcy5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHB4WzBdW2kwXSwgcHlbMF1baTBdLCBweFsxXVtpMF0sIHB5WzFdW2kwXSwgeFtpMV0sIHlbaTFdKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIG4gPT09IDEpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgICB0aGlzLl94ID0gdGhpcy5feSA9IG51bGw7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgdGhpcy5feC5wdXNoKCt4KTtcbiAgICB0aGlzLl95LnB1c2goK3kpO1xuICB9XG59O1xuXG4vLyBTZWUgaHR0cHM6Ly93d3cucGFydGljbGVpbmNlbGwuY29tLzIwMTIvYmV6aWVyLXNwbGluZXMvIGZvciBkZXJpdmF0aW9uLlxuZnVuY3Rpb24gY29udHJvbFBvaW50cyh4KSB7XG4gIHZhciBpLFxuICAgICAgbiA9IHgubGVuZ3RoIC0gMSxcbiAgICAgIG0sXG4gICAgICBhID0gbmV3IEFycmF5KG4pLFxuICAgICAgYiA9IG5ldyBBcnJheShuKSxcbiAgICAgIHIgPSBuZXcgQXJyYXkobik7XG4gIGFbMF0gPSAwLCBiWzBdID0gMiwgclswXSA9IHhbMF0gKyAyICogeFsxXTtcbiAgZm9yIChpID0gMTsgaSA8IG4gLSAxOyArK2kpIGFbaV0gPSAxLCBiW2ldID0gNCwgcltpXSA9IDQgKiB4W2ldICsgMiAqIHhbaSArIDFdO1xuICBhW24gLSAxXSA9IDIsIGJbbiAtIDFdID0gNywgcltuIC0gMV0gPSA4ICogeFtuIC0gMV0gKyB4W25dO1xuICBmb3IgKGkgPSAxOyBpIDwgbjsgKytpKSBtID0gYVtpXSAvIGJbaSAtIDFdLCBiW2ldIC09IG0sIHJbaV0gLT0gbSAqIHJbaSAtIDFdO1xuICBhW24gLSAxXSA9IHJbbiAtIDFdIC8gYltuIC0gMV07XG4gIGZvciAoaSA9IG4gLSAyOyBpID49IDA7IC0taSkgYVtpXSA9IChyW2ldIC0gYVtpICsgMV0pIC8gYltpXTtcbiAgYltuIC0gMV0gPSAoeFtuXSArIGFbbiAtIDFdKSAvIDI7XG4gIGZvciAoaSA9IDA7IGkgPCBuIC0gMTsgKytpKSBiW2ldID0gMiAqIHhbaSArIDFdIC0gYVtpICsgMV07XG4gIHJldHVybiBbYSwgYl07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBOYXR1cmFsKGNvbnRleHQpO1xufVxuIiwiaW1wb3J0IGN1cnZlTGluZWFyIGZyb20gXCIuL2xpbmVhclwiO1xuXG5leHBvcnQgdmFyIGN1cnZlUmFkaWFsTGluZWFyID0gY3VydmVSYWRpYWwoY3VydmVMaW5lYXIpO1xuXG5mdW5jdGlvbiBSYWRpYWwoY3VydmUpIHtcbiAgdGhpcy5fY3VydmUgPSBjdXJ2ZTtcbn1cblxuUmFkaWFsLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9jdXJ2ZS5hcmVhU3RhcnQoKTtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fY3VydmUuYXJlYUVuZCgpO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2N1cnZlLmxpbmVTdGFydCgpO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9jdXJ2ZS5saW5lRW5kKCk7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbihhLCByKSB7XG4gICAgdGhpcy5fY3VydmUucG9pbnQociAqIE1hdGguc2luKGEpLCByICogLU1hdGguY29zKGEpKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3VydmVSYWRpYWwoY3VydmUpIHtcblxuICBmdW5jdGlvbiByYWRpYWwoY29udGV4dCkge1xuICAgIHJldHVybiBuZXcgUmFkaWFsKGN1cnZlKGNvbnRleHQpKTtcbiAgfVxuXG4gIHJhZGlhbC5fY3VydmUgPSBjdXJ2ZTtcblxuICByZXR1cm4gcmFkaWFsO1xufVxuIiwiZnVuY3Rpb24gU3RlcChjb250ZXh0LCB0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLl90ID0gdDtcbn1cblxuU3RlcC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feCA9IHRoaXMuX3kgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAoMCA8IHRoaXMuX3QgJiYgdGhpcy5fdCA8IDEgJiYgdGhpcy5fcG9pbnQgPT09IDIpIHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gsIHRoaXMuX3kpO1xuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAxKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICBpZiAodGhpcy5fbGluZSA+PSAwKSB0aGlzLl90ID0gMSAtIHRoaXMuX3QsIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeCwgeSk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgaWYgKHRoaXMuX3QgPD0gMCkge1xuICAgICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gsIHkpO1xuICAgICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciB4MSA9IHRoaXMuX3ggKiAoMSAtIHRoaXMuX3QpICsgeCAqIHRoaXMuX3Q7XG4gICAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8oeDEsIHRoaXMuX3kpO1xuICAgICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKHgxLCB5KTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5feCA9IHgsIHRoaXMuX3kgPSB5O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgU3RlcChjb250ZXh0LCAwLjUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RlcEJlZm9yZShjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgU3RlcChjb250ZXh0LCAwKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0ZXBBZnRlcihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgU3RlcChjb250ZXh0LCAxKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGIgPCBhID8gLTEgOiBiID4gYSA/IDEgOiBiID49IGEgPyAwIDogTmFOO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZCkge1xuICByZXR1cm4gZDtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBhcmN9IGZyb20gXCIuL2FyY1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGFyZWF9IGZyb20gXCIuL2FyZWFcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBsaW5lfSBmcm9tIFwiLi9saW5lXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGllfSBmcm9tIFwiLi9waWVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBhcmVhUmFkaWFsLCBkZWZhdWx0IGFzIHJhZGlhbEFyZWF9IGZyb20gXCIuL2FyZWFSYWRpYWxcIjsgLy8gTm90ZTogcmFkaWFsQXJlYSBpcyBkZXByZWNhdGVkIVxuZXhwb3J0IHtkZWZhdWx0IGFzIGxpbmVSYWRpYWwsIGRlZmF1bHQgYXMgcmFkaWFsTGluZX0gZnJvbSBcIi4vbGluZVJhZGlhbFwiOyAvLyBOb3RlOiByYWRpYWxMaW5lIGlzIGRlcHJlY2F0ZWQhXG5leHBvcnQge2RlZmF1bHQgYXMgcG9pbnRSYWRpYWx9IGZyb20gXCIuL3BvaW50UmFkaWFsXCI7XG5leHBvcnQge2xpbmtIb3Jpem9udGFsLCBsaW5rVmVydGljYWwsIGxpbmtSYWRpYWx9IGZyb20gXCIuL2xpbmsvaW5kZXhcIjtcblxuZXhwb3J0IHtkZWZhdWx0IGFzIHN5bWJvbCwgc3ltYm9sc30gZnJvbSBcIi4vc3ltYm9sXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3ltYm9sQ2lyY2xlfSBmcm9tIFwiLi9zeW1ib2wvY2lyY2xlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3ltYm9sQ3Jvc3N9IGZyb20gXCIuL3N5bWJvbC9jcm9zc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN5bWJvbERpYW1vbmR9IGZyb20gXCIuL3N5bWJvbC9kaWFtb25kXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3ltYm9sU3F1YXJlfSBmcm9tIFwiLi9zeW1ib2wvc3F1YXJlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3ltYm9sU3Rhcn0gZnJvbSBcIi4vc3ltYm9sL3N0YXJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzeW1ib2xUcmlhbmdsZX0gZnJvbSBcIi4vc3ltYm9sL3RyaWFuZ2xlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3ltYm9sV3llfSBmcm9tIFwiLi9zeW1ib2wvd3llXCI7XG5cbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUJhc2lzQ2xvc2VkfSBmcm9tIFwiLi9jdXJ2ZS9iYXNpc0Nsb3NlZFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQmFzaXNPcGVufSBmcm9tIFwiLi9jdXJ2ZS9iYXNpc09wZW5cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUJhc2lzfSBmcm9tIFwiLi9jdXJ2ZS9iYXNpc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQnVuZGxlfSBmcm9tIFwiLi9jdXJ2ZS9idW5kbGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUNhcmRpbmFsQ2xvc2VkfSBmcm9tIFwiLi9jdXJ2ZS9jYXJkaW5hbENsb3NlZFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQ2FyZGluYWxPcGVufSBmcm9tIFwiLi9jdXJ2ZS9jYXJkaW5hbE9wZW5cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUNhcmRpbmFsfSBmcm9tIFwiLi9jdXJ2ZS9jYXJkaW5hbFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQ2F0bXVsbFJvbUNsb3NlZH0gZnJvbSBcIi4vY3VydmUvY2F0bXVsbFJvbUNsb3NlZFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQ2F0bXVsbFJvbU9wZW59IGZyb20gXCIuL2N1cnZlL2NhdG11bGxSb21PcGVuXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVDYXRtdWxsUm9tfSBmcm9tIFwiLi9jdXJ2ZS9jYXRtdWxsUm9tXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVMaW5lYXJDbG9zZWR9IGZyb20gXCIuL2N1cnZlL2xpbmVhckNsb3NlZFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlTGluZWFyfSBmcm9tIFwiLi9jdXJ2ZS9saW5lYXJcIjtcbmV4cG9ydCB7bW9ub3RvbmVYIGFzIGN1cnZlTW9ub3RvbmVYLCBtb25vdG9uZVkgYXMgY3VydmVNb25vdG9uZVl9IGZyb20gXCIuL2N1cnZlL21vbm90b25lXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVOYXR1cmFsfSBmcm9tIFwiLi9jdXJ2ZS9uYXR1cmFsXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVTdGVwLCBzdGVwQWZ0ZXIgYXMgY3VydmVTdGVwQWZ0ZXIsIHN0ZXBCZWZvcmUgYXMgY3VydmVTdGVwQmVmb3JlfSBmcm9tIFwiLi9jdXJ2ZS9zdGVwXCI7XG5cbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja30gZnJvbSBcIi4vc3RhY2tcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09mZnNldEV4cGFuZH0gZnJvbSBcIi4vb2Zmc2V0L2V4cGFuZFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT2Zmc2V0RGl2ZXJnaW5nfSBmcm9tIFwiLi9vZmZzZXQvZGl2ZXJnaW5nXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPZmZzZXROb25lfSBmcm9tIFwiLi9vZmZzZXQvbm9uZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT2Zmc2V0U2lsaG91ZXR0ZX0gZnJvbSBcIi4vb2Zmc2V0L3NpbGhvdWV0dGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09mZnNldFdpZ2dsZX0gZnJvbSBcIi4vb2Zmc2V0L3dpZ2dsZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT3JkZXJBcHBlYXJhbmNlfSBmcm9tIFwiLi9vcmRlci9hcHBlYXJhbmNlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPcmRlckFzY2VuZGluZ30gZnJvbSBcIi4vb3JkZXIvYXNjZW5kaW5nXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPcmRlckRlc2NlbmRpbmd9IGZyb20gXCIuL29yZGVyL2Rlc2NlbmRpbmdcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09yZGVySW5zaWRlT3V0fSBmcm9tIFwiLi9vcmRlci9pbnNpZGVPdXRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09yZGVyTm9uZX0gZnJvbSBcIi4vb3JkZXIvbm9uZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT3JkZXJSZXZlcnNlfSBmcm9tIFwiLi9vcmRlci9yZXZlcnNlXCI7XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBjdXJ2ZUxpbmVhciBmcm9tIFwiLi9jdXJ2ZS9saW5lYXJcIjtcbmltcG9ydCB7eCBhcyBwb2ludFgsIHkgYXMgcG9pbnRZfSBmcm9tIFwiLi9wb2ludFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHggPSBwb2ludFgsXG4gICAgICB5ID0gcG9pbnRZLFxuICAgICAgZGVmaW5lZCA9IGNvbnN0YW50KHRydWUpLFxuICAgICAgY29udGV4dCA9IG51bGwsXG4gICAgICBjdXJ2ZSA9IGN1cnZlTGluZWFyLFxuICAgICAgb3V0cHV0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBsaW5lKGRhdGEpIHtcbiAgICB2YXIgaSxcbiAgICAgICAgbiA9IGRhdGEubGVuZ3RoLFxuICAgICAgICBkLFxuICAgICAgICBkZWZpbmVkMCA9IGZhbHNlLFxuICAgICAgICBidWZmZXI7XG5cbiAgICBpZiAoY29udGV4dCA9PSBudWxsKSBvdXRwdXQgPSBjdXJ2ZShidWZmZXIgPSBwYXRoKCkpO1xuXG4gICAgZm9yIChpID0gMDsgaSA8PSBuOyArK2kpIHtcbiAgICAgIGlmICghKGkgPCBuICYmIGRlZmluZWQoZCA9IGRhdGFbaV0sIGksIGRhdGEpKSA9PT0gZGVmaW5lZDApIHtcbiAgICAgICAgaWYgKGRlZmluZWQwID0gIWRlZmluZWQwKSBvdXRwdXQubGluZVN0YXJ0KCk7XG4gICAgICAgIGVsc2Ugb3V0cHV0LmxpbmVFbmQoKTtcbiAgICAgIH1cbiAgICAgIGlmIChkZWZpbmVkMCkgb3V0cHV0LnBvaW50KCt4KGQsIGksIGRhdGEpLCAreShkLCBpLCBkYXRhKSk7XG4gICAgfVxuXG4gICAgaWYgKGJ1ZmZlcikgcmV0dXJuIG91dHB1dCA9IG51bGwsIGJ1ZmZlciArIFwiXCIgfHwgbnVsbDtcbiAgfVxuXG4gIGxpbmUueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGxpbmUpIDogeDtcbiAgfTtcblxuICBsaW5lLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBsaW5lKSA6IHk7XG4gIH07XG5cbiAgbGluZS5kZWZpbmVkID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRlZmluZWQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCEhXyksIGxpbmUpIDogZGVmaW5lZDtcbiAgfTtcblxuICBsaW5lLmN1cnZlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGN1cnZlID0gXywgY29udGV4dCAhPSBudWxsICYmIChvdXRwdXQgPSBjdXJ2ZShjb250ZXh0KSksIGxpbmUpIDogY3VydmU7XG4gIH07XG5cbiAgbGluZS5jb250ZXh0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKF8gPT0gbnVsbCA/IGNvbnRleHQgPSBvdXRwdXQgPSBudWxsIDogb3V0cHV0ID0gY3VydmUoY29udGV4dCA9IF8pLCBsaW5lKSA6IGNvbnRleHQ7XG4gIH07XG5cbiAgcmV0dXJuIGxpbmU7XG59XG4iLCJpbXBvcnQgY3VydmVSYWRpYWwsIHtjdXJ2ZVJhZGlhbExpbmVhcn0gZnJvbSBcIi4vY3VydmUvcmFkaWFsXCI7XG5pbXBvcnQgbGluZSBmcm9tIFwiLi9saW5lXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBsaW5lUmFkaWFsKGwpIHtcbiAgdmFyIGMgPSBsLmN1cnZlO1xuXG4gIGwuYW5nbGUgPSBsLngsIGRlbGV0ZSBsLng7XG4gIGwucmFkaXVzID0gbC55LCBkZWxldGUgbC55O1xuXG4gIGwuY3VydmUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBjKGN1cnZlUmFkaWFsKF8pKSA6IGMoKS5fY3VydmU7XG4gIH07XG5cbiAgcmV0dXJuIGw7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbGluZVJhZGlhbChsaW5lKCkuY3VydmUoY3VydmVSYWRpYWxMaW5lYXIpKTtcbn1cbiIsImltcG9ydCB7cGF0aH0gZnJvbSBcImQzLXBhdGhcIjtcbmltcG9ydCB7c2xpY2V9IGZyb20gXCIuLi9hcnJheVwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuLi9jb25zdGFudFwiO1xuaW1wb3J0IHt4IGFzIHBvaW50WCwgeSBhcyBwb2ludFl9IGZyb20gXCIuLi9wb2ludFwiO1xuaW1wb3J0IHBvaW50UmFkaWFsIGZyb20gXCIuLi9wb2ludFJhZGlhbFwiO1xuXG5mdW5jdGlvbiBsaW5rU291cmNlKGQpIHtcbiAgcmV0dXJuIGQuc291cmNlO1xufVxuXG5mdW5jdGlvbiBsaW5rVGFyZ2V0KGQpIHtcbiAgcmV0dXJuIGQudGFyZ2V0O1xufVxuXG5mdW5jdGlvbiBsaW5rKGN1cnZlKSB7XG4gIHZhciBzb3VyY2UgPSBsaW5rU291cmNlLFxuICAgICAgdGFyZ2V0ID0gbGlua1RhcmdldCxcbiAgICAgIHggPSBwb2ludFgsXG4gICAgICB5ID0gcG9pbnRZLFxuICAgICAgY29udGV4dCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gbGluaygpIHtcbiAgICB2YXIgYnVmZmVyLCBhcmd2ID0gc2xpY2UuY2FsbChhcmd1bWVudHMpLCBzID0gc291cmNlLmFwcGx5KHRoaXMsIGFyZ3YpLCB0ID0gdGFyZ2V0LmFwcGx5KHRoaXMsIGFyZ3YpO1xuICAgIGlmICghY29udGV4dCkgY29udGV4dCA9IGJ1ZmZlciA9IHBhdGgoKTtcbiAgICBjdXJ2ZShjb250ZXh0LCAreC5hcHBseSh0aGlzLCAoYXJndlswXSA9IHMsIGFyZ3YpKSwgK3kuYXBwbHkodGhpcywgYXJndiksICt4LmFwcGx5KHRoaXMsIChhcmd2WzBdID0gdCwgYXJndikpLCAreS5hcHBseSh0aGlzLCBhcmd2KSk7XG4gICAgaWYgKGJ1ZmZlcikgcmV0dXJuIGNvbnRleHQgPSBudWxsLCBidWZmZXIgKyBcIlwiIHx8IG51bGw7XG4gIH1cblxuICBsaW5rLnNvdXJjZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzb3VyY2UgPSBfLCBsaW5rKSA6IHNvdXJjZTtcbiAgfTtcblxuICBsaW5rLnRhcmdldCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0YXJnZXQgPSBfLCBsaW5rKSA6IHRhcmdldDtcbiAgfTtcblxuICBsaW5rLnggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBsaW5rKSA6IHg7XG4gIH07XG5cbiAgbGluay55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgbGluaykgOiB5O1xuICB9O1xuXG4gIGxpbmsuY29udGV4dCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICgoY29udGV4dCA9IF8gPT0gbnVsbCA/IG51bGwgOiBfKSwgbGluaykgOiBjb250ZXh0O1xuICB9O1xuXG4gIHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBjdXJ2ZUhvcml6b250YWwoY29udGV4dCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgY29udGV4dC5tb3ZlVG8oeDAsIHkwKTtcbiAgY29udGV4dC5iZXppZXJDdXJ2ZVRvKHgwID0gKHgwICsgeDEpIC8gMiwgeTAsIHgwLCB5MSwgeDEsIHkxKTtcbn1cblxuZnVuY3Rpb24gY3VydmVWZXJ0aWNhbChjb250ZXh0LCB4MCwgeTAsIHgxLCB5MSkge1xuICBjb250ZXh0Lm1vdmVUbyh4MCwgeTApO1xuICBjb250ZXh0LmJlemllckN1cnZlVG8oeDAsIHkwID0gKHkwICsgeTEpIC8gMiwgeDEsIHkwLCB4MSwgeTEpO1xufVxuXG5mdW5jdGlvbiBjdXJ2ZVJhZGlhbChjb250ZXh0LCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgcDAgPSBwb2ludFJhZGlhbCh4MCwgeTApLFxuICAgICAgcDEgPSBwb2ludFJhZGlhbCh4MCwgeTAgPSAoeTAgKyB5MSkgLyAyKSxcbiAgICAgIHAyID0gcG9pbnRSYWRpYWwoeDEsIHkwKSxcbiAgICAgIHAzID0gcG9pbnRSYWRpYWwoeDEsIHkxKTtcbiAgY29udGV4dC5tb3ZlVG8ocDBbMF0sIHAwWzFdKTtcbiAgY29udGV4dC5iZXppZXJDdXJ2ZVRvKHAxWzBdLCBwMVsxXSwgcDJbMF0sIHAyWzFdLCBwM1swXSwgcDNbMV0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbGlua0hvcml6b250YWwoKSB7XG4gIHJldHVybiBsaW5rKGN1cnZlSG9yaXpvbnRhbCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsaW5rVmVydGljYWwoKSB7XG4gIHJldHVybiBsaW5rKGN1cnZlVmVydGljYWwpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbGlua1JhZGlhbCgpIHtcbiAgdmFyIGwgPSBsaW5rKGN1cnZlUmFkaWFsKTtcbiAgbC5hbmdsZSA9IGwueCwgZGVsZXRlIGwueDtcbiAgbC5yYWRpdXMgPSBsLnksIGRlbGV0ZSBsLnk7XG4gIHJldHVybiBsO1xufVxuIiwiZXhwb3J0IHZhciBhYnMgPSBNYXRoLmFicztcbmV4cG9ydCB2YXIgYXRhbjIgPSBNYXRoLmF0YW4yO1xuZXhwb3J0IHZhciBjb3MgPSBNYXRoLmNvcztcbmV4cG9ydCB2YXIgbWF4ID0gTWF0aC5tYXg7XG5leHBvcnQgdmFyIG1pbiA9IE1hdGgubWluO1xuZXhwb3J0IHZhciBzaW4gPSBNYXRoLnNpbjtcbmV4cG9ydCB2YXIgc3FydCA9IE1hdGguc3FydDtcblxuZXhwb3J0IHZhciBlcHNpbG9uID0gMWUtMTI7XG5leHBvcnQgdmFyIHBpID0gTWF0aC5QSTtcbmV4cG9ydCB2YXIgaGFsZlBpID0gcGkgLyAyO1xuZXhwb3J0IHZhciB0YXUgPSAyICogcGk7XG5cbmV4cG9ydCBmdW5jdGlvbiBhY29zKHgpIHtcbiAgcmV0dXJuIHggPiAxID8gMCA6IHggPCAtMSA/IHBpIDogTWF0aC5hY29zKHgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNpbih4KSB7XG4gIHJldHVybiB4ID49IDEgPyBoYWxmUGkgOiB4IDw9IC0xID8gLWhhbGZQaSA6IE1hdGguYXNpbih4KTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge31cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcywgb3JkZXIpIHtcbiAgaWYgKCEoKG4gPSBzZXJpZXMubGVuZ3RoKSA+IDApKSByZXR1cm47XG4gIGZvciAodmFyIGksIGogPSAwLCBkLCBkeSwgeXAsIHluLCBuLCBtID0gc2VyaWVzW29yZGVyWzBdXS5sZW5ndGg7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHlwID0geW4gPSAwLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKChkeSA9IChkID0gc2VyaWVzW29yZGVyW2ldXVtqXSlbMV0gLSBkWzBdKSA+PSAwKSB7XG4gICAgICAgIGRbMF0gPSB5cCwgZFsxXSA9IHlwICs9IGR5O1xuICAgICAgfSBlbHNlIGlmIChkeSA8IDApIHtcbiAgICAgICAgZFsxXSA9IHluLCBkWzBdID0geW4gKz0gZHk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkWzBdID0geXA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgbm9uZSBmcm9tIFwiLi9ub25lXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcywgb3JkZXIpIHtcbiAgaWYgKCEoKG4gPSBzZXJpZXMubGVuZ3RoKSA+IDApKSByZXR1cm47XG4gIGZvciAodmFyIGksIG4sIGogPSAwLCBtID0gc2VyaWVzWzBdLmxlbmd0aCwgeTsgaiA8IG07ICsraikge1xuICAgIGZvciAoeSA9IGkgPSAwOyBpIDwgbjsgKytpKSB5ICs9IHNlcmllc1tpXVtqXVsxXSB8fCAwO1xuICAgIGlmICh5KSBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBzZXJpZXNbaV1bal1bMV0gLz0geTtcbiAgfVxuICBub25lKHNlcmllcywgb3JkZXIpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzLCBvcmRlcikge1xuICBpZiAoISgobiA9IHNlcmllcy5sZW5ndGgpID4gMSkpIHJldHVybjtcbiAgZm9yICh2YXIgaSA9IDEsIGosIHMwLCBzMSA9IHNlcmllc1tvcmRlclswXV0sIG4sIG0gPSBzMS5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICBzMCA9IHMxLCBzMSA9IHNlcmllc1tvcmRlcltpXV07XG4gICAgZm9yIChqID0gMDsgaiA8IG07ICsraikge1xuICAgICAgczFbal1bMV0gKz0gczFbal1bMF0gPSBpc05hTihzMFtqXVsxXSkgPyBzMFtqXVswXSA6IHMwW2pdWzFdO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IG5vbmUgZnJvbSBcIi4vbm9uZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMsIG9yZGVyKSB7XG4gIGlmICghKChuID0gc2VyaWVzLmxlbmd0aCkgPiAwKSkgcmV0dXJuO1xuICBmb3IgKHZhciBqID0gMCwgczAgPSBzZXJpZXNbb3JkZXJbMF1dLCBuLCBtID0gczAubGVuZ3RoOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIHkgPSAwOyBpIDwgbjsgKytpKSB5ICs9IHNlcmllc1tpXVtqXVsxXSB8fCAwO1xuICAgIHMwW2pdWzFdICs9IHMwW2pdWzBdID0gLXkgLyAyO1xuICB9XG4gIG5vbmUoc2VyaWVzLCBvcmRlcik7XG59XG4iLCJpbXBvcnQgbm9uZSBmcm9tIFwiLi9ub25lXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcywgb3JkZXIpIHtcbiAgaWYgKCEoKG4gPSBzZXJpZXMubGVuZ3RoKSA+IDApIHx8ICEoKG0gPSAoczAgPSBzZXJpZXNbb3JkZXJbMF1dKS5sZW5ndGgpID4gMCkpIHJldHVybjtcbiAgZm9yICh2YXIgeSA9IDAsIGogPSAxLCBzMCwgbSwgbjsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGkgPSAwLCBzMSA9IDAsIHMyID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgdmFyIHNpID0gc2VyaWVzW29yZGVyW2ldXSxcbiAgICAgICAgICBzaWowID0gc2lbal1bMV0gfHwgMCxcbiAgICAgICAgICBzaWoxID0gc2lbaiAtIDFdWzFdIHx8IDAsXG4gICAgICAgICAgczMgPSAoc2lqMCAtIHNpajEpIC8gMjtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgaTsgKytrKSB7XG4gICAgICAgIHZhciBzayA9IHNlcmllc1tvcmRlcltrXV0sXG4gICAgICAgICAgICBza2owID0gc2tbal1bMV0gfHwgMCxcbiAgICAgICAgICAgIHNrajEgPSBza1tqIC0gMV1bMV0gfHwgMDtcbiAgICAgICAgczMgKz0gc2tqMCAtIHNrajE7XG4gICAgICB9XG4gICAgICBzMSArPSBzaWowLCBzMiArPSBzMyAqIHNpajA7XG4gICAgfVxuICAgIHMwW2ogLSAxXVsxXSArPSBzMFtqIC0gMV1bMF0gPSB5O1xuICAgIGlmIChzMSkgeSAtPSBzMiAvIHMxO1xuICB9XG4gIHMwW2ogLSAxXVsxXSArPSBzMFtqIC0gMV1bMF0gPSB5O1xuICBub25lKHNlcmllcywgb3JkZXIpO1xufVxuIiwiaW1wb3J0IG5vbmUgZnJvbSBcIi4vbm9uZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMpIHtcbiAgdmFyIHBlYWtzID0gc2VyaWVzLm1hcChwZWFrKTtcbiAgcmV0dXJuIG5vbmUoc2VyaWVzKS5zb3J0KGZ1bmN0aW9uKGEsIGIpIHsgcmV0dXJuIHBlYWtzW2FdIC0gcGVha3NbYl07IH0pO1xufVxuXG5mdW5jdGlvbiBwZWFrKHNlcmllcykge1xuICB2YXIgaSA9IC0xLCBqID0gMCwgbiA9IHNlcmllcy5sZW5ndGgsIHZpLCB2aiA9IC1JbmZpbml0eTtcbiAgd2hpbGUgKCsraSA8IG4pIGlmICgodmkgPSArc2VyaWVzW2ldWzFdKSA+IHZqKSB2aiA9IHZpLCBqID0gaTtcbiAgcmV0dXJuIGo7XG59XG4iLCJpbXBvcnQgbm9uZSBmcm9tIFwiLi9ub25lXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcykge1xuICB2YXIgc3VtcyA9IHNlcmllcy5tYXAoc3VtKTtcbiAgcmV0dXJuIG5vbmUoc2VyaWVzKS5zb3J0KGZ1bmN0aW9uKGEsIGIpIHsgcmV0dXJuIHN1bXNbYV0gLSBzdW1zW2JdOyB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN1bShzZXJpZXMpIHtcbiAgdmFyIHMgPSAwLCBpID0gLTEsIG4gPSBzZXJpZXMubGVuZ3RoLCB2O1xuICB3aGlsZSAoKytpIDwgbikgaWYgKHYgPSArc2VyaWVzW2ldWzFdKSBzICs9IHY7XG4gIHJldHVybiBzO1xufVxuIiwiaW1wb3J0IGFzY2VuZGluZyBmcm9tIFwiLi9hc2NlbmRpbmdcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzKSB7XG4gIHJldHVybiBhc2NlbmRpbmcoc2VyaWVzKS5yZXZlcnNlKCk7XG59XG4iLCJpbXBvcnQgYXBwZWFyYW5jZSBmcm9tIFwiLi9hcHBlYXJhbmNlXCI7XG5pbXBvcnQge3N1bX0gZnJvbSBcIi4vYXNjZW5kaW5nXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcykge1xuICB2YXIgbiA9IHNlcmllcy5sZW5ndGgsXG4gICAgICBpLFxuICAgICAgaixcbiAgICAgIHN1bXMgPSBzZXJpZXMubWFwKHN1bSksXG4gICAgICBvcmRlciA9IGFwcGVhcmFuY2Uoc2VyaWVzKSxcbiAgICAgIHRvcCA9IDAsXG4gICAgICBib3R0b20gPSAwLFxuICAgICAgdG9wcyA9IFtdLFxuICAgICAgYm90dG9tcyA9IFtdO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICBqID0gb3JkZXJbaV07XG4gICAgaWYgKHRvcCA8IGJvdHRvbSkge1xuICAgICAgdG9wICs9IHN1bXNbal07XG4gICAgICB0b3BzLnB1c2goaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJvdHRvbSArPSBzdW1zW2pdO1xuICAgICAgYm90dG9tcy5wdXNoKGopO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBib3R0b21zLnJldmVyc2UoKS5jb25jYXQodG9wcyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMpIHtcbiAgdmFyIG4gPSBzZXJpZXMubGVuZ3RoLCBvID0gbmV3IEFycmF5KG4pO1xuICB3aGlsZSAoLS1uID49IDApIG9bbl0gPSBuO1xuICByZXR1cm4gbztcbn1cbiIsImltcG9ydCBub25lIGZyb20gXCIuL25vbmVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzKSB7XG4gIHJldHVybiBub25lKHNlcmllcykucmV2ZXJzZSgpO1xufVxuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQgZGVzY2VuZGluZyBmcm9tIFwiLi9kZXNjZW5kaW5nXCI7XG5pbXBvcnQgaWRlbnRpdHkgZnJvbSBcIi4vaWRlbnRpdHlcIjtcbmltcG9ydCB7dGF1fSBmcm9tIFwiLi9tYXRoXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgdmFsdWUgPSBpZGVudGl0eSxcbiAgICAgIHNvcnRWYWx1ZXMgPSBkZXNjZW5kaW5nLFxuICAgICAgc29ydCA9IG51bGwsXG4gICAgICBzdGFydEFuZ2xlID0gY29uc3RhbnQoMCksXG4gICAgICBlbmRBbmdsZSA9IGNvbnN0YW50KHRhdSksXG4gICAgICBwYWRBbmdsZSA9IGNvbnN0YW50KDApO1xuXG4gIGZ1bmN0aW9uIHBpZShkYXRhKSB7XG4gICAgdmFyIGksXG4gICAgICAgIG4gPSBkYXRhLmxlbmd0aCxcbiAgICAgICAgaixcbiAgICAgICAgayxcbiAgICAgICAgc3VtID0gMCxcbiAgICAgICAgaW5kZXggPSBuZXcgQXJyYXkobiksXG4gICAgICAgIGFyY3MgPSBuZXcgQXJyYXkobiksXG4gICAgICAgIGEwID0gK3N0YXJ0QW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgZGEgPSBNYXRoLm1pbih0YXUsIE1hdGgubWF4KC10YXUsIGVuZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgLSBhMCkpLFxuICAgICAgICBhMSxcbiAgICAgICAgcCA9IE1hdGgubWluKE1hdGguYWJzKGRhKSAvIG4sIHBhZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpLFxuICAgICAgICBwYSA9IHAgKiAoZGEgPCAwID8gLTEgOiAxKSxcbiAgICAgICAgdjtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgodiA9IGFyY3NbaW5kZXhbaV0gPSBpXSA9ICt2YWx1ZShkYXRhW2ldLCBpLCBkYXRhKSkgPiAwKSB7XG4gICAgICAgIHN1bSArPSB2O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIE9wdGlvbmFsbHkgc29ydCB0aGUgYXJjcyBieSBwcmV2aW91c2x5LWNvbXB1dGVkIHZhbHVlcyBvciBieSBkYXRhLlxuICAgIGlmIChzb3J0VmFsdWVzICE9IG51bGwpIGluZGV4LnNvcnQoZnVuY3Rpb24oaSwgaikgeyByZXR1cm4gc29ydFZhbHVlcyhhcmNzW2ldLCBhcmNzW2pdKTsgfSk7XG4gICAgZWxzZSBpZiAoc29ydCAhPSBudWxsKSBpbmRleC5zb3J0KGZ1bmN0aW9uKGksIGopIHsgcmV0dXJuIHNvcnQoZGF0YVtpXSwgZGF0YVtqXSk7IH0pO1xuXG4gICAgLy8gQ29tcHV0ZSB0aGUgYXJjcyEgVGhleSBhcmUgc3RvcmVkIGluIHRoZSBvcmlnaW5hbCBkYXRhJ3Mgb3JkZXIuXG4gICAgZm9yIChpID0gMCwgayA9IHN1bSA/IChkYSAtIG4gKiBwYSkgLyBzdW0gOiAwOyBpIDwgbjsgKytpLCBhMCA9IGExKSB7XG4gICAgICBqID0gaW5kZXhbaV0sIHYgPSBhcmNzW2pdLCBhMSA9IGEwICsgKHYgPiAwID8gdiAqIGsgOiAwKSArIHBhLCBhcmNzW2pdID0ge1xuICAgICAgICBkYXRhOiBkYXRhW2pdLFxuICAgICAgICBpbmRleDogaSxcbiAgICAgICAgdmFsdWU6IHYsXG4gICAgICAgIHN0YXJ0QW5nbGU6IGEwLFxuICAgICAgICBlbmRBbmdsZTogYTEsXG4gICAgICAgIHBhZEFuZ2xlOiBwXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBhcmNzO1xuICB9XG5cbiAgcGllLnZhbHVlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHZhbHVlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHBpZSkgOiB2YWx1ZTtcbiAgfTtcblxuICBwaWUuc29ydFZhbHVlcyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzb3J0VmFsdWVzID0gXywgc29ydCA9IG51bGwsIHBpZSkgOiBzb3J0VmFsdWVzO1xuICB9O1xuXG4gIHBpZS5zb3J0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNvcnQgPSBfLCBzb3J0VmFsdWVzID0gbnVsbCwgcGllKSA6IHNvcnQ7XG4gIH07XG5cbiAgcGllLnN0YXJ0QW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RhcnRBbmdsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBwaWUpIDogc3RhcnRBbmdsZTtcbiAgfTtcblxuICBwaWUuZW5kQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZW5kQW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgcGllKSA6IGVuZEFuZ2xlO1xuICB9O1xuXG4gIHBpZS5wYWRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRBbmdsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBwaWUpIDogcGFkQW5nbGU7XG4gIH07XG5cbiAgcmV0dXJuIHBpZTtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiB4KHApIHtcbiAgcmV0dXJuIHBbMF07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB5KHApIHtcbiAgcmV0dXJuIHBbMV07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4LCB5KSB7XG4gIHJldHVybiBbKHkgPSAreSkgKiBNYXRoLmNvcyh4IC09IE1hdGguUEkgLyAyKSwgeSAqIE1hdGguc2luKHgpXTtcbn1cbiIsImltcG9ydCB7c2xpY2V9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBvZmZzZXROb25lIGZyb20gXCIuL29mZnNldC9ub25lXCI7XG5pbXBvcnQgb3JkZXJOb25lIGZyb20gXCIuL29yZGVyL25vbmVcIjtcblxuZnVuY3Rpb24gc3RhY2tWYWx1ZShkLCBrZXkpIHtcbiAgcmV0dXJuIGRba2V5XTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBrZXlzID0gY29uc3RhbnQoW10pLFxuICAgICAgb3JkZXIgPSBvcmRlck5vbmUsXG4gICAgICBvZmZzZXQgPSBvZmZzZXROb25lLFxuICAgICAgdmFsdWUgPSBzdGFja1ZhbHVlO1xuXG4gIGZ1bmN0aW9uIHN0YWNrKGRhdGEpIHtcbiAgICB2YXIga3ogPSBrZXlzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgIGksXG4gICAgICAgIG0gPSBkYXRhLmxlbmd0aCxcbiAgICAgICAgbiA9IGt6Lmxlbmd0aCxcbiAgICAgICAgc3ogPSBuZXcgQXJyYXkobiksXG4gICAgICAgIG96O1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgZm9yICh2YXIga2kgPSBreltpXSwgc2kgPSBzeltpXSA9IG5ldyBBcnJheShtKSwgaiA9IDAsIHNpajsgaiA8IG07ICsraikge1xuICAgICAgICBzaVtqXSA9IHNpaiA9IFswLCArdmFsdWUoZGF0YVtqXSwga2ksIGosIGRhdGEpXTtcbiAgICAgICAgc2lqLmRhdGEgPSBkYXRhW2pdO1xuICAgICAgfVxuICAgICAgc2kua2V5ID0ga2k7XG4gICAgfVxuXG4gICAgZm9yIChpID0gMCwgb3ogPSBvcmRlcihzeik7IGkgPCBuOyArK2kpIHtcbiAgICAgIHN6W296W2ldXS5pbmRleCA9IGk7XG4gICAgfVxuXG4gICAgb2Zmc2V0KHN6LCBveik7XG4gICAgcmV0dXJuIHN6O1xuICB9XG5cbiAgc3RhY2sua2V5cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChrZXlzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChzbGljZS5jYWxsKF8pKSwgc3RhY2spIDoga2V5cztcbiAgfTtcblxuICBzdGFjay52YWx1ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh2YWx1ZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBzdGFjaykgOiB2YWx1ZTtcbiAgfTtcblxuICBzdGFjay5vcmRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChvcmRlciA9IF8gPT0gbnVsbCA/IG9yZGVyTm9uZSA6IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoc2xpY2UuY2FsbChfKSksIHN0YWNrKSA6IG9yZGVyO1xuICB9O1xuXG4gIHN0YWNrLm9mZnNldCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChvZmZzZXQgPSBfID09IG51bGwgPyBvZmZzZXROb25lIDogXywgc3RhY2spIDogb2Zmc2V0O1xuICB9O1xuXG4gIHJldHVybiBzdGFjaztcbn1cbiIsImltcG9ydCB7cGF0aH0gZnJvbSBcImQzLXBhdGhcIjtcbmltcG9ydCBjaXJjbGUgZnJvbSBcIi4vc3ltYm9sL2NpcmNsZVwiO1xuaW1wb3J0IGNyb3NzIGZyb20gXCIuL3N5bWJvbC9jcm9zc1wiO1xuaW1wb3J0IGRpYW1vbmQgZnJvbSBcIi4vc3ltYm9sL2RpYW1vbmRcIjtcbmltcG9ydCBzdGFyIGZyb20gXCIuL3N5bWJvbC9zdGFyXCI7XG5pbXBvcnQgc3F1YXJlIGZyb20gXCIuL3N5bWJvbC9zcXVhcmVcIjtcbmltcG9ydCB0cmlhbmdsZSBmcm9tIFwiLi9zeW1ib2wvdHJpYW5nbGVcIjtcbmltcG9ydCB3eWUgZnJvbSBcIi4vc3ltYm9sL3d5ZVwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5cbmV4cG9ydCB2YXIgc3ltYm9scyA9IFtcbiAgY2lyY2xlLFxuICBjcm9zcyxcbiAgZGlhbW9uZCxcbiAgc3F1YXJlLFxuICBzdGFyLFxuICB0cmlhbmdsZSxcbiAgd3llXG5dO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHR5cGUgPSBjb25zdGFudChjaXJjbGUpLFxuICAgICAgc2l6ZSA9IGNvbnN0YW50KDY0KSxcbiAgICAgIGNvbnRleHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHN5bWJvbCgpIHtcbiAgICB2YXIgYnVmZmVyO1xuICAgIGlmICghY29udGV4dCkgY29udGV4dCA9IGJ1ZmZlciA9IHBhdGgoKTtcbiAgICB0eXBlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykuZHJhdyhjb250ZXh0LCArc2l6ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgICBpZiAoYnVmZmVyKSByZXR1cm4gY29udGV4dCA9IG51bGwsIGJ1ZmZlciArIFwiXCIgfHwgbnVsbDtcbiAgfVxuXG4gIHN5bWJvbC50eXBlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHR5cGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCBzeW1ib2wpIDogdHlwZTtcbiAgfTtcblxuICBzeW1ib2wuc2l6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzaXplID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHN5bWJvbCkgOiBzaXplO1xuICB9O1xuXG4gIHN5bWJvbC5jb250ZXh0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNvbnRleHQgPSBfID09IG51bGwgPyBudWxsIDogXywgc3ltYm9sKSA6IGNvbnRleHQ7XG4gIH07XG5cbiAgcmV0dXJuIHN5bWJvbDtcbn1cbiIsImltcG9ydCB7cGksIHRhdX0gZnJvbSBcIi4uL21hdGhcIjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBkcmF3OiBmdW5jdGlvbihjb250ZXh0LCBzaXplKSB7XG4gICAgdmFyIHIgPSBNYXRoLnNxcnQoc2l6ZSAvIHBpKTtcbiAgICBjb250ZXh0Lm1vdmVUbyhyLCAwKTtcbiAgICBjb250ZXh0LmFyYygwLCAwLCByLCAwLCB0YXUpO1xuICB9XG59O1xuIiwiZXhwb3J0IGRlZmF1bHQge1xuICBkcmF3OiBmdW5jdGlvbihjb250ZXh0LCBzaXplKSB7XG4gICAgdmFyIHIgPSBNYXRoLnNxcnQoc2l6ZSAvIDUpIC8gMjtcbiAgICBjb250ZXh0Lm1vdmVUbygtMyAqIHIsIC1yKTtcbiAgICBjb250ZXh0LmxpbmVUbygtciwgLXIpO1xuICAgIGNvbnRleHQubGluZVRvKC1yLCAtMyAqIHIpO1xuICAgIGNvbnRleHQubGluZVRvKHIsIC0zICogcik7XG4gICAgY29udGV4dC5saW5lVG8ociwgLXIpO1xuICAgIGNvbnRleHQubGluZVRvKDMgKiByLCAtcik7XG4gICAgY29udGV4dC5saW5lVG8oMyAqIHIsIHIpO1xuICAgIGNvbnRleHQubGluZVRvKHIsIHIpO1xuICAgIGNvbnRleHQubGluZVRvKHIsIDMgKiByKTtcbiAgICBjb250ZXh0LmxpbmVUbygtciwgMyAqIHIpO1xuICAgIGNvbnRleHQubGluZVRvKC1yLCByKTtcbiAgICBjb250ZXh0LmxpbmVUbygtMyAqIHIsIHIpO1xuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gIH1cbn07XG4iLCJ2YXIgdGFuMzAgPSBNYXRoLnNxcnQoMSAvIDMpLFxuICAgIHRhbjMwXzIgPSB0YW4zMCAqIDI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciB5ID0gTWF0aC5zcXJ0KHNpemUgLyB0YW4zMF8yKSxcbiAgICAgICAgeCA9IHkgKiB0YW4zMDtcbiAgICBjb250ZXh0Lm1vdmVUbygwLCAteSk7XG4gICAgY29udGV4dC5saW5lVG8oeCwgMCk7XG4gICAgY29udGV4dC5saW5lVG8oMCwgeSk7XG4gICAgY29udGV4dC5saW5lVG8oLXgsIDApO1xuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gIH1cbn07XG4iLCJleHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgdyA9IE1hdGguc3FydChzaXplKSxcbiAgICAgICAgeCA9IC13IC8gMjtcbiAgICBjb250ZXh0LnJlY3QoeCwgeCwgdywgdyk7XG4gIH1cbn07XG4iLCJpbXBvcnQge3BpLCB0YXV9IGZyb20gXCIuLi9tYXRoXCI7XG5cbnZhciBrYSA9IDAuODkwODEzMDkxNTI5Mjg1MjI4MTAsXG4gICAga3IgPSBNYXRoLnNpbihwaSAvIDEwKSAvIE1hdGguc2luKDcgKiBwaSAvIDEwKSxcbiAgICBreCA9IE1hdGguc2luKHRhdSAvIDEwKSAqIGtyLFxuICAgIGt5ID0gLU1hdGguY29zKHRhdSAvIDEwKSAqIGtyO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgciA9IE1hdGguc3FydChzaXplICoga2EpLFxuICAgICAgICB4ID0ga3ggKiByLFxuICAgICAgICB5ID0ga3kgKiByO1xuICAgIGNvbnRleHQubW92ZVRvKDAsIC1yKTtcbiAgICBjb250ZXh0LmxpbmVUbyh4LCB5KTtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IDU7ICsraSkge1xuICAgICAgdmFyIGEgPSB0YXUgKiBpIC8gNSxcbiAgICAgICAgICBjID0gTWF0aC5jb3MoYSksXG4gICAgICAgICAgcyA9IE1hdGguc2luKGEpO1xuICAgICAgY29udGV4dC5saW5lVG8ocyAqIHIsIC1jICogcik7XG4gICAgICBjb250ZXh0LmxpbmVUbyhjICogeCAtIHMgKiB5LCBzICogeCArIGMgKiB5KTtcbiAgICB9XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgfVxufTtcbiIsInZhciBzcXJ0MyA9IE1hdGguc3FydCgzKTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBkcmF3OiBmdW5jdGlvbihjb250ZXh0LCBzaXplKSB7XG4gICAgdmFyIHkgPSAtTWF0aC5zcXJ0KHNpemUgLyAoc3FydDMgKiAzKSk7XG4gICAgY29udGV4dC5tb3ZlVG8oMCwgeSAqIDIpO1xuICAgIGNvbnRleHQubGluZVRvKC1zcXJ0MyAqIHksIC15KTtcbiAgICBjb250ZXh0LmxpbmVUbyhzcXJ0MyAqIHksIC15KTtcbiAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICB9XG59O1xuIiwidmFyIGMgPSAtMC41LFxuICAgIHMgPSBNYXRoLnNxcnQoMykgLyAyLFxuICAgIGsgPSAxIC8gTWF0aC5zcXJ0KDEyKSxcbiAgICBhID0gKGsgLyAyICsgMSkgKiAzO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgciA9IE1hdGguc3FydChzaXplIC8gYSksXG4gICAgICAgIHgwID0gciAvIDIsXG4gICAgICAgIHkwID0gciAqIGssXG4gICAgICAgIHgxID0geDAsXG4gICAgICAgIHkxID0gciAqIGsgKyByLFxuICAgICAgICB4MiA9IC14MSxcbiAgICAgICAgeTIgPSB5MTtcbiAgICBjb250ZXh0Lm1vdmVUbyh4MCwgeTApO1xuICAgIGNvbnRleHQubGluZVRvKHgxLCB5MSk7XG4gICAgY29udGV4dC5saW5lVG8oeDIsIHkyKTtcbiAgICBjb250ZXh0LmxpbmVUbyhjICogeDAgLSBzICogeTAsIHMgKiB4MCArIGMgKiB5MCk7XG4gICAgY29udGV4dC5saW5lVG8oYyAqIHgxIC0gcyAqIHkxLCBzICogeDEgKyBjICogeTEpO1xuICAgIGNvbnRleHQubGluZVRvKGMgKiB4MiAtIHMgKiB5MiwgcyAqIHgyICsgYyAqIHkyKTtcbiAgICBjb250ZXh0LmxpbmVUbyhjICogeDAgKyBzICogeTAsIGMgKiB5MCAtIHMgKiB4MCk7XG4gICAgY29udGV4dC5saW5lVG8oYyAqIHgxICsgcyAqIHkxLCBjICogeTEgLSBzICogeDEpO1xuICAgIGNvbnRleHQubGluZVRvKGMgKiB4MiArIHMgKiB5MiwgYyAqIHkyIC0gcyAqIHgyKTtcbiAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICB9XG59O1xuIiwiaW1wb3J0IGZvcm1hdExvY2FsZSBmcm9tIFwiLi9sb2NhbGVcIjtcblxudmFyIGxvY2FsZTtcbmV4cG9ydCB2YXIgdGltZUZvcm1hdDtcbmV4cG9ydCB2YXIgdGltZVBhcnNlO1xuZXhwb3J0IHZhciB1dGNGb3JtYXQ7XG5leHBvcnQgdmFyIHV0Y1BhcnNlO1xuXG5kZWZhdWx0TG9jYWxlKHtcbiAgZGF0ZVRpbWU6IFwiJXgsICVYXCIsXG4gIGRhdGU6IFwiJS1tLyUtZC8lWVwiLFxuICB0aW1lOiBcIiUtSTolTTolUyAlcFwiLFxuICBwZXJpb2RzOiBbXCJBTVwiLCBcIlBNXCJdLFxuICBkYXlzOiBbXCJTdW5kYXlcIiwgXCJNb25kYXlcIiwgXCJUdWVzZGF5XCIsIFwiV2VkbmVzZGF5XCIsIFwiVGh1cnNkYXlcIiwgXCJGcmlkYXlcIiwgXCJTYXR1cmRheVwiXSxcbiAgc2hvcnREYXlzOiBbXCJTdW5cIiwgXCJNb25cIiwgXCJUdWVcIiwgXCJXZWRcIiwgXCJUaHVcIiwgXCJGcmlcIiwgXCJTYXRcIl0sXG4gIG1vbnRoczogW1wiSmFudWFyeVwiLCBcIkZlYnJ1YXJ5XCIsIFwiTWFyY2hcIiwgXCJBcHJpbFwiLCBcIk1heVwiLCBcIkp1bmVcIiwgXCJKdWx5XCIsIFwiQXVndXN0XCIsIFwiU2VwdGVtYmVyXCIsIFwiT2N0b2JlclwiLCBcIk5vdmVtYmVyXCIsIFwiRGVjZW1iZXJcIl0sXG4gIHNob3J0TW9udGhzOiBbXCJKYW5cIiwgXCJGZWJcIiwgXCJNYXJcIiwgXCJBcHJcIiwgXCJNYXlcIiwgXCJKdW5cIiwgXCJKdWxcIiwgXCJBdWdcIiwgXCJTZXBcIiwgXCJPY3RcIiwgXCJOb3ZcIiwgXCJEZWNcIl1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZWZhdWx0TG9jYWxlKGRlZmluaXRpb24pIHtcbiAgbG9jYWxlID0gZm9ybWF0TG9jYWxlKGRlZmluaXRpb24pO1xuICB0aW1lRm9ybWF0ID0gbG9jYWxlLmZvcm1hdDtcbiAgdGltZVBhcnNlID0gbG9jYWxlLnBhcnNlO1xuICB1dGNGb3JtYXQgPSBsb2NhbGUudXRjRm9ybWF0O1xuICB1dGNQYXJzZSA9IGxvY2FsZS51dGNQYXJzZTtcbiAgcmV0dXJuIGxvY2FsZTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyB0aW1lRm9ybWF0RGVmYXVsdExvY2FsZSwgdGltZUZvcm1hdCwgdGltZVBhcnNlLCB1dGNGb3JtYXQsIHV0Y1BhcnNlfSBmcm9tIFwiLi9kZWZhdWx0TG9jYWxlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdGltZUZvcm1hdExvY2FsZX0gZnJvbSBcIi4vbG9jYWxlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaXNvRm9ybWF0fSBmcm9tIFwiLi9pc29Gb3JtYXRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpc29QYXJzZX0gZnJvbSBcIi4vaXNvUGFyc2VcIjtcbiIsImltcG9ydCB7dXRjRm9ybWF0fSBmcm9tIFwiLi9kZWZhdWx0TG9jYWxlXCI7XG5cbmV4cG9ydCB2YXIgaXNvU3BlY2lmaWVyID0gXCIlWS0lbS0lZFQlSDolTTolUy4lTFpcIjtcblxuZnVuY3Rpb24gZm9ybWF0SXNvTmF0aXZlKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUudG9JU09TdHJpbmcoKTtcbn1cblxudmFyIGZvcm1hdElzbyA9IERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nXG4gICAgPyBmb3JtYXRJc29OYXRpdmVcbiAgICA6IHV0Y0Zvcm1hdChpc29TcGVjaWZpZXIpO1xuXG5leHBvcnQgZGVmYXVsdCBmb3JtYXRJc287XG4iLCJpbXBvcnQge2lzb1NwZWNpZmllcn0gZnJvbSBcIi4vaXNvRm9ybWF0XCI7XG5pbXBvcnQge3V0Y1BhcnNlfSBmcm9tIFwiLi9kZWZhdWx0TG9jYWxlXCI7XG5cbmZ1bmN0aW9uIHBhcnNlSXNvTmF0aXZlKHN0cmluZykge1xuICB2YXIgZGF0ZSA9IG5ldyBEYXRlKHN0cmluZyk7XG4gIHJldHVybiBpc05hTihkYXRlKSA/IG51bGwgOiBkYXRlO1xufVxuXG52YXIgcGFyc2VJc28gPSArbmV3IERhdGUoXCIyMDAwLTAxLTAxVDAwOjAwOjAwLjAwMFpcIilcbiAgICA/IHBhcnNlSXNvTmF0aXZlXG4gICAgOiB1dGNQYXJzZShpc29TcGVjaWZpZXIpO1xuXG5leHBvcnQgZGVmYXVsdCBwYXJzZUlzbztcbiIsImltcG9ydCB7XG4gIHRpbWVEYXksXG4gIHRpbWVTdW5kYXksXG4gIHRpbWVNb25kYXksXG4gIHRpbWVUaHVyc2RheSxcbiAgdGltZVllYXIsXG4gIHV0Y0RheSxcbiAgdXRjU3VuZGF5LFxuICB1dGNNb25kYXksXG4gIHV0Y1RodXJzZGF5LFxuICB1dGNZZWFyXG59IGZyb20gXCJkMy10aW1lXCI7XG5cbmZ1bmN0aW9uIGxvY2FsRGF0ZShkKSB7XG4gIGlmICgwIDw9IGQueSAmJiBkLnkgPCAxMDApIHtcbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKC0xLCBkLm0sIGQuZCwgZC5ILCBkLk0sIGQuUywgZC5MKTtcbiAgICBkYXRlLnNldEZ1bGxZZWFyKGQueSk7XG4gICAgcmV0dXJuIGRhdGU7XG4gIH1cbiAgcmV0dXJuIG5ldyBEYXRlKGQueSwgZC5tLCBkLmQsIGQuSCwgZC5NLCBkLlMsIGQuTCk7XG59XG5cbmZ1bmN0aW9uIHV0Y0RhdGUoZCkge1xuICBpZiAoMCA8PSBkLnkgJiYgZC55IDwgMTAwKSB7XG4gICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShEYXRlLlVUQygtMSwgZC5tLCBkLmQsIGQuSCwgZC5NLCBkLlMsIGQuTCkpO1xuICAgIGRhdGUuc2V0VVRDRnVsbFllYXIoZC55KTtcbiAgICByZXR1cm4gZGF0ZTtcbiAgfVxuICByZXR1cm4gbmV3IERhdGUoRGF0ZS5VVEMoZC55LCBkLm0sIGQuZCwgZC5ILCBkLk0sIGQuUywgZC5MKSk7XG59XG5cbmZ1bmN0aW9uIG5ld1llYXIoeSkge1xuICByZXR1cm4ge3k6IHksIG06IDAsIGQ6IDEsIEg6IDAsIE06IDAsIFM6IDAsIEw6IDB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JtYXRMb2NhbGUobG9jYWxlKSB7XG4gIHZhciBsb2NhbGVfZGF0ZVRpbWUgPSBsb2NhbGUuZGF0ZVRpbWUsXG4gICAgICBsb2NhbGVfZGF0ZSA9IGxvY2FsZS5kYXRlLFxuICAgICAgbG9jYWxlX3RpbWUgPSBsb2NhbGUudGltZSxcbiAgICAgIGxvY2FsZV9wZXJpb2RzID0gbG9jYWxlLnBlcmlvZHMsXG4gICAgICBsb2NhbGVfd2Vla2RheXMgPSBsb2NhbGUuZGF5cyxcbiAgICAgIGxvY2FsZV9zaG9ydFdlZWtkYXlzID0gbG9jYWxlLnNob3J0RGF5cyxcbiAgICAgIGxvY2FsZV9tb250aHMgPSBsb2NhbGUubW9udGhzLFxuICAgICAgbG9jYWxlX3Nob3J0TW9udGhzID0gbG9jYWxlLnNob3J0TW9udGhzO1xuXG4gIHZhciBwZXJpb2RSZSA9IGZvcm1hdFJlKGxvY2FsZV9wZXJpb2RzKSxcbiAgICAgIHBlcmlvZExvb2t1cCA9IGZvcm1hdExvb2t1cChsb2NhbGVfcGVyaW9kcyksXG4gICAgICB3ZWVrZGF5UmUgPSBmb3JtYXRSZShsb2NhbGVfd2Vla2RheXMpLFxuICAgICAgd2Vla2RheUxvb2t1cCA9IGZvcm1hdExvb2t1cChsb2NhbGVfd2Vla2RheXMpLFxuICAgICAgc2hvcnRXZWVrZGF5UmUgPSBmb3JtYXRSZShsb2NhbGVfc2hvcnRXZWVrZGF5cyksXG4gICAgICBzaG9ydFdlZWtkYXlMb29rdXAgPSBmb3JtYXRMb29rdXAobG9jYWxlX3Nob3J0V2Vla2RheXMpLFxuICAgICAgbW9udGhSZSA9IGZvcm1hdFJlKGxvY2FsZV9tb250aHMpLFxuICAgICAgbW9udGhMb29rdXAgPSBmb3JtYXRMb29rdXAobG9jYWxlX21vbnRocyksXG4gICAgICBzaG9ydE1vbnRoUmUgPSBmb3JtYXRSZShsb2NhbGVfc2hvcnRNb250aHMpLFxuICAgICAgc2hvcnRNb250aExvb2t1cCA9IGZvcm1hdExvb2t1cChsb2NhbGVfc2hvcnRNb250aHMpO1xuXG4gIHZhciBmb3JtYXRzID0ge1xuICAgIFwiYVwiOiBmb3JtYXRTaG9ydFdlZWtkYXksXG4gICAgXCJBXCI6IGZvcm1hdFdlZWtkYXksXG4gICAgXCJiXCI6IGZvcm1hdFNob3J0TW9udGgsXG4gICAgXCJCXCI6IGZvcm1hdE1vbnRoLFxuICAgIFwiY1wiOiBudWxsLFxuICAgIFwiZFwiOiBmb3JtYXREYXlPZk1vbnRoLFxuICAgIFwiZVwiOiBmb3JtYXREYXlPZk1vbnRoLFxuICAgIFwiZlwiOiBmb3JtYXRNaWNyb3NlY29uZHMsXG4gICAgXCJIXCI6IGZvcm1hdEhvdXIyNCxcbiAgICBcIklcIjogZm9ybWF0SG91cjEyLFxuICAgIFwialwiOiBmb3JtYXREYXlPZlllYXIsXG4gICAgXCJMXCI6IGZvcm1hdE1pbGxpc2Vjb25kcyxcbiAgICBcIm1cIjogZm9ybWF0TW9udGhOdW1iZXIsXG4gICAgXCJNXCI6IGZvcm1hdE1pbnV0ZXMsXG4gICAgXCJwXCI6IGZvcm1hdFBlcmlvZCxcbiAgICBcIlFcIjogZm9ybWF0VW5peFRpbWVzdGFtcCxcbiAgICBcInNcIjogZm9ybWF0VW5peFRpbWVzdGFtcFNlY29uZHMsXG4gICAgXCJTXCI6IGZvcm1hdFNlY29uZHMsXG4gICAgXCJ1XCI6IGZvcm1hdFdlZWtkYXlOdW1iZXJNb25kYXksXG4gICAgXCJVXCI6IGZvcm1hdFdlZWtOdW1iZXJTdW5kYXksXG4gICAgXCJWXCI6IGZvcm1hdFdlZWtOdW1iZXJJU08sXG4gICAgXCJ3XCI6IGZvcm1hdFdlZWtkYXlOdW1iZXJTdW5kYXksXG4gICAgXCJXXCI6IGZvcm1hdFdlZWtOdW1iZXJNb25kYXksXG4gICAgXCJ4XCI6IG51bGwsXG4gICAgXCJYXCI6IG51bGwsXG4gICAgXCJ5XCI6IGZvcm1hdFllYXIsXG4gICAgXCJZXCI6IGZvcm1hdEZ1bGxZZWFyLFxuICAgIFwiWlwiOiBmb3JtYXRab25lLFxuICAgIFwiJVwiOiBmb3JtYXRMaXRlcmFsUGVyY2VudFxuICB9O1xuXG4gIHZhciB1dGNGb3JtYXRzID0ge1xuICAgIFwiYVwiOiBmb3JtYXRVVENTaG9ydFdlZWtkYXksXG4gICAgXCJBXCI6IGZvcm1hdFVUQ1dlZWtkYXksXG4gICAgXCJiXCI6IGZvcm1hdFVUQ1Nob3J0TW9udGgsXG4gICAgXCJCXCI6IGZvcm1hdFVUQ01vbnRoLFxuICAgIFwiY1wiOiBudWxsLFxuICAgIFwiZFwiOiBmb3JtYXRVVENEYXlPZk1vbnRoLFxuICAgIFwiZVwiOiBmb3JtYXRVVENEYXlPZk1vbnRoLFxuICAgIFwiZlwiOiBmb3JtYXRVVENNaWNyb3NlY29uZHMsXG4gICAgXCJIXCI6IGZvcm1hdFVUQ0hvdXIyNCxcbiAgICBcIklcIjogZm9ybWF0VVRDSG91cjEyLFxuICAgIFwialwiOiBmb3JtYXRVVENEYXlPZlllYXIsXG4gICAgXCJMXCI6IGZvcm1hdFVUQ01pbGxpc2Vjb25kcyxcbiAgICBcIm1cIjogZm9ybWF0VVRDTW9udGhOdW1iZXIsXG4gICAgXCJNXCI6IGZvcm1hdFVUQ01pbnV0ZXMsXG4gICAgXCJwXCI6IGZvcm1hdFVUQ1BlcmlvZCxcbiAgICBcIlFcIjogZm9ybWF0VW5peFRpbWVzdGFtcCxcbiAgICBcInNcIjogZm9ybWF0VW5peFRpbWVzdGFtcFNlY29uZHMsXG4gICAgXCJTXCI6IGZvcm1hdFVUQ1NlY29uZHMsXG4gICAgXCJ1XCI6IGZvcm1hdFVUQ1dlZWtkYXlOdW1iZXJNb25kYXksXG4gICAgXCJVXCI6IGZvcm1hdFVUQ1dlZWtOdW1iZXJTdW5kYXksXG4gICAgXCJWXCI6IGZvcm1hdFVUQ1dlZWtOdW1iZXJJU08sXG4gICAgXCJ3XCI6IGZvcm1hdFVUQ1dlZWtkYXlOdW1iZXJTdW5kYXksXG4gICAgXCJXXCI6IGZvcm1hdFVUQ1dlZWtOdW1iZXJNb25kYXksXG4gICAgXCJ4XCI6IG51bGwsXG4gICAgXCJYXCI6IG51bGwsXG4gICAgXCJ5XCI6IGZvcm1hdFVUQ1llYXIsXG4gICAgXCJZXCI6IGZvcm1hdFVUQ0Z1bGxZZWFyLFxuICAgIFwiWlwiOiBmb3JtYXRVVENab25lLFxuICAgIFwiJVwiOiBmb3JtYXRMaXRlcmFsUGVyY2VudFxuICB9O1xuXG4gIHZhciBwYXJzZXMgPSB7XG4gICAgXCJhXCI6IHBhcnNlU2hvcnRXZWVrZGF5LFxuICAgIFwiQVwiOiBwYXJzZVdlZWtkYXksXG4gICAgXCJiXCI6IHBhcnNlU2hvcnRNb250aCxcbiAgICBcIkJcIjogcGFyc2VNb250aCxcbiAgICBcImNcIjogcGFyc2VMb2NhbGVEYXRlVGltZSxcbiAgICBcImRcIjogcGFyc2VEYXlPZk1vbnRoLFxuICAgIFwiZVwiOiBwYXJzZURheU9mTW9udGgsXG4gICAgXCJmXCI6IHBhcnNlTWljcm9zZWNvbmRzLFxuICAgIFwiSFwiOiBwYXJzZUhvdXIyNCxcbiAgICBcIklcIjogcGFyc2VIb3VyMjQsXG4gICAgXCJqXCI6IHBhcnNlRGF5T2ZZZWFyLFxuICAgIFwiTFwiOiBwYXJzZU1pbGxpc2Vjb25kcyxcbiAgICBcIm1cIjogcGFyc2VNb250aE51bWJlcixcbiAgICBcIk1cIjogcGFyc2VNaW51dGVzLFxuICAgIFwicFwiOiBwYXJzZVBlcmlvZCxcbiAgICBcIlFcIjogcGFyc2VVbml4VGltZXN0YW1wLFxuICAgIFwic1wiOiBwYXJzZVVuaXhUaW1lc3RhbXBTZWNvbmRzLFxuICAgIFwiU1wiOiBwYXJzZVNlY29uZHMsXG4gICAgXCJ1XCI6IHBhcnNlV2Vla2RheU51bWJlck1vbmRheSxcbiAgICBcIlVcIjogcGFyc2VXZWVrTnVtYmVyU3VuZGF5LFxuICAgIFwiVlwiOiBwYXJzZVdlZWtOdW1iZXJJU08sXG4gICAgXCJ3XCI6IHBhcnNlV2Vla2RheU51bWJlclN1bmRheSxcbiAgICBcIldcIjogcGFyc2VXZWVrTnVtYmVyTW9uZGF5LFxuICAgIFwieFwiOiBwYXJzZUxvY2FsZURhdGUsXG4gICAgXCJYXCI6IHBhcnNlTG9jYWxlVGltZSxcbiAgICBcInlcIjogcGFyc2VZZWFyLFxuICAgIFwiWVwiOiBwYXJzZUZ1bGxZZWFyLFxuICAgIFwiWlwiOiBwYXJzZVpvbmUsXG4gICAgXCIlXCI6IHBhcnNlTGl0ZXJhbFBlcmNlbnRcbiAgfTtcblxuICAvLyBUaGVzZSByZWN1cnNpdmUgZGlyZWN0aXZlIGRlZmluaXRpb25zIG11c3QgYmUgZGVmZXJyZWQuXG4gIGZvcm1hdHMueCA9IG5ld0Zvcm1hdChsb2NhbGVfZGF0ZSwgZm9ybWF0cyk7XG4gIGZvcm1hdHMuWCA9IG5ld0Zvcm1hdChsb2NhbGVfdGltZSwgZm9ybWF0cyk7XG4gIGZvcm1hdHMuYyA9IG5ld0Zvcm1hdChsb2NhbGVfZGF0ZVRpbWUsIGZvcm1hdHMpO1xuICB1dGNGb3JtYXRzLnggPSBuZXdGb3JtYXQobG9jYWxlX2RhdGUsIHV0Y0Zvcm1hdHMpO1xuICB1dGNGb3JtYXRzLlggPSBuZXdGb3JtYXQobG9jYWxlX3RpbWUsIHV0Y0Zvcm1hdHMpO1xuICB1dGNGb3JtYXRzLmMgPSBuZXdGb3JtYXQobG9jYWxlX2RhdGVUaW1lLCB1dGNGb3JtYXRzKTtcblxuICBmdW5jdGlvbiBuZXdGb3JtYXQoc3BlY2lmaWVyLCBmb3JtYXRzKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGRhdGUpIHtcbiAgICAgIHZhciBzdHJpbmcgPSBbXSxcbiAgICAgICAgICBpID0gLTEsXG4gICAgICAgICAgaiA9IDAsXG4gICAgICAgICAgbiA9IHNwZWNpZmllci5sZW5ndGgsXG4gICAgICAgICAgYyxcbiAgICAgICAgICBwYWQsXG4gICAgICAgICAgZm9ybWF0O1xuXG4gICAgICBpZiAoIShkYXRlIGluc3RhbmNlb2YgRGF0ZSkpIGRhdGUgPSBuZXcgRGF0ZSgrZGF0ZSk7XG5cbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGlmIChzcGVjaWZpZXIuY2hhckNvZGVBdChpKSA9PT0gMzcpIHtcbiAgICAgICAgICBzdHJpbmcucHVzaChzcGVjaWZpZXIuc2xpY2UoaiwgaSkpO1xuICAgICAgICAgIGlmICgocGFkID0gcGFkc1tjID0gc3BlY2lmaWVyLmNoYXJBdCgrK2kpXSkgIT0gbnVsbCkgYyA9IHNwZWNpZmllci5jaGFyQXQoKytpKTtcbiAgICAgICAgICBlbHNlIHBhZCA9IGMgPT09IFwiZVwiID8gXCIgXCIgOiBcIjBcIjtcbiAgICAgICAgICBpZiAoZm9ybWF0ID0gZm9ybWF0c1tjXSkgYyA9IGZvcm1hdChkYXRlLCBwYWQpO1xuICAgICAgICAgIHN0cmluZy5wdXNoKGMpO1xuICAgICAgICAgIGogPSBpICsgMTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBzdHJpbmcucHVzaChzcGVjaWZpZXIuc2xpY2UoaiwgaSkpO1xuICAgICAgcmV0dXJuIHN0cmluZy5qb2luKFwiXCIpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBuZXdQYXJzZShzcGVjaWZpZXIsIG5ld0RhdGUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgICB2YXIgZCA9IG5ld1llYXIoMTkwMCksXG4gICAgICAgICAgaSA9IHBhcnNlU3BlY2lmaWVyKGQsIHNwZWNpZmllciwgc3RyaW5nICs9IFwiXCIsIDApLFxuICAgICAgICAgIHdlZWssIGRheTtcbiAgICAgIGlmIChpICE9IHN0cmluZy5sZW5ndGgpIHJldHVybiBudWxsO1xuXG4gICAgICAvLyBJZiBhIFVOSVggdGltZXN0YW1wIGlzIHNwZWNpZmllZCwgcmV0dXJuIGl0LlxuICAgICAgaWYgKFwiUVwiIGluIGQpIHJldHVybiBuZXcgRGF0ZShkLlEpO1xuXG4gICAgICAvLyBUaGUgYW0tcG0gZmxhZyBpcyAwIGZvciBBTSwgYW5kIDEgZm9yIFBNLlxuICAgICAgaWYgKFwicFwiIGluIGQpIGQuSCA9IGQuSCAlIDEyICsgZC5wICogMTI7XG5cbiAgICAgIC8vIENvbnZlcnQgZGF5LW9mLXdlZWsgYW5kIHdlZWstb2YteWVhciB0byBkYXktb2YteWVhci5cbiAgICAgIGlmIChcIlZcIiBpbiBkKSB7XG4gICAgICAgIGlmIChkLlYgPCAxIHx8IGQuViA+IDUzKSByZXR1cm4gbnVsbDtcbiAgICAgICAgaWYgKCEoXCJ3XCIgaW4gZCkpIGQudyA9IDE7XG4gICAgICAgIGlmIChcIlpcIiBpbiBkKSB7XG4gICAgICAgICAgd2VlayA9IHV0Y0RhdGUobmV3WWVhcihkLnkpKSwgZGF5ID0gd2Vlay5nZXRVVENEYXkoKTtcbiAgICAgICAgICB3ZWVrID0gZGF5ID4gNCB8fCBkYXkgPT09IDAgPyB1dGNNb25kYXkuY2VpbCh3ZWVrKSA6IHV0Y01vbmRheSh3ZWVrKTtcbiAgICAgICAgICB3ZWVrID0gdXRjRGF5Lm9mZnNldCh3ZWVrLCAoZC5WIC0gMSkgKiA3KTtcbiAgICAgICAgICBkLnkgPSB3ZWVrLmdldFVUQ0Z1bGxZZWFyKCk7XG4gICAgICAgICAgZC5tID0gd2Vlay5nZXRVVENNb250aCgpO1xuICAgICAgICAgIGQuZCA9IHdlZWsuZ2V0VVRDRGF0ZSgpICsgKGQudyArIDYpICUgNztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3ZWVrID0gbmV3RGF0ZShuZXdZZWFyKGQueSkpLCBkYXkgPSB3ZWVrLmdldERheSgpO1xuICAgICAgICAgIHdlZWsgPSBkYXkgPiA0IHx8IGRheSA9PT0gMCA/IHRpbWVNb25kYXkuY2VpbCh3ZWVrKSA6IHRpbWVNb25kYXkod2Vlayk7XG4gICAgICAgICAgd2VlayA9IHRpbWVEYXkub2Zmc2V0KHdlZWssIChkLlYgLSAxKSAqIDcpO1xuICAgICAgICAgIGQueSA9IHdlZWsuZ2V0RnVsbFllYXIoKTtcbiAgICAgICAgICBkLm0gPSB3ZWVrLmdldE1vbnRoKCk7XG4gICAgICAgICAgZC5kID0gd2Vlay5nZXREYXRlKCkgKyAoZC53ICsgNikgJSA3O1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKFwiV1wiIGluIGQgfHwgXCJVXCIgaW4gZCkge1xuICAgICAgICBpZiAoIShcIndcIiBpbiBkKSkgZC53ID0gXCJ1XCIgaW4gZCA/IGQudSAlIDcgOiBcIldcIiBpbiBkID8gMSA6IDA7XG4gICAgICAgIGRheSA9IFwiWlwiIGluIGQgPyB1dGNEYXRlKG5ld1llYXIoZC55KSkuZ2V0VVRDRGF5KCkgOiBuZXdEYXRlKG5ld1llYXIoZC55KSkuZ2V0RGF5KCk7XG4gICAgICAgIGQubSA9IDA7XG4gICAgICAgIGQuZCA9IFwiV1wiIGluIGQgPyAoZC53ICsgNikgJSA3ICsgZC5XICogNyAtIChkYXkgKyA1KSAlIDcgOiBkLncgKyBkLlUgKiA3IC0gKGRheSArIDYpICUgNztcbiAgICAgIH1cblxuICAgICAgLy8gSWYgYSB0aW1lIHpvbmUgaXMgc3BlY2lmaWVkLCBhbGwgZmllbGRzIGFyZSBpbnRlcnByZXRlZCBhcyBVVEMgYW5kIHRoZW5cbiAgICAgIC8vIG9mZnNldCBhY2NvcmRpbmcgdG8gdGhlIHNwZWNpZmllZCB0aW1lIHpvbmUuXG4gICAgICBpZiAoXCJaXCIgaW4gZCkge1xuICAgICAgICBkLkggKz0gZC5aIC8gMTAwIHwgMDtcbiAgICAgICAgZC5NICs9IGQuWiAlIDEwMDtcbiAgICAgICAgcmV0dXJuIHV0Y0RhdGUoZCk7XG4gICAgICB9XG5cbiAgICAgIC8vIE90aGVyd2lzZSwgYWxsIGZpZWxkcyBhcmUgaW4gbG9jYWwgdGltZS5cbiAgICAgIHJldHVybiBuZXdEYXRlKGQpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZVNwZWNpZmllcihkLCBzcGVjaWZpZXIsIHN0cmluZywgaikge1xuICAgIHZhciBpID0gMCxcbiAgICAgICAgbiA9IHNwZWNpZmllci5sZW5ndGgsXG4gICAgICAgIG0gPSBzdHJpbmcubGVuZ3RoLFxuICAgICAgICBjLFxuICAgICAgICBwYXJzZTtcblxuICAgIHdoaWxlIChpIDwgbikge1xuICAgICAgaWYgKGogPj0gbSkgcmV0dXJuIC0xO1xuICAgICAgYyA9IHNwZWNpZmllci5jaGFyQ29kZUF0KGkrKyk7XG4gICAgICBpZiAoYyA9PT0gMzcpIHtcbiAgICAgICAgYyA9IHNwZWNpZmllci5jaGFyQXQoaSsrKTtcbiAgICAgICAgcGFyc2UgPSBwYXJzZXNbYyBpbiBwYWRzID8gc3BlY2lmaWVyLmNoYXJBdChpKyspIDogY107XG4gICAgICAgIGlmICghcGFyc2UgfHwgKChqID0gcGFyc2UoZCwgc3RyaW5nLCBqKSkgPCAwKSkgcmV0dXJuIC0xO1xuICAgICAgfSBlbHNlIGlmIChjICE9IHN0cmluZy5jaGFyQ29kZUF0KGorKykpIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBqO1xuICB9XG5cbiAgZnVuY3Rpb24gcGFyc2VQZXJpb2QoZCwgc3RyaW5nLCBpKSB7XG4gICAgdmFyIG4gPSBwZXJpb2RSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gICAgcmV0dXJuIG4gPyAoZC5wID0gcGVyaW9kTG9va3VwW25bMF0udG9Mb3dlckNhc2UoKV0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlU2hvcnRXZWVrZGF5KGQsIHN0cmluZywgaSkge1xuICAgIHZhciBuID0gc2hvcnRXZWVrZGF5UmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICAgIHJldHVybiBuID8gKGQudyA9IHNob3J0V2Vla2RheUxvb2t1cFtuWzBdLnRvTG93ZXJDYXNlKCldLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZVdlZWtkYXkoZCwgc3RyaW5nLCBpKSB7XG4gICAgdmFyIG4gPSB3ZWVrZGF5UmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICAgIHJldHVybiBuID8gKGQudyA9IHdlZWtkYXlMb29rdXBbblswXS50b0xvd2VyQ2FzZSgpXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG5cbiAgZnVuY3Rpb24gcGFyc2VTaG9ydE1vbnRoKGQsIHN0cmluZywgaSkge1xuICAgIHZhciBuID0gc2hvcnRNb250aFJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgICByZXR1cm4gbiA/IChkLm0gPSBzaG9ydE1vbnRoTG9va3VwW25bMF0udG9Mb3dlckNhc2UoKV0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlTW9udGgoZCwgc3RyaW5nLCBpKSB7XG4gICAgdmFyIG4gPSBtb250aFJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgICByZXR1cm4gbiA/IChkLm0gPSBtb250aExvb2t1cFtuWzBdLnRvTG93ZXJDYXNlKCldLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZUxvY2FsZURhdGVUaW1lKGQsIHN0cmluZywgaSkge1xuICAgIHJldHVybiBwYXJzZVNwZWNpZmllcihkLCBsb2NhbGVfZGF0ZVRpbWUsIHN0cmluZywgaSk7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZUxvY2FsZURhdGUoZCwgc3RyaW5nLCBpKSB7XG4gICAgcmV0dXJuIHBhcnNlU3BlY2lmaWVyKGQsIGxvY2FsZV9kYXRlLCBzdHJpbmcsIGkpO1xuICB9XG5cbiAgZnVuY3Rpb24gcGFyc2VMb2NhbGVUaW1lKGQsIHN0cmluZywgaSkge1xuICAgIHJldHVybiBwYXJzZVNwZWNpZmllcihkLCBsb2NhbGVfdGltZSwgc3RyaW5nLCBpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFNob3J0V2Vla2RheShkKSB7XG4gICAgcmV0dXJuIGxvY2FsZV9zaG9ydFdlZWtkYXlzW2QuZ2V0RGF5KCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0V2Vla2RheShkKSB7XG4gICAgcmV0dXJuIGxvY2FsZV93ZWVrZGF5c1tkLmdldERheSgpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFNob3J0TW9udGgoZCkge1xuICAgIHJldHVybiBsb2NhbGVfc2hvcnRNb250aHNbZC5nZXRNb250aCgpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdE1vbnRoKGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX21vbnRoc1tkLmdldE1vbnRoKCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0UGVyaW9kKGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX3BlcmlvZHNbKyhkLmdldEhvdXJzKCkgPj0gMTIpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFVUQ1Nob3J0V2Vla2RheShkKSB7XG4gICAgcmV0dXJuIGxvY2FsZV9zaG9ydFdlZWtkYXlzW2QuZ2V0VVRDRGF5KCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0VVRDV2Vla2RheShkKSB7XG4gICAgcmV0dXJuIGxvY2FsZV93ZWVrZGF5c1tkLmdldFVUQ0RheSgpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFVUQ1Nob3J0TW9udGgoZCkge1xuICAgIHJldHVybiBsb2NhbGVfc2hvcnRNb250aHNbZC5nZXRVVENNb250aCgpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFVUQ01vbnRoKGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX21vbnRoc1tkLmdldFVUQ01vbnRoKCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0VVRDUGVyaW9kKGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX3BlcmlvZHNbKyhkLmdldFVUQ0hvdXJzKCkgPj0gMTIpXTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZm9ybWF0OiBmdW5jdGlvbihzcGVjaWZpZXIpIHtcbiAgICAgIHZhciBmID0gbmV3Rm9ybWF0KHNwZWNpZmllciArPSBcIlwiLCBmb3JtYXRzKTtcbiAgICAgIGYudG9TdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHNwZWNpZmllcjsgfTtcbiAgICAgIHJldHVybiBmO1xuICAgIH0sXG4gICAgcGFyc2U6IGZ1bmN0aW9uKHNwZWNpZmllcikge1xuICAgICAgdmFyIHAgPSBuZXdQYXJzZShzcGVjaWZpZXIgKz0gXCJcIiwgbG9jYWxEYXRlKTtcbiAgICAgIHAudG9TdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHNwZWNpZmllcjsgfTtcbiAgICAgIHJldHVybiBwO1xuICAgIH0sXG4gICAgdXRjRm9ybWF0OiBmdW5jdGlvbihzcGVjaWZpZXIpIHtcbiAgICAgIHZhciBmID0gbmV3Rm9ybWF0KHNwZWNpZmllciArPSBcIlwiLCB1dGNGb3JtYXRzKTtcbiAgICAgIGYudG9TdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHNwZWNpZmllcjsgfTtcbiAgICAgIHJldHVybiBmO1xuICAgIH0sXG4gICAgdXRjUGFyc2U6IGZ1bmN0aW9uKHNwZWNpZmllcikge1xuICAgICAgdmFyIHAgPSBuZXdQYXJzZShzcGVjaWZpZXIsIHV0Y0RhdGUpO1xuICAgICAgcC50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gc3BlY2lmaWVyOyB9O1xuICAgICAgcmV0dXJuIHA7XG4gICAgfVxuICB9O1xufVxuXG52YXIgcGFkcyA9IHtcIi1cIjogXCJcIiwgXCJfXCI6IFwiIFwiLCBcIjBcIjogXCIwXCJ9LFxuICAgIG51bWJlclJlID0gL15cXHMqXFxkKy8sIC8vIG5vdGU6IGlnbm9yZXMgbmV4dCBkaXJlY3RpdmVcbiAgICBwZXJjZW50UmUgPSAvXiUvLFxuICAgIHJlcXVvdGVSZSA9IC9bXFxcXF4kKis/fFtcXF0oKS57fV0vZztcblxuZnVuY3Rpb24gcGFkKHZhbHVlLCBmaWxsLCB3aWR0aCkge1xuICB2YXIgc2lnbiA9IHZhbHVlIDwgMCA/IFwiLVwiIDogXCJcIixcbiAgICAgIHN0cmluZyA9IChzaWduID8gLXZhbHVlIDogdmFsdWUpICsgXCJcIixcbiAgICAgIGxlbmd0aCA9IHN0cmluZy5sZW5ndGg7XG4gIHJldHVybiBzaWduICsgKGxlbmd0aCA8IHdpZHRoID8gbmV3IEFycmF5KHdpZHRoIC0gbGVuZ3RoICsgMSkuam9pbihmaWxsKSArIHN0cmluZyA6IHN0cmluZyk7XG59XG5cbmZ1bmN0aW9uIHJlcXVvdGUocykge1xuICByZXR1cm4gcy5yZXBsYWNlKHJlcXVvdGVSZSwgXCJcXFxcJCZcIik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFJlKG5hbWVzKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKFwiXig/OlwiICsgbmFtZXMubWFwKHJlcXVvdGUpLmpvaW4oXCJ8XCIpICsgXCIpXCIsIFwiaVwiKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0TG9va3VwKG5hbWVzKSB7XG4gIHZhciBtYXAgPSB7fSwgaSA9IC0xLCBuID0gbmFtZXMubGVuZ3RoO1xuICB3aGlsZSAoKytpIDwgbikgbWFwW25hbWVzW2ldLnRvTG93ZXJDYXNlKCldID0gaTtcbiAgcmV0dXJuIG1hcDtcbn1cblxuZnVuY3Rpb24gcGFyc2VXZWVrZGF5TnVtYmVyU3VuZGF5KGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAxKSk7XG4gIHJldHVybiBuID8gKGQudyA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlV2Vla2RheU51bWJlck1vbmRheShkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMSkpO1xuICByZXR1cm4gbiA/IChkLnUgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZVdlZWtOdW1iZXJTdW5kYXkoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgcmV0dXJuIG4gPyAoZC5VID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VXZWVrTnVtYmVySVNPKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gIHJldHVybiBuID8gKGQuViA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlV2Vla051bWJlck1vbmRheShkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICByZXR1cm4gbiA/IChkLlcgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZUZ1bGxZZWFyKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyA0KSk7XG4gIHJldHVybiBuID8gKGQueSA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlWWVhcihkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICByZXR1cm4gbiA/IChkLnkgPSArblswXSArICgrblswXSA+IDY4ID8gMTkwMCA6IDIwMDApLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlWm9uZShkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSAvXihaKXwoWystXVxcZFxcZCkoPzo6PyhcXGRcXGQpKT8vLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyA2KSk7XG4gIHJldHVybiBuID8gKGQuWiA9IG5bMV0gPyAwIDogLShuWzJdICsgKG5bM10gfHwgXCIwMFwiKSksIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VNb250aE51bWJlcihkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICByZXR1cm4gbiA/IChkLm0gPSBuWzBdIC0gMSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZURheU9mTW9udGgoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgcmV0dXJuIG4gPyAoZC5kID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VEYXlPZlllYXIoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDMpKTtcbiAgcmV0dXJuIG4gPyAoZC5tID0gMCwgZC5kID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VIb3VyMjQoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgcmV0dXJuIG4gPyAoZC5IID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VNaW51dGVzKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gIHJldHVybiBuID8gKGQuTSA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlU2Vjb25kcyhkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICByZXR1cm4gbiA/IChkLlMgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZU1pbGxpc2Vjb25kcyhkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMykpO1xuICByZXR1cm4gbiA/IChkLkwgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZU1pY3Jvc2Vjb25kcyhkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgNikpO1xuICByZXR1cm4gbiA/IChkLkwgPSBNYXRoLmZsb29yKG5bMF0gLyAxMDAwKSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZUxpdGVyYWxQZXJjZW50KGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IHBlcmNlbnRSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMSkpO1xuICByZXR1cm4gbiA/IGkgKyBuWzBdLmxlbmd0aCA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZVVuaXhUaW1lc3RhbXAoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICByZXR1cm4gbiA/IChkLlEgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZVVuaXhUaW1lc3RhbXBTZWNvbmRzKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgcmV0dXJuIG4gPyAoZC5RID0gKCtuWzBdKSAqIDEwMDAsIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0RGF5T2ZNb250aChkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXREYXRlKCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRIb3VyMjQoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0SG91cnMoKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdEhvdXIxMihkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRIb3VycygpICUgMTIgfHwgMTIsIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXREYXlPZlllYXIoZCwgcCkge1xuICByZXR1cm4gcGFkKDEgKyB0aW1lRGF5LmNvdW50KHRpbWVZZWFyKGQpLCBkKSwgcCwgMyk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdE1pbGxpc2Vjb25kcyhkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRNaWxsaXNlY29uZHMoKSwgcCwgMyk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdE1pY3Jvc2Vjb25kcyhkLCBwKSB7XG4gIHJldHVybiBmb3JtYXRNaWxsaXNlY29uZHMoZCwgcCkgKyBcIjAwMFwiO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRNb250aE51bWJlcihkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRNb250aCgpICsgMSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdE1pbnV0ZXMoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0TWludXRlcygpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0U2Vjb25kcyhkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRTZWNvbmRzKCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRXZWVrZGF5TnVtYmVyTW9uZGF5KGQpIHtcbiAgdmFyIGRheSA9IGQuZ2V0RGF5KCk7XG4gIHJldHVybiBkYXkgPT09IDAgPyA3IDogZGF5O1xufVxuXG5mdW5jdGlvbiBmb3JtYXRXZWVrTnVtYmVyU3VuZGF5KGQsIHApIHtcbiAgcmV0dXJuIHBhZCh0aW1lU3VuZGF5LmNvdW50KHRpbWVZZWFyKGQpLCBkKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFdlZWtOdW1iZXJJU08oZCwgcCkge1xuICB2YXIgZGF5ID0gZC5nZXREYXkoKTtcbiAgZCA9IChkYXkgPj0gNCB8fCBkYXkgPT09IDApID8gdGltZVRodXJzZGF5KGQpIDogdGltZVRodXJzZGF5LmNlaWwoZCk7XG4gIHJldHVybiBwYWQodGltZVRodXJzZGF5LmNvdW50KHRpbWVZZWFyKGQpLCBkKSArICh0aW1lWWVhcihkKS5nZXREYXkoKSA9PT0gNCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRXZWVrZGF5TnVtYmVyU3VuZGF5KGQpIHtcbiAgcmV0dXJuIGQuZ2V0RGF5KCk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFdlZWtOdW1iZXJNb25kYXkoZCwgcCkge1xuICByZXR1cm4gcGFkKHRpbWVNb25kYXkuY291bnQodGltZVllYXIoZCksIGQpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0WWVhcihkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRGdWxsWWVhcigpICUgMTAwLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0RnVsbFllYXIoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0RnVsbFllYXIoKSAlIDEwMDAwLCBwLCA0KTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0Wm9uZShkKSB7XG4gIHZhciB6ID0gZC5nZXRUaW1lem9uZU9mZnNldCgpO1xuICByZXR1cm4gKHogPiAwID8gXCItXCIgOiAoeiAqPSAtMSwgXCIrXCIpKVxuICAgICAgKyBwYWQoeiAvIDYwIHwgMCwgXCIwXCIsIDIpXG4gICAgICArIHBhZCh6ICUgNjAsIFwiMFwiLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDRGF5T2ZNb250aChkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRVVENEYXRlKCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENIb3VyMjQoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0VVRDSG91cnMoKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ0hvdXIxMihkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRVVENIb3VycygpICUgMTIgfHwgMTIsIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENEYXlPZlllYXIoZCwgcCkge1xuICByZXR1cm4gcGFkKDEgKyB1dGNEYXkuY291bnQodXRjWWVhcihkKSwgZCksIHAsIDMpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENNaWxsaXNlY29uZHMoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0VVRDTWlsbGlzZWNvbmRzKCksIHAsIDMpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENNaWNyb3NlY29uZHMoZCwgcCkge1xuICByZXR1cm4gZm9ybWF0VVRDTWlsbGlzZWNvbmRzKGQsIHApICsgXCIwMDBcIjtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDTW9udGhOdW1iZXIoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0VVRDTW9udGgoKSArIDEsIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENNaW51dGVzKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldFVUQ01pbnV0ZXMoKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1NlY29uZHMoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0VVRDU2Vjb25kcygpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDV2Vla2RheU51bWJlck1vbmRheShkKSB7XG4gIHZhciBkb3cgPSBkLmdldFVUQ0RheSgpO1xuICByZXR1cm4gZG93ID09PSAwID8gNyA6IGRvdztcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDV2Vla051bWJlclN1bmRheShkLCBwKSB7XG4gIHJldHVybiBwYWQodXRjU3VuZGF5LmNvdW50KHV0Y1llYXIoZCksIGQpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDV2Vla051bWJlcklTTyhkLCBwKSB7XG4gIHZhciBkYXkgPSBkLmdldFVUQ0RheSgpO1xuICBkID0gKGRheSA+PSA0IHx8IGRheSA9PT0gMCkgPyB1dGNUaHVyc2RheShkKSA6IHV0Y1RodXJzZGF5LmNlaWwoZCk7XG4gIHJldHVybiBwYWQodXRjVGh1cnNkYXkuY291bnQodXRjWWVhcihkKSwgZCkgKyAodXRjWWVhcihkKS5nZXRVVENEYXkoKSA9PT0gNCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENXZWVrZGF5TnVtYmVyU3VuZGF5KGQpIHtcbiAgcmV0dXJuIGQuZ2V0VVRDRGF5KCk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1dlZWtOdW1iZXJNb25kYXkoZCwgcCkge1xuICByZXR1cm4gcGFkKHV0Y01vbmRheS5jb3VudCh1dGNZZWFyKGQpLCBkKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1llYXIoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0VVRDRnVsbFllYXIoKSAlIDEwMCwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ0Z1bGxZZWFyKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldFVUQ0Z1bGxZZWFyKCkgJSAxMDAwMCwgcCwgNCk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1pvbmUoKSB7XG4gIHJldHVybiBcIiswMDAwXCI7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdExpdGVyYWxQZXJjZW50KCkge1xuICByZXR1cm4gXCIlXCI7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVuaXhUaW1lc3RhbXAoZCkge1xuICByZXR1cm4gK2Q7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVuaXhUaW1lc3RhbXBTZWNvbmRzKGQpIHtcbiAgcmV0dXJuIE1hdGguZmxvb3IoK2QgLyAxMDAwKTtcbn1cbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuaW1wb3J0IHtkdXJhdGlvbkRheSwgZHVyYXRpb25NaW51dGV9IGZyb20gXCIuL2R1cmF0aW9uXCI7XG5cbnZhciBkYXkgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gKGVuZCAtIHN0YXJ0IC0gKGVuZC5nZXRUaW1lem9uZU9mZnNldCgpIC0gc3RhcnQuZ2V0VGltZXpvbmVPZmZzZXQoKSkgKiBkdXJhdGlvbk1pbnV0ZSkgLyBkdXJhdGlvbkRheTtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0RGF0ZSgpIC0gMTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBkYXk7XG5leHBvcnQgdmFyIGRheXMgPSBkYXkucmFuZ2U7XG4iLCJleHBvcnQgdmFyIGR1cmF0aW9uU2Vjb25kID0gMWUzO1xuZXhwb3J0IHZhciBkdXJhdGlvbk1pbnV0ZSA9IDZlNDtcbmV4cG9ydCB2YXIgZHVyYXRpb25Ib3VyID0gMzZlNTtcbmV4cG9ydCB2YXIgZHVyYXRpb25EYXkgPSA4NjRlNTtcbmV4cG9ydCB2YXIgZHVyYXRpb25XZWVrID0gNjA0OGU1O1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5pbXBvcnQge2R1cmF0aW9uSG91ciwgZHVyYXRpb25NaW51dGUsIGR1cmF0aW9uU2Vjb25kfSBmcm9tIFwiLi9kdXJhdGlvblwiO1xuXG52YXIgaG91ciA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRUaW1lKGRhdGUgLSBkYXRlLmdldE1pbGxpc2Vjb25kcygpIC0gZGF0ZS5nZXRTZWNvbmRzKCkgKiBkdXJhdGlvblNlY29uZCAtIGRhdGUuZ2V0TWludXRlcygpICogZHVyYXRpb25NaW51dGUpO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogZHVyYXRpb25Ib3VyKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBkdXJhdGlvbkhvdXI7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldEhvdXJzKCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgaG91cjtcbmV4cG9ydCB2YXIgaG91cnMgPSBob3VyLnJhbmdlO1xuIiwiZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB0aW1lSW50ZXJ2YWxcbn0gZnJvbSBcIi4vaW50ZXJ2YWxcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB0aW1lTWlsbGlzZWNvbmQsXG4gIG1pbGxpc2Vjb25kcyBhcyB0aW1lTWlsbGlzZWNvbmRzLFxuICBkZWZhdWx0IGFzIHV0Y01pbGxpc2Vjb25kLFxuICBtaWxsaXNlY29uZHMgYXMgdXRjTWlsbGlzZWNvbmRzXG59IGZyb20gXCIuL21pbGxpc2Vjb25kXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgdGltZVNlY29uZCxcbiAgc2Vjb25kcyBhcyB0aW1lU2Vjb25kcyxcbiAgZGVmYXVsdCBhcyB1dGNTZWNvbmQsXG4gIHNlY29uZHMgYXMgdXRjU2Vjb25kc1xufSBmcm9tIFwiLi9zZWNvbmRcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB0aW1lTWludXRlLFxuICBtaW51dGVzIGFzIHRpbWVNaW51dGVzXG59IGZyb20gXCIuL21pbnV0ZVwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVIb3VyLFxuICBob3VycyBhcyB0aW1lSG91cnNcbn0gZnJvbSBcIi4vaG91clwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVEYXksXG4gIGRheXMgYXMgdGltZURheXNcbn0gZnJvbSBcIi4vZGF5XCI7XG5cbmV4cG9ydCB7XG4gIHN1bmRheSBhcyB0aW1lV2VlayxcbiAgc3VuZGF5cyBhcyB0aW1lV2Vla3MsXG4gIHN1bmRheSBhcyB0aW1lU3VuZGF5LFxuICBzdW5kYXlzIGFzIHRpbWVTdW5kYXlzLFxuICBtb25kYXkgYXMgdGltZU1vbmRheSxcbiAgbW9uZGF5cyBhcyB0aW1lTW9uZGF5cyxcbiAgdHVlc2RheSBhcyB0aW1lVHVlc2RheSxcbiAgdHVlc2RheXMgYXMgdGltZVR1ZXNkYXlzLFxuICB3ZWRuZXNkYXkgYXMgdGltZVdlZG5lc2RheSxcbiAgd2VkbmVzZGF5cyBhcyB0aW1lV2VkbmVzZGF5cyxcbiAgdGh1cnNkYXkgYXMgdGltZVRodXJzZGF5LFxuICB0aHVyc2RheXMgYXMgdGltZVRodXJzZGF5cyxcbiAgZnJpZGF5IGFzIHRpbWVGcmlkYXksXG4gIGZyaWRheXMgYXMgdGltZUZyaWRheXMsXG4gIHNhdHVyZGF5IGFzIHRpbWVTYXR1cmRheSxcbiAgc2F0dXJkYXlzIGFzIHRpbWVTYXR1cmRheXNcbn0gZnJvbSBcIi4vd2Vla1wiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVNb250aCxcbiAgbW9udGhzIGFzIHRpbWVNb250aHNcbn0gZnJvbSBcIi4vbW9udGhcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB0aW1lWWVhcixcbiAgeWVhcnMgYXMgdGltZVllYXJzXG59IGZyb20gXCIuL3llYXJcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB1dGNNaW51dGUsXG4gIHV0Y01pbnV0ZXMgYXMgdXRjTWludXRlc1xufSBmcm9tIFwiLi91dGNNaW51dGVcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB1dGNIb3VyLFxuICB1dGNIb3VycyBhcyB1dGNIb3Vyc1xufSBmcm9tIFwiLi91dGNIb3VyXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgdXRjRGF5LFxuICB1dGNEYXlzIGFzIHV0Y0RheXNcbn0gZnJvbSBcIi4vdXRjRGF5XCI7XG5cbmV4cG9ydCB7XG4gIHV0Y1N1bmRheSBhcyB1dGNXZWVrLFxuICB1dGNTdW5kYXlzIGFzIHV0Y1dlZWtzLFxuICB1dGNTdW5kYXkgYXMgdXRjU3VuZGF5LFxuICB1dGNTdW5kYXlzIGFzIHV0Y1N1bmRheXMsXG4gIHV0Y01vbmRheSBhcyB1dGNNb25kYXksXG4gIHV0Y01vbmRheXMgYXMgdXRjTW9uZGF5cyxcbiAgdXRjVHVlc2RheSBhcyB1dGNUdWVzZGF5LFxuICB1dGNUdWVzZGF5cyBhcyB1dGNUdWVzZGF5cyxcbiAgdXRjV2VkbmVzZGF5IGFzIHV0Y1dlZG5lc2RheSxcbiAgdXRjV2VkbmVzZGF5cyBhcyB1dGNXZWRuZXNkYXlzLFxuICB1dGNUaHVyc2RheSBhcyB1dGNUaHVyc2RheSxcbiAgdXRjVGh1cnNkYXlzIGFzIHV0Y1RodXJzZGF5cyxcbiAgdXRjRnJpZGF5IGFzIHV0Y0ZyaWRheSxcbiAgdXRjRnJpZGF5cyBhcyB1dGNGcmlkYXlzLFxuICB1dGNTYXR1cmRheSBhcyB1dGNTYXR1cmRheSxcbiAgdXRjU2F0dXJkYXlzIGFzIHV0Y1NhdHVyZGF5c1xufSBmcm9tIFwiLi91dGNXZWVrXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgdXRjTW9udGgsXG4gIHV0Y01vbnRocyBhcyB1dGNNb250aHNcbn0gZnJvbSBcIi4vdXRjTW9udGhcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB1dGNZZWFyLFxuICB1dGNZZWFycyBhcyB1dGNZZWFyc1xufSBmcm9tIFwiLi91dGNZZWFyXCI7XG4iLCJ2YXIgdDAgPSBuZXcgRGF0ZSxcbiAgICB0MSA9IG5ldyBEYXRlO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBuZXdJbnRlcnZhbChmbG9vcmksIG9mZnNldGksIGNvdW50LCBmaWVsZCkge1xuXG4gIGZ1bmN0aW9uIGludGVydmFsKGRhdGUpIHtcbiAgICByZXR1cm4gZmxvb3JpKGRhdGUgPSBuZXcgRGF0ZSgrZGF0ZSkpLCBkYXRlO1xuICB9XG5cbiAgaW50ZXJ2YWwuZmxvb3IgPSBpbnRlcnZhbDtcblxuICBpbnRlcnZhbC5jZWlsID0gZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBmbG9vcmkoZGF0ZSA9IG5ldyBEYXRlKGRhdGUgLSAxKSksIG9mZnNldGkoZGF0ZSwgMSksIGZsb29yaShkYXRlKSwgZGF0ZTtcbiAgfTtcblxuICBpbnRlcnZhbC5yb3VuZCA9IGZ1bmN0aW9uKGRhdGUpIHtcbiAgICB2YXIgZDAgPSBpbnRlcnZhbChkYXRlKSxcbiAgICAgICAgZDEgPSBpbnRlcnZhbC5jZWlsKGRhdGUpO1xuICAgIHJldHVybiBkYXRlIC0gZDAgPCBkMSAtIGRhdGUgPyBkMCA6IGQxO1xuICB9O1xuXG4gIGludGVydmFsLm9mZnNldCA9IGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICByZXR1cm4gb2Zmc2V0aShkYXRlID0gbmV3IERhdGUoK2RhdGUpLCBzdGVwID09IG51bGwgPyAxIDogTWF0aC5mbG9vcihzdGVwKSksIGRhdGU7XG4gIH07XG5cbiAgaW50ZXJ2YWwucmFuZ2UgPSBmdW5jdGlvbihzdGFydCwgc3RvcCwgc3RlcCkge1xuICAgIHZhciByYW5nZSA9IFtdLCBwcmV2aW91cztcbiAgICBzdGFydCA9IGludGVydmFsLmNlaWwoc3RhcnQpO1xuICAgIHN0ZXAgPSBzdGVwID09IG51bGwgPyAxIDogTWF0aC5mbG9vcihzdGVwKTtcbiAgICBpZiAoIShzdGFydCA8IHN0b3ApIHx8ICEoc3RlcCA+IDApKSByZXR1cm4gcmFuZ2U7IC8vIGFsc28gaGFuZGxlcyBJbnZhbGlkIERhdGVcbiAgICBkbyByYW5nZS5wdXNoKHByZXZpb3VzID0gbmV3IERhdGUoK3N0YXJ0KSksIG9mZnNldGkoc3RhcnQsIHN0ZXApLCBmbG9vcmkoc3RhcnQpO1xuICAgIHdoaWxlIChwcmV2aW91cyA8IHN0YXJ0ICYmIHN0YXJ0IDwgc3RvcCk7XG4gICAgcmV0dXJuIHJhbmdlO1xuICB9O1xuXG4gIGludGVydmFsLmZpbHRlciA9IGZ1bmN0aW9uKHRlc3QpIHtcbiAgICByZXR1cm4gbmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgaWYgKGRhdGUgPj0gZGF0ZSkgd2hpbGUgKGZsb29yaShkYXRlKSwgIXRlc3QoZGF0ZSkpIGRhdGUuc2V0VGltZShkYXRlIC0gMSk7XG4gICAgfSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgICAgaWYgKGRhdGUgPj0gZGF0ZSkge1xuICAgICAgICBpZiAoc3RlcCA8IDApIHdoaWxlICgrK3N0ZXAgPD0gMCkge1xuICAgICAgICAgIHdoaWxlIChvZmZzZXRpKGRhdGUsIC0xKSwgIXRlc3QoZGF0ZSkpIHt9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZW1wdHlcbiAgICAgICAgfSBlbHNlIHdoaWxlICgtLXN0ZXAgPj0gMCkge1xuICAgICAgICAgIHdoaWxlIChvZmZzZXRpKGRhdGUsICsxKSwgIXRlc3QoZGF0ZSkpIHt9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZW1wdHlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIGlmIChjb3VudCkge1xuICAgIGludGVydmFsLmNvdW50ID0gZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgICAgdDAuc2V0VGltZSgrc3RhcnQpLCB0MS5zZXRUaW1lKCtlbmQpO1xuICAgICAgZmxvb3JpKHQwKSwgZmxvb3JpKHQxKTtcbiAgICAgIHJldHVybiBNYXRoLmZsb29yKGNvdW50KHQwLCB0MSkpO1xuICAgIH07XG5cbiAgICBpbnRlcnZhbC5ldmVyeSA9IGZ1bmN0aW9uKHN0ZXApIHtcbiAgICAgIHN0ZXAgPSBNYXRoLmZsb29yKHN0ZXApO1xuICAgICAgcmV0dXJuICFpc0Zpbml0ZShzdGVwKSB8fCAhKHN0ZXAgPiAwKSA/IG51bGxcbiAgICAgICAgICA6ICEoc3RlcCA+IDEpID8gaW50ZXJ2YWxcbiAgICAgICAgICA6IGludGVydmFsLmZpbHRlcihmaWVsZFxuICAgICAgICAgICAgICA/IGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGZpZWxkKGQpICUgc3RlcCA9PT0gMDsgfVxuICAgICAgICAgICAgICA6IGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGludGVydmFsLmNvdW50KDAsIGQpICUgc3RlcCA9PT0gMDsgfSk7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBpbnRlcnZhbDtcbn1cbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuXG52YXIgbWlsbGlzZWNvbmQgPSBpbnRlcnZhbChmdW5jdGlvbigpIHtcbiAgLy8gbm9vcFxufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIGVuZCAtIHN0YXJ0O1xufSk7XG5cbi8vIEFuIG9wdGltaXplZCBpbXBsZW1lbnRhdGlvbiBmb3IgdGhpcyBzaW1wbGUgY2FzZS5cbm1pbGxpc2Vjb25kLmV2ZXJ5ID0gZnVuY3Rpb24oaykge1xuICBrID0gTWF0aC5mbG9vcihrKTtcbiAgaWYgKCFpc0Zpbml0ZShrKSB8fCAhKGsgPiAwKSkgcmV0dXJuIG51bGw7XG4gIGlmICghKGsgPiAxKSkgcmV0dXJuIG1pbGxpc2Vjb25kO1xuICByZXR1cm4gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIGRhdGUuc2V0VGltZShNYXRoLmZsb29yKGRhdGUgLyBrKSAqIGspO1xuICB9LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gICAgZGF0ZS5zZXRUaW1lKCtkYXRlICsgc3RlcCAqIGspO1xuICB9LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gICAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBrO1xuICB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1pbGxpc2Vjb25kO1xuZXhwb3J0IHZhciBtaWxsaXNlY29uZHMgPSBtaWxsaXNlY29uZC5yYW5nZTtcbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuaW1wb3J0IHtkdXJhdGlvbk1pbnV0ZSwgZHVyYXRpb25TZWNvbmR9IGZyb20gXCIuL2R1cmF0aW9uXCI7XG5cbnZhciBtaW51dGUgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VGltZShkYXRlIC0gZGF0ZS5nZXRNaWxsaXNlY29uZHMoKSAtIGRhdGUuZ2V0U2Vjb25kcygpICogZHVyYXRpb25TZWNvbmQpO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogZHVyYXRpb25NaW51dGUpO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uTWludXRlO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRNaW51dGVzKCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgbWludXRlO1xuZXhwb3J0IHZhciBtaW51dGVzID0gbWludXRlLnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5cbnZhciBtb250aCA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXREYXRlKDEpO1xuICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldE1vbnRoKGRhdGUuZ2V0TW9udGgoKSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gZW5kLmdldE1vbnRoKCkgLSBzdGFydC5nZXRNb250aCgpICsgKGVuZC5nZXRGdWxsWWVhcigpIC0gc3RhcnQuZ2V0RnVsbFllYXIoKSkgKiAxMjtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0TW9udGgoKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBtb250aDtcbmV4cG9ydCB2YXIgbW9udGhzID0gbW9udGgucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcbmltcG9ydCB7ZHVyYXRpb25TZWNvbmR9IGZyb20gXCIuL2R1cmF0aW9uXCI7XG5cbnZhciBzZWNvbmQgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VGltZShkYXRlIC0gZGF0ZS5nZXRNaWxsaXNlY29uZHMoKSk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXAgKiBkdXJhdGlvblNlY29uZCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25TZWNvbmQ7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFVUQ1NlY29uZHMoKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBzZWNvbmQ7XG5leHBvcnQgdmFyIHNlY29uZHMgPSBzZWNvbmQucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcbmltcG9ydCB7ZHVyYXRpb25EYXl9IGZyb20gXCIuL2R1cmF0aW9uXCI7XG5cbnZhciB1dGNEYXkgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VVRDRGF0ZShkYXRlLmdldFVUQ0RhdGUoKSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uRGF5O1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRVVENEYXRlKCkgLSAxO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHV0Y0RheTtcbmV4cG9ydCB2YXIgdXRjRGF5cyA9IHV0Y0RheS5yYW5nZTtcbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuaW1wb3J0IHtkdXJhdGlvbkhvdXJ9IGZyb20gXCIuL2R1cmF0aW9uXCI7XG5cbnZhciB1dGNIb3VyID0gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldFVUQ01pbnV0ZXMoMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXAgKiBkdXJhdGlvbkhvdXIpO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uSG91cjtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0VVRDSG91cnMoKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB1dGNIb3VyO1xuZXhwb3J0IHZhciB1dGNIb3VycyA9IHV0Y0hvdXIucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcbmltcG9ydCB7ZHVyYXRpb25NaW51dGV9IGZyb20gXCIuL2R1cmF0aW9uXCI7XG5cbnZhciB1dGNNaW51dGUgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VVRDU2Vjb25kcygwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRUaW1lKCtkYXRlICsgc3RlcCAqIGR1cmF0aW9uTWludXRlKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBkdXJhdGlvbk1pbnV0ZTtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0VVRDTWludXRlcygpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHV0Y01pbnV0ZTtcbmV4cG9ydCB2YXIgdXRjTWludXRlcyA9IHV0Y01pbnV0ZS5yYW5nZTtcbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuXG52YXIgdXRjTW9udGggPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VVRDRGF0ZSgxKTtcbiAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRVVENNb250aChkYXRlLmdldFVUQ01vbnRoKCkgKyBzdGVwKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIGVuZC5nZXRVVENNb250aCgpIC0gc3RhcnQuZ2V0VVRDTW9udGgoKSArIChlbmQuZ2V0VVRDRnVsbFllYXIoKSAtIHN0YXJ0LmdldFVUQ0Z1bGxZZWFyKCkpICogMTI7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFVUQ01vbnRoKCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgdXRjTW9udGg7XG5leHBvcnQgdmFyIHV0Y01vbnRocyA9IHV0Y01vbnRoLnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5pbXBvcnQge2R1cmF0aW9uV2Vla30gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxuZnVuY3Rpb24gdXRjV2Vla2RheShpKSB7XG4gIHJldHVybiBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZS5zZXRVVENEYXRlKGRhdGUuZ2V0VVRDRGF0ZSgpIC0gKGRhdGUuZ2V0VVRDRGF5KCkgKyA3IC0gaSkgJSA3KTtcbiAgICBkYXRlLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xuICB9LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gICAgZGF0ZS5zZXRVVENEYXRlKGRhdGUuZ2V0VVRDRGF0ZSgpICsgc3RlcCAqIDcpO1xuICB9LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gICAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBkdXJhdGlvbldlZWs7XG4gIH0pO1xufVxuXG5leHBvcnQgdmFyIHV0Y1N1bmRheSA9IHV0Y1dlZWtkYXkoMCk7XG5leHBvcnQgdmFyIHV0Y01vbmRheSA9IHV0Y1dlZWtkYXkoMSk7XG5leHBvcnQgdmFyIHV0Y1R1ZXNkYXkgPSB1dGNXZWVrZGF5KDIpO1xuZXhwb3J0IHZhciB1dGNXZWRuZXNkYXkgPSB1dGNXZWVrZGF5KDMpO1xuZXhwb3J0IHZhciB1dGNUaHVyc2RheSA9IHV0Y1dlZWtkYXkoNCk7XG5leHBvcnQgdmFyIHV0Y0ZyaWRheSA9IHV0Y1dlZWtkYXkoNSk7XG5leHBvcnQgdmFyIHV0Y1NhdHVyZGF5ID0gdXRjV2Vla2RheSg2KTtcblxuZXhwb3J0IHZhciB1dGNTdW5kYXlzID0gdXRjU3VuZGF5LnJhbmdlO1xuZXhwb3J0IHZhciB1dGNNb25kYXlzID0gdXRjTW9uZGF5LnJhbmdlO1xuZXhwb3J0IHZhciB1dGNUdWVzZGF5cyA9IHV0Y1R1ZXNkYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y1dlZG5lc2RheXMgPSB1dGNXZWRuZXNkYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y1RodXJzZGF5cyA9IHV0Y1RodXJzZGF5LnJhbmdlO1xuZXhwb3J0IHZhciB1dGNGcmlkYXlzID0gdXRjRnJpZGF5LnJhbmdlO1xuZXhwb3J0IHZhciB1dGNTYXR1cmRheXMgPSB1dGNTYXR1cmRheS5yYW5nZTtcbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuXG52YXIgdXRjWWVhciA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENNb250aCgwLCAxKTtcbiAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRVVENGdWxsWWVhcihkYXRlLmdldFVUQ0Z1bGxZZWFyKCkgKyBzdGVwKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIGVuZC5nZXRVVENGdWxsWWVhcigpIC0gc3RhcnQuZ2V0VVRDRnVsbFllYXIoKTtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0VVRDRnVsbFllYXIoKTtcbn0pO1xuXG4vLyBBbiBvcHRpbWl6ZWQgaW1wbGVtZW50YXRpb24gZm9yIHRoaXMgc2ltcGxlIGNhc2UuXG51dGNZZWFyLmV2ZXJ5ID0gZnVuY3Rpb24oaykge1xuICByZXR1cm4gIWlzRmluaXRlKGsgPSBNYXRoLmZsb29yKGspKSB8fCAhKGsgPiAwKSA/IG51bGwgOiBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZS5zZXRVVENGdWxsWWVhcihNYXRoLmZsb29yKGRhdGUuZ2V0VVRDRnVsbFllYXIoKSAvIGspICogayk7XG4gICAgZGF0ZS5zZXRVVENNb250aCgwLCAxKTtcbiAgICBkYXRlLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xuICB9LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gICAgZGF0ZS5zZXRVVENGdWxsWWVhcihkYXRlLmdldFVUQ0Z1bGxZZWFyKCkgKyBzdGVwICogayk7XG4gIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXRjWWVhcjtcbmV4cG9ydCB2YXIgdXRjWWVhcnMgPSB1dGNZZWFyLnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5pbXBvcnQge2R1cmF0aW9uTWludXRlLCBkdXJhdGlvbldlZWt9IGZyb20gXCIuL2R1cmF0aW9uXCI7XG5cbmZ1bmN0aW9uIHdlZWtkYXkoaSkge1xuICByZXR1cm4gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSAtIChkYXRlLmdldERheSgpICsgNyAtIGkpICUgNyk7XG4gICAgZGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSArIHN0ZXAgKiA3KTtcbiAgfSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgIHJldHVybiAoZW5kIC0gc3RhcnQgLSAoZW5kLmdldFRpbWV6b25lT2Zmc2V0KCkgLSBzdGFydC5nZXRUaW1lem9uZU9mZnNldCgpKSAqIGR1cmF0aW9uTWludXRlKSAvIGR1cmF0aW9uV2VlaztcbiAgfSk7XG59XG5cbmV4cG9ydCB2YXIgc3VuZGF5ID0gd2Vla2RheSgwKTtcbmV4cG9ydCB2YXIgbW9uZGF5ID0gd2Vla2RheSgxKTtcbmV4cG9ydCB2YXIgdHVlc2RheSA9IHdlZWtkYXkoMik7XG5leHBvcnQgdmFyIHdlZG5lc2RheSA9IHdlZWtkYXkoMyk7XG5leHBvcnQgdmFyIHRodXJzZGF5ID0gd2Vla2RheSg0KTtcbmV4cG9ydCB2YXIgZnJpZGF5ID0gd2Vla2RheSg1KTtcbmV4cG9ydCB2YXIgc2F0dXJkYXkgPSB3ZWVrZGF5KDYpO1xuXG5leHBvcnQgdmFyIHN1bmRheXMgPSBzdW5kYXkucmFuZ2U7XG5leHBvcnQgdmFyIG1vbmRheXMgPSBtb25kYXkucmFuZ2U7XG5leHBvcnQgdmFyIHR1ZXNkYXlzID0gdHVlc2RheS5yYW5nZTtcbmV4cG9ydCB2YXIgd2VkbmVzZGF5cyA9IHdlZG5lc2RheS5yYW5nZTtcbmV4cG9ydCB2YXIgdGh1cnNkYXlzID0gdGh1cnNkYXkucmFuZ2U7XG5leHBvcnQgdmFyIGZyaWRheXMgPSBmcmlkYXkucmFuZ2U7XG5leHBvcnQgdmFyIHNhdHVyZGF5cyA9IHNhdHVyZGF5LnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5cbnZhciB5ZWFyID0gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldE1vbnRoKDAsIDEpO1xuICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldEZ1bGxZZWFyKGRhdGUuZ2V0RnVsbFllYXIoKSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gZW5kLmdldEZ1bGxZZWFyKCkgLSBzdGFydC5nZXRGdWxsWWVhcigpO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRGdWxsWWVhcigpO1xufSk7XG5cbi8vIEFuIG9wdGltaXplZCBpbXBsZW1lbnRhdGlvbiBmb3IgdGhpcyBzaW1wbGUgY2FzZS5cbnllYXIuZXZlcnkgPSBmdW5jdGlvbihrKSB7XG4gIHJldHVybiAhaXNGaW5pdGUoayA9IE1hdGguZmxvb3IoaykpIHx8ICEoayA+IDApID8gbnVsbCA6IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICBkYXRlLnNldEZ1bGxZZWFyKE1hdGguZmxvb3IoZGF0ZS5nZXRGdWxsWWVhcigpIC8gaykgKiBrKTtcbiAgICBkYXRlLnNldE1vbnRoKDAsIDEpO1xuICAgIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICBkYXRlLnNldEZ1bGxZZWFyKGRhdGUuZ2V0RnVsbFllYXIoKSArIHN0ZXAgKiBrKTtcbiAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB5ZWFyO1xuZXhwb3J0IHZhciB5ZWFycyA9IHllYXIucmFuZ2U7XG4iLCJleHBvcnQge1xuICBub3csXG4gIHRpbWVyLFxuICB0aW1lckZsdXNoXG59IGZyb20gXCIuL3RpbWVyXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgdGltZW91dFxufSBmcm9tIFwiLi90aW1lb3V0XCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgaW50ZXJ2YWxcbn0gZnJvbSBcIi4vaW50ZXJ2YWxcIjtcbiIsImltcG9ydCB7VGltZXIsIG5vd30gZnJvbSBcIi4vdGltZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2ssIGRlbGF5LCB0aW1lKSB7XG4gIHZhciB0ID0gbmV3IFRpbWVyLCB0b3RhbCA9IGRlbGF5O1xuICBpZiAoZGVsYXkgPT0gbnVsbCkgcmV0dXJuIHQucmVzdGFydChjYWxsYmFjaywgZGVsYXksIHRpbWUpLCB0O1xuICBkZWxheSA9ICtkZWxheSwgdGltZSA9IHRpbWUgPT0gbnVsbCA/IG5vdygpIDogK3RpbWU7XG4gIHQucmVzdGFydChmdW5jdGlvbiB0aWNrKGVsYXBzZWQpIHtcbiAgICBlbGFwc2VkICs9IHRvdGFsO1xuICAgIHQucmVzdGFydCh0aWNrLCB0b3RhbCArPSBkZWxheSwgdGltZSk7XG4gICAgY2FsbGJhY2soZWxhcHNlZCk7XG4gIH0sIGRlbGF5LCB0aW1lKTtcbiAgcmV0dXJuIHQ7XG59XG4iLCJpbXBvcnQge1RpbWVyfSBmcm9tIFwiLi90aW1lclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaywgZGVsYXksIHRpbWUpIHtcbiAgdmFyIHQgPSBuZXcgVGltZXI7XG4gIGRlbGF5ID0gZGVsYXkgPT0gbnVsbCA/IDAgOiArZGVsYXk7XG4gIHQucmVzdGFydChmdW5jdGlvbihlbGFwc2VkKSB7XG4gICAgdC5zdG9wKCk7XG4gICAgY2FsbGJhY2soZWxhcHNlZCArIGRlbGF5KTtcbiAgfSwgZGVsYXksIHRpbWUpO1xuICByZXR1cm4gdDtcbn1cbiIsInZhciBmcmFtZSA9IDAsIC8vIGlzIGFuIGFuaW1hdGlvbiBmcmFtZSBwZW5kaW5nP1xuICAgIHRpbWVvdXQgPSAwLCAvLyBpcyBhIHRpbWVvdXQgcGVuZGluZz9cbiAgICBpbnRlcnZhbCA9IDAsIC8vIGFyZSBhbnkgdGltZXJzIGFjdGl2ZT9cbiAgICBwb2tlRGVsYXkgPSAxMDAwLCAvLyBob3cgZnJlcXVlbnRseSB3ZSBjaGVjayBmb3IgY2xvY2sgc2tld1xuICAgIHRhc2tIZWFkLFxuICAgIHRhc2tUYWlsLFxuICAgIGNsb2NrTGFzdCA9IDAsXG4gICAgY2xvY2tOb3cgPSAwLFxuICAgIGNsb2NrU2tldyA9IDAsXG4gICAgY2xvY2sgPSB0eXBlb2YgcGVyZm9ybWFuY2UgPT09IFwib2JqZWN0XCIgJiYgcGVyZm9ybWFuY2Uubm93ID8gcGVyZm9ybWFuY2UgOiBEYXRlLFxuICAgIHNldEZyYW1lID0gdHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIiAmJiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lID8gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZS5iaW5kKHdpbmRvdykgOiBmdW5jdGlvbihmKSB7IHNldFRpbWVvdXQoZiwgMTcpOyB9O1xuXG5leHBvcnQgZnVuY3Rpb24gbm93KCkge1xuICByZXR1cm4gY2xvY2tOb3cgfHwgKHNldEZyYW1lKGNsZWFyTm93KSwgY2xvY2tOb3cgPSBjbG9jay5ub3coKSArIGNsb2NrU2tldyk7XG59XG5cbmZ1bmN0aW9uIGNsZWFyTm93KCkge1xuICBjbG9ja05vdyA9IDA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBUaW1lcigpIHtcbiAgdGhpcy5fY2FsbCA9XG4gIHRoaXMuX3RpbWUgPVxuICB0aGlzLl9uZXh0ID0gbnVsbDtcbn1cblxuVGltZXIucHJvdG90eXBlID0gdGltZXIucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogVGltZXIsXG4gIHJlc3RhcnQ6IGZ1bmN0aW9uKGNhbGxiYWNrLCBkZWxheSwgdGltZSkge1xuICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcImNhbGxiYWNrIGlzIG5vdCBhIGZ1bmN0aW9uXCIpO1xuICAgIHRpbWUgPSAodGltZSA9PSBudWxsID8gbm93KCkgOiArdGltZSkgKyAoZGVsYXkgPT0gbnVsbCA/IDAgOiArZGVsYXkpO1xuICAgIGlmICghdGhpcy5fbmV4dCAmJiB0YXNrVGFpbCAhPT0gdGhpcykge1xuICAgICAgaWYgKHRhc2tUYWlsKSB0YXNrVGFpbC5fbmV4dCA9IHRoaXM7XG4gICAgICBlbHNlIHRhc2tIZWFkID0gdGhpcztcbiAgICAgIHRhc2tUYWlsID0gdGhpcztcbiAgICB9XG4gICAgdGhpcy5fY2FsbCA9IGNhbGxiYWNrO1xuICAgIHRoaXMuX3RpbWUgPSB0aW1lO1xuICAgIHNsZWVwKCk7XG4gIH0sXG4gIHN0b3A6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9jYWxsKSB7XG4gICAgICB0aGlzLl9jYWxsID0gbnVsbDtcbiAgICAgIHRoaXMuX3RpbWUgPSBJbmZpbml0eTtcbiAgICAgIHNsZWVwKCk7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gdGltZXIoY2FsbGJhY2ssIGRlbGF5LCB0aW1lKSB7XG4gIHZhciB0ID0gbmV3IFRpbWVyO1xuICB0LnJlc3RhcnQoY2FsbGJhY2ssIGRlbGF5LCB0aW1lKTtcbiAgcmV0dXJuIHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0aW1lckZsdXNoKCkge1xuICBub3coKTsgLy8gR2V0IHRoZSBjdXJyZW50IHRpbWUsIGlmIG5vdCBhbHJlYWR5IHNldC5cbiAgKytmcmFtZTsgLy8gUHJldGVuZCB3ZeKAmXZlIHNldCBhbiBhbGFybSwgaWYgd2UgaGF2ZW7igJl0IGFscmVhZHkuXG4gIHZhciB0ID0gdGFza0hlYWQsIGU7XG4gIHdoaWxlICh0KSB7XG4gICAgaWYgKChlID0gY2xvY2tOb3cgLSB0Ll90aW1lKSA+PSAwKSB0Ll9jYWxsLmNhbGwobnVsbCwgZSk7XG4gICAgdCA9IHQuX25leHQ7XG4gIH1cbiAgLS1mcmFtZTtcbn1cblxuZnVuY3Rpb24gd2FrZSgpIHtcbiAgY2xvY2tOb3cgPSAoY2xvY2tMYXN0ID0gY2xvY2subm93KCkpICsgY2xvY2tTa2V3O1xuICBmcmFtZSA9IHRpbWVvdXQgPSAwO1xuICB0cnkge1xuICAgIHRpbWVyRmx1c2goKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBmcmFtZSA9IDA7XG4gICAgbmFwKCk7XG4gICAgY2xvY2tOb3cgPSAwO1xuICB9XG59XG5cbmZ1bmN0aW9uIHBva2UoKSB7XG4gIHZhciBub3cgPSBjbG9jay5ub3coKSwgZGVsYXkgPSBub3cgLSBjbG9ja0xhc3Q7XG4gIGlmIChkZWxheSA+IHBva2VEZWxheSkgY2xvY2tTa2V3IC09IGRlbGF5LCBjbG9ja0xhc3QgPSBub3c7XG59XG5cbmZ1bmN0aW9uIG5hcCgpIHtcbiAgdmFyIHQwLCB0MSA9IHRhc2tIZWFkLCB0MiwgdGltZSA9IEluZmluaXR5O1xuICB3aGlsZSAodDEpIHtcbiAgICBpZiAodDEuX2NhbGwpIHtcbiAgICAgIGlmICh0aW1lID4gdDEuX3RpbWUpIHRpbWUgPSB0MS5fdGltZTtcbiAgICAgIHQwID0gdDEsIHQxID0gdDEuX25leHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHQyID0gdDEuX25leHQsIHQxLl9uZXh0ID0gbnVsbDtcbiAgICAgIHQxID0gdDAgPyB0MC5fbmV4dCA9IHQyIDogdGFza0hlYWQgPSB0MjtcbiAgICB9XG4gIH1cbiAgdGFza1RhaWwgPSB0MDtcbiAgc2xlZXAodGltZSk7XG59XG5cbmZ1bmN0aW9uIHNsZWVwKHRpbWUpIHtcbiAgaWYgKGZyYW1lKSByZXR1cm47IC8vIFNvb25lc3QgYWxhcm0gYWxyZWFkeSBzZXQsIG9yIHdpbGwgYmUuXG4gIGlmICh0aW1lb3V0KSB0aW1lb3V0ID0gY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICB2YXIgZGVsYXkgPSB0aW1lIC0gY2xvY2tOb3c7IC8vIFN0cmljdGx5IGxlc3MgdGhhbiBpZiB3ZSByZWNvbXB1dGVkIGNsb2NrTm93LlxuICBpZiAoZGVsYXkgPiAyNCkge1xuICAgIGlmICh0aW1lIDwgSW5maW5pdHkpIHRpbWVvdXQgPSBzZXRUaW1lb3V0KHdha2UsIHRpbWUgLSBjbG9jay5ub3coKSAtIGNsb2NrU2tldyk7XG4gICAgaWYgKGludGVydmFsKSBpbnRlcnZhbCA9IGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xuICB9IGVsc2Uge1xuICAgIGlmICghaW50ZXJ2YWwpIGNsb2NrTGFzdCA9IGNsb2NrLm5vdygpLCBpbnRlcnZhbCA9IHNldEludGVydmFsKHBva2UsIHBva2VEZWxheSk7XG4gICAgZnJhbWUgPSAxLCBzZXRGcmFtZSh3YWtlKTtcbiAgfVxufVxuIiwiaW1wb3J0IHtUcmFuc2l0aW9ufSBmcm9tIFwiLi90cmFuc2l0aW9uL2luZGV4XCI7XG5pbXBvcnQge1NDSEVEVUxFRH0gZnJvbSBcIi4vdHJhbnNpdGlvbi9zY2hlZHVsZVwiO1xuXG52YXIgcm9vdCA9IFtudWxsXTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSwgbmFtZSkge1xuICB2YXIgc2NoZWR1bGVzID0gbm9kZS5fX3RyYW5zaXRpb24sXG4gICAgICBzY2hlZHVsZSxcbiAgICAgIGk7XG5cbiAgaWYgKHNjaGVkdWxlcykge1xuICAgIG5hbWUgPSBuYW1lID09IG51bGwgPyBudWxsIDogbmFtZSArIFwiXCI7XG4gICAgZm9yIChpIGluIHNjaGVkdWxlcykge1xuICAgICAgaWYgKChzY2hlZHVsZSA9IHNjaGVkdWxlc1tpXSkuc3RhdGUgPiBTQ0hFRFVMRUQgJiYgc2NoZWR1bGUubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICByZXR1cm4gbmV3IFRyYW5zaXRpb24oW1tub2RlXV0sIHJvb3QsIG5hbWUsICtpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cbiIsImltcG9ydCBcIi4vc2VsZWN0aW9uL2luZGV4XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJhbnNpdGlvbn0gZnJvbSBcIi4vdHJhbnNpdGlvbi9pbmRleFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGFjdGl2ZX0gZnJvbSBcIi4vYWN0aXZlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJydXB0fSBmcm9tIFwiLi9pbnRlcnJ1cHRcIjtcbiIsImltcG9ydCB7U1RBUlRJTkcsIEVORElORywgRU5ERUR9IGZyb20gXCIuL3RyYW5zaXRpb24vc2NoZWR1bGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSwgbmFtZSkge1xuICB2YXIgc2NoZWR1bGVzID0gbm9kZS5fX3RyYW5zaXRpb24sXG4gICAgICBzY2hlZHVsZSxcbiAgICAgIGFjdGl2ZSxcbiAgICAgIGVtcHR5ID0gdHJ1ZSxcbiAgICAgIGk7XG5cbiAgaWYgKCFzY2hlZHVsZXMpIHJldHVybjtcblxuICBuYW1lID0gbmFtZSA9PSBudWxsID8gbnVsbCA6IG5hbWUgKyBcIlwiO1xuXG4gIGZvciAoaSBpbiBzY2hlZHVsZXMpIHtcbiAgICBpZiAoKHNjaGVkdWxlID0gc2NoZWR1bGVzW2ldKS5uYW1lICE9PSBuYW1lKSB7IGVtcHR5ID0gZmFsc2U7IGNvbnRpbnVlOyB9XG4gICAgYWN0aXZlID0gc2NoZWR1bGUuc3RhdGUgPiBTVEFSVElORyAmJiBzY2hlZHVsZS5zdGF0ZSA8IEVORElORztcbiAgICBzY2hlZHVsZS5zdGF0ZSA9IEVOREVEO1xuICAgIHNjaGVkdWxlLnRpbWVyLnN0b3AoKTtcbiAgICBzY2hlZHVsZS5vbi5jYWxsKGFjdGl2ZSA/IFwiaW50ZXJydXB0XCIgOiBcImNhbmNlbFwiLCBub2RlLCBub2RlLl9fZGF0YV9fLCBzY2hlZHVsZS5pbmRleCwgc2NoZWR1bGUuZ3JvdXApO1xuICAgIGRlbGV0ZSBzY2hlZHVsZXNbaV07XG4gIH1cblxuICBpZiAoZW1wdHkpIGRlbGV0ZSBub2RlLl9fdHJhbnNpdGlvbjtcbn1cbiIsImltcG9ydCB7c2VsZWN0aW9ufSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2ludGVycnVwdCBmcm9tIFwiLi9pbnRlcnJ1cHRcIjtcbmltcG9ydCBzZWxlY3Rpb25fdHJhbnNpdGlvbiBmcm9tIFwiLi90cmFuc2l0aW9uXCI7XG5cbnNlbGVjdGlvbi5wcm90b3R5cGUuaW50ZXJydXB0ID0gc2VsZWN0aW9uX2ludGVycnVwdDtcbnNlbGVjdGlvbi5wcm90b3R5cGUudHJhbnNpdGlvbiA9IHNlbGVjdGlvbl90cmFuc2l0aW9uO1xuIiwiaW1wb3J0IGludGVycnVwdCBmcm9tIFwiLi4vaW50ZXJydXB0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICBpbnRlcnJ1cHQodGhpcywgbmFtZSk7XG4gIH0pO1xufVxuIiwiaW1wb3J0IHtUcmFuc2l0aW9uLCBuZXdJZH0gZnJvbSBcIi4uL3RyYW5zaXRpb24vaW5kZXhcIjtcbmltcG9ydCBzY2hlZHVsZSBmcm9tIFwiLi4vdHJhbnNpdGlvbi9zY2hlZHVsZVwiO1xuaW1wb3J0IHtlYXNlQ3ViaWNJbk91dH0gZnJvbSBcImQzLWVhc2VcIjtcbmltcG9ydCB7bm93fSBmcm9tIFwiZDMtdGltZXJcIjtcblxudmFyIGRlZmF1bHRUaW1pbmcgPSB7XG4gIHRpbWU6IG51bGwsIC8vIFNldCBvbiB1c2UuXG4gIGRlbGF5OiAwLFxuICBkdXJhdGlvbjogMjUwLFxuICBlYXNlOiBlYXNlQ3ViaWNJbk91dFxufTtcblxuZnVuY3Rpb24gaW5oZXJpdChub2RlLCBpZCkge1xuICB2YXIgdGltaW5nO1xuICB3aGlsZSAoISh0aW1pbmcgPSBub2RlLl9fdHJhbnNpdGlvbikgfHwgISh0aW1pbmcgPSB0aW1pbmdbaWRdKSkge1xuICAgIGlmICghKG5vZGUgPSBub2RlLnBhcmVudE5vZGUpKSB7XG4gICAgICByZXR1cm4gZGVmYXVsdFRpbWluZy50aW1lID0gbm93KCksIGRlZmF1bHRUaW1pbmc7XG4gICAgfVxuICB9XG4gIHJldHVybiB0aW1pbmc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUpIHtcbiAgdmFyIGlkLFxuICAgICAgdGltaW5nO1xuXG4gIGlmIChuYW1lIGluc3RhbmNlb2YgVHJhbnNpdGlvbikge1xuICAgIGlkID0gbmFtZS5faWQsIG5hbWUgPSBuYW1lLl9uYW1lO1xuICB9IGVsc2Uge1xuICAgIGlkID0gbmV3SWQoKSwgKHRpbWluZyA9IGRlZmF1bHRUaW1pbmcpLnRpbWUgPSBub3coKSwgbmFtZSA9IG5hbWUgPT0gbnVsbCA/IG51bGwgOiBuYW1lICsgXCJcIjtcbiAgfVxuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgIHNjaGVkdWxlKG5vZGUsIG5hbWUsIGlkLCBpLCBncm91cCwgdGltaW5nIHx8IGluaGVyaXQobm9kZSwgaWQpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oZ3JvdXBzLCB0aGlzLl9wYXJlbnRzLCBuYW1lLCBpZCk7XG59XG4iLCJpbXBvcnQge2ludGVycG9sYXRlVHJhbnNmb3JtU3ZnIGFzIGludGVycG9sYXRlVHJhbnNmb3JtfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcbmltcG9ydCB7bmFtZXNwYWNlfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge3R3ZWVuVmFsdWV9IGZyb20gXCIuL3R3ZWVuXCI7XG5pbXBvcnQgaW50ZXJwb2xhdGUgZnJvbSBcIi4vaW50ZXJwb2xhdGVcIjtcblxuZnVuY3Rpb24gYXR0clJlbW92ZShuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0clJlbW92ZU5TKGZ1bGxuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJDb25zdGFudChuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUxKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEgPSB2YWx1ZTEgKyBcIlwiLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAgPSB0aGlzLmdldEF0dHJpYnV0ZShuYW1lKTtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgdmFsdWUxKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckNvbnN0YW50TlMoZnVsbG5hbWUsIGludGVycG9sYXRlLCB2YWx1ZTEpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMSA9IHZhbHVlMSArIFwiXCIsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCA9IHRoaXMuZ2V0QXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgdmFsdWUxKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckZ1bmN0aW9uKG5hbWUsIGludGVycG9sYXRlLCB2YWx1ZSkge1xuICB2YXIgc3RyaW5nMDAsXG4gICAgICBzdHJpbmcxMCxcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdHJpbmcwLCB2YWx1ZTEgPSB2YWx1ZSh0aGlzKSwgc3RyaW5nMTtcbiAgICBpZiAodmFsdWUxID09IG51bGwpIHJldHVybiB2b2lkIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICAgIHN0cmluZzAgPSB0aGlzLmdldEF0dHJpYnV0ZShuYW1lKTtcbiAgICBzdHJpbmcxID0gdmFsdWUxICsgXCJcIjtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCAmJiBzdHJpbmcxID09PSBzdHJpbmcxMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IChzdHJpbmcxMCA9IHN0cmluZzEsIGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgdmFsdWUxKSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJGdW5jdGlvbk5TKGZ1bGxuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMTAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCwgdmFsdWUxID0gdmFsdWUodGhpcyksIHN0cmluZzE7XG4gICAgaWYgKHZhbHVlMSA9PSBudWxsKSByZXR1cm4gdm9pZCB0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gICAgc3RyaW5nMCA9IHRoaXMuZ2V0QXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgICBzdHJpbmcxID0gdmFsdWUxICsgXCJcIjtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCAmJiBzdHJpbmcxID09PSBzdHJpbmcxMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IChzdHJpbmcxMCA9IHN0cmluZzEsIGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgdmFsdWUxKSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBmdWxsbmFtZSA9IG5hbWVzcGFjZShuYW1lKSwgaSA9IGZ1bGxuYW1lID09PSBcInRyYW5zZm9ybVwiID8gaW50ZXJwb2xhdGVUcmFuc2Zvcm0gOiBpbnRlcnBvbGF0ZTtcbiAgcmV0dXJuIHRoaXMuYXR0clR3ZWVuKG5hbWUsIHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICA/IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJGdW5jdGlvbk5TIDogYXR0ckZ1bmN0aW9uKShmdWxsbmFtZSwgaSwgdHdlZW5WYWx1ZSh0aGlzLCBcImF0dHIuXCIgKyBuYW1lLCB2YWx1ZSkpXG4gICAgICA6IHZhbHVlID09IG51bGwgPyAoZnVsbG5hbWUubG9jYWwgPyBhdHRyUmVtb3ZlTlMgOiBhdHRyUmVtb3ZlKShmdWxsbmFtZSlcbiAgICAgIDogKGZ1bGxuYW1lLmxvY2FsID8gYXR0ckNvbnN0YW50TlMgOiBhdHRyQ29uc3RhbnQpKGZ1bGxuYW1lLCBpLCB2YWx1ZSkpO1xufVxuIiwiaW1wb3J0IHtuYW1lc3BhY2V9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcblxuZnVuY3Rpb24gYXR0ckludGVycG9sYXRlKG5hbWUsIGkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCBpKHQpKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckludGVycG9sYXRlTlMoZnVsbG5hbWUsIGkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCwgaSh0KSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJUd2Vlbk5TKGZ1bGxuYW1lLCB2YWx1ZSkge1xuICB2YXIgdDAsIGkwO1xuICBmdW5jdGlvbiB0d2VlbigpIHtcbiAgICB2YXIgaSA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKGkgIT09IGkwKSB0MCA9IChpMCA9IGkpICYmIGF0dHJJbnRlcnBvbGF0ZU5TKGZ1bGxuYW1lLCBpKTtcbiAgICByZXR1cm4gdDA7XG4gIH1cbiAgdHdlZW4uX3ZhbHVlID0gdmFsdWU7XG4gIHJldHVybiB0d2Vlbjtcbn1cblxuZnVuY3Rpb24gYXR0clR3ZWVuKG5hbWUsIHZhbHVlKSB7XG4gIHZhciB0MCwgaTA7XG4gIGZ1bmN0aW9uIHR3ZWVuKCkge1xuICAgIHZhciBpID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAoaSAhPT0gaTApIHQwID0gKGkwID0gaSkgJiYgYXR0ckludGVycG9sYXRlKG5hbWUsIGkpO1xuICAgIHJldHVybiB0MDtcbiAgfVxuICB0d2Vlbi5fdmFsdWUgPSB2YWx1ZTtcbiAgcmV0dXJuIHR3ZWVuO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICB2YXIga2V5ID0gXCJhdHRyLlwiICsgbmFtZTtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSByZXR1cm4gKGtleSA9IHRoaXMudHdlZW4oa2V5KSkgJiYga2V5Ll92YWx1ZTtcbiAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiB0aGlzLnR3ZWVuKGtleSwgbnVsbCk7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICB2YXIgZnVsbG5hbWUgPSBuYW1lc3BhY2UobmFtZSk7XG4gIHJldHVybiB0aGlzLnR3ZWVuKGtleSwgKGZ1bGxuYW1lLmxvY2FsID8gYXR0clR3ZWVuTlMgOiBhdHRyVHdlZW4pKGZ1bGxuYW1lLCB2YWx1ZSkpO1xufVxuIiwiaW1wb3J0IHtnZXQsIGluaXR9IGZyb20gXCIuL3NjaGVkdWxlXCI7XG5cbmZ1bmN0aW9uIGRlbGF5RnVuY3Rpb24oaWQsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBpbml0KHRoaXMsIGlkKS5kZWxheSA9ICt2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBkZWxheUNvbnN0YW50KGlkLCB2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPSArdmFsdWUsIGZ1bmN0aW9uKCkge1xuICAgIGluaXQodGhpcywgaWQpLmRlbGF5ID0gdmFsdWU7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuZWFjaCgodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICA/IGRlbGF5RnVuY3Rpb25cbiAgICAgICAgICA6IGRlbGF5Q29uc3RhbnQpKGlkLCB2YWx1ZSkpXG4gICAgICA6IGdldCh0aGlzLm5vZGUoKSwgaWQpLmRlbGF5O1xufVxuIiwiaW1wb3J0IHtnZXQsIHNldH0gZnJvbSBcIi4vc2NoZWR1bGVcIjtcblxuZnVuY3Rpb24gZHVyYXRpb25GdW5jdGlvbihpZCwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHNldCh0aGlzLCBpZCkuZHVyYXRpb24gPSArdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZHVyYXRpb25Db25zdGFudChpZCwgdmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID0gK3ZhbHVlLCBmdW5jdGlvbigpIHtcbiAgICBzZXQodGhpcywgaWQpLmR1cmF0aW9uID0gdmFsdWU7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuZWFjaCgodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICA/IGR1cmF0aW9uRnVuY3Rpb25cbiAgICAgICAgICA6IGR1cmF0aW9uQ29uc3RhbnQpKGlkLCB2YWx1ZSkpXG4gICAgICA6IGdldCh0aGlzLm5vZGUoKSwgaWQpLmR1cmF0aW9uO1xufVxuIiwiaW1wb3J0IHtnZXQsIHNldH0gZnJvbSBcIi4vc2NoZWR1bGVcIjtcblxuZnVuY3Rpb24gZWFzZUNvbnN0YW50KGlkLCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHNldCh0aGlzLCBpZCkuZWFzZSA9IHZhbHVlO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICB2YXIgaWQgPSB0aGlzLl9pZDtcblxuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgPyB0aGlzLmVhY2goZWFzZUNvbnN0YW50KGlkLCB2YWx1ZSkpXG4gICAgICA6IGdldCh0aGlzLm5vZGUoKSwgaWQpLmVhc2U7XG59XG4iLCJpbXBvcnQge3NldH0gZnJvbSBcIi4vc2NoZWR1bGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBvbjAsIG9uMSwgdGhhdCA9IHRoaXMsIGlkID0gdGhhdC5faWQsIHNpemUgPSB0aGF0LnNpemUoKTtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciBjYW5jZWwgPSB7dmFsdWU6IHJlamVjdH0sXG4gICAgICAgIGVuZCA9IHt2YWx1ZTogZnVuY3Rpb24oKSB7IGlmICgtLXNpemUgPT09IDApIHJlc29sdmUoKTsgfX07XG5cbiAgICB0aGF0LmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgc2NoZWR1bGUgPSBzZXQodGhpcywgaWQpLFxuICAgICAgICAgIG9uID0gc2NoZWR1bGUub247XG5cbiAgICAgIC8vIElmIHRoaXMgbm9kZSBzaGFyZWQgYSBkaXNwYXRjaCB3aXRoIHRoZSBwcmV2aW91cyBub2RlLFxuICAgICAgLy8ganVzdCBhc3NpZ24gdGhlIHVwZGF0ZWQgc2hhcmVkIGRpc3BhdGNoIGFuZCB3ZeKAmXJlIGRvbmUhXG4gICAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgICBpZiAob24gIT09IG9uMCkge1xuICAgICAgICBvbjEgPSAob24wID0gb24pLmNvcHkoKTtcbiAgICAgICAgb24xLl8uY2FuY2VsLnB1c2goY2FuY2VsKTtcbiAgICAgICAgb24xLl8uaW50ZXJydXB0LnB1c2goY2FuY2VsKTtcbiAgICAgICAgb24xLl8uZW5kLnB1c2goZW5kKTtcbiAgICAgIH1cblxuICAgICAgc2NoZWR1bGUub24gPSBvbjE7XG4gICAgfSk7XG4gIH0pO1xufVxuIiwiaW1wb3J0IHttYXRjaGVyfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge1RyYW5zaXRpb259IGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG1hdGNoKSB7XG4gIGlmICh0eXBlb2YgbWF0Y2ggIT09IFwiZnVuY3Rpb25cIikgbWF0Y2ggPSBtYXRjaGVyKG1hdGNoKTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIHN1Ymdyb3VwID0gc3ViZ3JvdXBzW2pdID0gW10sIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgbWF0Y2guY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCkpIHtcbiAgICAgICAgc3ViZ3JvdXAucHVzaChub2RlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oc3ViZ3JvdXBzLCB0aGlzLl9wYXJlbnRzLCB0aGlzLl9uYW1lLCB0aGlzLl9pZCk7XG59XG4iLCJpbXBvcnQge3NlbGVjdGlvbn0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHRyYW5zaXRpb25fYXR0ciBmcm9tIFwiLi9hdHRyXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9hdHRyVHdlZW4gZnJvbSBcIi4vYXR0clR3ZWVuXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9kZWxheSBmcm9tIFwiLi9kZWxheVwiO1xuaW1wb3J0IHRyYW5zaXRpb25fZHVyYXRpb24gZnJvbSBcIi4vZHVyYXRpb25cIjtcbmltcG9ydCB0cmFuc2l0aW9uX2Vhc2UgZnJvbSBcIi4vZWFzZVwiO1xuaW1wb3J0IHRyYW5zaXRpb25fZmlsdGVyIGZyb20gXCIuL2ZpbHRlclwiO1xuaW1wb3J0IHRyYW5zaXRpb25fbWVyZ2UgZnJvbSBcIi4vbWVyZ2VcIjtcbmltcG9ydCB0cmFuc2l0aW9uX29uIGZyb20gXCIuL29uXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9yZW1vdmUgZnJvbSBcIi4vcmVtb3ZlXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9zZWxlY3QgZnJvbSBcIi4vc2VsZWN0XCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9zZWxlY3RBbGwgZnJvbSBcIi4vc2VsZWN0QWxsXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9zZWxlY3Rpb24gZnJvbSBcIi4vc2VsZWN0aW9uXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9zdHlsZSBmcm9tIFwiLi9zdHlsZVwiO1xuaW1wb3J0IHRyYW5zaXRpb25fc3R5bGVUd2VlbiBmcm9tIFwiLi9zdHlsZVR3ZWVuXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl90ZXh0IGZyb20gXCIuL3RleHRcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3RyYW5zaXRpb24gZnJvbSBcIi4vdHJhbnNpdGlvblwiO1xuaW1wb3J0IHRyYW5zaXRpb25fdHdlZW4gZnJvbSBcIi4vdHdlZW5cIjtcbmltcG9ydCB0cmFuc2l0aW9uX2VuZCBmcm9tIFwiLi9lbmRcIjtcblxudmFyIGlkID0gMDtcblxuZXhwb3J0IGZ1bmN0aW9uIFRyYW5zaXRpb24oZ3JvdXBzLCBwYXJlbnRzLCBuYW1lLCBpZCkge1xuICB0aGlzLl9ncm91cHMgPSBncm91cHM7XG4gIHRoaXMuX3BhcmVudHMgPSBwYXJlbnRzO1xuICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgdGhpcy5faWQgPSBpZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdHJhbnNpdGlvbihuYW1lKSB7XG4gIHJldHVybiBzZWxlY3Rpb24oKS50cmFuc2l0aW9uKG5hbWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbmV3SWQoKSB7XG4gIHJldHVybiArK2lkO1xufVxuXG52YXIgc2VsZWN0aW9uX3Byb3RvdHlwZSA9IHNlbGVjdGlvbi5wcm90b3R5cGU7XG5cblRyYW5zaXRpb24ucHJvdG90eXBlID0gdHJhbnNpdGlvbi5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBUcmFuc2l0aW9uLFxuICBzZWxlY3Q6IHRyYW5zaXRpb25fc2VsZWN0LFxuICBzZWxlY3RBbGw6IHRyYW5zaXRpb25fc2VsZWN0QWxsLFxuICBmaWx0ZXI6IHRyYW5zaXRpb25fZmlsdGVyLFxuICBtZXJnZTogdHJhbnNpdGlvbl9tZXJnZSxcbiAgc2VsZWN0aW9uOiB0cmFuc2l0aW9uX3NlbGVjdGlvbixcbiAgdHJhbnNpdGlvbjogdHJhbnNpdGlvbl90cmFuc2l0aW9uLFxuICBjYWxsOiBzZWxlY3Rpb25fcHJvdG90eXBlLmNhbGwsXG4gIG5vZGVzOiBzZWxlY3Rpb25fcHJvdG90eXBlLm5vZGVzLFxuICBub2RlOiBzZWxlY3Rpb25fcHJvdG90eXBlLm5vZGUsXG4gIHNpemU6IHNlbGVjdGlvbl9wcm90b3R5cGUuc2l6ZSxcbiAgZW1wdHk6IHNlbGVjdGlvbl9wcm90b3R5cGUuZW1wdHksXG4gIGVhY2g6IHNlbGVjdGlvbl9wcm90b3R5cGUuZWFjaCxcbiAgb246IHRyYW5zaXRpb25fb24sXG4gIGF0dHI6IHRyYW5zaXRpb25fYXR0cixcbiAgYXR0clR3ZWVuOiB0cmFuc2l0aW9uX2F0dHJUd2VlbixcbiAgc3R5bGU6IHRyYW5zaXRpb25fc3R5bGUsXG4gIHN0eWxlVHdlZW46IHRyYW5zaXRpb25fc3R5bGVUd2VlbixcbiAgdGV4dDogdHJhbnNpdGlvbl90ZXh0LFxuICByZW1vdmU6IHRyYW5zaXRpb25fcmVtb3ZlLFxuICB0d2VlbjogdHJhbnNpdGlvbl90d2VlbixcbiAgZGVsYXk6IHRyYW5zaXRpb25fZGVsYXksXG4gIGR1cmF0aW9uOiB0cmFuc2l0aW9uX2R1cmF0aW9uLFxuICBlYXNlOiB0cmFuc2l0aW9uX2Vhc2UsXG4gIGVuZDogdHJhbnNpdGlvbl9lbmRcbn07XG4iLCJpbXBvcnQge2NvbG9yfSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCB7aW50ZXJwb2xhdGVOdW1iZXIsIGludGVycG9sYXRlUmdiLCBpbnRlcnBvbGF0ZVN0cmluZ30gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIGM7XG4gIHJldHVybiAodHlwZW9mIGIgPT09IFwibnVtYmVyXCIgPyBpbnRlcnBvbGF0ZU51bWJlclxuICAgICAgOiBiIGluc3RhbmNlb2YgY29sb3IgPyBpbnRlcnBvbGF0ZVJnYlxuICAgICAgOiAoYyA9IGNvbG9yKGIpKSA/IChiID0gYywgaW50ZXJwb2xhdGVSZ2IpXG4gICAgICA6IGludGVycG9sYXRlU3RyaW5nKShhLCBiKTtcbn1cbiIsImltcG9ydCB7VHJhbnNpdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odHJhbnNpdGlvbikge1xuICBpZiAodHJhbnNpdGlvbi5faWQgIT09IHRoaXMuX2lkKSB0aHJvdyBuZXcgRXJyb3I7XG5cbiAgZm9yICh2YXIgZ3JvdXBzMCA9IHRoaXMuX2dyb3VwcywgZ3JvdXBzMSA9IHRyYW5zaXRpb24uX2dyb3VwcywgbTAgPSBncm91cHMwLmxlbmd0aCwgbTEgPSBncm91cHMxLmxlbmd0aCwgbSA9IE1hdGgubWluKG0wLCBtMSksIG1lcmdlcyA9IG5ldyBBcnJheShtMCksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAwID0gZ3JvdXBzMFtqXSwgZ3JvdXAxID0gZ3JvdXBzMVtqXSwgbiA9IGdyb3VwMC5sZW5ndGgsIG1lcmdlID0gbWVyZ2VzW2pdID0gbmV3IEFycmF5KG4pLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cDBbaV0gfHwgZ3JvdXAxW2ldKSB7XG4gICAgICAgIG1lcmdlW2ldID0gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmb3IgKDsgaiA8IG0wOyArK2opIHtcbiAgICBtZXJnZXNbal0gPSBncm91cHMwW2pdO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBUcmFuc2l0aW9uKG1lcmdlcywgdGhpcy5fcGFyZW50cywgdGhpcy5fbmFtZSwgdGhpcy5faWQpO1xufVxuIiwiaW1wb3J0IHtnZXQsIHNldCwgaW5pdH0gZnJvbSBcIi4vc2NoZWR1bGVcIjtcblxuZnVuY3Rpb24gc3RhcnQobmFtZSkge1xuICByZXR1cm4gKG5hbWUgKyBcIlwiKS50cmltKCkuc3BsaXQoL158XFxzKy8pLmV2ZXJ5KGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgaSA9IHQuaW5kZXhPZihcIi5cIik7XG4gICAgaWYgKGkgPj0gMCkgdCA9IHQuc2xpY2UoMCwgaSk7XG4gICAgcmV0dXJuICF0IHx8IHQgPT09IFwic3RhcnRcIjtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIG9uRnVuY3Rpb24oaWQsIG5hbWUsIGxpc3RlbmVyKSB7XG4gIHZhciBvbjAsIG9uMSwgc2l0ID0gc3RhcnQobmFtZSkgPyBpbml0IDogc2V0O1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjaGVkdWxlID0gc2l0KHRoaXMsIGlkKSxcbiAgICAgICAgb24gPSBzY2hlZHVsZS5vbjtcblxuICAgIC8vIElmIHRoaXMgbm9kZSBzaGFyZWQgYSBkaXNwYXRjaCB3aXRoIHRoZSBwcmV2aW91cyBub2RlLFxuICAgIC8vIGp1c3QgYXNzaWduIHRoZSB1cGRhdGVkIHNoYXJlZCBkaXNwYXRjaCBhbmQgd2XigJlyZSBkb25lIVxuICAgIC8vIE90aGVyd2lzZSwgY29weS1vbi13cml0ZS5cbiAgICBpZiAob24gIT09IG9uMCkgKG9uMSA9IChvbjAgPSBvbikuY29weSgpKS5vbihuYW1lLCBsaXN0ZW5lcik7XG5cbiAgICBzY2hlZHVsZS5vbiA9IG9uMTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgbGlzdGVuZXIpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPCAyXG4gICAgICA/IGdldCh0aGlzLm5vZGUoKSwgaWQpLm9uLm9uKG5hbWUpXG4gICAgICA6IHRoaXMuZWFjaChvbkZ1bmN0aW9uKGlkLCBuYW1lLCBsaXN0ZW5lcikpO1xufVxuIiwiZnVuY3Rpb24gcmVtb3ZlRnVuY3Rpb24oaWQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG4gICAgZm9yICh2YXIgaSBpbiB0aGlzLl9fdHJhbnNpdGlvbikgaWYgKCtpICE9PSBpZCkgcmV0dXJuO1xuICAgIGlmIChwYXJlbnQpIHBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLm9uKFwiZW5kLnJlbW92ZVwiLCByZW1vdmVGdW5jdGlvbih0aGlzLl9pZCkpO1xufVxuIiwiaW1wb3J0IHtkaXNwYXRjaH0gZnJvbSBcImQzLWRpc3BhdGNoXCI7XG5pbXBvcnQge3RpbWVyLCB0aW1lb3V0fSBmcm9tIFwiZDMtdGltZXJcIjtcblxudmFyIGVtcHR5T24gPSBkaXNwYXRjaChcInN0YXJ0XCIsIFwiZW5kXCIsIFwiY2FuY2VsXCIsIFwiaW50ZXJydXB0XCIpO1xudmFyIGVtcHR5VHdlZW4gPSBbXTtcblxuZXhwb3J0IHZhciBDUkVBVEVEID0gMDtcbmV4cG9ydCB2YXIgU0NIRURVTEVEID0gMTtcbmV4cG9ydCB2YXIgU1RBUlRJTkcgPSAyO1xuZXhwb3J0IHZhciBTVEFSVEVEID0gMztcbmV4cG9ydCB2YXIgUlVOTklORyA9IDQ7XG5leHBvcnQgdmFyIEVORElORyA9IDU7XG5leHBvcnQgdmFyIEVOREVEID0gNjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSwgbmFtZSwgaWQsIGluZGV4LCBncm91cCwgdGltaW5nKSB7XG4gIHZhciBzY2hlZHVsZXMgPSBub2RlLl9fdHJhbnNpdGlvbjtcbiAgaWYgKCFzY2hlZHVsZXMpIG5vZGUuX190cmFuc2l0aW9uID0ge307XG4gIGVsc2UgaWYgKGlkIGluIHNjaGVkdWxlcykgcmV0dXJuO1xuICBjcmVhdGUobm9kZSwgaWQsIHtcbiAgICBuYW1lOiBuYW1lLFxuICAgIGluZGV4OiBpbmRleCwgLy8gRm9yIGNvbnRleHQgZHVyaW5nIGNhbGxiYWNrLlxuICAgIGdyb3VwOiBncm91cCwgLy8gRm9yIGNvbnRleHQgZHVyaW5nIGNhbGxiYWNrLlxuICAgIG9uOiBlbXB0eU9uLFxuICAgIHR3ZWVuOiBlbXB0eVR3ZWVuLFxuICAgIHRpbWU6IHRpbWluZy50aW1lLFxuICAgIGRlbGF5OiB0aW1pbmcuZGVsYXksXG4gICAgZHVyYXRpb246IHRpbWluZy5kdXJhdGlvbixcbiAgICBlYXNlOiB0aW1pbmcuZWFzZSxcbiAgICB0aW1lcjogbnVsbCxcbiAgICBzdGF0ZTogQ1JFQVRFRFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluaXQobm9kZSwgaWQpIHtcbiAgdmFyIHNjaGVkdWxlID0gZ2V0KG5vZGUsIGlkKTtcbiAgaWYgKHNjaGVkdWxlLnN0YXRlID4gQ1JFQVRFRCkgdGhyb3cgbmV3IEVycm9yKFwidG9vIGxhdGU7IGFscmVhZHkgc2NoZWR1bGVkXCIpO1xuICByZXR1cm4gc2NoZWR1bGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXQobm9kZSwgaWQpIHtcbiAgdmFyIHNjaGVkdWxlID0gZ2V0KG5vZGUsIGlkKTtcbiAgaWYgKHNjaGVkdWxlLnN0YXRlID4gU1RBUlRFRCkgdGhyb3cgbmV3IEVycm9yKFwidG9vIGxhdGU7IGFscmVhZHkgcnVubmluZ1wiKTtcbiAgcmV0dXJuIHNjaGVkdWxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0KG5vZGUsIGlkKSB7XG4gIHZhciBzY2hlZHVsZSA9IG5vZGUuX190cmFuc2l0aW9uO1xuICBpZiAoIXNjaGVkdWxlIHx8ICEoc2NoZWR1bGUgPSBzY2hlZHVsZVtpZF0pKSB0aHJvdyBuZXcgRXJyb3IoXCJ0cmFuc2l0aW9uIG5vdCBmb3VuZFwiKTtcbiAgcmV0dXJuIHNjaGVkdWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGUobm9kZSwgaWQsIHNlbGYpIHtcbiAgdmFyIHNjaGVkdWxlcyA9IG5vZGUuX190cmFuc2l0aW9uLFxuICAgICAgdHdlZW47XG5cbiAgLy8gSW5pdGlhbGl6ZSB0aGUgc2VsZiB0aW1lciB3aGVuIHRoZSB0cmFuc2l0aW9uIGlzIGNyZWF0ZWQuXG4gIC8vIE5vdGUgdGhlIGFjdHVhbCBkZWxheSBpcyBub3Qga25vd24gdW50aWwgdGhlIGZpcnN0IGNhbGxiYWNrIVxuICBzY2hlZHVsZXNbaWRdID0gc2VsZjtcbiAgc2VsZi50aW1lciA9IHRpbWVyKHNjaGVkdWxlLCAwLCBzZWxmLnRpbWUpO1xuXG4gIGZ1bmN0aW9uIHNjaGVkdWxlKGVsYXBzZWQpIHtcbiAgICBzZWxmLnN0YXRlID0gU0NIRURVTEVEO1xuICAgIHNlbGYudGltZXIucmVzdGFydChzdGFydCwgc2VsZi5kZWxheSwgc2VsZi50aW1lKTtcblxuICAgIC8vIElmIHRoZSBlbGFwc2VkIGRlbGF5IGlzIGxlc3MgdGhhbiBvdXIgZmlyc3Qgc2xlZXAsIHN0YXJ0IGltbWVkaWF0ZWx5LlxuICAgIGlmIChzZWxmLmRlbGF5IDw9IGVsYXBzZWQpIHN0YXJ0KGVsYXBzZWQgLSBzZWxmLmRlbGF5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN0YXJ0KGVsYXBzZWQpIHtcbiAgICB2YXIgaSwgaiwgbiwgbztcblxuICAgIC8vIElmIHRoZSBzdGF0ZSBpcyBub3QgU0NIRURVTEVELCB0aGVuIHdlIHByZXZpb3VzbHkgZXJyb3JlZCBvbiBzdGFydC5cbiAgICBpZiAoc2VsZi5zdGF0ZSAhPT0gU0NIRURVTEVEKSByZXR1cm4gc3RvcCgpO1xuXG4gICAgZm9yIChpIGluIHNjaGVkdWxlcykge1xuICAgICAgbyA9IHNjaGVkdWxlc1tpXTtcbiAgICAgIGlmIChvLm5hbWUgIT09IHNlbGYubmFtZSkgY29udGludWU7XG5cbiAgICAgIC8vIFdoaWxlIHRoaXMgZWxlbWVudCBhbHJlYWR5IGhhcyBhIHN0YXJ0aW5nIHRyYW5zaXRpb24gZHVyaW5nIHRoaXMgZnJhbWUsXG4gICAgICAvLyBkZWZlciBzdGFydGluZyBhbiBpbnRlcnJ1cHRpbmcgdHJhbnNpdGlvbiB1bnRpbCB0aGF0IHRyYW5zaXRpb24gaGFzIGFcbiAgICAgIC8vIGNoYW5jZSB0byB0aWNrIChhbmQgcG9zc2libHkgZW5kKTsgc2VlIGQzL2QzLXRyYW5zaXRpb24jNTQhXG4gICAgICBpZiAoby5zdGF0ZSA9PT0gU1RBUlRFRCkgcmV0dXJuIHRpbWVvdXQoc3RhcnQpO1xuXG4gICAgICAvLyBJbnRlcnJ1cHQgdGhlIGFjdGl2ZSB0cmFuc2l0aW9uLCBpZiBhbnkuXG4gICAgICBpZiAoby5zdGF0ZSA9PT0gUlVOTklORykge1xuICAgICAgICBvLnN0YXRlID0gRU5ERUQ7XG4gICAgICAgIG8udGltZXIuc3RvcCgpO1xuICAgICAgICBvLm9uLmNhbGwoXCJpbnRlcnJ1cHRcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgby5pbmRleCwgby5ncm91cCk7XG4gICAgICAgIGRlbGV0ZSBzY2hlZHVsZXNbaV07XG4gICAgICB9XG5cbiAgICAgIC8vIENhbmNlbCBhbnkgcHJlLWVtcHRlZCB0cmFuc2l0aW9ucy5cbiAgICAgIGVsc2UgaWYgKCtpIDwgaWQpIHtcbiAgICAgICAgby5zdGF0ZSA9IEVOREVEO1xuICAgICAgICBvLnRpbWVyLnN0b3AoKTtcbiAgICAgICAgby5vbi5jYWxsKFwiY2FuY2VsXCIsIG5vZGUsIG5vZGUuX19kYXRhX18sIG8uaW5kZXgsIG8uZ3JvdXApO1xuICAgICAgICBkZWxldGUgc2NoZWR1bGVzW2ldO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIERlZmVyIHRoZSBmaXJzdCB0aWNrIHRvIGVuZCBvZiB0aGUgY3VycmVudCBmcmFtZTsgc2VlIGQzL2QzIzE1NzYuXG4gICAgLy8gTm90ZSB0aGUgdHJhbnNpdGlvbiBtYXkgYmUgY2FuY2VsZWQgYWZ0ZXIgc3RhcnQgYW5kIGJlZm9yZSB0aGUgZmlyc3QgdGljayFcbiAgICAvLyBOb3RlIHRoaXMgbXVzdCBiZSBzY2hlZHVsZWQgYmVmb3JlIHRoZSBzdGFydCBldmVudDsgc2VlIGQzL2QzLXRyYW5zaXRpb24jMTYhXG4gICAgLy8gQXNzdW1pbmcgdGhpcyBpcyBzdWNjZXNzZnVsLCBzdWJzZXF1ZW50IGNhbGxiYWNrcyBnbyBzdHJhaWdodCB0byB0aWNrLlxuICAgIHRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoc2VsZi5zdGF0ZSA9PT0gU1RBUlRFRCkge1xuICAgICAgICBzZWxmLnN0YXRlID0gUlVOTklORztcbiAgICAgICAgc2VsZi50aW1lci5yZXN0YXJ0KHRpY2ssIHNlbGYuZGVsYXksIHNlbGYudGltZSk7XG4gICAgICAgIHRpY2soZWxhcHNlZCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBEaXNwYXRjaCB0aGUgc3RhcnQgZXZlbnQuXG4gICAgLy8gTm90ZSB0aGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgdGhlIHR3ZWVuIGFyZSBpbml0aWFsaXplZC5cbiAgICBzZWxmLnN0YXRlID0gU1RBUlRJTkc7XG4gICAgc2VsZi5vbi5jYWxsKFwic3RhcnRcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgc2VsZi5pbmRleCwgc2VsZi5ncm91cCk7XG4gICAgaWYgKHNlbGYuc3RhdGUgIT09IFNUQVJUSU5HKSByZXR1cm47IC8vIGludGVycnVwdGVkXG4gICAgc2VsZi5zdGF0ZSA9IFNUQVJURUQ7XG5cbiAgICAvLyBJbml0aWFsaXplIHRoZSB0d2VlbiwgZGVsZXRpbmcgbnVsbCB0d2Vlbi5cbiAgICB0d2VlbiA9IG5ldyBBcnJheShuID0gc2VsZi50d2Vlbi5sZW5ndGgpO1xuICAgIGZvciAoaSA9IDAsIGogPSAtMTsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG8gPSBzZWxmLnR3ZWVuW2ldLnZhbHVlLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgc2VsZi5pbmRleCwgc2VsZi5ncm91cCkpIHtcbiAgICAgICAgdHdlZW5bKytqXSA9IG87XG4gICAgICB9XG4gICAgfVxuICAgIHR3ZWVuLmxlbmd0aCA9IGogKyAxO1xuICB9XG5cbiAgZnVuY3Rpb24gdGljayhlbGFwc2VkKSB7XG4gICAgdmFyIHQgPSBlbGFwc2VkIDwgc2VsZi5kdXJhdGlvbiA/IHNlbGYuZWFzZS5jYWxsKG51bGwsIGVsYXBzZWQgLyBzZWxmLmR1cmF0aW9uKSA6IChzZWxmLnRpbWVyLnJlc3RhcnQoc3RvcCksIHNlbGYuc3RhdGUgPSBFTkRJTkcsIDEpLFxuICAgICAgICBpID0gLTEsXG4gICAgICAgIG4gPSB0d2Vlbi5sZW5ndGg7XG5cbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgdHdlZW5baV0uY2FsbChub2RlLCB0KTtcbiAgICB9XG5cbiAgICAvLyBEaXNwYXRjaCB0aGUgZW5kIGV2ZW50LlxuICAgIGlmIChzZWxmLnN0YXRlID09PSBFTkRJTkcpIHtcbiAgICAgIHNlbGYub24uY2FsbChcImVuZFwiLCBub2RlLCBub2RlLl9fZGF0YV9fLCBzZWxmLmluZGV4LCBzZWxmLmdyb3VwKTtcbiAgICAgIHN0b3AoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzdG9wKCkge1xuICAgIHNlbGYuc3RhdGUgPSBFTkRFRDtcbiAgICBzZWxmLnRpbWVyLnN0b3AoKTtcbiAgICBkZWxldGUgc2NoZWR1bGVzW2lkXTtcbiAgICBmb3IgKHZhciBpIGluIHNjaGVkdWxlcykgcmV0dXJuOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgZGVsZXRlIG5vZGUuX190cmFuc2l0aW9uO1xuICB9XG59XG4iLCJpbXBvcnQge3NlbGVjdG9yfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge1RyYW5zaXRpb259IGZyb20gXCIuL2luZGV4XCI7XG5pbXBvcnQgc2NoZWR1bGUsIHtnZXR9IGZyb20gXCIuL3NjaGVkdWxlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdCkge1xuICB2YXIgbmFtZSA9IHRoaXMuX25hbWUsXG4gICAgICBpZCA9IHRoaXMuX2lkO1xuXG4gIGlmICh0eXBlb2Ygc2VsZWN0ICE9PSBcImZ1bmN0aW9uXCIpIHNlbGVjdCA9IHNlbGVjdG9yKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBzdWJncm91cCA9IHN1Ymdyb3Vwc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgc3Vibm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiAoc3Vibm9kZSA9IHNlbGVjdC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSkpIHtcbiAgICAgICAgaWYgKFwiX19kYXRhX19cIiBpbiBub2RlKSBzdWJub2RlLl9fZGF0YV9fID0gbm9kZS5fX2RhdGFfXztcbiAgICAgICAgc3ViZ3JvdXBbaV0gPSBzdWJub2RlO1xuICAgICAgICBzY2hlZHVsZShzdWJncm91cFtpXSwgbmFtZSwgaWQsIGksIHN1Ymdyb3VwLCBnZXQobm9kZSwgaWQpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oc3ViZ3JvdXBzLCB0aGlzLl9wYXJlbnRzLCBuYW1lLCBpZCk7XG59XG4iLCJpbXBvcnQge3NlbGVjdG9yQWxsfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge1RyYW5zaXRpb259IGZyb20gXCIuL2luZGV4XCI7XG5pbXBvcnQgc2NoZWR1bGUsIHtnZXR9IGZyb20gXCIuL3NjaGVkdWxlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdCkge1xuICB2YXIgbmFtZSA9IHRoaXMuX25hbWUsXG4gICAgICBpZCA9IHRoaXMuX2lkO1xuXG4gIGlmICh0eXBlb2Ygc2VsZWN0ICE9PSBcImZ1bmN0aW9uXCIpIHNlbGVjdCA9IHNlbGVjdG9yQWxsKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gW10sIHBhcmVudHMgPSBbXSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgZm9yICh2YXIgY2hpbGRyZW4gPSBzZWxlY3QuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCksIGNoaWxkLCBpbmhlcml0ID0gZ2V0KG5vZGUsIGlkKSwgayA9IDAsIGwgPSBjaGlsZHJlbi5sZW5ndGg7IGsgPCBsOyArK2spIHtcbiAgICAgICAgICBpZiAoY2hpbGQgPSBjaGlsZHJlbltrXSkge1xuICAgICAgICAgICAgc2NoZWR1bGUoY2hpbGQsIG5hbWUsIGlkLCBrLCBjaGlsZHJlbiwgaW5oZXJpdCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHN1Ymdyb3Vwcy5wdXNoKGNoaWxkcmVuKTtcbiAgICAgICAgcGFyZW50cy5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihzdWJncm91cHMsIHBhcmVudHMsIG5hbWUsIGlkKTtcbn1cbiIsImltcG9ydCB7c2VsZWN0aW9ufSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5cbnZhciBTZWxlY3Rpb24gPSBzZWxlY3Rpb24ucHJvdG90eXBlLmNvbnN0cnVjdG9yO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24odGhpcy5fZ3JvdXBzLCB0aGlzLl9wYXJlbnRzKTtcbn1cbiIsImltcG9ydCB7aW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3MgYXMgaW50ZXJwb2xhdGVUcmFuc2Zvcm19IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuaW1wb3J0IHtzdHlsZX0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHtzZXR9IGZyb20gXCIuL3NjaGVkdWxlXCI7XG5pbXBvcnQge3R3ZWVuVmFsdWV9IGZyb20gXCIuL3R3ZWVuXCI7XG5pbXBvcnQgaW50ZXJwb2xhdGUgZnJvbSBcIi4vaW50ZXJwb2xhdGVcIjtcblxuZnVuY3Rpb24gc3R5bGVOdWxsKG5hbWUsIGludGVycG9sYXRlKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEwLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAgPSBzdHlsZSh0aGlzLCBuYW1lKSxcbiAgICAgICAgc3RyaW5nMSA9ICh0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpLCBzdHlsZSh0aGlzLCBuYW1lKSk7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgJiYgc3RyaW5nMSA9PT0gc3RyaW5nMTAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHN0cmluZzEwID0gc3RyaW5nMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlUmVtb3ZlKG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlQ29uc3RhbnQobmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlMSkge1xuICB2YXIgc3RyaW5nMDAsXG4gICAgICBzdHJpbmcxID0gdmFsdWUxICsgXCJcIixcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdHJpbmcwID0gc3R5bGUodGhpcywgbmFtZSk7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlRnVuY3Rpb24obmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEwLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAgPSBzdHlsZSh0aGlzLCBuYW1lKSxcbiAgICAgICAgdmFsdWUxID0gdmFsdWUodGhpcyksXG4gICAgICAgIHN0cmluZzEgPSB2YWx1ZTEgKyBcIlwiO1xuICAgIGlmICh2YWx1ZTEgPT0gbnVsbCkgc3RyaW5nMSA9IHZhbHVlMSA9ICh0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpLCBzdHlsZSh0aGlzLCBuYW1lKSk7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgJiYgc3RyaW5nMSA9PT0gc3RyaW5nMTAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiAoc3RyaW5nMTAgPSBzdHJpbmcxLCBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZU1heWJlUmVtb3ZlKGlkLCBuYW1lKSB7XG4gIHZhciBvbjAsIG9uMSwgbGlzdGVuZXIwLCBrZXkgPSBcInN0eWxlLlwiICsgbmFtZSwgZXZlbnQgPSBcImVuZC5cIiArIGtleSwgcmVtb3ZlO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjaGVkdWxlID0gc2V0KHRoaXMsIGlkKSxcbiAgICAgICAgb24gPSBzY2hlZHVsZS5vbixcbiAgICAgICAgbGlzdGVuZXIgPSBzY2hlZHVsZS52YWx1ZVtrZXldID09IG51bGwgPyByZW1vdmUgfHwgKHJlbW92ZSA9IHN0eWxlUmVtb3ZlKG5hbWUpKSA6IHVuZGVmaW5lZDtcblxuICAgIC8vIElmIHRoaXMgbm9kZSBzaGFyZWQgYSBkaXNwYXRjaCB3aXRoIHRoZSBwcmV2aW91cyBub2RlLFxuICAgIC8vIGp1c3QgYXNzaWduIHRoZSB1cGRhdGVkIHNoYXJlZCBkaXNwYXRjaCBhbmQgd2XigJlyZSBkb25lIVxuICAgIC8vIE90aGVyd2lzZSwgY29weS1vbi13cml0ZS5cbiAgICBpZiAob24gIT09IG9uMCB8fCBsaXN0ZW5lcjAgIT09IGxpc3RlbmVyKSAob24xID0gKG9uMCA9IG9uKS5jb3B5KCkpLm9uKGV2ZW50LCBsaXN0ZW5lcjAgPSBsaXN0ZW5lcik7XG5cbiAgICBzY2hlZHVsZS5vbiA9IG9uMTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHZhciBpID0gKG5hbWUgKz0gXCJcIikgPT09IFwidHJhbnNmb3JtXCIgPyBpbnRlcnBvbGF0ZVRyYW5zZm9ybSA6IGludGVycG9sYXRlO1xuICByZXR1cm4gdmFsdWUgPT0gbnVsbCA/IHRoaXNcbiAgICAgIC5zdHlsZVR3ZWVuKG5hbWUsIHN0eWxlTnVsbChuYW1lLCBpKSlcbiAgICAgIC5vbihcImVuZC5zdHlsZS5cIiArIG5hbWUsIHN0eWxlUmVtb3ZlKG5hbWUpKVxuICAgIDogdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyB0aGlzXG4gICAgICAuc3R5bGVUd2VlbihuYW1lLCBzdHlsZUZ1bmN0aW9uKG5hbWUsIGksIHR3ZWVuVmFsdWUodGhpcywgXCJzdHlsZS5cIiArIG5hbWUsIHZhbHVlKSkpXG4gICAgICAuZWFjaChzdHlsZU1heWJlUmVtb3ZlKHRoaXMuX2lkLCBuYW1lKSlcbiAgICA6IHRoaXNcbiAgICAgIC5zdHlsZVR3ZWVuKG5hbWUsIHN0eWxlQ29uc3RhbnQobmFtZSwgaSwgdmFsdWUpLCBwcmlvcml0eSlcbiAgICAgIC5vbihcImVuZC5zdHlsZS5cIiArIG5hbWUsIG51bGwpO1xufVxuIiwiZnVuY3Rpb24gc3R5bGVJbnRlcnBvbGF0ZShuYW1lLCBpLCBwcmlvcml0eSkge1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHRoaXMuc3R5bGUuc2V0UHJvcGVydHkobmFtZSwgaSh0KSwgcHJpb3JpdHkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZVR3ZWVuKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICB2YXIgdCwgaTA7XG4gIGZ1bmN0aW9uIHR3ZWVuKCkge1xuICAgIHZhciBpID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAoaSAhPT0gaTApIHQgPSAoaTAgPSBpKSAmJiBzdHlsZUludGVycG9sYXRlKG5hbWUsIGksIHByaW9yaXR5KTtcbiAgICByZXR1cm4gdDtcbiAgfVxuICB0d2Vlbi5fdmFsdWUgPSB2YWx1ZTtcbiAgcmV0dXJuIHR3ZWVuO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgdmFyIGtleSA9IFwic3R5bGUuXCIgKyAobmFtZSArPSBcIlwiKTtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSByZXR1cm4gKGtleSA9IHRoaXMudHdlZW4oa2V5KSkgJiYga2V5Ll92YWx1ZTtcbiAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiB0aGlzLnR3ZWVuKGtleSwgbnVsbCk7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICByZXR1cm4gdGhpcy50d2VlbihrZXksIHN0eWxlVHdlZW4obmFtZSwgdmFsdWUsIHByaW9yaXR5ID09IG51bGwgPyBcIlwiIDogcHJpb3JpdHkpKTtcbn1cbiIsImltcG9ydCB7dHdlZW5WYWx1ZX0gZnJvbSBcIi4vdHdlZW5cIjtcblxuZnVuY3Rpb24gdGV4dENvbnN0YW50KHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHRleHRGdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlMSA9IHZhbHVlKHRoaXMpO1xuICAgIHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTEgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZTE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiB0aGlzLnR3ZWVuKFwidGV4dFwiLCB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyB0ZXh0RnVuY3Rpb24odHdlZW5WYWx1ZSh0aGlzLCBcInRleHRcIiwgdmFsdWUpKVxuICAgICAgOiB0ZXh0Q29uc3RhbnQodmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSArIFwiXCIpKTtcbn1cbiIsImltcG9ydCB7VHJhbnNpdGlvbiwgbmV3SWR9IGZyb20gXCIuL2luZGV4XCI7XG5pbXBvcnQgc2NoZWR1bGUsIHtnZXR9IGZyb20gXCIuL3NjaGVkdWxlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgbmFtZSA9IHRoaXMuX25hbWUsXG4gICAgICBpZDAgPSB0aGlzLl9pZCxcbiAgICAgIGlkMSA9IG5ld0lkKCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgdmFyIGluaGVyaXQgPSBnZXQobm9kZSwgaWQwKTtcbiAgICAgICAgc2NoZWR1bGUobm9kZSwgbmFtZSwgaWQxLCBpLCBncm91cCwge1xuICAgICAgICAgIHRpbWU6IGluaGVyaXQudGltZSArIGluaGVyaXQuZGVsYXkgKyBpbmhlcml0LmR1cmF0aW9uLFxuICAgICAgICAgIGRlbGF5OiAwLFxuICAgICAgICAgIGR1cmF0aW9uOiBpbmhlcml0LmR1cmF0aW9uLFxuICAgICAgICAgIGVhc2U6IGluaGVyaXQuZWFzZVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oZ3JvdXBzLCB0aGlzLl9wYXJlbnRzLCBuYW1lLCBpZDEpO1xufVxuIiwiaW1wb3J0IHtnZXQsIHNldH0gZnJvbSBcIi4vc2NoZWR1bGVcIjtcblxuZnVuY3Rpb24gdHdlZW5SZW1vdmUoaWQsIG5hbWUpIHtcbiAgdmFyIHR3ZWVuMCwgdHdlZW4xO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjaGVkdWxlID0gc2V0KHRoaXMsIGlkKSxcbiAgICAgICAgdHdlZW4gPSBzY2hlZHVsZS50d2VlbjtcblxuICAgIC8vIElmIHRoaXMgbm9kZSBzaGFyZWQgdHdlZW4gd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgdHdlZW4gYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKHR3ZWVuICE9PSB0d2VlbjApIHtcbiAgICAgIHR3ZWVuMSA9IHR3ZWVuMCA9IHR3ZWVuO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSB0d2VlbjEubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmICh0d2VlbjFbaV0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICAgIHR3ZWVuMSA9IHR3ZWVuMS5zbGljZSgpO1xuICAgICAgICAgIHR3ZWVuMS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBzY2hlZHVsZS50d2VlbiA9IHR3ZWVuMTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdHdlZW5GdW5jdGlvbihpZCwgbmFtZSwgdmFsdWUpIHtcbiAgdmFyIHR3ZWVuMCwgdHdlZW4xO1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCksXG4gICAgICAgIHR3ZWVuID0gc2NoZWR1bGUudHdlZW47XG5cbiAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIHR3ZWVuIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsXG4gICAgLy8ganVzdCBhc3NpZ24gdGhlIHVwZGF0ZWQgc2hhcmVkIHR3ZWVuIGFuZCB3ZeKAmXJlIGRvbmUhXG4gICAgLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLlxuICAgIGlmICh0d2VlbiAhPT0gdHdlZW4wKSB7XG4gICAgICB0d2VlbjEgPSAodHdlZW4wID0gdHdlZW4pLnNsaWNlKCk7XG4gICAgICBmb3IgKHZhciB0ID0ge25hbWU6IG5hbWUsIHZhbHVlOiB2YWx1ZX0sIGkgPSAwLCBuID0gdHdlZW4xLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgICBpZiAodHdlZW4xW2ldLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgICB0d2VlbjFbaV0gPSB0O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoaSA9PT0gbikgdHdlZW4xLnB1c2godCk7XG4gICAgfVxuXG4gICAgc2NoZWR1bGUudHdlZW4gPSB0d2VlbjE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIG5hbWUgKz0gXCJcIjtcblxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB2YXIgdHdlZW4gPSBnZXQodGhpcy5ub2RlKCksIGlkKS50d2VlbjtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IHR3ZWVuLmxlbmd0aCwgdDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKCh0ID0gdHdlZW5baV0pLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHQudmFsdWU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHRoaXMuZWFjaCgodmFsdWUgPT0gbnVsbCA/IHR3ZWVuUmVtb3ZlIDogdHdlZW5GdW5jdGlvbikoaWQsIG5hbWUsIHZhbHVlKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0d2VlblZhbHVlKHRyYW5zaXRpb24sIG5hbWUsIHZhbHVlKSB7XG4gIHZhciBpZCA9IHRyYW5zaXRpb24uX2lkO1xuXG4gIHRyYW5zaXRpb24uZWFjaChmdW5jdGlvbigpIHtcbiAgICB2YXIgc2NoZWR1bGUgPSBzZXQodGhpcywgaWQpO1xuICAgIChzY2hlZHVsZS52YWx1ZSB8fCAoc2NoZWR1bGUudmFsdWUgPSB7fSkpW25hbWVdID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICByZXR1cm4gZ2V0KG5vZGUsIGlkKS52YWx1ZVtuYW1lXTtcbiAgfTtcbn1cbiIsImltcG9ydCB7UmVkQmxhY2tOb2RlfSBmcm9tIFwiLi9SZWRCbGFja1RyZWVcIjtcbmltcG9ydCB7Y3JlYXRlQ2VsbH0gZnJvbSBcIi4vQ2VsbFwiO1xuaW1wb3J0IHthdHRhY2hDaXJjbGUsIGRldGFjaENpcmNsZX0gZnJvbSBcIi4vQ2lyY2xlXCI7XG5pbXBvcnQge2NyZWF0ZUVkZ2UsIHNldEVkZ2VFbmR9IGZyb20gXCIuL0VkZ2VcIjtcbmltcG9ydCB7YmVhY2hlcywgZXBzaWxvbn0gZnJvbSBcIi4vRGlhZ3JhbVwiO1xuXG52YXIgYmVhY2hQb29sID0gW107XG5cbmZ1bmN0aW9uIEJlYWNoKCkge1xuICBSZWRCbGFja05vZGUodGhpcyk7XG4gIHRoaXMuZWRnZSA9XG4gIHRoaXMuc2l0ZSA9XG4gIHRoaXMuY2lyY2xlID0gbnVsbDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQmVhY2goc2l0ZSkge1xuICB2YXIgYmVhY2ggPSBiZWFjaFBvb2wucG9wKCkgfHwgbmV3IEJlYWNoO1xuICBiZWFjaC5zaXRlID0gc2l0ZTtcbiAgcmV0dXJuIGJlYWNoO1xufVxuXG5mdW5jdGlvbiBkZXRhY2hCZWFjaChiZWFjaCkge1xuICBkZXRhY2hDaXJjbGUoYmVhY2gpO1xuICBiZWFjaGVzLnJlbW92ZShiZWFjaCk7XG4gIGJlYWNoUG9vbC5wdXNoKGJlYWNoKTtcbiAgUmVkQmxhY2tOb2RlKGJlYWNoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUJlYWNoKGJlYWNoKSB7XG4gIHZhciBjaXJjbGUgPSBiZWFjaC5jaXJjbGUsXG4gICAgICB4ID0gY2lyY2xlLngsXG4gICAgICB5ID0gY2lyY2xlLmN5LFxuICAgICAgdmVydGV4ID0gW3gsIHldLFxuICAgICAgcHJldmlvdXMgPSBiZWFjaC5QLFxuICAgICAgbmV4dCA9IGJlYWNoLk4sXG4gICAgICBkaXNhcHBlYXJpbmcgPSBbYmVhY2hdO1xuXG4gIGRldGFjaEJlYWNoKGJlYWNoKTtcblxuICB2YXIgbEFyYyA9IHByZXZpb3VzO1xuICB3aGlsZSAobEFyYy5jaXJjbGVcbiAgICAgICYmIE1hdGguYWJzKHggLSBsQXJjLmNpcmNsZS54KSA8IGVwc2lsb25cbiAgICAgICYmIE1hdGguYWJzKHkgLSBsQXJjLmNpcmNsZS5jeSkgPCBlcHNpbG9uKSB7XG4gICAgcHJldmlvdXMgPSBsQXJjLlA7XG4gICAgZGlzYXBwZWFyaW5nLnVuc2hpZnQobEFyYyk7XG4gICAgZGV0YWNoQmVhY2gobEFyYyk7XG4gICAgbEFyYyA9IHByZXZpb3VzO1xuICB9XG5cbiAgZGlzYXBwZWFyaW5nLnVuc2hpZnQobEFyYyk7XG4gIGRldGFjaENpcmNsZShsQXJjKTtcblxuICB2YXIgckFyYyA9IG5leHQ7XG4gIHdoaWxlIChyQXJjLmNpcmNsZVxuICAgICAgJiYgTWF0aC5hYnMoeCAtIHJBcmMuY2lyY2xlLngpIDwgZXBzaWxvblxuICAgICAgJiYgTWF0aC5hYnMoeSAtIHJBcmMuY2lyY2xlLmN5KSA8IGVwc2lsb24pIHtcbiAgICBuZXh0ID0gckFyYy5OO1xuICAgIGRpc2FwcGVhcmluZy5wdXNoKHJBcmMpO1xuICAgIGRldGFjaEJlYWNoKHJBcmMpO1xuICAgIHJBcmMgPSBuZXh0O1xuICB9XG5cbiAgZGlzYXBwZWFyaW5nLnB1c2gockFyYyk7XG4gIGRldGFjaENpcmNsZShyQXJjKTtcblxuICB2YXIgbkFyY3MgPSBkaXNhcHBlYXJpbmcubGVuZ3RoLFxuICAgICAgaUFyYztcbiAgZm9yIChpQXJjID0gMTsgaUFyYyA8IG5BcmNzOyArK2lBcmMpIHtcbiAgICByQXJjID0gZGlzYXBwZWFyaW5nW2lBcmNdO1xuICAgIGxBcmMgPSBkaXNhcHBlYXJpbmdbaUFyYyAtIDFdO1xuICAgIHNldEVkZ2VFbmQockFyYy5lZGdlLCBsQXJjLnNpdGUsIHJBcmMuc2l0ZSwgdmVydGV4KTtcbiAgfVxuXG4gIGxBcmMgPSBkaXNhcHBlYXJpbmdbMF07XG4gIHJBcmMgPSBkaXNhcHBlYXJpbmdbbkFyY3MgLSAxXTtcbiAgckFyYy5lZGdlID0gY3JlYXRlRWRnZShsQXJjLnNpdGUsIHJBcmMuc2l0ZSwgbnVsbCwgdmVydGV4KTtcblxuICBhdHRhY2hDaXJjbGUobEFyYyk7XG4gIGF0dGFjaENpcmNsZShyQXJjKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEJlYWNoKHNpdGUpIHtcbiAgdmFyIHggPSBzaXRlWzBdLFxuICAgICAgZGlyZWN0cml4ID0gc2l0ZVsxXSxcbiAgICAgIGxBcmMsXG4gICAgICByQXJjLFxuICAgICAgZHhsLFxuICAgICAgZHhyLFxuICAgICAgbm9kZSA9IGJlYWNoZXMuXztcblxuICB3aGlsZSAobm9kZSkge1xuICAgIGR4bCA9IGxlZnRCcmVha1BvaW50KG5vZGUsIGRpcmVjdHJpeCkgLSB4O1xuICAgIGlmIChkeGwgPiBlcHNpbG9uKSBub2RlID0gbm9kZS5MOyBlbHNlIHtcbiAgICAgIGR4ciA9IHggLSByaWdodEJyZWFrUG9pbnQobm9kZSwgZGlyZWN0cml4KTtcbiAgICAgIGlmIChkeHIgPiBlcHNpbG9uKSB7XG4gICAgICAgIGlmICghbm9kZS5SKSB7XG4gICAgICAgICAgbEFyYyA9IG5vZGU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgbm9kZSA9IG5vZGUuUjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChkeGwgPiAtZXBzaWxvbikge1xuICAgICAgICAgIGxBcmMgPSBub2RlLlA7XG4gICAgICAgICAgckFyYyA9IG5vZGU7XG4gICAgICAgIH0gZWxzZSBpZiAoZHhyID4gLWVwc2lsb24pIHtcbiAgICAgICAgICBsQXJjID0gbm9kZTtcbiAgICAgICAgICByQXJjID0gbm9kZS5OO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxBcmMgPSByQXJjID0gbm9kZTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjcmVhdGVDZWxsKHNpdGUpO1xuICB2YXIgbmV3QXJjID0gY3JlYXRlQmVhY2goc2l0ZSk7XG4gIGJlYWNoZXMuaW5zZXJ0KGxBcmMsIG5ld0FyYyk7XG5cbiAgaWYgKCFsQXJjICYmICFyQXJjKSByZXR1cm47XG5cbiAgaWYgKGxBcmMgPT09IHJBcmMpIHtcbiAgICBkZXRhY2hDaXJjbGUobEFyYyk7XG4gICAgckFyYyA9IGNyZWF0ZUJlYWNoKGxBcmMuc2l0ZSk7XG4gICAgYmVhY2hlcy5pbnNlcnQobmV3QXJjLCByQXJjKTtcbiAgICBuZXdBcmMuZWRnZSA9IHJBcmMuZWRnZSA9IGNyZWF0ZUVkZ2UobEFyYy5zaXRlLCBuZXdBcmMuc2l0ZSk7XG4gICAgYXR0YWNoQ2lyY2xlKGxBcmMpO1xuICAgIGF0dGFjaENpcmNsZShyQXJjKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoIXJBcmMpIHsgLy8gJiYgbEFyY1xuICAgIG5ld0FyYy5lZGdlID0gY3JlYXRlRWRnZShsQXJjLnNpdGUsIG5ld0FyYy5zaXRlKTtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBlbHNlIGxBcmMgIT09IHJBcmNcbiAgZGV0YWNoQ2lyY2xlKGxBcmMpO1xuICBkZXRhY2hDaXJjbGUockFyYyk7XG5cbiAgdmFyIGxTaXRlID0gbEFyYy5zaXRlLFxuICAgICAgYXggPSBsU2l0ZVswXSxcbiAgICAgIGF5ID0gbFNpdGVbMV0sXG4gICAgICBieCA9IHNpdGVbMF0gLSBheCxcbiAgICAgIGJ5ID0gc2l0ZVsxXSAtIGF5LFxuICAgICAgclNpdGUgPSByQXJjLnNpdGUsXG4gICAgICBjeCA9IHJTaXRlWzBdIC0gYXgsXG4gICAgICBjeSA9IHJTaXRlWzFdIC0gYXksXG4gICAgICBkID0gMiAqIChieCAqIGN5IC0gYnkgKiBjeCksXG4gICAgICBoYiA9IGJ4ICogYnggKyBieSAqIGJ5LFxuICAgICAgaGMgPSBjeCAqIGN4ICsgY3kgKiBjeSxcbiAgICAgIHZlcnRleCA9IFsoY3kgKiBoYiAtIGJ5ICogaGMpIC8gZCArIGF4LCAoYnggKiBoYyAtIGN4ICogaGIpIC8gZCArIGF5XTtcblxuICBzZXRFZGdlRW5kKHJBcmMuZWRnZSwgbFNpdGUsIHJTaXRlLCB2ZXJ0ZXgpO1xuICBuZXdBcmMuZWRnZSA9IGNyZWF0ZUVkZ2UobFNpdGUsIHNpdGUsIG51bGwsIHZlcnRleCk7XG4gIHJBcmMuZWRnZSA9IGNyZWF0ZUVkZ2Uoc2l0ZSwgclNpdGUsIG51bGwsIHZlcnRleCk7XG4gIGF0dGFjaENpcmNsZShsQXJjKTtcbiAgYXR0YWNoQ2lyY2xlKHJBcmMpO1xufVxuXG5mdW5jdGlvbiBsZWZ0QnJlYWtQb2ludChhcmMsIGRpcmVjdHJpeCkge1xuICB2YXIgc2l0ZSA9IGFyYy5zaXRlLFxuICAgICAgcmZvY3ggPSBzaXRlWzBdLFxuICAgICAgcmZvY3kgPSBzaXRlWzFdLFxuICAgICAgcGJ5MiA9IHJmb2N5IC0gZGlyZWN0cml4O1xuXG4gIGlmICghcGJ5MikgcmV0dXJuIHJmb2N4O1xuXG4gIHZhciBsQXJjID0gYXJjLlA7XG4gIGlmICghbEFyYykgcmV0dXJuIC1JbmZpbml0eTtcblxuICBzaXRlID0gbEFyYy5zaXRlO1xuICB2YXIgbGZvY3ggPSBzaXRlWzBdLFxuICAgICAgbGZvY3kgPSBzaXRlWzFdLFxuICAgICAgcGxieTIgPSBsZm9jeSAtIGRpcmVjdHJpeDtcblxuICBpZiAoIXBsYnkyKSByZXR1cm4gbGZvY3g7XG5cbiAgdmFyIGhsID0gbGZvY3ggLSByZm9jeCxcbiAgICAgIGFieTIgPSAxIC8gcGJ5MiAtIDEgLyBwbGJ5MixcbiAgICAgIGIgPSBobCAvIHBsYnkyO1xuXG4gIGlmIChhYnkyKSByZXR1cm4gKC1iICsgTWF0aC5zcXJ0KGIgKiBiIC0gMiAqIGFieTIgKiAoaGwgKiBobCAvICgtMiAqIHBsYnkyKSAtIGxmb2N5ICsgcGxieTIgLyAyICsgcmZvY3kgLSBwYnkyIC8gMikpKSAvIGFieTIgKyByZm9jeDtcblxuICByZXR1cm4gKHJmb2N4ICsgbGZvY3gpIC8gMjtcbn1cblxuZnVuY3Rpb24gcmlnaHRCcmVha1BvaW50KGFyYywgZGlyZWN0cml4KSB7XG4gIHZhciByQXJjID0gYXJjLk47XG4gIGlmIChyQXJjKSByZXR1cm4gbGVmdEJyZWFrUG9pbnQockFyYywgZGlyZWN0cml4KTtcbiAgdmFyIHNpdGUgPSBhcmMuc2l0ZTtcbiAgcmV0dXJuIHNpdGVbMV0gPT09IGRpcmVjdHJpeCA/IHNpdGVbMF0gOiBJbmZpbml0eTtcbn1cbiIsImltcG9ydCB7Y3JlYXRlQm9yZGVyRWRnZX0gZnJvbSBcIi4vRWRnZVwiO1xuaW1wb3J0IHtjZWxscywgZWRnZXMsIGVwc2lsb259IGZyb20gXCIuL0RpYWdyYW1cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNlbGwoc2l0ZSkge1xuICByZXR1cm4gY2VsbHNbc2l0ZS5pbmRleF0gPSB7XG4gICAgc2l0ZTogc2l0ZSxcbiAgICBoYWxmZWRnZXM6IFtdXG4gIH07XG59XG5cbmZ1bmN0aW9uIGNlbGxIYWxmZWRnZUFuZ2xlKGNlbGwsIGVkZ2UpIHtcbiAgdmFyIHNpdGUgPSBjZWxsLnNpdGUsXG4gICAgICB2YSA9IGVkZ2UubGVmdCxcbiAgICAgIHZiID0gZWRnZS5yaWdodDtcbiAgaWYgKHNpdGUgPT09IHZiKSB2YiA9IHZhLCB2YSA9IHNpdGU7XG4gIGlmICh2YikgcmV0dXJuIE1hdGguYXRhbjIodmJbMV0gLSB2YVsxXSwgdmJbMF0gLSB2YVswXSk7XG4gIGlmIChzaXRlID09PSB2YSkgdmEgPSBlZGdlWzFdLCB2YiA9IGVkZ2VbMF07XG4gIGVsc2UgdmEgPSBlZGdlWzBdLCB2YiA9IGVkZ2VbMV07XG4gIHJldHVybiBNYXRoLmF0YW4yKHZhWzBdIC0gdmJbMF0sIHZiWzFdIC0gdmFbMV0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2VsbEhhbGZlZGdlU3RhcnQoY2VsbCwgZWRnZSkge1xuICByZXR1cm4gZWRnZVsrKGVkZ2UubGVmdCAhPT0gY2VsbC5zaXRlKV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjZWxsSGFsZmVkZ2VFbmQoY2VsbCwgZWRnZSkge1xuICByZXR1cm4gZWRnZVsrKGVkZ2UubGVmdCA9PT0gY2VsbC5zaXRlKV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzb3J0Q2VsbEhhbGZlZGdlcygpIHtcbiAgZm9yICh2YXIgaSA9IDAsIG4gPSBjZWxscy5sZW5ndGgsIGNlbGwsIGhhbGZlZGdlcywgaiwgbTsgaSA8IG47ICsraSkge1xuICAgIGlmICgoY2VsbCA9IGNlbGxzW2ldKSAmJiAobSA9IChoYWxmZWRnZXMgPSBjZWxsLmhhbGZlZGdlcykubGVuZ3RoKSkge1xuICAgICAgdmFyIGluZGV4ID0gbmV3IEFycmF5KG0pLFxuICAgICAgICAgIGFycmF5ID0gbmV3IEFycmF5KG0pO1xuICAgICAgZm9yIChqID0gMDsgaiA8IG07ICsraikgaW5kZXhbal0gPSBqLCBhcnJheVtqXSA9IGNlbGxIYWxmZWRnZUFuZ2xlKGNlbGwsIGVkZ2VzW2hhbGZlZGdlc1tqXV0pO1xuICAgICAgaW5kZXguc29ydChmdW5jdGlvbihpLCBqKSB7IHJldHVybiBhcnJheVtqXSAtIGFycmF5W2ldOyB9KTtcbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIGFycmF5W2pdID0gaGFsZmVkZ2VzW2luZGV4W2pdXTtcbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIGhhbGZlZGdlc1tqXSA9IGFycmF5W2pdO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY2xpcENlbGxzKHgwLCB5MCwgeDEsIHkxKSB7XG4gIHZhciBuQ2VsbHMgPSBjZWxscy5sZW5ndGgsXG4gICAgICBpQ2VsbCxcbiAgICAgIGNlbGwsXG4gICAgICBzaXRlLFxuICAgICAgaUhhbGZlZGdlLFxuICAgICAgaGFsZmVkZ2VzLFxuICAgICAgbkhhbGZlZGdlcyxcbiAgICAgIHN0YXJ0LFxuICAgICAgc3RhcnRYLFxuICAgICAgc3RhcnRZLFxuICAgICAgZW5kLFxuICAgICAgZW5kWCxcbiAgICAgIGVuZFksXG4gICAgICBjb3ZlciA9IHRydWU7XG5cbiAgZm9yIChpQ2VsbCA9IDA7IGlDZWxsIDwgbkNlbGxzOyArK2lDZWxsKSB7XG4gICAgaWYgKGNlbGwgPSBjZWxsc1tpQ2VsbF0pIHtcbiAgICAgIHNpdGUgPSBjZWxsLnNpdGU7XG4gICAgICBoYWxmZWRnZXMgPSBjZWxsLmhhbGZlZGdlcztcbiAgICAgIGlIYWxmZWRnZSA9IGhhbGZlZGdlcy5sZW5ndGg7XG5cbiAgICAgIC8vIFJlbW92ZSBhbnkgZGFuZ2xpbmcgY2xpcHBlZCBlZGdlcy5cbiAgICAgIHdoaWxlIChpSGFsZmVkZ2UtLSkge1xuICAgICAgICBpZiAoIWVkZ2VzW2hhbGZlZGdlc1tpSGFsZmVkZ2VdXSkge1xuICAgICAgICAgIGhhbGZlZGdlcy5zcGxpY2UoaUhhbGZlZGdlLCAxKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBJbnNlcnQgYW55IGJvcmRlciBlZGdlcyBhcyBuZWNlc3NhcnkuXG4gICAgICBpSGFsZmVkZ2UgPSAwLCBuSGFsZmVkZ2VzID0gaGFsZmVkZ2VzLmxlbmd0aDtcbiAgICAgIHdoaWxlIChpSGFsZmVkZ2UgPCBuSGFsZmVkZ2VzKSB7XG4gICAgICAgIGVuZCA9IGNlbGxIYWxmZWRnZUVuZChjZWxsLCBlZGdlc1toYWxmZWRnZXNbaUhhbGZlZGdlXV0pLCBlbmRYID0gZW5kWzBdLCBlbmRZID0gZW5kWzFdO1xuICAgICAgICBzdGFydCA9IGNlbGxIYWxmZWRnZVN0YXJ0KGNlbGwsIGVkZ2VzW2hhbGZlZGdlc1srK2lIYWxmZWRnZSAlIG5IYWxmZWRnZXNdXSksIHN0YXJ0WCA9IHN0YXJ0WzBdLCBzdGFydFkgPSBzdGFydFsxXTtcbiAgICAgICAgaWYgKE1hdGguYWJzKGVuZFggLSBzdGFydFgpID4gZXBzaWxvbiB8fCBNYXRoLmFicyhlbmRZIC0gc3RhcnRZKSA+IGVwc2lsb24pIHtcbiAgICAgICAgICBoYWxmZWRnZXMuc3BsaWNlKGlIYWxmZWRnZSwgMCwgZWRnZXMucHVzaChjcmVhdGVCb3JkZXJFZGdlKHNpdGUsIGVuZCxcbiAgICAgICAgICAgICAgTWF0aC5hYnMoZW5kWCAtIHgwKSA8IGVwc2lsb24gJiYgeTEgLSBlbmRZID4gZXBzaWxvbiA/IFt4MCwgTWF0aC5hYnMoc3RhcnRYIC0geDApIDwgZXBzaWxvbiA/IHN0YXJ0WSA6IHkxXVxuICAgICAgICAgICAgICA6IE1hdGguYWJzKGVuZFkgLSB5MSkgPCBlcHNpbG9uICYmIHgxIC0gZW5kWCA+IGVwc2lsb24gPyBbTWF0aC5hYnMoc3RhcnRZIC0geTEpIDwgZXBzaWxvbiA/IHN0YXJ0WCA6IHgxLCB5MV1cbiAgICAgICAgICAgICAgOiBNYXRoLmFicyhlbmRYIC0geDEpIDwgZXBzaWxvbiAmJiBlbmRZIC0geTAgPiBlcHNpbG9uID8gW3gxLCBNYXRoLmFicyhzdGFydFggLSB4MSkgPCBlcHNpbG9uID8gc3RhcnRZIDogeTBdXG4gICAgICAgICAgICAgIDogTWF0aC5hYnMoZW5kWSAtIHkwKSA8IGVwc2lsb24gJiYgZW5kWCAtIHgwID4gZXBzaWxvbiA/IFtNYXRoLmFicyhzdGFydFkgLSB5MCkgPCBlcHNpbG9uID8gc3RhcnRYIDogeDAsIHkwXVxuICAgICAgICAgICAgICA6IG51bGwpKSAtIDEpO1xuICAgICAgICAgICsrbkhhbGZlZGdlcztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobkhhbGZlZGdlcykgY292ZXIgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICAvLyBJZiB0aGVyZSB3ZXJlbuKAmXQgYW55IGVkZ2VzLCBoYXZlIHRoZSBjbG9zZXN0IHNpdGUgY292ZXIgdGhlIGV4dGVudC5cbiAgLy8gSXQgZG9lc27igJl0IG1hdHRlciB3aGljaCBjb3JuZXIgb2YgdGhlIGV4dGVudCB3ZSBtZWFzdXJlIVxuICBpZiAoY292ZXIpIHtcbiAgICB2YXIgZHgsIGR5LCBkMiwgZGMgPSBJbmZpbml0eTtcblxuICAgIGZvciAoaUNlbGwgPSAwLCBjb3ZlciA9IG51bGw7IGlDZWxsIDwgbkNlbGxzOyArK2lDZWxsKSB7XG4gICAgICBpZiAoY2VsbCA9IGNlbGxzW2lDZWxsXSkge1xuICAgICAgICBzaXRlID0gY2VsbC5zaXRlO1xuICAgICAgICBkeCA9IHNpdGVbMF0gLSB4MDtcbiAgICAgICAgZHkgPSBzaXRlWzFdIC0geTA7XG4gICAgICAgIGQyID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgICAgIGlmIChkMiA8IGRjKSBkYyA9IGQyLCBjb3ZlciA9IGNlbGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNvdmVyKSB7XG4gICAgICB2YXIgdjAwID0gW3gwLCB5MF0sIHYwMSA9IFt4MCwgeTFdLCB2MTEgPSBbeDEsIHkxXSwgdjEwID0gW3gxLCB5MF07XG4gICAgICBjb3Zlci5oYWxmZWRnZXMucHVzaChcbiAgICAgICAgZWRnZXMucHVzaChjcmVhdGVCb3JkZXJFZGdlKHNpdGUgPSBjb3Zlci5zaXRlLCB2MDAsIHYwMSkpIC0gMSxcbiAgICAgICAgZWRnZXMucHVzaChjcmVhdGVCb3JkZXJFZGdlKHNpdGUsIHYwMSwgdjExKSkgLSAxLFxuICAgICAgICBlZGdlcy5wdXNoKGNyZWF0ZUJvcmRlckVkZ2Uoc2l0ZSwgdjExLCB2MTApKSAtIDEsXG4gICAgICAgIGVkZ2VzLnB1c2goY3JlYXRlQm9yZGVyRWRnZShzaXRlLCB2MTAsIHYwMCkpIC0gMVxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICAvLyBMYXN0bHkgZGVsZXRlIGFueSBjZWxscyB3aXRoIG5vIGVkZ2VzOyB0aGVzZSB3ZXJlIGVudGlyZWx5IGNsaXBwZWQuXG4gIGZvciAoaUNlbGwgPSAwOyBpQ2VsbCA8IG5DZWxsczsgKytpQ2VsbCkge1xuICAgIGlmIChjZWxsID0gY2VsbHNbaUNlbGxdKSB7XG4gICAgICBpZiAoIWNlbGwuaGFsZmVkZ2VzLmxlbmd0aCkge1xuICAgICAgICBkZWxldGUgY2VsbHNbaUNlbGxdO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IHtSZWRCbGFja05vZGV9IGZyb20gXCIuL1JlZEJsYWNrVHJlZVwiO1xuaW1wb3J0IHtjaXJjbGVzLCBlcHNpbG9uMn0gZnJvbSBcIi4vRGlhZ3JhbVwiO1xuXG52YXIgY2lyY2xlUG9vbCA9IFtdO1xuXG5leHBvcnQgdmFyIGZpcnN0Q2lyY2xlO1xuXG5mdW5jdGlvbiBDaXJjbGUoKSB7XG4gIFJlZEJsYWNrTm9kZSh0aGlzKTtcbiAgdGhpcy54ID1cbiAgdGhpcy55ID1cbiAgdGhpcy5hcmMgPVxuICB0aGlzLnNpdGUgPVxuICB0aGlzLmN5ID0gbnVsbDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGF0dGFjaENpcmNsZShhcmMpIHtcbiAgdmFyIGxBcmMgPSBhcmMuUCxcbiAgICAgIHJBcmMgPSBhcmMuTjtcblxuICBpZiAoIWxBcmMgfHwgIXJBcmMpIHJldHVybjtcblxuICB2YXIgbFNpdGUgPSBsQXJjLnNpdGUsXG4gICAgICBjU2l0ZSA9IGFyYy5zaXRlLFxuICAgICAgclNpdGUgPSByQXJjLnNpdGU7XG5cbiAgaWYgKGxTaXRlID09PSByU2l0ZSkgcmV0dXJuO1xuXG4gIHZhciBieCA9IGNTaXRlWzBdLFxuICAgICAgYnkgPSBjU2l0ZVsxXSxcbiAgICAgIGF4ID0gbFNpdGVbMF0gLSBieCxcbiAgICAgIGF5ID0gbFNpdGVbMV0gLSBieSxcbiAgICAgIGN4ID0gclNpdGVbMF0gLSBieCxcbiAgICAgIGN5ID0gclNpdGVbMV0gLSBieTtcblxuICB2YXIgZCA9IDIgKiAoYXggKiBjeSAtIGF5ICogY3gpO1xuICBpZiAoZCA+PSAtZXBzaWxvbjIpIHJldHVybjtcblxuICB2YXIgaGEgPSBheCAqIGF4ICsgYXkgKiBheSxcbiAgICAgIGhjID0gY3ggKiBjeCArIGN5ICogY3ksXG4gICAgICB4ID0gKGN5ICogaGEgLSBheSAqIGhjKSAvIGQsXG4gICAgICB5ID0gKGF4ICogaGMgLSBjeCAqIGhhKSAvIGQ7XG5cbiAgdmFyIGNpcmNsZSA9IGNpcmNsZVBvb2wucG9wKCkgfHwgbmV3IENpcmNsZTtcbiAgY2lyY2xlLmFyYyA9IGFyYztcbiAgY2lyY2xlLnNpdGUgPSBjU2l0ZTtcbiAgY2lyY2xlLnggPSB4ICsgYng7XG4gIGNpcmNsZS55ID0gKGNpcmNsZS5jeSA9IHkgKyBieSkgKyBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSk7IC8vIHkgYm90dG9tXG5cbiAgYXJjLmNpcmNsZSA9IGNpcmNsZTtcblxuICB2YXIgYmVmb3JlID0gbnVsbCxcbiAgICAgIG5vZGUgPSBjaXJjbGVzLl87XG5cbiAgd2hpbGUgKG5vZGUpIHtcbiAgICBpZiAoY2lyY2xlLnkgPCBub2RlLnkgfHwgKGNpcmNsZS55ID09PSBub2RlLnkgJiYgY2lyY2xlLnggPD0gbm9kZS54KSkge1xuICAgICAgaWYgKG5vZGUuTCkgbm9kZSA9IG5vZGUuTDtcbiAgICAgIGVsc2UgeyBiZWZvcmUgPSBub2RlLlA7IGJyZWFrOyB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChub2RlLlIpIG5vZGUgPSBub2RlLlI7XG4gICAgICBlbHNlIHsgYmVmb3JlID0gbm9kZTsgYnJlYWs7IH1cbiAgICB9XG4gIH1cblxuICBjaXJjbGVzLmluc2VydChiZWZvcmUsIGNpcmNsZSk7XG4gIGlmICghYmVmb3JlKSBmaXJzdENpcmNsZSA9IGNpcmNsZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRldGFjaENpcmNsZShhcmMpIHtcbiAgdmFyIGNpcmNsZSA9IGFyYy5jaXJjbGU7XG4gIGlmIChjaXJjbGUpIHtcbiAgICBpZiAoIWNpcmNsZS5QKSBmaXJzdENpcmNsZSA9IGNpcmNsZS5OO1xuICAgIGNpcmNsZXMucmVtb3ZlKGNpcmNsZSk7XG4gICAgY2lyY2xlUG9vbC5wdXNoKGNpcmNsZSk7XG4gICAgUmVkQmxhY2tOb2RlKGNpcmNsZSk7XG4gICAgYXJjLmNpcmNsZSA9IG51bGw7XG4gIH1cbn1cbiIsImltcG9ydCB7YWRkQmVhY2gsIHJlbW92ZUJlYWNofSBmcm9tIFwiLi9CZWFjaFwiO1xuaW1wb3J0IHtzb3J0Q2VsbEhhbGZlZGdlcywgY2VsbEhhbGZlZGdlU3RhcnQsIGNsaXBDZWxsc30gZnJvbSBcIi4vQ2VsbFwiO1xuaW1wb3J0IHtmaXJzdENpcmNsZX0gZnJvbSBcIi4vQ2lyY2xlXCI7XG5pbXBvcnQge2NsaXBFZGdlc30gZnJvbSBcIi4vRWRnZVwiO1xuaW1wb3J0IFJlZEJsYWNrVHJlZSBmcm9tIFwiLi9SZWRCbGFja1RyZWVcIjtcblxuZXhwb3J0IHZhciBlcHNpbG9uID0gMWUtNjtcbmV4cG9ydCB2YXIgZXBzaWxvbjIgPSAxZS0xMjtcbmV4cG9ydCB2YXIgYmVhY2hlcztcbmV4cG9ydCB2YXIgY2VsbHM7XG5leHBvcnQgdmFyIGNpcmNsZXM7XG5leHBvcnQgdmFyIGVkZ2VzO1xuXG5mdW5jdGlvbiB0cmlhbmdsZUFyZWEoYSwgYiwgYykge1xuICByZXR1cm4gKGFbMF0gLSBjWzBdKSAqIChiWzFdIC0gYVsxXSkgLSAoYVswXSAtIGJbMF0pICogKGNbMV0gLSBhWzFdKTtcbn1cblxuZnVuY3Rpb24gbGV4aWNvZ3JhcGhpYyhhLCBiKSB7XG4gIHJldHVybiBiWzFdIC0gYVsxXVxuICAgICAgfHwgYlswXSAtIGFbMF07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERpYWdyYW0oc2l0ZXMsIGV4dGVudCkge1xuICB2YXIgc2l0ZSA9IHNpdGVzLnNvcnQobGV4aWNvZ3JhcGhpYykucG9wKCksXG4gICAgICB4LFxuICAgICAgeSxcbiAgICAgIGNpcmNsZTtcblxuICBlZGdlcyA9IFtdO1xuICBjZWxscyA9IG5ldyBBcnJheShzaXRlcy5sZW5ndGgpO1xuICBiZWFjaGVzID0gbmV3IFJlZEJsYWNrVHJlZTtcbiAgY2lyY2xlcyA9IG5ldyBSZWRCbGFja1RyZWU7XG5cbiAgd2hpbGUgKHRydWUpIHtcbiAgICBjaXJjbGUgPSBmaXJzdENpcmNsZTtcbiAgICBpZiAoc2l0ZSAmJiAoIWNpcmNsZSB8fCBzaXRlWzFdIDwgY2lyY2xlLnkgfHwgKHNpdGVbMV0gPT09IGNpcmNsZS55ICYmIHNpdGVbMF0gPCBjaXJjbGUueCkpKSB7XG4gICAgICBpZiAoc2l0ZVswXSAhPT0geCB8fCBzaXRlWzFdICE9PSB5KSB7XG4gICAgICAgIGFkZEJlYWNoKHNpdGUpO1xuICAgICAgICB4ID0gc2l0ZVswXSwgeSA9IHNpdGVbMV07XG4gICAgICB9XG4gICAgICBzaXRlID0gc2l0ZXMucG9wKCk7XG4gICAgfSBlbHNlIGlmIChjaXJjbGUpIHtcbiAgICAgIHJlbW92ZUJlYWNoKGNpcmNsZS5hcmMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBzb3J0Q2VsbEhhbGZlZGdlcygpO1xuXG4gIGlmIChleHRlbnQpIHtcbiAgICB2YXIgeDAgPSArZXh0ZW50WzBdWzBdLFxuICAgICAgICB5MCA9ICtleHRlbnRbMF1bMV0sXG4gICAgICAgIHgxID0gK2V4dGVudFsxXVswXSxcbiAgICAgICAgeTEgPSArZXh0ZW50WzFdWzFdO1xuICAgIGNsaXBFZGdlcyh4MCwgeTAsIHgxLCB5MSk7XG4gICAgY2xpcENlbGxzKHgwLCB5MCwgeDEsIHkxKTtcbiAgfVxuXG4gIHRoaXMuZWRnZXMgPSBlZGdlcztcbiAgdGhpcy5jZWxscyA9IGNlbGxzO1xuXG4gIGJlYWNoZXMgPVxuICBjaXJjbGVzID1cbiAgZWRnZXMgPVxuICBjZWxscyA9IG51bGw7XG59XG5cbkRpYWdyYW0ucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogRGlhZ3JhbSxcblxuICBwb2x5Z29uczogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGVkZ2VzID0gdGhpcy5lZGdlcztcblxuICAgIHJldHVybiB0aGlzLmNlbGxzLm1hcChmdW5jdGlvbihjZWxsKSB7XG4gICAgICB2YXIgcG9seWdvbiA9IGNlbGwuaGFsZmVkZ2VzLm1hcChmdW5jdGlvbihpKSB7IHJldHVybiBjZWxsSGFsZmVkZ2VTdGFydChjZWxsLCBlZGdlc1tpXSk7IH0pO1xuICAgICAgcG9seWdvbi5kYXRhID0gY2VsbC5zaXRlLmRhdGE7XG4gICAgICByZXR1cm4gcG9seWdvbjtcbiAgICB9KTtcbiAgfSxcblxuICB0cmlhbmdsZXM6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB0cmlhbmdsZXMgPSBbXSxcbiAgICAgICAgZWRnZXMgPSB0aGlzLmVkZ2VzO1xuXG4gICAgdGhpcy5jZWxscy5mb3JFYWNoKGZ1bmN0aW9uKGNlbGwsIGkpIHtcbiAgICAgIGlmICghKG0gPSAoaGFsZmVkZ2VzID0gY2VsbC5oYWxmZWRnZXMpLmxlbmd0aCkpIHJldHVybjtcbiAgICAgIHZhciBzaXRlID0gY2VsbC5zaXRlLFxuICAgICAgICAgIGhhbGZlZGdlcyxcbiAgICAgICAgICBqID0gLTEsXG4gICAgICAgICAgbSxcbiAgICAgICAgICBzMCxcbiAgICAgICAgICBlMSA9IGVkZ2VzW2hhbGZlZGdlc1ttIC0gMV1dLFxuICAgICAgICAgIHMxID0gZTEubGVmdCA9PT0gc2l0ZSA/IGUxLnJpZ2h0IDogZTEubGVmdDtcblxuICAgICAgd2hpbGUgKCsraiA8IG0pIHtcbiAgICAgICAgczAgPSBzMTtcbiAgICAgICAgZTEgPSBlZGdlc1toYWxmZWRnZXNbal1dO1xuICAgICAgICBzMSA9IGUxLmxlZnQgPT09IHNpdGUgPyBlMS5yaWdodCA6IGUxLmxlZnQ7XG4gICAgICAgIGlmIChzMCAmJiBzMSAmJiBpIDwgczAuaW5kZXggJiYgaSA8IHMxLmluZGV4ICYmIHRyaWFuZ2xlQXJlYShzaXRlLCBzMCwgczEpIDwgMCkge1xuICAgICAgICAgIHRyaWFuZ2xlcy5wdXNoKFtzaXRlLmRhdGEsIHMwLmRhdGEsIHMxLmRhdGFdKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRyaWFuZ2xlcztcbiAgfSxcblxuICBsaW5rczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWRnZXMuZmlsdGVyKGZ1bmN0aW9uKGVkZ2UpIHtcbiAgICAgIHJldHVybiBlZGdlLnJpZ2h0O1xuICAgIH0pLm1hcChmdW5jdGlvbihlZGdlKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzb3VyY2U6IGVkZ2UubGVmdC5kYXRhLFxuICAgICAgICB0YXJnZXQ6IGVkZ2UucmlnaHQuZGF0YVxuICAgICAgfTtcbiAgICB9KTtcbiAgfSxcblxuICBmaW5kOiBmdW5jdGlvbih4LCB5LCByYWRpdXMpIHtcbiAgICB2YXIgdGhhdCA9IHRoaXMsIGkwLCBpMSA9IHRoYXQuX2ZvdW5kIHx8IDAsIG4gPSB0aGF0LmNlbGxzLmxlbmd0aCwgY2VsbDtcblxuICAgIC8vIFVzZSB0aGUgcHJldmlvdXNseS1mb3VuZCBjZWxsLCBvciBzdGFydCB3aXRoIGFuIGFyYml0cmFyeSBvbmUuXG4gICAgd2hpbGUgKCEoY2VsbCA9IHRoYXQuY2VsbHNbaTFdKSkgaWYgKCsraTEgPj0gbikgcmV0dXJuIG51bGw7XG4gICAgdmFyIGR4ID0geCAtIGNlbGwuc2l0ZVswXSwgZHkgPSB5IC0gY2VsbC5zaXRlWzFdLCBkMiA9IGR4ICogZHggKyBkeSAqIGR5O1xuXG4gICAgLy8gVHJhdmVyc2UgdGhlIGhhbGYtZWRnZXMgdG8gZmluZCBhIGNsb3NlciBjZWxsLCBpZiBhbnkuXG4gICAgZG8ge1xuICAgICAgY2VsbCA9IHRoYXQuY2VsbHNbaTAgPSBpMV0sIGkxID0gbnVsbDtcbiAgICAgIGNlbGwuaGFsZmVkZ2VzLmZvckVhY2goZnVuY3Rpb24oZSkge1xuICAgICAgICB2YXIgZWRnZSA9IHRoYXQuZWRnZXNbZV0sIHYgPSBlZGdlLmxlZnQ7XG4gICAgICAgIGlmICgodiA9PT0gY2VsbC5zaXRlIHx8ICF2KSAmJiAhKHYgPSBlZGdlLnJpZ2h0KSkgcmV0dXJuO1xuICAgICAgICB2YXIgdnggPSB4IC0gdlswXSwgdnkgPSB5IC0gdlsxXSwgdjIgPSB2eCAqIHZ4ICsgdnkgKiB2eTtcbiAgICAgICAgaWYgKHYyIDwgZDIpIGQyID0gdjIsIGkxID0gdi5pbmRleDtcbiAgICAgIH0pO1xuICAgIH0gd2hpbGUgKGkxICE9PSBudWxsKTtcblxuICAgIHRoYXQuX2ZvdW5kID0gaTA7XG5cbiAgICByZXR1cm4gcmFkaXVzID09IG51bGwgfHwgZDIgPD0gcmFkaXVzICogcmFkaXVzID8gY2VsbC5zaXRlIDogbnVsbDtcbiAgfVxufVxuIiwiaW1wb3J0IHtjZWxscywgZWRnZXMsIGVwc2lsb259IGZyb20gXCIuL0RpYWdyYW1cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVkZ2UobGVmdCwgcmlnaHQsIHYwLCB2MSkge1xuICB2YXIgZWRnZSA9IFtudWxsLCBudWxsXSxcbiAgICAgIGluZGV4ID0gZWRnZXMucHVzaChlZGdlKSAtIDE7XG4gIGVkZ2UubGVmdCA9IGxlZnQ7XG4gIGVkZ2UucmlnaHQgPSByaWdodDtcbiAgaWYgKHYwKSBzZXRFZGdlRW5kKGVkZ2UsIGxlZnQsIHJpZ2h0LCB2MCk7XG4gIGlmICh2MSkgc2V0RWRnZUVuZChlZGdlLCByaWdodCwgbGVmdCwgdjEpO1xuICBjZWxsc1tsZWZ0LmluZGV4XS5oYWxmZWRnZXMucHVzaChpbmRleCk7XG4gIGNlbGxzW3JpZ2h0LmluZGV4XS5oYWxmZWRnZXMucHVzaChpbmRleCk7XG4gIHJldHVybiBlZGdlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQm9yZGVyRWRnZShsZWZ0LCB2MCwgdjEpIHtcbiAgdmFyIGVkZ2UgPSBbdjAsIHYxXTtcbiAgZWRnZS5sZWZ0ID0gbGVmdDtcbiAgcmV0dXJuIGVkZ2U7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRFZGdlRW5kKGVkZ2UsIGxlZnQsIHJpZ2h0LCB2ZXJ0ZXgpIHtcbiAgaWYgKCFlZGdlWzBdICYmICFlZGdlWzFdKSB7XG4gICAgZWRnZVswXSA9IHZlcnRleDtcbiAgICBlZGdlLmxlZnQgPSBsZWZ0O1xuICAgIGVkZ2UucmlnaHQgPSByaWdodDtcbiAgfSBlbHNlIGlmIChlZGdlLmxlZnQgPT09IHJpZ2h0KSB7XG4gICAgZWRnZVsxXSA9IHZlcnRleDtcbiAgfSBlbHNlIHtcbiAgICBlZGdlWzBdID0gdmVydGV4O1xuICB9XG59XG5cbi8vIExpYW5n4oCTQmFyc2t5IGxpbmUgY2xpcHBpbmcuXG5mdW5jdGlvbiBjbGlwRWRnZShlZGdlLCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgYSA9IGVkZ2VbMF0sXG4gICAgICBiID0gZWRnZVsxXSxcbiAgICAgIGF4ID0gYVswXSxcbiAgICAgIGF5ID0gYVsxXSxcbiAgICAgIGJ4ID0gYlswXSxcbiAgICAgIGJ5ID0gYlsxXSxcbiAgICAgIHQwID0gMCxcbiAgICAgIHQxID0gMSxcbiAgICAgIGR4ID0gYnggLSBheCxcbiAgICAgIGR5ID0gYnkgLSBheSxcbiAgICAgIHI7XG5cbiAgciA9IHgwIC0gYXg7XG4gIGlmICghZHggJiYgciA+IDApIHJldHVybjtcbiAgciAvPSBkeDtcbiAgaWYgKGR4IDwgMCkge1xuICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gIH0gZWxzZSBpZiAoZHggPiAwKSB7XG4gICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgfVxuXG4gIHIgPSB4MSAtIGF4O1xuICBpZiAoIWR4ICYmIHIgPCAwKSByZXR1cm47XG4gIHIgLz0gZHg7XG4gIGlmIChkeCA8IDApIHtcbiAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICB9IGVsc2UgaWYgKGR4ID4gMCkge1xuICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gIH1cblxuICByID0geTAgLSBheTtcbiAgaWYgKCFkeSAmJiByID4gMCkgcmV0dXJuO1xuICByIC89IGR5O1xuICBpZiAoZHkgPCAwKSB7XG4gICAgaWYgKHIgPCB0MCkgcmV0dXJuO1xuICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgfSBlbHNlIGlmIChkeSA+IDApIHtcbiAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICB9XG5cbiAgciA9IHkxIC0gYXk7XG4gIGlmICghZHkgJiYgciA8IDApIHJldHVybjtcbiAgciAvPSBkeTtcbiAgaWYgKGR5IDwgMCkge1xuICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICBpZiAociA+IHQwKSB0MCA9IHI7XG4gIH0gZWxzZSBpZiAoZHkgPiAwKSB7XG4gICAgaWYgKHIgPCB0MCkgcmV0dXJuO1xuICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgfVxuXG4gIGlmICghKHQwID4gMCkgJiYgISh0MSA8IDEpKSByZXR1cm4gdHJ1ZTsgLy8gVE9ETyBCZXR0ZXIgY2hlY2s/XG5cbiAgaWYgKHQwID4gMCkgZWRnZVswXSA9IFtheCArIHQwICogZHgsIGF5ICsgdDAgKiBkeV07XG4gIGlmICh0MSA8IDEpIGVkZ2VbMV0gPSBbYXggKyB0MSAqIGR4LCBheSArIHQxICogZHldO1xuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gY29ubmVjdEVkZ2UoZWRnZSwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgdmFyIHYxID0gZWRnZVsxXTtcbiAgaWYgKHYxKSByZXR1cm4gdHJ1ZTtcblxuICB2YXIgdjAgPSBlZGdlWzBdLFxuICAgICAgbGVmdCA9IGVkZ2UubGVmdCxcbiAgICAgIHJpZ2h0ID0gZWRnZS5yaWdodCxcbiAgICAgIGx4ID0gbGVmdFswXSxcbiAgICAgIGx5ID0gbGVmdFsxXSxcbiAgICAgIHJ4ID0gcmlnaHRbMF0sXG4gICAgICByeSA9IHJpZ2h0WzFdLFxuICAgICAgZnggPSAobHggKyByeCkgLyAyLFxuICAgICAgZnkgPSAobHkgKyByeSkgLyAyLFxuICAgICAgZm0sXG4gICAgICBmYjtcblxuICBpZiAocnkgPT09IGx5KSB7XG4gICAgaWYgKGZ4IDwgeDAgfHwgZnggPj0geDEpIHJldHVybjtcbiAgICBpZiAobHggPiByeCkge1xuICAgICAgaWYgKCF2MCkgdjAgPSBbZngsIHkwXTtcbiAgICAgIGVsc2UgaWYgKHYwWzFdID49IHkxKSByZXR1cm47XG4gICAgICB2MSA9IFtmeCwgeTFdO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoIXYwKSB2MCA9IFtmeCwgeTFdO1xuICAgICAgZWxzZSBpZiAodjBbMV0gPCB5MCkgcmV0dXJuO1xuICAgICAgdjEgPSBbZngsIHkwXTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZm0gPSAobHggLSByeCkgLyAocnkgLSBseSk7XG4gICAgZmIgPSBmeSAtIGZtICogZng7XG4gICAgaWYgKGZtIDwgLTEgfHwgZm0gPiAxKSB7XG4gICAgICBpZiAobHggPiByeCkge1xuICAgICAgICBpZiAoIXYwKSB2MCA9IFsoeTAgLSBmYikgLyBmbSwgeTBdO1xuICAgICAgICBlbHNlIGlmICh2MFsxXSA+PSB5MSkgcmV0dXJuO1xuICAgICAgICB2MSA9IFsoeTEgLSBmYikgLyBmbSwgeTFdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCF2MCkgdjAgPSBbKHkxIC0gZmIpIC8gZm0sIHkxXTtcbiAgICAgICAgZWxzZSBpZiAodjBbMV0gPCB5MCkgcmV0dXJuO1xuICAgICAgICB2MSA9IFsoeTAgLSBmYikgLyBmbSwgeTBdO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAobHkgPCByeSkge1xuICAgICAgICBpZiAoIXYwKSB2MCA9IFt4MCwgZm0gKiB4MCArIGZiXTtcbiAgICAgICAgZWxzZSBpZiAodjBbMF0gPj0geDEpIHJldHVybjtcbiAgICAgICAgdjEgPSBbeDEsIGZtICogeDEgKyBmYl07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoIXYwKSB2MCA9IFt4MSwgZm0gKiB4MSArIGZiXTtcbiAgICAgICAgZWxzZSBpZiAodjBbMF0gPCB4MCkgcmV0dXJuO1xuICAgICAgICB2MSA9IFt4MCwgZm0gKiB4MCArIGZiXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlZGdlWzBdID0gdjA7XG4gIGVkZ2VbMV0gPSB2MTtcbiAgcmV0dXJuIHRydWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGlwRWRnZXMoeDAsIHkwLCB4MSwgeTEpIHtcbiAgdmFyIGkgPSBlZGdlcy5sZW5ndGgsXG4gICAgICBlZGdlO1xuXG4gIHdoaWxlIChpLS0pIHtcbiAgICBpZiAoIWNvbm5lY3RFZGdlKGVkZ2UgPSBlZGdlc1tpXSwgeDAsIHkwLCB4MSwgeTEpXG4gICAgICAgIHx8ICFjbGlwRWRnZShlZGdlLCB4MCwgeTAsIHgxLCB5MSlcbiAgICAgICAgfHwgIShNYXRoLmFicyhlZGdlWzBdWzBdIC0gZWRnZVsxXVswXSkgPiBlcHNpbG9uXG4gICAgICAgICAgICB8fCBNYXRoLmFicyhlZGdlWzBdWzFdIC0gZWRnZVsxXVsxXSkgPiBlcHNpbG9uKSkge1xuICAgICAgZGVsZXRlIGVkZ2VzW2ldO1xuICAgIH1cbiAgfVxufVxuIiwiZnVuY3Rpb24gUmVkQmxhY2tUcmVlKCkge1xuICB0aGlzLl8gPSBudWxsOyAvLyByb290IG5vZGVcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFJlZEJsYWNrTm9kZShub2RlKSB7XG4gIG5vZGUuVSA9IC8vIHBhcmVudCBub2RlXG4gIG5vZGUuQyA9IC8vIGNvbG9yIC0gdHJ1ZSBmb3IgcmVkLCBmYWxzZSBmb3IgYmxhY2tcbiAgbm9kZS5MID0gLy8gbGVmdCBub2RlXG4gIG5vZGUuUiA9IC8vIHJpZ2h0IG5vZGVcbiAgbm9kZS5QID0gLy8gcHJldmlvdXMgbm9kZVxuICBub2RlLk4gPSBudWxsOyAvLyBuZXh0IG5vZGVcbn1cblxuUmVkQmxhY2tUcmVlLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFJlZEJsYWNrVHJlZSxcblxuICBpbnNlcnQ6IGZ1bmN0aW9uKGFmdGVyLCBub2RlKSB7XG4gICAgdmFyIHBhcmVudCwgZ3JhbmRwYSwgdW5jbGU7XG5cbiAgICBpZiAoYWZ0ZXIpIHtcbiAgICAgIG5vZGUuUCA9IGFmdGVyO1xuICAgICAgbm9kZS5OID0gYWZ0ZXIuTjtcbiAgICAgIGlmIChhZnRlci5OKSBhZnRlci5OLlAgPSBub2RlO1xuICAgICAgYWZ0ZXIuTiA9IG5vZGU7XG4gICAgICBpZiAoYWZ0ZXIuUikge1xuICAgICAgICBhZnRlciA9IGFmdGVyLlI7XG4gICAgICAgIHdoaWxlIChhZnRlci5MKSBhZnRlciA9IGFmdGVyLkw7XG4gICAgICAgIGFmdGVyLkwgPSBub2RlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYWZ0ZXIuUiA9IG5vZGU7XG4gICAgICB9XG4gICAgICBwYXJlbnQgPSBhZnRlcjtcbiAgICB9IGVsc2UgaWYgKHRoaXMuXykge1xuICAgICAgYWZ0ZXIgPSBSZWRCbGFja0ZpcnN0KHRoaXMuXyk7XG4gICAgICBub2RlLlAgPSBudWxsO1xuICAgICAgbm9kZS5OID0gYWZ0ZXI7XG4gICAgICBhZnRlci5QID0gYWZ0ZXIuTCA9IG5vZGU7XG4gICAgICBwYXJlbnQgPSBhZnRlcjtcbiAgICB9IGVsc2Uge1xuICAgICAgbm9kZS5QID0gbm9kZS5OID0gbnVsbDtcbiAgICAgIHRoaXMuXyA9IG5vZGU7XG4gICAgICBwYXJlbnQgPSBudWxsO1xuICAgIH1cbiAgICBub2RlLkwgPSBub2RlLlIgPSBudWxsO1xuICAgIG5vZGUuVSA9IHBhcmVudDtcbiAgICBub2RlLkMgPSB0cnVlO1xuXG4gICAgYWZ0ZXIgPSBub2RlO1xuICAgIHdoaWxlIChwYXJlbnQgJiYgcGFyZW50LkMpIHtcbiAgICAgIGdyYW5kcGEgPSBwYXJlbnQuVTtcbiAgICAgIGlmIChwYXJlbnQgPT09IGdyYW5kcGEuTCkge1xuICAgICAgICB1bmNsZSA9IGdyYW5kcGEuUjtcbiAgICAgICAgaWYgKHVuY2xlICYmIHVuY2xlLkMpIHtcbiAgICAgICAgICBwYXJlbnQuQyA9IHVuY2xlLkMgPSBmYWxzZTtcbiAgICAgICAgICBncmFuZHBhLkMgPSB0cnVlO1xuICAgICAgICAgIGFmdGVyID0gZ3JhbmRwYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoYWZ0ZXIgPT09IHBhcmVudC5SKSB7XG4gICAgICAgICAgICBSZWRCbGFja1JvdGF0ZUxlZnQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICAgIGFmdGVyID0gcGFyZW50O1xuICAgICAgICAgICAgcGFyZW50ID0gYWZ0ZXIuVTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcGFyZW50LkMgPSBmYWxzZTtcbiAgICAgICAgICBncmFuZHBhLkMgPSB0cnVlO1xuICAgICAgICAgIFJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgZ3JhbmRwYSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHVuY2xlID0gZ3JhbmRwYS5MO1xuICAgICAgICBpZiAodW5jbGUgJiYgdW5jbGUuQykge1xuICAgICAgICAgIHBhcmVudC5DID0gdW5jbGUuQyA9IGZhbHNlO1xuICAgICAgICAgIGdyYW5kcGEuQyA9IHRydWU7XG4gICAgICAgICAgYWZ0ZXIgPSBncmFuZHBhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChhZnRlciA9PT0gcGFyZW50LkwpIHtcbiAgICAgICAgICAgIFJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICAgIGFmdGVyID0gcGFyZW50O1xuICAgICAgICAgICAgcGFyZW50ID0gYWZ0ZXIuVTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcGFyZW50LkMgPSBmYWxzZTtcbiAgICAgICAgICBncmFuZHBhLkMgPSB0cnVlO1xuICAgICAgICAgIFJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBncmFuZHBhKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcGFyZW50ID0gYWZ0ZXIuVTtcbiAgICB9XG4gICAgdGhpcy5fLkMgPSBmYWxzZTtcbiAgfSxcblxuICByZW1vdmU6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICBpZiAobm9kZS5OKSBub2RlLk4uUCA9IG5vZGUuUDtcbiAgICBpZiAobm9kZS5QKSBub2RlLlAuTiA9IG5vZGUuTjtcbiAgICBub2RlLk4gPSBub2RlLlAgPSBudWxsO1xuXG4gICAgdmFyIHBhcmVudCA9IG5vZGUuVSxcbiAgICAgICAgc2libGluZyxcbiAgICAgICAgbGVmdCA9IG5vZGUuTCxcbiAgICAgICAgcmlnaHQgPSBub2RlLlIsXG4gICAgICAgIG5leHQsXG4gICAgICAgIHJlZDtcblxuICAgIGlmICghbGVmdCkgbmV4dCA9IHJpZ2h0O1xuICAgIGVsc2UgaWYgKCFyaWdodCkgbmV4dCA9IGxlZnQ7XG4gICAgZWxzZSBuZXh0ID0gUmVkQmxhY2tGaXJzdChyaWdodCk7XG5cbiAgICBpZiAocGFyZW50KSB7XG4gICAgICBpZiAocGFyZW50LkwgPT09IG5vZGUpIHBhcmVudC5MID0gbmV4dDtcbiAgICAgIGVsc2UgcGFyZW50LlIgPSBuZXh0O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl8gPSBuZXh0O1xuICAgIH1cblxuICAgIGlmIChsZWZ0ICYmIHJpZ2h0KSB7XG4gICAgICByZWQgPSBuZXh0LkM7XG4gICAgICBuZXh0LkMgPSBub2RlLkM7XG4gICAgICBuZXh0LkwgPSBsZWZ0O1xuICAgICAgbGVmdC5VID0gbmV4dDtcbiAgICAgIGlmIChuZXh0ICE9PSByaWdodCkge1xuICAgICAgICBwYXJlbnQgPSBuZXh0LlU7XG4gICAgICAgIG5leHQuVSA9IG5vZGUuVTtcbiAgICAgICAgbm9kZSA9IG5leHQuUjtcbiAgICAgICAgcGFyZW50LkwgPSBub2RlO1xuICAgICAgICBuZXh0LlIgPSByaWdodDtcbiAgICAgICAgcmlnaHQuVSA9IG5leHQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0LlUgPSBwYXJlbnQ7XG4gICAgICAgIHBhcmVudCA9IG5leHQ7XG4gICAgICAgIG5vZGUgPSBuZXh0LlI7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlZCA9IG5vZGUuQztcbiAgICAgIG5vZGUgPSBuZXh0O1xuICAgIH1cblxuICAgIGlmIChub2RlKSBub2RlLlUgPSBwYXJlbnQ7XG4gICAgaWYgKHJlZCkgcmV0dXJuO1xuICAgIGlmIChub2RlICYmIG5vZGUuQykgeyBub2RlLkMgPSBmYWxzZTsgcmV0dXJuOyB9XG5cbiAgICBkbyB7XG4gICAgICBpZiAobm9kZSA9PT0gdGhpcy5fKSBicmVhaztcbiAgICAgIGlmIChub2RlID09PSBwYXJlbnQuTCkge1xuICAgICAgICBzaWJsaW5nID0gcGFyZW50LlI7XG4gICAgICAgIGlmIChzaWJsaW5nLkMpIHtcbiAgICAgICAgICBzaWJsaW5nLkMgPSBmYWxzZTtcbiAgICAgICAgICBwYXJlbnQuQyA9IHRydWU7XG4gICAgICAgICAgUmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMsIHBhcmVudCk7XG4gICAgICAgICAgc2libGluZyA9IHBhcmVudC5SO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoc2libGluZy5MICYmIHNpYmxpbmcuTC5DKVxuICAgICAgICAgICAgfHwgKHNpYmxpbmcuUiAmJiBzaWJsaW5nLlIuQykpIHtcbiAgICAgICAgICBpZiAoIXNpYmxpbmcuUiB8fCAhc2libGluZy5SLkMpIHtcbiAgICAgICAgICAgIHNpYmxpbmcuTC5DID0gZmFsc2U7XG4gICAgICAgICAgICBzaWJsaW5nLkMgPSB0cnVlO1xuICAgICAgICAgICAgUmVkQmxhY2tSb3RhdGVSaWdodCh0aGlzLCBzaWJsaW5nKTtcbiAgICAgICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuUjtcbiAgICAgICAgICB9XG4gICAgICAgICAgc2libGluZy5DID0gcGFyZW50LkM7XG4gICAgICAgICAgcGFyZW50LkMgPSBzaWJsaW5nLlIuQyA9IGZhbHNlO1xuICAgICAgICAgIFJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBwYXJlbnQpO1xuICAgICAgICAgIG5vZGUgPSB0aGlzLl87XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuTDtcbiAgICAgICAgaWYgKHNpYmxpbmcuQykge1xuICAgICAgICAgIHNpYmxpbmcuQyA9IGZhbHNlO1xuICAgICAgICAgIHBhcmVudC5DID0gdHJ1ZTtcbiAgICAgICAgICBSZWRCbGFja1JvdGF0ZVJpZ2h0KHRoaXMsIHBhcmVudCk7XG4gICAgICAgICAgc2libGluZyA9IHBhcmVudC5MO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoc2libGluZy5MICYmIHNpYmxpbmcuTC5DKVxuICAgICAgICAgIHx8IChzaWJsaW5nLlIgJiYgc2libGluZy5SLkMpKSB7XG4gICAgICAgICAgaWYgKCFzaWJsaW5nLkwgfHwgIXNpYmxpbmcuTC5DKSB7XG4gICAgICAgICAgICBzaWJsaW5nLlIuQyA9IGZhbHNlO1xuICAgICAgICAgICAgc2libGluZy5DID0gdHJ1ZTtcbiAgICAgICAgICAgIFJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBzaWJsaW5nKTtcbiAgICAgICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuTDtcbiAgICAgICAgICB9XG4gICAgICAgICAgc2libGluZy5DID0gcGFyZW50LkM7XG4gICAgICAgICAgcGFyZW50LkMgPSBzaWJsaW5nLkwuQyA9IGZhbHNlO1xuICAgICAgICAgIFJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICBub2RlID0gdGhpcy5fO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBzaWJsaW5nLkMgPSB0cnVlO1xuICAgICAgbm9kZSA9IHBhcmVudDtcbiAgICAgIHBhcmVudCA9IHBhcmVudC5VO1xuICAgIH0gd2hpbGUgKCFub2RlLkMpO1xuXG4gICAgaWYgKG5vZGUpIG5vZGUuQyA9IGZhbHNlO1xuICB9XG59O1xuXG5mdW5jdGlvbiBSZWRCbGFja1JvdGF0ZUxlZnQodHJlZSwgbm9kZSkge1xuICB2YXIgcCA9IG5vZGUsXG4gICAgICBxID0gbm9kZS5SLFxuICAgICAgcGFyZW50ID0gcC5VO1xuXG4gIGlmIChwYXJlbnQpIHtcbiAgICBpZiAocGFyZW50LkwgPT09IHApIHBhcmVudC5MID0gcTtcbiAgICBlbHNlIHBhcmVudC5SID0gcTtcbiAgfSBlbHNlIHtcbiAgICB0cmVlLl8gPSBxO1xuICB9XG5cbiAgcS5VID0gcGFyZW50O1xuICBwLlUgPSBxO1xuICBwLlIgPSBxLkw7XG4gIGlmIChwLlIpIHAuUi5VID0gcDtcbiAgcS5MID0gcDtcbn1cblxuZnVuY3Rpb24gUmVkQmxhY2tSb3RhdGVSaWdodCh0cmVlLCBub2RlKSB7XG4gIHZhciBwID0gbm9kZSxcbiAgICAgIHEgPSBub2RlLkwsXG4gICAgICBwYXJlbnQgPSBwLlU7XG5cbiAgaWYgKHBhcmVudCkge1xuICAgIGlmIChwYXJlbnQuTCA9PT0gcCkgcGFyZW50LkwgPSBxO1xuICAgIGVsc2UgcGFyZW50LlIgPSBxO1xuICB9IGVsc2Uge1xuICAgIHRyZWUuXyA9IHE7XG4gIH1cblxuICBxLlUgPSBwYXJlbnQ7XG4gIHAuVSA9IHE7XG4gIHAuTCA9IHEuUjtcbiAgaWYgKHAuTCkgcC5MLlUgPSBwO1xuICBxLlIgPSBwO1xufVxuXG5mdW5jdGlvbiBSZWRCbGFja0ZpcnN0KG5vZGUpIHtcbiAgd2hpbGUgKG5vZGUuTCkgbm9kZSA9IG5vZGUuTDtcbiAgcmV0dXJuIG5vZGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlZEJsYWNrVHJlZTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIHZvcm9ub2l9IGZyb20gXCIuL3Zvcm9ub2lcIjtcbiIsImV4cG9ydCBmdW5jdGlvbiB4KGQpIHtcbiAgcmV0dXJuIGRbMF07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB5KGQpIHtcbiAgcmV0dXJuIGRbMV07XG59XG4iLCJpbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCB7eCBhcyBwb2ludFgsIHkgYXMgcG9pbnRZfSBmcm9tIFwiLi9wb2ludFwiO1xuaW1wb3J0IERpYWdyYW0sIHtlcHNpbG9ufSBmcm9tIFwiLi9EaWFncmFtXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgeCA9IHBvaW50WCxcbiAgICAgIHkgPSBwb2ludFksXG4gICAgICBleHRlbnQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHZvcm9ub2koZGF0YSkge1xuICAgIHJldHVybiBuZXcgRGlhZ3JhbShkYXRhLm1hcChmdW5jdGlvbihkLCBpKSB7XG4gICAgICB2YXIgcyA9IFtNYXRoLnJvdW5kKHgoZCwgaSwgZGF0YSkgLyBlcHNpbG9uKSAqIGVwc2lsb24sIE1hdGgucm91bmQoeShkLCBpLCBkYXRhKSAvIGVwc2lsb24pICogZXBzaWxvbl07XG4gICAgICBzLmluZGV4ID0gaTtcbiAgICAgIHMuZGF0YSA9IGQ7XG4gICAgICByZXR1cm4gcztcbiAgICB9KSwgZXh0ZW50KTtcbiAgfVxuXG4gIHZvcm9ub2kucG9seWdvbnMgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgcmV0dXJuIHZvcm9ub2koZGF0YSkucG9seWdvbnMoKTtcbiAgfTtcblxuICB2b3Jvbm9pLmxpbmtzID0gZnVuY3Rpb24oZGF0YSkge1xuICAgIHJldHVybiB2b3Jvbm9pKGRhdGEpLmxpbmtzKCk7XG4gIH07XG5cbiAgdm9yb25vaS50cmlhbmdsZXMgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgcmV0dXJuIHZvcm9ub2koZGF0YSkudHJpYW5nbGVzKCk7XG4gIH07XG5cbiAgdm9yb25vaS54ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgdm9yb25vaSkgOiB4O1xuICB9O1xuXG4gIHZvcm9ub2kueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHZvcm9ub2kpIDogeTtcbiAgfTtcblxuICB2b3Jvbm9pLmV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChleHRlbnQgPSBfID09IG51bGwgPyBudWxsIDogW1srX1swXVswXSwgK19bMF1bMV1dLCBbK19bMV1bMF0sICtfWzFdWzFdXV0sIHZvcm9ub2kpIDogZXh0ZW50ICYmIFtbZXh0ZW50WzBdWzBdLCBleHRlbnRbMF1bMV1dLCBbZXh0ZW50WzFdWzBdLCBleHRlbnRbMV1bMV1dXTtcbiAgfTtcblxuICB2b3Jvbm9pLnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZXh0ZW50ID0gXyA9PSBudWxsID8gbnVsbCA6IFtbMCwgMF0sIFsrX1swXSwgK19bMV1dXSwgdm9yb25vaSkgOiBleHRlbnQgJiYgW2V4dGVudFsxXVswXSAtIGV4dGVudFswXVswXSwgZXh0ZW50WzFdWzFdIC0gZXh0ZW50WzBdWzFdXTtcbiAgfTtcblxuICByZXR1cm4gdm9yb25vaTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gWm9vbUV2ZW50KHRhcmdldCwgdHlwZSwgdHJhbnNmb3JtKSB7XG4gIHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuICB0aGlzLnR5cGUgPSB0eXBlO1xuICB0aGlzLnRyYW5zZm9ybSA9IHRyYW5zZm9ybTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyB6b29tfSBmcm9tIFwiLi96b29tXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgem9vbVRyYW5zZm9ybSwgaWRlbnRpdHkgYXMgem9vbUlkZW50aXR5fSBmcm9tIFwiLi90cmFuc2Zvcm1cIjtcbiIsImltcG9ydCB7ZXZlbnR9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG5vcHJvcGFnYXRpb24oKSB7XG4gIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gVHJhbnNmb3JtKGssIHgsIHkpIHtcbiAgdGhpcy5rID0gaztcbiAgdGhpcy54ID0geDtcbiAgdGhpcy55ID0geTtcbn1cblxuVHJhbnNmb3JtLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFRyYW5zZm9ybSxcbiAgc2NhbGU6IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gayA9PT0gMSA/IHRoaXMgOiBuZXcgVHJhbnNmb3JtKHRoaXMuayAqIGssIHRoaXMueCwgdGhpcy55KTtcbiAgfSxcbiAgdHJhbnNsYXRlOiBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIHggPT09IDAgJiB5ID09PSAwID8gdGhpcyA6IG5ldyBUcmFuc2Zvcm0odGhpcy5rLCB0aGlzLnggKyB0aGlzLmsgKiB4LCB0aGlzLnkgKyB0aGlzLmsgKiB5KTtcbiAgfSxcbiAgYXBwbHk6IGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgcmV0dXJuIFtwb2ludFswXSAqIHRoaXMuayArIHRoaXMueCwgcG9pbnRbMV0gKiB0aGlzLmsgKyB0aGlzLnldO1xuICB9LFxuICBhcHBseVg6IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4geCAqIHRoaXMuayArIHRoaXMueDtcbiAgfSxcbiAgYXBwbHlZOiBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIHkgKiB0aGlzLmsgKyB0aGlzLnk7XG4gIH0sXG4gIGludmVydDogZnVuY3Rpb24obG9jYXRpb24pIHtcbiAgICByZXR1cm4gWyhsb2NhdGlvblswXSAtIHRoaXMueCkgLyB0aGlzLmssIChsb2NhdGlvblsxXSAtIHRoaXMueSkgLyB0aGlzLmtdO1xuICB9LFxuICBpbnZlcnRYOiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuICh4IC0gdGhpcy54KSAvIHRoaXMuaztcbiAgfSxcbiAgaW52ZXJ0WTogZnVuY3Rpb24oeSkge1xuICAgIHJldHVybiAoeSAtIHRoaXMueSkgLyB0aGlzLms7XG4gIH0sXG4gIHJlc2NhbGVYOiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIHguY29weSgpLmRvbWFpbih4LnJhbmdlKCkubWFwKHRoaXMuaW52ZXJ0WCwgdGhpcykubWFwKHguaW52ZXJ0LCB4KSk7XG4gIH0sXG4gIHJlc2NhbGVZOiBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIHkuY29weSgpLmRvbWFpbih5LnJhbmdlKCkubWFwKHRoaXMuaW52ZXJ0WSwgdGhpcykubWFwKHkuaW52ZXJ0LCB5KSk7XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyB0aGlzLnggKyBcIixcIiArIHRoaXMueSArIFwiKSBzY2FsZShcIiArIHRoaXMuayArIFwiKVwiO1xuICB9XG59O1xuXG5leHBvcnQgdmFyIGlkZW50aXR5ID0gbmV3IFRyYW5zZm9ybSgxLCAwLCAwKTtcblxudHJhbnNmb3JtLnByb3RvdHlwZSA9IFRyYW5zZm9ybS5wcm90b3R5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zZm9ybShub2RlKSB7XG4gIHJldHVybiBub2RlLl9fem9vbSB8fCBpZGVudGl0eTtcbn1cbiIsImltcG9ydCB7ZGlzcGF0Y2h9IGZyb20gXCJkMy1kaXNwYXRjaFwiO1xuaW1wb3J0IHtkcmFnRGlzYWJsZSwgZHJhZ0VuYWJsZX0gZnJvbSBcImQzLWRyYWdcIjtcbmltcG9ydCB7aW50ZXJwb2xhdGVab29tfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcbmltcG9ydCB7ZXZlbnQsIGN1c3RvbUV2ZW50LCBzZWxlY3QsIG1vdXNlLCB0b3VjaH0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHtpbnRlcnJ1cHR9IGZyb20gXCJkMy10cmFuc2l0aW9uXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBab29tRXZlbnQgZnJvbSBcIi4vZXZlbnRcIjtcbmltcG9ydCB7VHJhbnNmb3JtLCBpZGVudGl0eX0gZnJvbSBcIi4vdHJhbnNmb3JtXCI7XG5pbXBvcnQgbm9ldmVudCwge25vcHJvcGFnYXRpb259IGZyb20gXCIuL25vZXZlbnRcIjtcblxuLy8gSWdub3JlIHJpZ2h0LWNsaWNrLCBzaW5jZSB0aGF0IHNob3VsZCBvcGVuIHRoZSBjb250ZXh0IG1lbnUuXG5mdW5jdGlvbiBkZWZhdWx0RmlsdGVyKCkge1xuICByZXR1cm4gIWV2ZW50LmJ1dHRvbjtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdEV4dGVudCgpIHtcbiAgdmFyIGUgPSB0aGlzLCB3LCBoO1xuICBpZiAoZSBpbnN0YW5jZW9mIFNWR0VsZW1lbnQpIHtcbiAgICBlID0gZS5vd25lclNWR0VsZW1lbnQgfHwgZTtcbiAgICB3ID0gZS53aWR0aC5iYXNlVmFsLnZhbHVlO1xuICAgIGggPSBlLmhlaWdodC5iYXNlVmFsLnZhbHVlO1xuICB9IGVsc2Uge1xuICAgIHcgPSBlLmNsaWVudFdpZHRoO1xuICAgIGggPSBlLmNsaWVudEhlaWdodDtcbiAgfVxuICByZXR1cm4gW1swLCAwXSwgW3csIGhdXTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFRyYW5zZm9ybSgpIHtcbiAgcmV0dXJuIHRoaXMuX196b29tIHx8IGlkZW50aXR5O1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0V2hlZWxEZWx0YSgpIHtcbiAgcmV0dXJuIC1ldmVudC5kZWx0YVkgKiAoZXZlbnQuZGVsdGFNb2RlID8gMTIwIDogMSkgLyA1MDA7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRUb3VjaGFibGUoKSB7XG4gIHJldHVybiBcIm9udG91Y2hzdGFydFwiIGluIHRoaXM7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRDb25zdHJhaW4odHJhbnNmb3JtLCBleHRlbnQsIHRyYW5zbGF0ZUV4dGVudCkge1xuICB2YXIgZHgwID0gdHJhbnNmb3JtLmludmVydFgoZXh0ZW50WzBdWzBdKSAtIHRyYW5zbGF0ZUV4dGVudFswXVswXSxcbiAgICAgIGR4MSA9IHRyYW5zZm9ybS5pbnZlcnRYKGV4dGVudFsxXVswXSkgLSB0cmFuc2xhdGVFeHRlbnRbMV1bMF0sXG4gICAgICBkeTAgPSB0cmFuc2Zvcm0uaW52ZXJ0WShleHRlbnRbMF1bMV0pIC0gdHJhbnNsYXRlRXh0ZW50WzBdWzFdLFxuICAgICAgZHkxID0gdHJhbnNmb3JtLmludmVydFkoZXh0ZW50WzFdWzFdKSAtIHRyYW5zbGF0ZUV4dGVudFsxXVsxXTtcbiAgcmV0dXJuIHRyYW5zZm9ybS50cmFuc2xhdGUoXG4gICAgZHgxID4gZHgwID8gKGR4MCArIGR4MSkgLyAyIDogTWF0aC5taW4oMCwgZHgwKSB8fCBNYXRoLm1heCgwLCBkeDEpLFxuICAgIGR5MSA+IGR5MCA/IChkeTAgKyBkeTEpIC8gMiA6IE1hdGgubWluKDAsIGR5MCkgfHwgTWF0aC5tYXgoMCwgZHkxKVxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGZpbHRlciA9IGRlZmF1bHRGaWx0ZXIsXG4gICAgICBleHRlbnQgPSBkZWZhdWx0RXh0ZW50LFxuICAgICAgY29uc3RyYWluID0gZGVmYXVsdENvbnN0cmFpbixcbiAgICAgIHdoZWVsRGVsdGEgPSBkZWZhdWx0V2hlZWxEZWx0YSxcbiAgICAgIHRvdWNoYWJsZSA9IGRlZmF1bHRUb3VjaGFibGUsXG4gICAgICBzY2FsZUV4dGVudCA9IFswLCBJbmZpbml0eV0sXG4gICAgICB0cmFuc2xhdGVFeHRlbnQgPSBbWy1JbmZpbml0eSwgLUluZmluaXR5XSwgW0luZmluaXR5LCBJbmZpbml0eV1dLFxuICAgICAgZHVyYXRpb24gPSAyNTAsXG4gICAgICBpbnRlcnBvbGF0ZSA9IGludGVycG9sYXRlWm9vbSxcbiAgICAgIGdlc3R1cmVzID0gW10sXG4gICAgICBsaXN0ZW5lcnMgPSBkaXNwYXRjaChcInN0YXJ0XCIsIFwiem9vbVwiLCBcImVuZFwiKSxcbiAgICAgIHRvdWNoc3RhcnRpbmcsXG4gICAgICB0b3VjaGVuZGluZyxcbiAgICAgIHRvdWNoRGVsYXkgPSA1MDAsXG4gICAgICB3aGVlbERlbGF5ID0gMTUwLFxuICAgICAgY2xpY2tEaXN0YW5jZTIgPSAwO1xuXG4gIGZ1bmN0aW9uIHpvb20oc2VsZWN0aW9uKSB7XG4gICAgc2VsZWN0aW9uXG4gICAgICAgIC5wcm9wZXJ0eShcIl9fem9vbVwiLCBkZWZhdWx0VHJhbnNmb3JtKVxuICAgICAgICAub24oXCJ3aGVlbC56b29tXCIsIHdoZWVsZWQpXG4gICAgICAgIC5vbihcIm1vdXNlZG93bi56b29tXCIsIG1vdXNlZG93bmVkKVxuICAgICAgICAub24oXCJkYmxjbGljay56b29tXCIsIGRibGNsaWNrZWQpXG4gICAgICAuZmlsdGVyKHRvdWNoYWJsZSlcbiAgICAgICAgLm9uKFwidG91Y2hzdGFydC56b29tXCIsIHRvdWNoc3RhcnRlZClcbiAgICAgICAgLm9uKFwidG91Y2htb3ZlLnpvb21cIiwgdG91Y2htb3ZlZClcbiAgICAgICAgLm9uKFwidG91Y2hlbmQuem9vbSB0b3VjaGNhbmNlbC56b29tXCIsIHRvdWNoZW5kZWQpXG4gICAgICAgIC5zdHlsZShcInRvdWNoLWFjdGlvblwiLCBcIm5vbmVcIilcbiAgICAgICAgLnN0eWxlKFwiLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yXCIsIFwicmdiYSgwLDAsMCwwKVwiKTtcbiAgfVxuXG4gIHpvb20udHJhbnNmb3JtID0gZnVuY3Rpb24oY29sbGVjdGlvbiwgdHJhbnNmb3JtKSB7XG4gICAgdmFyIHNlbGVjdGlvbiA9IGNvbGxlY3Rpb24uc2VsZWN0aW9uID8gY29sbGVjdGlvbi5zZWxlY3Rpb24oKSA6IGNvbGxlY3Rpb247XG4gICAgc2VsZWN0aW9uLnByb3BlcnR5KFwiX196b29tXCIsIGRlZmF1bHRUcmFuc2Zvcm0pO1xuICAgIGlmIChjb2xsZWN0aW9uICE9PSBzZWxlY3Rpb24pIHtcbiAgICAgIHNjaGVkdWxlKGNvbGxlY3Rpb24sIHRyYW5zZm9ybSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNlbGVjdGlvbi5pbnRlcnJ1cHQoKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICBnZXN0dXJlKHRoaXMsIGFyZ3VtZW50cylcbiAgICAgICAgICAgIC5zdGFydCgpXG4gICAgICAgICAgICAuem9vbShudWxsLCB0eXBlb2YgdHJhbnNmb3JtID09PSBcImZ1bmN0aW9uXCIgPyB0cmFuc2Zvcm0uYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IHRyYW5zZm9ybSlcbiAgICAgICAgICAgIC5lbmQoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICB6b29tLnNjYWxlQnkgPSBmdW5jdGlvbihzZWxlY3Rpb24sIGspIHtcbiAgICB6b29tLnNjYWxlVG8oc2VsZWN0aW9uLCBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBrMCA9IHRoaXMuX196b29tLmssXG4gICAgICAgICAgazEgPSB0eXBlb2YgayA9PT0gXCJmdW5jdGlvblwiID8gay5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogaztcbiAgICAgIHJldHVybiBrMCAqIGsxO1xuICAgIH0pO1xuICB9O1xuXG4gIHpvb20uc2NhbGVUbyA9IGZ1bmN0aW9uKHNlbGVjdGlvbiwgaykge1xuICAgIHpvb20udHJhbnNmb3JtKHNlbGVjdGlvbiwgZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgZSA9IGV4dGVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICAgIHQwID0gdGhpcy5fX3pvb20sXG4gICAgICAgICAgcDAgPSBjZW50cm9pZChlKSxcbiAgICAgICAgICBwMSA9IHQwLmludmVydChwMCksXG4gICAgICAgICAgazEgPSB0eXBlb2YgayA9PT0gXCJmdW5jdGlvblwiID8gay5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogaztcbiAgICAgIHJldHVybiBjb25zdHJhaW4odHJhbnNsYXRlKHNjYWxlKHQwLCBrMSksIHAwLCBwMSksIGUsIHRyYW5zbGF0ZUV4dGVudCk7XG4gICAgfSk7XG4gIH07XG5cbiAgem9vbS50cmFuc2xhdGVCeSA9IGZ1bmN0aW9uKHNlbGVjdGlvbiwgeCwgeSkge1xuICAgIHpvb20udHJhbnNmb3JtKHNlbGVjdGlvbiwgZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gY29uc3RyYWluKHRoaXMuX196b29tLnRyYW5zbGF0ZShcbiAgICAgICAgdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHguYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IHgsXG4gICAgICAgIHR5cGVvZiB5ID09PSBcImZ1bmN0aW9uXCIgPyB5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiB5XG4gICAgICApLCBleHRlbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgdHJhbnNsYXRlRXh0ZW50KTtcbiAgICB9KTtcbiAgfTtcblxuICB6b29tLnRyYW5zbGF0ZVRvID0gZnVuY3Rpb24oc2VsZWN0aW9uLCB4LCB5KSB7XG4gICAgem9vbS50cmFuc2Zvcm0oc2VsZWN0aW9uLCBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBlID0gZXh0ZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgICAgdCA9IHRoaXMuX196b29tLFxuICAgICAgICAgIHAgPSBjZW50cm9pZChlKTtcbiAgICAgIHJldHVybiBjb25zdHJhaW4oaWRlbnRpdHkudHJhbnNsYXRlKHBbMF0sIHBbMV0pLnNjYWxlKHQuaykudHJhbnNsYXRlKFxuICAgICAgICB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8gLXguYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IC14LFxuICAgICAgICB0eXBlb2YgeSA9PT0gXCJmdW5jdGlvblwiID8gLXkuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IC15XG4gICAgICApLCBlLCB0cmFuc2xhdGVFeHRlbnQpO1xuICAgIH0pO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHNjYWxlKHRyYW5zZm9ybSwgaykge1xuICAgIGsgPSBNYXRoLm1heChzY2FsZUV4dGVudFswXSwgTWF0aC5taW4oc2NhbGVFeHRlbnRbMV0sIGspKTtcbiAgICByZXR1cm4gayA9PT0gdHJhbnNmb3JtLmsgPyB0cmFuc2Zvcm0gOiBuZXcgVHJhbnNmb3JtKGssIHRyYW5zZm9ybS54LCB0cmFuc2Zvcm0ueSk7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFuc2xhdGUodHJhbnNmb3JtLCBwMCwgcDEpIHtcbiAgICB2YXIgeCA9IHAwWzBdIC0gcDFbMF0gKiB0cmFuc2Zvcm0uaywgeSA9IHAwWzFdIC0gcDFbMV0gKiB0cmFuc2Zvcm0uaztcbiAgICByZXR1cm4geCA9PT0gdHJhbnNmb3JtLnggJiYgeSA9PT0gdHJhbnNmb3JtLnkgPyB0cmFuc2Zvcm0gOiBuZXcgVHJhbnNmb3JtKHRyYW5zZm9ybS5rLCB4LCB5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNlbnRyb2lkKGV4dGVudCkge1xuICAgIHJldHVybiBbKCtleHRlbnRbMF1bMF0gKyArZXh0ZW50WzFdWzBdKSAvIDIsICgrZXh0ZW50WzBdWzFdICsgK2V4dGVudFsxXVsxXSkgLyAyXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNjaGVkdWxlKHRyYW5zaXRpb24sIHRyYW5zZm9ybSwgY2VudGVyKSB7XG4gICAgdHJhbnNpdGlvblxuICAgICAgICAub24oXCJzdGFydC56b29tXCIsIGZ1bmN0aW9uKCkgeyBnZXN0dXJlKHRoaXMsIGFyZ3VtZW50cykuc3RhcnQoKTsgfSlcbiAgICAgICAgLm9uKFwiaW50ZXJydXB0Lnpvb20gZW5kLnpvb21cIiwgZnVuY3Rpb24oKSB7IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKS5lbmQoKTsgfSlcbiAgICAgICAgLnR3ZWVuKFwiem9vbVwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXIgdGhhdCA9IHRoaXMsXG4gICAgICAgICAgICAgIGFyZ3MgPSBhcmd1bWVudHMsXG4gICAgICAgICAgICAgIGcgPSBnZXN0dXJlKHRoYXQsIGFyZ3MpLFxuICAgICAgICAgICAgICBlID0gZXh0ZW50LmFwcGx5KHRoYXQsIGFyZ3MpLFxuICAgICAgICAgICAgICBwID0gY2VudGVyIHx8IGNlbnRyb2lkKGUpLFxuICAgICAgICAgICAgICB3ID0gTWF0aC5tYXgoZVsxXVswXSAtIGVbMF1bMF0sIGVbMV1bMV0gLSBlWzBdWzFdKSxcbiAgICAgICAgICAgICAgYSA9IHRoYXQuX196b29tLFxuICAgICAgICAgICAgICBiID0gdHlwZW9mIHRyYW5zZm9ybSA9PT0gXCJmdW5jdGlvblwiID8gdHJhbnNmb3JtLmFwcGx5KHRoYXQsIGFyZ3MpIDogdHJhbnNmb3JtLFxuICAgICAgICAgICAgICBpID0gaW50ZXJwb2xhdGUoYS5pbnZlcnQocCkuY29uY2F0KHcgLyBhLmspLCBiLmludmVydChwKS5jb25jYXQodyAvIGIuaykpO1xuICAgICAgICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgICBpZiAodCA9PT0gMSkgdCA9IGI7IC8vIEF2b2lkIHJvdW5kaW5nIGVycm9yIG9uIGVuZC5cbiAgICAgICAgICAgIGVsc2UgeyB2YXIgbCA9IGkodCksIGsgPSB3IC8gbFsyXTsgdCA9IG5ldyBUcmFuc2Zvcm0oaywgcFswXSAtIGxbMF0gKiBrLCBwWzFdIC0gbFsxXSAqIGspOyB9XG4gICAgICAgICAgICBnLnpvb20obnVsbCwgdCk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXN0dXJlKHRoYXQsIGFyZ3MpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IGdlc3R1cmVzLmxlbmd0aCwgZzsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKChnID0gZ2VzdHVyZXNbaV0pLnRoYXQgPT09IHRoYXQpIHtcbiAgICAgICAgcmV0dXJuIGc7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXcgR2VzdHVyZSh0aGF0LCBhcmdzKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIEdlc3R1cmUodGhhdCwgYXJncykge1xuICAgIHRoaXMudGhhdCA9IHRoYXQ7XG4gICAgdGhpcy5hcmdzID0gYXJncztcbiAgICB0aGlzLmluZGV4ID0gLTE7XG4gICAgdGhpcy5hY3RpdmUgPSAwO1xuICAgIHRoaXMuZXh0ZW50ID0gZXh0ZW50LmFwcGx5KHRoYXQsIGFyZ3MpO1xuICB9XG5cbiAgR2VzdHVyZS5wcm90b3R5cGUgPSB7XG4gICAgc3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCsrdGhpcy5hY3RpdmUgPT09IDEpIHtcbiAgICAgICAgdGhpcy5pbmRleCA9IGdlc3R1cmVzLnB1c2godGhpcykgLSAxO1xuICAgICAgICB0aGlzLmVtaXQoXCJzdGFydFwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgem9vbTogZnVuY3Rpb24oa2V5LCB0cmFuc2Zvcm0pIHtcbiAgICAgIGlmICh0aGlzLm1vdXNlICYmIGtleSAhPT0gXCJtb3VzZVwiKSB0aGlzLm1vdXNlWzFdID0gdHJhbnNmb3JtLmludmVydCh0aGlzLm1vdXNlWzBdKTtcbiAgICAgIGlmICh0aGlzLnRvdWNoMCAmJiBrZXkgIT09IFwidG91Y2hcIikgdGhpcy50b3VjaDBbMV0gPSB0cmFuc2Zvcm0uaW52ZXJ0KHRoaXMudG91Y2gwWzBdKTtcbiAgICAgIGlmICh0aGlzLnRvdWNoMSAmJiBrZXkgIT09IFwidG91Y2hcIikgdGhpcy50b3VjaDFbMV0gPSB0cmFuc2Zvcm0uaW52ZXJ0KHRoaXMudG91Y2gxWzBdKTtcbiAgICAgIHRoaXMudGhhdC5fX3pvb20gPSB0cmFuc2Zvcm07XG4gICAgICB0aGlzLmVtaXQoXCJ6b29tXCIpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBlbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKC0tdGhpcy5hY3RpdmUgPT09IDApIHtcbiAgICAgICAgZ2VzdHVyZXMuc3BsaWNlKHRoaXMuaW5kZXgsIDEpO1xuICAgICAgICB0aGlzLmluZGV4ID0gLTE7XG4gICAgICAgIHRoaXMuZW1pdChcImVuZFwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgZW1pdDogZnVuY3Rpb24odHlwZSkge1xuICAgICAgY3VzdG9tRXZlbnQobmV3IFpvb21FdmVudCh6b29tLCB0eXBlLCB0aGlzLnRoYXQuX196b29tKSwgbGlzdGVuZXJzLmFwcGx5LCBsaXN0ZW5lcnMsIFt0eXBlLCB0aGlzLnRoYXQsIHRoaXMuYXJnc10pO1xuICAgIH1cbiAgfTtcblxuICBmdW5jdGlvbiB3aGVlbGVkKCkge1xuICAgIGlmICghZmlsdGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHJldHVybjtcbiAgICB2YXIgZyA9IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgdCA9IHRoaXMuX196b29tLFxuICAgICAgICBrID0gTWF0aC5tYXgoc2NhbGVFeHRlbnRbMF0sIE1hdGgubWluKHNjYWxlRXh0ZW50WzFdLCB0LmsgKiBNYXRoLnBvdygyLCB3aGVlbERlbHRhLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpKSksXG4gICAgICAgIHAgPSBtb3VzZSh0aGlzKTtcblxuICAgIC8vIElmIHRoZSBtb3VzZSBpcyBpbiB0aGUgc2FtZSBsb2NhdGlvbiBhcyBiZWZvcmUsIHJldXNlIGl0LlxuICAgIC8vIElmIHRoZXJlIHdlcmUgcmVjZW50IHdoZWVsIGV2ZW50cywgcmVzZXQgdGhlIHdoZWVsIGlkbGUgdGltZW91dC5cbiAgICBpZiAoZy53aGVlbCkge1xuICAgICAgaWYgKGcubW91c2VbMF1bMF0gIT09IHBbMF0gfHwgZy5tb3VzZVswXVsxXSAhPT0gcFsxXSkge1xuICAgICAgICBnLm1vdXNlWzFdID0gdC5pbnZlcnQoZy5tb3VzZVswXSA9IHApO1xuICAgICAgfVxuICAgICAgY2xlYXJUaW1lb3V0KGcud2hlZWwpO1xuICAgIH1cblxuICAgIC8vIElmIHRoaXMgd2hlZWwgZXZlbnQgd29u4oCZdCB0cmlnZ2VyIGEgdHJhbnNmb3JtIGNoYW5nZSwgaWdub3JlIGl0LlxuICAgIGVsc2UgaWYgKHQuayA9PT0gaykgcmV0dXJuO1xuXG4gICAgLy8gT3RoZXJ3aXNlLCBjYXB0dXJlIHRoZSBtb3VzZSBwb2ludCBhbmQgbG9jYXRpb24gYXQgdGhlIHN0YXJ0LlxuICAgIGVsc2Uge1xuICAgICAgZy5tb3VzZSA9IFtwLCB0LmludmVydChwKV07XG4gICAgICBpbnRlcnJ1cHQodGhpcyk7XG4gICAgICBnLnN0YXJ0KCk7XG4gICAgfVxuXG4gICAgbm9ldmVudCgpO1xuICAgIGcud2hlZWwgPSBzZXRUaW1lb3V0KHdoZWVsaWRsZWQsIHdoZWVsRGVsYXkpO1xuICAgIGcuem9vbShcIm1vdXNlXCIsIGNvbnN0cmFpbih0cmFuc2xhdGUoc2NhbGUodCwgayksIGcubW91c2VbMF0sIGcubW91c2VbMV0pLCBnLmV4dGVudCwgdHJhbnNsYXRlRXh0ZW50KSk7XG5cbiAgICBmdW5jdGlvbiB3aGVlbGlkbGVkKCkge1xuICAgICAgZy53aGVlbCA9IG51bGw7XG4gICAgICBnLmVuZCgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG1vdXNlZG93bmVkKCkge1xuICAgIGlmICh0b3VjaGVuZGluZyB8fCAhZmlsdGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHJldHVybjtcbiAgICB2YXIgZyA9IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgdiA9IHNlbGVjdChldmVudC52aWV3KS5vbihcIm1vdXNlbW92ZS56b29tXCIsIG1vdXNlbW92ZWQsIHRydWUpLm9uKFwibW91c2V1cC56b29tXCIsIG1vdXNldXBwZWQsIHRydWUpLFxuICAgICAgICBwID0gbW91c2UodGhpcyksXG4gICAgICAgIHgwID0gZXZlbnQuY2xpZW50WCxcbiAgICAgICAgeTAgPSBldmVudC5jbGllbnRZO1xuXG4gICAgZHJhZ0Rpc2FibGUoZXZlbnQudmlldyk7XG4gICAgbm9wcm9wYWdhdGlvbigpO1xuICAgIGcubW91c2UgPSBbcCwgdGhpcy5fX3pvb20uaW52ZXJ0KHApXTtcbiAgICBpbnRlcnJ1cHQodGhpcyk7XG4gICAgZy5zdGFydCgpO1xuXG4gICAgZnVuY3Rpb24gbW91c2Vtb3ZlZCgpIHtcbiAgICAgIG5vZXZlbnQoKTtcbiAgICAgIGlmICghZy5tb3ZlZCkge1xuICAgICAgICB2YXIgZHggPSBldmVudC5jbGllbnRYIC0geDAsIGR5ID0gZXZlbnQuY2xpZW50WSAtIHkwO1xuICAgICAgICBnLm1vdmVkID0gZHggKiBkeCArIGR5ICogZHkgPiBjbGlja0Rpc3RhbmNlMjtcbiAgICAgIH1cbiAgICAgIGcuem9vbShcIm1vdXNlXCIsIGNvbnN0cmFpbih0cmFuc2xhdGUoZy50aGF0Ll9fem9vbSwgZy5tb3VzZVswXSA9IG1vdXNlKGcudGhhdCksIGcubW91c2VbMV0pLCBnLmV4dGVudCwgdHJhbnNsYXRlRXh0ZW50KSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbW91c2V1cHBlZCgpIHtcbiAgICAgIHYub24oXCJtb3VzZW1vdmUuem9vbSBtb3VzZXVwLnpvb21cIiwgbnVsbCk7XG4gICAgICBkcmFnRW5hYmxlKGV2ZW50LnZpZXcsIGcubW92ZWQpO1xuICAgICAgbm9ldmVudCgpO1xuICAgICAgZy5lbmQoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBkYmxjbGlja2VkKCkge1xuICAgIGlmICghZmlsdGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHJldHVybjtcbiAgICB2YXIgdDAgPSB0aGlzLl9fem9vbSxcbiAgICAgICAgcDAgPSBtb3VzZSh0aGlzKSxcbiAgICAgICAgcDEgPSB0MC5pbnZlcnQocDApLFxuICAgICAgICBrMSA9IHQwLmsgKiAoZXZlbnQuc2hpZnRLZXkgPyAwLjUgOiAyKSxcbiAgICAgICAgdDEgPSBjb25zdHJhaW4odHJhbnNsYXRlKHNjYWxlKHQwLCBrMSksIHAwLCBwMSksIGV4dGVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCB0cmFuc2xhdGVFeHRlbnQpO1xuXG4gICAgbm9ldmVudCgpO1xuICAgIGlmIChkdXJhdGlvbiA+IDApIHNlbGVjdCh0aGlzKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oZHVyYXRpb24pLmNhbGwoc2NoZWR1bGUsIHQxLCBwMCk7XG4gICAgZWxzZSBzZWxlY3QodGhpcykuY2FsbCh6b29tLnRyYW5zZm9ybSwgdDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gdG91Y2hzdGFydGVkKCkge1xuICAgIGlmICghZmlsdGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHJldHVybjtcbiAgICB2YXIgZyA9IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzLFxuICAgICAgICBzdGFydGVkLFxuICAgICAgICBuID0gdG91Y2hlcy5sZW5ndGgsIGksIHQsIHA7XG5cbiAgICBub3Byb3BhZ2F0aW9uKCk7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgdCA9IHRvdWNoZXNbaV0sIHAgPSB0b3VjaCh0aGlzLCB0b3VjaGVzLCB0LmlkZW50aWZpZXIpO1xuICAgICAgcCA9IFtwLCB0aGlzLl9fem9vbS5pbnZlcnQocCksIHQuaWRlbnRpZmllcl07XG4gICAgICBpZiAoIWcudG91Y2gwKSBnLnRvdWNoMCA9IHAsIHN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgZWxzZSBpZiAoIWcudG91Y2gxKSBnLnRvdWNoMSA9IHA7XG4gICAgfVxuXG4gICAgLy8gSWYgdGhpcyBpcyBhIGRibHRhcCwgcmVyb3V0ZSB0byB0aGUgKG9wdGlvbmFsKSBkYmxjbGljay56b29tIGhhbmRsZXIuXG4gICAgaWYgKHRvdWNoc3RhcnRpbmcpIHtcbiAgICAgIHRvdWNoc3RhcnRpbmcgPSBjbGVhclRpbWVvdXQodG91Y2hzdGFydGluZyk7XG4gICAgICBpZiAoIWcudG91Y2gxKSB7XG4gICAgICAgIGcuZW5kKCk7XG4gICAgICAgIHAgPSBzZWxlY3QodGhpcykub24oXCJkYmxjbGljay56b29tXCIpO1xuICAgICAgICBpZiAocCkgcC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHN0YXJ0ZWQpIHtcbiAgICAgIHRvdWNoc3RhcnRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0b3VjaHN0YXJ0aW5nID0gbnVsbDsgfSwgdG91Y2hEZWxheSk7XG4gICAgICBpbnRlcnJ1cHQodGhpcyk7XG4gICAgICBnLnN0YXJ0KCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdG91Y2htb3ZlZCgpIHtcbiAgICB2YXIgZyA9IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzLFxuICAgICAgICBuID0gdG91Y2hlcy5sZW5ndGgsIGksIHQsIHAsIGw7XG5cbiAgICBub2V2ZW50KCk7XG4gICAgaWYgKHRvdWNoc3RhcnRpbmcpIHRvdWNoc3RhcnRpbmcgPSBjbGVhclRpbWVvdXQodG91Y2hzdGFydGluZyk7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgdCA9IHRvdWNoZXNbaV0sIHAgPSB0b3VjaCh0aGlzLCB0b3VjaGVzLCB0LmlkZW50aWZpZXIpO1xuICAgICAgaWYgKGcudG91Y2gwICYmIGcudG91Y2gwWzJdID09PSB0LmlkZW50aWZpZXIpIGcudG91Y2gwWzBdID0gcDtcbiAgICAgIGVsc2UgaWYgKGcudG91Y2gxICYmIGcudG91Y2gxWzJdID09PSB0LmlkZW50aWZpZXIpIGcudG91Y2gxWzBdID0gcDtcbiAgICB9XG4gICAgdCA9IGcudGhhdC5fX3pvb207XG4gICAgaWYgKGcudG91Y2gxKSB7XG4gICAgICB2YXIgcDAgPSBnLnRvdWNoMFswXSwgbDAgPSBnLnRvdWNoMFsxXSxcbiAgICAgICAgICBwMSA9IGcudG91Y2gxWzBdLCBsMSA9IGcudG91Y2gxWzFdLFxuICAgICAgICAgIGRwID0gKGRwID0gcDFbMF0gLSBwMFswXSkgKiBkcCArIChkcCA9IHAxWzFdIC0gcDBbMV0pICogZHAsXG4gICAgICAgICAgZGwgPSAoZGwgPSBsMVswXSAtIGwwWzBdKSAqIGRsICsgKGRsID0gbDFbMV0gLSBsMFsxXSkgKiBkbDtcbiAgICAgIHQgPSBzY2FsZSh0LCBNYXRoLnNxcnQoZHAgLyBkbCkpO1xuICAgICAgcCA9IFsocDBbMF0gKyBwMVswXSkgLyAyLCAocDBbMV0gKyBwMVsxXSkgLyAyXTtcbiAgICAgIGwgPSBbKGwwWzBdICsgbDFbMF0pIC8gMiwgKGwwWzFdICsgbDFbMV0pIC8gMl07XG4gICAgfVxuICAgIGVsc2UgaWYgKGcudG91Y2gwKSBwID0gZy50b3VjaDBbMF0sIGwgPSBnLnRvdWNoMFsxXTtcbiAgICBlbHNlIHJldHVybjtcbiAgICBnLnpvb20oXCJ0b3VjaFwiLCBjb25zdHJhaW4odHJhbnNsYXRlKHQsIHAsIGwpLCBnLmV4dGVudCwgdHJhbnNsYXRlRXh0ZW50KSk7XG4gIH1cblxuICBmdW5jdGlvbiB0b3VjaGVuZGVkKCkge1xuICAgIHZhciBnID0gZ2VzdHVyZSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICB0b3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXMsXG4gICAgICAgIG4gPSB0b3VjaGVzLmxlbmd0aCwgaSwgdDtcblxuICAgIG5vcHJvcGFnYXRpb24oKTtcbiAgICBpZiAodG91Y2hlbmRpbmcpIGNsZWFyVGltZW91dCh0b3VjaGVuZGluZyk7XG4gICAgdG91Y2hlbmRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0b3VjaGVuZGluZyA9IG51bGw7IH0sIHRvdWNoRGVsYXkpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHQgPSB0b3VjaGVzW2ldO1xuICAgICAgaWYgKGcudG91Y2gwICYmIGcudG91Y2gwWzJdID09PSB0LmlkZW50aWZpZXIpIGRlbGV0ZSBnLnRvdWNoMDtcbiAgICAgIGVsc2UgaWYgKGcudG91Y2gxICYmIGcudG91Y2gxWzJdID09PSB0LmlkZW50aWZpZXIpIGRlbGV0ZSBnLnRvdWNoMTtcbiAgICB9XG4gICAgaWYgKGcudG91Y2gxICYmICFnLnRvdWNoMCkgZy50b3VjaDAgPSBnLnRvdWNoMSwgZGVsZXRlIGcudG91Y2gxO1xuICAgIGlmIChnLnRvdWNoMCkgZy50b3VjaDBbMV0gPSB0aGlzLl9fem9vbS5pbnZlcnQoZy50b3VjaDBbMF0pO1xuICAgIGVsc2UgZy5lbmQoKTtcbiAgfVxuXG4gIHpvb20ud2hlZWxEZWx0YSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh3aGVlbERlbHRhID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHpvb20pIDogd2hlZWxEZWx0YTtcbiAgfTtcblxuICB6b29tLmZpbHRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChmaWx0ZXIgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCEhXyksIHpvb20pIDogZmlsdGVyO1xuICB9O1xuXG4gIHpvb20udG91Y2hhYmxlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRvdWNoYWJsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgem9vbSkgOiB0b3VjaGFibGU7XG4gIH07XG5cbiAgem9vbS5leHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZXh0ZW50ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChbWytfWzBdWzBdLCArX1swXVsxXV0sIFsrX1sxXVswXSwgK19bMV1bMV1dXSksIHpvb20pIDogZXh0ZW50O1xuICB9O1xuXG4gIHpvb20uc2NhbGVFeHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2NhbGVFeHRlbnRbMF0gPSArX1swXSwgc2NhbGVFeHRlbnRbMV0gPSArX1sxXSwgem9vbSkgOiBbc2NhbGVFeHRlbnRbMF0sIHNjYWxlRXh0ZW50WzFdXTtcbiAgfTtcblxuICB6b29tLnRyYW5zbGF0ZUV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0cmFuc2xhdGVFeHRlbnRbMF1bMF0gPSArX1swXVswXSwgdHJhbnNsYXRlRXh0ZW50WzFdWzBdID0gK19bMV1bMF0sIHRyYW5zbGF0ZUV4dGVudFswXVsxXSA9ICtfWzBdWzFdLCB0cmFuc2xhdGVFeHRlbnRbMV1bMV0gPSArX1sxXVsxXSwgem9vbSkgOiBbW3RyYW5zbGF0ZUV4dGVudFswXVswXSwgdHJhbnNsYXRlRXh0ZW50WzBdWzFdXSwgW3RyYW5zbGF0ZUV4dGVudFsxXVswXSwgdHJhbnNsYXRlRXh0ZW50WzFdWzFdXV07XG4gIH07XG5cbiAgem9vbS5jb25zdHJhaW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY29uc3RyYWluID0gXywgem9vbSkgOiBjb25zdHJhaW47XG4gIH07XG5cbiAgem9vbS5kdXJhdGlvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkdXJhdGlvbiA9ICtfLCB6b29tKSA6IGR1cmF0aW9uO1xuICB9O1xuXG4gIHpvb20uaW50ZXJwb2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaW50ZXJwb2xhdGUgPSBfLCB6b29tKSA6IGludGVycG9sYXRlO1xuICB9O1xuXG4gIHpvb20ub24gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUgPSBsaXN0ZW5lcnMub24uYXBwbHkobGlzdGVuZXJzLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiB2YWx1ZSA9PT0gbGlzdGVuZXJzID8gem9vbSA6IHZhbHVlO1xuICB9O1xuXG4gIHpvb20uY2xpY2tEaXN0YW5jZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjbGlja0Rpc3RhbmNlMiA9IChfID0gK18pICogXywgem9vbSkgOiBNYXRoLnNxcnQoY2xpY2tEaXN0YW5jZTIpO1xuICB9O1xuXG4gIHJldHVybiB6b29tO1xufVxuIiwiZXhwb3J0IHZhciBuYW1lID0gXCJkM1wiO1xuZXhwb3J0IHZhciB2ZXJzaW9uID0gXCI1LjkuMlwiO1xuZXhwb3J0IHZhciBkZXNjcmlwdGlvbiA9IFwiRGF0YS1Ecml2ZW4gRG9jdW1lbnRzXCI7XG5leHBvcnQgdmFyIGtleXdvcmRzID0gW1wiZG9tXCIsXCJ2aXN1YWxpemF0aW9uXCIsXCJzdmdcIixcImFuaW1hdGlvblwiLFwiY2FudmFzXCJdO1xuZXhwb3J0IHZhciBob21lcGFnZSA9IFwiaHR0cHM6Ly9kM2pzLm9yZ1wiO1xuZXhwb3J0IHZhciBsaWNlbnNlID0gXCJCU0QtMy1DbGF1c2VcIjtcbmV4cG9ydCB2YXIgYXV0aG9yID0ge1wibmFtZVwiOlwiTWlrZSBCb3N0b2NrXCIsXCJ1cmxcIjpcImh0dHBzOi8vYm9zdC5vY2tzLm9yZy9taWtlXCJ9O1xuZXhwb3J0IHZhciBtYWluID0gXCJkaXN0L2QzLm5vZGUuanNcIjtcbmV4cG9ydCB2YXIgdW5wa2cgPSBcImRpc3QvZDMubWluLmpzXCI7XG5leHBvcnQgdmFyIGpzZGVsaXZyID0gXCJkaXN0L2QzLm1pbi5qc1wiO1xuZXhwb3J0IHZhciBtb2R1bGUgPSBcImluZGV4LmpzXCI7XG5leHBvcnQgdmFyIHJlcG9zaXRvcnkgPSB7XCJ0eXBlXCI6XCJnaXRcIixcInVybFwiOlwiaHR0cHM6Ly9naXRodWIuY29tL2QzL2QzLmdpdFwifTtcbmV4cG9ydCB2YXIgc2NyaXB0cyA9IHtcInByZXRlc3RcIjpcInJpbXJhZiBkaXN0ICYmIG1rZGlyIGRpc3QgJiYganNvbjJtb2R1bGUgcGFja2FnZS5qc29uID4gZGlzdC9wYWNrYWdlLmpzICYmIG5vZGUgcm9sbHVwLm5vZGVcIixcInRlc3RcIjpcInRhcGUgJ3Rlc3QvKiovKi10ZXN0LmpzJ1wiLFwicHJlcHVibGlzaE9ubHlcIjpcInlhcm4gdGVzdCAmJiByb2xsdXAgLWNcIixcInBvc3RwdWJsaXNoXCI6XCJnaXQgcHVzaCAmJiBnaXQgcHVzaCAtLXRhZ3MgJiYgY2QgLi4vZDMuZ2l0aHViLmNvbSAmJiBnaXQgcHVsbCAmJiBjcCAuLi9kMy9kaXN0L2QzLmpzIGQzLnY1LmpzICYmIGNwIC4uL2QzL2Rpc3QvZDMubWluLmpzIGQzLnY1Lm1pbi5qcyAmJiBnaXQgYWRkIGQzLnY1LmpzIGQzLnY1Lm1pbi5qcyAmJiBnaXQgY29tbWl0IC1tIFxcXCJkMyAke25wbV9wYWNrYWdlX3ZlcnNpb259XFxcIiAmJiBnaXQgcHVzaCAmJiBjZCAtICYmIGNkIC4uL2QzLWJvd2VyICYmIGdpdCBwdWxsICYmIGNwIC4uL2QzL0xJQ0VOU0UgLi4vZDMvUkVBRE1FLm1kIC4uL2QzL2Rpc3QvZDMuanMgLi4vZDMvZGlzdC9kMy5taW4uanMgLiAmJiBnaXQgYWRkIC0tIExJQ0VOU0UgUkVBRE1FLm1kIGQzLmpzIGQzLm1pbi5qcyAmJiBnaXQgY29tbWl0IC1tIFxcXCIke25wbV9wYWNrYWdlX3ZlcnNpb259XFxcIiAmJiBnaXQgdGFnIC1hbSBcXFwiJHtucG1fcGFja2FnZV92ZXJzaW9ufVxcXCIgdiR7bnBtX3BhY2thZ2VfdmVyc2lvbn0gJiYgZ2l0IHB1c2ggJiYgZ2l0IHB1c2ggLS10YWdzICYmIGNkIC0gJiYgemlwIC1qIGRpc3QvZDMuemlwIC0tIExJQ0VOU0UgUkVBRE1FLm1kIEFQSS5tZCBDSEFOR0VTLm1kIGRpc3QvZDMuanMgZGlzdC9kMy5taW4uanNcIn07XG5leHBvcnQgdmFyIGRldkRlcGVuZGVuY2llcyA9IHtcImpzb24ybW9kdWxlXCI6XCIwLjBcIixcInJpbXJhZlwiOlwiMlwiLFwicm9sbHVwXCI6XCIwLjY0XCIsXCJyb2xsdXAtcGx1Z2luLWFzY2lpXCI6XCIwLjBcIixcInJvbGx1cC1wbHVnaW4tbm9kZS1yZXNvbHZlXCI6XCIzXCIsXCJyb2xsdXAtcGx1Z2luLXRlcnNlclwiOlwiMVwiLFwidGFwZVwiOlwiNFwifTtcbmV4cG9ydCB2YXIgZGVwZW5kZW5jaWVzID0ge1wiZDMtYXJyYXlcIjpcIjFcIixcImQzLWF4aXNcIjpcIjFcIixcImQzLWJydXNoXCI6XCIxXCIsXCJkMy1jaG9yZFwiOlwiMVwiLFwiZDMtY29sbGVjdGlvblwiOlwiMVwiLFwiZDMtY29sb3JcIjpcIjFcIixcImQzLWNvbnRvdXJcIjpcIjFcIixcImQzLWRpc3BhdGNoXCI6XCIxXCIsXCJkMy1kcmFnXCI6XCIxXCIsXCJkMy1kc3ZcIjpcIjFcIixcImQzLWVhc2VcIjpcIjFcIixcImQzLWZldGNoXCI6XCIxXCIsXCJkMy1mb3JjZVwiOlwiMVwiLFwiZDMtZm9ybWF0XCI6XCIxXCIsXCJkMy1nZW9cIjpcIjFcIixcImQzLWhpZXJhcmNoeVwiOlwiMVwiLFwiZDMtaW50ZXJwb2xhdGVcIjpcIjFcIixcImQzLXBhdGhcIjpcIjFcIixcImQzLXBvbHlnb25cIjpcIjFcIixcImQzLXF1YWR0cmVlXCI6XCIxXCIsXCJkMy1yYW5kb21cIjpcIjFcIixcImQzLXNjYWxlXCI6XCIyXCIsXCJkMy1zY2FsZS1jaHJvbWF0aWNcIjpcIjFcIixcImQzLXNlbGVjdGlvblwiOlwiMVwiLFwiZDMtc2hhcGVcIjpcIjFcIixcImQzLXRpbWVcIjpcIjFcIixcImQzLXRpbWUtZm9ybWF0XCI6XCIyXCIsXCJkMy10aW1lclwiOlwiMVwiLFwiZDMtdHJhbnNpdGlvblwiOlwiMVwiLFwiZDMtdm9yb25vaVwiOlwiMVwiLFwiZDMtem9vbVwiOlwiMVwifTtcbiIsImV4cG9ydCB7dmVyc2lvbn0gZnJvbSBcIi4vZGlzdC9wYWNrYWdlXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtYXJyYXlcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1heGlzXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtYnJ1c2hcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1jaG9yZFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWNvbGxlY3Rpb25cIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1jb2xvclwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWNvbnRvdXJcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1kaXNwYXRjaFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWRyYWdcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1kc3ZcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1lYXNlXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtZmV0Y2hcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1mb3JjZVwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWZvcm1hdFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWdlb1wiO1xuZXhwb3J0ICogZnJvbSBcImQzLWhpZXJhcmNoeVwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtcGF0aFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXBvbHlnb25cIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1xdWFkdHJlZVwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXJhbmRvbVwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXNjYWxlXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtc2NhbGUtY2hyb21hdGljXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtc2hhcGVcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy10aW1lXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtdGltZS1mb3JtYXRcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy10aW1lclwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXRyYW5zaXRpb25cIjtcbmV4cG9ydCAqIGZyb20gXCJkMy12b3Jvbm9pXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtem9vbVwiO1xuIiwiLyoqXG4gKiBJb24uU291bmRcbiAqIHZlcnNpb24gMy4wLjcgQnVpbGQgODlcbiAqIMKpIERlbmlzIEluZXNoaW4sIDIwMTZcbiAqXG4gKiBQcm9qZWN0IHBhZ2U6ICAgIGh0dHA6Ly9pb25kZW4uY29tL2EvcGx1Z2lucy9pb24uc291bmQvZW4uaHRtbFxuICogR2l0SHViIHBhZ2U6ICAgICBodHRwczovL2dpdGh1Yi5jb20vSW9uRGVuL2lvbi5zb3VuZFxuICpcbiAqIFJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbmNlOlxuICogaHR0cDovL2lvbmRlbi5jb20vYS9wbHVnaW5zL2xpY2VuY2UtZW4uaHRtbFxuICovXG5cbjsoZnVuY3Rpb24gKHdpbmRvdywgbmF2aWdhdG9yLCAkLCB1bmRlZmluZWQpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIHdpbmRvdy5pb24gPSB3aW5kb3cuaW9uIHx8IHt9O1xuXG4gICAgaWYgKGlvbi5zb3VuZCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHdhcm4gPSBmdW5jdGlvbiAodGV4dCkge1xuICAgICAgICBpZiAoIXRleHQpIHRleHQgPSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICAgIGlmICh3aW5kb3cuY29uc29sZSkge1xuICAgICAgICAgICAgaWYgKGNvbnNvbGUud2FybiAmJiB0eXBlb2YgY29uc29sZS53YXJuID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4odGV4dCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGNvbnNvbGUubG9nICYmIHR5cGVvZiBjb25zb2xlLmxvZyA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codGV4dCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBkID0gJCAmJiAkKFwiI2RlYnVnXCIpO1xuICAgICAgICAgICAgaWYgKGQgJiYgZC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYSA9IGQuaHRtbCgpO1xuICAgICAgICAgICAgICAgIGQuaHRtbChhICsgdGV4dCArICc8YnIvPicpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIHZhciBleHRlbmQgPSBmdW5jdGlvbiAocGFyZW50LCBjaGlsZCkge1xuICAgICAgICB2YXIgcHJvcDtcbiAgICAgICAgY2hpbGQgPSBjaGlsZCB8fCB7fTtcblxuICAgICAgICBmb3IgKHByb3AgaW4gcGFyZW50KSB7XG4gICAgICAgICAgICBpZiAocGFyZW50Lmhhc093blByb3BlcnR5KHByb3ApKSB7XG4gICAgICAgICAgICAgICAgY2hpbGRbcHJvcF0gPSBwYXJlbnRbcHJvcF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY2hpbGQ7XG4gICAgfTtcblxuXG5cbiAgICAvKipcbiAgICAgKiBESVNBQkxFIGZvciB1bnN1cHBvcnRlZCBicm93c2Vyc1xuICAgICAqL1xuXG4gICAgaWYgKHR5cGVvZiBBdWRpbyAhPT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBBdWRpbyAhPT0gXCJvYmplY3RcIikge1xuICAgICAgICB2YXIgZnVuYyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHdhcm4oXCJIVE1MNSBBdWRpbyBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbiAgICAgICAgfTtcbiAgICAgICAgaW9uLnNvdW5kID0gZnVuYztcbiAgICAgICAgaW9uLnNvdW5kLnBsYXkgPSBmdW5jO1xuICAgICAgICBpb24uc291bmQuc3RvcCA9IGZ1bmM7XG4gICAgICAgIGlvbi5zb3VuZC5wYXVzZSA9IGZ1bmM7XG4gICAgICAgIGlvbi5zb3VuZC5wcmVsb2FkID0gZnVuYztcbiAgICAgICAgaW9uLnNvdW5kLmRlc3Ryb3kgPSBmdW5jO1xuICAgICAgICBmdW5jKCk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cblxuXG4gICAgLyoqXG4gICAgICogQ09SRVxuICAgICAqIC0gY3JlYXRpbmcgc291bmRzIGNvbGxlY3Rpb25cbiAgICAgKiAtIHB1YmxpYyBtZXRob2RzXG4gICAgICovXG5cbiAgICB2YXIgaXNfaU9TID0gL2lQYWR8aVBob25lfGlQb2QvLnRlc3QobmF2aWdhdG9yLmFwcFZlcnNpb24pLFxuICAgICAgICBzb3VuZHNfbnVtID0gMCxcbiAgICAgICAgc2V0dGluZ3MgPSB7fSxcbiAgICAgICAgc291bmRzID0ge30sXG4gICAgICAgIGk7XG5cblxuXG4gICAgaWYgKCFzZXR0aW5ncy5zdXBwb3J0ZWQgJiYgaXNfaU9TKSB7XG4gICAgICAgIHNldHRpbmdzLnN1cHBvcnRlZCA9IFtcIm1wM1wiLCBcIm1wNFwiLCBcImFhY1wiXTtcbiAgICB9IGVsc2UgaWYgKCFzZXR0aW5ncy5zdXBwb3J0ZWQpIHtcbiAgICAgICAgc2V0dGluZ3Muc3VwcG9ydGVkID0gW1wibXAzXCIsIFwib2dnXCIsIFwibXA0XCIsIFwiYWFjXCIsIFwid2F2XCJdO1xuICAgIH1cblxuICAgIHZhciBjcmVhdGVTb3VuZCA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgdmFyIG5hbWUgPSBvYmouYWxpYXMgfHwgb2JqLm5hbWU7XG5cbiAgICAgICAgaWYgKCFzb3VuZHNbbmFtZV0pIHtcbiAgICAgICAgICAgIHNvdW5kc1tuYW1lXSA9IG5ldyBTb3VuZChvYmopO1xuICAgICAgICAgICAgc291bmRzW25hbWVdLmluaXQoKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBpb24uc291bmQgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICBleHRlbmQob3B0aW9ucywgc2V0dGluZ3MpO1xuXG4gICAgICAgIHNldHRpbmdzLnBhdGggPSBzZXR0aW5ncy5wYXRoIHx8IFwiXCI7XG4gICAgICAgIHNldHRpbmdzLnZvbHVtZSA9IHNldHRpbmdzLnZvbHVtZSB8fCAxO1xuICAgICAgICBzZXR0aW5ncy5wcmVsb2FkID0gc2V0dGluZ3MucHJlbG9hZCB8fCBmYWxzZTtcbiAgICAgICAgc2V0dGluZ3MubXVsdGlwbGF5ID0gc2V0dGluZ3MubXVsdGlwbGF5IHx8IGZhbHNlO1xuICAgICAgICBzZXR0aW5ncy5sb29wID0gc2V0dGluZ3MubG9vcCB8fCBmYWxzZTtcbiAgICAgICAgc2V0dGluZ3Muc3ByaXRlID0gc2V0dGluZ3Muc3ByaXRlIHx8IG51bGw7XG4gICAgICAgIHNldHRpbmdzLnNjb3BlID0gc2V0dGluZ3Muc2NvcGUgfHwgbnVsbDtcbiAgICAgICAgc2V0dGluZ3MucmVhZHlfY2FsbGJhY2sgPSBzZXR0aW5ncy5yZWFkeV9jYWxsYmFjayB8fCBudWxsO1xuICAgICAgICBzZXR0aW5ncy5lbmRlZF9jYWxsYmFjayA9IHNldHRpbmdzLmVuZGVkX2NhbGxiYWNrIHx8IG51bGw7XG5cbiAgICAgICAgc291bmRzX251bSA9IHNldHRpbmdzLnNvdW5kcy5sZW5ndGg7XG5cbiAgICAgICAgaWYgKCFzb3VuZHNfbnVtKSB7XG4gICAgICAgICAgICB3YXJuKFwiTm8gc291bmQtZmlsZXMgcHJvdmlkZWQhXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHNvdW5kc19udW07IGkrKykge1xuICAgICAgICAgICAgY3JlYXRlU291bmQoc2V0dGluZ3Muc291bmRzW2ldKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBpb24uc291bmQuVkVSU0lPTiA9IFwiMy4wLjdcIjtcblxuICAgIGlvbi5zb3VuZC5fbWV0aG9kID0gZnVuY3Rpb24gKG1ldGhvZCwgbmFtZSwgb3B0aW9ucykge1xuICAgICAgICBpZiAobmFtZSkge1xuICAgICAgICAgICAgc291bmRzW25hbWVdICYmIHNvdW5kc1tuYW1lXVttZXRob2RdKG9wdGlvbnMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZm9yIChpIGluIHNvdW5kcykge1xuICAgICAgICAgICAgICAgIGlmICghc291bmRzLmhhc093blByb3BlcnR5KGkpIHx8ICFzb3VuZHNbaV0pIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgc291bmRzW2ldW21ldGhvZF0ob3B0aW9ucyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgaW9uLnNvdW5kLnByZWxvYWQgPSBmdW5jdGlvbiAobmFtZSwgb3B0aW9ucykge1xuICAgICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICAgICAgZXh0ZW5kKHtwcmVsb2FkOiB0cnVlfSwgb3B0aW9ucyk7XG5cbiAgICAgICAgaW9uLnNvdW5kLl9tZXRob2QoXCJpbml0XCIsIG5hbWUsIG9wdGlvbnMpO1xuICAgIH07XG5cbiAgICBpb24uc291bmQuZGVzdHJveSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIGlvbi5zb3VuZC5fbWV0aG9kKFwiZGVzdHJveVwiLCBuYW1lKTtcblxuICAgICAgICBpZiAobmFtZSkge1xuICAgICAgICAgICAgc291bmRzW25hbWVdID0gbnVsbDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZvciAoaSBpbiBzb3VuZHMpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXNvdW5kcy5oYXNPd25Qcm9wZXJ0eShpKSkge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHNvdW5kc1tpXSkge1xuICAgICAgICAgICAgICAgICAgICBzb3VuZHNbaV0gPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBpb24uc291bmQucGxheSA9IGZ1bmN0aW9uIChuYW1lLCBvcHRpb25zKSB7XG4gICAgICAgIGlvbi5zb3VuZC5fbWV0aG9kKFwicGxheVwiLCBuYW1lLCBvcHRpb25zKTtcbiAgICB9O1xuXG4gICAgaW9uLnNvdW5kLnN0b3AgPSBmdW5jdGlvbiAobmFtZSwgb3B0aW9ucykge1xuICAgICAgICBpb24uc291bmQuX21ldGhvZChcInN0b3BcIiwgbmFtZSwgb3B0aW9ucyk7XG4gICAgfTtcblxuICAgIGlvbi5zb3VuZC5wYXVzZSA9IGZ1bmN0aW9uIChuYW1lLCBvcHRpb25zKSB7XG4gICAgICAgIGlvbi5zb3VuZC5fbWV0aG9kKFwicGF1c2VcIiwgbmFtZSwgb3B0aW9ucyk7XG4gICAgfTtcblxuICAgIGlvbi5zb3VuZC52b2x1bWUgPSBmdW5jdGlvbiAobmFtZSwgb3B0aW9ucykge1xuICAgICAgICBpb24uc291bmQuX21ldGhvZChcInZvbHVtZVwiLCBuYW1lLCBvcHRpb25zKTtcbiAgICB9O1xuXG4gICAgaWYgKCQpIHtcbiAgICAgICAgJC5pb25Tb3VuZCA9IGlvbi5zb3VuZDtcbiAgICB9XG5cblxuXG4gICAgLyoqXG4gICAgICogV2ViIEF1ZGlvIEFQSSBjb3JlXG4gICAgICogLSBmb3IgbW9zdCBhZHZhbmNlZCBicm93c2Vyc1xuICAgICAqL1xuXG4gICAgdmFyIEF1ZGlvQ29udGV4dCA9IHdpbmRvdy5BdWRpb0NvbnRleHQgfHwgd2luZG93LndlYmtpdEF1ZGlvQ29udGV4dCxcbiAgICAgICAgYXVkaW87XG5cbiAgICBpZiAoQXVkaW9Db250ZXh0KSB7XG4gICAgICAgIGF1ZGlvID0gbmV3IEF1ZGlvQ29udGV4dCgpO1xuICAgIH1cblxuXG4gICAgdmFyIFNvdW5kID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gZXh0ZW5kKHNldHRpbmdzKTtcbiAgICAgICAgZGVsZXRlIHRoaXMub3B0aW9ucy5zb3VuZHM7XG4gICAgICAgIGV4dGVuZChvcHRpb25zLCB0aGlzLm9wdGlvbnMpO1xuXG4gICAgICAgIHRoaXMucmVxdWVzdCA9IG51bGw7XG4gICAgICAgIHRoaXMuc3RyZWFtcyA9IHt9O1xuICAgICAgICB0aGlzLnJlc3VsdCA9IHt9O1xuICAgICAgICB0aGlzLmV4dCA9IDA7XG4gICAgICAgIHRoaXMudXJsID0gXCJcIjtcblxuICAgICAgICB0aGlzLmxvYWRlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmRlY29kZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5ub19maWxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuYXV0b3BsYXkgPSBmYWxzZTtcbiAgICB9O1xuXG4gICAgU291bmQucHJvdG90eXBlID0ge1xuICAgICAgICBpbml0OiBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBleHRlbmQob3B0aW9ucywgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5wcmVsb2FkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgZGVzdHJveTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHN0cmVhbTtcblxuICAgICAgICAgICAgZm9yIChpIGluIHRoaXMuc3RyZWFtcykge1xuICAgICAgICAgICAgICAgIHN0cmVhbSA9IHRoaXMuc3RyZWFtc1tpXTtcblxuICAgICAgICAgICAgICAgIGlmIChzdHJlYW0pIHtcbiAgICAgICAgICAgICAgICAgICAgc3RyZWFtLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICAgICAgc3RyZWFtID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnN0cmVhbXMgPSB7fTtcbiAgICAgICAgICAgIHRoaXMucmVzdWx0ID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5idWZmZXIgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5vcHRpb25zID0gbnVsbDtcblxuICAgICAgICAgICAgaWYgKHRoaXMucmVxdWVzdCkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVxdWVzdC5yZW1vdmVFdmVudExpc3RlbmVyKFwibG9hZFwiLCB0aGlzLnJlYWR5LmJpbmQodGhpcyksIGZhbHNlKTtcbiAgICAgICAgICAgICAgICB0aGlzLnJlcXVlc3QucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsIHRoaXMuZXJyb3IuYmluZCh0aGlzKSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIHRoaXMucmVxdWVzdC5hYm9ydCgpO1xuICAgICAgICAgICAgICAgIHRoaXMucmVxdWVzdCA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgY3JlYXRlVXJsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgbm9fY2FjaGUgPSBuZXcgRGF0ZSgpLnZhbHVlT2YoKTtcbiAgICAgICAgICAgIHRoaXMudXJsID0gdGhpcy5vcHRpb25zLnBhdGggKyBlbmNvZGVVUklDb21wb25lbnQodGhpcy5vcHRpb25zLm5hbWUpICsgXCIuXCIgKyB0aGlzLm9wdGlvbnMuc3VwcG9ydGVkW3RoaXMuZXh0XSArIFwiP1wiICsgbm9fY2FjaGU7XG4gICAgICAgIH0sXG5cbiAgICAgICAgbG9hZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMubm9fZmlsZSkge1xuICAgICAgICAgICAgICAgIHdhcm4oXCJObyBzb3VyY2VzIGZvciBcXFwiXCIgKyB0aGlzLm9wdGlvbnMubmFtZSArIFwiXFxcIiBzb3VuZCA6KFwiKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0aGlzLnJlcXVlc3QpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuY3JlYXRlVXJsKCk7XG5cbiAgICAgICAgICAgIHRoaXMucmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0Lm9wZW4oXCJHRVRcIiwgdGhpcy51cmwsIHRydWUpO1xuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0LnJlc3BvbnNlVHlwZSA9IFwiYXJyYXlidWZmZXJcIjtcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCB0aGlzLnJlYWR5LmJpbmQodGhpcyksIGZhbHNlKTtcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwgdGhpcy5lcnJvci5iaW5kKHRoaXMpLCBmYWxzZSk7XG5cbiAgICAgICAgICAgIHRoaXMucmVxdWVzdC5zZW5kKCk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVsb2FkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLmV4dCsrO1xuXG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnN1cHBvcnRlZFt0aGlzLmV4dF0pIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvYWQoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ub19maWxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB3YXJuKFwiTm8gc291cmNlcyBmb3IgXFxcIlwiICsgdGhpcy5vcHRpb25zLm5hbWUgKyBcIlxcXCIgc291bmQgOihcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVhZHk6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICB0aGlzLnJlc3VsdCA9IGRhdGEudGFyZ2V0O1xuXG4gICAgICAgICAgICBpZiAodGhpcy5yZXN1bHQucmVhZHlTdGF0ZSAhPT0gNCkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVsb2FkKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5yZXN1bHQuc3RhdHVzICE9PSAyMDAgJiYgdGhpcy5yZXN1bHQuc3RhdHVzICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgd2Fybih0aGlzLnVybCArIFwiIHdhcyBub3QgZm91bmQgb24gc2VydmVyIVwiKTtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbG9hZCgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIHRoaXMucmVhZHkuYmluZCh0aGlzKSwgZmFsc2UpO1xuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLCB0aGlzLmVycm9yLmJpbmQodGhpcyksIGZhbHNlKTtcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdCA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmxvYWRlZCA9IHRydWU7XG4gICAgICAgICAgICAvL3dhcm4oXCJMb2FkZWQ6IFwiICsgdGhpcy5vcHRpb25zLm5hbWUgKyBcIi5cIiArIHNldHRpbmdzLnN1cHBvcnRlZFt0aGlzLmV4dF0pO1xuXG4gICAgICAgICAgICB0aGlzLmRlY29kZSgpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGRlY29kZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKCFhdWRpbykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYXVkaW8uZGVjb2RlQXVkaW9EYXRhKHRoaXMucmVzdWx0LnJlc3BvbnNlLCB0aGlzLnNldEJ1ZmZlci5iaW5kKHRoaXMpLCB0aGlzLmVycm9yLmJpbmQodGhpcykpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHNldEJ1ZmZlcjogZnVuY3Rpb24gKGJ1ZmZlcikge1xuICAgICAgICAgICAgdGhpcy5vcHRpb25zLmJ1ZmZlciA9IGJ1ZmZlcjtcbiAgICAgICAgICAgIHRoaXMuZGVjb2RlZCA9IHRydWU7XG4gICAgICAgICAgICAvL3dhcm4oXCJEZWNvZGVkOiBcIiArIHRoaXMub3B0aW9ucy5uYW1lICsgXCIuXCIgKyBzZXR0aW5ncy5zdXBwb3J0ZWRbdGhpcy5leHRdKTtcblxuICAgICAgICAgICAgdmFyIGNvbmZpZyA9IHtcbiAgICAgICAgICAgICAgICBuYW1lOiB0aGlzLm9wdGlvbnMubmFtZSxcbiAgICAgICAgICAgICAgICBhbGlhczogdGhpcy5vcHRpb25zLmFsaWFzLFxuICAgICAgICAgICAgICAgIGV4dDogdGhpcy5vcHRpb25zLnN1cHBvcnRlZFt0aGlzLmV4dF0sXG4gICAgICAgICAgICAgICAgZHVyYXRpb246IHRoaXMub3B0aW9ucy5idWZmZXIuZHVyYXRpb25cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMucmVhZHlfY2FsbGJhY2sgJiYgdHlwZW9mIHRoaXMub3B0aW9ucy5yZWFkeV9jYWxsYmFjayA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLnJlYWR5X2NhbGxiYWNrLmNhbGwodGhpcy5vcHRpb25zLnNjb3BlLCBjb25maWcpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNwcml0ZSkge1xuXG4gICAgICAgICAgICAgICAgZm9yIChpIGluIHRoaXMub3B0aW9ucy5zcHJpdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLnN0YXJ0ID0gdGhpcy5vcHRpb25zLnNwcml0ZVtpXVswXTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLmVuZCA9IHRoaXMub3B0aW9ucy5zcHJpdGVbaV1bMV07XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RyZWFtc1tpXSA9IG5ldyBTdHJlYW0odGhpcy5vcHRpb25zLCBpKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgICAgICB0aGlzLnN0cmVhbXNbMF0gPSBuZXcgU3RyZWFtKHRoaXMub3B0aW9ucyk7XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRoaXMuYXV0b3BsYXkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmF1dG9wbGF5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMucmVsb2FkKCk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcGxheTogZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLm9wdGlvbnMucGFydDtcblxuICAgICAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBleHRlbmQob3B0aW9ucywgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCF0aGlzLmxvYWRlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYXV0b3BsYXkgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRoaXMubG9hZCgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5ub19maWxlIHx8ICF0aGlzLmRlY29kZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuc3ByaXRlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5wYXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RyZWFtc1t0aGlzLm9wdGlvbnMucGFydF0ucGxheSh0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSBpbiB0aGlzLm9wdGlvbnMuc3ByaXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0cmVhbXNbaV0ucGxheSh0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnN0cmVhbXNbMF0ucGxheSh0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIHN0b3A6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNwcml0ZSkge1xuXG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdHJlYW1zW29wdGlvbnMucGFydF0uc3RvcCgpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSBpbiB0aGlzLm9wdGlvbnMuc3ByaXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0cmVhbXNbaV0uc3RvcCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuc3RyZWFtc1swXS5zdG9wKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgcGF1c2U6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNwcml0ZSkge1xuXG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdHJlYW1zW29wdGlvbnMucGFydF0ucGF1c2UoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGkgaW4gdGhpcy5vcHRpb25zLnNwcml0ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdHJlYW1zW2ldLnBhdXNlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zdHJlYW1zWzBdLnBhdXNlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgdm9sdW1lOiBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgdmFyIHN0cmVhbTtcblxuICAgICAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBleHRlbmQob3B0aW9ucywgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNwcml0ZSkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMucGFydCkge1xuICAgICAgICAgICAgICAgICAgICBzdHJlYW0gPSB0aGlzLnN0cmVhbXNbdGhpcy5vcHRpb25zLnBhcnRdO1xuICAgICAgICAgICAgICAgICAgICBzdHJlYW0gJiYgc3RyZWFtLnNldFZvbHVtZSh0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSBpbiB0aGlzLm9wdGlvbnMuc3ByaXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJlYW0gPSB0aGlzLnN0cmVhbXNbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJlYW0gJiYgc3RyZWFtLnNldFZvbHVtZSh0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdHJlYW0gPSB0aGlzLnN0cmVhbXNbMF07XG4gICAgICAgICAgICAgICAgc3RyZWFtICYmIHN0cmVhbS5zZXRWb2x1bWUodGhpcy5vcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cblxuXG4gICAgdmFyIFN0cmVhbSA9IGZ1bmN0aW9uIChvcHRpb25zLCBzcHJpdGVfcGFydCkge1xuICAgICAgICB0aGlzLmFsaWFzID0gb3B0aW9ucy5hbGlhcztcbiAgICAgICAgdGhpcy5uYW1lID0gb3B0aW9ucy5uYW1lO1xuICAgICAgICB0aGlzLnNwcml0ZV9wYXJ0ID0gc3ByaXRlX3BhcnQ7XG5cbiAgICAgICAgdGhpcy5idWZmZXIgPSBvcHRpb25zLmJ1ZmZlcjtcbiAgICAgICAgdGhpcy5zdGFydCA9IG9wdGlvbnMuc3RhcnQgfHwgMDtcbiAgICAgICAgdGhpcy5lbmQgPSBvcHRpb25zLmVuZCB8fCB0aGlzLmJ1ZmZlci5kdXJhdGlvbjtcbiAgICAgICAgdGhpcy5tdWx0aXBsYXkgPSBvcHRpb25zLm11bHRpcGxheSB8fCBmYWxzZTtcbiAgICAgICAgdGhpcy52b2x1bWUgPSBvcHRpb25zLnZvbHVtZSB8fCAxO1xuICAgICAgICB0aGlzLnNjb3BlID0gb3B0aW9ucy5zY29wZTtcbiAgICAgICAgdGhpcy5lbmRlZF9jYWxsYmFjayA9IG9wdGlvbnMuZW5kZWRfY2FsbGJhY2s7XG5cbiAgICAgICAgdGhpcy5zZXRMb29wKG9wdGlvbnMpO1xuXG4gICAgICAgIHRoaXMuc291cmNlID0gbnVsbDtcbiAgICAgICAgdGhpcy5nYWluID0gbnVsbDtcbiAgICAgICAgdGhpcy5wbGF5aW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMucGF1c2VkID0gZmFsc2U7XG5cbiAgICAgICAgdGhpcy50aW1lX3N0YXJ0ZWQgPSAwO1xuICAgICAgICB0aGlzLnRpbWVfZW5kZWQgPSAwO1xuICAgICAgICB0aGlzLnRpbWVfcGxheWVkID0gMDtcbiAgICAgICAgdGhpcy50aW1lX29mZnNldCA9IDA7XG4gICAgfTtcblxuICAgIFN0cmVhbS5wcm90b3R5cGUgPSB7XG4gICAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMuc3RvcCgpO1xuXG4gICAgICAgICAgICB0aGlzLmJ1ZmZlciA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLnNvdXJjZSA9IG51bGw7XG5cbiAgICAgICAgICAgIHRoaXMuZ2FpbiAmJiB0aGlzLmdhaW4uZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgdGhpcy5zb3VyY2UgJiYgdGhpcy5zb3VyY2UuZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgdGhpcy5nYWluID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuc291cmNlID0gbnVsbDtcbiAgICAgICAgfSxcblxuICAgICAgICBzZXRMb29wOiBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMubG9vcCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHRoaXMubG9vcCA9IDk5OTk5OTk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmxvb3AgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvb3AgPSArb3B0aW9ucy5sb29wIC0gMTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb29wID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgdXBkYXRlOiBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgdGhpcy5zZXRMb29wKG9wdGlvbnMpO1xuICAgICAgICAgICAgaWYgKFwidm9sdW1lXCIgaW4gb3B0aW9ucykge1xuICAgICAgICAgICAgICAgIHRoaXMudm9sdW1lID0gb3B0aW9ucy52b2x1bWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgcGxheTogZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGUob3B0aW9ucyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghdGhpcy5tdWx0aXBsYXkgJiYgdGhpcy5wbGF5aW5nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmdhaW4gPSBhdWRpby5jcmVhdGVHYWluKCk7XG4gICAgICAgICAgICB0aGlzLnNvdXJjZSA9IGF1ZGlvLmNyZWF0ZUJ1ZmZlclNvdXJjZSgpO1xuICAgICAgICAgICAgdGhpcy5zb3VyY2UuYnVmZmVyID0gdGhpcy5idWZmZXI7XG4gICAgICAgICAgICB0aGlzLnNvdXJjZS5jb25uZWN0KHRoaXMuZ2Fpbik7XG4gICAgICAgICAgICB0aGlzLmdhaW4uY29ubmVjdChhdWRpby5kZXN0aW5hdGlvbik7XG4gICAgICAgICAgICB0aGlzLmdhaW4uZ2Fpbi52YWx1ZSA9IHRoaXMudm9sdW1lO1xuXG4gICAgICAgICAgICB0aGlzLnNvdXJjZS5vbmVuZGVkID0gdGhpcy5lbmRlZC5iaW5kKHRoaXMpO1xuXG4gICAgICAgICAgICB0aGlzLl9wbGF5KCk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgX3BsYXk6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBzdGFydCxcbiAgICAgICAgICAgICAgICBlbmQ7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLnBhdXNlZCkge1xuICAgICAgICAgICAgICAgIHN0YXJ0ID0gdGhpcy5zdGFydCArIHRoaXMudGltZV9vZmZzZXQ7XG4gICAgICAgICAgICAgICAgZW5kID0gdGhpcy5lbmQgLSB0aGlzLnRpbWVfb2Zmc2V0O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdGFydCA9IHRoaXMuc3RhcnQ7XG4gICAgICAgICAgICAgICAgZW5kID0gdGhpcy5lbmQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChlbmQgPD0gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXIoKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5zb3VyY2Uuc3RhcnQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHRoaXMuc291cmNlLnN0YXJ0KDAsIHN0YXJ0LCBlbmQpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNvdXJjZS5ub3RlT24oMCwgc3RhcnQsIGVuZCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMucGxheWluZyA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLnBhdXNlZCA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy50aW1lX3N0YXJ0ZWQgPSBuZXcgRGF0ZSgpLnZhbHVlT2YoKTtcbiAgICAgICAgfSxcblxuICAgICAgICBzdG9wOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wbGF5aW5nICYmIHRoaXMuc291cmNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnNvdXJjZS5zdG9wID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zb3VyY2Uuc3RvcCgwKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNvdXJjZS5ub3RlT2ZmKDApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5jbGVhcigpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHBhdXNlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wYXVzZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXkoKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghdGhpcy5wbGF5aW5nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLnNvdXJjZSAmJiB0aGlzLnNvdXJjZS5zdG9wKDApO1xuICAgICAgICAgICAgdGhpcy5wYXVzZWQgPSB0cnVlO1xuICAgICAgICB9LFxuXG4gICAgICAgIGVuZGVkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLnBsYXlpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMudGltZV9lbmRlZCA9IG5ldyBEYXRlKCkudmFsdWVPZigpO1xuICAgICAgICAgICAgdGhpcy50aW1lX3BsYXllZCA9ICh0aGlzLnRpbWVfZW5kZWQgLSB0aGlzLnRpbWVfc3RhcnRlZCkgLyAxMDAwO1xuICAgICAgICAgICAgdGhpcy50aW1lX29mZnNldCArPSB0aGlzLnRpbWVfcGxheWVkO1xuXG4gICAgICAgICAgICBpZiAodGhpcy50aW1lX29mZnNldCA+PSB0aGlzLmVuZCB8fCB0aGlzLmVuZCAtIHRoaXMudGltZV9vZmZzZXQgPCAwLjAxNSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2VuZGVkKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jbGVhcigpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMubG9vcCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvb3AtLTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIF9lbmRlZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGNvbmZpZyA9IHtcbiAgICAgICAgICAgICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICAgICAgICAgICAgYWxpYXM6IHRoaXMuYWxpYXMsXG4gICAgICAgICAgICAgICAgcGFydDogdGhpcy5zcHJpdGVfcGFydCxcbiAgICAgICAgICAgICAgICBzdGFydDogdGhpcy5zdGFydCxcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogdGhpcy5lbmRcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGlmICh0aGlzLmVuZGVkX2NhbGxiYWNrICYmIHR5cGVvZiB0aGlzLmVuZGVkX2NhbGxiYWNrID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmVuZGVkX2NhbGxiYWNrLmNhbGwodGhpcy5zY29wZSwgY29uZmlnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBjbGVhcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy50aW1lX3BsYXllZCA9IDA7XG4gICAgICAgICAgICB0aGlzLnRpbWVfb2Zmc2V0ID0gMDtcbiAgICAgICAgICAgIHRoaXMucGF1c2VkID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnBsYXlpbmcgPSBmYWxzZTtcbiAgICAgICAgfSxcblxuICAgICAgICBzZXRWb2x1bWU6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLnZvbHVtZSA9IG9wdGlvbnMudm9sdW1lO1xuXG4gICAgICAgICAgICBpZiAodGhpcy5nYWluKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nYWluLmdhaW4udmFsdWUgPSB0aGlzLnZvbHVtZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBpZiAoYXVkaW8pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuXG5cbiAgICAvKipcbiAgICAgKiBGYWxsYmFjayBmb3IgSFRNTDUgYXVkaW9cbiAgICAgKiAtIGZvciBub3Qgc28gbW9kZXJuIGJyb3dzZXJzXG4gICAgICovXG5cbiAgICB2YXIgY2hlY2tTdXBwb3J0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc291bmQgPSBuZXcgQXVkaW8oKSxcbiAgICAgICAgICAgIGNhbl9wbGF5X21wMyA9IHNvdW5kLmNhblBsYXlUeXBlKCdhdWRpby9tcGVnJyksXG4gICAgICAgICAgICBjYW5fcGxheV9vZ2cgPSBzb3VuZC5jYW5QbGF5VHlwZSgnYXVkaW8vb2dnJyksXG4gICAgICAgICAgICBjYW5fcGxheV9hYWMgPSBzb3VuZC5jYW5QbGF5VHlwZSgnYXVkaW8vbXA0OyBjb2RlY3M9XCJtcDRhLjQwLjJcIicpLFxuICAgICAgICAgICAgaXRlbSwgaTtcblxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgc2V0dGluZ3Muc3VwcG9ydGVkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpdGVtID0gc2V0dGluZ3Muc3VwcG9ydGVkW2ldO1xuXG4gICAgICAgICAgICBpZiAoIWNhbl9wbGF5X21wMyAmJiBpdGVtID09PSBcIm1wM1wiKSB7XG4gICAgICAgICAgICAgICAgc2V0dGluZ3Muc3VwcG9ydGVkLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCFjYW5fcGxheV9vZ2cgJiYgaXRlbSA9PT0gXCJvZ2dcIikge1xuICAgICAgICAgICAgICAgIHNldHRpbmdzLnN1cHBvcnRlZC5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghY2FuX3BsYXlfYWFjICYmIGl0ZW0gPT09IFwiYWFjXCIpIHtcbiAgICAgICAgICAgICAgICBzZXR0aW5ncy5zdXBwb3J0ZWQuc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIWNhbl9wbGF5X2FhYyAmJiBpdGVtID09PSBcIm1wNFwiKSB7XG4gICAgICAgICAgICAgICAgc2V0dGluZ3Muc3VwcG9ydGVkLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHNvdW5kID0gbnVsbDtcbiAgICB9O1xuICAgIGNoZWNrU3VwcG9ydCgpO1xuXG5cblxuICAgIFNvdW5kLnByb3RvdHlwZSA9IHtcbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgZXh0ZW5kKG9wdGlvbnMsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuaW5pdGVkID0gdHJ1ZTtcblxuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5wcmVsb2FkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgZGVzdHJveTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHN0cmVhbTtcblxuICAgICAgICAgICAgZm9yIChpIGluIHRoaXMuc3RyZWFtcykge1xuICAgICAgICAgICAgICAgIHN0cmVhbSA9IHRoaXMuc3RyZWFtc1tpXTtcblxuICAgICAgICAgICAgICAgIGlmIChzdHJlYW0pIHtcbiAgICAgICAgICAgICAgICAgICAgc3RyZWFtLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICAgICAgc3RyZWFtID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnN0cmVhbXMgPSB7fTtcbiAgICAgICAgICAgIHRoaXMubG9hZGVkID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmluaXRlZCA9IGZhbHNlO1xuICAgICAgICB9LFxuXG4gICAgICAgIGxvYWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBwYXJ0O1xuXG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMucHJlbG9hZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMuX3JlYWR5ID0gdGhpcy5yZWFkeTtcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5fc2NvcGUgPSB0aGlzO1xuXG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNwcml0ZSkge1xuXG4gICAgICAgICAgICAgICAgZm9yIChpIGluIHRoaXMub3B0aW9ucy5zcHJpdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFydCA9IHRoaXMub3B0aW9ucy5zcHJpdGVbaV07XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLnN0YXJ0ID0gcGFydFswXTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLmVuZCA9IHBhcnRbMV07XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdHJlYW1zW2ldID0gbmV3IFN0cmVhbSh0aGlzLm9wdGlvbnMsIGkpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgIHRoaXMuc3RyZWFtc1swXSA9IG5ldyBTdHJlYW0odGhpcy5vcHRpb25zKTtcblxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIHJlYWR5OiBmdW5jdGlvbiAoZHVyYXRpb24pIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmxvYWRlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5sb2FkZWQgPSB0cnVlO1xuXG4gICAgICAgICAgICB2YXIgY29uZmlnID0ge1xuICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMub3B0aW9ucy5uYW1lLFxuICAgICAgICAgICAgICAgIGFsaWFzOiB0aGlzLm9wdGlvbnMuYWxpYXMsXG4gICAgICAgICAgICAgICAgZXh0OiB0aGlzLm9wdGlvbnMuc3VwcG9ydGVkW3RoaXMuZXh0XSxcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogZHVyYXRpb25cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMucmVhZHlfY2FsbGJhY2sgJiYgdHlwZW9mIHRoaXMub3B0aW9ucy5yZWFkeV9jYWxsYmFjayA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLnJlYWR5X2NhbGxiYWNrLmNhbGwodGhpcy5vcHRpb25zLnNjb3BlLCBjb25maWcpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5hdXRvcGxheSkge1xuICAgICAgICAgICAgICAgIHRoaXMuYXV0b3BsYXkgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBwbGF5OiBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmluaXRlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZGVsZXRlIHRoaXMub3B0aW9ucy5wYXJ0O1xuXG4gICAgICAgICAgICBpZiAob3B0aW9ucykge1xuICAgICAgICAgICAgICAgIGV4dGVuZChvcHRpb25zLCB0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zb2xlLmxvZygxKTtcbiAgICAgICAgICAgIGlmICghdGhpcy5sb2FkZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMub3B0aW9ucy5wcmVsb2FkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYXV0b3BsYXkgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvYWQoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmF1dG9wbGF5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuc3ByaXRlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5wYXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RyZWFtc1t0aGlzLm9wdGlvbnMucGFydF0ucGxheSh0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSBpbiB0aGlzLm9wdGlvbnMuc3ByaXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0cmVhbXNbaV0ucGxheSh0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnN0cmVhbXNbMF0ucGxheSh0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIHN0b3A6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuaW5pdGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNwcml0ZSkge1xuXG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdHJlYW1zW29wdGlvbnMucGFydF0uc3RvcCgpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSBpbiB0aGlzLm9wdGlvbnMuc3ByaXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0cmVhbXNbaV0uc3RvcCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuc3RyZWFtc1swXS5zdG9wKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgcGF1c2U6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuaW5pdGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNwcml0ZSkge1xuXG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdHJlYW1zW29wdGlvbnMucGFydF0ucGF1c2UoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGkgaW4gdGhpcy5vcHRpb25zLnNwcml0ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdHJlYW1zW2ldLnBhdXNlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zdHJlYW1zWzBdLnBhdXNlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgdm9sdW1lOiBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgdmFyIHN0cmVhbTtcblxuICAgICAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBleHRlbmQob3B0aW9ucywgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNwcml0ZSkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMucGFydCkge1xuICAgICAgICAgICAgICAgICAgICBzdHJlYW0gPSB0aGlzLnN0cmVhbXNbdGhpcy5vcHRpb25zLnBhcnRdO1xuICAgICAgICAgICAgICAgICAgICBzdHJlYW0gJiYgc3RyZWFtLnNldFZvbHVtZSh0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSBpbiB0aGlzLm9wdGlvbnMuc3ByaXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJlYW0gPSB0aGlzLnN0cmVhbXNbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJlYW0gJiYgc3RyZWFtLnNldFZvbHVtZSh0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdHJlYW0gPSB0aGlzLnN0cmVhbXNbMF07XG4gICAgICAgICAgICAgICAgc3RyZWFtICYmIHN0cmVhbS5zZXRWb2x1bWUodGhpcy5vcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cblxuXG4gICAgU3RyZWFtID0gZnVuY3Rpb24gKG9wdGlvbnMsIHNwcml0ZV9wYXJ0KSB7XG4gICAgICAgIHRoaXMubmFtZSA9IG9wdGlvbnMubmFtZTtcbiAgICAgICAgdGhpcy5hbGlhcyA9IG9wdGlvbnMuYWxpYXM7XG4gICAgICAgIHRoaXMuc3ByaXRlX3BhcnQgPSBzcHJpdGVfcGFydDtcblxuICAgICAgICB0aGlzLm11bHRpcGxheSA9IG9wdGlvbnMubXVsdGlwbGF5O1xuICAgICAgICB0aGlzLnZvbHVtZSA9IG9wdGlvbnMudm9sdW1lO1xuICAgICAgICB0aGlzLnByZWxvYWQgPSBvcHRpb25zLnByZWxvYWQ7XG4gICAgICAgIHRoaXMucGF0aCA9IHNldHRpbmdzLnBhdGg7XG4gICAgICAgIHRoaXMuc3RhcnQgPSBvcHRpb25zLnN0YXJ0IHx8IDA7XG4gICAgICAgIHRoaXMuZW5kID0gb3B0aW9ucy5lbmQgfHwgMDtcbiAgICAgICAgdGhpcy5zY29wZSA9IG9wdGlvbnMuc2NvcGU7XG4gICAgICAgIHRoaXMuZW5kZWRfY2FsbGJhY2sgPSBvcHRpb25zLmVuZGVkX2NhbGxiYWNrO1xuXG4gICAgICAgIHRoaXMuX3Njb3BlID0gb3B0aW9ucy5fc2NvcGU7XG4gICAgICAgIHRoaXMuX3JlYWR5ID0gb3B0aW9ucy5fcmVhZHk7XG5cbiAgICAgICAgdGhpcy5zZXRMb29wKG9wdGlvbnMpO1xuXG4gICAgICAgIHRoaXMuc291bmQgPSBudWxsO1xuICAgICAgICB0aGlzLnVybCA9IG51bGw7XG4gICAgICAgIHRoaXMubG9hZGVkID0gZmFsc2U7XG5cbiAgICAgICAgdGhpcy5zdGFydF90aW1lID0gMDtcbiAgICAgICAgdGhpcy5wYXVzZWRfdGltZSA9IDA7XG4gICAgICAgIHRoaXMucGxheWVkX3RpbWUgPSAwO1xuXG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgIH07XG5cbiAgICBTdHJlYW0ucHJvdG90eXBlID0ge1xuICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLnNvdW5kID0gbmV3IEF1ZGlvKCk7XG4gICAgICAgICAgICB0aGlzLnNvdW5kLnZvbHVtZSA9IHRoaXMudm9sdW1lO1xuXG4gICAgICAgICAgICB0aGlzLmNyZWF0ZVVybCgpO1xuXG4gICAgICAgICAgICB0aGlzLnNvdW5kLmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLCB0aGlzLmVuZGVkLmJpbmQodGhpcyksIGZhbHNlKTtcbiAgICAgICAgICAgIHRoaXMuc291bmQuYWRkRXZlbnRMaXN0ZW5lcihcImNhbnBsYXl0aHJvdWdoXCIsIHRoaXMuY2FuX3BsYXlfdGhyb3VnaC5iaW5kKHRoaXMpLCBmYWxzZSk7XG4gICAgICAgICAgICB0aGlzLnNvdW5kLmFkZEV2ZW50TGlzdGVuZXIoXCJ0aW1ldXBkYXRlXCIsIHRoaXMuX3VwZGF0ZS5iaW5kKHRoaXMpLCBmYWxzZSk7XG5cbiAgICAgICAgICAgIHRoaXMubG9hZCgpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMuc3RvcCgpO1xuXG4gICAgICAgICAgICB0aGlzLnNvdW5kLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLCB0aGlzLmVuZGVkLmJpbmQodGhpcyksIGZhbHNlKTtcbiAgICAgICAgICAgIHRoaXMuc291bmQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNhbnBsYXl0aHJvdWdoXCIsIHRoaXMuY2FuX3BsYXlfdGhyb3VnaC5iaW5kKHRoaXMpLCBmYWxzZSk7XG4gICAgICAgICAgICB0aGlzLnNvdW5kLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0aW1ldXBkYXRlXCIsIHRoaXMuX3VwZGF0ZS5iaW5kKHRoaXMpLCBmYWxzZSk7XG5cbiAgICAgICAgICAgIHRoaXMuc291bmQgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5sb2FkZWQgPSBmYWxzZTtcbiAgICAgICAgfSxcblxuICAgICAgICBjcmVhdGVVcmw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciByYW5kID0gbmV3IERhdGUoKS52YWx1ZU9mKCk7XG4gICAgICAgICAgICB0aGlzLnVybCA9IHRoaXMucGF0aCArIGVuY29kZVVSSUNvbXBvbmVudCh0aGlzLm5hbWUpICsgXCIuXCIgKyBzZXR0aW5ncy5zdXBwb3J0ZWRbMF0gKyBcIj9cIiArIHJhbmQ7XG4gICAgICAgIH0sXG5cbiAgICAgICAgY2FuX3BsYXlfdGhyb3VnaDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJlbG9hZCkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVhZHkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBsb2FkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLnNvdW5kLnNyYyA9IHRoaXMudXJsO1xuICAgICAgICAgICAgdGhpcy5zb3VuZC5wcmVsb2FkID0gdGhpcy5wcmVsb2FkID8gXCJhdXRvXCIgOiBcIm5vbmVcIjtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZWxvYWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNvdW5kLmxvYWQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBzZXRMb29wOiBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMubG9vcCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHRoaXMubG9vcCA9IDk5OTk5OTk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmxvb3AgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvb3AgPSArb3B0aW9ucy5sb29wIC0gMTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb29wID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgdXBkYXRlOiBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgdGhpcy5zZXRMb29wKG9wdGlvbnMpO1xuXG4gICAgICAgICAgICBpZiAoXCJ2b2x1bWVcIiBpbiBvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgdGhpcy52b2x1bWUgPSBvcHRpb25zLnZvbHVtZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICByZWFkeTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMubG9hZGVkIHx8ICF0aGlzLnNvdW5kKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmxvYWRlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLl9yZWFkeS5jYWxsKHRoaXMuX3Njb3BlLCB0aGlzLnNvdW5kLmR1cmF0aW9uKTtcblxuICAgICAgICAgICAgaWYgKCF0aGlzLmVuZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZW5kID0gdGhpcy5zb3VuZC5kdXJhdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBwbGF5OiBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZShvcHRpb25zKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCF0aGlzLm11bHRpcGxheSAmJiB0aGlzLnBsYXlpbmcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuX3BsYXkoKTtcbiAgICAgICAgfSxcblxuICAgICAgICBfcGxheTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMucGF1c2VkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXVzZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zb3VuZC5jdXJyZW50VGltZSA9IHRoaXMuc3RhcnQ7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5wbGF5aW5nID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuc3RhcnRfdGltZSA9IG5ldyBEYXRlKCkudmFsdWVPZigpO1xuICAgICAgICAgICAgdGhpcy5zb3VuZC52b2x1bWUgPSB0aGlzLnZvbHVtZTtcbiAgICAgICAgICAgIHRoaXMuc291bmQucGxheSgpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHN0b3A6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5wbGF5aW5nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLnBsYXlpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMucGF1c2VkID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnNvdW5kLnBhdXNlKCk7XG4gICAgICAgICAgICB0aGlzLmNsZWFyKCk7XG5cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zb3VuZC5jdXJyZW50VGltZSA9IHRoaXMuc3RhcnQ7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICB9LFxuXG4gICAgICAgIHBhdXNlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wYXVzZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wbGF5KCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMucGxheWluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMucGF1c2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLnNvdW5kLnBhdXNlKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXVzZWRfdGltZSA9IG5ldyBEYXRlKCkudmFsdWVPZigpO1xuICAgICAgICAgICAgICAgIHRoaXMucGxheWVkX3RpbWUgKz0gdGhpcy5wYXVzZWRfdGltZSAtIHRoaXMuc3RhcnRfdGltZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBfdXBkYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuc3RhcnRfdGltZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGN1cnJlbnRfdGltZSA9IG5ldyBEYXRlKCkudmFsdWVPZigpLFxuICAgICAgICAgICAgICAgIHBsYXllZF90aW1lID0gY3VycmVudF90aW1lIC0gdGhpcy5zdGFydF90aW1lLFxuICAgICAgICAgICAgICAgIHBsYXllZCA9ICh0aGlzLnBsYXllZF90aW1lICsgcGxheWVkX3RpbWUpIC8gMTAwMDtcblxuICAgICAgICAgICAgaWYgKHBsYXllZCA+PSB0aGlzLmVuZCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnBsYXlpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2VuZGVkKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGVuZGVkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wbGF5aW5nKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zdG9wKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fZW5kZWQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBfZW5kZWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMucGxheWluZyA9IGZhbHNlO1xuXG4gICAgICAgICAgICB2YXIgY29uZmlnID0ge1xuICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgICAgICAgICAgICBhbGlhczogdGhpcy5hbGlhcyxcbiAgICAgICAgICAgICAgICBwYXJ0OiB0aGlzLnNwcml0ZV9wYXJ0LFxuICAgICAgICAgICAgICAgIHN0YXJ0OiB0aGlzLnN0YXJ0LFxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmVuZFxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgaWYgKHRoaXMuZW5kZWRfY2FsbGJhY2sgJiYgdHlwZW9mIHRoaXMuZW5kZWRfY2FsbGJhY2sgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHRoaXMuZW5kZWRfY2FsbGJhY2suY2FsbCh0aGlzLnNjb3BlLCBjb25maWcpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5sb29wKSB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCh0aGlzLmxvb3Blci5iaW5kKHRoaXMpLCAxNSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgbG9vcGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLmxvb3AtLTtcbiAgICAgICAgICAgIHRoaXMucGxheSgpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNsZWFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXJ0X3RpbWUgPSAwO1xuICAgICAgICAgICAgdGhpcy5wbGF5ZWRfdGltZSA9IDA7XG4gICAgICAgICAgICB0aGlzLnBhdXNlZF90aW1lID0gMDtcbiAgICAgICAgfSxcblxuICAgICAgICBzZXRWb2x1bWU6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLnZvbHVtZSA9IG9wdGlvbnMudm9sdW1lO1xuXG4gICAgICAgICAgICBpZiAodGhpcy5zb3VuZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuc291bmQudm9sdW1lID0gdGhpcy52b2x1bWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG59ICh3aW5kb3csIG5hdmlnYXRvciwgd2luZG93LmpRdWVyeSB8fCB3aW5kb3cuJCkpO1xuIiwiaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb3VzZSB7XG5cbiAgc3RhdGljIG1vdXNlb3ZlcihkLCBsaW5rRGF0YSwgbGlua0xpbmUsIG5vZGVDaXJjbGUsIG5vZGVUZXh0KSB7XG4gICAgLy8gY29uc29sZS5sb2coJ21vdXNlb3ZlcicpO1xuICAgIGNvbnN0IG5vZGVJbmRleCA9IGQuaW5kZXg7XG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBsaW5rRGF0YS5sZW5ndGg7IGwgPiBpOyBpKyspIHtcbiAgICAgIGlmIChsaW5rRGF0YVtpXS5zb3VyY2UuaW5kZXggPT09IG5vZGVJbmRleCB8fFxuICAgICAgICAgIGxpbmtEYXRhW2ldLnRhcmdldC5pbmRleCA9PT0gbm9kZUluZGV4KSB7XG5cbiAgICAgICAgY29uc3QgbGluZUluZGV4ID0gaTtcbiAgICAgICAgY29uc3Qgbm9kZVNvdXJjZSA9IGxpbmtEYXRhW2xpbmVJbmRleF0uc291cmNlLmluZGV4O1xuICAgICAgICBjb25zdCBub2RlVGFyZ2V0ID0gbGlua0RhdGFbbGluZUluZGV4XS50YXJnZXQuaW5kZXg7XG5cbiAgICAgICAgLy8gbGluZVxuICAgICAgICBjb25zdCBzZWxlY3RMaW5lID0gbGlua0xpbmVbJ19ncm91cHMnXVswXVtsaW5lSW5kZXhdO1xuICAgICAgICBzZWxlY3RMaW5lLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnbGluZUNvbG9yJyk7XG4gICAgICAgIC8vIG5vZGVcbiAgICAgICAgbm9kZUNpcmNsZVsnX2dyb3VwcyddWzBdW25vZGVTb3VyY2VdLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibm9kZUNvbG9yXCIpO1xuICAgICAgICBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1bbm9kZVRhcmdldF0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJub2RlQ29sb3JcIik7XG4gICAgICAgIC8vIHRleHRcbiAgICAgICAgbm9kZVRleHRbJ19ncm91cHMnXVswXVtub2RlU291cmNlXS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImxpbmtlZE5vZGVUZXh0XCIpO1xuICAgICAgICBub2RlVGV4dFsnX2dyb3VwcyddWzBdW25vZGVUYXJnZXRdLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibGlua2VkTm9kZVRleHRcIik7XG4gICAgICB9XG4gICAgfVxuICAgIC8vIHNlbGVjdE5vZGVcbiAgICBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1bbm9kZUluZGV4XS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcIm5vZGVDb2xvclwiKTtcbiAgICAvLyBzZWxlY3ROb2RlVGV4dFxuICAgIG5vZGVUZXh0WydfZ3JvdXBzJ11bMF1bbm9kZUluZGV4XS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImxpbmtlZE5vZGVUZXh0XCIpO1xuICB9XG5cblxuICBzdGF0aWMgbW91c2VvdXQoZCwgbGlua0RhdGEsIGxpbmtMaW5lLCBub2RlQ2lyY2xlLCBub2RlVGV4dCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdtb3VzZW91dCcpO1xuICAgIGNvbnN0IG5vZGVJbmRleCA9IGQuaW5kZXg7XG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBsaW5rRGF0YS5sZW5ndGg7IGwgPiBpOyBpKyspIHtcbiAgICAgIGlmIChsaW5rRGF0YVtpXS5zb3VyY2UuaW5kZXggPT09IG5vZGVJbmRleCB8fFxuICAgICAgICAgIGxpbmtEYXRhW2ldLnRhcmdldC5pbmRleCA9PT0gbm9kZUluZGV4KSB7XG5cbiAgICAgICAgY29uc3QgbGluZUluZGV4ID0gaTtcbiAgICAgICAgY29uc3Qgbm9kZVNvdXJjZSA9IGxpbmtEYXRhW2xpbmVJbmRleF0uc291cmNlLmluZGV4O1xuICAgICAgICBjb25zdCBub2RlVGFyZ2V0ID0gbGlua0RhdGFbbGluZUluZGV4XS50YXJnZXQuaW5kZXg7XG5cbiAgICAgICAgLy8gbGluZVxuICAgICAgICBjb25zdCBzZWxlY3RMaW5lID0gbGlua0xpbmVbJ19ncm91cHMnXVswXVtsaW5lSW5kZXhdO1xuICAgICAgICBzZWxlY3RMaW5lLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnbGluZUNvbG9yRGVmYXVsdCcpO1xuICAgICAgICAvLyBub2RlXG4gICAgICAgIG5vZGVDaXJjbGVbJ19ncm91cHMnXVswXVtub2RlU291cmNlXS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcIm5vZGVDb2xvckRlZmF1bHRcIik7XG4gICAgICAgIG5vZGVDaXJjbGVbJ19ncm91cHMnXVswXVtub2RlVGFyZ2V0XS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcIm5vZGVDb2xvckRlZmF1bHRcIik7XG4gICAgICAgIC8vIHRleHRcbiAgICAgICAgbm9kZVRleHRbJ19ncm91cHMnXVswXVtub2RlU291cmNlXS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcInRleHRTaXplRGVmYXVsdFwiKTtcbiAgICAgICAgbm9kZVRleHRbJ19ncm91cHMnXVswXVtub2RlVGFyZ2V0XS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcInRleHRTaXplRGVmYXVsdFwiKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gc2VsZWN0Tm9kZVxuICAgIG5vZGVDaXJjbGVbJ19ncm91cHMnXVswXVtub2RlSW5kZXhdLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibm9kZUNvbG9yRGVmYXVsdFwiKTtcbiAgICAvLyBzZWxlY3ROb2RlVGV4dFxuICAgIG5vZGVUZXh0WydfZ3JvdXBzJ11bMF1bbm9kZUluZGV4XS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcInRleHRTaXplRGVmYXVsdFwiKTtcbiAgfVxuXG5cbiAgc3RhdGljIG1vdXNlZG93bihkLCBsaW5rRGF0YSwgbGlua0xpbmUsIG5vZGVDaXJjbGUsIG5vZGVUZXh0KSB7XG4gICAgLy8gY29uc29sZS5sb2coJ21vdXNlZG93bicpO1xuICAgIC8vIGF0IGZpcnN0LCBtYWtlIGFsbCBub2RlICYgbGluZSBmYWRlXG4gICAgZDMuc2VsZWN0QWxsKG5vZGVDaXJjbGUpWydfZ3JvdXBzJ11bMF0uYXR0cihcImNsYXNzXCIsIFwibm9kZUNvbG9yRmFkZVwiKTtcbiAgICBkMy5zZWxlY3RBbGwobGlua0xpbmUpWydfZ3JvdXBzJ11bMF0uYXR0cihcImNsYXNzXCIsIFwibGluZUNvbG9yRmFkZVwiKTtcbiAgICBkMy5zZWxlY3RBbGwobm9kZVRleHQpWydfZ3JvdXBzJ11bMF0uYXR0cihcImNsYXNzXCIsIFwibm9kZVRleHRGYWRlXCIpO1xuXG4gICAgY29uc3Qgbm9kZUluZGV4ID0gZC5pbmRleDtcbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IGxpbmtEYXRhLmxlbmd0aDsgbCA+IGk7IGkrKykge1xuICAgICAgaWYgKGxpbmtEYXRhW2ldLnNvdXJjZS5pbmRleCA9PT0gbm9kZUluZGV4IHx8XG4gICAgICAgICAgbGlua0RhdGFbaV0udGFyZ2V0LmluZGV4ID09PSBub2RlSW5kZXgpIHtcblxuICAgICAgICBjb25zdCBsaW5lSW5kZXggPSBpO1xuICAgICAgICBjb25zdCBub2RlU291cmNlID0gbGlua0RhdGFbbGluZUluZGV4XS5zb3VyY2UuaW5kZXg7XG4gICAgICAgIGNvbnN0IG5vZGVUYXJnZXQgPSBsaW5rRGF0YVtsaW5lSW5kZXhdLnRhcmdldC5pbmRleDtcblxuICAgICAgICAvLyBsaW5lXG4gICAgICAgIGNvbnN0IHNlbGVjdExpbmUgPSBsaW5rTGluZVsnX2dyb3VwcyddWzBdW2xpbmVJbmRleF07XG4gICAgICAgIHNlbGVjdExpbmUuc2V0QXR0cmlidXRlKCdjbGFzcycsICdsaW5lQ29sb3InKTtcbiAgICAgICAgLy8gbm9kZVxuICAgICAgICBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1bbm9kZVNvdXJjZV0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJub2RlQ29sb3JcIik7XG4gICAgICAgIG5vZGVDaXJjbGVbJ19ncm91cHMnXVswXVtub2RlVGFyZ2V0XS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcIm5vZGVDb2xvclwiKTtcbiAgICAgICAgLy8gdGV4dFxuICAgICAgICBub2RlVGV4dFsnX2dyb3VwcyddWzBdW25vZGVTb3VyY2VdLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibGlua2VkTm9kZVRleHRcIik7XG4gICAgICAgIG5vZGVUZXh0WydfZ3JvdXBzJ11bMF1bbm9kZVRhcmdldF0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJsaW5rZWROb2RlVGV4dFwiKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gc2VsZWN0Tm9kZVxuICAgIG5vZGVDaXJjbGVbJ19ncm91cHMnXVswXVtub2RlSW5kZXhdLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibm9kZUNvbG9yXCIpO1xuICAgIC8vIHNlbGVjdE5vZGVUZXh0XG4gICAgbm9kZVRleHRbJ19ncm91cHMnXVswXVtub2RlSW5kZXhdLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibGlua2VkTm9kZVRleHRcIik7XG4gIH1cblxuXG4gIHN0YXRpYyB0b3VjaFN0YXJ0KGQsIGxpbmtEYXRhLCBsaW5rTGluZSwgbm9kZUNpcmNsZSwgbm9kZVRleHQpIHtcbiAgICAvLyBhdCBmaXJzdCwgbWFrZSBhbGwgbm9kZSAmIGxpbmUgZmFkZVxuICAgIGQzLnNlbGVjdEFsbChub2RlQ2lyY2xlKVsnX2dyb3VwcyddWzBdLmF0dHIoXCJjbGFzc1wiLCBcIm5vZGVDb2xvckZhZGVTcFwiKTtcbiAgICBkMy5zZWxlY3RBbGwobGlua0xpbmUpWydfZ3JvdXBzJ11bMF0uYXR0cihcImNsYXNzXCIsIFwibGluZUNvbG9yRmFkZVwiKTtcbiAgICBkMy5zZWxlY3RBbGwobm9kZVRleHQpWydfZ3JvdXBzJ11bMF0uYXR0cihcImNsYXNzXCIsIFwibm9kZVRleHRGYWRlXCIpO1xuXG4gICAgY29uc3Qgbm9kZUluZGV4ID0gZC5pbmRleDtcbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IGxpbmtEYXRhLmxlbmd0aDsgbCA+IGk7IGkrKykge1xuICAgICAgaWYgKGxpbmtEYXRhW2ldLnNvdXJjZS5pbmRleCA9PT0gbm9kZUluZGV4IHx8XG4gICAgICAgICAgbGlua0RhdGFbaV0udGFyZ2V0LmluZGV4ID09PSBub2RlSW5kZXgpIHtcblxuICAgICAgICBjb25zdCBsaW5lSW5kZXggPSBpO1xuICAgICAgICBjb25zdCBub2RlU291cmNlID0gbGlua0RhdGFbbGluZUluZGV4XS5zb3VyY2UuaW5kZXg7XG4gICAgICAgIGNvbnN0IG5vZGVUYXJnZXQgPSBsaW5rRGF0YVtsaW5lSW5kZXhdLnRhcmdldC5pbmRleDtcblxuICAgICAgICAvLyBsaW5lXG4gICAgICAgIGNvbnN0IHNlbGVjdExpbmUgPSBsaW5rTGluZVsnX2dyb3VwcyddWzBdW2xpbmVJbmRleF07XG4gICAgICAgIHNlbGVjdExpbmUuc2V0QXR0cmlidXRlKCdjbGFzcycsICdsaW5lQ29sb3InKTtcbiAgICAgICAgLy8gbm9kZVxuICAgICAgICBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1bbm9kZVNvdXJjZV0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJub2RlQ29sb3JcIilcbiAgICAgICAgbm9kZUNpcmNsZVsnX2dyb3VwcyddWzBdW25vZGVUYXJnZXRdLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibm9kZUNvbG9yXCIpO1xuICAgICAgICAvLyB0ZXh0XG4gICAgICAgIG5vZGVUZXh0WydfZ3JvdXBzJ11bMF1bbm9kZVNvdXJjZV0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJsaW5rZWROb2RlVGV4dFwiKTtcbiAgICAgICAgbm9kZVRleHRbJ19ncm91cHMnXVswXVtub2RlVGFyZ2V0XS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImxpbmtlZE5vZGVUZXh0XCIpO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBzZWxlY3ROb2RlXG4gICAgbm9kZUNpcmNsZVsnX2dyb3VwcyddWzBdW25vZGVJbmRleF0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJub2RlQ29sb3JcIik7XG4gICAgLy8gc2VsZWN0Tm9kZVRleHRcbiAgICBub2RlVGV4dFsnX2dyb3VwcyddWzBdW25vZGVJbmRleF0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJsaW5rZWROb2RlVGV4dFwiKTtcbiAgfVxuXG5cbiAgc3RhdGljIG1vdXNldXAoZCwgbGlua0RhdGEsIGxpbmtMaW5lLCBub2RlQ2lyY2xlLCBub2RlVGV4dCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdtb3VzZXVwJyk7XG4gICAgZDMuc2VsZWN0QWxsKG5vZGVDaXJjbGUpWydfZ3JvdXBzJ11bMF0uYXR0cihcImNsYXNzXCIsIFwibm9kZVJldHVybkZhZGVcIik7XG4gICAgZDMuc2VsZWN0QWxsKGxpbmtMaW5lKVsnX2dyb3VwcyddWzBdLmF0dHIoXCJjbGFzc1wiLCBcImxpbmVSZXR1cm5GYWRlXCIpO1xuICAgIGQzLnNlbGVjdEFsbChub2RlVGV4dClbJ19ncm91cHMnXVswXS5hdHRyKFwiY2xhc3NcIiwgXCJub2RlVGV4dFJldHVybkZhZGVcIik7XG5cbiAgICBjb25zdCBub2RlSW5kZXggPSBkLmluZGV4O1xuICAgIGZvciAobGV0IGkgPSAwLCBsID0gbGlua0RhdGEubGVuZ3RoOyBsID4gaTsgaSsrKSB7XG4gICAgICBpZiAobGlua0RhdGFbaV0uc291cmNlLmluZGV4ID09PSBub2RlSW5kZXggfHxcbiAgICAgICAgICBsaW5rRGF0YVtpXS50YXJnZXQuaW5kZXggPT09IG5vZGVJbmRleCkge1xuXG4gICAgICAgIGNvbnN0IGxpbmVJbmRleCA9IGk7XG4gICAgICAgIGNvbnN0IG5vZGVTb3VyY2UgPSBsaW5rRGF0YVtsaW5lSW5kZXhdLnNvdXJjZS5pbmRleDtcbiAgICAgICAgY29uc3Qgbm9kZVRhcmdldCA9IGxpbmtEYXRhW2xpbmVJbmRleF0udGFyZ2V0LmluZGV4O1xuXG4gICAgICAgIC8vIGxpbmVcbiAgICAgICAgY29uc3Qgc2VsZWN0TGluZSA9IGxpbmtMaW5lWydfZ3JvdXBzJ11bMF1bbGluZUluZGV4XTtcbiAgICAgICAgc2VsZWN0TGluZS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2xpbmVDb2xvcicpO1xuICAgICAgICAvLyBub2RlXG4gICAgICAgIG5vZGVDaXJjbGVbJ19ncm91cHMnXVswXVtub2RlU291cmNlXS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcIm5vZGVDb2xvclwiKTtcbiAgICAgICAgbm9kZUNpcmNsZVsnX2dyb3VwcyddWzBdW25vZGVUYXJnZXRdLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibm9kZUNvbG9yXCIpO1xuXG4gICAgICAgIG5vZGVUZXh0WydfZ3JvdXBzJ11bMF1bbm9kZVNvdXJjZV0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJsaW5rZWROb2RlVGV4dFwiKTtcbiAgICAgICAgbm9kZVRleHRbJ19ncm91cHMnXVswXVtub2RlVGFyZ2V0XS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImxpbmtlZE5vZGVUZXh0XCIpO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBzZWxlY3ROb2RlXG4gICAgbm9kZUNpcmNsZVsnX2dyb3VwcyddWzBdW25vZGVJbmRleF0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJub2RlQ29sb3JcIik7XG4gICAgLy8gc2VsZWN0Tm9kZVRleHRcbiAgICBub2RlVGV4dFsnX2dyb3VwcyddWzBdW25vZGVJbmRleF0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJsaW5rZWROb2RlVGV4dFwiKTtcbiAgfVxuXG4gIHN0YXRpYyByZXNldChsaW5rRGF0YSwgbGlua0xpbmUsIG5vZGVDaXJjbGUsIG5vZGVUZXh0KSB7XG4gICAgZDMuc2VsZWN0QWxsKG5vZGVDaXJjbGUpWydfZ3JvdXBzJ11bMF0uYXR0cihcImNsYXNzXCIsIFwibm9kZVJldHVybkZhZGVcIik7XG4gICAgZDMuc2VsZWN0QWxsKGxpbmtMaW5lKVsnX2dyb3VwcyddWzBdLmF0dHIoXCJjbGFzc1wiLCBcImxpbmVSZXR1cm5GYWRlXCIpO1xuICAgIGQzLnNlbGVjdEFsbChub2RlVGV4dClbJ19ncm91cHMnXVswXS5hdHRyKFwiY2xhc3NcIiwgXCJub2RlVGV4dFJldHVybkZhZGVcIik7XG5cbiAgICBjb25zb2xlLmxvZygncmVzZXQnKVxuICB9XG5cblxuICBzdGF0aWMgY3Vyc29yKHR5cGUsIGJvZHksIGNpcmNsZSkge1xuICAgIGxldCBncmFiVHlwZUM7XG4gICAgbGV0IGdyYWJUeXBlQjtcbiAgICBpZiAodHlwZSA9PT0gJ2dyYWJiaW5nJykge1xuICAgICAgZ3JhYlR5cGVDID0gXCJncmFiYmluZ1wiO1xuICAgICAgZ3JhYlR5cGVCID0gXCJncmFiYmluZ1wiO1xuICAgIH0gZWxzZSB7XG4gICAgICBncmFiVHlwZUMgPSBcImdyYWJcIjtcbiAgICAgIGdyYWJUeXBlQiA9IFwiYXV0b1wiO1xuICAgIH1cblxuICAgIC8vZ3JhYmJpbmdcbiAgICBjaXJjbGUuc3R5bGUoXCJjdXJzb3JcIiwgXCItd2Via2l0LVwiICsgZ3JhYlR5cGVDKTtcbiAgICBjaXJjbGUuc3R5bGUoXCJjdXJzb3JcIiwgXCItbW96LVwiICsgZ3JhYlR5cGVDKTtcbiAgICBjaXJjbGUuc3R5bGUoXCJjdXJzb3JcIiwgZ3JhYlR5cGVDKTtcblxuICAgIGJvZHkuc3R5bGUoXCJjdXJzb3JcIiwgXCItd2Via2l0LVwiICsgZ3JhYlR5cGVCKTtcbiAgICBib2R5LnN0eWxlKFwiY3Vyc29yXCIsIFwiLW1vei1cIiArIGdyYWJUeXBlQik7XG4gICAgYm9keS5zdHlsZShcImN1cnNvclwiLCBncmFiVHlwZUIpO1xuICB9XG5cbn0iLCJpbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7XG5pbXBvcnQgJ2lvbi1zb3VuZCc7XG5cbmltcG9ydCBNb3VzZSBmcm9tICcuL01vdXNlJztcbmltcG9ydCBVcGRhdGUgZnJvbSAnLi9VcGRhdGUnXG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmV0d29yayB7XG4gIGNvbnN0cnVjdG9yKGZsYXZvckRhdGEsIHVtYW1pRGF0YSwgaXNTcCwgc3ZnSUQpIHtcbiAgICB0aGlzLmZsYXZvckRhdGEgPSBmbGF2b3JEYXRhO1xuICAgIHRoaXMudW1hbWlEYXRhID0gdW1hbWlEYXRhO1xuICAgIHRoaXMubGlua0RhdGEgPSB0aGlzLmZsYXZvckRhdGEubGlua3M7XG4gICAgdGhpcy5ub2RlRGF0YSA9IHRoaXMuZmxhdm9yRGF0YS5ub2RlcztcblxuICAgIHRoaXMud2lkdGggPSAxMDAwO1xuICAgIHRoaXMuaGVpZ2h0ID0gNjUwO1xuXG4gICAgdGhpcy5jZW50ZXJYID0gdGhpcy53aWR0aCAvIDIgKyAzMDtcbiAgICB0aGlzLmNlbnRlclkgPSB0aGlzLmhlaWdodCAvIDIgKyAxNTtcblxuICAgIHRoaXMuYm9keSA9IGQzLnNlbGVjdChcImJvZHlcIik7XG4gICAgdGhpcy5zdmcgPSBkMy5zZWxlY3Qoc3ZnSUQpO1xuICAgIHRoaXMuc2NhbGVSYXRpbyA9IDEuMDtcblxuICAgIHRoaXMuc3ZnXG4gICAgICAgIC5hdHRyKFwic3R5bGVcIiwgXCJvdXRsaW5lOiAxcHggc29saWQgI2ZmOGUxZTtcIilcbiAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCB0aGlzLndpZHRoIC8gdGhpcy5zY2FsZVJhdGlvKVxuICAgICAgICAuYXR0cihcImhlaWdodFwiLCB0aGlzLmhlaWdodCAvIHRoaXMuc2NhbGVSYXRpbylcbiAgICAgICAgLmF0dHIoXCJ2aWV3Qm94XCIsIFwiMCAwIDEwMDAgNjUwXCIpO1xuXG5cbiAgICB0aGlzLmxpbmsgPSAnJztcbiAgICB0aGlzLm5vZGUgPSAnJztcbiAgICB0aGlzLmxhYmVsID0gJyc7XG4gICAgdGhpcy5zaW11bGF0aW9uID0gZDMuZm9yY2VTaW11bGF0aW9uKCk7XG5cbiAgICB0aGlzLmxlZ2VuZCA9ICcnO1xuICAgIHRoaXMubGVnZW5kTmFtZSA9IFtcInBsYW50XCIsIFwiZnJ1aXRcIiwgXCJtZWF0XCIsIFwidmVnZXRhYmxlXCIsIFwiY2VyZWFsL2Nyb3BcIixcbiAgICAgIFwiYWxjb2hvbGljIGJldmVyYWdlXCIsIFwiaGVyYlwiLCBcImRhaXJ5XCIsIFwibnV0L3NlZWQvcHVsc2VcIiwgXCJzcGljZVwiLFxuICAgICAgXCJmaXNoL3NlYWZvb2RcIiwgXCJwbGFudCBkZXJpdmF0aXZlXCIsIFwiZmxvd2VyXCIsIFwiYW5pbWFsIHByb2R1Y3RcIl07XG5cbiAgICB0aGlzLmxlZ2VuZENvbG9yID0gW1wiIzBmZmYwZlwiLCBcIiNmYzc4M2ZcIiwgXCIjZmY0YzRjXCIsIFwiIzNjYjM3YVwiLCBcIiNlOGM1OWNcIixcbiAgICAgIFwiI2U3MzU1MlwiLCBcIiNhZDVkODhcIiwgXCIjZGI4MzBkXCIsIFwiIzk2NWQyMVwiLCBcIiMwMGFmY2NcIixcbiAgICAgIFwiIzQzNGRhMlwiLCBcIiNiM2U1MDBcIiwgXCIjZmYwMGFlXCIsIFwiI2ZmN2ZiZlwiXTtcblxuICAgIHRoaXMud2FsbE1hcmdpbiA9IDcuNTtcblxuXG4gICAgdGhpcy5tb3VzZURvd24gPSAwO1xuICAgIHRoaXMuc2V0SW9uKCk7XG4gICAgdGhpcy5pc1NwID0gaXNTcDtcblxuICAgIHRoaXMuem9vbUdyb3VwID0gdGhpcy5zdmcuYXBwZW5kKFwiZ1wiKTtcbiAgICB0aGlzLnpvb21faGFuZGxlciA9IGQzLnpvb20oKVxuICAgICAgICAuc2NhbGVFeHRlbnQoWzAuMSwgNDBdKVxuICAgICAgICAub24oXCJ6b29tXCIsIHRoaXMuem9vbV9hY3Rpb25zLmJpbmQodGhpcykpO1xuXG4gICAgLy96b29tIGluaXRpYWxpc2VzXG4gICAgdGhpcy5pbml0aWFsVHJhbnNmb3JtID0gZDMuem9vbUlkZW50aXR5XG4gICAgICAgIC50cmFuc2xhdGUodGhpcy53aWR0aCAvIDIsIHRoaXMuaGVpZ2h0IC8gMilcbiAgICAgICAgLnNjYWxlKDAuMjUpO1xuXG4gICAgdGhpcy5zdmcuY2FsbCh0aGlzLnpvb21faGFuZGxlcik7XG4gICAgLy8gdGhpcy5zdmcuY2FsbCh0aGlzLnpvb21faGFuZGxlci50cmFuc2Zvcm0sIHRoaXMuaW5pdGlhbFRyYW5zZm9ybSk7XG5cbiAgfVxuXG5cblxuICB6b29tX2FjdGlvbnMoKSB7XG4gICAgdGhpcy56b29tR3JvdXAuYXR0cihcInRyYW5zZm9ybVwiLCBkMy5ldmVudC50cmFuc2Zvcm0pO1xuICAgIGNvbnNvbGUubG9nKGQzLmV2ZW50LnRyYW5zZm9ybSlcbiAgfVxuXG5cblxuICBzZXRJb24oKSB7XG4gICAgaW9uLnNvdW5kKHtcbiAgICAgIHNvdW5kczogW3tuYW1lOiBcIm9wZW5pbmdcIn0sXG4gICAgICAgIHtuYW1lOiBcIm1vdXNlb3ZlclwifSxcbiAgICAgICAge25hbWU6IFwiZ3JhYk5vZGVcIn0sXG4gICAgICAgIHtuYW1lOiBcInJlbGVhc2VOb2RlXCJ9LFxuICAgICAgICB7bmFtZTogXCJsZWdlbmRcIn1dLFxuXG4gICAgICAvLyBtYWluIGNvbmZpZ1xuICAgICAgcGF0aDogXCJzcmMvZGF0YS9zb3VuZC9cIixcbiAgICAgIHByZWxvYWQ6IHRydWUsXG4gICAgICBtdWx0aXBsYXk6IHRydWUsXG4gICAgICB2b2x1bWU6IDAuNVxuICAgIH0pO1xuICB9XG5cblxuICBjb2xvcihuKSB7XG4gICAgcmV0dXJuIHRoaXMubGVnZW5kQ29sb3Jbbl07XG4gIH07XG5cblxuICBzZXRMZWdlbmQoKSB7XG4gICAgdGhpcy5sZWdlbmQgPSB0aGlzLnN2Z1xuICAgICAgICAuc2VsZWN0QWxsKCcubGVnZW5kcycpXG4gICAgICAgIC5kYXRhKHRoaXMubGVnZW5kTmFtZSlcbiAgICAgICAgLmVudGVyKClcbiAgICAgICAgLmFwcGVuZCgnZycpXG4gICAgICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJsZWdlbmRzXCIpXG4gICAgICAgIC5hdHRyKFwidHJhbnNmb3JtXCIsIChkLCBpKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIFwidHJhbnNsYXRlKDIwLFwiICsgKGkgKyAxKSAqIDIwICsgXCIpXCJcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCAyMDApXG4gICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIDIwKTtcblxuICAgIC8vICQoXCIubGVnZW5kc1wiKS5jc3Moe1wiY3Vyc29yXCI6IFtcInBvaW50ZXJcIl19KTtcbiAgICBkMy5zZWxlY3RBbGwoXCIubGVnZW5kc1wiKS5zdHlsZShcImN1cnNvclwiLCBcInBvaW50ZXJcIik7XG5cbiAgICB0aGlzLmxlZ2VuZC5hcHBlbmQoJ2NpcmNsZScpIC8vIOWHoeS+i+OBruiJsuS7mOOBkeWbm+inklxuICAgICAgICAuYXR0cihcImN4XCIsIDUpXG4gICAgICAgIC5hdHRyKFwiY3lcIiwgNSlcbiAgICAgICAgLmF0dHIoXCJyXCIsIDkpXG4gICAgICAgIC5hdHRyKFwib3BhY2l0eVwiLCAwLjYpXG4gICAgICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJsZWdlbmRDaXJjbGVcIilcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIChkLCBpKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuY29sb3IoaSk7XG4gICAgICAgIH0pO1xuXG4gICAgdGhpcy5sZWdlbmQuYXBwZW5kKCd0ZXh0JykgIC8vIOWHoeS+i+OBruaWh+iogFxuICAgICAgICAuYXR0cihcInhcIiwgMjApXG4gICAgICAgIC5hdHRyKFwieVwiLCAxMClcbiAgICAgICAgLmF0dHIoXCJjbGFzc1wiLCBcImxlZ2VuZFRleHRcIilcbiAgICAgICAgLnRleHQoKGQpID0+IHtcbiAgICAgICAgICByZXR1cm4gZDtcbiAgICAgICAgfSlcbiAgICAgICAgLy8gLmF0dHIoXCJjbGFzc1wiLCBcInRleHRzZWxlY3RlZFwiKVxuICAgICAgICAuc3R5bGUoXCJ0ZXh0LWFuY2hvclwiLCBcInN0YXJ0XCIpXG4gICAgICAgIC5zdHlsZShcImZvbnQtc2l6ZVwiLCAxNSk7XG4gIH1cblxuXG4gIHJlbmRlcigpe1xuICAgIHRoaXMuc2V0TGluaygpO1xuICAgIHRoaXMuc2V0Tm9kZSgpO1xuICAgIHRoaXMuc2V0TGFiZWwoKTtcbiAgICB0aGlzLnNldFNpbXVsYXRpb24oKTtcbiAgfVxuXG5cbiAgc2V0TGluaygpIHtcbiAgICB0aGlzLmxpbmsgPSB0aGlzLnpvb21Hcm91cC5hcHBlbmQoXCJnXCIpXG4gICAgICAgIC5zZWxlY3RBbGwoXCJsaW5lXCIpXG4gICAgICAgIC5kYXRhKHRoaXMubGlua0RhdGEpXG4gICAgICAgIC5lbnRlcigpXG4gICAgICAgIC5hcHBlbmQoXCJsaW5lXCIpXG4gICAgICAgIC5hdHRyKFwib3BhY2l0eVwiLCBcIjAuNVwiKVxuICAgICAgICAuYXR0cihcInN0cm9rZS13aWR0aFwiLCAoZCkgPT4ge1xuICAgICAgICAgIHJldHVybiBNYXRoLnNxcnQoZC53ZWlnaHQpICogMC4xICsgZC53ZWlnaHQgKiAwLjAxNTtcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoXCJzdHJva2VcIiwgKGQpID0+IHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5jb2xvcihkLmdyb3VwX2lkX3MpXG4gICAgICAgIH0pO1xuICB9XG5cblxuICBzZXROb2RlKCkge1xuICAgIHRoaXMubm9kZSA9IHRoaXMuem9vbUdyb3VwLmFwcGVuZChcImdcIilcbiAgICAgICAgLnNlbGVjdEFsbChcImNpcmNsZVwiKVxuICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gIXRoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKCdsZWdlbmRDaXJjbGUnKVxuICAgICAgICB9KVxuICAgICAgICAuZGF0YSh0aGlzLm5vZGVEYXRhKVxuICAgICAgICAuZW50ZXIoKVxuICAgICAgICAuYXBwZW5kKFwiY2lyY2xlXCIpXG4gICAgICAgIC5hdHRyKFwib3BhY2l0eVwiLCBcIjAuNlwiKVxuICAgICAgICAuYXR0cihcInJcIiwgKGQpID0+IHtcbiAgICAgICAgICByZXR1cm4gTWF0aC5zcXJ0KGQuc2l6ZSkgKiA0ICsgMi41O1xuICAgICAgICB9KVxuICAgICAgICAuYXR0cihcImZpbGxcIiwgKGQpID0+IHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5jb2xvcihkLmdyb3VwX2lkKVxuICAgICAgICB9KVxuICAgICAgICAuYXR0cihcInN0cm9rZVwiLCBcIiNmZmZjZjlcIilcbiAgICAgICAgLmNhbGwoZDMuZHJhZygpXG4gICAgICAgICAgICAub24oXCJzdGFydFwiLCB0aGlzLmRyYWdzdGFydGVkLmJpbmQodGhpcykpXG4gICAgICAgICAgICAub24oXCJkcmFnXCIsIHRoaXMuZHJhZ2dpbmcuYmluZCh0aGlzKSlcbiAgICAgICAgICAgIC5vbihcImVuZFwiLCB0aGlzLmRyYWdlbmRlZC5iaW5kKHRoaXMpKSk7XG4gIH1cblxuXG4gIHNldExhYmVsKCkge1xuICAgIHRoaXMubGFiZWwgPSB0aGlzLnpvb21Hcm91cC5hcHBlbmQoXCJnXCIpXG4gICAgICAgIC5zZWxlY3RBbGwoXCJ0ZXh0XCIpXG4gICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiAhdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoJ2xlZ2VuZFRleHQnKVxuICAgICAgICB9KVxuICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gIXRoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKCdub2RlX2xpbmsnKVxuICAgICAgICB9KVxuICAgICAgICAuZGF0YSh0aGlzLm5vZGVEYXRhKVxuICAgICAgICAuZW50ZXIoKVxuICAgICAgICAuYXBwZW5kKFwidGV4dFwiKVxuICAgICAgICAudGV4dCgoZCkgPT4ge1xuICAgICAgICAgIHJldHVybiBkLm5hbWU7XG4gICAgICAgIH0pO1xuXG4gICAgdGhpcy5sYWJlbFxuICAgICAgICAuYXR0cihcImZvbnQtc2l6ZVwiLCBcIi43ZW1cIilcbiAgICAgICAgLmF0dHIoXCJmb250LXdlaWdodFwiLCBcIjMwMFwiKVxuICAgICAgICAuYXR0cihcImNsYXNzXCIsIFwibm9uRHJhZ1wiKVxuICAgICAgICAuYXR0cihcImZpbGxcIiwgXCIjMzUyNjIyXCIpXG4gICAgICAgIC5hdHRyKHtcImZvbnQtZmFtaWx5XCI6IFtcIkZ1dHVyYVwiLCBcIk51bml0b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiQXJpYWxcIiwgXCJzYW5zLXNlcmlmXCJdfSk7XG4gIH1cblxuXG4gIHNldFNpbXVsYXRpb24oKSB7XG4gICAgdGhpcy5zaW11bGF0aW9uLmZvcmNlKFwibGlua1wiLFxuICAgICAgICBkMy5mb3JjZUxpbmsoKVxuICAgICAgICAgICAgLmRpc3RhbmNlKDgwKVxuICAgICAgICAgICAgLy8gICAgIC5kaXN0YW5jZShmdW5jdGlvbihkKSB7IHJldHVybiAgTWF0aC5zcXJ0KGQud2VpZ2h0KSAqIDAuMSArIGQud2VpZ2h0ICogMC41OyB9KVxuICAgICAgICAgICAgLnN0cmVuZ3RoKDAuOClcbiAgICAgICAgICAgIC5pdGVyYXRpb25zKDEuMClcbiAgICAgICAgICAgIC5pZCgoZCkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gZC5uYW1lO1xuICAgICAgICAgICAgfSlcbiAgICApLmZvcmNlKFwiY29sbGlkZVwiLFxuICAgICAgICBkMy5mb3JjZUNvbGxpZGUoKVxuICAgICAgICAgICAgLnJhZGl1cygoZCkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gTWF0aC5zcXJ0KGQuc2l6ZSkgKiA0ICsgMi41O1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5zdHJlbmd0aCgwLjcpXG4gICAgICAgICAgICAuaXRlcmF0aW9ucygxLjApXG4gICAgKVxuICAgICAgICAuZm9yY2UoXCJjaGFyZ2VcIiwgZDMuZm9yY2VNYW55Qm9keSgpLnN0cmVuZ3RoKC0zMDApKVxuICAgICAgICAuZm9yY2UoXCJjZW50ZXJcIiwgZDMuZm9yY2VDZW50ZXIodGhpcy5jZW50ZXJYLCB0aGlzLmNlbnRlclkpKVxuICAgICAgICAuZm9yY2UoXCJ4XCIsIGQzLmZvcmNlWCgpLnN0cmVuZ3RoKDAuMjUpLngodGhpcy5jZW50ZXJYKSlcbiAgICAgICAgLmZvcmNlKFwieVwiLCBkMy5mb3JjZVkoKS5zdHJlbmd0aCgwLjM1KS55KHRoaXMuY2VudGVyWSkpO1xuXG4gICAgdGhpcy5zaW11bGF0aW9uXG4gICAgICAgIC5ub2Rlcyh0aGlzLm5vZGVEYXRhKVxuICAgICAgICAub24oXCJ0aWNrXCIsIHRoaXMudGlja2VkLmJpbmQodGhpcykpO1xuXG4gICAgdGhpcy5zaW11bGF0aW9uXG4gICAgICAgIC5mb3JjZShcImxpbmtcIilcbiAgICAgICAgLmxpbmtzKHRoaXMubGlua0RhdGEpO1xuXG4gIH1cblxuXG4gIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICB0aWNrZWQoKSB7XG4gICAgdGhpcy5saW5rXG4gICAgICAgIC5hdHRyKFwieDFcIiwgKGQpID0+IHtcbiAgICAgICAgICByZXR1cm4gTWF0aC5tYXgodGhpcy53YWxsTWFyZ2luLCBNYXRoLm1pbih0aGlzLndpZHRoIC0gdGhpcy53YWxsTWFyZ2luLCBkLnNvdXJjZS54KSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5hdHRyKFwieTFcIiwgKGQpID0+IHtcbiAgICAgICAgICByZXR1cm4gTWF0aC5tYXgodGhpcy53YWxsTWFyZ2luLCBNYXRoLm1pbih0aGlzLmhlaWdodCAtIHRoaXMud2FsbE1hcmdpbiwgZC5zb3VyY2UueSkpO1xuICAgICAgICB9KVxuICAgICAgICAuYXR0cihcIngyXCIsIChkKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIE1hdGgubWF4KHRoaXMud2FsbE1hcmdpbiwgTWF0aC5taW4odGhpcy53aWR0aCAtIHRoaXMud2FsbE1hcmdpbiwgZC50YXJnZXQueCkpO1xuICAgICAgICB9KVxuICAgICAgICAuYXR0cihcInkyXCIsIChkKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIE1hdGgubWF4KHRoaXMud2FsbE1hcmdpbiwgTWF0aC5taW4odGhpcy5oZWlnaHQgLSB0aGlzLndhbGxNYXJnaW4sIGQudGFyZ2V0LnkpKTtcbiAgICAgICAgfSk7XG4gICAgdGhpcy5ub2RlXG4gICAgICAgIC5hdHRyKFwiY3hcIiwgKGQpID0+IHtcbiAgICAgICAgICByZXR1cm4gTWF0aC5tYXgodGhpcy53YWxsTWFyZ2luLCBNYXRoLm1pbih0aGlzLndpZHRoIC0gdGhpcy53YWxsTWFyZ2luLCBkLngpKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoXCJjeVwiLCAoZCkgPT4ge1xuICAgICAgICAgIHJldHVybiBNYXRoLm1heCh0aGlzLndhbGxNYXJnaW4sIE1hdGgubWluKHRoaXMuaGVpZ2h0IC0gdGhpcy53YWxsTWFyZ2luLCBkLnkpKTtcbiAgICAgICAgfSk7XG5cbiAgICB0aGlzLmxhYmVsXG4gICAgICAgIC5hdHRyKFwieFwiLCAoZCkgPT4ge1xuICAgICAgICAgIHJldHVybiBNYXRoLm1heCh0aGlzLndhbGxNYXJnaW4sIE1hdGgubWluKHRoaXMud2lkdGggLSB0aGlzLndhbGxNYXJnaW4sIGQueCkpO1xuICAgICAgICB9KVxuICAgICAgICAuYXR0cihcInlcIiwgKGQpID0+IHtcbiAgICAgICAgICByZXR1cm4gTWF0aC5tYXgodGhpcy53YWxsTWFyZ2luLCBNYXRoLm1pbih0aGlzLmhlaWdodCAtIHRoaXMud2FsbE1hcmdpbiwgZC55KSk7XG4gICAgICAgIH0pO1xuICB9XG5cblxuICAvLyBkcmFnIGV2ZW50XG4gIGRyYWdzdGFydGVkKGQpIHtcbiAgICBpZiAoIWQzLmV2ZW50LmFjdGl2ZSkgdGhpcy5zaW11bGF0aW9uLmFscGhhVGFyZ2V0KDAuMykucmVzdGFydCgpO1xuICAgIGQuZnggPSBkLng7XG4gICAgZC5meSA9IGQueTtcblxuICAgIE1vdXNlLm1vdXNlZG93bihkLCB0aGlzLmxpbmtEYXRhLCB0aGlzLmxpbmssIHRoaXMubm9kZSwgdGhpcy5sYWJlbCk7XG4gICAgTW91c2UuY3Vyc29yKCdncmFiYmluZycsIHRoaXMuYm9keSwgdGhpcy5ub2RlKTtcbiAgICBpb24uc291bmQucGxheShcImdyYWJOb2RlXCIsIHtcbiAgICAgIHZvbHVtZTogMC4yIC8vIHR1cm4gZG93blxuICAgIH0pO1xuICAgIHRoaXMubW91c2VEb3duID0gMTtcbiAgfVxuXG4gIGRyYWdnaW5nKGQpIHtcbiAgICBkLmZ4ID0gZDMuZXZlbnQueDtcbiAgICBkLmZ5ID0gZDMuZXZlbnQueTtcbiAgfVxuXG4gIGRyYWdlbmRlZChkKSB7XG4gICAgaWYgKCFkMy5ldmVudC5hY3RpdmUpIHRoaXMuc2ltdWxhdGlvbi5hbHBoYVRhcmdldCgwKTtcbiAgICBkLmZ4ID0gbnVsbDtcbiAgICBkLmZ5ID0gbnVsbDtcblxuICAgIE1vdXNlLm1vdXNldXAoZCwgdGhpcy5saW5rRGF0YSwgdGhpcy5saW5rLCB0aGlzLm5vZGUsIHRoaXMubGFiZWwpO1xuICAgIE1vdXNlLmN1cnNvcignZ3JhYicsIHRoaXMuYm9keSwgdGhpcy5ub2RlKTtcbiAgICBpb24uc291bmQucGxheShcInJlbGVhc2VOb2RlXCIsIHtcbiAgICAgIHZvbHVtZTogMC41XG4gICAgfSk7XG4gICAgdGhpcy5tb3VzZURvd24gPSAwO1xuICB9XG5cbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cblxuICB1cGRhdGUoc2VsZWN0ZWRUeXBlKSB7XG4gICAgbGV0IHByZXZOb2RlUG9zaXRpb24gPSBbXTtcbiAgICBpZiAoc2VsZWN0ZWRUeXBlID09PSAnRmxhdm9yJykge1xuICAgICAgVXBkYXRlLmZsYXZvclNpbXVsYXRpb24odGhpcy5zaW11bGF0aW9uLCB0aGlzLmNlbnRlclgsIHRoaXMuY2VudGVyWSk7XG4gICAgICB0aGlzLm5vZGVEYXRhID0gdGhpcy5mbGF2b3JEYXRhLm5vZGVzO1xuICAgICAgdGhpcy5saW5rRGF0YSA9IHRoaXMuZmxhdm9yRGF0YS5saW5rcztcbiAgICB9IGVsc2UgaWYgKHNlbGVjdGVkVHlwZSA9PT0gJ1VtYW1pJykge1xuICAgICAgVXBkYXRlLnVtYW1pU2ltdWxhdGlvbih0aGlzLnNpbXVsYXRpb24sIHRoaXMuY2VudGVyWCwgdGhpcy5jZW50ZXJZKTtcbiAgICAgIHRoaXMubm9kZURhdGEgPSB0aGlzLnVtYW1pRGF0YS5ub2RlcztcbiAgICAgIHRoaXMubGlua0RhdGEgPSB0aGlzLnVtYW1pRGF0YS5saW5rcztcbiAgICB9XG5cblxuICAgIHRoaXMuc2ltdWxhdGlvbi5zdG9wKCk7XG4gICAgbGV0IHJlc0RlbGV0ZU9iajtcbiAgICBsZXQgcmVzQWRkT2JqO1xuICAgIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG5cbiAgICAgIHJlc0RlbGV0ZU9iaiA9IFVwZGF0ZS5kZWxldGVPYmoodGhpcy5saW5rLCB0aGlzLm5vZGUsIHRoaXMubGFiZWwsIHRoaXMubGlua0RhdGEsIHRoaXMubm9kZURhdGEpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHJlc29sdmUoXG4gICAgICAgICAgICB0aGlzLmxpbmsgPSByZXNEZWxldGVPYmoubGluayxcbiAgICAgICAgICAgIHRoaXMubm9kZSA9IHJlc0RlbGV0ZU9iai5ub2RlLFxuICAgICAgICAgICAgdGhpcy5sYWJlbCA9IHJlc0RlbGV0ZU9iai5sYWJlbCxcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKDEpXG4gICAgICAgICk7XG4gICAgICB9LCA1MDApO1xuXG4gICAgfSkudGhlbigoKSA9PiB7XG5cbiAgICAgIHJlc0FkZE9iaiA9IFVwZGF0ZS5hZGRPYmoodGhpcy5saW5rLCB0aGlzLm5vZGUsIHRoaXMubGFiZWwsIHRoaXMubm9kZURhdGEsIHRoaXMubGlua0RhdGEsIHRoaXMubGVnZW5kQ29sb3IsIHRoaXMuZHJhZ3N0YXJ0ZWQsIHRoaXMuZHJhZ2dpbmcsIHRoaXMuZHJhZ2VuZGVkKTtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICByZXNvbHZlKFxuICAgICAgICAgICAgICB0aGlzLmxpbmsgPSByZXNBZGRPYmoubGluayxcbiAgICAgICAgICAgICAgdGhpcy5ub2RlID0gcmVzQWRkT2JqLm5vZGUsXG4gICAgICAgICAgICAgIHRoaXMubGFiZWwgPSByZXNBZGRPYmoubGFiZWwsXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKDIpXG4gICAgICAgICAgKVxuICAgICAgICB9LCA1MDApO1xuICAgICAgfSk7XG5cbiAgICB9KS50aGVuKCgpID0+IHtcblxuICAgICAgcHJldk5vZGVQb3NpdGlvbiA9IFVwZGF0ZS5zdG9yZVByZXZpb3VzTm9kZVBvc2l0aW9uKHRoaXMubm9kZSwgdGhpcy5ub2RlRGF0YSwgcHJldk5vZGVQb3NpdGlvbik7XG4gICAgICBVcGRhdGUuc2ltdWxhdGlvbih0aGlzLmxpbmtEYXRhLCB0aGlzLm5vZGVEYXRhLCB0aGlzLnNpbXVsYXRpb24sIHRoaXMudGlja2VkLmJpbmQodGhpcykpO1xuICAgICAgY29uc29sZS5sb2coMyk7XG5cbiAgICB9KS50aGVuKCgpID0+IHtcblxuICAgICAgdGhpcy5zaW11bGF0aW9uLnRpY2soMzApO1xuICAgICAgY29uc3QgdCA9IDMwMDA7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgcmVzb2x2ZShcbiAgICAgICAgICAgICAgVXBkYXRlLnRyYW5zaXROb2RlUG9zaXRpb24odGhpcy5ub2RlLCB0aGlzLmxhYmVsLCB0aGlzLm5vZGVEYXRhLCBwcmV2Tm9kZVBvc2l0aW9uLCB0KSxcbiAgICAgICAgICAgICAgVXBkYXRlLnRyYW5zaXRMaW5rUG9zaXRpb24odGhpcy5saW5rLCB0aGlzLmxpbmtEYXRhLCBwcmV2Tm9kZVBvc2l0aW9uLCB0KSxcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coNClcbiAgICAgICAgICApXG4gICAgICAgIH0sIDUwKTtcbiAgICAgIH0pO1xuXG4gICAgfSk7XG4gIH1cblxuXG4gIHNldE1vdXNlQWN0aW9uKCkge1xuICAgIGlmICghdGhpcy5pc1NwKSB7XG4gICAgICB0aGlzLm5vZGUub24oXCJtb3VzZW92ZXJcIiwgKGQpID0+IHtcbiAgICAgICAgTW91c2UubW91c2VvdmVyKGQsIHRoaXMubGlua0RhdGEsIHRoaXMubGluaywgdGhpcy5ub2RlLCB0aGlzLmxhYmVsKTtcbiAgICAgICAgaWYgKHRoaXMubW91c2VEb3duID09PSAwKSB7XG4gICAgICAgICAgaW9uLnNvdW5kLnBsYXkoXCJtb3VzZW92ZXJcIiwge1xuICAgICAgICAgICAgdm9sdW1lOiAwLjEgLy8gdHVybiBkb3duXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLm5vZGUub24oXCJtb3VzZW91dFwiLCAoZCkgPT4ge1xuICAgICAgICBNb3VzZS5tb3VzZW91dChkLCB0aGlzLmxpbmtEYXRhLCB0aGlzLmxpbmssIHRoaXMubm9kZSwgdGhpcy5sYWJlbClcbiAgICAgIH0pO1xuXG5cbiAgICAgIGQzLnNlbGVjdChcImJvZHlcIikub24oXCJtb3VzZXVwXCIsICgpID0+IHtcbiAgICAgICAgTW91c2UucmVzZXQodGhpcy5saW5rRGF0YSwgdGhpcy5saW5rLCB0aGlzLm5vZGUsIHRoaXMubGFiZWwpO1xuICAgICAgICBNb3VzZS5jdXJzb3IoJ2dyYWInLCB0aGlzLmJvZHksIHRoaXMubm9kZSk7XG5cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgICAvLyBmb3IgU21hcnRQaG9uZVxuXG4gICAgLy8gaWYgKHRoaXMuaXNTcCkge1xuICAgIC8vICAgbGV0IHRvdWNoQ29sb3JlZCA9IDA7XG4gICAgLy8gICBsZXQgdG91Y2htb3ZlID0gMDtcbiAgICAvLyAgIHRoaXMuc3ZnLm9uKFwidG91Y2htb3ZlXCIsICgpID0+IHtcbiAgICAvLyAgICAgdG91Y2htb3ZlID0gMVxuICAgIC8vICAgfSk7XG4gICAgLy9cbiAgICAvLyAgIHRoaXMubm9kZS5vbihcInRvdWNoc3RhcnRcIiwgKGQpID0+IHtcbiAgICAvLyAgICAgTW91c2UudG91Y2hTdGFydChkLCB0aGlzLmxpbmtEYXRhLCB0aGlzLmxpbmssIHRoaXMubm9kZSwgdGhpcy5sYWJlbCk7XG4gICAgLy8gICB9KTtcbiAgICAvL1xuICAgIC8vICAgbm9kZS5vbihcInRvdWNoZW5kXCIsICgpID0+IHtcbiAgICAvLyAgICAgdG91Y2hDb2xvcmVkID0gMDtcbiAgICAvLyAgIH0pO1xuICAgIC8vXG4gICAgLy8gICB0aGlzLnN2Zy5vbihcInRvdWNoc3RhcnRcIiwgKCkgPT4ge1xuICAgIC8vICAgICB0b3VjaENvbG9yZWQgPSAxO1xuICAgIC8vICAgfSk7XG4gICAgLy9cbiAgICAvLyAgIHRoaXMuc3ZnLm9uKFwidG91Y2hlbmRcIiwgKCkgPT4ge1xuICAgIC8vICAgICBpZiAodG91Y2htb3ZlID09PSAwKSB7XG4gICAgLy8gICAgICAgaWYgKHRvdWNoQ29sb3JlZCA9PT0gMSkge1xuICAgIC8vICAgICAgICAgdGhpcy5ub2RlLmF0dHIoXCJjbGFzc1wiLCBcIm5vZGVSZXR1cm5GYWRlXCIpO1xuICAgIC8vICAgICAgICAgdGhpcy5saW5rLmF0dHIoXCJjbGFzc1wiLCBcImxpbmVSZXR1cm5GYWRlXCIpO1xuICAgIC8vICAgICAgICAgdGhpcy5sYWJlbC5hdHRyKFwiY2xhc3NcIiwgXCJub2RlVGV4dFJldHVybkZhZGVcIik7XG4gICAgLy8gICAgICAgfVxuICAgIC8vICAgICB9XG4gICAgLy8gICAgIHRvdWNobW92ZSA9IDBcbiAgICAvLyAgIH0pO1xuICAgIC8vIH1cbiAgfVxuXG4gIC8qXG4gIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuICBMZWdlbmQucHV0SWQyTGVnZW5kKGNlbGwsIGxlZ2VuZE5hbWUpO1xuICAvLyDjg47jg7zjg4njgpLmm7TmlrDjgZnjgovloLTlkIjjga/lho3luqbjgq/jg6njgrnjgpLku5jkuI7jgZnjgovlv4XopoHjgYLjgopcbiAgTGVnZW5kLnB1dENsYXNzMk5vZGUobm9kZXMsIGNpcmNsZSk7XG5cblxuICBsZXQgbGVnZW5kRmlsdGVyID0gZDMuc2VsZWN0QWxsKFwiLmNlbGxcIik7XG4gIGlmICghaXNTcCkge1xuICAgIGxlZ2VuZEZpbHRlci5vbihcIm1vdXNlb3ZlclwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zdCBsZWdlbmRJZCA9IHRoaXMuaWQuc2xpY2UoOSk7XG4gICAgICBMZWdlbmQubW91c2VvdmVyRmlsdGVyKGxlZ2VuZElkLCBjaXJjbGUsIGNlbGwsIHRoaXMuY29sb3IpO1xuXG4gICAgICBpb24uc291bmQucGxheShcIm1vdXNlb3ZlclwiLCB7XG4gICAgICAgIHZvbHVtZTogMC4xIC8vIHR1cm4gZG93blxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBsZWdlbmRGaWx0ZXIub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zdCBsZWdlbmRJZCA9IHRoaXMuaWQuc2xpY2UoOSk7XG4gICAgICBMZWdlbmQubW91c2VvdmVyQ2xpY2sobGVnZW5kSWQsIGNpcmNsZSwgY2VsbCwgdGhpcy5jb2xvcik7XG5cbiAgICAgIGlvbi5zb3VuZC5wbGF5KFwibGVnZW5kXCIpO1xuICAgIH0pO1xuXG4gICAgLy8gbGVnZW5kIGZpbHRlcihtb3VzZSBvdXQpXG4gICAgbGVnZW5kRmlsdGVyLm9uKFwibW91c2VvdXRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgY29uc3QgbGVnZW5kSWQgPSB0aGlzLmlkLnNsaWNlKDkpO1xuICAgICAgTGVnZW5kLm1vdXNlb3V0RmlsdGVyKGxlZ2VuZElkLCBjaXJjbGUsIGNlbGwpO1xuICAgIH0pO1xuICB9XG4qL1xufSIsImltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXBkYXRlIHtcblxuICBzdGF0aWMgZGVsZXRlT2JqKGxpbmtMaW5lLCBub2RlQ2lyY2xlLCBub2RlVGV4dCwgbGlua0RhdGEsIG5vZGVEYXRhKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGxpbms6IFVwZGF0ZS5kZWxldGVMaW5rRGF0YShsaW5rTGluZSwgbGlua0RhdGEpLFxuICAgICAgbm9kZTogVXBkYXRlLmRlbGV0ZU5vZGVEYXRhKG5vZGVDaXJjbGUsIG5vZGVEYXRhKSxcbiAgICAgIGxhYmVsOiBVcGRhdGUuZGVsZXRlTGFiZWxEYXRhKG5vZGVUZXh0LCBub2RlRGF0YSlcbiAgICB9XG4gIH1cblxuXG4gIHN0YXRpYyBhZGRPYmoobGlua0xpbmUsIG5vZGVDaXJjbGUsIG5vZGVUZXh0LCBub2RlRGF0YSwgbGlua0RhdGEsIGNvbG9yLCBkcmFnc3RhcnRlZCwgZHJhZ2dpbmcsIGRyYWdlbmRlZCkge1xuICAgIHJldHVybiB7XG4gICAgICBsaW5rOiBVcGRhdGUuYWRkTGlua0RhdGEobGlua0xpbmUsIGxpbmtEYXRhLCBjb2xvciksXG4gICAgICBub2RlOiBVcGRhdGUuYWRkTm9kZURhdGEobm9kZUNpcmNsZSwgbm9kZURhdGEsIGNvbG9yLCBkcmFnc3RhcnRlZCwgZHJhZ2dpbmcsIGRyYWdlbmRlZCksXG4gICAgICBsYWJlbDogVXBkYXRlLmFkZExhYmVsRGF0YShub2RlVGV4dClcbiAgICB9XG4gIH1cblxuXG4gIHN0YXRpYyBkZWxldGVMaW5rRGF0YSAobGlua0xpbmUsIGxpbmtEYXRhKSB7XG4gICAgbGlua0xpbmUgPSBsaW5rTGluZS5kYXRhKGxpbmtEYXRhLCAoZCkgPT4ge1xuICAgICAgcmV0dXJuIGQubmFtZTtcbiAgICB9KTtcbiAgICBsaW5rTGluZVxuICAgICAgICAuZXhpdCgpXG4gICAgICAgIC8vIC50cmFuc2l0aW9uKClcbiAgICAgICAgLy8gLmR1cmF0aW9uKDEwMDApXG4gICAgICAgIC8vIC5lYXNlKGQzLmVhc2VMaW5lYXIpXG4gICAgICAgIC8vIC5hdHRyKFwib3BhY2l0eVwiLCAwLjApXG4gICAgICAgIC5yZW1vdmUoKTtcblxuICAgIHJldHVybiBsaW5rTGluZTtcbiAgfVxuXG5cbiAgc3RhdGljIGFkZExpbmtEYXRhIChsaW5rTGluZSwgbGlua0RhdGEsIGNvbG9yKSB7XG4gICAgbGV0IGxpbmtMaW5lRW50ZXIgPSBsaW5rTGluZVxuICAgICAgICAuZW50ZXIoKVxuICAgICAgICAuYXBwZW5kKFwibGluZVwiKVxuICAgICAgICAvLyAuYXR0cihcIm9wYWNpdHlcIiwgMC4wKVxuICAgICAgICAuYXR0cihcInN0cm9rZS13aWR0aFwiLCAgKGQpID0+IHtcbiAgICAgICAgICByZXR1cm4gTWF0aC5zcXJ0KGQud2VpZ2h0KSAqIDAuMSArIGQud2VpZ2h0ICogMC4wMTU7XG4gICAgICAgIH0pXG4gICAgICAgIC5hdHRyKFwic3Ryb2tlXCIsICAoZCkgPT4ge1xuICAgICAgICAgIHJldHVybiBjb2xvcltkLmdyb3VwX2lkX3NdXG4gICAgICAgIH0pO1xuXG4gICAgbGlua0xpbmUgPSBsaW5rTGluZUVudGVyLm1lcmdlKGxpbmtMaW5lKTtcbiAgICBsaW5rTGluZVxuICAgICAgICAvLyAudHJhbnNpdGlvbigpXG4gICAgICAgIC8vIC5kdXJhdGlvbigxMDAwKVxuICAgICAgICAvLyAuZWFzZShkMy5lYXNlTGluZWFyKVxuICAgICAgICAuYXR0cihcIm9wYWNpdHlcIiwgMC41KTtcblxuXG4gICAgLy8gY2hhbmdlIGxpbmUgZGlzcGxheSBvcmRlciB0byBiYWNrIG9mIG5vZGVcbiAgICBmb3IgKGxldCBpID0gbGlua0RhdGEubGVuZ3RoIC0gMTsgMCA8PSBpOyBpLS0pIHtcbiAgICAgIGNvbnN0IGxpbmtTVkcgPSBsaW5rTGluZVsnX2dyb3VwcyddWzBdW2ldO1xuICAgICAgY29uc3QgZmlyc3RTVkcgPSBsaW5rU1ZHLnBhcmVudE5vZGUuZmlyc3RDaGlsZDtcbiAgICAgIGlmIChmaXJzdFNWRykge1xuICAgICAgICBsaW5rU1ZHLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGxpbmtTVkcsIGZpcnN0U1ZHKTtcbiAgICAgIH1cbiAgICB9XG5cblxuICAgIHJldHVybiBsaW5rTGluZTtcbiAgfVxuXG5cbiAgc3RhdGljIGRlbGV0ZU5vZGVEYXRhIChub2RlQ2lyY2xlLCBub2RlRGF0YSkge1xuICAgIG5vZGVDaXJjbGUgPSBub2RlQ2lyY2xlLmRhdGEobm9kZURhdGEsICAoZCkgPT4ge1xuICAgICAgcmV0dXJuIGQubmFtZTtcbiAgICB9KTtcbiAgICBub2RlQ2lyY2xlXG4gICAgICAgIC5leGl0KClcbiAgICAgICAgLy8gLnRyYW5zaXRpb24oKVxuICAgICAgICAvLyAuZHVyYXRpb24oMTAwMClcbiAgICAgICAgLy8gLmVhc2UoZDMuZWFzZUxpbmVhcilcbiAgICAgICAgLy8gLmF0dHIoXCJvcGFjaXR5XCIsIDAuMClcbiAgICAgICAgLnJlbW92ZSgpO1xuXG4gICAgcmV0dXJuIG5vZGVDaXJjbGU7XG4gIH1cblxuXG4gICBzdGF0aWMgYWRkTm9kZURhdGEgKG5vZGVDaXJjbGUsIG5vZGVEYXRhLCBjb2xvciwgZHJhZ3N0YXJ0ZWQsIGRyYWdnaW5nLCBkcmFnZW5kZWQpIHtcbiAgICBub2RlQ2lyY2xlID0gbm9kZUNpcmNsZVxuICAgICAgICAuZW50ZXIoKVxuICAgICAgICAuYXBwZW5kKFwiY2lyY2xlXCIpXG4gICAgICAgIC8vIC5hdHRyKFwib3BhY2l0eVwiLCBcIjAuMFwiKVxuICAgICAgICAuYXR0cihcInJcIiwgIChkKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIE1hdGguc3FydChkLnNpemUpICogNCArIDIuNTtcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsICAoZCkgPT4ge1xuICAgICAgICAgIHJldHVybiBjb2xvcltkLmdyb3VwX2lkXVxuICAgICAgICB9KVxuICAgICAgICAuYXR0cihcInN0cm9rZVwiLCBcIiNmZmZjZjlcIilcbiAgICAgICAgLmNhbGwoZDMuZHJhZygpXG4gICAgICAgICAgICAub24oXCJzdGFydFwiLCBkcmFnc3RhcnRlZClcbiAgICAgICAgICAgIC5vbihcImRyYWdcIiwgZHJhZ2dpbmcpXG4gICAgICAgICAgICAub24oXCJlbmRcIiwgZHJhZ2VuZGVkKSlcbiAgICAgICAgLm1lcmdlKG5vZGVDaXJjbGUpO1xuXG4gICAgbm9kZUNpcmNsZVxuICAgICAgICAvLyAudHJhbnNpdGlvbigpXG4gICAgICAgIC8vIC5kdXJhdGlvbigxMDAwKVxuICAgICAgICAvLyAuZWFzZShkMy5lYXNlTGluZWFyKVxuICAgICAgICAuYXR0cihcIm9wYWNpdHlcIiwgMC42KTtcblxuICAgIHJldHVybiBub2RlQ2lyY2xlO1xuICB9XG5cblxuICBzdGF0aWMgZGVsZXRlTGFiZWxEYXRhIChub2RlVGV4dCwgbm9kZURhdGEpIHtcbiAgICBub2RlVGV4dCA9IG5vZGVUZXh0LmRhdGEobm9kZURhdGEsICAoZCkgPT4ge1xuICAgICAgcmV0dXJuIGQubmFtZTtcbiAgICB9KTtcbiAgICBub2RlVGV4dFxuICAgICAgICAuZXhpdCgpXG4gICAgICAgIC8vIC50cmFuc2l0aW9uKClcbiAgICAgICAgLy8gLmR1cmF0aW9uKDEwMDApXG4gICAgICAgIC8vIC5lYXNlKGQzLmVhc2VMaW5lYXIpXG4gICAgICAgIC8vIC5hdHRyKFwib3BhY2l0eVwiLCAwLjApXG4gICAgICAgIC5yZW1vdmUoKTtcblxuICAgIHJldHVybiBub2RlVGV4dDtcbiAgfVxuXG5cbiAgc3RhdGljIGFkZExhYmVsRGF0YShub2RlVGV4dCkge1xuICAgIG5vZGVUZXh0ID0gbm9kZVRleHQuZW50ZXIoKS5hcHBlbmQoXCJ0ZXh0XCIpLm1lcmdlKG5vZGVUZXh0KVxuICAgICAgICAudGV4dCgoZCkgPT4ge1xuICAgICAgICAgIHJldHVybiBkLm5hbWU7XG4gICAgICAgIH0pO1xuXG4gICAgbm9kZVRleHRcbiAgICAgICAgLmF0dHIoXCJvcGFjaXR5XCIsIDEuMClcbiAgICAgICAgLmF0dHIoXCJmb250LXNpemVcIiwgXCIuN2VtXCIpXG4gICAgICAgIC5hdHRyKFwiZm9udC13ZWlnaHRcIiwgXCIzMDBcIilcbiAgICAgICAgLmF0dHIoXCJjbGFzc1wiLCBcIm5vbkRyYWdcIilcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIFwiIzM1MjYyMlwiKVxuICAgICAgICAuYXR0cih7XCJmb250LWZhbWlseVwiOiBbXCJGdXR1cmFcIiwgXCJOdW5pdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkFyaWFsXCIsIFwic2Fucy1zZXJpZlwiXX0pXG5cbiAgICAgLy8gbm9kZVRleHQudHJhbnNpdGlvbigpXG4gICAgIC8vICAgIC5kdXJhdGlvbigxMDAwKVxuICAgICAvLyAgICAuZWFzZShkMy5lYXNlTGluZWFyKVxuICAgICAvLyAgICAuc3R5bGUoXCJvcGFjaXR5XCIsIDAuNik7XG5cbiAgICByZXR1cm4gbm9kZVRleHQ7XG4gIH1cblxuXG4gIHN0YXRpYyBzdG9yZVByZXZpb3VzTm9kZVBvc2l0aW9uKG5vZGVDaXJjbGUsIG5vZGVEYXRhLCBwcmV2Tm9kZVBvc2l0aW9uKSB7XG4gICAgLy8gZ2V0IHByZXZpb3VzIG5vZGUgcG9zaXRpb25cbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IG5vZGVEYXRhLmxlbmd0aDsgbCA+IGk7IGkrKykge1xuICAgICAgcHJldk5vZGVQb3NpdGlvbi5wdXNoKHtcbiAgICAgICAgJ25hbWUnOiBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1baV1bJ19fZGF0YV9fJ11bJ25hbWUnXSxcbiAgICAgICAgJ3gnOiBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1baV1bJ2N4J11bJ2Jhc2VWYWwnXVsndmFsdWUnXSxcbiAgICAgICAgJ3knOiBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1baV1bJ2N5J11bJ2Jhc2VWYWwnXVsndmFsdWUnXVxuICAgICAgfSlcbiAgICB9XG5cbiAgICByZXR1cm4gcHJldk5vZGVQb3NpdGlvbjtcbiAgfVxuXG4gIHN0YXRpYyBzaW11bGF0aW9uKGxpbmtEYXRhLCBub2RlRGF0YSwgc2ltdWxhdGlvbiwgdGlja2VkKSB7XG4gICAgc2ltdWxhdGlvblxuICAgICAgICAubm9kZXMobm9kZURhdGEpXG4gICAgICAgIC5vbihcInRpY2tcIiwgdGlja2VkKTtcbiAgICBzaW11bGF0aW9uLmZvcmNlKFwibGlua1wiKVxuICAgICAgICAubGlua3MobGlua0RhdGEpO1xuICAgIHNpbXVsYXRpb24uc3RvcCgpO1xuICB9XG5cblxuICBzdGF0aWMgdHJhbnNpdE5vZGVQb3NpdGlvbiAobm9kZUNpcmNsZSwgbm9kZVRleHQsIG5vZGVEYXRhLCBwcmV2Tm9kZVBvc2l0aW9uLCBkdXJhdGlvblRpbWUpIHtcbiAgICBjb25zdCB0ID0gZDMudHJhbnNpdGlvbigpLmR1cmF0aW9uKGR1cmF0aW9uVGltZSk7XG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBub2RlRGF0YS5sZW5ndGg7IGwgPiBpOyBpKyspIHtcbiAgICAgIC8vIG5ldyBub2RlIC0+IG5ldyBwb3NpdGlvbiwgZXhpc3Rpbmcgbm9kZSAtPiBwcmV2aW91cyBwb3NpdGlvblxuICAgICAgaWYgKHByZXZOb2RlUG9zaXRpb25baV1bJ3gnXSA9PT0gMCkge1xuICAgICAgICBwcmV2Tm9kZVBvc2l0aW9uW2ldWyd4J10gPSBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1baV1bJ19fZGF0YV9fJ11bJ3gnXTtcbiAgICAgICAgcHJldk5vZGVQb3NpdGlvbltpXVsneSddID0gbm9kZUNpcmNsZVsnX2dyb3VwcyddWzBdW2ldWydfX2RhdGFfXyddWyd5J107XG4gICAgICB9XG4gICAgICAvLyBub2RlXG4gICAgICBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1baV0uc2V0QXR0cmlidXRlKFwiY3hcIiwgcHJldk5vZGVQb3NpdGlvbltpXVsneCddKTtcbiAgICAgIG5vZGVDaXJjbGVbJ19ncm91cHMnXVswXVtpXS5zZXRBdHRyaWJ1dGUoXCJjeVwiLCBwcmV2Tm9kZVBvc2l0aW9uW2ldWyd5J10pO1xuICAgICAgLy8gbGFiZWxcbiAgICAgIG5vZGVUZXh0WydfZ3JvdXBzJ11bMF1baV0uc2V0QXR0cmlidXRlKFwieFwiLCBwcmV2Tm9kZVBvc2l0aW9uW2ldWyd4J10pO1xuICAgICAgbm9kZVRleHRbJ19ncm91cHMnXVswXVtpXS5zZXRBdHRyaWJ1dGUoXCJ5XCIsIHByZXZOb2RlUG9zaXRpb25baV1bJ3knXSk7XG4gICAgfVxuXG4gICAgbm9kZUNpcmNsZS50cmFuc2l0aW9uKHQpXG4gICAgICAgIC5hdHRyKFwiY3hcIiwgZCA9PiBkLngpXG4gICAgICAgIC5hdHRyKFwiY3lcIiwgZCA9PiBkLnkpO1xuXG4gICAgbm9kZVRleHQudHJhbnNpdGlvbih0KVxuICAgICAgICAuYXR0cihcInhcIiwgZCA9PiBkLngpXG4gICAgICAgIC5hdHRyKFwieVwiLCBkID0+IGQueSk7XG4gIH07XG5cblxuICBzdGF0aWMgdHJhbnNpdExpbmtQb3NpdGlvbiAobGlua0xpbmUsIGxpbmtEYXRhLCBwcmV2Tm9kZVBvc2l0aW9uLCBkdXJhdGlvblRpbWUpIHtcbiAgICBjb25zdCB0ID0gZDMudHJhbnNpdGlvbigpLmR1cmF0aW9uKGR1cmF0aW9uVGltZSk7XG5cbiAgICBsZXQgbm9kZVBvc2l0aW9uSW5kZXggPSB7fTtcbiAgICBmb3IgKGxldCBpMSA9IDAsIGwxID0gcHJldk5vZGVQb3NpdGlvbi5sZW5ndGg7IGwxID4gaTE7IGkxKyspIHtcbiAgICAgIG5vZGVQb3NpdGlvbkluZGV4W3ByZXZOb2RlUG9zaXRpb25baTFdWyduYW1lJ11dID0gaTE7XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaTIgPSAwLCBsMiA9IGxpbmtEYXRhLmxlbmd0aDsgbDIgPiBpMjsgaTIrKykge1xuICAgICAgY29uc3Qgc291cmNlTmFtZSA9IGxpbmtMaW5lWydfZ3JvdXBzJ11bMF1baTJdWydfX2RhdGFfXyddWydzb3VyY2UnXVsnbmFtZSddO1xuICAgICAgY29uc3QgdGFyZ2V0TmFtZSA9IGxpbmtMaW5lWydfZ3JvdXBzJ11bMF1baTJdWydfX2RhdGFfXyddWyd0YXJnZXQnXVsnbmFtZSddO1xuXG4gICAgICBsaW5rTGluZVsnX2dyb3VwcyddWzBdW2kyXS5zZXRBdHRyaWJ1dGUoXCJ4MVwiLCBwcmV2Tm9kZVBvc2l0aW9uW25vZGVQb3NpdGlvbkluZGV4W3NvdXJjZU5hbWVdXVsneCddKTtcbiAgICAgIGxpbmtMaW5lWydfZ3JvdXBzJ11bMF1baTJdLnNldEF0dHJpYnV0ZShcInkxXCIsIHByZXZOb2RlUG9zaXRpb25bbm9kZVBvc2l0aW9uSW5kZXhbc291cmNlTmFtZV1dWyd5J10pO1xuICAgICAgbGlua0xpbmVbJ19ncm91cHMnXVswXVtpMl0uc2V0QXR0cmlidXRlKFwieDJcIiwgcHJldk5vZGVQb3NpdGlvbltub2RlUG9zaXRpb25JbmRleFt0YXJnZXROYW1lXV1bJ3gnXSk7XG4gICAgICBsaW5rTGluZVsnX2dyb3VwcyddWzBdW2kyXS5zZXRBdHRyaWJ1dGUoXCJ5MlwiLCBwcmV2Tm9kZVBvc2l0aW9uW25vZGVQb3NpdGlvbkluZGV4W3RhcmdldE5hbWVdXVsneSddKTtcbiAgICB9XG5cbiAgICBsaW5rTGluZS50cmFuc2l0aW9uKHQpXG4gICAgICAgIC5hdHRyKFwieDFcIiwgZCA9PiBkLnNvdXJjZS54KVxuICAgICAgICAuYXR0cihcInkxXCIsIGQgPT4gZC5zb3VyY2UueSlcbiAgICAgICAgLmF0dHIoXCJ4MlwiLCBkID0+IGQudGFyZ2V0LngpXG4gICAgICAgIC5hdHRyKFwieTJcIiwgZCA9PiBkLnRhcmdldC55KVxuICB9O1xuXG5cbiAgc3RhdGljIGZsYXZvclNpbXVsYXRpb24oc2ltdWxhdGlvbiwgY2VudGVyWCwgY2VudGVyWSkge1xuICAgIHNpbXVsYXRpb25cbiAgICAgICAgLmZvcmNlKFwibGlua1wiLCBkMy5mb3JjZUxpbmsoKS5kaXN0YW5jZSg4MCkpXG4gICAgICAgIC5mb3JjZShcImNoYXJnZVwiLCBkMy5mb3JjZU1hbnlCb2R5KCkuc3RyZW5ndGgoLTMwMCkpXG4gICAgICAgIC5mb3JjZShcInhcIiwgZDMuZm9yY2VYKCkuc3RyZW5ndGgoMC4yNSkueChjZW50ZXJYKSlcbiAgICAgICAgLmZvcmNlKFwieVwiLCBkMy5mb3JjZVkoKS5zdHJlbmd0aCgwLjM1KS55KGNlbnRlclkpKTtcbiAgfVxuXG5cbiAgc3RhdGljIHVtYW1pU2ltdWxhdGlvbihzaW11bGF0aW9uLCBjZW50ZXJYLCBjZW50ZXJZKSB7XG4gICAgc2ltdWxhdGlvblxuICAgICAgICAuZm9yY2UoXCJsaW5rXCIsXG4gICAgICAgICAgICBkMy5mb3JjZUxpbmsoKS5kaXN0YW5jZSgyMDApXG4gICAgICAgICAgICAgICAgLmlkKCAoZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGQubmFtZTtcbiAgICAgICAgICAgICAgICB9KSlcbiAgICAgICAgLmZvcmNlKFwiY2hhcmdlXCIsIGQzLmZvcmNlTWFueUJvZHkoKS5zdHJlbmd0aCgtMjAwMCkpXG4gICAgICAgIC5mb3JjZShcInhcIiwgZDMuZm9yY2VYKCkuc3RyZW5ndGgoMS41KS54KGNlbnRlclgpKVxuICAgICAgICAuZm9yY2UoXCJ5XCIsIGQzLmZvcmNlWSgpLnN0cmVuZ3RoKDIuMjUpLnkoY2VudGVyWSkpO1xuICB9XG5cbn0iLCJjb25zdCBmbGF2b3JEYXRhID0ge1wibGlua3NcIjogW3tcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAzMjAsIFwic291cmNlXCI6IFwiY2l0cnVzXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlXCIsIFwid2VpZ2h0XCI6IDUxLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTcxLCBcInNvdXJjZVwiOiBcIm1hbmRhcmluXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlXCIsIFwid2VpZ2h0XCI6IDU3LjB9LCB7XCJncm91cF9pZF9zXCI6IDAsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTQ4LCBcInNvdXJjZVwiOiBcImxlbW9uX3BlZWxcIiwgXCJ0YXJnZXRcIjogXCJvcmFuZ2VcIiwgXCJ3ZWlnaHRcIjogOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDU1MywgXCJzb3VyY2VcIjogXCJsaW1lXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlXCIsIFwid2VpZ2h0XCI6IDU2LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNDk5LCBcInNvdXJjZVwiOiBcImdyYXBlZnJ1aXRcIiwgXCJ0YXJnZXRcIjogXCJvcmFuZ2VcIiwgXCJ3ZWlnaHRcIjogMzAuMH0sIHtcImdyb3VwX2lkX3NcIjogNiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA2MywgXCJzb3VyY2VcIjogXCJiYXNpbFwiLCBcInRhcmdldFwiOiBcIm9yYW5nZVwiLCBcIndlaWdodFwiOiAxMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDMxOSwgXCJzb3VyY2VcIjogXCJjaXRydXNcIiwgXCJ0YXJnZXRcIjogXCJtYW5kYXJpblwiLCBcIndlaWdodFwiOiA1MS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDMxNywgXCJzb3VyY2VcIjogXCJjaXRydXNcIiwgXCJ0YXJnZXRcIjogXCJsZW1vblwiLCBcIndlaWdodFwiOiA1MS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDMxOCwgXCJzb3VyY2VcIjogXCJjaXRydXNcIiwgXCJ0YXJnZXRcIjogXCJsaW1lXCIsIFwid2VpZ2h0XCI6IDUxLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTc2LCBcInNvdXJjZVwiOiBcIm1hbmRhcmluXCIsIFwidGFyZ2V0XCI6IFwidGFuZ2VyaW5lXCIsIFwid2VpZ2h0XCI6IDUzLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTU0LCBcInNvdXJjZVwiOiBcImxpbWVcIiwgXCJ0YXJnZXRcIjogXCJ0YW5nZXJpbmVcIiwgXCJ3ZWlnaHRcIjogNTMuMH0sIHtcImdyb3VwX2lkX3NcIjogMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAzMjEsIFwic291cmNlXCI6IFwiY2l0cnVzX3BlZWxcIiwgXCJ0YXJnZXRcIjogXCJ0YW5nZXJpbmVcIiwgXCJ3ZWlnaHRcIjogMzIuMH0sIHtcImdyb3VwX2lkX3NcIjogMCwgXCJncm91cF9pZF90XCI6IDExLCBcIm5hbWVcIjogNTQ3LCBcInNvdXJjZVwiOiBcImxlbW9uX3BlZWxcIiwgXCJ0YXJnZXRcIjogXCJsaW1lX3BlZWxfb2lsXCIsIFwid2VpZ2h0XCI6IDYuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAxNywgXCJzb3VyY2VcIjogXCJhcHBsZV9icmFuZHlcIiwgXCJ0YXJnZXRcIjogXCJyZWRfd2luZVwiLCBcIndlaWdodFwiOiAxNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDMwOSwgXCJzb3VyY2VcIjogXCJjaWRlclwiLCBcInRhcmdldFwiOiBcInJlZF93aW5lXCIsIFwid2VpZ2h0XCI6IDUyLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMzc2LCBcInNvdXJjZVwiOiBcImNvZ25hY1wiLCBcInRhcmdldFwiOiBcInJlZF93aW5lXCIsIFwid2VpZ2h0XCI6IDk0LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMjEzLCBcInNvdXJjZVwiOiBcImNoYW1wYWduZV93aW5lXCIsIFwidGFyZ2V0XCI6IFwicmVkX3dpbmVcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTY4LCBcInNvdXJjZVwiOiBcImJyYW5keVwiLCBcInRhcmdldFwiOiBcInJlZF93aW5lXCIsIFwid2VpZ2h0XCI6IDE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTI2LCBcInNvdXJjZVwiOiBcImJlZXJcIiwgXCJ0YXJnZXRcIjogXCJyZWRfd2luZVwiLCBcIndlaWdodFwiOiAxMDYuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAzMTAsIFwic291cmNlXCI6IFwiY2lkZXJcIiwgXCJ0YXJnZXRcIjogXCJydW1cIiwgXCJ3ZWlnaHRcIjogNTQuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAzNzcsIFwic291cmNlXCI6IFwiY29nbmFjXCIsIFwidGFyZ2V0XCI6IFwicnVtXCIsIFwid2VpZ2h0XCI6IDk0LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTYsIFwic291cmNlXCI6IFwiYXBwbGVfYnJhbmR5XCIsIFwidGFyZ2V0XCI6IFwiY2lkZXJcIiwgXCJ3ZWlnaHRcIjogMTUuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAxNjcsIFwic291cmNlXCI6IFwiYnJhbmR5XCIsIFwidGFyZ2V0XCI6IFwicG9ydF93aW5lXCIsIFwid2VpZ2h0XCI6IDE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogNjgwLCBcInNvdXJjZVwiOiBcInJ1bVwiLCBcInRhcmdldFwiOiBcIndoaXNrZXlcIiwgXCJ3ZWlnaHRcIjogNzYuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA4MiwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiYmVlclwiLCBcIndlaWdodFwiOiAxMDIuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAzMTEsIFwic291cmNlXCI6IFwiY2lkZXJcIiwgXCJ0YXJnZXRcIjogXCJzaGVycnlcIiwgXCJ3ZWlnaHRcIjogNTIuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAzNzgsIFwic291cmNlXCI6IFwiY29nbmFjXCIsIFwidGFyZ2V0XCI6IFwic2hlcnJ5XCIsIFwid2VpZ2h0XCI6IDkwLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTY5LCBcInNvdXJjZVwiOiBcImJyYW5keVwiLCBcInRhcmdldFwiOiBcInNoZXJyeVwiLCBcIndlaWdodFwiOiAxOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDY3MSwgXCJzb3VyY2VcIjogXCJyZWRfd2luZVwiLCBcInRhcmdldFwiOiBcInNoZXJyeVwiLCBcIndlaWdodFwiOiAxMzguMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA2NTksIFwic291cmNlXCI6IFwicG9ydF93aW5lXCIsIFwidGFyZ2V0XCI6IFwic2hlcnJ5XCIsIFwid2VpZ2h0XCI6IDEzMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDY3OSwgXCJzb3VyY2VcIjogXCJydW1cIiwgXCJ0YXJnZXRcIjogXCJzaGVycnlcIiwgXCJ3ZWlnaHRcIjogODcuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA3MDYsIFwic291cmNlXCI6IFwid2hpdGVfd2luZVwiLCBcInRhcmdldFwiOiBcIndpbmVcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMzgwLCBcInNvdXJjZVwiOiBcImNvZ25hY1wiLCBcInRhcmdldFwiOiBcIndpbmVcIiwgXCJ3ZWlnaHRcIjogODIuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAyMTUsIFwic291cmNlXCI6IFwiY2hhbXBhZ25lX3dpbmVcIiwgXCJ0YXJnZXRcIjogXCJ3aW5lXCIsIFwid2VpZ2h0XCI6IDEyOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDE3MSwgXCJzb3VyY2VcIjogXCJicmFuZHlcIiwgXCJ0YXJnZXRcIjogXCJ3aW5lXCIsIFwid2VpZ2h0XCI6IDE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTMwLCBcInNvdXJjZVwiOiBcImJlZXJcIiwgXCJ0YXJnZXRcIjogXCJ3aW5lXCIsIFwid2VpZ2h0XCI6IDg2LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogNjczLCBcInNvdXJjZVwiOiBcInJlZF93aW5lXCIsIFwidGFyZ2V0XCI6IFwid2luZVwiLCBcIndlaWdodFwiOiAxMjguMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA2NjEsIFwic291cmNlXCI6IFwicG9ydF93aW5lXCIsIFwidGFyZ2V0XCI6IFwid2luZVwiLCBcIndlaWdodFwiOiAxMjguMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA2OTQsIFwic291cmNlXCI6IFwic2hlcnJ5XCIsIFwidGFyZ2V0XCI6IFwid2luZVwiLCBcIndlaWdodFwiOiAxMjguMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAxOTEsIFwic291cmNlXCI6IFwiY2FiZXJuZXRfc2F1dmlnbm9uX3dpbmVcIiwgXCJ0YXJnZXRcIjogXCJ3aW5lXCIsIFwid2VpZ2h0XCI6IDEyOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDYzNywgXCJzb3VyY2VcIjogXCJwaW5lYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDY3LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTg0LCBcInNvdXJjZVwiOiBcIm1lbG9uXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiA2Ny4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDYzMywgXCJzb3VyY2VcIjogXCJwZWFyXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAzOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDYzOSwgXCJzb3VyY2VcIjogXCJwbHVtXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiA2My4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDY2OCwgXCJzb3VyY2VcIjogXCJyYXNwYmVycnlcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDg5LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMTQsIFwic291cmNlXCI6IFwiYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDExNC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDU0MCwgXCJzb3VyY2VcIjogXCJraXdpXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAzOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDYyMSwgXCJzb3VyY2VcIjogXCJvcmFuZ2VcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDY5LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNjA3LCBcInNvdXJjZVwiOiBcIm9saXZlXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiA0Ny4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDE5LCBcInNvdXJjZVwiOiBcImFwcmljb3RcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDcwLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNjAsIFwic291cmNlXCI6IFwiYmFuYW5hXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiA2OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDYxLCBcInNvdXJjZVwiOiBcImJhcnRsZXR0X3BlYXJcIiwgXCJ0YXJnZXRcIjogXCJwZWFyXCIsIFwid2VpZ2h0XCI6IDQ5LjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogMjg0LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDgwLjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogMjEsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJiZWVmXCIsIFwid2VpZ2h0XCI6IDEwMi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDI2OCwgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwiY3VyZWRfcG9ya1wiLCBcIndlaWdodFwiOiA4My4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDMxLCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiY3VyZWRfcG9ya1wiLCBcIndlaWdodFwiOiAxMTUuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA5MSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiY3VyZWRfcG9ya1wiLCBcIndlaWdodFwiOiAxMDMuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAyODUsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcInBvcmtfc2F1c2FnZVwiLCBcIndlaWdodFwiOiA4NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDY0NSwgXCJzb3VyY2VcIjogXCJwb3JrXCIsIFwidGFyZ2V0XCI6IFwicG9ya19zYXVzYWdlXCIsIFwid2VpZ2h0XCI6IDExNS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQ5LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwicG9ya19zYXVzYWdlXCIsIFwid2VpZ2h0XCI6IDExOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDExMSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicG9ya19zYXVzYWdlXCIsIFwid2VpZ2h0XCI6IDEwMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQwMywgXCJzb3VyY2VcIjogXCJjdXJlZF9wb3JrXCIsIFwidGFyZ2V0XCI6IFwicG9ya19zYXVzYWdlXCIsIFwid2VpZ2h0XCI6IDExNS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDYwNCwgXCJzb3VyY2VcIjogXCJtdXR0b25cIiwgXCJ0YXJnZXRcIjogXCJwb3JrX3NhdXNhZ2VcIiwgXCJ3ZWlnaHRcIjogNTIuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAyODcsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfYmVlZlwiLCBcIndlaWdodFwiOiA5OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA4LCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDYyOSwgXCJzb3VyY2VcIjogXCJwZWFudXRcIiwgXCJ0YXJnZXRcIjogXCJyb2FzdGVkX2JlZWZcIiwgXCJ3ZWlnaHRcIjogNzQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogMzY5LCBcInNvdXJjZVwiOiBcImNvZmZlZVwiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfYmVlZlwiLCBcIndlaWdodFwiOiAxMDUuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA2MDksIFwic291cmNlXCI6IFwib25pb25cIiwgXCJ0YXJnZXRcIjogXCJyb2FzdGVkX2JlZWZcIiwgXCJ3ZWlnaHRcIjogMzIuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA2NDcsIFwic291cmNlXCI6IFwicG9ya1wiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfYmVlZlwiLCBcIndlaWdodFwiOiA5Ny4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDUxLCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDEwMi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDExMywgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDE5OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQwNCwgXCJzb3VyY2VcIjogXCJjdXJlZF9wb3JrXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDEwNS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDEyNywgXCJzb3VyY2VcIjogXCJiZWVyXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDEwNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDU4NywgXCJzb3VyY2VcIjogXCJtaWxrXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDc3LjB9LCB7XCJncm91cF9pZF9zXCI6IDgsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDYyOCwgXCJzb3VyY2VcIjogXCJwZWFudXRcIiwgXCJ0YXJnZXRcIjogXCJwZWFudXRfYnV0dGVyXCIsIFwid2VpZ2h0XCI6IDk3LjB9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMTEsIFwibmFtZVwiOiAzNjYsIFwic291cmNlXCI6IFwiY29mZmVlXCIsIFwidGFyZ2V0XCI6IFwicGVhbnV0X2J1dHRlclwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiA4LCBcImdyb3VwX2lkX3RcIjogOCwgXCJuYW1lXCI6IDYzMCwgXCJzb3VyY2VcIjogXCJwZWFudXRcIiwgXCJ0YXJnZXRcIjogXCJyb2FzdGVkX3BlYW51dFwiLCBcIndlaWdodFwiOiA5Ny4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDgsIFwibmFtZVwiOiAzNzAsIFwic291cmNlXCI6IFwiY29mZmVlXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9wZWFudXRcIiwgXCJ3ZWlnaHRcIjogODYuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiA4LCBcIm5hbWVcIjogNjMxLCBcInNvdXJjZVwiOiBcInBlYW51dF9idXR0ZXJcIiwgXCJ0YXJnZXRcIjogXCJyb2FzdGVkX3BlYW51dFwiLCBcIndlaWdodFwiOiAxNDQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDM3NCwgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJ0ZWFcIiwgXCJ3ZWlnaHRcIjogODYuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDM2MywgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJncmVlbl90ZWFcIiwgXCJ3ZWlnaHRcIjogOTMuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiA0LCBcIm5hbWVcIjogMzY3LCBcInNvdXJjZVwiOiBcImNvZmZlZVwiLCBcInRhcmdldFwiOiBcInBvcGNvcm5cIiwgXCJ3ZWlnaHRcIjogMjUuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjMyLCBcInNvdXJjZVwiOiBcInBlYW51dF9idXR0ZXJcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDg4LjB9LCB7XCJncm91cF9pZF9zXCI6IDgsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjc3LCBcInNvdXJjZVwiOiBcInJvYXN0ZWRfcGVhbnV0XCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA4OC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY2OSwgXCJzb3VyY2VcIjogXCJyYXdfYmVlZlwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogOTYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1OTIsIFwic291cmNlXCI6IFwibXVuZ19iZWFuXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU1MSwgXCJzb3VyY2VcIjogXCJsaW1hX2JlYW5cIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDg2LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogODAsIFwic291cmNlXCI6IFwiYmVhblwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogODYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1MzksIFwic291cmNlXCI6IFwia2lkbmV5X2JlYW5cIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDg2LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjcwLCBcInNvdXJjZVwiOiBcInJlZF9iZWFuXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDE0MSwgXCJzb3VyY2VcIjogXCJibGFja19iZWFuXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDYxMSwgXCJzb3VyY2VcIjogXCJvbmlvblwiLCBcInRhcmdldFwiOiBcInNoYWxsb3RcIiwgXCJ3ZWlnaHRcIjogMTIuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2NzUsIFwic291cmNlXCI6IFwicm9hc3RlZF9iZWVmXCIsIFwidGFyZ2V0XCI6IFwic2hhbGxvdFwiLCBcIndlaWdodFwiOiAxMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQ0LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwibXV0dG9uXCIsIFwid2VpZ2h0XCI6IDUyLjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogOTksIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImxhbWJcIiwgXCJ3ZWlnaHRcIjogNTguMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAxMTAsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcInBvcmtfbGl2ZXJcIiwgXCJ3ZWlnaHRcIjogMTYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1NzksIFwic291cmNlXCI6IFwibWF0c3V0YWtlXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMTE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjQyLCBcInNvdXJjZVwiOiBcInBvcmNpbmlcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAxMTcuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1NzgsIFwic291cmNlXCI6IFwibWF0c3V0YWtlXCIsIFwidGFyZ2V0XCI6IFwibXVzaHJvb21cIiwgXCJ3ZWlnaHRcIjogMTE3LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDEyNCwgXCJzb3VyY2VcIjogXCJiZWVyXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMjMuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDMzMywgXCJzb3VyY2VcIjogXCJjb2NvYVwiLCBcInRhcmdldFwiOiBcImthdHN1b2J1c2hpXCIsIFwid2VpZ2h0XCI6IDIzLjB9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAxNDgsIFwic291cmNlXCI6IFwiYmxhY2tfdGVhXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMjYuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA1ODYsIFwic291cmNlXCI6IFwibWlsa1wiLCBcInRhcmdldFwiOiBcInBhcm1lc2FuX2NoZWVzZVwiLCBcIndlaWdodFwiOiA3OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE5MywgXCJzb3VyY2VcIjogXCJjYW1lbWJlcnRfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE2MiwgXCJzb3VyY2VcIjogXCJibHVlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInBhcm1lc2FuX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMzcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMzEsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwYXJtZXNhbl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTM0LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjU0LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcInBhcm1lc2FuX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAzOTcsIFwic291cmNlXCI6IFwiY3JlYW1fY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDUxOCwgXCJzb3VyY2VcIjogXCJncnV5ZXJlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInBhcm1lc2FuX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMzQuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDgsIFwibmFtZVwiOiA2MDYsIFwic291cmNlXCI6IFwibnV0bWVnXCIsIFwidGFyZ2V0XCI6IFwic2VlZFwiLCBcIndlaWdodFwiOiAxMi4wfSwge1wiZ3JvdXBfaWRfc1wiOiA5LCBcImdyb3VwX2lkX3RcIjogOCwgXCJuYW1lXCI6IDQ4OCwgXCJzb3VyY2VcIjogXCJnaW5nZXJcIiwgXCJ0YXJnZXRcIjogXCJzZWVkXCIsIFwid2VpZ2h0XCI6IDEwLjB9LCB7XCJncm91cF9pZF9zXCI6IDgsIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMTQ3LCBcInNvdXJjZVwiOiBcImJsYWNrX3Nlc2FtZV9zZWVkXCIsIFwidGFyZ2V0XCI6IFwiZ2luZ2VyXCIsIFwid2VpZ2h0XCI6IDEwLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMiwgXCJzb3VyY2VcIjogXCJhcHBsZVwiLCBcInRhcmdldFwiOiBcImFwcmljb3RcIiwgXCJ3ZWlnaHRcIjogNzQuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEzLCBcIm5hbWVcIjogNywgXCJzb3VyY2VcIjogXCJhcHBsZVwiLCBcInRhcmdldFwiOiBcImhvbmV5XCIsIFwid2VpZ2h0XCI6IDQxLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMywgXCJzb3VyY2VcIjogXCJhcHBsZVwiLCBcInRhcmdldFwiOiBcImJhbmFuYVwiLCBcIndlaWdodFwiOiA4NS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE5MiwgXCJzb3VyY2VcIjogXCJjYW1lbWJlcnRfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE1NSwgXCJzb3VyY2VcIjogXCJibHVlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImNoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMTYsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJjaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMTYzLCBcInNvdXJjZVwiOiBcImJsdWVfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicHJvdm9sb25lX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMzMuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMzMsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwcm92b2xvbmVfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI1NiwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwcm92b2xvbmVfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE1NywgXCJzb3VyY2VcIjogXCJibHVlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImNyZWFtXCIsIFwid2VpZ2h0XCI6IDI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjIwLCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiY3JlYW1cIiwgXCJ3ZWlnaHRcIjogMjguMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAxNjQsIFwic291cmNlXCI6IFwiYmx1ZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJyb21hbm9fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDIzNCwgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInJvbWFub19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI5LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjU3LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcInJvbWFub19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNjY2LCBcInNvdXJjZVwiOiBcInByb3ZvbG9uZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJyb21hbm9fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE1OSwgXCJzb3VyY2VcIjogXCJibHVlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImZldGFfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDIyMywgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImZldGFfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI0NiwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJmZXRhX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAzOTIsIFwic291cmNlXCI6IFwiY3JlYW1fY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZmV0YV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzgzLCBcInNvdXJjZVwiOiBcImNvdHRhZ2VfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZmV0YV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMTU2LCBcInNvdXJjZVwiOiBcImJsdWVfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiY290dGFnZV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTMxLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjE5LCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiY290dGFnZV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTMxLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjQzLCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcImNvdHRhZ2VfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE1OCwgXCJzb3VyY2VcIjogXCJibHVlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImNyZWFtX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMzAuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMjEsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJjcmVhbV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTMwLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjQ0LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcImNyZWFtX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAxNjEsIFwic291cmNlXCI6IFwiYmx1ZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJtb3p6YXJlbGxhX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMjksIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJtb3p6YXJlbGxhX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyNTIsIFwic291cmNlXCI6IFwiY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwibW96emFyZWxsYV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzk1LCBcInNvdXJjZVwiOiBcImNyZWFtX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcIm1venphcmVsbGFfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDUxNywgXCJzb3VyY2VcIjogXCJncnV5ZXJlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcIm1venphcmVsbGFfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDM4NSwgXCJzb3VyY2VcIjogXCJjb3R0YWdlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcIm1venphcmVsbGFfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDQ5MiwgXCJzb3VyY2VcIjogXCJnb2F0X2NoZWVzZVwiLCBcInRhcmdldFwiOiBcIm1venphcmVsbGFfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDIzMCwgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcIm11bnN0ZXJfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI1MywgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJtdW5zdGVyX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAzOTYsIFwic291cmNlXCI6IFwiY3JlYW1fY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwibXVuc3Rlcl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDQzLCBcInNvdXJjZVwiOiBcImZldGFfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwibXVuc3Rlcl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMTU0LCBcInNvdXJjZVwiOiBcImJsdWVfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTQyLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjI2LCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZ3J1eWVyZV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjQ5LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcImdydXllcmVfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDM5NCwgXCJzb3VyY2VcIjogXCJjcmVhbV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJncnV5ZXJlX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAxNTMsIFwic291cmNlXCI6IFwiYmx1ZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJidXR0ZXJtaWxrXCIsIFwid2VpZ2h0XCI6IDEyLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMTYwLCBcInNvdXJjZVwiOiBcImJsdWVfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZ29hdF9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjI1LCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZ29hdF9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjQ4LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcImdvYXRfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDM5MywgXCJzb3VyY2VcIjogXCJjcmVhbV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJnb2F0X2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAzODQsIFwic291cmNlXCI6IFwiY290dGFnZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJnb2F0X2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMzUsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJyb3F1ZWZvcnRfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI1OCwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJyb3F1ZWZvcnRfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY2LCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJibGFja19iZWFuXCIsIFwid2VpZ2h0XCI6IDg2LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTUwLCBcInNvdXJjZVwiOiBcImxpbWFfYmVhblwiLCBcInRhcmdldFwiOiBcInJlZF9raWRuZXlfYmVhblwiLCBcIndlaWdodFwiOiA5MC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDc3LCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJyZWRfa2lkbmV5X2JlYW5cIiwgXCJ3ZWlnaHRcIjogODYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAxNDAsIFwic291cmNlXCI6IFwiYmxhY2tfYmVhblwiLCBcInRhcmdldFwiOiBcInJlZF9raWRuZXlfYmVhblwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDcyLCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJraWRuZXlfYmVhblwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQ5NiwgXCJzb3VyY2VcIjogXCJncmFwZVwiLCBcInRhcmdldFwiOiBcInJodWJhcmJcIiwgXCJ3ZWlnaHRcIjogOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA5LCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDIwOSwgXCJzb3VyY2VcIjogXCJjYXllbm5lXCIsIFwidGFyZ2V0XCI6IFwicGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMTQ0LCBcInNvdXJjZVwiOiBcImJsYWNrX3BlcHBlclwiLCBcInRhcmdldFwiOiBcInBlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiA5LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDIwOCwgXCJzb3VyY2VcIjogXCJjYXllbm5lXCIsIFwidGFyZ2V0XCI6IFwiZ3JlZW5fYmVsbF9wZXBwZXJcIiwgXCJ3ZWlnaHRcIjogMzYuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAxNDMsIFwic291cmNlXCI6IFwiYmxhY2tfcGVwcGVyXCIsIFwidGFyZ2V0XCI6IFwiZ3JlZW5fYmVsbF9wZXBwZXJcIiwgXCJ3ZWlnaHRcIjogMzYuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiAyMTAsIFwic291cmNlXCI6IFwiY2F5ZW5uZVwiLCBcInRhcmdldFwiOiBcInRhYmFzY29fcGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMTQ1LCBcInNvdXJjZVwiOiBcImJsYWNrX3BlcHBlclwiLCBcInRhcmdldFwiOiBcInRhYmFzY29fcGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogNjM0LCBcInNvdXJjZVwiOiBcInBlcHBlclwiLCBcInRhcmdldFwiOiBcInRhYmFzY29fcGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMjExLCBcInNvdXJjZVwiOiBcImNheWVubmVcIiwgXCJ0YXJnZXRcIjogXCJ0aGFpX3BlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAxNTEsIFwic291cmNlXCI6IFwiYmxhY2tfdGVhXCIsIFwidGFyZ2V0XCI6IFwidG9tYXRvXCIsIFwid2VpZ2h0XCI6IDg0LjB9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogNiwgXCJuYW1lXCI6IDE0OSwgXCJzb3VyY2VcIjogXCJibGFja190ZWFcIiwgXCJ0YXJnZXRcIjogXCJtaW50XCIsIFwid2VpZ2h0XCI6IDI0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1NjMsIFwic291cmNlXCI6IFwibWFja2VyZWxcIiwgXCJ0YXJnZXRcIjogXCJzYWxtb25cIiwgXCJ3ZWlnaHRcIjogNjQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ2MywgXCJzb3VyY2VcIjogXCJmaXNoXCIsIFwidGFyZ2V0XCI6IFwic2FsbW9uXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1MjAsIFwic291cmNlXCI6IFwiaGFkZG9ja1wiLCBcInRhcmdldFwiOiBcInNhbG1vblwiLCBcIndlaWdodFwiOiA2NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTY5LCBcInNvdXJjZVwiOiBcIm1hY2tlcmVsXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA2NS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDcwLCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2ODYsIFwic291cmNlXCI6IFwic2FsbW9uXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA4NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjkyLCBcInNvdXJjZVwiOiBcInNhcmRpbmVcIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDY1LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0NTIsIFwic291cmNlXCI6IFwiZmlzaFwiLCBcInRhcmdldFwiOiBcImhhZGRvY2tcIiwgXCJ3ZWlnaHRcIjogNjQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ1MywgXCJzb3VyY2VcIjogXCJmaXNoXCIsIFwidGFyZ2V0XCI6IFwiaGVycmluZ1wiLCBcIndlaWdodFwiOiA2NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDY2LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJzbW9rZWRfc2FsbW9uXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDQsIFwiZ3JvdXBfaWRfdFwiOiA0LCBcIm5hbWVcIjogMTc0LCBcInNvdXJjZVwiOiBcImJyZWFkXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfYnJlYWRcIiwgXCJ3ZWlnaHRcIjogNTEuMH0sIHtcImdyb3VwX2lkX3NcIjogNCwgXCJncm91cF9pZF90XCI6IDQsIFwibmFtZVwiOiAxNzMsIFwic291cmNlXCI6IFwiYnJlYWRcIiwgXCJ0YXJnZXRcIjogXCJ3aGVhdF9icmVhZFwiLCBcIndlaWdodFwiOiA1MS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDYyNiwgXCJzb3VyY2VcIjogXCJwYXJtZXNhbl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzaGVlcF9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiA2LCBcIm5hbWVcIjogMzE2LCBcInNvdXJjZVwiOiBcImNpbm5hbW9uXCIsIFwidGFyZ2V0XCI6IFwidGFycmFnb25cIiwgXCJ3ZWlnaHRcIjogNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA4LCBcImdyb3VwX2lkX3RcIjogMTEsIFwibmFtZVwiOiAzMzUsIFwic291cmNlXCI6IFwiY29jb251dFwiLCBcInRhcmdldFwiOiBcImNvY29udXRfb2lsXCIsIFwid2VpZ2h0XCI6IDE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAwLCBcIm5hbWVcIjogNjE2LCBcInNvdXJjZVwiOiBcIm9yYW5nZVwiLCBcInRhcmdldFwiOiBcIm9yYW5nZV9wZWVsXCIsIFwid2VpZ2h0XCI6IDE0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNjE1LCBcInNvdXJjZVwiOiBcIm9yYW5nZVwiLCBcInRhcmdldFwiOiBcIm9yYW5nZV9qdWljZVwiLCBcIndlaWdodFwiOiA1NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDYyMiwgXCJzb3VyY2VcIjogXCJvcmFuZ2VcIiwgXCJ0YXJnZXRcIjogXCJ0YW5nZXJpbmVcIiwgXCJ3ZWlnaHRcIjogNjIuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA5LCBcInNvdXJjZVwiOiBcImFwcGxlXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlX2p1aWNlXCIsIFwid2VpZ2h0XCI6IDMwLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNSwgXCJzb3VyY2VcIjogXCJhcHBsZVwiLCBcInRhcmdldFwiOiBcImNoZXJyeVwiLCBcIndlaWdodFwiOiAzMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDE1LCBcInNvdXJjZVwiOiBcImFwcGxlXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiAxMDUuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAxMSwgXCJzb3VyY2VcIjogXCJhcHBsZVwiLCBcInRhcmdldFwiOiBcInBpbmVhcHBsZVwiLCBcIndlaWdodFwiOiA2NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDgsIFwic291cmNlXCI6IFwiYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJtZWxvblwiLCBcIndlaWdodFwiOiA3MS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDEsIFwic291cmNlXCI6IFwiYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJhcHBsZV9icmFuZHlcIiwgXCJ3ZWlnaHRcIjogMTQuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA2LCBcInNvdXJjZVwiOiBcImFwcGxlXCIsIFwidGFyZ2V0XCI6IFwiY2lkZXJcIiwgXCJ3ZWlnaHRcIjogNTkuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAxMywgXCJzb3VyY2VcIjogXCJhcHBsZVwiLCBcInRhcmdldFwiOiBcInF1aW5jZVwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQsIFwic291cmNlXCI6IFwiYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJiYXJ0bGV0dF9wZWFyXCIsIFwid2VpZ2h0XCI6IDQ0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMTAsIFwic291cmNlXCI6IFwiYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJwZWFyXCIsIFwid2VpZ2h0XCI6IDQ0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMTIsIFwic291cmNlXCI6IFwiYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJwbHVtXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTQ0LCBcInNvdXJjZVwiOiBcImxlbW9uXCIsIFwidGFyZ2V0XCI6IFwibWFuZGFyaW5cIiwgXCJ3ZWlnaHRcIjogNTYuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA1NDMsIFwic291cmNlXCI6IFwibGVtb25cIiwgXCJ0YXJnZXRcIjogXCJsaW1lXCIsIFwid2VpZ2h0XCI6IDU4LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTQ2LCBcInNvdXJjZVwiOiBcImxlbW9uXCIsIFwidGFyZ2V0XCI6IFwidGFuZ2VyaW5lXCIsIFwid2VpZ2h0XCI6IDU1LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTQ1LCBcInNvdXJjZVwiOiBcImxlbW9uXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlXCIsIFwid2VpZ2h0XCI6IDY5LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiA2LCBcIm5hbWVcIjogNTQyLCBcInNvdXJjZVwiOiBcImxlbW9uXCIsIFwidGFyZ2V0XCI6IFwibGVtb25ncmFzc1wiLCBcIndlaWdodFwiOiAxMy4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDU1MiwgXCJzb3VyY2VcIjogXCJsaW1lXCIsIFwidGFyZ2V0XCI6IFwibWFuZGFyaW5cIiwgXCJ3ZWlnaHRcIjogNTMuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMzM0LCBcInNvdXJjZVwiOiBcImNvY29hXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDExLCBcIm5hbWVcIjogMzMyLCBcInNvdXJjZVwiOiBcImNvY29hXCIsIFwidGFyZ2V0XCI6IFwiY29mZmVlXCIsIFwid2VpZ2h0XCI6IDk1LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogNjcyLCBcInNvdXJjZVwiOiBcInJlZF93aW5lXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiAxNTUuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA2ODEsIFwic291cmNlXCI6IFwicnVtXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiA5OC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDE5MCwgXCJzb3VyY2VcIjogXCJjYWJlcm5ldF9zYXV2aWdub25fd2luZVwiLCBcInRhcmdldFwiOiBcIndoaXRlX3dpbmVcIiwgXCJ3ZWlnaHRcIjogMTU1LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTg5LCBcInNvdXJjZVwiOiBcImNhYmVybmV0X3NhdXZpZ25vbl93aW5lXCIsIFwidGFyZ2V0XCI6IFwicmVkX3dpbmVcIiwgXCJ3ZWlnaHRcIjogMTY1LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTg4LCBcInNvdXJjZVwiOiBcImNhYmVybmV0X3NhdXZpZ25vbl93aW5lXCIsIFwidGFyZ2V0XCI6IFwicG9ydF93aW5lXCIsIFwid2VpZ2h0XCI6IDEzMy4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDYzOCwgXCJzb3VyY2VcIjogXCJwaW5lYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJ3aGl0ZV93aW5lXCIsIFwid2VpZ2h0XCI6IDYyLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMzEyLCBcInNvdXJjZVwiOiBcImNpZGVyXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiA1OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDMwOCwgXCJzb3VyY2VcIjogXCJjaWRlclwiLCBcInRhcmdldFwiOiBcImNvZ25hY1wiLCBcIndlaWdodFwiOiA1NS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDE3MCwgXCJzb3VyY2VcIjogXCJicmFuZHlcIiwgXCJ0YXJnZXRcIjogXCJ3aGl0ZV93aW5lXCIsIFwid2VpZ2h0XCI6IDE5LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTY2LCBcInNvdXJjZVwiOiBcImJyYW5keVwiLCBcInRhcmdldFwiOiBcImNoYW1wYWduZV93aW5lXCIsIFwid2VpZ2h0XCI6IDE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogNjYwLCBcInNvdXJjZVwiOiBcInBvcnRfd2luZVwiLCBcInRhcmdldFwiOiBcIndoaXRlX3dpbmVcIiwgXCJ3ZWlnaHRcIjogMTM1LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogNjU4LCBcInNvdXJjZVwiOiBcInBvcnRfd2luZVwiLCBcInRhcmdldFwiOiBcInJlZF93aW5lXCIsIFwid2VpZ2h0XCI6IDEzMy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDIxNCwgXCJzb3VyY2VcIjogXCJjaGFtcGFnbmVfd2luZVwiLCBcInRhcmdldFwiOiBcIndoaXRlX3dpbmVcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMjEyLCBcInNvdXJjZVwiOiBcImNoYW1wYWduZV93aW5lXCIsIFwidGFyZ2V0XCI6IFwiY29nbmFjXCIsIFwid2VpZ2h0XCI6IDgyLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogNzA1LCBcInNvdXJjZVwiOiBcIndoaXNrZXlcIiwgXCJ0YXJnZXRcIjogXCJ3aGl0ZV93aW5lXCIsIFwid2VpZ2h0XCI6IDcyLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTI5LCBcInNvdXJjZVwiOiBcImJlZXJcIiwgXCJ0YXJnZXRcIjogXCJ3aGl0ZV93aW5lXCIsIFwid2VpZ2h0XCI6IDExOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDEyMSwgXCJzb3VyY2VcIjogXCJiZWVyXCIsIFwidGFyZ2V0XCI6IFwiY2lkZXJcIiwgXCJ3ZWlnaHRcIjogNTAuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDExLCBcIm5hbWVcIjogMTIzLCBcInNvdXJjZVwiOiBcImJlZXJcIiwgXCJ0YXJnZXRcIjogXCJjb2ZmZWVcIiwgXCJ3ZWlnaHRcIjogMTAxLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTI4LCBcInNvdXJjZVwiOiBcImJlZXJcIiwgXCJ0YXJnZXRcIjogXCJydW1cIiwgXCJ3ZWlnaHRcIjogMTAzLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMTI1LCBcInNvdXJjZVwiOiBcImJlZXJcIiwgXCJ0YXJnZXRcIjogXCJtaWxrXCIsIFwid2VpZ2h0XCI6IDc4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDEyMiwgXCJzb3VyY2VcIjogXCJiZWVyXCIsIFwidGFyZ2V0XCI6IFwiY29jb2FcIiwgXCJ3ZWlnaHRcIjogOTQuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAzNzksIFwic291cmNlXCI6IFwiY29nbmFjXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiAxMDcuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA1OTYsIFwic291cmNlXCI6IFwibXVzY2F0X2dyYXBlXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiA4MC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDY5MywgXCJzb3VyY2VcIjogXCJzaGVycnlcIiwgXCJ0YXJnZXRcIjogXCJ3aGl0ZV93aW5lXCIsIFwid2VpZ2h0XCI6IDEzOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDE4LCBcInNvdXJjZVwiOiBcImFwcGxlX2JyYW5keVwiLCBcInRhcmdldFwiOiBcIndoaXRlX3dpbmVcIiwgXCJ3ZWlnaHRcIjogMTcuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA2NDgsIFwic291cmNlXCI6IFwicG9ya1wiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfcG9ya1wiLCBcIndlaWdodFwiOiAxMTUuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAxMTUsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfcG9ya1wiLCBcIndlaWdodFwiOiAxMDAuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA4NywgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiY2hpY2tlblwiLCBcIndlaWdodFwiOiA5OC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogOCwgXCJuYW1lXCI6IDEwNiwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicGVhbnV0XCIsIFwid2VpZ2h0XCI6IDcyLjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDkwLCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJjb2ZmZWVcIiwgXCJ3ZWlnaHRcIjogMTAyLjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDEwNywgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicGVhbnV0X2J1dHRlclwiLCBcIndlaWdodFwiOiA5OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA4OSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiY2xhbVwiLCBcIndlaWdodFwiOiA0OC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDEwNCwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwib25pb25cIiwgXCJ3ZWlnaHRcIjogMzAuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogOTIsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImVlbFwiLCBcIndlaWdodFwiOiA0OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDEwOSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiA5Ny4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogOCwgXCJuYW1lXCI6IDExNCwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9wZWFudXRcIiwgXCJ3ZWlnaHRcIjogOTkuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA1MiwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfcG9ya1wiLCBcIndlaWdodFwiOiAxMTUuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAyNiwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcImNoaWNrZW5cIiwgXCJ3ZWlnaHRcIjogODQuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA0OCwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogMTE1LjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNDA1LCBcInNvdXJjZVwiOiBcImN1cmVkX3BvcmtcIiwgXCJ0YXJnZXRcIjogXCJyb2FzdGVkX3BvcmtcIiwgXCJ3ZWlnaHRcIjogMTE1LjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNDAyLCBcInNvdXJjZVwiOiBcImN1cmVkX3BvcmtcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDExNS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDI4OCwgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9wb3JrXCIsIFwid2VpZ2h0XCI6IDgxLjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNjU3LCBcInNvdXJjZVwiOiBcInBvcmtfc2F1c2FnZVwiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfcG9ya1wiLCBcIndlaWdodFwiOiAxMTUuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA2NTYsIFwic291cmNlXCI6IFwicG9ya19zYXVzYWdlXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDEwMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY3NiwgXCJzb3VyY2VcIjogXCJyb2FzdGVkX2JlZWZcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDEwMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2NzQsIFwic291cmNlXCI6IFwicm9hc3RlZF9iZWVmXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiA1MC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiA1MTYsIFwic291cmNlXCI6IFwiZ3JlZW5fdGVhXCIsIFwidGFyZ2V0XCI6IFwidmFuaWxsYVwiLCBcIndlaWdodFwiOiA0NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDYsIFwibmFtZVwiOiA1MTAsIFwic291cmNlXCI6IFwiZ3JlZW5fdGVhXCIsIFwidGFyZ2V0XCI6IFwicGVwcGVybWludFwiLCBcIndlaWdodFwiOiAzMy4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDMwMiwgXCJzb3VyY2VcIjogXCJjaGl2ZVwiLCBcInRhcmdldFwiOiBcIm9uaW9uXCIsIFwid2VpZ2h0XCI6IDE3LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzAwLCBcInNvdXJjZVwiOiBcImNoaXZlXCIsIFwidGFyZ2V0XCI6IFwibGVla1wiLCBcIndlaWdodFwiOiAxMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQ3NCwgXCJzb3VyY2VcIjogXCJnYXJsaWNcIiwgXCJ0YXJnZXRcIjogXCJvbmlvblwiLCBcIndlaWdodFwiOiAxNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQ3NiwgXCJzb3VyY2VcIjogXCJnYXJsaWNcIiwgXCJ0YXJnZXRcIjogXCJyb2FzdGVkX2JlZWZcIiwgXCJ3ZWlnaHRcIjogMTEuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA2MDMsIFwic291cmNlXCI6IFwibXV0dG9uXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiA1Mi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA0MTIsIFwic291cmNlXCI6IFwiZWdnXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDQyLjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDI2LCBcInNvdXJjZVwiOiBcImVub2tpZGFrZVwiLCBcInRhcmdldFwiOiBcIm1hdHN1dGFrZVwiLCBcIndlaWdodFwiOiAxMTcuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0MzYsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMTE3LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDI4LCBcInNvdXJjZVwiOiBcImVub2tpZGFrZVwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDExNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU5NywgXCJzb3VyY2VcIjogXCJtdXNocm9vbVwiLCBcInRhcmdldFwiOiBcInBvcmNpbmlcIiwgXCJ3ZWlnaHRcIjogMTE3LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjAwLCBcInNvdXJjZVwiOiBcIm11c2hyb29tXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMTE3LjB9LCB7XCJncm91cF9pZF9zXCI6IDQsIFwiZ3JvdXBfaWRfdFwiOiA0LCBcIm5hbWVcIjogMTcyLCBcInNvdXJjZVwiOiBcImJyZWFkXCIsIFwidGFyZ2V0XCI6IFwicnllX2JyZWFkXCIsIFwid2VpZ2h0XCI6IDUxLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNjI3LCBcInNvdXJjZVwiOiBcInBhcm1lc2FuX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInN3aXNzX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjkuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA2MjQsIFwic291cmNlXCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicHJvdm9sb25lX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjkuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA2MjUsIFwic291cmNlXCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicm9tYW5vX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMzEuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDYsIFwibmFtZVwiOiAzMTMsIFwic291cmNlXCI6IFwiY2lubmFtb25cIiwgXCJ0YXJnZXRcIjogXCJmZW5uZWxcIiwgXCJ3ZWlnaHRcIjogMTAuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiAzMTUsIFwic291cmNlXCI6IFwiY2lubmFtb25cIiwgXCJ0YXJnZXRcIjogXCJudXRtZWdcIiwgXCJ3ZWlnaHRcIjogMjAuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAzMTQsIFwic291cmNlXCI6IFwiY2lubmFtb25cIiwgXCJ0YXJnZXRcIjogXCJndWF2YVwiLCBcIndlaWdodFwiOiAyNS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA5LCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDQ4NCwgXCJzb3VyY2VcIjogXCJnaW5nZXJcIiwgXCJ0YXJnZXRcIjogXCJudXRtZWdcIiwgXCJ3ZWlnaHRcIjogMjIuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDYsIFwibmFtZVwiOiA0ODYsIFwic291cmNlXCI6IFwiZ2luZ2VyXCIsIFwidGFyZ2V0XCI6IFwicm9zZW1hcnlcIiwgXCJ3ZWlnaHRcIjogMTcuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDYsIFwibmFtZVwiOiA0ODMsIFwic291cmNlXCI6IFwiZ2luZ2VyXCIsIFwidGFyZ2V0XCI6IFwibWFyam9yYW1cIiwgXCJ3ZWlnaHRcIjogMTguMH0sIHtcImdyb3VwX2lkX3NcIjogMTMsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTIzLCBcInNvdXJjZVwiOiBcImhvbmV5XCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiA0MC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU3MCwgXCJzb3VyY2VcIjogXCJtYWx0XCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA1OC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI2MiwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzd2lzc19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNjY3LCBcInNvdXJjZVwiOiBcInByb3ZvbG9uZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzd2lzc19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzkxLCBcInNvdXJjZVwiOiBcImNyZWFtXCIsIFwidGFyZ2V0XCI6IFwic3dpc3NfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNjc4LCBcInNvdXJjZVwiOiBcInJvbWFub19jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzd2lzc19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDQ3LCBcInNvdXJjZVwiOiBcImZldGFfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwic3dpc3NfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDQ0NSwgXCJzb3VyY2VcIjogXCJmZXRhX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInByb3ZvbG9uZV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDQ2LCBcInNvdXJjZVwiOiBcImZldGFfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicm9tYW5vX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjguMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA0NDQsIFwic291cmNlXCI6IFwiZmV0YV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwYXJtZXNhbl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDQxLCBcInNvdXJjZVwiOiBcImZldGFfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZ29hdF9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDQyLCBcInNvdXJjZVwiOiBcImZldGFfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwibW96emFyZWxsYV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzg5LCBcInNvdXJjZVwiOiBcImNvdHRhZ2VfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwic3dpc3NfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDM4NywgXCJzb3VyY2VcIjogXCJjb3R0YWdlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInByb3ZvbG9uZV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzg4LCBcInNvdXJjZVwiOiBcImNvdHRhZ2VfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicm9tYW5vX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAzODIsIFwic291cmNlXCI6IFwiY290dGFnZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJjcmVhbV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTMwLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzg2LCBcInNvdXJjZVwiOiBcImNvdHRhZ2VfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDQwMSwgXCJzb3VyY2VcIjogXCJjcmVhbV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzd2lzc19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzk4LCBcInNvdXJjZVwiOiBcImNyZWFtX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInByb3ZvbG9uZV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzk5LCBcInNvdXJjZVwiOiBcImNyZWFtX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInJvbWFub19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDAwLCBcInNvdXJjZVwiOiBcImNyZWFtX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInJvcXVlZm9ydF9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMTY1LCBcInNvdXJjZVwiOiBcImJsdWVfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwic3dpc3NfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzNC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDU5MSwgXCJzb3VyY2VcIjogXCJtb3p6YXJlbGxhX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInN3aXNzX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjkuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA1ODksIFwic291cmNlXCI6IFwibW96emFyZWxsYV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwcm92b2xvbmVfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDU5MCwgXCJzb3VyY2VcIjogXCJtb3p6YXJlbGxhX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInJvbWFub19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNTg4LCBcInNvdXJjZVwiOiBcIm1venphcmVsbGFfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDU5NSwgXCJzb3VyY2VcIjogXCJtdW5zdGVyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInN3aXNzX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA1OTQsIFwic291cmNlXCI6IFwibXVuc3Rlcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwcm92b2xvbmVfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDU5MywgXCJzb3VyY2VcIjogXCJtdW5zdGVyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInBhcm1lc2FuX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMzksIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzd2lzc19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNTE5LCBcInNvdXJjZVwiOiBcImdydXllcmVfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwic3dpc3NfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE4NywgXCJzb3VyY2VcIjogXCJidXR0ZXJtaWxrXCIsIFwidGFyZ2V0XCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTIuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA0OTQsIFwic291cmNlXCI6IFwiZ29hdF9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwcm92b2xvbmVfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDQ5NSwgXCJzb3VyY2VcIjogXCJnb2F0X2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInJvbWFub19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTMwLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDkzLCBcInNvdXJjZVwiOiBcImdvYXRfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDc1LCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJtdW5nX2JlYW5cIiwgXCJ3ZWlnaHRcIjogODYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA3MywgXCJzb3VyY2VcIjogXCJiZWFuXCIsIFwidGFyZ2V0XCI6IFwibGltYV9iZWFuXCIsIFwid2VpZ2h0XCI6IDg2LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMTM5LCBcInNvdXJjZVwiOiBcImJsYWNrX2JlYW5cIiwgXCJ0YXJnZXRcIjogXCJsaW1hX2JlYW5cIiwgXCJ3ZWlnaHRcIjogODYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAxMzgsIFwic291cmNlXCI6IFwiYmxhY2tfYmVhblwiLCBcInRhcmdldFwiOiBcImtpZG5leV9iZWFuXCIsIFwid2VpZ2h0XCI6IDg2LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTM4LCBcInNvdXJjZVwiOiBcImtpZG5leV9iZWFuXCIsIFwidGFyZ2V0XCI6IFwibGltYV9iZWFuXCIsIFwid2VpZ2h0XCI6IDg3LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMzgxLCBcInNvdXJjZVwiOiBcImNvbmNvcmRfZ3JhcGVcIiwgXCJ0YXJnZXRcIjogXCJncmFwZVwiLCBcIndlaWdodFwiOiAxMjUuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiA2MzUsIFwic291cmNlXCI6IFwicGVwcGVyXCIsIFwidGFyZ2V0XCI6IFwidGhhaV9wZXBwZXJcIiwgXCJ3ZWlnaHRcIjogMzYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiA1MDcsIFwic291cmNlXCI6IFwiZ3JlZW5fYmVsbF9wZXBwZXJcIiwgXCJ0YXJnZXRcIjogXCJ0aGFpX3BlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDUwNSwgXCJzb3VyY2VcIjogXCJncmVlbl9iZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcInBlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDUwNiwgXCJzb3VyY2VcIjogXCJncmVlbl9iZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcInRhYmFzY29fcGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMTQyLCBcInNvdXJjZVwiOiBcImJsYWNrX3BlcHBlclwiLCBcInRhcmdldFwiOiBcImNheWVubmVcIiwgXCJ3ZWlnaHRcIjogMzYuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiAxNDYsIFwic291cmNlXCI6IFwiYmxhY2tfcGVwcGVyXCIsIFwidGFyZ2V0XCI6IFwidGhhaV9wZXBwZXJcIiwgXCJ3ZWlnaHRcIjogMzYuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiA3MDMsIFwic291cmNlXCI6IFwidGFiYXNjb19wZXBwZXJcIiwgXCJ0YXJnZXRcIjogXCJ0aGFpX3BlcHBlclwiLCBcIndlaWdodFwiOiAzOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDEzMywgXCJzb3VyY2VcIjogXCJiZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcImNheWVubmVcIiwgXCJ3ZWlnaHRcIjogMzYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiAxMzcsIFwic291cmNlXCI6IFwiYmVsbF9wZXBwZXJcIiwgXCJ0YXJnZXRcIjogXCJ0aGFpX3BlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDEzMSwgXCJzb3VyY2VcIjogXCJiZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcImJsYWNrX3BlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDEzNSwgXCJzb3VyY2VcIjogXCJiZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcInBlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDEzNiwgXCJzb3VyY2VcIjogXCJiZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcInRhYmFzY29fcGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM3LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDEzMiwgXCJzb3VyY2VcIjogXCJiZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcImJsYWNrX3RlYVwiLCBcIndlaWdodFwiOiA0MS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDEzNCwgXCJzb3VyY2VcIjogXCJiZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcImdyZWVuX2JlbGxfcGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDYsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDYyLCBcInNvdXJjZVwiOiBcImJhc2lsXCIsIFwidGFyZ2V0XCI6IFwiYmxhY2tfdGVhXCIsIFwid2VpZ2h0XCI6IDExLjB9LCB7XCJncm91cF9pZF9zXCI6IDYsIFwiZ3JvdXBfaWRfdFwiOiA2LCBcIm5hbWVcIjogNjQsIFwic291cmNlXCI6IFwiYmFzaWxcIiwgXCJ0YXJnZXRcIjogXCJyb3NlbWFyeVwiLCBcIndlaWdodFwiOiAxMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogNCwgXCJuYW1lXCI6IDE4MiwgXCJzb3VyY2VcIjogXCJicm93bl9yaWNlXCIsIFwidGFyZ2V0XCI6IFwicmljZVwiLCBcIndlaWdodFwiOiA3NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDU0LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiA2NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDY0LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2ODQsIFwic291cmNlXCI6IFwic2FsbW9uXCIsIFwidGFyZ2V0XCI6IFwic21va2VkX3NhbG1vblwiLCBcIndlaWdodFwiOiA4NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjgyLCBcInNvdXJjZVwiOiBcInNhbG1vblwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNjQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDMzOSwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJmaXNoXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzNDQsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwiaGFkZG9ja1wiLCBcIndlaWdodFwiOiA2NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMzU3LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcInNtb2tlZF9zYWxtb25cIiwgXCJ3ZWlnaHRcIjogNjUuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDM1NCwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJzYWxtb25cIiwgXCJ3ZWlnaHRcIjogNjUuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDM1NSwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1MjEsIFwic291cmNlXCI6IFwiaGFkZG9ja1wiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNjQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDE5NCwgXCJzb3VyY2VcIjogXCJjYXRmaXNoXCIsIFwidGFyZ2V0XCI6IFwiZmlzaFwiLCBcIndlaWdodFwiOiA2NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMTk1LCBcInNvdXJjZVwiOiBcImNhdGZpc2hcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1MjIsIFwic291cmNlXCI6IFwiaGVycmluZ1wiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNjQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDIwNSwgXCJzb3VyY2VcIjogXCJjYXZpYXJcIiwgXCJ0YXJnZXRcIjogXCJzbW9rZWRfc2FsbW9uXCIsIFwid2VpZ2h0XCI6IDE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2ODgsIFwic291cmNlXCI6IFwic2FyZGluZVwiLCBcInRhcmdldFwiOiBcInNtb2tlZF9zYWxtb25cIiwgXCJ3ZWlnaHRcIjogNjQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMTUyLCBcInNvdXJjZVwiOiBcImJsYWNrX3RlYVwiLCBcInRhcmdldFwiOiBcInZhbmlsbGFcIiwgXCJ3ZWlnaHRcIjogNDUuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDE1MCwgXCJzb3VyY2VcIjogXCJibGFja190ZWFcIiwgXCJ0YXJnZXRcIjogXCJ0ZWFcIiwgXCJ3ZWlnaHRcIjogMTcxLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMzkwLCBcInNvdXJjZVwiOiBcImNyYW5iZXJyeVwiLCBcInRhcmdldFwiOiBcImp1bmlwZXJfYmVycnlcIiwgXCJ3ZWlnaHRcIjogNTQuMH0sIHtcImdyb3VwX2lkX3NcIjogMCwgXCJncm91cF9pZF90XCI6IDExLCBcIm5hbWVcIjogNTQ5LCBcInNvdXJjZVwiOiBcImxlbW9uX3BlZWxcIiwgXCJ0YXJnZXRcIjogXCJ0ZWFcIiwgXCJ3ZWlnaHRcIjogOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA2LCBcImdyb3VwX2lkX3RcIjogMTEsIFwibmFtZVwiOiA2MzYsIFwic291cmNlXCI6IFwicGVwcGVybWludFwiLCBcInRhcmdldFwiOiBcInRlYVwiLCBcIndlaWdodFwiOiAyOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMiwgXCJncm91cF9pZF90XCI6IDEyLCBcIm5hbWVcIjogNDcxLCBcInNvdXJjZVwiOiBcImZsb3dlclwiLCBcInRhcmdldFwiOiBcImxhdmVuZGVyXCIsIFwid2VpZ2h0XCI6IDUuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiAwLCBcInNvdXJjZVwiOiBcImFuaXNlXCIsIFwidGFyZ2V0XCI6IFwiY2lubmFtb25cIiwgXCJ3ZWlnaHRcIjogMTAuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA2MDUsIFwic291cmNlXCI6IFwibmVjdGFyaW5lXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiA0MC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU0MSwgXCJzb3VyY2VcIjogXCJsZWVrXCIsIFwidGFyZ2V0XCI6IFwic2hhbGxvdFwiLCBcIndlaWdodFwiOiAxMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQxNywgXCJzb3VyY2VcIjogXCJlbW1lbnRhbF9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwb3RhdG9cIiwgXCJ3ZWlnaHRcIjogNDQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDU2NCwgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNjUuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQwNiwgXCJzb3VyY2VcIjogXCJlZWxcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDY1LjB9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzNjQsIFwic291cmNlXCI6IFwiY29mZmVlXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMzIuMH1dLCBcIm5vZGVzXCI6IFt7XCJncm91cF9pZFwiOiAwLCBcIm5hbWVcIjogXCJvcmFuZ2VfcGVlbFwiLCBcInNpemVcIjogMS4wMTI0MjUyMTg1OTE4MDg2fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY2hlcnJ5XCIsIFwic2l6ZVwiOiAxLjkxODY1MTk4NzY4MDk3OTh9LCB7XCJncm91cF9pZFwiOiAyLCBcIm5hbWVcIjogXCJyb2FzdGVkX3BvcmtcIiwgXCJzaXplXCI6IDAuMjIxMjQ2NzY5Nzk3MTYwOTN9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJtYXRzdXRha2VcIiwgXCJzaXplXCI6IDAuMDk5MTE4NTUyODY5MTI4MTJ9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJvcmFuZ2VfanVpY2VcIiwgXCJzaXplXCI6IDMuMDA4OTU2MDY5MjQxMzg5fSwge1wiZ3JvdXBfaWRcIjogNCwgXCJuYW1lXCI6IFwicnllX2JyZWFkXCIsIFwic2l6ZVwiOiAwLjE2MTA2NzY0ODQxMjMzMzE4fSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwid2hpdGVfd2luZVwiLCBcInNpemVcIjogMy44MzM3NjQwMjcwNDUyMDQ3fSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwiZmVubmVsXCIsIFwic2l6ZVwiOiAxLjYwNTM2NjU2MTY0ODJ9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJwaW5lYXBwbGVcIiwgXCJzaXplXCI6IDIuODYwMjc4MjM5OTM3Njk3fSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwiY2hpY2tlblwiLCBcInNpemVcIjogOS4zNzAyNDMxOTQ0NDkzNjJ9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJwb3JjaW5pXCIsIFwic2l6ZVwiOiAwLjE4NzYxNzI2MDc4Nzk5MjQ4fSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwibWlsa1wiLCBcInNpemVcIjogMjIuODIzODE2NzcyMjc1MTIzfSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwicmF3X2JlZWZcIiwgXCJzaXplXCI6IDAuMDAzNTM5OTQ4MzE2NzU0NTc1fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiZ3JhcGVcIiwgXCJzaXplXCI6IDAuNjEwNjQxMDg0NjQwMTY0M30sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImNhbWVtYmVydF9jaGVlc2VcIiwgXCJzaXplXCI6IDAuMDIxMjM5Njg5OTAwNTI3NDU0fSwge1wiZ3JvdXBfaWRcIjogOCwgXCJuYW1lXCI6IFwicGVhbnV0XCIsIFwic2l6ZVwiOiAwLjgwMTc5ODI5Mzc0NDkxMTN9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJjYXllbm5lXCIsIFwic2l6ZVwiOiAxNC4wNzEyOTQ1NTkwOTk0Mzd9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJjb2duYWNcIiwgXCJzaXplXCI6IDAuMTE2ODE4Mjk0NDUyOTAxfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwibWVsb25cIiwgXCJzaXplXCI6IDAuMjc3ODg1OTQyODY1MjM0MTZ9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJtdW5nX2JlYW5cIiwgXCJzaXplXCI6IDAuMDMzNjI5NTA5MDA5MTY4NDY2fSwge1wiZ3JvdXBfaWRcIjogNCwgXCJuYW1lXCI6IFwicmljZVwiLCBcInNpemVcIjogNi4wMDkwNjIyNjc2OTA4OTJ9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwibWFja2VyZWxcIiwgXCJzaXplXCI6IDAuMDc3ODc4ODYyOTY4NjAwNjV9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJ0aGFpX3BlcHBlclwiLCBcInNpemVcIjogMC4xNTM5ODc3NTE3Nzg4MjQwNH0sIHtcImdyb3VwX2lkXCI6IDExLCBcIm5hbWVcIjogXCJjb2ZmZWVcIiwgXCJzaXplXCI6IDEuMjY3MzAxNDk3Mzk4MTM4fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY2l0cnVzXCIsIFwic2l6ZVwiOiAwLjI4ODUwNTc4NzgxNTQ5Nzg1fSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwibGltYV9iZWFuXCIsIFwic2l6ZVwiOiAwLjI2MzcyNjE0OTU5ODIxNTl9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJibGFja19wZXBwZXJcIiwgXCJzaXplXCI6IDE3LjI2MDc4Nzk5MjQ5NTMxfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwiYmVhblwiLCBcInNpemVcIjogMy4zNjgyNjA4MjMzOTE5Nzg0fSwge1wiZ3JvdXBfaWRcIjogMTEsIFwibmFtZVwiOiBcInBlYW51dF9idXR0ZXJcIiwgXCJzaXplXCI6IDEuNzYxMTI0Mjg3NTg1NDAxNH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcImtpZG5leV9iZWFuXCIsIFwic2l6ZVwiOiAwLjc4MjMyODU3ODAwMjc2MTF9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJhcHBsZV9icmFuZHlcIiwgXCJzaXplXCI6IDAuMDY1NDg5MDQzODU5OTU5NjR9LCB7XCJncm91cF9pZFwiOiA0LCBcIm5hbWVcIjogXCJicmVhZFwiLCBcInNpemVcIjogOC4wNTg2OTIzNDMwOTE3OX0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImp1bmlwZXJfYmVycnlcIiwgXCJzaXplXCI6IDAuMDU4NDA5MTQ3MjI2NDUwNX0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJjbGFtXCIsIFwic2l6ZVwiOiAwLjgxNTk1ODA4NzAxMTkyOTZ9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJvbmlvblwiLCBcInNpemVcIjogMzEuOTE0NDA0MDQ5NzAwODc0fSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwiY2lkZXJcIiwgXCJzaXplXCI6IDEuOTgyMzcxMDU3MzgyNTYyNH0sIHtcImdyb3VwX2lkXCI6IDAsIFwibmFtZVwiOiBcImNpdHJ1c19wZWVsXCIsIFwic2l6ZVwiOiAwLjAwNzA3OTg5NjYzMzUwOTE1fSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcImVlbFwiLCBcInNpemVcIjogMC4wMzUzOTk0ODMxNjc1NDU3Nn0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcIm51dG1lZ1wiLCBcInNpemVcIjogNC40NDYxNzUwODU4NDM3NDY1fSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwicm9zZW1hcnlcIiwgXCJzaXplXCI6IDMuMzQ1MjUxMTU5MzMzMDczNn0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcInZhbmlsbGFcIiwgXCJzaXplXCI6IDE1Ljk3NDAxNjc3OTM1NTAyMn0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcInBvcmtcIiwgXCJzaXplXCI6IDMuNDc2MjI5MjQ3MDUyOTkyN30sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInJlZF9iZWFuXCIsIFwic2l6ZVwiOiAwLjA1ODQwOTE0NzIyNjQ1MDV9LCB7XCJncm91cF9pZFwiOiAxMSwgXCJuYW1lXCI6IFwidGVhXCIsIFwic2l6ZVwiOiAwLjE3ODc2NzM4OTk5NjEwNjA2fSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcImZpc2hcIiwgXCJzaXplXCI6IDMuMzI1NzgxNDQzNTkwOTIzNn0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcImJhY29uXCIsIFwic2l6ZVwiOiAzLjgxNjA2NDI4NTQ2MTQzMjZ9LCB7XCJncm91cF9pZFwiOiAxMiwgXCJuYW1lXCI6IFwibGF2ZW5kZXJcIiwgXCJzaXplXCI6IDAuMTA5NzM4Mzk3ODE5MzkxODN9LCB7XCJncm91cF9pZFwiOiA2LCBcIm5hbWVcIjogXCJwZXBwZXJtaW50XCIsIFwic2l6ZVwiOiAwLjI1MTMzNjMzMDQ4OTU3NDl9LCB7XCJncm91cF9pZFwiOiA4LCBcIm5hbWVcIjogXCJibGFja19zZXNhbWVfc2VlZFwiLCBcInNpemVcIjogMC4wNDYwMTkzMjgxMTc4MDk0OH0sIHtcImdyb3VwX2lkXCI6IDYsIFwibmFtZVwiOiBcImxlbW9uZ3Jhc3NcIiwgXCJzaXplXCI6IDAuMjQyNDg2NDU5Njk3Njg4NDJ9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJndWF2YVwiLCBcInNpemVcIjogMC4wMjMwMDk2NjQwNTg5MDQ3NH0sIHtcImdyb3VwX2lkXCI6IDgsIFwibmFtZVwiOiBcInJvYXN0ZWRfcGVhbnV0XCIsIFwic2l6ZVwiOiAwLjI5MjA0NTczNjEzMjI1MjV9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwiaGFkZG9ja1wiLCBcInNpemVcIjogMC4wNTQ4NjkxOTg5MDk2OTU5Mn0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcIm1hbmRhcmluXCIsIFwic2l6ZVwiOiAwLjQ5MjA1MjgxNjAyODg4Nn0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcInF1aW5jZVwiLCBcInNpemVcIjogMC4wNDk1NTkyNzY0MzQ1NjQwNn0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImJhcnRsZXR0X3BlYXJcIiwgXCJzaXplXCI6IDAuMDQwNzA5NDA1NjQyNjc3NjJ9LCB7XCJncm91cF9pZFwiOiAwLCBcIm5hbWVcIjogXCJsZW1vbl9wZWVsXCIsIFwic2l6ZVwiOiAxLjI2NTUzMTUyMzIzOTc2MDZ9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJwZXBwZXJcIiwgXCJzaXplXCI6IDE2LjAzNTk2NTg3NDg5ODIyNH0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcInJ1bVwiLCBcInNpemVcIjogMS4wNjU1MjQ0NDMzNDMxMjd9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJwZWFyXCIsIFwic2l6ZVwiOiAwLjgyODM0NzkwNjEyMDU3MDd9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJjaGFtcGFnbmVfd2luZVwiLCBcInNpemVcIjogMC4xNzUyMjc0NDE2NzkzNTE1fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwicmFzcGJlcnJ5XCIsIFwic2l6ZVwiOiAxLjM4NzY1OTc0MDE2Nzc5MzV9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwic21va2VkX3NhbG1vblwiLCBcInNpemVcIjogMC4xNzE2ODc0OTMzNjI1OTY5fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY29uY29yZF9ncmFwZVwiLCBcInNpemVcIjogMC4wMjEyMzk2ODk5MDA1Mjc0NTR9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJibGFja19iZWFuXCIsIFwic2l6ZVwiOiAwLjgzODk2Nzc1MTA3MDgzNDN9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJwbHVtXCIsIFwic2l6ZVwiOiAwLjQ5MDI4Mjg0MTg3MDUwODd9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJicmFuZHlcIiwgXCJzaXplXCI6IDAuNjk5MTM5NzkyNTU5MDI4N30sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcInN3aXNzX2NoZWVzZVwiLCBcInNpemVcIjogMC45MjM5MjY1MTA2NzI5NDQyfSwge1wiZ3JvdXBfaWRcIjogOSwgXCJuYW1lXCI6IFwiY2lubmFtb25cIiwgXCJzaXplXCI6IDkuOTE3MTY1MjA5Mzg3OTQyfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwiYmx1ZV9jaGVlc2VcIiwgXCJzaXplXCI6IDAuNjk5MTM5NzkyNTU5MDI4N30sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcInBvcGNvcm5cIiwgXCJzaXplXCI6IDAuMTcxNjg3NDkzMzYyNTk2OX0sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwic2l6ZVwiOiA1LjM2MTI1MTcyNTcyNDgwNH0sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImNoZWVzZVwiLCBcInNpemVcIjogNS44MDkwNTUxODc3OTQyNTh9LCB7XCJncm91cF9pZFwiOiA2LCBcIm5hbWVcIjogXCJtYXJqb3JhbVwiLCBcInNpemVcIjogMC45MzQ1NDYzNTU2MjMyMDh9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJhcHBsZVwiLCBcInNpemVcIjogNC4yNzk3OTc1MTQ5NTYyODE1fSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwicm9xdWVmb3J0X2NoZWVzZVwiLCBcInNpemVcIjogMC4wNDA3MDk0MDU2NDI2Nzc2Mn0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcInRhYmFzY29fcGVwcGVyXCIsIFwic2l6ZVwiOiAxLjcwODAyNTA2MjgzNDA4MjV9LCB7XCJncm91cF9pZFwiOiAxMSwgXCJuYW1lXCI6IFwiY29jb2FcIiwgXCJzaXplXCI6IDguNDk3NjQ1OTM0MzY5MzU3fSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwic295YmVhblwiLCBcInNpemVcIjogMS44MzAxNTMyNzk3NjIxMTU2fSwge1wiZ3JvdXBfaWRcIjogMTEsIFwibmFtZVwiOiBcImJsYWNrX3RlYVwiLCBcInNpemVcIjogMC4wNjcyNTkwMTgwMTgzMzY5M30sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcIndoaXRlX2JyZWFkXCIsIFwic2l6ZVwiOiAwLjY1NDg5MDQzODU5OTU5NjV9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwiaGVycmluZ1wiLCBcInNpemVcIjogMC4wMTc2OTk3NDE1ODM3NzI4OH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImxpbWVcIiwgXCJzaXplXCI6IDEuOTE2ODgyMDEzNTIyNjAyM30sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcInByb3ZvbG9uZV9jaGVlc2VcIiwgXCJzaXplXCI6IDAuMjk1NTg1Njg0NDQ5MDA3MDd9LCB7XCJncm91cF9pZFwiOiAyLCBcIm5hbWVcIjogXCJiZWVmXCIsIFwic2l6ZVwiOiA4LjUzNDgxNTM5MTY5NTI4fSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwicm9tYW5vX2NoZWVzZVwiLCBcInNpemVcIjogMC40ODY3NDI4OTM1NTM3NTQxNn0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInNoaWl0YWtlXCIsIFwic2l6ZVwiOiAwLjkwNDQ1Njc5NDkzMDc5Mzl9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJhbmlzZVwiLCBcInNpemVcIjogMC4zOTQ3MDQyMzczMTgxMzUyfSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcImNhdmlhclwiLCBcInNpemVcIjogMC4wNDYwMTkzMjgxMTc4MDk0OH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcImN1cmVkX3BvcmtcIiwgXCJzaXplXCI6IDAuNTU1NzcxODg1NzMwNDY4M30sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImJ1dHRlcm1pbGtcIiwgXCJzaXplXCI6IDIuODkwMzY3ODAwNjMwMTEwNn0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcImJlZXJcIiwgXCJzaXplXCI6IDAuNTM2MzAyMTY5OTg4MzE4MX0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImdyYXBlZnJ1aXRcIiwgXCJzaXplXCI6IDAuMjA3MDg2OTc2NTMwMTQyNjl9LCB7XCJncm91cF9pZFwiOiA0LCBcIm5hbWVcIjogXCJicm93bl9yaWNlXCIsIFwic2l6ZVwiOiAwLjU5NjQ4MTI5MTM3MzE0Nn0sIHtcImdyb3VwX2lkXCI6IDYsIFwibmFtZVwiOiBcImJhc2lsXCIsIFwic2l6ZVwiOiA2LjY4ODczMjM0NDUwNzc3fSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwicm9hc3RlZF9iZWVmXCIsIFwic2l6ZVwiOiAwLjM5MjkzNDI2MzE1OTc1Nzl9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJraXdpXCIsIFwic2l6ZVwiOiAwLjE4NTg0NzI4NjYyOTYxNTIyfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwiZ3JlZW5fYmVsbF9wZXBwZXJcIiwgXCJzaXplXCI6IDQuNTYyOTkzMzgwMjk2NjQ3fSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwibXVzaHJvb21cIiwgXCJzaXplXCI6IDUuODcxMDA0MjgzMzM3NDYzfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwic2hhbGxvdFwiLCBcInNpemVcIjogMi4xMDA5NTkzMjU5OTM4NDA0fSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwicmVkX3dpbmVcIiwgXCJzaXplXCI6IDIuNDY1NTc0MDAyNjE5NTYxNn0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcInRhbmdlcmluZVwiLCBcInNpemVcIjogMC4wNzc4Nzg4NjI5Njg2MDA2NX0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcIm9yYW5nZVwiLCBcInNpemVcIjogMy4wMjQ4ODU4MzY2NjY3ODQ2fSwge1wiZ3JvdXBfaWRcIjogOSwgXCJuYW1lXCI6IFwiZ2luZ2VyXCIsIFwic2l6ZVwiOiA2Ljc1NDIyMTM4ODM2NzczfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwiY3JlYW1fY2hlZXNlXCIsIFwic2l6ZVwiOiA1LjAyNDk1NjYzNTYzMzEyfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwib2xpdmVcIiwgXCJzaXplXCI6IDMuMTgwNjQzNTYyNjAzOTg2fSwge1wiZ3JvdXBfaWRcIjogMTEsIFwibmFtZVwiOiBcImxpbWVfcGVlbF9vaWxcIiwgXCJzaXplXCI6IDAuMTc2OTk3NDE1ODM3NzI4Nzd9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJncnV5ZXJlX2NoZWVzZVwiLCBcInNpemVcIjogMC4wNzc4Nzg4NjI5Njg2MDA2NX0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImFwcmljb3RcIiwgXCJzaXplXCI6IDEuMDk3MzgzOTc4MTkzOTE4NX0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcIm1hbHRcIiwgXCJzaXplXCI6IDAuMDY1NDg5MDQzODU5OTU5NjR9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJlbm9raWRha2VcIiwgXCJzaXplXCI6IDAuMTg3NjE3MjYwNzg3OTkyNDh9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJwYXJtZXNhbl9jaGVlc2VcIiwgXCJzaXplXCI6IDUuNjA1NTA4MTU5NTgwODd9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJiYW5hbmFcIiwgXCJzaXplXCI6IDEuNzQxNjU0NTcxODQzMjUxfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwic3RyYXdiZXJyeVwiLCBcInNpemVcIjogMS45MDgwMzIxNDI3MzA3MTYzfSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwicG9ya19saXZlclwiLCBcInNpemVcIjogMC4wMDg4NDk4NzA3OTE4ODY0NH0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcIndoaXNrZXlcIiwgXCJzaXplXCI6IDAuMjYxOTU2MTc1NDM5ODM4NTd9LCB7XCJncm91cF9pZFwiOiA4LCBcIm5hbWVcIjogXCJjb2NvbnV0XCIsIFwic2l6ZVwiOiAzLjAyNjY1NTgxMDgyNTE2Mn0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcIm11dHRvblwiLCBcInNpemVcIjogMC4wMDUzMDk5MjI0NzUxMzE4NjM0fSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwicG9ydF93aW5lXCIsIFwic2l6ZVwiOiAwLjA4NjcyODczMzc2MDQ4NzA5fSwge1wiZ3JvdXBfaWRcIjogMTMsIFwibmFtZVwiOiBcImhvbmV5XCIsIFwic2l6ZVwiOiA0LjM5NDg0NTgzNTI1MDgwNTV9LCB7XCJncm91cF9pZFwiOiA4LCBcIm5hbWVcIjogXCJzZWVkXCIsIFwic2l6ZVwiOiAyLjMyMzk3NjA2OTk0OTM3ODh9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJyZWRfa2lkbmV5X2JlYW5cIiwgXCJzaXplXCI6IDAuMTA0NDI4NDc1MzQ0MjU5OTd9LCB7XCJncm91cF9pZFwiOiA2LCBcIm5hbWVcIjogXCJtaW50XCIsIFwic2l6ZVwiOiAxLjY0OTYxNTkxNTYwNzYzMjJ9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJjcmVhbVwiLCBcInNpemVcIjogMTcuOTY4Nzc3NjU1ODQ2MjI1fSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwibGFtYlwiLCBcInNpemVcIjogMC44MzU0Mjc4MDI3NTQwNzk4fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwibGVtb25cIiwgXCJzaXplXCI6IDUuMzkxMzQxMjg2NDE3MjE4NX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInJodWJhcmJcIiwgXCJzaXplXCI6IDAuMjk5MTI1NjMyNzY1NzYxNn0sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImNvdHRhZ2VfY2hlZXNlXCIsIFwic2l6ZVwiOiAwLjYxNTk1MTAwNzExNTI5NjJ9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwiY2F0ZmlzaFwiLCBcInNpemVcIjogMC4xMjAzNTgyNDI3Njk2NTU1N30sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImdvYXRfY2hlZXNlXCIsIFwic2l6ZVwiOiAwLjQ1ODQyMzMwNzAxOTcxNzU2fSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwic2hlcnJ5XCIsIFwic2l6ZVwiOiAxLjExNTA4MzcxOTc3NzY5MTN9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJsZWVrXCIsIFwic2l6ZVwiOiAwLjcyNzQ1OTM3OTA5MzA2NTJ9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJiZWxsX3BlcHBlclwiLCBcInNpemVcIjogMTAuMzQ5MDM4OTA0MDMyMDAxfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY3JhbmJlcnJ5XCIsIFwic2l6ZVwiOiAxLjYyMTI5NjMyOTA3MzU5NTZ9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwic2FsbW9uXCIsIFwic2l6ZVwiOiAwLjc2ODE2ODc4NDczNTc0Mjl9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJjaGl2ZVwiLCBcInNpemVcIjogMi4zMjc1MTYwMTgyNjYxMzN9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJzaGVlcF9jaGVlc2VcIiwgXCJzaXplXCI6IDAuMDAzNTM5OTQ4MzE2NzU0NTc1fSwge1wiZ3JvdXBfaWRcIjogMTIsIFwibmFtZVwiOiBcImZsb3dlclwiLCBcInNpemVcIjogMC4wNTMwOTkyMjQ3NTEzMTg2MjZ9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJnYXJsaWNcIiwgXCJzaXplXCI6IDI5LjkwMDE3MzQ1NzQ2NzUyfSwge1wiZ3JvdXBfaWRcIjogMTEsIFwibmFtZVwiOiBcImdyZWVuX3RlYVwiLCBcInNpemVcIjogMC4wNTY2MzkxNzMwNjgwNzMyfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwibW96emFyZWxsYV9jaGVlc2VcIiwgXCJzaXplXCI6IDIuMjgzMjY2NjY0MzA2NzAxfSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcInR1bmFcIiwgXCJzaXplXCI6IDAuNzg0MDk4NTUyMTYxMTM4NH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcIm5lY3RhcmluZVwiLCBcInNpemVcIjogMC4wODg0OTg3MDc5MTg4NjQzOH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcInBvcmtfc2F1c2FnZVwiLCBcInNpemVcIjogMi40MTA3MDQ4MDM3MDk4NjZ9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJ0b21hdG9cIiwgXCJzaXplXCI6IDE3LjUzODY3MzkzNTM2MDU0Mn0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJjb2RcIiwgXCJzaXplXCI6IDAuMzA3OTc1NTAzNTU3NjQ4MX0sIHtcImdyb3VwX2lkXCI6IDYsIFwibmFtZVwiOiBcInRhcnJhZ29uXCIsIFwic2l6ZVwiOiAwLjg0MjUwNzY5OTM4NzU4OX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInBvdGF0b1wiLCBcInNpemVcIjogNi4yNzQ1NTgzOTE0NDc0ODV9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJmZXRhX2NoZWVzZVwiLCBcInNpemVcIjogMS4wOTkxNTM5NTIzNTIyOTU1fSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwiZW1tZW50YWxfY2hlZXNlXCIsIFwic2l6ZVwiOiAwLjAwMTc2OTk3NDE1ODM3NzI4NzV9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJjYWJlcm5ldF9zYXV2aWdub25fd2luZVwiLCBcInNpemVcIjogMC4wMzAwODk1NjA2OTI0MTM4OX0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcIndoZWF0X2JyZWFkXCIsIFwic2l6ZVwiOiAwLjE0NjkwNzg1NTE0NTMxNDg4fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwibXVzY2F0X2dyYXBlXCIsIFwic2l6ZVwiOiAwLjAwMTc2OTk3NDE1ODM3NzI4NzV9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJtdW5zdGVyX2NoZWVzZVwiLCBcInNpemVcIjogMC4wNDc3ODkzMDIyNzYxODY3N30sIHtcImdyb3VwX2lkXCI6IDExLCBcIm5hbWVcIjogXCJjb2NvbnV0X29pbFwiLCBcInNpemVcIjogMC4wMzAwODk1NjA2OTI0MTM4OX0sIHtcImdyb3VwX2lkXCI6IDEzLCBcIm5hbWVcIjogXCJlZ2dcIiwgXCJzaXplXCI6IDM3LjA4MjcyODU5MjE2MjU1fSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwid2luZVwiLCBcInNpemVcIjogMS41NTIyNjczMzY4OTY4ODEzfSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcImthdHN1b2J1c2hpXCIsIFwic2l6ZVwiOiAwLjA4NjcyODczMzc2MDQ5OTk3fSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcInNhcmRpbmVcIiwgXCJzaXplXCI6IDAuMH1dfVxuZXhwb3J0IGRlZmF1bHQgZmxhdm9yRGF0YTsiLCJjb25zdCB1bWFtaURhdGEgPSB7XCJsaW5rc1wiOiBbe1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDIwLCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiYmVhblwiLCBcIndlaWdodFwiOiAwLjkxNTEyMDY0NzU2NTIwNjN9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogMjEsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJiZWVmXCIsIFwid2VpZ2h0XCI6IDE3LjE4MDk4NTg2OTI2MDE5OH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDQsIFwibmFtZVwiOiAyMiwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcImJyb3duX3JpY2VcIiwgXCJ3ZWlnaHRcIjogMC4yMDcxMTYwMjIwOTk0NDc1Mn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjMsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJjYXZpYXJcIiwgXCJ3ZWlnaHRcIjogMS4wNTU3MzQ4MDY2Mjk4MzQ0fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI0LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMS4xODE5ODc5OTU4MTUwNTQ4fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI1LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDQuMjE4MTkzNDE5NTgzMTE2fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDI2LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiY2hpY2tlblwiLCBcIndlaWdodFwiOiAxOC4xOTM5Njk1NjUyMjAwM30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyNywgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcImNoaXZlXCIsIFwid2VpZ2h0XCI6IDAuMzUzODk3NDY4ODQyMzQ4NzR9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDI4LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiY2xhbVwiLCBcIndlaWdodFwiOiAyLjU0ODIxODQyNDc3MTkzOX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjksIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJjb2RcIiwgXCJ3ZWlnaHRcIjogNDQuNzc2NTU1OTQ0MzYxMX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDExLCBcIm5hbWVcIjogMzAsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJjb2ZmZWVcIiwgXCJ3ZWlnaHRcIjogMC4zNDg5NjM2Mzg2OTk3MzAyNH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEzLCBcIm5hbWVcIjogMzIsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJlZ2dcIiwgXCJ3ZWlnaHRcIjogMC4yOTY3NDcyNjk2OTAzNTA3Nn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzMywgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcImVub2tpZGFrZVwiLCBcIndlaWdodFwiOiA2Ni42MjA4NjY3NzcxMjY0Mn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMzQsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJmaXNoXCIsIFwid2VpZ2h0XCI6IDIxLjQzNjc1MjczODI2MjE3NX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzNSwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcImdhcmxpY1wiLCBcIndlaWdodFwiOiAyLjUzMzk4NjIyMjQzNzQ2MjN9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMzYsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJnaW5nZXJcIiwgXCJ3ZWlnaHRcIjogMC4yMjU2MTc4ODUxMzQyNjd9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMzcsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJncmFwZWZydWl0XCIsIFwid2VpZ2h0XCI6IDAuMzQwMzI5NDM1OTUwMTQ3NzV9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDM4LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiZ3JlZW5fdGVhXCIsIFwid2VpZ2h0XCI6IDMuMTUyNjEyNjE3MjQyNzA5fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzOSwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcImthdHN1b2J1c2hpXCIsIFwid2VpZ2h0XCI6IDEwLjEzODU5ODc2NTI3OTI4fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0MCwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcIm1hY2tlcmVsXCIsIFwid2VpZ2h0XCI6IDMyLjE5NjYxNjE0MjkwODY5NX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA0MSwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcIm1hbmRhcmluXCIsIFwid2VpZ2h0XCI6IDAuMTcxMzQ1NzUzNTY1NDYzMjJ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNDIsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJtZWxvblwiLCBcIndlaWdodFwiOiAxLjE5NzU4MjQyMzIzMDExN30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0MywgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDEuOTkwNjk1NjE4NjU2MDQ1Nn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0NSwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcIm9uaW9uXCIsIFwid2VpZ2h0XCI6IDAuNDAzNjQ2OTIyNzgwNDE4OX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA0NiwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcIm9yYW5nZVwiLCBcIndlaWdodFwiOiAwLjI3OTg5MDAxNjcwMzA3MDh9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDcsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJwb3JjaW5pXCIsIFwid2VpZ2h0XCI6IDEuMzk4NjM2MDAxNTQxODIyfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQ4LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAzNi40NjQ5Nzg2OTYzMTc2NDR9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTAsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJwb3RhdG9cIiwgXCJ3ZWlnaHRcIjogMC41MDExNzIyOTg1OTk1MTE3fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1MywgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcInNhbG1vblwiLCBcIndlaWdodFwiOiAwLjMwMzk0MjQzODY0ODMzNjF9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDU0LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiAyNTEuMTQxMTAwMzQ2OTA5OTh9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTUsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAyNTEuMTQxMTAwMzQ2OTA5OTh9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTYsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDUuOTcyMTA2NDg0MzU1MzZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTcsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDAuMTkzNTQ3OTg5MjA3MjQ2NTZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTgsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJ0b21hdG9cIiwgXCJ3ZWlnaHRcIjogMS45MzE5ODMwMzk5NTg4ODQ3fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1OSwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogOTEuNjE2NzU3MzMyNzQ3NjV9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNjUsIFwic291cmNlXCI6IFwiYmVhblwiLCBcInRhcmdldFwiOiBcImJlZWZcIiwgXCJ3ZWlnaHRcIjogNi4zMjMwOTk1MDEzMTQzNzl9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNjcsIFwic291cmNlXCI6IFwiYmVhblwiLCBcInRhcmdldFwiOiBcImNoaWNrZW5cIiwgXCJ3ZWlnaHRcIjogNi42OTU5MDY3ODY3MzQ2Njc1fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2OCwgXCJzb3VyY2VcIjogXCJiZWFuXCIsIFwidGFyZ2V0XCI6IFwiY29kXCIsIFwid2VpZ2h0XCI6IDE2LjQ3OTA2NzA3NTQ3NzIxOH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2OSwgXCJzb3VyY2VcIjogXCJiZWFuXCIsIFwidGFyZ2V0XCI6IFwiZW5va2lkYWtlXCIsIFwid2VpZ2h0XCI6IDI0LjUxODQwNDk3OTg0ODcyNX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNzAsIFwic291cmNlXCI6IFwiYmVhblwiLCBcInRhcmdldFwiOiBcImZpc2hcIiwgXCJ3ZWlnaHRcIjogNy44ODkzNDQ3NDMxMTA1ODh9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDcxLCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiAzLjczMTI5NzQ1MTk5NjgyMjd9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDc0LCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiAxMS44NDkyODU1NDMxMjM2NDJ9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNzYsIFwic291cmNlXCI6IFwiYmVhblwiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogMTMuNDIwMTY2MzYwOTIyMjExfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA3OCwgXCJzb3VyY2VcIjogXCJiZWFuXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiA5Mi40MjcxODU0MDQwODU4Mn0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA3OSwgXCJzb3VyY2VcIjogXCJiZWFuXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogOTIuNDI3MTg1NDA0MDg1ODJ9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogODAsIFwic291cmNlXCI6IFwiYmVhblwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMi4xOTc5MDc4Mzk1MzcxMzZ9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDgxLCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDMzLjcxNzYxNTMzNDI0MDUxfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogNCwgXCJuYW1lXCI6IDgzLCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJicm93bl9yaWNlXCIsIFwid2VpZ2h0XCI6IDEuNDMxMDg0NzY0MTA4MDIzM30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogODQsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImNhdmlhclwiLCBcIndlaWdodFwiOiA3LjI5NDY4NDMwOTc0OTA5MX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA4NSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogOC4xNjcwNDA4NDUxNDE5MTJ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogODYsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImNoZWVzZVwiLCBcIndlaWdodFwiOiAyOS4xNDU5NDU3MDUzODY0NTZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogODcsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImNoaWNrZW5cIiwgXCJ3ZWlnaHRcIjogNS4wNTg0NjU4MzM2NTU0MzN9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogODgsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImNoaXZlXCIsIFwid2VpZ2h0XCI6IDIuNDQ1MjgyOTQxMzMzNzMxfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA4OSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiY2xhbVwiLCBcIndlaWdodFwiOiAxNy42MDcxMTk1NTcxNzAxNTh9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDkwLCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJjb2ZmZWVcIiwgXCJ3ZWlnaHRcIjogMi40MTExOTIyNDYzMDA5MzQ1fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTMsIFwibmFtZVwiOiA5MywgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiZWdnXCIsIFwid2VpZ2h0XCI6IDIuMDUwMzk5MDU3MjAzODMzM30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA5NCwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiZW5va2lkYWtlXCIsIFwid2VpZ2h0XCI6IDYuODY4NTUwNjIxODM5MTN9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogOTUsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImdhcmxpY1wiLCBcIndlaWdodFwiOiAxNy41MDg3ODEwMTM4MDYzMTd9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogOTYsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImdpbmdlclwiLCBcIndlaWdodFwiOiAxLjU1ODkyNDg3MDQ4MTAxMTV9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogOTcsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImdyYXBlZnJ1aXRcIiwgXCJ3ZWlnaHRcIjogMi4zNTE1MzM1Mjk5OTM1Mzk2fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTEsIFwibmFtZVwiOiA5OCwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiZ3JlZW5fdGVhXCIsIFwid2VpZ2h0XCI6IDIxLjc4MzIyOTY5ODY4Nzc4fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAxMDAsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcIm1hY2tlcmVsXCIsIFwid2VpZ2h0XCI6IDEuNTg0NDkyODkxNzU1NjA5NH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAxMDEsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcIm1hbmRhcmluXCIsIFwid2VpZ2h0XCI6IDEuMTgzOTI3MjI1MTIwMjQ1N30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAxMDIsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcIm1lbG9uXCIsIFwid2VpZ2h0XCI6IDguMjc0NzkxNzkxOTQyMDAyfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDEwMywgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwibXVzaHJvb21cIiwgXCJ3ZWlnaHRcIjogMTMuNzU0ODcxMDE4NDY0MTA1fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDEwNCwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwib25pb25cIiwgXCJ3ZWlnaHRcIjogMi43ODkwMzA3ODI5MTQ0MzN9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMTA1LCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJvcmFuZ2VcIiwgXCJ3ZWlnaHRcIjogMS45MzM5MjI1MTU4NDE3Nzc3fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDEwOCwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicG9yY2luaVwiLCBcIndlaWdodFwiOiA5LjY2Mzk4NzYxNDUyODQ3NX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAxMDksIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogMS43NzkwMTAzODY5NDI3NDQ3fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDExMiwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicG90YXRvXCIsIFwid2VpZ2h0XCI6IDMuNDYyODkwMTg4MDYyNzE4NX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMTE2LCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJzYWxtb25cIiwgXCJ3ZWlnaHRcIjogMi4xMDAxMTQ2NTQxMjY2NjJ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMTE3LCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAzMy40OTc2NDQ3NzkzMzI2Mn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAxMTgsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogNC41MjkwNzY2NzUyMTM0NDE1fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDExOSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAxLjMzNzMzNTM1Mjc2NzgzMTh9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMTIwLCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJ0b21hdG9cIiwgXCJ3ZWlnaHRcIjogMTMuMzQ5MTkxNzQ3NTczODJ9LCB7XCJncm91cF9pZF9zXCI6IDQsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogMTc1LCBcInNvdXJjZVwiOiBcImJyb3duX3JpY2VcIiwgXCJ0YXJnZXRcIjogXCJjaGlja2VuXCIsIFwid2VpZ2h0XCI6IDEuNTE1NDYwOTE5NTA0OTk5NX0sIHtcImdyb3VwX2lkX3NcIjogNCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMTc2LCBcInNvdXJjZVwiOiBcImJyb3duX3JpY2VcIiwgXCJ0YXJnZXRcIjogXCJjb2RcIiwgXCJ3ZWlnaHRcIjogMy43Mjk2NDkwMTM2NzIzOTc3fSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDE3NywgXCJzb3VyY2VcIjogXCJicm93bl9yaWNlXCIsIFwidGFyZ2V0XCI6IFwiZW5va2lkYWtlXCIsIFwid2VpZ2h0XCI6IDUuNTQ5MTYzOTUwMzA2MDN9LCB7XCJncm91cF9pZF9zXCI6IDQsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDE3OCwgXCJzb3VyY2VcIjogXCJicm93bl9yaWNlXCIsIFwidGFyZ2V0XCI6IFwiZmlzaFwiLCBcIndlaWdodFwiOiAxLjc4NTU2NzUxNDUyNTgwNzJ9LCB7XCJncm91cF9pZF9zXCI6IDQsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDE3OSwgXCJzb3VyY2VcIjogXCJicm93bl9yaWNlXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMC44NDQ0OTEzNjU3OTI2NDAxfSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAxODAsIFwic291cmNlXCI6IFwiYnJvd25fcmljZVwiLCBcInRhcmdldFwiOiBcIm1hY2tlcmVsXCIsIFwid2VpZ2h0XCI6IDIuNjgxODA2OTIxMjQyNDY5fSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDE4MSwgXCJzb3VyY2VcIjogXCJicm93bl9yaWNlXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAzLjAzNzMzODgyNTE5NDYwMn0sIHtcImdyb3VwX2lkX3NcIjogNCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMTgzLCBcInNvdXJjZVwiOiBcImJyb3duX3JpY2VcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDIwLjkxODcxODIzMjA0NDJ9LCB7XCJncm91cF9pZF9zXCI6IDQsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMTg0LCBcInNvdXJjZVwiOiBcImJyb3duX3JpY2VcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAyMC45MTg3MTgyMzIwNDQyfSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDE4NSwgXCJzb3VyY2VcIjogXCJicm93bl9yaWNlXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiAwLjQ5NzQ0NDcxMzg0OTgwNTI2fSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAxODYsIFwic291cmNlXCI6IFwiYnJvd25fcmljZVwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogNy42MzExODg3MTk1Mjg1MTF9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDE5NiwgXCJzb3VyY2VcIjogXCJjYXZpYXJcIiwgXCJ0YXJnZXRcIjogXCJjaGlja2VuXCIsIFwid2VpZ2h0XCI6IDcuNzI0Nzc1ODI2NTY3NzM4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMTk3LCBcInNvdXJjZVwiOiBcImNhdmlhclwiLCBcInRhcmdldFwiOiBcImNvZFwiLCBcIndlaWdodFwiOiAxOS4wMTExODE0NjQwNTg2NjZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDE5OCwgXCJzb3VyY2VcIjogXCJjYXZpYXJcIiwgXCJ0YXJnZXRcIjogXCJlbm9raWRha2VcIiwgXCJ3ZWlnaHRcIjogMjguMjg1ODE1MjE5MTY1NTd9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAxOTksIFwic291cmNlXCI6IFwiY2F2aWFyXCIsIFwidGFyZ2V0XCI6IFwiZmlzaFwiLCBcIndlaWdodFwiOiA5LjEwMTU5MzE4MjIzNzE4MX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDIwMCwgXCJzb3VyY2VcIjogXCJjYXZpYXJcIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiA0LjMwNDYzNTI0NjEyMDk5ODV9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyMDEsIFwic291cmNlXCI6IFwiY2F2aWFyXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogMTMuNjcwMDA0MjkzODEwODQzfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAyMDIsIFwic291cmNlXCI6IFwiY2F2aWFyXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAxNS40ODIyNjEwMjgyOTY2ODN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyMDMsIFwic291cmNlXCI6IFwiY2F2aWFyXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiAxMDYuNjI5MjE1NDY5NjEzMjZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDIwNCwgXCJzb3VyY2VcIjogXCJjYXZpYXJcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAxMDYuNjI5MjE1NDY5NjEzMjZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDIwNiwgXCJzb3VyY2VcIjogXCJjYXZpYXJcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDIuNTM1NjMwNDgxMjI0MTY3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjA3LCBcInNvdXJjZVwiOiBcImNhdmlhclwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogMzguODk4NTQzMjY4MTcyODY1fSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDIxNywgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImNoaWNrZW5cIiwgXCJ3ZWlnaHRcIjogOC42NDg1NjYxMzYxNDIxNjd9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDIxOCwgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImNvZFwiLCBcIndlaWdodFwiOiAyMS4yODQ2OTAxODUxMzQ2MDh9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjIyLCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZW5va2lkYWtlXCIsIFwid2VpZ2h0XCI6IDMxLjY2ODQ1ODYyMzI2Mzk1NX0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjI0LCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZmlzaFwiLCBcIndlaWdodFwiOiAxMC4xOTAwMzQyOTMzMDc2MTJ9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDIyNywgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImthdHN1b2J1c2hpXCIsIFwid2VpZ2h0XCI6IDQuODE5NDE3ODY0NTI5NDg0fSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyMjgsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiAxNS4zMDQ3NzI0NDUyNzM3MjN9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogMjMyLCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAxNy4zMzM3NTMyOTU0MzE3ODR9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDIzNiwgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMTE5LjM4MDc4NzU3NzMyMDUyfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDIzNywgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDExOS4zODA3ODc1NzczMjA1Mn0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyMzgsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDIuODM4ODYxMzk5NDgwNzU1N30sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjQwLCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA0My41NTAzNDEzNDQxOTEwN30sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAyNDEsIFwic291cmNlXCI6IFwiY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiY2hpY2tlblwiLCBcIndlaWdodFwiOiAzMC44NjQzNzgzOTc2NDAyNH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjQyLCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcImNvZFwiLCBcIndlaWdodFwiOiA3NS45NTkyNjU1NzE4MDQwMn0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyNDUsIFwic291cmNlXCI6IFwiY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZW5va2lkYWtlXCIsIFwid2VpZ2h0XCI6IDExMy4wMTYxMDg2NjI2NTg1Mn0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjQ3LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcImZpc2hcIiwgXCJ3ZWlnaHRcIjogMzYuMzY1NDU4NjYyNDc3MDR9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDI1MCwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiAxNy4xOTkxOTA1MTE1NDI2MzJ9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDI1MSwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiA1NC42MTg1NjY4OTM2MTE3Mn0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAyNTUsIFwic291cmNlXCI6IFwiY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiA2MS44NTk0NDcyNTg2NDA0M30sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjU5LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNDI2LjAzNzUzNTM3Nzg5NDY0fSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDI2MCwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiA0MjYuMDM3NTM1Mzc3ODk0NjR9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjYxLCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMTAuMTMxMTIzNTk1ODM3MjEzfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyNjMsIFwic291cmNlXCI6IFwiY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiAxNTUuNDE5MzEzODQxNjY4OTJ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjY0LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJjaGl2ZVwiLCBcIndlaWdodFwiOiAyLjU4OTQ1NTc5NDQxODQ2N30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjY1LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJjbGFtXCIsIFwid2VpZ2h0XCI6IDE4LjY0NTIyNzkxNjAyNDAxfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyNjYsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcImNvZFwiLCBcIndlaWdodFwiOiAxMy4xODMyMTc3ODAyMTgzNzZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDI2NywgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwiY29mZmVlXCIsIFwid2VpZ2h0XCI6IDIuNTUzMzU1MTI2MzU0MTQ5fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTMsIFwibmFtZVwiOiAyNjksIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcImVnZ1wiLCBcIndlaWdodFwiOiAyLjE3MTI4OTcyMjY3MzQ0NzZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjcwLCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJlbm9raWRha2VcIiwgXCJ3ZWlnaHRcIjogMTkuNjE0NjcwNTk5NTIzMzY1fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyNzEsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcImZpc2hcIiwgXCJ3ZWlnaHRcIjogNi4zMTE0NTg2MTY4NzkwMDl9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjcyLCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJnYXJsaWNcIiwgXCJ3ZWlnaHRcIjogMTguNTQxMDkxMzczNTMwNzgzfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDI3MywgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwiZ2luZ2VyXCIsIFwid2VpZ2h0XCI6IDEuNjUwODM4NDI0NzQ2MTkzMX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAyNzQsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcImdyYXBlZnJ1aXRcIiwgXCJ3ZWlnaHRcIjogMi40OTAxNzg5NTcyNDE1OTJ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDI3NSwgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwiZ3JlZW5fdGVhXCIsIFwid2VpZ2h0XCI6IDIzLjA2NzU1OTc1MzkwMjk5NH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjc2LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiAyLjk4NTAyOTgzNzM3NzcwMzZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDI3NywgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogOS40Nzk0MDI2MzQ4NDA1MDZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMjc4LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJtYW5kYXJpblwiLCBcIndlaWdodFwiOiAxLjI1MzczMTA3NjAzODY5MjR9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMjc5LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJtZWxvblwiLCBcIndlaWdodFwiOiA4Ljc2MjY3MDAzMzQxNjg4N30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyODAsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDE0LjU2NTg1MjQyNDc1NjA0N30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyODEsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcIm9uaW9uXCIsIFwid2VpZ2h0XCI6IDIuOTUzNDcwODY0MDY3MDA5OH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAyODIsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcIm9yYW5nZVwiLCBcIndlaWdodFwiOiAyLjA0Nzk0NTc3MzQ1MzY5NH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyODMsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcInBvcmNpbmlcIiwgXCJ3ZWlnaHRcIjogMTAuMjMzNzcyMjU3MDM3ODU0fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDI4NCwgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAxMC43MzYxMDM4Njg3NzI4NDd9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjg2LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJwb3RhdG9cIiwgXCJ3ZWlnaHRcIjogMy42NjcwNjA3MzYxMzgzNjd9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDI4OSwgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwic2FsbW9uXCIsIFwid2VpZ2h0XCI6IDIuMjIzOTM2NTMwMjY3MjQ1fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyOTAsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNzMuOTQxNTQ3MDc5OTI3Njd9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjkxLCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiA3My45NDE1NDcwNzk5Mjc2N30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyOTIsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogNC43OTYxMDkxMjk4NDk5Mn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAyOTMsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcInN0cmF3YmVycnlcIiwgXCJ3ZWlnaHRcIjogMS40MTYxODQwODIzMjgxMjQ0fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDI5NCwgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwidG9tYXRvXCIsIFwid2VpZ2h0XCI6IDE0LjEzNjI1NDQ3NDc5MDY1Nn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjk1LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDI2Ljk3NDAxODg1MzQzMzgzN30sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjk2LCBcInNvdXJjZVwiOiBcImNoaXZlXCIsIFwidGFyZ2V0XCI6IFwiY29kXCIsIFwid2VpZ2h0XCI6IDYuMzcyODIxMDUwODc1ODM2fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDI5NywgXCJzb3VyY2VcIjogXCJjaGl2ZVwiLCBcInRhcmdldFwiOiBcImVub2tpZGFrZVwiLCBcIndlaWdodFwiOiA5LjQ4MTgxMTQ4MDgyMDk4fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyOTgsIFwic291cmNlXCI6IFwiY2hpdmVcIiwgXCJ0YXJnZXRcIjogXCJmaXNoXCIsIFwid2VpZ2h0XCI6IDMuMDUwOTg0NzQ0ODQyMTYzNn0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjk5LCBcInNvdXJjZVwiOiBcImNoaXZlXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMS40NDI5NzU1NTQzOTU5NDYyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzMDEsIFwic291cmNlXCI6IFwiY2hpdmVcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiA0LjU4MjM4MTc1NzQ4NjEyN30sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAzMDMsIFwic291cmNlXCI6IFwiY2hpdmVcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDUuMTg5ODc2MjQxMTM4MTMxfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzMDQsIFwic291cmNlXCI6IFwiY2hpdmVcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDM1Ljc0MzY0NDM1MzA3NzIyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDMwNSwgXCJzb3VyY2VcIjogXCJjaGl2ZVwiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDM1Ljc0MzY0NDM1MzA3NzIyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDMwNiwgXCJzb3VyY2VcIjogXCJjaGl2ZVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMC44NDk5Nzk3NTIxMDIwNTY5fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzMDcsIFwic291cmNlXCI6IFwiY2hpdmVcIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDEzLjAzOTM1MDMzNDc3MzY4M30sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDMyMiwgXCJzb3VyY2VcIjogXCJjbGFtXCIsIFwidGFyZ2V0XCI6IFwiY29kXCIsIFwid2VpZ2h0XCI6IDQ1Ljg4NzEzMjQzMDU4MTAyNn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzIzLCBcInNvdXJjZVwiOiBcImNsYW1cIiwgXCJ0YXJnZXRcIjogXCJlbm9raWRha2VcIiwgXCJ3ZWlnaHRcIjogNjguMjczMjM5Njg5MTA3NX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDMyNCwgXCJzb3VyY2VcIjogXCJjbGFtXCIsIFwidGFyZ2V0XCI6IFwiZmlzaFwiLCBcIndlaWdodFwiOiAyMS45Njg0NDA2NTAxNTk4MDN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzMjUsIFwic291cmNlXCI6IFwiY2xhbVwiLCBcInRhcmdldFwiOiBcImthdHN1b2J1c2hpXCIsIFwid2VpZ2h0XCI6IDEwLjM5MDA2MjcxMDA3MDU4Mn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDMyNiwgXCJzb3VyY2VcIjogXCJjbGFtXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogMzIuOTk1MTc2OTk4NDczMjV9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDMyNywgXCJzb3VyY2VcIjogXCJjbGFtXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAzNy4zNjk0MDYxODIwMDgyfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMzI4LCBcInNvdXJjZVwiOiBcImNsYW1cIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDI1Ny4zNzAwNjA5MDE5NjU4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzMjksIFwic291cmNlXCI6IFwiY2xhbVwiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDI1Ny4zNzAwNjA5MDE5NjU4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzMzAsIFwic291cmNlXCI6IFwiY2xhbVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogNi4xMjAyMzA0NTAwMDc1Njd9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzMzEsIFwic291cmNlXCI6IFwiY2xhbVwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogOTMuODg5MDk0MTQ1ODc1ODd9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTEsIFwibmFtZVwiOiAzMzYsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwiY29mZmVlXCIsIFwid2VpZ2h0XCI6IDYuMjgzOTc0OTMxOTc4MjQzfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEzLCBcIm5hbWVcIjogMzM3LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcImVnZ1wiLCBcIndlaWdodFwiOiA1LjM0MzY4Njg0MDMxMjAzMn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzM4LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcImVub2tpZGFrZVwiLCBcIndlaWdodFwiOiAxNy45MDA2MDQ5Nzc4Mzg3MzJ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDM0MCwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJnYXJsaWNcIiwgXCJ3ZWlnaHRcIjogNDUuNjMwODQ1NTQ5MTQ1NjU0fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiAzNDEsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwiZ2luZ2VyXCIsIFwid2VpZ2h0XCI6IDQuMDYyODIxOTU5NTM4Mzc4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAzNDIsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwiZ3JhcGVmcnVpdFwiLCBcIndlaWdodFwiOiA2LjEyODQ5NDIyMzkwNzQ1MX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDM0MywgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJncmVlbl90ZWFcIiwgXCJ3ZWlnaHRcIjogNTYuNzcwNzgxOTk1NTM2MzZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzNDUsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogNC4xMjk0NTY1NDg3MTE1NzN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDM0NiwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJtYW5kYXJpblwiLCBcIndlaWdodFwiOiAzLjA4NTUxNDY1MTY2NDgzNzV9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDM0NywgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJtZWxvblwiLCBcIndlaWdodFwiOiAyMS41NjU1MDczODIzNjQ1MX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzQ4LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDM1Ljg0NzUyMDk5NTE1MjgzNH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzQ5LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcIm9uaW9uXCIsIFwid2VpZ2h0XCI6IDcuMjY4Njg2MDgzMDkzMjQ5fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAzNTAsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlXCIsIFwid2VpZ2h0XCI6IDUuMDQwMTI5MjY3NDExOTE5fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzNTEsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwicG9yY2luaVwiLCBcIndlaWdodFwiOiAyNS4xODU5ODY3Mjc0NDE0ODV9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDM1MiwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDQuNjM2NDAyMDUwNjU2NjcyfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzNTMsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwicG90YXRvXCIsIFwid2VpZ2h0XCI6IDkuMDI0ODc3Njk5OTY5MDM0fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMzU0LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcInNhbG1vblwiLCBcIndlaWdodFwiOiA1LjQ3MzI1NDA5NzAzNzY5MX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzU2LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDg3LjMwMDUyOTYwMTcyMjI3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzNTgsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiAxMS44MDM1NDAwNjg0OTEzMDF9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDM1OSwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDMuNDg1MzIyMTg2NzA0MDEyN30sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzYwLCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcInRvbWF0b1wiLCBcIndlaWdodFwiOiAzNC43OTAyNTIxODAyNzE0Nn0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzYxLCBcInNvdXJjZVwiOiBcImNvZmZlZVwiLCBcInRhcmdldFwiOiBcImVub2tpZGFrZVwiLCBcIndlaWdodFwiOiA5LjM0OTYyMTY0Nzg2MjQ5NX0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDM2MiwgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJmaXNoXCIsIFwid2VpZ2h0XCI6IDMuMDA4NDQ5NzExODkwMzUzNX0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDM2NCwgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiAxLjQyMjg1ODQzODgxMjY0Mn0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDM2NSwgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiA0LjUxODQ5Njg4OTA0MDk2MjV9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDM2OCwgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDUuMTE3NTIyMDQyMjgyODg3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMzcxLCBcInNvdXJjZVwiOiBcImNvZmZlZVwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMzUuMjQ1MzI3NTA4NjcyNzV9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDM3MiwgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAzNS4yNDUzMjc1MDg2NzI3NX0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzczLCBcInNvdXJjZVwiOiBcImNvZmZlZVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMC44MzgxMjk4MzQ4NDk4ODA0fSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMzc1LCBcInNvdXJjZVwiOiBcImNvZmZlZVwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogMTIuODU3NTYzMzg5NzIzNDI2fSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0MDcsIFwic291cmNlXCI6IFwiZWdnXCIsIFwidGFyZ2V0XCI6IFwiZW5va2lkYWtlXCIsIFwid2VpZ2h0XCI6IDcuOTUwNjEyNTgyMzg1MTg3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDA4LCBcInNvdXJjZVwiOiBcImVnZ1wiLCBcInRhcmdldFwiOiBcImZpc2hcIiwgXCJ3ZWlnaHRcIjogMi41NTgyODcyNzk4MTcwMjc3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDA5LCBcInNvdXJjZVwiOiBcImVnZ1wiLCBcInRhcmdldFwiOiBcImthdHN1b2J1c2hpXCIsIFwid2VpZ2h0XCI6IDEuMjA5OTUyMjk4ODg5MzM2OH0sIHtcImdyb3VwX2lkX3NcIjogMTMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQxMCwgXCJzb3VyY2VcIjogXCJlZ2dcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiAzLjg0MjM4MjAzMTMyOTYzMjR9LCB7XCJncm91cF9pZF9zXCI6IDEzLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQxMSwgXCJzb3VyY2VcIjogXCJlZ2dcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDQuMzUxNzczNDM3NzMxNTQ3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDEzLCBcInNvdXJjZVwiOiBcImVnZ1wiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMjkuOTcxNDc0MjM4NzI1NDI4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0MTQsIFwic291cmNlXCI6IFwiZWdnXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMjkuOTcxNDc0MjM4NzI1NDI4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0MTUsIFwic291cmNlXCI6IFwiZWdnXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiAwLjcxMjcxODIxMDU5NzY3ODd9LCB7XCJncm91cF9pZF9zXCI6IDEzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0MTYsIFwic291cmNlXCI6IFwiZWdnXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiAxMC45MzM2NTE1NTQ2MDgxOTd9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQxOCwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJmaXNoXCIsIFwid2VpZ2h0XCI6IDguNTY5OTA1MjcwMzM5NTU0fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQxOSwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJnYXJsaWNcIiwgXCJ3ZWlnaHRcIjogNjcuODkxOTIyODYzMjY1N30sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiA0MjAsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwiZ2luZ2VyXCIsIFwid2VpZ2h0XCI6IDYuMDQ0ODc1ODIzOTAwMzUzfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQyMSwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJncmFwZWZydWl0XCIsIFwid2VpZ2h0XCI6IDkuMTE4Mjg5NDQwMTg1MTQyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTEsIFwibmFtZVwiOiA0MjIsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwiZ3JlZW5fdGVhXCIsIFwid2VpZ2h0XCI6IDg0LjQ2NjQ5NDIyNjUyMTk5fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0MjMsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogNC4wNTMxNzEzMDEzMjk2OTM1fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0MjQsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogMTIuODcxNDQzNDM4MjQ2MjgzfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQyNSwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJtYW5kYXJpblwiLCBcIndlaWdodFwiOiA0LjU5MDc4NzY2MTM1NzAxMX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA0MjcsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwibWVsb25cIiwgXCJ3ZWlnaHRcIjogMzIuMDg2MjcyOTE2NzIyMDN9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDI4LCBcInNvdXJjZVwiOiBcImVub2tpZGFrZVwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDUzLjMzNTc4ODU2NDc5ODYwNX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0MjksIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwib25pb25cIiwgXCJ3ZWlnaHRcIjogMTAuODE0NzI1NjI5ODE5MDQ0fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQzMCwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJvcmFuZ2VcIiwgXCJ3ZWlnaHRcIjogNy40OTg5NjM5ODY0NDM2OTQ2fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQzMSwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJwb3JjaW5pXCIsIFwid2VpZ2h0XCI6IDM3LjQ3MzAwODYwOTc4MDMxNX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA0MzIsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAxNC41Nzc4MzM1NDI2MDYxMjV9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDMzLCBcInNvdXJjZVwiOiBcImVub2tpZGFrZVwiLCBcInRhcmdldFwiOiBcInBvdGF0b1wiLCBcIndlaWdodFwiOiAxMy40Mjc2Nzc5OTQ2MzE3Nzd9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQzNCwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJzYWxtb25cIiwgXCJ3ZWlnaHRcIjogOC4xNDMzODk0MjIxMTYzMX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDM1LCBcInNvdXJjZVwiOiBcImVub2tpZGFrZVwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMTAwLjQwMDI1NDkxNDU1NzM3fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQzNiwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAxMjkuODkwMjI1NTc2ODgxNjJ9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDM3LCBcInNvdXJjZVwiOiBcImVub2tpZGFrZVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMTcuNTYxOTE1MDIwNDA4NDE0fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQzOCwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDUuMTg1NjQxOTA5NjcwMTk1fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQzOSwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJ0b21hdG9cIiwgXCJ3ZWlnaHRcIjogNTEuNzYyNzI5NTUyNTkyNjJ9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ0MCwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDM2LjYyNjIwNjQ1NTA0NDY0NX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDQ4LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJnYXJsaWNcIiwgXCJ3ZWlnaHRcIjogMjEuODQ1NzQzNDM5NzIxODg2fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiA0NDksIFwic291cmNlXCI6IFwiZmlzaFwiLCBcInRhcmdldFwiOiBcImdpbmdlclwiLCBcIndlaWdodFwiOiAxLjk0NTA3Mzg4ODA5NTA5Nn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNDUwLCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJncmFwZWZydWl0XCIsIFwid2VpZ2h0XCI6IDIuOTM0MDEzNDA0MjI0Njg1fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDExLCBcIm5hbWVcIjogNDUxLCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJncmVlbl90ZWFcIiwgXCJ3ZWlnaHRcIjogMjcuMTc4OTgyMTg2NzU2NTY3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDU0LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiAxLjk3Njk3NTE2MjgwODk1MzZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQ1NSwgXCJzb3VyY2VcIjogXCJmaXNoXCIsIFwidGFyZ2V0XCI6IFwibWFuZGFyaW5cIiwgXCJ3ZWlnaHRcIjogMS40NzcxODg1MjU2MjUxODI3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA0NTYsIFwic291cmNlXCI6IFwiZmlzaFwiLCBcInRhcmdldFwiOiBcIm1lbG9uXCIsIFwid2VpZ2h0XCI6IDEwLjMyNDQ3NTM3OTYwMTczfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0NTcsIFwic291cmNlXCI6IFwiZmlzaFwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDE3LjE2MTk4MTkyNjYwNTIzNn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDU4LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJvbmlvblwiLCBcIndlaWdodFwiOiAzLjQ3OTg3OTY2MDQzOTU4NDd9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQ1OSwgXCJzb3VyY2VcIjogXCJmaXNoXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlXCIsIFwid2VpZ2h0XCI6IDIuNDEyOTU5MjUwNTY1MDA5NX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDYwLCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJwb3JjaW5pXCIsIFwid2VpZ2h0XCI6IDEyLjA1Nzc3Nzk3MjM4Nzk5N30sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNDYxLCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDIuMjE5Njc1MDU2NzEwNDU5NX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDYyLCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJwb3RhdG9cIiwgXCJ3ZWlnaHRcIjogNC4zMjA2NTU0Nzg0NTM3MDJ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0NjMsIFwic291cmNlXCI6IFwiZmlzaFwiLCBcInRhcmdldFwiOiBcInNhbG1vblwiLCBcIndlaWdodFwiOiAyLjYyMDMxNzUzNjIwNTA4NX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDY1LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiA0MS43OTUwODI4ODQ4MjIzODV9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQ2NywgXCJzb3VyY2VcIjogXCJmaXNoXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA1LjY1MDkzODYzNDAyMTU2OX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNDY4LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDEuNjY4NTk2MTczOTA4MzI4OH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDY5LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJ0b21hdG9cIiwgXCJ3ZWlnaHRcIjogMTYuNjU1ODE1MDM0NDc4NjkyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0NzIsIFwic291cmNlXCI6IFwiZ2FybGljXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMTAuMzMyMDMyNTY4OTY0ODk2fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0NzMsIFwic291cmNlXCI6IFwiZ2FybGljXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogMzIuODEwODkzNzI0MTEyMTl9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNDc1LCBcInNvdXJjZVwiOiBcImdhcmxpY1wiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogMzcuMTYwNjkyMTQ2ODQ4ODR9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ3NywgXCJzb3VyY2VcIjogXCJnYXJsaWNcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDI1NS45MzI2MDg0NjYxODM3fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQ3OCwgXCJzb3VyY2VcIjogXCJnYXJsaWNcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAyNTUuOTMyNjA4NDY2MTgzN30sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0NzksIFwic291cmNlXCI6IFwiZ2FybGljXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA2LjA4NjA0Nzk5NjM5NTUxOH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDgwLCBcInNvdXJjZVwiOiBcImdhcmxpY1wiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogOTMuMzY0NzA4NzI3NDYxNjZ9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ4MSwgXCJzb3VyY2VcIjogXCJnaW5nZXJcIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiAwLjkxOTkzMDU0OTIzMDAzMTV9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ4MiwgXCJzb3VyY2VcIjogXCJnaW5nZXJcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiAyLjkyMTM3NTE3NzkxMTgzOH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA0ODUsIFwic291cmNlXCI6IFwiZ2luZ2VyXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAzLjMwODY2NzA3MDkwMTc2OX0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDg3LCBcInNvdXJjZVwiOiBcImdpbmdlclwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMjIuNzg3NDA2Mzk4NTYwOTY1fSwge1wiZ3JvdXBfaWRfc1wiOiA5LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQ4OSwgXCJzb3VyY2VcIjogXCJnaW5nZXJcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAyMi43ODc0MDYzOTg1NjA5NjV9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDkwLCBcInNvdXJjZVwiOiBcImdpbmdlclwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMC41NDE4ODE5MDM1NDU0NjcyfSwge1wiZ3JvdXBfaWRfc1wiOiA5LCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0OTEsIFwic291cmNlXCI6IFwiZ2luZ2VyXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA4LjMxMjg4OTc2MzQ2Njk3OX0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDk3LCBcInNvdXJjZVwiOiBcImdyYXBlZnJ1aXRcIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiAxLjM4NzY1MzQ4NjU0MTg1ODh9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ5OCwgXCJzb3VyY2VcIjogXCJncmFwZWZydWl0XCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogNC40MDY2OTgzNjkyNjE5MjN9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNTAwLCBcInNvdXJjZVwiOiBcImdyYXBlZnJ1aXRcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDQuOTkwOTAyMTk0Mjg2MjA4fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1MDEsIFwic291cmNlXCI6IFwiZ3JhcGVmcnVpdFwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMzQuMzczMjczMDMwOTY0OTI0fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDUwMiwgXCJzb3VyY2VcIjogXCJncmFwZWZydWl0XCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMzQuMzczMjczMDMwOTY0OTI0fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDUwMywgXCJzb3VyY2VcIjogXCJncmFwZWZydWl0XCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiAwLjgxNzM5MjQ3OTY1ODU3MTN9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDUwNCwgXCJzb3VyY2VcIjogXCJncmFwZWZydWl0XCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiAxMi41Mzk0MzYyMzU4ODU0NzN9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1MDgsIFwic291cmNlXCI6IFwiZ3JlZW5fdGVhXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMTIuODU0NDA5MzY5MDI1MzcyfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTA5LCBcInNvdXJjZVwiOiBcImdyZWVuX3RlYVwiLCBcInRhcmdldFwiOiBcIm1hY2tlcmVsXCIsIFwid2VpZ2h0XCI6IDQwLjgyMTA3MzM4MzAwNTk2fSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA1MTEsIFwic291cmNlXCI6IFwiZ3JlZW5fdGVhXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiA0Ni4yMzI3OTU1NDE3NzU2N30sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDUxMiwgXCJzb3VyY2VcIjogXCJncmVlbl90ZWFcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDMxOC40MTM4NzQzNDE1MTM2fSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1MTMsIFwic291cmNlXCI6IFwiZ3JlZW5fdGVhXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMzE4LjQxMzg3NDM0MTUxMzZ9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDUxNCwgXCJzb3VyY2VcIjogXCJncmVlbl90ZWFcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDcuNTcxODQ1MzEzMzk5MTkxfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTE1LCBcInNvdXJjZVwiOiBcImdyZWVuX3RlYVwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogMTE2LjE1Nzk5NDkxNDUzMjQ3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTI0LCBcInNvdXJjZVwiOiBcImthdHN1b2J1c2hpXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogMC45MzUwMTgzODU5MTc1MDk5fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA1MjUsIFwic291cmNlXCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ0YXJnZXRcIjogXCJtYW5kYXJpblwiLCBcIndlaWdodFwiOiAwLjY5ODY0MjI3NzgxMzY4M30sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTI2LCBcInNvdXJjZVwiOiBcImthdHN1b2J1c2hpXCIsIFwidGFyZ2V0XCI6IFwibWVsb25cIiwgXCJ3ZWlnaHRcIjogNC44ODMwMDIzMTkxNDF9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDUyNywgXCJzb3VyY2VcIjogXCJrYXRzdW9idXNoaVwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDguMTE2ODI4NjQ5MTU3MTg1fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1MjgsIFwic291cmNlXCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ0YXJnZXRcIjogXCJvbmlvblwiLCBcIndlaWdodFwiOiAxLjY0NTgyMzEzNjUyNzU5OTN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDUyOSwgXCJzb3VyY2VcIjogXCJrYXRzdW9idXNoaVwiLCBcInRhcmdldFwiOiBcIm9yYW5nZVwiLCBcIndlaWdodFwiOiAxLjE0MTIxODgyMDY0NjM4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1MzAsIFwic291cmNlXCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ0YXJnZXRcIjogXCJwb3JjaW5pXCIsIFwid2VpZ2h0XCI6IDUuNzAyNzc0Nzc5MTYwNjU1fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA1MzEsIFwic291cmNlXCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDEuMDQ5ODA0MjgwNzE2MzY0Nn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTMyLCBcInNvdXJjZVwiOiBcImthdHN1b2J1c2hpXCIsIFwidGFyZ2V0XCI6IFwicG90YXRvXCIsIFwid2VpZ2h0XCI6IDIuMDQzNDcxNDU0NTU3NTgzfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTMzLCBcInNvdXJjZVwiOiBcImthdHN1b2J1c2hpXCIsIFwidGFyZ2V0XCI6IFwic2FsbW9uXCIsIFwid2VpZ2h0XCI6IDEuMjM5Mjg5NzU5MTE0OTg5fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1MzQsIFwic291cmNlXCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAxOS43NjcxNTMyMTEzMzgzNX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTM1LCBcInNvdXJjZVwiOiBcImthdHN1b2J1c2hpXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiAyLjY3MjYzNDI0NDQyNTQyOH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTM2LCBcInNvdXJjZVwiOiBcImthdHN1b2J1c2hpXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAwLjc4OTE2OTI5NzkzODU1Mjh9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDUzNywgXCJzb3VyY2VcIjogXCJrYXRzdW9idXNoaVwiLCBcInRhcmdldFwiOiBcInRvbWF0b1wiLCBcIndlaWdodFwiOiA3Ljg3NzQzNDk3MzcxNTg2MX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTU1LCBcInNvdXJjZVwiOiBcIm1hY2tlcmVsXCIsIFwidGFyZ2V0XCI6IFwibWFuZGFyaW5cIiwgXCJ3ZWlnaHRcIjogMi4yMTg2NDE2MjUwMTUwMjM2fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA1NTYsIFwic291cmNlXCI6IFwibWFja2VyZWxcIiwgXCJ0YXJnZXRcIjogXCJtZWxvblwiLCBcIndlaWdodFwiOiAxNS41MDY2OTQyNjE2MDkzMzZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU1NywgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDI1Ljc3NjE4Njg2NDE2OTYwNn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTU4LCBcInNvdXJjZVwiOiBcIm1hY2tlcmVsXCIsIFwidGFyZ2V0XCI6IFwib25pb25cIiwgXCJ3ZWlnaHRcIjogNS4yMjY1NTQxODA5NzQ4NzR9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDU1OSwgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcIm9yYW5nZVwiLCBcIndlaWdodFwiOiAzLjYyNDEwODczMDgwODY1M30sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTYwLCBcInNvdXJjZVwiOiBcIm1hY2tlcmVsXCIsIFwidGFyZ2V0XCI6IFwicG9yY2luaVwiLCBcIndlaWdodFwiOiAxOC4xMTAwMDI2NTA3NDk4MDZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDU2MSwgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogMy4zNjI5MzI3MjAwNDMyMDN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU2MiwgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcInBvdGF0b1wiLCBcIndlaWdodFwiOiA2LjQ4OTM0NTA4MDU3NDMwMX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDU2MywgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcInNhbG1vblwiLCBcIndlaWdodFwiOiAzLjkzNTU0NzQ2NDQ3ODgzMX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDU2NCwgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMjMuMTYxMTQ0MDMxODY0MzJ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU2NSwgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDYyLjc3MzUxMTMwMjQ3NTc3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1NjYsIFwic291cmNlXCI6IFwibWFja2VyZWxcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDguNDg3MzQ0MzQxMTk2ODM1fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA1NjcsIFwic291cmNlXCI6IFwibWFja2VyZWxcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDIuNTA2MTIzNTMzMDE4MjY1fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1NjgsIFwic291cmNlXCI6IFwibWFja2VyZWxcIiwgXCJ0YXJnZXRcIjogXCJ0b21hdG9cIiwgXCJ3ZWlnaHRcIjogMjUuMDE1OTU2OTI5NjcyMTQzfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTY5LCBcInNvdXJjZVwiOiBcIm1hY2tlcmVsXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA4LjQ0OTIyOTk3MjI1NDY3NH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA1NzIsIFwic291cmNlXCI6IFwibWFuZGFyaW5cIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDIuNTEyNzcwODgzNDk0MDc4NX0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTczLCBcInNvdXJjZVwiOiBcIm1hbmRhcmluXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiAxNy4zMDU5MjExMTAxMTE3ODJ9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTc0LCBcInNvdXJjZVwiOiBcIm1hbmRhcmluXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMTcuMzA1OTIxMTEwMTExNzgyfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU3NSwgXCJzb3VyY2VcIjogXCJtYW5kYXJpblwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMC40MTE1MzI4MTM3NzE1MjU1fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1NzcsIFwic291cmNlXCI6IFwibWFuZGFyaW5cIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDYuMzEzMjMzMzY3OTE0MTQ0fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDU4MCwgXCJzb3VyY2VcIjogXCJtZWxvblwiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogMTcuNTYyNDQ0MjQ1Mzg0OTd9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDU4MSwgXCJzb3VyY2VcIjogXCJtZWxvblwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMTIwLjk1NTgyNDc0NjI0MTh9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTgyLCBcInNvdXJjZVwiOiBcIm1lbG9uXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMTIwLjk1NTgyNDc0NjI0MTh9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTgzLCBcInNvdXJjZVwiOiBcIm1lbG9uXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiAyLjg3NjMxNTYwMjIyNDI0MjR9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDU4NSwgXCJzb3VyY2VcIjogXCJtZWxvblwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogNDQuMTI0OTE3OTM4MzY3Nzh9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNTk4LCBcInNvdXJjZVwiOiBcIm11c2hyb29tXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAyOS4xOTMzODE3MTEzNjU1NX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTk5LCBcInNvdXJjZVwiOiBcIm11c2hyb29tXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiAyMDEuMDYwMjU3NDg0MjYwNTd9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjAwLCBcInNvdXJjZVwiOiBcIm11c2hyb29tXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMjAxLjA2MDI1NzQ4NDI2MDU3fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDYwMSwgXCJzb3VyY2VcIjogXCJtdXNocm9vbVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogNC43ODExODk4MDA1MTE2MTl9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDYwMiwgXCJzb3VyY2VcIjogXCJtdXNocm9vbVwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogNzMuMzQ3MTY5MzU1MTk2NzR9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNjA4LCBcInNvdXJjZVwiOiBcIm9uaW9uXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiA1LjkxOTQ0Nzc0NjI2MTg0OX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjEwLCBcInNvdXJjZVwiOiBcIm9uaW9uXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiA0MC43NjgzMzkyMDA4MjIzMX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2MTIsIFwic291cmNlXCI6IFwib25pb25cIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiA0MC43NjgzMzkyMDA4MjIzMX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2MTMsIFwic291cmNlXCI6IFwib25pb25cIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDAuOTY5NDY2NDE3NzI4MTcwMn0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjE0LCBcInNvdXJjZVwiOiBcIm9uaW9uXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiAxNC44NzIzNjg2OTczNjM3ODZ9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNjE3LCBcInNvdXJjZVwiOiBcIm9yYW5nZVwiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogNC4xMDQ1NjMyNTgzMDk0NjF9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDYxOCwgXCJzb3VyY2VcIjogXCJvcmFuZ2VcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDI4LjI2ODg5MTY4NzAxMDE1NH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2MTksIFwic291cmNlXCI6IFwib3JhbmdlXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMjguMjY4ODkxNjg3MDEwMTU0fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDYyMCwgXCJzb3VyY2VcIjogXCJvcmFuZ2VcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDAuNjcyMjMwOTkzMzE5NDA5fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2MjMsIFwic291cmNlXCI6IFwib3JhbmdlXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiAxMC4zMTI1NDYxNTkwMTk4MTd9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNjQwLCBcInNvdXJjZVwiOiBcInBvcmNpbmlcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDIwLjUxMDg3Nzg0ODczNjE5fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2NDEsIFwic291cmNlXCI6IFwicG9yY2luaVwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMTQxLjI2MjIzNjE1NTcyNH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2NDIsIFwic291cmNlXCI6IFwicG9yY2luaVwiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDE0MS4yNjIyMzYxNTU3MjR9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjQzLCBcInNvdXJjZVwiOiBcInBvcmNpbmlcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDMuMzU5MTk5NzMwMjUwNDM1NX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjQ0LCBcInNvdXJjZVwiOiBcInBvcmNpbmlcIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDUxLjUzMjczNTk0OTE2NTc4fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY0NiwgXCJzb3VyY2VcIjogXCJwb3JrXCIsIFwidGFyZ2V0XCI6IFwicG90YXRvXCIsIFwid2VpZ2h0XCI6IDcuMzQ5NjQ5MDc2OTY3MTg0fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2NDksIFwic291cmNlXCI6IFwicG9ya1wiLCBcInRhcmdldFwiOiBcInNhbG1vblwiLCBcIndlaWdodFwiOiA0LjQ1NzI4OTk3NzcyODc3OH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjUwLCBcInNvdXJjZVwiOiBcInBvcmtcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDI2LjAwNDQ4MTMyMDUyNTEyN30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2NTEsIFwic291cmNlXCI6IFwicG9ya1wiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDcxLjA5NTUwNzEyMzQwOTEyfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY1MiwgXCJzb3VyY2VcIjogXCJwb3JrXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA5LjYxMjUyNjY0NjE2NDk2fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDY1MywgXCJzb3VyY2VcIjogXCJwb3JrXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAyLjgzODM2NDc3ODM0MjY3OX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2NTQsIFwic291cmNlXCI6IFwicG9ya1wiLCBcInRhcmdldFwiOiBcInRvbWF0b1wiLCBcIndlaWdodFwiOiAyOC4zMzIzNjY3NDQ5ODgxMzZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDY1NSwgXCJzb3VyY2VcIjogXCJwb3JrXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA5LjQ4NjQ4NDg5NDAxMjAyOH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjYyLCBcInNvdXJjZVwiOiBcInBvdGF0b1wiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNTAuNjE4NDAyMTU4NTUwNjl9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjYzLCBcInNvdXJjZVwiOiBcInBvdGF0b1wiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDUwLjYxODQwMjE1ODU1MDY5fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY2NCwgXCJzb3VyY2VcIjogXCJwb3RhdG9cIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDEuMjAzNjk5NzgyMDc5NTI1OX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjY1LCBcInNvdXJjZVwiOiBcInBvdGF0b1wiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogMTguNDY1NjkwNjQ0NTIzODh9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2ODIsIFwic291cmNlXCI6IFwic2FsbW9uXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiAzMC42OTgxODYzMDM0ODE5NDN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY4MywgXCJzb3VyY2VcIjogXCJzYWxtb25cIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAzMC42OTgxODYzMDM0ODE5NDN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY4NSwgXCJzb3VyY2VcIjogXCJzYWxtb25cIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDAuNzI5OTk5MzM5OTIzNzY5NX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDY4NiwgXCJzb3VyY2VcIjogXCJzYWxtb25cIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDExLjE5ODc1NzUxNjEzOTgyM30sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjg3LCBcInNvdXJjZVwiOiBcInNhcmRpbmVcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiA0ODkuNjQ4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2ODksIFwic291cmNlXCI6IFwic2FyZGluZVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogNjYuMjAzMjYxNDY3MzAwNTJ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDY5MCwgXCJzb3VyY2VcIjogXCJzYXJkaW5lXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAxOS41NDgzNDY5MDk5MzE5MDR9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY5MSwgXCJzb3VyY2VcIjogXCJzYXJkaW5lXCIsIFwidGFyZ2V0XCI6IFwidG9tYXRvXCIsIFwid2VpZ2h0XCI6IDE5NS4xMzAyODcwMzU4NDczNX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2OTUsIFwic291cmNlXCI6IFwic2hpaXRha2VcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDY2LjIwMzI2MTQ2NzMwMDUyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDY5NiwgXCJzb3VyY2VcIjogXCJzaGlpdGFrZVwiLCBcInRhcmdldFwiOiBcInN0cmF3YmVycnlcIiwgXCJ3ZWlnaHRcIjogMTkuNTQ4MzQ2OTA5OTMxOTA0fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY5NywgXCJzb3VyY2VcIjogXCJzaGlpdGFrZVwiLCBcInRhcmdldFwiOiBcInRvbWF0b1wiLCBcIndlaWdodFwiOiAxOTUuMTMwMjg3MDM1ODQ3MzV9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDY5OCwgXCJzb3VyY2VcIjogXCJzaGlpdGFrZVwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogMTc4LjYyNDUzMzkwNzQyNzMyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDY5OSwgXCJzb3VyY2VcIjogXCJzb3liZWFuXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAwLjQ2NDg1NzQ0MTQwNjMxOTh9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNzAwLCBcInNvdXJjZVwiOiBcInNveWJlYW5cIiwgXCJ0YXJnZXRcIjogXCJ0b21hdG9cIiwgXCJ3ZWlnaHRcIjogNC42NDAxNzU3ODUyMTA3MTh9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDcwMSwgXCJzb3VyY2VcIjogXCJzb3liZWFuXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiAyNC4xNTEwNzczNTA5NzA2OTV9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDcwMiwgXCJzb3VyY2VcIjogXCJzdHJhd2JlcnJ5XCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA3LjEzMTI3NDYyMDY0MDMwM30sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNzA0LCBcInNvdXJjZVwiOiBcInRvbWF0b1wiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogNzEuMTgzOTA0NzA5MDk4NjZ9XSwgXCJub2Rlc1wiOiBbe1wiZ3JvdXBfaWRcIjogMCwgXCJuYW1lXCI6IFwib3JhbmdlX3BlZWxcIiwgXCJzaXplXCI6IDEuMDEyNDI1MjE4NTkxODA4NiwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY2hlcnJ5XCIsIFwic2l6ZVwiOiAxLjkxODY1MTk4NzY4MDk3OTgsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcInJvYXN0ZWRfcG9ya1wiLCBcInNpemVcIjogMC4yMjEyNDY3Njk3OTcxNjA5MywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwibWF0c3V0YWtlXCIsIFwic2l6ZVwiOiAwLjA5OTExODU1Mjg2OTEyODEyLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJvcmFuZ2VfanVpY2VcIiwgXCJzaXplXCI6IDMuMDA4OTU2MDY5MjQxMzg5LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA0LCBcIm5hbWVcIjogXCJyeWVfYnJlYWRcIiwgXCJzaXplXCI6IDAuMTYxMDY3NjQ4NDEyMzMzMTgsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcIndoaXRlX3dpbmVcIiwgXCJzaXplXCI6IDMuODMzNzY0MDI3MDQ1MjA0NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwiZmVubmVsXCIsIFwic2l6ZVwiOiAxLjYwNTM2NjU2MTY0ODIsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcInBpbmVhcHBsZVwiLCBcInNpemVcIjogMi44NjAyNzgyMzk5Mzc2OTcsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcImNoaWNrZW5cIiwgXCJzaXplXCI6IDkuMzcwMjQzMTk0NDQ5MzYyLCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJwb3JjaW5pXCIsIFwic2l6ZVwiOiAwLjE4NzYxNzI2MDc4Nzk5MjQ4LCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJtaWxrXCIsIFwic2l6ZVwiOiAyMi44MjM4MTY3NzIyNzUxMjMsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcInJhd19iZWVmXCIsIFwic2l6ZVwiOiAwLjAwMzUzOTk0ODMxNjc1NDU3NSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiZ3JhcGVcIiwgXCJzaXplXCI6IDAuNjEwNjQxMDg0NjQwMTY0MywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogOCwgXCJuYW1lXCI6IFwicGVhbnV0XCIsIFwic2l6ZVwiOiAwLjgwMTc5ODI5Mzc0NDkxMTMsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcImNheWVubmVcIiwgXCJzaXplXCI6IDE0LjA3MTI5NDU1OTA5OTQzNywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwiY29nbmFjXCIsIFwic2l6ZVwiOiAwLjExNjgxODI5NDQ1MjkwMSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwibWVsb25cIiwgXCJzaXplXCI6IDAuMjc3ODg1OTQyODY1MjM0MTYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcIm11bmdfYmVhblwiLCBcInNpemVcIjogMC4wMzM2Mjk1MDkwMDkxNjg0NjYsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcInJpY2VcIiwgXCJzaXplXCI6IDYuMDA5MDYyMjY3NjkwODkyLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwibWFja2VyZWxcIiwgXCJzaXplXCI6IDAuMDc3ODc4ODYyOTY4NjAwNjUsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcInRoYWlfcGVwcGVyXCIsIFwic2l6ZVwiOiAwLjE1Mzk4Nzc1MTc3ODgyNDA0LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMSwgXCJuYW1lXCI6IFwiY29mZmVlXCIsIFwic2l6ZVwiOiAxLjI2NzMwMTQ5NzM5ODEzOCwgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY2l0cnVzXCIsIFwic2l6ZVwiOiAwLjI4ODUwNTc4NzgxNTQ5Nzg1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJsaW1hX2JlYW5cIiwgXCJzaXplXCI6IDAuMjYzNzI2MTQ5NTk4MjE1OSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogOSwgXCJuYW1lXCI6IFwiYmxhY2tfcGVwcGVyXCIsIFwic2l6ZVwiOiAxNy4yNjA3ODc5OTI0OTUzMSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwiYmVhblwiLCBcInNpemVcIjogMy4zNjgyNjA4MjMzOTE5Nzg0LCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiAxMSwgXCJuYW1lXCI6IFwicGVhbnV0X2J1dHRlclwiLCBcInNpemVcIjogMS43NjExMjQyODc1ODU0MDE0LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJraWRuZXlfYmVhblwiLCBcInNpemVcIjogMC43ODIzMjg1NzgwMDI3NjExLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJhcHBsZV9icmFuZHlcIiwgXCJzaXplXCI6IDAuMDY1NDg5MDQzODU5OTU5NjQsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcImJyZWFkXCIsIFwic2l6ZVwiOiA4LjA1ODY5MjM0MzA5MTc5LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJqdW5pcGVyX2JlcnJ5XCIsIFwic2l6ZVwiOiAwLjA1ODQwOTE0NzIyNjQ1MDUsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJjbGFtXCIsIFwic2l6ZVwiOiAwLjgxNTk1ODA4NzAxMTkyOTYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcIm9uaW9uXCIsIFwic2l6ZVwiOiAzMS45MTQ0MDQwNDk3MDA4NzQsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcImNpZGVyXCIsIFwic2l6ZVwiOiAxLjk4MjM3MTA1NzM4MjU2MjQsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDAsIFwibmFtZVwiOiBcImNpdHJ1c19wZWVsXCIsIFwic2l6ZVwiOiAwLjAwNzA3OTg5NjYzMzUwOTE1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwiZWVsXCIsIFwic2l6ZVwiOiAwLjAzNTM5OTQ4MzE2NzU0NTc2LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJudXRtZWdcIiwgXCJzaXplXCI6IDQuNDQ2MTc1MDg1ODQzNzQ2NSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwicm9zZW1hcnlcIiwgXCJzaXplXCI6IDMuMzQ1MjUxMTU5MzMzMDczNiwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogOSwgXCJuYW1lXCI6IFwidmFuaWxsYVwiLCBcInNpemVcIjogMTUuOTc0MDE2Nzc5MzU1MDIyLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAyLCBcIm5hbWVcIjogXCJwb3JrXCIsIFwic2l6ZVwiOiAzLjQ3NjIyOTI0NzA1Mjk5MjcsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInJlZF9iZWFuXCIsIFwic2l6ZVwiOiAwLjA1ODQwOTE0NzIyNjQ1MDUsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDExLCBcIm5hbWVcIjogXCJ0ZWFcIiwgXCJzaXplXCI6IDAuMTc4NzY3Mzg5OTk2MTA2MDYsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJmaXNoXCIsIFwic2l6ZVwiOiAzLjMyNTc4MTQ0MzU5MDkyMzYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcImJhY29uXCIsIFwic2l6ZVwiOiAzLjgxNjA2NDI4NTQ2MTQzMjYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDEyLCBcIm5hbWVcIjogXCJsYXZlbmRlclwiLCBcInNpemVcIjogMC4xMDk3MzgzOTc4MTkzOTE4MywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwicGVwcGVybWludFwiLCBcInNpemVcIjogMC4yNTEzMzYzMzA0ODk1NzQ5LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA4LCBcIm5hbWVcIjogXCJibGFja19zZXNhbWVfc2VlZFwiLCBcInNpemVcIjogMC4wNDYwMTkzMjgxMTc4MDk0OCwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwibGVtb25ncmFzc1wiLCBcInNpemVcIjogMC4yNDI0ODY0NTk2OTc2ODg0MiwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiZ3VhdmFcIiwgXCJzaXplXCI6IDAuMDIzMDA5NjY0MDU4OTA0NzQsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDgsIFwibmFtZVwiOiBcInJvYXN0ZWRfcGVhbnV0XCIsIFwic2l6ZVwiOiAwLjI5MjA0NTczNjEzMjI1MjUsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJoYWRkb2NrXCIsIFwic2l6ZVwiOiAwLjA1NDg2OTE5ODkwOTY5NTkyLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJtYW5kYXJpblwiLCBcInNpemVcIjogMC40OTIwNTI4MTYwMjg4ODYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcInF1aW5jZVwiLCBcInNpemVcIjogMC4wNDk1NTkyNzY0MzQ1NjQwNiwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiYmFydGxldHRfcGVhclwiLCBcInNpemVcIjogMC4wNDA3MDk0MDU2NDI2Nzc2MiwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMCwgXCJuYW1lXCI6IFwibGVtb25fcGVlbFwiLCBcInNpemVcIjogMS4yNjU1MzE1MjMyMzk3NjA2LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJwZXBwZXJcIiwgXCJzaXplXCI6IDE2LjAzNTk2NTg3NDg5ODIyNCwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwicnVtXCIsIFwic2l6ZVwiOiAxLjA2NTUyNDQ0MzM0MzEyNywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwicGVhclwiLCBcInNpemVcIjogMC44MjgzNDc5MDYxMjA1NzA3LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJjaGFtcGFnbmVfd2luZVwiLCBcInNpemVcIjogMC4xNzUyMjc0NDE2NzkzNTE1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJyYXNwYmVycnlcIiwgXCJzaXplXCI6IDEuMzg3NjU5NzQwMTY3NzkzNSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcInNtb2tlZF9zYWxtb25cIiwgXCJzaXplXCI6IDAuMTcxNjg3NDkzMzYyNTk2OSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY29uY29yZF9ncmFwZVwiLCBcInNpemVcIjogMC4wMjEyMzk2ODk5MDA1Mjc0NTQsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcImJsYWNrX2JlYW5cIiwgXCJzaXplXCI6IDAuODM4OTY3NzUxMDcwODM0MywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwicGx1bVwiLCBcInNpemVcIjogMC40OTAyODI4NDE4NzA1MDg3LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJicmFuZHlcIiwgXCJzaXplXCI6IDAuNjk5MTM5NzkyNTU5MDI4NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogOSwgXCJuYW1lXCI6IFwiY2lubmFtb25cIiwgXCJzaXplXCI6IDkuOTE3MTY1MjA5Mzg3OTQyLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA0LCBcIm5hbWVcIjogXCJwb3Bjb3JuXCIsIFwic2l6ZVwiOiAwLjE3MTY4NzQ5MzM2MjU5NjksIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwic2l6ZVwiOiA1LjM2MTI1MTcyNTcyNDgwNCwgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwiY2hlZXNlXCIsIFwic2l6ZVwiOiA1LjgwOTA1NTE4Nzc5NDI1OCwgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwibWFyam9yYW1cIiwgXCJzaXplXCI6IDAuOTM0NTQ2MzU1NjIzMjA4LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJhcHBsZVwiLCBcInNpemVcIjogNC4yNzk3OTc1MTQ5NTYyODE1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJ0YWJhc2NvX3BlcHBlclwiLCBcInNpemVcIjogMS43MDgwMjUwNjI4MzQwODI1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMSwgXCJuYW1lXCI6IFwiY29jb2FcIiwgXCJzaXplXCI6IDguNDk3NjQ1OTM0MzY5MzU3LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJzb3liZWFuXCIsIFwic2l6ZVwiOiAxLjgzMDE1MzI3OTc2MjExNTYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDExLCBcIm5hbWVcIjogXCJibGFja190ZWFcIiwgXCJzaXplXCI6IDAuMDY3MjU5MDE4MDE4MzM2OTMsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcIndoaXRlX2JyZWFkXCIsIFwic2l6ZVwiOiAwLjY1NDg5MDQzODU5OTU5NjUsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJoZXJyaW5nXCIsIFwic2l6ZVwiOiAwLjAxNzY5OTc0MTU4Mzc3Mjg4LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJsaW1lXCIsIFwic2l6ZVwiOiAxLjkxNjg4MjAxMzUyMjYwMjMsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcImJlZWZcIiwgXCJzaXplXCI6IDguNTM0ODE1MzkxNjk1MjgsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInNoaWl0YWtlXCIsIFwic2l6ZVwiOiAwLjkwNDQ1Njc5NDkzMDc5MzksIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcImFuaXNlXCIsIFwic2l6ZVwiOiAwLjM5NDcwNDIzNzMxODEzNTIsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJjYXZpYXJcIiwgXCJzaXplXCI6IDAuMDQ2MDE5MzI4MTE3ODA5NDgsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcImN1cmVkX3BvcmtcIiwgXCJzaXplXCI6IDAuNTU1NzcxODg1NzMwNDY4MywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwiYnV0dGVybWlsa1wiLCBcInNpemVcIjogMi44OTAzNjc4MDA2MzAxMTA2LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJiZWVyXCIsIFwic2l6ZVwiOiAwLjUzNjMwMjE2OTk4ODMxODEsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImdyYXBlZnJ1aXRcIiwgXCJzaXplXCI6IDAuMjA3MDg2OTc2NTMwMTQyNjksIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcImJyb3duX3JpY2VcIiwgXCJzaXplXCI6IDAuNTk2NDgxMjkxMzczMTQ2LCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiA2LCBcIm5hbWVcIjogXCJiYXNpbFwiLCBcInNpemVcIjogNi42ODg3MzIzNDQ1MDc3NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwicm9hc3RlZF9iZWVmXCIsIFwic2l6ZVwiOiAwLjM5MjkzNDI2MzE1OTc1NzksIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImtpd2lcIiwgXCJzaXplXCI6IDAuMTg1ODQ3Mjg2NjI5NjE1MjIsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcImdyZWVuX2JlbGxfcGVwcGVyXCIsIFwic2l6ZVwiOiA0LjU2Mjk5MzM4MDI5NjY0NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwibXVzaHJvb21cIiwgXCJzaXplXCI6IDUuODcxMDA0MjgzMzM3NDYzLCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJzaGFsbG90XCIsIFwic2l6ZVwiOiAyLjEwMDk1OTMyNTk5Mzg0MDQsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcInJlZF93aW5lXCIsIFwic2l6ZVwiOiAyLjQ2NTU3NDAwMjYxOTU2MTYsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcInRhbmdlcmluZVwiLCBcInNpemVcIjogMC4wNzc4Nzg4NjI5Njg2MDA2NSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwib3JhbmdlXCIsIFwic2l6ZVwiOiAzLjAyNDg4NTgzNjY2Njc4NDYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcImdpbmdlclwiLCBcInNpemVcIjogNi43NTQyMjEzODgzNjc3MywgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwib2xpdmVcIiwgXCJzaXplXCI6IDMuMTgwNjQzNTYyNjAzOTg2LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMSwgXCJuYW1lXCI6IFwibGltZV9wZWVsX29pbFwiLCBcInNpemVcIjogMC4xNzY5OTc0MTU4Mzc3Mjg3NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiYXByaWNvdFwiLCBcInNpemVcIjogMS4wOTczODM5NzgxOTM5MTg1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA0LCBcIm5hbWVcIjogXCJtYWx0XCIsIFwic2l6ZVwiOiAwLjA2NTQ4OTA0Mzg1OTk1OTY0LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJlbm9raWRha2VcIiwgXCJzaXplXCI6IDAuMTg3NjE3MjYwNzg3OTkyNDgsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImJhbmFuYVwiLCBcInNpemVcIjogMS43NDE2NTQ1NzE4NDMyNTEsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcInN0cmF3YmVycnlcIiwgXCJzaXplXCI6IDEuOTA4MDMyMTQyNzMwNzE2MywgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwicG9ya19saXZlclwiLCBcInNpemVcIjogMC4wMDg4NDk4NzA3OTE4ODY0NCwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwid2hpc2tleVwiLCBcInNpemVcIjogMC4yNjE5NTYxNzU0Mzk4Mzg1NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogOCwgXCJuYW1lXCI6IFwiY29jb251dFwiLCBcInNpemVcIjogMy4wMjY2NTU4MTA4MjUxNjIsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcIm11dHRvblwiLCBcInNpemVcIjogMC4wMDUzMDk5MjI0NzUxMzE4NjM0LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJwb3J0X3dpbmVcIiwgXCJzaXplXCI6IDAuMDg2NzI4NzMzNzYwNDg3MDksIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEzLCBcIm5hbWVcIjogXCJob25leVwiLCBcInNpemVcIjogNC4zOTQ4NDU4MzUyNTA4MDU1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA4LCBcIm5hbWVcIjogXCJzZWVkXCIsIFwic2l6ZVwiOiAyLjMyMzk3NjA2OTk0OTM3ODgsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInJlZF9raWRuZXlfYmVhblwiLCBcInNpemVcIjogMC4xMDQ0Mjg0NzUzNDQyNTk5NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwibWludFwiLCBcInNpemVcIjogMS42NDk2MTU5MTU2MDc2MzIyLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJjcmVhbVwiLCBcInNpemVcIjogMTcuOTY4Nzc3NjU1ODQ2MjI1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAyLCBcIm5hbWVcIjogXCJsYW1iXCIsIFwic2l6ZVwiOiAwLjgzNTQyNzgwMjc1NDA3OTgsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImxlbW9uXCIsIFwic2l6ZVwiOiA1LjM5MTM0MTI4NjQxNzIxODUsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInJodWJhcmJcIiwgXCJzaXplXCI6IDAuMjk5MTI1NjMyNzY1NzYxNiwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcImNhdGZpc2hcIiwgXCJzaXplXCI6IDAuMTIwMzU4MjQyNzY5NjU1NTcsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcInNoZXJyeVwiLCBcInNpemVcIjogMS4xMTUwODM3MTk3Nzc2OTEzLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJsZWVrXCIsIFwic2l6ZVwiOiAwLjcyNzQ1OTM3OTA5MzA2NTIsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcImJlbGxfcGVwcGVyXCIsIFwic2l6ZVwiOiAxMC4zNDkwMzg5MDQwMzIwMDEsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImNyYW5iZXJyeVwiLCBcInNpemVcIjogMS42MjEyOTYzMjkwNzM1OTU2LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwic2FsbW9uXCIsIFwic2l6ZVwiOiAwLjc2ODE2ODc4NDczNTc0MjksIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcImNoaXZlXCIsIFwic2l6ZVwiOiAyLjMyNzUxNjAxODI2NjEzMywgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogMTIsIFwibmFtZVwiOiBcImZsb3dlclwiLCBcInNpemVcIjogMC4wNTMwOTkyMjQ3NTEzMTg2MjYsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcImdhcmxpY1wiLCBcInNpemVcIjogMjkuOTAwMTczNDU3NDY3NTIsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDExLCBcIm5hbWVcIjogXCJncmVlbl90ZWFcIiwgXCJzaXplXCI6IDAuMDU2NjM5MTczMDY4MDczMiwgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwibW96emFyZWxsYV9jaGVlc2VcIiwgXCJzaXplXCI6IDIuMjgzMjY2NjY0MzA2NzAxLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwidHVuYVwiLCBcInNpemVcIjogMC43ODQwOTg1NTIxNjExMzg0LCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJuZWN0YXJpbmVcIiwgXCJzaXplXCI6IDAuMDg4NDk4NzA3OTE4ODY0MzgsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcInBvcmtfc2F1c2FnZVwiLCBcInNpemVcIjogMi40MTA3MDQ4MDM3MDk4NjYsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInRvbWF0b1wiLCBcInNpemVcIjogMTcuNTM4NjczOTM1MzYwNTQyLCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwiY29kXCIsIFwic2l6ZVwiOiAwLjMwNzk3NTUwMzU1NzY0ODEsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDYsIFwibmFtZVwiOiBcInRhcnJhZ29uXCIsIFwic2l6ZVwiOiAwLjg0MjUwNzY5OTM4NzU4OSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwicG90YXRvXCIsIFwic2l6ZVwiOiA2LjI3NDU1ODM5MTQ0NzQ4NSwgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwiZmV0YV9jaGVlc2VcIiwgXCJzaXplXCI6IDEuMDk5MTUzOTUyMzUyMjk1NSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwiY2FiZXJuZXRfc2F1dmlnbm9uX3dpbmVcIiwgXCJzaXplXCI6IDAuMDMwMDg5NTYwNjkyNDEzODksIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcIndoZWF0X2JyZWFkXCIsIFwic2l6ZVwiOiAwLjE0NjkwNzg1NTE0NTMxNDg4LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJtdXNjYXRfZ3JhcGVcIiwgXCJzaXplXCI6IDAuMDAxNzY5OTc0MTU4Mzc3Mjg3NSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMTEsIFwibmFtZVwiOiBcImNvY29udXRfb2lsXCIsIFwic2l6ZVwiOiAwLjAzMDA4OTU2MDY5MjQxMzg5LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMywgXCJuYW1lXCI6IFwiZWdnXCIsIFwic2l6ZVwiOiAzNy4wODI3Mjg1OTIxNjI1NSwgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwid2luZVwiLCBcInNpemVcIjogMS41NTIyNjczMzY4OTY4ODEzLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwia2F0c3VvYnVzaGlcIiwgXCJzaXplXCI6IDAuMDg2NzI4NzMzNzYwNDk5OTcsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJzYXJkaW5lXCIsIFwic2l6ZVwiOiAwLjAsIFwidW1hbWlcIjogMX1dfVxuZXhwb3J0IGRlZmF1bHQgdW1hbWlEYXRhOyIsImltcG9ydCBOZXR3b3JrIGZyb20gJy4vTmV0d29yayc7XG5cbmltcG9ydCBmbGF2b3JEYXRhIGZyb20gJy4vZGF0YS9mbGF2b3JfZGF0YSc7XG5pbXBvcnQgdW1hbWlEYXRhIGZyb20gJy4vZGF0YS91bWFtaV9kYXRhJztcblxuXG4oKCkgPT4ge1xuXG4gIC8vIG1vYmlsZSBjaGVja1xuICBsZXQgaXNTcCA9ICgobmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdpUGhvbmUnKSA+IDAgfHxcbiAgICAgIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignaVBhZCcpID4gMCkgfHxcbiAgICAgIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignaVBvZCcpID4gMCB8fFxuICAgICAgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdBbmRyb2lkJykgPiAwKTtcbiAgY29uc29sZS5sb2coaXNTcCk7XG5cblxuICBjb25zdCBuZXR3b3JrID0gbmV3IE5ldHdvcmsoZmxhdm9yRGF0YSwgdW1hbWlEYXRhLCBpc1NwLCAnI2dyYXBoJyk7XG4gIG5ldHdvcmsuc2V0TGVnZW5kKCk7XG4gIG5ldHdvcmsucmVuZGVyKCk7XG4gIG5ldHdvcmsuc2V0TW91c2VBY3Rpb24oKTtcblxuICAvLyBjb25zdCBuZXR3b3JrMiA9IG5ldyBOZXR3b3JrKGZsYXZvckRhdGEsIHVtYW1pRGF0YSwgaXNTcCwgJyNncmFwaDInKTtcbiAgLy8gbmV0d29yazIuc2V0TGVnZW5kKCk7XG4gIC8vIG5ldHdvcmsyLnJlbmRlcigpO1xuICAvLyBuZXR3b3JrMi5zZXRNb3VzZUFjdGlvbigpO1xuXG4gIGNvbnN0IGRhdGFUeXBlU2VsZWN0b3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGF0YVR5cGUnKTtcbiAgZGF0YVR5cGVTZWxlY3Rvci5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBzZWxlY3RlZFR5cGUgPSB0aGlzLm9wdGlvbnNbdGhpcy5zZWxlY3RlZEluZGV4XS52YWx1ZTtcbiAgICBuZXR3b3JrLnVwZGF0ZShzZWxlY3RlZFR5cGUpO1xuICAgIG5ldHdvcmsuc2V0TW91c2VBY3Rpb24oKTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaDEnKS50ZXh0Q29udGVudCA9IHNlbGVjdGVkVHlwZSArICcgTmV0d29yayc7XG4gIH07XG5cblxufSkoKTtcblxuIl0sInNvdXJjZVJvb3QiOiIifQ==