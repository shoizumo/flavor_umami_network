/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/d3-array/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/array.js ***!
  \********************************************/
/*! exports provided: slice, map */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
var array = Array.prototype;
var slice = array.slice;
var map = array.map;

/***/ }),

/***/ "./node_modules/d3-array/src/ascending.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/ascending.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
});

/***/ }),

/***/ "./node_modules/d3-array/src/bisect.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/bisect.js ***!
  \*********************************************/
/*! exports provided: bisectRight, bisectLeft, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return bisectRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return bisectLeft; });
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _bisector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisector */ "./node_modules/d3-array/src/bisector.js");


var ascendingBisect = Object(_bisector__WEBPACK_IMPORTED_MODULE_1__["default"])(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"]);
var bisectRight = ascendingBisect.right;
var bisectLeft = ascendingBisect.left;
/* harmony default export */ __webpack_exports__["default"] = (bisectRight);

/***/ }),

/***/ "./node_modules/d3-array/src/bisector.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/bisector.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-array/src/ascending.js");

/* harmony default export */ __webpack_exports__["default"] = (function (compare) {
  if (compare.length === 1) compare = ascendingComparator(compare);
  return {
    left: function left(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;
      }

      return lo;
    },
    right: function right(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;
      }

      return lo;
    }
  };
});

function ascendingComparator(f) {
  return function (d, x) {
    return Object(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"])(f(d), x);
  };
}

/***/ }),

/***/ "./node_modules/d3-array/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-array/src/cross.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/cross.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _pairs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pairs */ "./node_modules/d3-array/src/pairs.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values0, values1, reduce) {
  var n0 = values0.length,
      n1 = values1.length,
      values = new Array(n0 * n1),
      i0,
      i1,
      i,
      value0;
  if (reduce == null) reduce = _pairs__WEBPACK_IMPORTED_MODULE_0__["pair"];

  for (i0 = i = 0; i0 < n0; ++i0) {
    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {
      values[i] = reduce(value0, values1[i1]);
    }
  }

  return values;
});

/***/ }),

/***/ "./node_modules/d3-array/src/descending.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-array/src/descending.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
});

/***/ }),

/***/ "./node_modules/d3-array/src/deviation.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/deviation.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _variance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./variance */ "./node_modules/d3-array/src/variance.js");

/* harmony default export */ __webpack_exports__["default"] = (function (array, f) {
  var v = Object(_variance__WEBPACK_IMPORTED_MODULE_0__["default"])(array, f);
  return v ? Math.sqrt(v) : v;
});

/***/ }),

/***/ "./node_modules/d3-array/src/extent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/extent.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  }

  return [min, max];
});

/***/ }),

/***/ "./node_modules/d3-array/src/histogram.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/histogram.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/d3-array/src/array.js");
/* harmony import */ var _bisect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisect */ "./node_modules/d3-array/src/bisect.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-array/src/constant.js");
/* harmony import */ var _extent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extent */ "./node_modules/d3-array/src/extent.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-array/src/identity.js");
/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./range */ "./node_modules/d3-array/src/range.js");
/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ticks */ "./node_modules/d3-array/src/ticks.js");
/* harmony import */ var _threshold_sturges__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./threshold/sturges */ "./node_modules/d3-array/src/threshold/sturges.js");








/* harmony default export */ __webpack_exports__["default"] = (function () {
  var value = _identity__WEBPACK_IMPORTED_MODULE_4__["default"],
      domain = _extent__WEBPACK_IMPORTED_MODULE_3__["default"],
      threshold = _threshold_sturges__WEBPACK_IMPORTED_MODULE_7__["default"];

  function histogram(data) {
    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      tz = Object(_ticks__WEBPACK_IMPORTED_MODULE_6__["tickStep"])(x0, x1, tz);
      tz = Object(_range__WEBPACK_IMPORTED_MODULE_5__["default"])(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive
    } // Remove any thresholds outside the domain.


    var m = tz.length;

    while (tz[0] <= x0) {
      tz.shift(), --m;
    }

    while (tz[m - 1] > x1) {
      tz.pop(), --m;
    }

    var bins = new Array(m + 1),
        bin; // Initialize bins.

    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    } // Assign data to bins by value, ignoring any outside the domain.


    for (i = 0; i < n; ++i) {
      x = values[i];

      if (x0 <= x && x <= x1) {
        bins[Object(_bisect__WEBPACK_IMPORTED_MODULE_1__["default"])(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : value;
  };

  histogram.domain = function (_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_)) : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : threshold;
  };

  return histogram;
});

/***/ }),

/***/ "./node_modules/d3-array/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/identity.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return x;
});

/***/ }),

/***/ "./node_modules/d3-array/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/index.js ***!
  \********************************************/
/*! exports provided: bisect, bisectRight, bisectLeft, ascending, bisector, cross, descending, deviation, extent, histogram, thresholdFreedmanDiaconis, thresholdScott, thresholdSturges, max, mean, median, merge, min, pairs, permute, quantile, range, scan, shuffle, sum, ticks, tickIncrement, tickStep, transpose, variance, zip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bisect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bisect */ "./node_modules/d3-array/src/bisect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisect", function() { return _bisect__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return _bisect__WEBPACK_IMPORTED_MODULE_0__["bisectRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return _bisect__WEBPACK_IMPORTED_MODULE_0__["bisectLeft"]; });

/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-array/src/ascending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ascending", function() { return _ascending__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _bisector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bisector */ "./node_modules/d3-array/src/bisector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisector", function() { return _bisector__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _cross__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cross */ "./node_modules/d3-array/src/cross.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return _cross__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _descending__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./descending */ "./node_modules/d3-array/src/descending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "descending", function() { return _descending__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _deviation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./deviation */ "./node_modules/d3-array/src/deviation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deviation", function() { return _deviation__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _extent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./extent */ "./node_modules/d3-array/src/extent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return _extent__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _histogram__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./histogram */ "./node_modules/d3-array/src/histogram.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "histogram", function() { return _histogram__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _threshold_freedmanDiaconis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./threshold/freedmanDiaconis */ "./node_modules/d3-array/src/threshold/freedmanDiaconis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdFreedmanDiaconis", function() { return _threshold_freedmanDiaconis__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _threshold_scott__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./threshold/scott */ "./node_modules/d3-array/src/threshold/scott.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdScott", function() { return _threshold_scott__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _threshold_sturges__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./threshold/sturges */ "./node_modules/d3-array/src/threshold/sturges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdSturges", function() { return _threshold_sturges__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _max__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./max */ "./node_modules/d3-array/src/max.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _max__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _mean__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./mean */ "./node_modules/d3-array/src/mean.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return _mean__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _median__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./median */ "./node_modules/d3-array/src/median.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "median", function() { return _median__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./merge */ "./node_modules/d3-array/src/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _merge__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _min__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./min */ "./node_modules/d3-array/src/min.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _min__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _pairs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./pairs */ "./node_modules/d3-array/src/pairs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return _pairs__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _permute__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./permute */ "./node_modules/d3-array/src/permute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permute", function() { return _permute__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./quantile */ "./node_modules/d3-array/src/quantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantile", function() { return _quantile__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./range */ "./node_modules/d3-array/src/range.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _range__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./scan */ "./node_modules/d3-array/src/scan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return _scan__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _shuffle__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./shuffle */ "./node_modules/d3-array/src/shuffle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return _shuffle__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./sum */ "./node_modules/d3-array/src/sum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return _sum__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./ticks */ "./node_modules/d3-array/src/ticks.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ticks", function() { return _ticks__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return _ticks__WEBPACK_IMPORTED_MODULE_23__["tickIncrement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return _ticks__WEBPACK_IMPORTED_MODULE_23__["tickStep"]; });

/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./transpose */ "./node_modules/d3-array/src/transpose.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return _transpose__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _variance__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./variance */ "./node_modules/d3-array/src/variance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "variance", function() { return _variance__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _zip__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./zip */ "./node_modules/d3-array/src/zip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _zip__WEBPACK_IMPORTED_MODULE_26__["default"]; });





























/***/ }),

/***/ "./node_modules/d3-array/src/max.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/max.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      i = -1,
      value,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && value > max) {
            max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && value > max) {
            max = value;
          }
        }
      }
    }
  }

  return max;
});

/***/ }),

/***/ "./node_modules/d3-array/src/mean.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/mean.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-array/src/number.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      m = n,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(values[i]))) sum += value;else --m;
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(valueof(values[i], i, values)))) sum += value;else --m;
    }
  }

  if (m) return sum / m;
});

/***/ }),

/***/ "./node_modules/d3-array/src/median.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/median.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number */ "./node_modules/d3-array/src/number.js");
/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./quantile */ "./node_modules/d3-array/src/quantile.js");



/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      i = -1,
      value,
      numbers = [];

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_1__["default"])(values[i]))) {
        numbers.push(value);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_1__["default"])(valueof(values[i], i, values)))) {
        numbers.push(value);
      }
    }
  }

  return Object(_quantile__WEBPACK_IMPORTED_MODULE_2__["default"])(numbers.sort(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"]), 0.5);
});

/***/ }),

/***/ "./node_modules/d3-array/src/merge.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/merge.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (arrays) {
  var n = arrays.length,
      m,
      i = -1,
      j = 0,
      merged,
      array;

  while (++i < n) {
    j += arrays[i].length;
  }

  merged = new Array(j);

  while (--n >= 0) {
    array = arrays[n];
    m = array.length;

    while (--m >= 0) {
      merged[--j] = array[m];
    }
  }

  return merged;
});

/***/ }),

/***/ "./node_modules/d3-array/src/min.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/min.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && min > value) {
            min = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && min > value) {
            min = value;
          }
        }
      }
    }
  }

  return min;
});

/***/ }),

/***/ "./node_modules/d3-array/src/number.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/number.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return x === null ? NaN : +x;
});

/***/ }),

/***/ "./node_modules/d3-array/src/pairs.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/pairs.js ***!
  \********************************************/
/*! exports provided: default, pair */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pair", function() { return pair; });
/* harmony default export */ __webpack_exports__["default"] = (function (array, f) {
  if (f == null) f = pair;
  var i = 0,
      n = array.length - 1,
      p = array[0],
      pairs = new Array(n < 0 ? 0 : n);

  while (i < n) {
    pairs[i] = f(p, p = array[++i]);
  }

  return pairs;
});
function pair(a, b) {
  return [a, b];
}

/***/ }),

/***/ "./node_modules/d3-array/src/permute.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/permute.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (array, indexes) {
  var i = indexes.length,
      permutes = new Array(i);

  while (i--) {
    permutes[i] = array[indexes[i]];
  }

  return permutes;
});

/***/ }),

/***/ "./node_modules/d3-array/src/quantile.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/quantile.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-array/src/number.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values, p, valueof) {
  if (valueof == null) valueof = _number__WEBPACK_IMPORTED_MODULE_0__["default"];
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
});

/***/ }),

/***/ "./node_modules/d3-array/src/range.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/range.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
});

/***/ }),

/***/ "./node_modules/d3-array/src/scan.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/scan.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-array/src/ascending.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values, compare) {
  if (!(n = values.length)) return;
  var n,
      i = 0,
      j = 0,
      xi,
      xj = values[j];
  if (compare == null) compare = _ascending__WEBPACK_IMPORTED_MODULE_0__["default"];

  while (++i < n) {
    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {
      xj = xi, j = i;
    }
  }

  if (compare(xj, xj) === 0) return j;
});

/***/ }),

/***/ "./node_modules/d3-array/src/shuffle.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/shuffle.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (array, i0, i1) {
  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m + i0];
    array[m + i0] = array[i + i0];
    array[i + i0] = t;
  }

  return array;
});

/***/ }),

/***/ "./node_modules/d3-array/src/sum.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/sum.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.
    }
  } else {
    while (++i < n) {
      if (value = +valueof(values[i], i, values)) sum += value;
    }
  }

  return sum;
});

/***/ }),

/***/ "./node_modules/d3-array/src/threshold/freedmanDiaconis.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/freedmanDiaconis.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array */ "./node_modules/d3-array/src/array.js");
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ascending */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../number */ "./node_modules/d3-array/src/number.js");
/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../quantile */ "./node_modules/d3-array/src/quantile.js");




/* harmony default export */ __webpack_exports__["default"] = (function (values, min, max) {
  values = _array__WEBPACK_IMPORTED_MODULE_0__["map"].call(values, _number__WEBPACK_IMPORTED_MODULE_2__["default"]).sort(_ascending__WEBPACK_IMPORTED_MODULE_1__["default"]);
  return Math.ceil((max - min) / (2 * (Object(_quantile__WEBPACK_IMPORTED_MODULE_3__["default"])(values, 0.75) - Object(_quantile__WEBPACK_IMPORTED_MODULE_3__["default"])(values, 0.25)) * Math.pow(values.length, -1 / 3)));
});

/***/ }),

/***/ "./node_modules/d3-array/src/threshold/scott.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/scott.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _deviation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deviation */ "./node_modules/d3-array/src/deviation.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values, min, max) {
  return Math.ceil((max - min) / (3.5 * Object(_deviation__WEBPACK_IMPORTED_MODULE_0__["default"])(values) * Math.pow(values.length, -1 / 3)));
});

/***/ }),

/***/ "./node_modules/d3-array/src/threshold/sturges.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/sturges.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (values) {
  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
});

/***/ }),

/***/ "./node_modules/d3-array/src/ticks.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/ticks.js ***!
  \********************************************/
/*! exports provided: default, tickIncrement, tickStep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return tickIncrement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return tickStep; });
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);
/* harmony default export */ __webpack_exports__["default"] = (function (start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;
  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    start = Math.ceil(start / step);
    stop = Math.floor(stop / step);
    ticks = new Array(n = Math.ceil(stop - start + 1));

    while (++i < n) {
      ticks[i] = (start + i) * step;
    }
  } else {
    start = Math.floor(start * step);
    stop = Math.ceil(stop * step);
    ticks = new Array(n = Math.ceil(start - stop + 1));

    while (++i < n) {
      ticks[i] = (start - i) / step;
    }
  }

  if (reverse) ticks.reverse();
  return ticks;
});
function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}
function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}

/***/ }),

/***/ "./node_modules/d3-array/src/transpose.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/transpose.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _min__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./min */ "./node_modules/d3-array/src/min.js");

/* harmony default export */ __webpack_exports__["default"] = (function (matrix) {
  if (!(n = matrix.length)) return [];

  for (var i = -1, m = Object(_min__WEBPACK_IMPORTED_MODULE_0__["default"])(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }

  return transpose;
});

function length(d) {
  return d.length;
}

/***/ }),

/***/ "./node_modules/d3-array/src/variance.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/variance.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-array/src/number.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values, valueof) {
  var n = values.length,
      m = 0,
      i = -1,
      mean = 0,
      value,
      delta,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(values[i]))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(valueof(values[i], i, values)))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  }

  if (m > 1) return sum / (m - 1);
});

/***/ }),

/***/ "./node_modules/d3-array/src/zip.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/zip.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transpose */ "./node_modules/d3-array/src/transpose.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_transpose__WEBPACK_IMPORTED_MODULE_0__["default"])(arguments);
});

/***/ }),

/***/ "./node_modules/d3-axis/src/array.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-axis/src/array.js ***!
  \*******************************************/
/*! exports provided: slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
var slice = Array.prototype.slice;

/***/ }),

/***/ "./node_modules/d3-axis/src/axis.js":
/*!******************************************!*\
  !*** ./node_modules/d3-axis/src/axis.js ***!
  \******************************************/
/*! exports provided: axisTop, axisRight, axisBottom, axisLeft */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "axisTop", function() { return axisTop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "axisRight", function() { return axisRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "axisBottom", function() { return axisBottom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "axisLeft", function() { return axisLeft; });
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/d3-axis/src/array.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-axis/src/identity.js");


var top = 1,
    right = 2,
    bottom = 3,
    left = 4,
    epsilon = 1e-6;

function translateX(x) {
  return "translate(" + (x + 0.5) + ",0)";
}

function translateY(y) {
  return "translate(0," + (y + 0.5) + ")";
}

function number(scale) {
  return function (d) {
    return +scale(d);
  };
}

function center(scale) {
  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.

  if (scale.round()) offset = Math.round(offset);
  return function (d) {
    return +scale(d) + offset;
  };
}

function entering() {
  return !this.__axis;
}

function axis(orient, scale) {
  var tickArguments = [],
      tickValues = null,
      tickFormat = null,
      tickSizeInner = 6,
      tickSizeOuter = 6,
      tickPadding = 3,
      k = orient === top || orient === left ? -1 : 1,
      x = orient === left || orient === right ? "x" : "y",
      transform = orient === top || orient === bottom ? translateX : translateY;

  function axis(context) {
    var values = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues,
        format = tickFormat == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : _identity__WEBPACK_IMPORTED_MODULE_1__["default"] : tickFormat,
        spacing = Math.max(tickSizeInner, 0) + tickPadding,
        range = scale.range(),
        range0 = +range[0] + 0.5,
        range1 = +range[range.length - 1] + 0.5,
        position = (scale.bandwidth ? center : number)(scale.copy()),
        selection = context.selection ? context.selection() : context,
        path = selection.selectAll(".domain").data([null]),
        tick = selection.selectAll(".tick").data(values, scale).order(),
        tickExit = tick.exit(),
        tickEnter = tick.enter().append("g").attr("class", "tick"),
        line = tick.select("line"),
        text = tick.select("text");
    path = path.merge(path.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor"));
    tick = tick.merge(tickEnter);
    line = line.merge(tickEnter.append("line").attr("stroke", "currentColor").attr(x + "2", k * tickSizeInner));
    text = text.merge(tickEnter.append("text").attr("fill", "currentColor").attr(x, k * spacing).attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

    if (context !== selection) {
      path = path.transition(context);
      tick = tick.transition(context);
      line = line.transition(context);
      text = text.transition(context);
      tickExit = tickExit.transition(context).attr("opacity", epsilon).attr("transform", function (d) {
        return isFinite(d = position(d)) ? transform(d) : this.getAttribute("transform");
      });
      tickEnter.attr("opacity", epsilon).attr("transform", function (d) {
        var p = this.parentNode.__axis;
        return transform(p && isFinite(p = p(d)) ? p : position(d));
      });
    }

    tickExit.remove();
    path.attr("d", orient === left || orient == right ? tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter : "M0.5," + range0 + "V" + range1 : tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + ",0.5H" + range1);
    tick.attr("opacity", 1).attr("transform", function (d) {
      return transform(position(d));
    });
    line.attr(x + "2", k * tickSizeInner);
    text.attr(x, k * spacing).text(format);
    selection.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");
    selection.each(function () {
      this.__axis = position;
    });
  }

  axis.scale = function (_) {
    return arguments.length ? (scale = _, axis) : scale;
  };

  axis.ticks = function () {
    return tickArguments = _array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(arguments), axis;
  };

  axis.tickArguments = function (_) {
    return arguments.length ? (tickArguments = _ == null ? [] : _array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_), axis) : tickArguments.slice();
  };

  axis.tickValues = function (_) {
    return arguments.length ? (tickValues = _ == null ? null : _array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_), axis) : tickValues && tickValues.slice();
  };

  axis.tickFormat = function (_) {
    return arguments.length ? (tickFormat = _, axis) : tickFormat;
  };

  axis.tickSize = function (_) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
  };

  axis.tickSizeInner = function (_) {
    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
  };

  axis.tickSizeOuter = function (_) {
    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
  };

  axis.tickPadding = function (_) {
    return arguments.length ? (tickPadding = +_, axis) : tickPadding;
  };

  return axis;
}

function axisTop(scale) {
  return axis(top, scale);
}
function axisRight(scale) {
  return axis(right, scale);
}
function axisBottom(scale) {
  return axis(bottom, scale);
}
function axisLeft(scale) {
  return axis(left, scale);
}

/***/ }),

/***/ "./node_modules/d3-axis/src/identity.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-axis/src/identity.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return x;
});

/***/ }),

/***/ "./node_modules/d3-axis/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-axis/src/index.js ***!
  \*******************************************/
/*! exports provided: axisTop, axisRight, axisBottom, axisLeft */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _axis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./axis */ "./node_modules/d3-axis/src/axis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisTop", function() { return _axis__WEBPACK_IMPORTED_MODULE_0__["axisTop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisRight", function() { return _axis__WEBPACK_IMPORTED_MODULE_0__["axisRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisBottom", function() { return _axis__WEBPACK_IMPORTED_MODULE_0__["axisBottom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisLeft", function() { return _axis__WEBPACK_IMPORTED_MODULE_0__["axisLeft"]; });



/***/ }),

/***/ "./node_modules/d3-brush/src/brush.js":
/*!********************************************!*\
  !*** ./node_modules/d3-brush/src/brush.js ***!
  \********************************************/
/*! exports provided: brushSelection, brushX, brushY, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "brushSelection", function() { return brushSelection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "brushX", function() { return brushX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "brushY", function() { return brushY; });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony import */ var d3_drag__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-drag */ "./node_modules/d3-drag/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-transition */ "./node_modules/d3-transition/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-brush/src/constant.js");
/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./event */ "./node_modules/d3-brush/src/event.js");
/* harmony import */ var _noevent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./noevent */ "./node_modules/d3-brush/src/noevent.js");








var MODE_DRAG = {
  name: "drag"
},
    MODE_SPACE = {
  name: "space"
},
    MODE_HANDLE = {
  name: "handle"
},
    MODE_CENTER = {
  name: "center"
};
var X = {
  name: "x",
  handles: ["e", "w"].map(type),
  input: function input(x, e) {
    return x && [[x[0], e[0][1]], [x[1], e[1][1]]];
  },
  output: function output(xy) {
    return xy && [xy[0][0], xy[1][0]];
  }
};
var Y = {
  name: "y",
  handles: ["n", "s"].map(type),
  input: function input(y, e) {
    return y && [[e[0][0], y[0]], [e[1][0], y[1]]];
  },
  output: function output(xy) {
    return xy && [xy[0][1], xy[1][1]];
  }
};
var XY = {
  name: "xy",
  handles: ["n", "e", "s", "w", "nw", "ne", "se", "sw"].map(type),
  input: function input(xy) {
    return xy;
  },
  output: function output(xy) {
    return xy;
  }
};
var cursors = {
  overlay: "crosshair",
  selection: "move",
  n: "ns-resize",
  e: "ew-resize",
  s: "ns-resize",
  w: "ew-resize",
  nw: "nwse-resize",
  ne: "nesw-resize",
  se: "nwse-resize",
  sw: "nesw-resize"
};
var flipX = {
  e: "w",
  w: "e",
  nw: "ne",
  ne: "nw",
  se: "sw",
  sw: "se"
};
var flipY = {
  n: "s",
  s: "n",
  nw: "sw",
  ne: "se",
  se: "ne",
  sw: "nw"
};
var signsX = {
  overlay: +1,
  selection: +1,
  n: null,
  e: +1,
  s: null,
  w: -1,
  nw: -1,
  ne: +1,
  se: +1,
  sw: -1
};
var signsY = {
  overlay: +1,
  selection: +1,
  n: -1,
  e: null,
  s: +1,
  w: null,
  nw: -1,
  ne: -1,
  se: +1,
  sw: +1
};

function type(t) {
  return {
    type: t
  };
} // Ignore right-click, since that should open the context menu.


function defaultFilter() {
  return !d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].button;
}

function defaultExtent() {
  var svg = this.ownerSVGElement || this;
  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
} // Like d3.local, but with the name “__brush” rather than auto-generated.


function local(node) {
  while (!node.__brush) {
    if (!(node = node.parentNode)) return;
  }

  return node.__brush;
}

function empty(extent) {
  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];
}

function brushSelection(node) {
  var state = node.__brush;
  return state ? state.dim.output(state.selection) : null;
}
function brushX() {
  return brush(X);
}
function brushY() {
  return brush(Y);
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return brush(XY);
});

function brush(dim) {
  var extent = defaultExtent,
      filter = defaultFilter,
      listeners = Object(d3_dispatch__WEBPACK_IMPORTED_MODULE_0__["dispatch"])(brush, "start", "brush", "end"),
      handleSize = 6,
      touchending;

  function brush(group) {
    var overlay = group.property("__brush", initialize).selectAll(".overlay").data([type("overlay")]);
    overlay.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", cursors.overlay).merge(overlay).each(function () {
      var extent = local(this).extent;
      Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(this).attr("x", extent[0][0]).attr("y", extent[0][1]).attr("width", extent[1][0] - extent[0][0]).attr("height", extent[1][1] - extent[0][1]);
    });
    group.selectAll(".selection").data([type("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", cursors.selection).attr("fill", "#777").attr("fill-opacity", 0.3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");
    var handle = group.selectAll(".handle").data(dim.handles, function (d) {
      return d.type;
    });
    handle.exit().remove();
    handle.enter().append("rect").attr("class", function (d) {
      return "handle handle--" + d.type;
    }).attr("cursor", function (d) {
      return cursors[d.type];
    });
    group.each(redraw).attr("fill", "none").attr("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush touchstart.brush", started);
  }

  brush.move = function (group, selection) {
    if (group.selection) {
      group.on("start.brush", function () {
        emitter(this, arguments).beforestart().start();
      }).on("interrupt.brush end.brush", function () {
        emitter(this, arguments).end();
      }).tween("brush", function () {
        var that = this,
            state = that.__brush,
            emit = emitter(that, arguments),
            selection0 = state.selection,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
            i = Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_2__["interpolate"])(selection0, selection1);

        function tween(t) {
          state.selection = t === 1 && empty(selection1) ? null : i(t);
          redraw.call(that);
          emit.brush();
        }

        return selection0 && selection1 ? tween : tween(1);
      });
    } else {
      group.each(function () {
        var that = this,
            args = arguments,
            state = that.__brush,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
            emit = emitter(that, args).beforestart();
        Object(d3_transition__WEBPACK_IMPORTED_MODULE_4__["interrupt"])(that);
        state.selection = selection1 == null || empty(selection1) ? null : selection1;
        redraw.call(that);
        emit.start().brush().end();
      });
    }
  };

  function redraw() {
    var group = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(this),
        selection = local(this).selection;

    if (selection) {
      group.selectAll(".selection").style("display", null).attr("x", selection[0][0]).attr("y", selection[0][1]).attr("width", selection[1][0] - selection[0][0]).attr("height", selection[1][1] - selection[0][1]);
      group.selectAll(".handle").style("display", null).attr("x", function (d) {
        return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;
      }).attr("y", function (d) {
        return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;
      }).attr("width", function (d) {
        return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize;
      }).attr("height", function (d) {
        return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize;
      });
    } else {
      group.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null);
    }
  }

  function emitter(that, args) {
    return that.__brush.emitter || new Emitter(that, args);
  }

  function Emitter(that, args) {
    this.that = that;
    this.args = args;
    this.state = that.__brush;
    this.active = 0;
  }

  Emitter.prototype = {
    beforestart: function beforestart() {
      if (++this.active === 1) this.state.emitter = this, this.starting = true;
      return this;
    },
    start: function start() {
      if (this.starting) this.starting = false, this.emit("start");
      return this;
    },
    brush: function brush() {
      this.emit("brush");
      return this;
    },
    end: function end() {
      if (--this.active === 0) delete this.state.emitter, this.emit("end");
      return this;
    },
    emit: function emit(type) {
      Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["customEvent"])(new _event__WEBPACK_IMPORTED_MODULE_6__["default"](brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function started() {
    if (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].touches) {
      if (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].changedTouches.length < d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].touches.length) return Object(_noevent__WEBPACK_IMPORTED_MODULE_7__["default"])();
    } else if (touchending) return;

    if (!filter.apply(this, arguments)) return;
    var that = this,
        type = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].target.__data__.type,
        mode = (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].altKey ? MODE_CENTER : MODE_HANDLE,
        signX = dim === Y ? null : signsX[type],
        signY = dim === X ? null : signsY[type],
        state = local(that),
        extent = state.extent,
        selection = state.selection,
        W = extent[0][0],
        w0,
        w1,
        N = extent[0][1],
        n0,
        n1,
        E = extent[1][0],
        e0,
        e1,
        S = extent[1][1],
        s0,
        s1,
        dx,
        dy,
        moving,
        shifting = signX && signY && d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].shiftKey,
        lockX,
        lockY,
        point0 = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["mouse"])(that),
        point = point0,
        emit = emitter(that, arguments).beforestart();

    if (type === "overlay") {
      state.selection = selection = [[w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]], [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]];
    } else {
      w0 = selection[0][0];
      n0 = selection[0][1];
      e0 = selection[1][0];
      s0 = selection[1][1];
    }

    w1 = w0;
    n1 = n0;
    e1 = e0;
    s1 = s0;
    var group = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(that).attr("pointer-events", "none");
    var overlay = group.selectAll(".overlay").attr("cursor", cursors[type]);

    if (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].touches) {
      group.on("touchmove.brush", moved, true).on("touchend.brush touchcancel.brush", ended, true);
    } else {
      var view = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].view).on("keydown.brush", keydowned, true).on("keyup.brush", keyupped, true).on("mousemove.brush", moved, true).on("mouseup.brush", ended, true);
      Object(d3_drag__WEBPACK_IMPORTED_MODULE_1__["dragDisable"])(d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].view);
    }

    Object(_noevent__WEBPACK_IMPORTED_MODULE_7__["nopropagation"])();
    Object(d3_transition__WEBPACK_IMPORTED_MODULE_4__["interrupt"])(that);
    redraw.call(that);
    emit.start();

    function moved() {
      var point1 = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["mouse"])(that);

      if (shifting && !lockX && !lockY) {
        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;else lockX = true;
      }

      point = point1;
      moving = true;
      Object(_noevent__WEBPACK_IMPORTED_MODULE_7__["default"])();
      move();
    }

    function move() {
      var t;
      dx = point[0] - point0[0];
      dy = point[1] - point0[1];

      switch (mode) {
        case MODE_SPACE:
        case MODE_DRAG:
          {
            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
            break;
          }

        case MODE_HANDLE:
          {
            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
            break;
          }

        case MODE_CENTER:
          {
            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));
            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));
            break;
          }
      }

      if (e1 < w1) {
        signX *= -1;
        t = w0, w0 = e0, e0 = t;
        t = w1, w1 = e1, e1 = t;
        if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
      }

      if (s1 < n1) {
        signY *= -1;
        t = n0, n0 = s0, s0 = t;
        t = n1, n1 = s1, s1 = t;
        if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
      }

      if (state.selection) selection = state.selection; // May be set by brush.move!

      if (lockX) w1 = selection[0][0], e1 = selection[1][0];
      if (lockY) n1 = selection[0][1], s1 = selection[1][1];

      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {
        state.selection = [[w1, n1], [e1, s1]];
        redraw.call(that);
        emit.brush();
      }
    }

    function ended() {
      Object(_noevent__WEBPACK_IMPORTED_MODULE_7__["nopropagation"])();

      if (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].touches) {
        if (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].touches.length) return;
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function () {
          touchending = null;
        }, 500); // Ghost clicks are delayed!

        group.on("touchmove.brush touchend.brush touchcancel.brush", null);
      } else {
        Object(d3_drag__WEBPACK_IMPORTED_MODULE_1__["dragEnable"])(d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].view, moving);
        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
      }

      group.attr("pointer-events", "all");
      overlay.attr("cursor", cursors.overlay);
      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!

      if (empty(selection)) state.selection = null, redraw.call(that);
      emit.end();
    }

    function keydowned() {
      switch (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].keyCode) {
        case 16:
          {
            // SHIFT
            shifting = signX && signY;
            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_HANDLE) {
              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
              mode = MODE_CENTER;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE; takes priority over ALT
            if (mode === MODE_HANDLE || mode === MODE_CENTER) {
              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;
              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;
              mode = MODE_SPACE;
              overlay.attr("cursor", cursors.selection);
              move();
            }

            break;
          }

        default:
          return;
      }

      Object(_noevent__WEBPACK_IMPORTED_MODULE_7__["default"])();
    }

    function keyupped() {
      switch (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].keyCode) {
        case 16:
          {
            // SHIFT
            if (shifting) {
              lockX = lockY = shifting = false;
              move();
            }

            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_CENTER) {
              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
              mode = MODE_HANDLE;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE
            if (mode === MODE_SPACE) {
              if (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].altKey) {
                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
                mode = MODE_CENTER;
              } else {
                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
                mode = MODE_HANDLE;
              }

              overlay.attr("cursor", cursors[type]);
              move();
            }

            break;
          }

        default:
          return;
      }

      Object(_noevent__WEBPACK_IMPORTED_MODULE_7__["default"])();
    }
  }

  function initialize() {
    var state = this.__brush || {
      selection: null
    };
    state.extent = extent.apply(this, arguments);
    state.dim = dim;
    return state;
  }

  brush.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_5__["default"])([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;
  };

  brush.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_5__["default"])(!!_), brush) : filter;
  };

  brush.handleSize = function (_) {
    return arguments.length ? (handleSize = +_, brush) : handleSize;
  };

  brush.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? brush : value;
  };

  return brush;
}

/***/ }),

/***/ "./node_modules/d3-brush/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-brush/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-brush/src/event.js":
/*!********************************************!*\
  !*** ./node_modules/d3-brush/src/event.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (target, type, selection) {
  this.target = target;
  this.type = type;
  this.selection = selection;
});

/***/ }),

/***/ "./node_modules/d3-brush/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-brush/src/index.js ***!
  \********************************************/
/*! exports provided: brush, brushX, brushY, brushSelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _brush__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./brush */ "./node_modules/d3-brush/src/brush.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brush", function() { return _brush__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brushX", function() { return _brush__WEBPACK_IMPORTED_MODULE_0__["brushX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brushY", function() { return _brush__WEBPACK_IMPORTED_MODULE_0__["brushY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brushSelection", function() { return _brush__WEBPACK_IMPORTED_MODULE_0__["brushSelection"]; });



/***/ }),

/***/ "./node_modules/d3-brush/src/noevent.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-brush/src/noevent.js ***!
  \**********************************************/
/*! exports provided: nopropagation, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nopropagation", function() { return nopropagation; });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");

function nopropagation() {
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].stopImmediatePropagation();
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].preventDefault();
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].stopImmediatePropagation();
});

/***/ }),

/***/ "./node_modules/d3-chord/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-chord/src/array.js ***!
  \********************************************/
/*! exports provided: slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
var slice = Array.prototype.slice;

/***/ }),

/***/ "./node_modules/d3-chord/src/chord.js":
/*!********************************************!*\
  !*** ./node_modules/d3-chord/src/chord.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-chord/src/math.js");



function compareValue(compare) {
  return function (a, b) {
    return compare(a.source.value + a.target.value, b.source.value + b.target.value);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var padAngle = 0,
      sortGroups = null,
      sortSubgroups = null,
      sortChords = null;

  function chord(matrix) {
    var n = matrix.length,
        groupSums = [],
        groupIndex = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(n),
        subgroupIndex = [],
        chords = [],
        groups = chords.groups = new Array(n),
        subgroups = new Array(n * n),
        k,
        x,
        x0,
        dx,
        i,
        j; // Compute the sum.

    k = 0, i = -1;

    while (++i < n) {
      x = 0, j = -1;

      while (++j < n) {
        x += matrix[i][j];
      }

      groupSums.push(x);
      subgroupIndex.push(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(n));
      k += x;
    } // Sort groups…


    if (sortGroups) groupIndex.sort(function (a, b) {
      return sortGroups(groupSums[a], groupSums[b]);
    }); // Sort subgroups…

    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {
      d.sort(function (a, b) {
        return sortSubgroups(matrix[i][a], matrix[i][b]);
      });
    }); // Convert the sum to scaling factor for [0, 2pi].
    // TODO Allow start and end angle to be specified?
    // TODO Allow padding to be specified as percentage?

    k = Object(_math__WEBPACK_IMPORTED_MODULE_1__["max"])(0, _math__WEBPACK_IMPORTED_MODULE_1__["tau"] - padAngle * n) / k;
    dx = k ? padAngle : _math__WEBPACK_IMPORTED_MODULE_1__["tau"] / n; // Compute the start and end angle for each group and subgroup.
    // Note: Opera has a bug reordering object literal properties!

    x = 0, i = -1;

    while (++i < n) {
      x0 = x, j = -1;

      while (++j < n) {
        var di = groupIndex[i],
            dj = subgroupIndex[di][j],
            v = matrix[di][dj],
            a0 = x,
            a1 = x += v * k;
        subgroups[dj * n + di] = {
          index: di,
          subindex: dj,
          startAngle: a0,
          endAngle: a1,
          value: v
        };
      }

      groups[di] = {
        index: di,
        startAngle: x0,
        endAngle: x,
        value: groupSums[di]
      };
      x += dx;
    } // Generate chords for each (non-empty) subgroup-subgroup link.


    i = -1;

    while (++i < n) {
      j = i - 1;

      while (++j < n) {
        var source = subgroups[j * n + i],
            target = subgroups[i * n + j];

        if (source.value || target.value) {
          chords.push(source.value < target.value ? {
            source: target,
            target: source
          } : {
            source: source,
            target: target
          });
        }
      }
    }

    return sortChords ? chords.sort(sortChords) : chords;
  }

  chord.padAngle = function (_) {
    return arguments.length ? (padAngle = Object(_math__WEBPACK_IMPORTED_MODULE_1__["max"])(0, _), chord) : padAngle;
  };

  chord.sortGroups = function (_) {
    return arguments.length ? (sortGroups = _, chord) : sortGroups;
  };

  chord.sortSubgroups = function (_) {
    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
  };

  chord.sortChords = function (_) {
    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
  };

  return chord;
});

/***/ }),

/***/ "./node_modules/d3-chord/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-chord/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-chord/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-chord/src/index.js ***!
  \********************************************/
/*! exports provided: chord, ribbon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _chord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chord */ "./node_modules/d3-chord/src/chord.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chord", function() { return _chord__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _ribbon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ribbon */ "./node_modules/d3-chord/src/ribbon.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ribbon", function() { return _ribbon__WEBPACK_IMPORTED_MODULE_1__["default"]; });




/***/ }),

/***/ "./node_modules/d3-chord/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-chord/src/math.js ***!
  \*******************************************/
/*! exports provided: cos, sin, pi, halfPi, tau, max */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return cos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return sin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return pi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "halfPi", function() { return halfPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return tau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
var cos = Math.cos;
var sin = Math.sin;
var pi = Math.PI;
var halfPi = pi / 2;
var tau = pi * 2;
var max = Math.max;

/***/ }),

/***/ "./node_modules/d3-chord/src/ribbon.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-chord/src/ribbon.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/d3-chord/src/array.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-chord/src/constant.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-chord/src/math.js");
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");





function defaultSource(d) {
  return d.source;
}

function defaultTarget(d) {
  return d.target;
}

function defaultRadius(d) {
  return d.radius;
}

function defaultStartAngle(d) {
  return d.startAngle;
}

function defaultEndAngle(d) {
  return d.endAngle;
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var source = defaultSource,
      target = defaultTarget,
      radius = defaultRadius,
      startAngle = defaultStartAngle,
      endAngle = defaultEndAngle,
      context = null;

  function ribbon() {
    var buffer,
        argv = _array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv),
        sr = +radius.apply(this, (argv[0] = s, argv)),
        sa0 = startAngle.apply(this, argv) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"],
        sa1 = endAngle.apply(this, argv) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"],
        sx0 = sr * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(sa0),
        sy0 = sr * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(sa0),
        tr = +radius.apply(this, (argv[0] = t, argv)),
        ta0 = startAngle.apply(this, argv) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"],
        ta1 = endAngle.apply(this, argv) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"];
    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_3__["path"])();
    context.moveTo(sx0, sy0);
    context.arc(0, 0, sr, sa0, sa1);

    if (sa0 !== ta0 || sa1 !== ta1) {
      // TODO sr !== tr?
      context.quadraticCurveTo(0, 0, tr * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(ta0), tr * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(ta0));
      context.arc(0, 0, tr, ta0, ta1);
    }

    context.quadraticCurveTo(0, 0, sx0, sy0);
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  ribbon.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), ribbon) : radius;
  };

  ribbon.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), ribbon) : startAngle;
  };

  ribbon.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), ribbon) : endAngle;
  };

  ribbon.source = function (_) {
    return arguments.length ? (source = _, ribbon) : source;
  };

  ribbon.target = function (_) {
    return arguments.length ? (target = _, ribbon) : target;
  };

  ribbon.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;
  };

  return ribbon;
});

/***/ }),

/***/ "./node_modules/d3-collection/src/entries.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-collection/src/entries.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (map) {
  var entries = [];

  for (var key in map) {
    entries.push({
      key: key,
      value: map[key]
    });
  }

  return entries;
});

/***/ }),

/***/ "./node_modules/d3-collection/src/index.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-collection/src/index.js ***!
  \*************************************************/
/*! exports provided: nest, set, map, keys, values, entries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _nest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nest */ "./node_modules/d3-collection/src/nest.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nest", function() { return _nest__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./set */ "./node_modules/d3-collection/src/set.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "set", function() { return _set__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./map */ "./node_modules/d3-collection/src/map.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return _map__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./keys */ "./node_modules/d3-collection/src/keys.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keys", function() { return _keys__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _values__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./values */ "./node_modules/d3-collection/src/values.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "values", function() { return _values__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _entries__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./entries */ "./node_modules/d3-collection/src/entries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "entries", function() { return _entries__WEBPACK_IMPORTED_MODULE_5__["default"]; });








/***/ }),

/***/ "./node_modules/d3-collection/src/keys.js":
/*!************************************************!*\
  !*** ./node_modules/d3-collection/src/keys.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (map) {
  var keys = [];

  for (var key in map) {
    keys.push(key);
  }

  return keys;
});

/***/ }),

/***/ "./node_modules/d3-collection/src/map.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-collection/src/map.js ***!
  \***********************************************/
/*! exports provided: prefix, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prefix", function() { return prefix; });
var prefix = "$";

function Map() {}

Map.prototype = map.prototype = {
  constructor: Map,
  has: function has(key) {
    return prefix + key in this;
  },
  get: function get(key) {
    return this[prefix + key];
  },
  set: function set(key, value) {
    this[prefix + key] = value;
    return this;
  },
  remove: function remove(key) {
    var property = prefix + key;
    return property in this && delete this[property];
  },
  clear: function clear() {
    for (var property in this) {
      if (property[0] === prefix) delete this[property];
    }
  },
  keys: function keys() {
    var keys = [];

    for (var property in this) {
      if (property[0] === prefix) keys.push(property.slice(1));
    }

    return keys;
  },
  values: function values() {
    var values = [];

    for (var property in this) {
      if (property[0] === prefix) values.push(this[property]);
    }

    return values;
  },
  entries: function entries() {
    var entries = [];

    for (var property in this) {
      if (property[0] === prefix) entries.push({
        key: property.slice(1),
        value: this[property]
      });
    }

    return entries;
  },
  size: function size() {
    var size = 0;

    for (var property in this) {
      if (property[0] === prefix) ++size;
    }

    return size;
  },
  empty: function empty() {
    for (var property in this) {
      if (property[0] === prefix) return false;
    }

    return true;
  },
  each: function each(f) {
    for (var property in this) {
      if (property[0] === prefix) f(this[property], property.slice(1), this);
    }
  }
};

function map(object, f) {
  var map = new Map(); // Copy constructor.

  if (object instanceof Map) object.each(function (value, key) {
    map.set(key, value);
  }); // Index array by numeric index or specified key function.
  else if (Array.isArray(object)) {
      var i = -1,
          n = object.length,
          o;
      if (f == null) while (++i < n) {
        map.set(i, object[i]);
      } else while (++i < n) {
        map.set(f(o = object[i], i, object), o);
      }
    } // Convert object to map.
    else if (object) for (var key in object) {
        map.set(key, object[key]);
      }
  return map;
}

/* harmony default export */ __webpack_exports__["default"] = (map);

/***/ }),

/***/ "./node_modules/d3-collection/src/nest.js":
/*!************************************************!*\
  !*** ./node_modules/d3-collection/src/nest.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map */ "./node_modules/d3-collection/src/map.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var keys = [],
      _sortKeys = [],
      _sortValues,
      _rollup,
      nest;

  function apply(array, depth, createResult, setResult) {
    if (depth >= keys.length) {
      if (_sortValues != null) array.sort(_sortValues);
      return _rollup != null ? _rollup(array) : array;
    }

    var i = -1,
        n = array.length,
        key = keys[depth++],
        keyValue,
        value,
        valuesByKey = Object(_map__WEBPACK_IMPORTED_MODULE_0__["default"])(),
        values,
        result = createResult();

    while (++i < n) {
      if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
        values.push(value);
      } else {
        valuesByKey.set(keyValue, [value]);
      }
    }

    valuesByKey.each(function (values, key) {
      setResult(result, key, apply(values, depth, createResult, setResult));
    });
    return result;
  }

  function _entries(map, depth) {
    if (++depth > keys.length) return map;
    var array,
        sortKey = _sortKeys[depth - 1];
    if (_rollup != null && depth >= keys.length) array = map.entries();else array = [], map.each(function (v, k) {
      array.push({
        key: k,
        values: _entries(v, depth)
      });
    });
    return sortKey != null ? array.sort(function (a, b) {
      return sortKey(a.key, b.key);
    }) : array;
  }

  return nest = {
    object: function object(array) {
      return apply(array, 0, createObject, setObject);
    },
    map: function map(array) {
      return apply(array, 0, createMap, setMap);
    },
    entries: function entries(array) {
      return _entries(apply(array, 0, createMap, setMap), 0);
    },
    key: function key(d) {
      keys.push(d);
      return nest;
    },
    sortKeys: function sortKeys(order) {
      _sortKeys[keys.length - 1] = order;
      return nest;
    },
    sortValues: function sortValues(order) {
      _sortValues = order;
      return nest;
    },
    rollup: function rollup(f) {
      _rollup = f;
      return nest;
    }
  };
});

function createObject() {
  return {};
}

function setObject(object, key, value) {
  object[key] = value;
}

function createMap() {
  return Object(_map__WEBPACK_IMPORTED_MODULE_0__["default"])();
}

function setMap(map, key, value) {
  map.set(key, value);
}

/***/ }),

/***/ "./node_modules/d3-collection/src/set.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-collection/src/set.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map */ "./node_modules/d3-collection/src/map.js");


function Set() {}

var proto = _map__WEBPACK_IMPORTED_MODULE_0__["default"].prototype;
Set.prototype = set.prototype = {
  constructor: Set,
  has: proto.has,
  add: function add(value) {
    value += "";
    this[_map__WEBPACK_IMPORTED_MODULE_0__["prefix"] + value] = value;
    return this;
  },
  remove: proto.remove,
  clear: proto.clear,
  values: proto.keys,
  size: proto.size,
  empty: proto.empty,
  each: proto.each
};

function set(object, f) {
  var set = new Set(); // Copy constructor.

  if (object instanceof Set) object.each(function (value) {
    set.add(value);
  }); // Otherwise, assume it’s an array.
  else if (object) {
      var i = -1,
          n = object.length;
      if (f == null) while (++i < n) {
        set.add(object[i]);
      } else while (++i < n) {
        set.add(f(object[i], i, object));
      }
    }
  return set;
}

/* harmony default export */ __webpack_exports__["default"] = (set);

/***/ }),

/***/ "./node_modules/d3-collection/src/values.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-collection/src/values.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (map) {
  var values = [];

  for (var key in map) {
    values.push(map[key]);
  }

  return values;
});

/***/ }),

/***/ "./node_modules/d3-color/src/color.js":
/*!********************************************!*\
  !*** ./node_modules/d3-color/src/color.js ***!
  \********************************************/
/*! exports provided: Color, darker, brighter, default, rgbConvert, rgb, Rgb, hslConvert, hsl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Color", function() { return Color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "darker", function() { return _darker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "brighter", function() { return _brighter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbConvert", function() { return rgbConvert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgb", function() { return rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rgb", function() { return Rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hslConvert", function() { return hslConvert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hsl", function() { return hsl; });
/* harmony import */ var _define__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define */ "./node_modules/d3-color/src/define.js");

function Color() {}
var _darker = 0.7;


var _brighter = 1 / _darker;


var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex3 = /^#([0-9a-f]{3})$/,
    reHex6 = /^#([0-9a-f]{6})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};
Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Color, color, {
  displayable: function displayable() {
    return this.rgb().displayable();
  },
  hex: function hex() {
    return this.rgb().hex();
  },
  toString: function toString() {
    return this.rgb() + "";
  }
});
function color(format) {
  var m;
  format = (format + "").trim().toLowerCase();
  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb(m >> 8 & 0xf | m >> 4 & 0x0f0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
  ) : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000
  : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
  : named.hasOwnProperty(format) ? rgbn(named[format]) : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}
function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}
function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}
Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Rgb, rgb, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(Color, {
  brighter: function brighter(k) {
    k = k == null ? _brighter : Math.pow(_brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function darker(k) {
    k = k == null ? _darker : Math.pow(_darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function rgb() {
    return this;
  },
  displayable: function displayable() {
    return 0 <= this.r && this.r <= 255 && 0 <= this.g && this.g <= 255 && 0 <= this.b && this.b <= 255 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: function hex() {
    return "#" + _hex(this.r) + _hex(this.g) + _hex(this.b);
  },
  toString: function toString() {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
  }
}));

function _hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl();
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;

  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }

  return new Hsl(h, s, l, o.opacity);
}
function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Hsl, hsl, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(Color, {
  brighter: function brighter(k) {
    k = k == null ? _brighter : Math.pow(_brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function darker(k) {
    k = k == null ? _darker : Math.pow(_darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function rgb() {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
  },
  displayable: function displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  }
}));
/* From FvD 13.37, CSS Color Module Level 3 */

function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}

/***/ }),

/***/ "./node_modules/d3-color/src/cubehelix.js":
/*!************************************************!*\
  !*** ./node_modules/d3-color/src/cubehelix.js ***!
  \************************************************/
/*! exports provided: default, Cubehelix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return cubehelix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cubehelix", function() { return Cubehelix; });
/* harmony import */ var _define__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define */ "./node_modules/d3-color/src/define.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-color/src/math.js");



var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color__WEBPACK_IMPORTED_MODULE_1__["Rgb"])) o = Object(_color__WEBPACK_IMPORTED_MODULE_1__["rgbConvert"])(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),
      // NaN if l=0 or l=1
  h = s ? Math.atan2(k, bl) * _math__WEBPACK_IMPORTED_MODULE_2__["rad2deg"] - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}
function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}
Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Cubehelix, cubehelix, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function brighter(k) {
    k = k == null ? _color__WEBPACK_IMPORTED_MODULE_1__["brighter"] : Math.pow(_color__WEBPACK_IMPORTED_MODULE_1__["brighter"], k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function darker(k) {
    k = k == null ? _color__WEBPACK_IMPORTED_MODULE_1__["darker"] : Math.pow(_color__WEBPACK_IMPORTED_MODULE_1__["darker"], k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function rgb() {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math__WEBPACK_IMPORTED_MODULE_2__["deg2rad"],
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color__WEBPACK_IMPORTED_MODULE_1__["Rgb"](255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
  }
}));

/***/ }),

/***/ "./node_modules/d3-color/src/define.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-color/src/define.js ***!
  \*********************************************/
/*! exports provided: default, extend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony default export */ __webpack_exports__["default"] = (function (constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
});
function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);

  for (var key in definition) {
    prototype[key] = definition[key];
  }

  return prototype;
}

/***/ }),

/***/ "./node_modules/d3-color/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-color/src/index.js ***!
  \********************************************/
/*! exports provided: color, rgb, hsl, lab, hcl, lch, gray, cubehelix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color */ "./node_modules/d3-color/src/color.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "color", function() { return _color__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rgb", function() { return _color__WEBPACK_IMPORTED_MODULE_0__["rgb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hsl", function() { return _color__WEBPACK_IMPORTED_MODULE_0__["hsl"]; });

/* harmony import */ var _lab__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lab */ "./node_modules/d3-color/src/lab.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lab", function() { return _lab__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hcl", function() { return _lab__WEBPACK_IMPORTED_MODULE_1__["hcl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lch", function() { return _lab__WEBPACK_IMPORTED_MODULE_1__["lch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gray", function() { return _lab__WEBPACK_IMPORTED_MODULE_1__["gray"]; });

/* harmony import */ var _cubehelix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubehelix */ "./node_modules/d3-color/src/cubehelix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cubehelix", function() { return _cubehelix__WEBPACK_IMPORTED_MODULE_2__["default"]; });





/***/ }),

/***/ "./node_modules/d3-color/src/lab.js":
/*!******************************************!*\
  !*** ./node_modules/d3-color/src/lab.js ***!
  \******************************************/
/*! exports provided: gray, default, Lab, lch, hcl, Hcl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gray", function() { return gray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Lab", function() { return Lab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lch", function() { return lch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hcl", function() { return hcl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Hcl", function() { return Hcl; });
/* harmony import */ var _define__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define */ "./node_modules/d3-color/src/define.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-color/src/math.js");


 // https://beta.observablehq.com/@mbostock/lab-and-rgb

var K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);

  if (o instanceof Hcl) {
    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
    var h = o.h * _math__WEBPACK_IMPORTED_MODULE_2__["deg2rad"];
    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
  }

  if (!(o instanceof _color__WEBPACK_IMPORTED_MODULE_1__["Rgb"])) o = Object(_color__WEBPACK_IMPORTED_MODULE_1__["rgbConvert"])(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),
      x,
      z;
  if (r === g && g === b) x = z = y;else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}
function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}
function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}
Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Lab, lab, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function brighter(k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function darker(k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function rgb() {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color__WEBPACK_IMPORTED_MODULE_1__["Rgb"](lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);
  var h = Math.atan2(o.b, o.a) * _math__WEBPACK_IMPORTED_MODULE_2__["rad2deg"];
  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}
function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}
function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}
Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Hcl, hcl, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function brighter(k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function darker(k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function rgb() {
    return labConvert(this).rgb();
  }
}));

/***/ }),

/***/ "./node_modules/d3-color/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-color/src/math.js ***!
  \*******************************************/
/*! exports provided: deg2rad, rad2deg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deg2rad", function() { return deg2rad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rad2deg", function() { return rad2deg; });
var deg2rad = Math.PI / 180;
var rad2deg = 180 / Math.PI;

/***/ }),

/***/ "./node_modules/d3-contour/src/area.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-contour/src/area.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (ring) {
  var i = 0,
      n = ring.length,
      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];

  while (++i < n) {
    area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];
  }

  return area;
});

/***/ }),

/***/ "./node_modules/d3-contour/src/array.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-contour/src/array.js ***!
  \**********************************************/
/*! exports provided: slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
var array = Array.prototype;
var slice = array.slice;

/***/ }),

/***/ "./node_modules/d3-contour/src/ascending.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-contour/src/ascending.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return a - b;
});

/***/ }),

/***/ "./node_modules/d3-contour/src/blur.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-contour/src/blur.js ***!
  \*********************************************/
/*! exports provided: blurX, blurY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blurX", function() { return blurX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blurY", function() { return blurY; });
// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurX(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var j = 0; j < m; ++j) {
    for (var i = 0, sr = 0; i < n + r; ++i) {
      if (i < n) {
        sr += source.data[i + j * n];
      }

      if (i >= r) {
        if (i >= w) {
          sr -= source.data[i - w + j * n];
        }

        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);
      }
    }
  }
} // TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.

function blurY(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var i = 0; i < n; ++i) {
    for (var j = 0, sr = 0; j < m + r; ++j) {
      if (j < m) {
        sr += source.data[i + j * n];
      }

      if (j >= r) {
        if (j >= w) {
          sr -= source.data[i + (j - w) * n];
        }

        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);
      }
    }
  }
}

/***/ }),

/***/ "./node_modules/d3-contour/src/constant.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-contour/src/constant.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-contour/src/contains.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-contour/src/contains.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (ring, hole) {
  var i = -1,
      n = hole.length,
      c;

  while (++i < n) {
    if (c = ringContains(ring, hole[i])) return c;
  }

  return 0;
});

function ringContains(ring, point) {
  var x = point[0],
      y = point[1],
      contains = -1;

  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
    var pi = ring[i],
        xi = pi[0],
        yi = pi[1],
        pj = ring[j],
        xj = pj[0],
        yj = pj[1];
    if (segmentContains(pi, pj, point)) return 0;
    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;
  }

  return contains;
}

function segmentContains(a, b, c) {
  var i;
  return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);
}

function collinear(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);
}

function within(p, q, r) {
  return p <= q && q <= r || r <= q && q <= p;
}

/***/ }),

/***/ "./node_modules/d3-contour/src/contours.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-contour/src/contours.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-contour/src/array.js");
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-contour/src/ascending.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./area */ "./node_modules/d3-contour/src/area.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-contour/src/constant.js");
/* harmony import */ var _contains__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./contains */ "./node_modules/d3-contour/src/contains.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./noop */ "./node_modules/d3-contour/src/noop.js");







var cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []];
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var dx = 1,
      dy = 1,
      threshold = d3_array__WEBPACK_IMPORTED_MODULE_0__["thresholdSturges"],
      smooth = smoothLinear;

  function contours(values) {
    var tz = threshold(values); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var domain = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["extent"])(values),
          start = domain[0],
          stop = domain[1];
      tz = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start, stop, tz);
      tz = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);
    } else {
      tz = tz.slice().sort(_ascending__WEBPACK_IMPORTED_MODULE_2__["default"]);
    }

    return tz.map(function (value) {
      return contour(values, value);
    });
  } // Accumulate, smooth contour rings, assign holes to exterior rings.
  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js


  function contour(values, value) {
    var polygons = [],
        holes = [];
    isorings(values, value, function (ring) {
      smooth(ring, values, value);
      if (Object(_area__WEBPACK_IMPORTED_MODULE_3__["default"])(ring) > 0) polygons.push([ring]);else holes.push(ring);
    });
    holes.forEach(function (hole) {
      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
        if (Object(_contains__WEBPACK_IMPORTED_MODULE_5__["default"])((polygon = polygons[i])[0], hole) !== -1) {
          polygon.push(hole);
          return;
        }
      }
    });
    return {
      type: "MultiPolygon",
      value: value,
      coordinates: polygons
    };
  } // Marching squares with isolines stitched into rings.
  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js


  function isorings(values, value, callback) {
    var fragmentByStart = new Array(),
        fragmentByEnd = new Array(),
        x,
        y,
        t0,
        t1,
        t2,
        t3; // Special case for the first row (y = -1, t2 = t3 = 0).

    x = y = -1;
    t1 = values[0] >= value;
    cases[t1 << 1].forEach(stitch);

    while (++x < dx - 1) {
      t0 = t1, t1 = values[x + 1] >= value;
      cases[t0 | t1 << 1].forEach(stitch);
    }

    cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.

    while (++y < dy - 1) {
      x = -1;
      t1 = values[y * dx + dx] >= value;
      t2 = values[y * dx] >= value;
      cases[t1 << 1 | t2 << 2].forEach(stitch);

      while (++x < dx - 1) {
        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;
        t3 = t2, t2 = values[y * dx + x + 1] >= value;
        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
      }

      cases[t1 | t2 << 3].forEach(stitch);
    } // Special case for the last row (y = dy - 1, t0 = t1 = 0).


    x = -1;
    t2 = values[y * dx] >= value;
    cases[t2 << 2].forEach(stitch);

    while (++x < dx - 1) {
      t3 = t2, t2 = values[y * dx + x + 1] >= value;
      cases[t2 << 2 | t3 << 3].forEach(stitch);
    }

    cases[t2 << 3].forEach(stitch);

    function stitch(line) {
      var start = [line[0][0] + x, line[0][1] + y],
          end = [line[1][0] + x, line[1][1] + y],
          startIndex = index(start),
          endIndex = index(end),
          f,
          g;

      if (f = fragmentByEnd[startIndex]) {
        if (g = fragmentByStart[endIndex]) {
          delete fragmentByEnd[f.end];
          delete fragmentByStart[g.start];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[f.start] = fragmentByEnd[g.end] = {
              start: f.start,
              end: g.end,
              ring: f.ring.concat(g.ring)
            };
          }
        } else {
          delete fragmentByEnd[f.end];
          f.ring.push(end);
          fragmentByEnd[f.end = endIndex] = f;
        }
      } else if (f = fragmentByStart[endIndex]) {
        if (g = fragmentByEnd[startIndex]) {
          delete fragmentByStart[f.start];
          delete fragmentByEnd[g.end];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[g.start] = fragmentByEnd[f.end] = {
              start: g.start,
              end: f.end,
              ring: g.ring.concat(f.ring)
            };
          }
        } else {
          delete fragmentByStart[f.start];
          f.ring.unshift(start);
          fragmentByStart[f.start = startIndex] = f;
        }
      } else {
        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {
          start: startIndex,
          end: endIndex,
          ring: [start, end]
        };
      }
    }
  }

  function index(point) {
    return point[0] * 2 + point[1] * (dx + 1) * 4;
  }

  function smoothLinear(ring, values, value) {
    ring.forEach(function (point) {
      var x = point[0],
          y = point[1],
          xt = x | 0,
          yt = y | 0,
          v0,
          v1 = values[yt * dx + xt];

      if (x > 0 && x < dx && xt === x) {
        v0 = values[yt * dx + xt - 1];
        point[0] = x + (value - v0) / (v1 - v0) - 0.5;
      }

      if (y > 0 && y < dy && yt === y) {
        v0 = values[(yt - 1) * dx + xt];
        point[1] = y + (value - v0) / (v1 - v0) - 0.5;
      }
    });
  }

  contours.contour = contour;

  contours.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 > 0) || !(_1 > 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, contours;
  };

  contours.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(_array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_)) : Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(_), contours) : threshold;
  };

  contours.smooth = function (_) {
    return arguments.length ? (smooth = _ ? smoothLinear : _noop__WEBPACK_IMPORTED_MODULE_6__["default"], contours) : smooth === smoothLinear;
  };

  return contours;
});

/***/ }),

/***/ "./node_modules/d3-contour/src/density.js":
/*!************************************************!*\
  !*** ./node_modules/d3-contour/src/density.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-contour/src/array.js");
/* harmony import */ var _blur__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./blur */ "./node_modules/d3-contour/src/blur.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-contour/src/constant.js");
/* harmony import */ var _contours__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contours */ "./node_modules/d3-contour/src/contours.js");






function defaultX(d) {
  return d[0];
}

function defaultY(d) {
  return d[1];
}

function defaultWeight() {
  return 1;
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var x = defaultX,
      y = defaultY,
      weight = defaultWeight,
      dx = 960,
      dy = 500,
      r = 20,
      // blur radius
  k = 2,
      // log2(grid cell size)
  o = r * 3,
      // grid offset, to pad for blur
  n = dx + o * 2 >> k,
      // grid width
  m = dy + o * 2 >> k,
      // grid height
  threshold = Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(20);

  function density(data) {
    var values0 = new Float32Array(n * m),
        values1 = new Float32Array(n * m);
    data.forEach(function (d, i, data) {
      var xi = +x(d, i, data) + o >> k,
          yi = +y(d, i, data) + o >> k,
          wi = +weight(d, i, data);

      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {
        values0[xi + yi * n] += wi;
      }
    }); // TODO Optimize.

    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurX"])({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurY"])({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurX"])({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurY"])({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurX"])({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurY"])({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    var tz = threshold(values0); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var stop = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["max"])(values0);
      tz = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(0, stop, tz);
      tz = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(0, Math.floor(stop / tz) * tz, tz);
      tz.shift();
    }

    return Object(_contours__WEBPACK_IMPORTED_MODULE_4__["default"])().thresholds(tz).size([n, m])(values0).map(transform);
  }

  function transform(geometry) {
    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.

    geometry.coordinates.forEach(transformPolygon);
    return geometry;
  }

  function transformPolygon(coordinates) {
    coordinates.forEach(transformRing);
  }

  function transformRing(coordinates) {
    coordinates.forEach(transformPoint);
  } // TODO Optimize.


  function transformPoint(coordinates) {
    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
  }

  function resize() {
    o = r * 3;
    n = dx + o * 2 >> k;
    m = dy + o * 2 >> k;
    return density;
  }

  density.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+_), density) : x;
  };

  density.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+_), density) : y;
  };

  density.weight = function (_) {
    return arguments.length ? (weight = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+_), density) : weight;
  };

  density.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, resize();
  };

  density.cellSize = function (_) {
    if (!arguments.length) return 1 << k;
    if (!((_ = +_) >= 1)) throw new Error("invalid cell size");
    return k = Math.floor(Math.log(_) / Math.LN2), resize();
  };

  density.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(_array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_)) : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(_), density) : threshold;
  };

  density.bandwidth = function (_) {
    if (!arguments.length) return Math.sqrt(r * (r + 1));
    if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");
    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
  };

  return density;
});

/***/ }),

/***/ "./node_modules/d3-contour/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-contour/src/index.js ***!
  \**********************************************/
/*! exports provided: contours, contourDensity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _contours__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./contours */ "./node_modules/d3-contour/src/contours.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "contours", function() { return _contours__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _density__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./density */ "./node_modules/d3-contour/src/density.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "contourDensity", function() { return _density__WEBPACK_IMPORTED_MODULE_1__["default"]; });




/***/ }),

/***/ "./node_modules/d3-contour/src/noop.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-contour/src/noop.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {});

/***/ }),

/***/ "./node_modules/d3-dispatch/src/dispatch.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-dispatch/src/dispatch.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var noop = {
  value: function value() {}
};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || t in _) throw new Error("illegal type: " + t);
    _[t] = [];
  }

  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {
      type: t,
      name: name
    };
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function on(typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length; // If no callback was specified, return the callback of the given type and name.

    if (arguments.length < 2) {
      while (++i < n) {
        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
      }

      return;
    } // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.


    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);

    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {
        _[t] = set(_[t], typename.name, null);
      }
    }

    return this;
  },
  copy: function copy() {
    var copy = {},
        _ = this._;

    for (var t in _) {
      copy[t] = _[t].slice();
    }

    return new Dispatch(copy);
  },
  call: function call(type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {
      args[i] = arguments[i + 2];
    }
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {
      t[i].value.apply(that, args);
    }
  },
  apply: function apply(type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {
      t[i].value.apply(that, args);
    }
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }

  if (callback != null) type.push({
    name: name,
    value: callback
  });
  return type;
}

/* harmony default export */ __webpack_exports__["default"] = (dispatch);

/***/ }),

/***/ "./node_modules/d3-dispatch/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-dispatch/src/index.js ***!
  \***********************************************/
/*! exports provided: dispatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dispatch */ "./node_modules/d3-dispatch/src/dispatch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dispatch", function() { return _dispatch__WEBPACK_IMPORTED_MODULE_0__["default"]; });



/***/ }),

/***/ "./node_modules/d3-drag/src/constant.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-drag/src/constant.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-drag/src/drag.js":
/*!******************************************!*\
  !*** ./node_modules/d3-drag/src/drag.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _nodrag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nodrag */ "./node_modules/d3-drag/src/nodrag.js");
/* harmony import */ var _noevent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./noevent */ "./node_modules/d3-drag/src/noevent.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-drag/src/constant.js");
/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./event */ "./node_modules/d3-drag/src/event.js");





 // Ignore right-click, since that should open the context menu.

function defaultFilter() {
  return !d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].button;
}

function defaultContainer() {
  return this.parentNode;
}

function defaultSubject(d) {
  return d == null ? {
    x: d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].x,
    y: d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].y
  } : d;
}

function defaultTouchable() {
  return "ontouchstart" in this;
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var filter = defaultFilter,
      container = defaultContainer,
      subject = defaultSubject,
      touchable = defaultTouchable,
      gestures = {},
      listeners = Object(d3_dispatch__WEBPACK_IMPORTED_MODULE_0__["dispatch"])("start", "drag", "end"),
      active = 0,
      mousedownx,
      mousedowny,
      mousemoving,
      touchending,
      clickDistance2 = 0;

  function drag(selection) {
    selection.on("mousedown.drag", mousedowned).filter(touchable).on("touchstart.drag", touchstarted).on("touchmove.drag", touchmoved).on("touchend.drag touchcancel.drag", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var gesture = beforestart("mouse", container.apply(this, arguments), d3_selection__WEBPACK_IMPORTED_MODULE_1__["mouse"], this, arguments);
    if (!gesture) return;
    Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["select"])(d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
    Object(_nodrag__WEBPACK_IMPORTED_MODULE_2__["default"])(d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].view);
    Object(_noevent__WEBPACK_IMPORTED_MODULE_3__["nopropagation"])();
    mousemoving = false;
    mousedownx = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].clientX;
    mousedowny = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].clientY;
    gesture("start");
  }

  function mousemoved() {
    Object(_noevent__WEBPACK_IMPORTED_MODULE_3__["default"])();

    if (!mousemoving) {
      var dx = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].clientX - mousedownx,
          dy = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].clientY - mousedowny;
      mousemoving = dx * dx + dy * dy > clickDistance2;
    }

    gestures.mouse("drag");
  }

  function mouseupped() {
    Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["select"])(d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].view).on("mousemove.drag mouseup.drag", null);
    Object(_nodrag__WEBPACK_IMPORTED_MODULE_2__["yesdrag"])(d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].view, mousemoving);
    Object(_noevent__WEBPACK_IMPORTED_MODULE_3__["default"])();
    gestures.mouse("end");
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var touches = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].changedTouches,
        c = container.apply(this, arguments),
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = beforestart(touches[i].identifier, c, d3_selection__WEBPACK_IMPORTED_MODULE_1__["touch"], this, arguments)) {
        Object(_noevent__WEBPACK_IMPORTED_MODULE_3__["nopropagation"])();
        gesture("start");
      }
    }
  }

  function touchmoved() {
    var touches = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].changedTouches,
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        Object(_noevent__WEBPACK_IMPORTED_MODULE_3__["default"])();
        gesture("drag");
      }
    }
  }

  function touchended() {
    var touches = d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].changedTouches,
        n = touches.length,
        i,
        gesture;
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, 500); // Ghost clicks are delayed!

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        Object(_noevent__WEBPACK_IMPORTED_MODULE_3__["nopropagation"])();
        gesture("end");
      }
    }
  }

  function beforestart(id, container, point, that, args) {
    var p = point(container, id),
        s,
        dx,
        dy,
        sublisteners = listeners.copy();
    if (!Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["customEvent"])(new _event__WEBPACK_IMPORTED_MODULE_5__["default"](drag, "beforestart", s, id, active, p[0], p[1], 0, 0, sublisteners), function () {
      if ((d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].subject = s = subject.apply(that, args)) == null) return false;
      dx = s.x - p[0] || 0;
      dy = s.y - p[1] || 0;
      return true;
    })) return;
    return function gesture(type) {
      var p0 = p,
          n;

      switch (type) {
        case "start":
          gestures[id] = gesture, n = active++;
          break;

        case "end":
          delete gestures[id], --active;
        // nobreak

        case "drag":
          p = point(container, id), n = active;
          break;
      }

      Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["customEvent"])(new _event__WEBPACK_IMPORTED_MODULE_5__["default"](drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);
    };
  }

  drag.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(!!_), drag) : filter;
  };

  drag.container = function (_) {
    return arguments.length ? (container = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(_), drag) : container;
  };

  drag.subject = function (_) {
    return arguments.length ? (subject = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(_), drag) : subject;
  };

  drag.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(!!_), drag) : touchable;
  };

  drag.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? drag : value;
  };

  drag.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
  };

  return drag;
});

/***/ }),

/***/ "./node_modules/d3-drag/src/event.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-drag/src/event.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DragEvent; });
function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {
  this.target = target;
  this.type = type;
  this.subject = subject;
  this.identifier = id;
  this.active = active;
  this.x = x;
  this.y = y;
  this.dx = dx;
  this.dy = dy;
  this._ = dispatch;
}

DragEvent.prototype.on = function () {
  var value = this._.on.apply(this._, arguments);

  return value === this._ ? this : value;
};

/***/ }),

/***/ "./node_modules/d3-drag/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-drag/src/index.js ***!
  \*******************************************/
/*! exports provided: drag, dragDisable, dragEnable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _drag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./drag */ "./node_modules/d3-drag/src/drag.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drag", function() { return _drag__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _nodrag__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nodrag */ "./node_modules/d3-drag/src/nodrag.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dragDisable", function() { return _nodrag__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dragEnable", function() { return _nodrag__WEBPACK_IMPORTED_MODULE_1__["yesdrag"]; });




/***/ }),

/***/ "./node_modules/d3-drag/src/nodrag.js":
/*!********************************************!*\
  !*** ./node_modules/d3-drag/src/nodrag.js ***!
  \********************************************/
/*! exports provided: default, yesdrag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "yesdrag", function() { return yesdrag; });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _noevent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./noevent */ "./node_modules/d3-drag/src/noevent.js");


/* harmony default export */ __webpack_exports__["default"] = (function (view) {
  var root = view.document.documentElement,
      selection = Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["select"])(view).on("dragstart.drag", _noevent__WEBPACK_IMPORTED_MODULE_1__["default"], true);

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", _noevent__WEBPACK_IMPORTED_MODULE_1__["default"], true);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
});
function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["select"])(view).on("dragstart.drag", null);

  if (noclick) {
    selection.on("click.drag", _noevent__WEBPACK_IMPORTED_MODULE_1__["default"], true);
    setTimeout(function () {
      selection.on("click.drag", null);
    }, 0);
  }

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}

/***/ }),

/***/ "./node_modules/d3-drag/src/noevent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-drag/src/noevent.js ***!
  \*********************************************/
/*! exports provided: nopropagation, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nopropagation", function() { return nopropagation; });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");

function nopropagation() {
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].stopImmediatePropagation();
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].preventDefault();
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].stopImmediatePropagation();
});

/***/ }),

/***/ "./node_modules/d3-dsv/src/autoType.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-dsv/src/autoType.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return autoType; });
function autoType(object) {
  for (var key in object) {
    var value = object[key].trim(),
        number;
    if (!value) value = null;else if (value === "true") value = true;else if (value === "false") value = false;else if (value === "NaN") value = NaN;else if (!isNaN(number = +value)) value = number;else if (/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/.test(value)) value = new Date(value);else continue;
    object[key] = value;
  }

  return object;
}

/***/ }),

/***/ "./node_modules/d3-dsv/src/csv.js":
/*!****************************************!*\
  !*** ./node_modules/d3-dsv/src/csv.js ***!
  \****************************************/
/*! exports provided: csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvParse", function() { return csvParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvParseRows", function() { return csvParseRows; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvFormat", function() { return csvFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvFormatBody", function() { return csvFormatBody; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvFormatRows", function() { return csvFormatRows; });
/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv */ "./node_modules/d3-dsv/src/dsv.js");

var csv = Object(_dsv__WEBPACK_IMPORTED_MODULE_0__["default"])(",");
var csvParse = csv.parse;
var csvParseRows = csv.parseRows;
var csvFormat = csv.format;
var csvFormatBody = csv.formatBody;
var csvFormatRows = csv.formatRows;

/***/ }),

/***/ "./node_modules/d3-dsv/src/dsv.js":
/*!****************************************!*\
  !*** ./node_modules/d3-dsv/src/dsv.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var EOL = {},
    EOF = {},
    QUOTE = 34,
    NEWLINE = 10,
    RETURN = 13;

function objectConverter(columns) {
  return new Function("d", "return {" + columns.map(function (name, i) {
    return JSON.stringify(name) + ": d[" + i + "]";
  }).join(",") + "}");
}

function customConverter(columns, f) {
  var object = objectConverter(columns);
  return function (row, i) {
    return f(object(row), i, columns);
  };
} // Compute unique columns in order of discovery.


function inferColumns(rows) {
  var columnSet = Object.create(null),
      columns = [];
  rows.forEach(function (row) {
    for (var column in row) {
      if (!(column in columnSet)) {
        columns.push(columnSet[column] = column);
      }
    }
  });
  return columns;
}

function pad(value, width) {
  var s = value + "",
      length = s.length;
  return length < width ? new Array(width - length + 1).join(0) + s : s;
}

function formatYear(year) {
  return year < 0 ? "-" + pad(-year, 6) : year > 9999 ? "+" + pad(year, 6) : pad(year, 4);
}

function formatDate(date) {
  var hours = date.getUTCHours(),
      minutes = date.getUTCMinutes(),
      seconds = date.getUTCSeconds(),
      milliseconds = date.getUTCMilliseconds();
  return isNaN(date) ? "Invalid Date" : formatYear(date.getUTCFullYear(), 4) + "-" + pad(date.getUTCMonth() + 1, 2) + "-" + pad(date.getUTCDate(), 2) + (milliseconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "." + pad(milliseconds, 3) + "Z" : seconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "Z" : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z" : "");
}

/* harmony default export */ __webpack_exports__["default"] = (function (delimiter) {
  var reFormat = new RegExp("[\"" + delimiter + "\n\r]"),
      DELIMITER = delimiter.charCodeAt(0);

  function parse(text, f) {
    var convert,
        columns,
        rows = parseRows(text, function (row, i) {
      if (convert) return convert(row, i - 1);
      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
    });
    rows.columns = columns || [];
    return rows;
  }

  function parseRows(text, f) {
    var rows = [],
        // output rows
    N = text.length,
        I = 0,
        // current character index
    n = 0,
        // current line number
    t,
        // current token
    eof = N <= 0,
        // current token followed by EOF?
    eol = false; // current token followed by EOL?
    // Strip the trailing newline.

    if (text.charCodeAt(N - 1) === NEWLINE) --N;
    if (text.charCodeAt(N - 1) === RETURN) --N;

    function token() {
      if (eof) return EOF;
      if (eol) return eol = false, EOL; // Unescape quotes.

      var i,
          j = I,
          c;

      if (text.charCodeAt(j) === QUOTE) {
        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE) {
          ;
        }

        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        }
        return text.slice(j + 1, i - 1).replace(/""/g, "\"");
      } // Find next delimiter or newline.


      while (I < N) {
        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        } else if (c !== DELIMITER) continue;
        return text.slice(j, i);
      } // Return last token before EOF.


      return eof = true, text.slice(j, N);
    }

    while ((t = token()) !== EOF) {
      var row = [];

      while (t !== EOL && t !== EOF) {
        row.push(t), t = token();
      }

      if (f && (row = f(row, n++)) == null) continue;
      rows.push(row);
    }

    return rows;
  }

  function preformatBody(rows, columns) {
    return rows.map(function (row) {
      return columns.map(function (column) {
        return formatValue(row[column]);
      }).join(delimiter);
    });
  }

  function format(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
  }

  function formatBody(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return preformatBody(rows, columns).join("\n");
  }

  function formatRows(rows) {
    return rows.map(formatRow).join("\n");
  }

  function formatRow(row) {
    return row.map(formatValue).join(delimiter);
  }

  function formatValue(value) {
    return value == null ? "" : value instanceof Date ? formatDate(value) : reFormat.test(value += "") ? "\"" + value.replace(/"/g, "\"\"") + "\"" : value;
  }

  return {
    parse: parse,
    parseRows: parseRows,
    format: format,
    formatBody: formatBody,
    formatRows: formatRows
  };
});

/***/ }),

/***/ "./node_modules/d3-dsv/src/index.js":
/*!******************************************!*\
  !*** ./node_modules/d3-dsv/src/index.js ***!
  \******************************************/
/*! exports provided: dsvFormat, csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows, tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows, autoType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv */ "./node_modules/d3-dsv/src/dsv.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dsvFormat", function() { return _dsv__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _csv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csv */ "./node_modules/d3-dsv/src/csv.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvParse", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvParseRows", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvParseRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormat", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormatBody", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvFormatBody"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormatRows", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvFormatRows"]; });

/* harmony import */ var _tsv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tsv */ "./node_modules/d3-dsv/src/tsv.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvParse", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvParseRows", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvParseRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormat", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormatBody", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvFormatBody"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormatRows", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvFormatRows"]; });

/* harmony import */ var _autoType__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./autoType */ "./node_modules/d3-dsv/src/autoType.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "autoType", function() { return _autoType__WEBPACK_IMPORTED_MODULE_3__["default"]; });






/***/ }),

/***/ "./node_modules/d3-dsv/src/tsv.js":
/*!****************************************!*\
  !*** ./node_modules/d3-dsv/src/tsv.js ***!
  \****************************************/
/*! exports provided: tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvParse", function() { return tsvParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvParseRows", function() { return tsvParseRows; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvFormat", function() { return tsvFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvFormatBody", function() { return tsvFormatBody; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvFormatRows", function() { return tsvFormatRows; });
/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv */ "./node_modules/d3-dsv/src/dsv.js");

var tsv = Object(_dsv__WEBPACK_IMPORTED_MODULE_0__["default"])("\t");
var tsvParse = tsv.parse;
var tsvParseRows = tsv.parseRows;
var tsvFormat = tsv.format;
var tsvFormatBody = tsv.formatBody;
var tsvFormatRows = tsv.formatRows;

/***/ }),

/***/ "./node_modules/d3-ease/src/back.js":
/*!******************************************!*\
  !*** ./node_modules/d3-ease/src/back.js ***!
  \******************************************/
/*! exports provided: backIn, backOut, backInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "backIn", function() { return backIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "backOut", function() { return backOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "backInOut", function() { return backInOut; });
var overshoot = 1.70158;
var backIn = function custom(s) {
  s = +s;

  function backIn(t) {
    return t * t * ((s + 1) * t - s);
  }

  backIn.overshoot = custom;
  return backIn;
}(overshoot);
var backOut = function custom(s) {
  s = +s;

  function backOut(t) {
    return --t * t * ((s + 1) * t + s) + 1;
  }

  backOut.overshoot = custom;
  return backOut;
}(overshoot);
var backInOut = function custom(s) {
  s = +s;

  function backInOut(t) {
    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
  }

  backInOut.overshoot = custom;
  return backInOut;
}(overshoot);

/***/ }),

/***/ "./node_modules/d3-ease/src/bounce.js":
/*!********************************************!*\
  !*** ./node_modules/d3-ease/src/bounce.js ***!
  \********************************************/
/*! exports provided: bounceIn, bounceOut, bounceInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceIn", function() { return bounceIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceOut", function() { return bounceOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceInOut", function() { return bounceInOut; });
var b1 = 4 / 11,
    b2 = 6 / 11,
    b3 = 8 / 11,
    b4 = 3 / 4,
    b5 = 9 / 11,
    b6 = 10 / 11,
    b7 = 15 / 16,
    b8 = 21 / 22,
    b9 = 63 / 64,
    b0 = 1 / b1 / b1;
function bounceIn(t) {
  return 1 - bounceOut(1 - t);
}
function bounceOut(t) {
  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
}
function bounceInOut(t) {
  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
}

/***/ }),

/***/ "./node_modules/d3-ease/src/circle.js":
/*!********************************************!*\
  !*** ./node_modules/d3-ease/src/circle.js ***!
  \********************************************/
/*! exports provided: circleIn, circleOut, circleInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleIn", function() { return circleIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleOut", function() { return circleOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleInOut", function() { return circleInOut; });
function circleIn(t) {
  return 1 - Math.sqrt(1 - t * t);
}
function circleOut(t) {
  return Math.sqrt(1 - --t * t);
}
function circleInOut(t) {
  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
}

/***/ }),

/***/ "./node_modules/d3-ease/src/cubic.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-ease/src/cubic.js ***!
  \*******************************************/
/*! exports provided: cubicIn, cubicOut, cubicInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicIn", function() { return cubicIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicOut", function() { return cubicOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicInOut", function() { return cubicInOut; });
function cubicIn(t) {
  return t * t * t;
}
function cubicOut(t) {
  return --t * t * t + 1;
}
function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}

/***/ }),

/***/ "./node_modules/d3-ease/src/elastic.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-ease/src/elastic.js ***!
  \*********************************************/
/*! exports provided: elasticIn, elasticOut, elasticInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elasticIn", function() { return elasticIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elasticOut", function() { return elasticOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elasticInOut", function() { return elasticInOut; });
var tau = 2 * Math.PI,
    amplitude = 1,
    period = 0.3;
var elasticIn = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticIn(t) {
    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
  }

  elasticIn.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticIn.period = function (p) {
    return custom(a, p);
  };

  return elasticIn;
}(amplitude, period);
var elasticOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticOut(t) {
    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
  }

  elasticOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticOut.period = function (p) {
    return custom(a, p);
  };

  return elasticOut;
}(amplitude, period);
var elasticInOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticInOut(t) {
    return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
  }

  elasticInOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticInOut.period = function (p) {
    return custom(a, p);
  };

  return elasticInOut;
}(amplitude, period);

/***/ }),

/***/ "./node_modules/d3-ease/src/exp.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-ease/src/exp.js ***!
  \*****************************************/
/*! exports provided: expIn, expOut, expInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expIn", function() { return expIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expOut", function() { return expOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expInOut", function() { return expInOut; });
function expIn(t) {
  return Math.pow(2, 10 * t - 10);
}
function expOut(t) {
  return 1 - Math.pow(2, -10 * t);
}
function expInOut(t) {
  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
}

/***/ }),

/***/ "./node_modules/d3-ease/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-ease/src/index.js ***!
  \*******************************************/
/*! exports provided: easeLinear, easeQuad, easeQuadIn, easeQuadOut, easeQuadInOut, easeCubic, easeCubicIn, easeCubicOut, easeCubicInOut, easePoly, easePolyIn, easePolyOut, easePolyInOut, easeSin, easeSinIn, easeSinOut, easeSinInOut, easeExp, easeExpIn, easeExpOut, easeExpInOut, easeCircle, easeCircleIn, easeCircleOut, easeCircleInOut, easeBounce, easeBounceIn, easeBounceOut, easeBounceInOut, easeBack, easeBackIn, easeBackOut, easeBackInOut, easeElastic, easeElasticIn, easeElasticOut, easeElasticInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-ease/src/linear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeLinear", function() { return _linear__WEBPACK_IMPORTED_MODULE_0__["linear"]; });

/* harmony import */ var _quad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quad */ "./node_modules/d3-ease/src/quad.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuad", function() { return _quad__WEBPACK_IMPORTED_MODULE_1__["quadInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuadIn", function() { return _quad__WEBPACK_IMPORTED_MODULE_1__["quadIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuadOut", function() { return _quad__WEBPACK_IMPORTED_MODULE_1__["quadOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuadInOut", function() { return _quad__WEBPACK_IMPORTED_MODULE_1__["quadInOut"]; });

/* harmony import */ var _cubic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubic */ "./node_modules/d3-ease/src/cubic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubic", function() { return _cubic__WEBPACK_IMPORTED_MODULE_2__["cubicInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubicIn", function() { return _cubic__WEBPACK_IMPORTED_MODULE_2__["cubicIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubicOut", function() { return _cubic__WEBPACK_IMPORTED_MODULE_2__["cubicOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubicInOut", function() { return _cubic__WEBPACK_IMPORTED_MODULE_2__["cubicInOut"]; });

/* harmony import */ var _poly__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./poly */ "./node_modules/d3-ease/src/poly.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePoly", function() { return _poly__WEBPACK_IMPORTED_MODULE_3__["polyInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePolyIn", function() { return _poly__WEBPACK_IMPORTED_MODULE_3__["polyIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePolyOut", function() { return _poly__WEBPACK_IMPORTED_MODULE_3__["polyOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePolyInOut", function() { return _poly__WEBPACK_IMPORTED_MODULE_3__["polyInOut"]; });

/* harmony import */ var _sin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sin */ "./node_modules/d3-ease/src/sin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSin", function() { return _sin__WEBPACK_IMPORTED_MODULE_4__["sinInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSinIn", function() { return _sin__WEBPACK_IMPORTED_MODULE_4__["sinIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSinOut", function() { return _sin__WEBPACK_IMPORTED_MODULE_4__["sinOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSinInOut", function() { return _sin__WEBPACK_IMPORTED_MODULE_4__["sinInOut"]; });

/* harmony import */ var _exp__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exp */ "./node_modules/d3-ease/src/exp.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExp", function() { return _exp__WEBPACK_IMPORTED_MODULE_5__["expInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExpIn", function() { return _exp__WEBPACK_IMPORTED_MODULE_5__["expIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExpOut", function() { return _exp__WEBPACK_IMPORTED_MODULE_5__["expOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExpInOut", function() { return _exp__WEBPACK_IMPORTED_MODULE_5__["expInOut"]; });

/* harmony import */ var _circle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./circle */ "./node_modules/d3-ease/src/circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircle", function() { return _circle__WEBPACK_IMPORTED_MODULE_6__["circleInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircleIn", function() { return _circle__WEBPACK_IMPORTED_MODULE_6__["circleIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircleOut", function() { return _circle__WEBPACK_IMPORTED_MODULE_6__["circleOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircleInOut", function() { return _circle__WEBPACK_IMPORTED_MODULE_6__["circleInOut"]; });

/* harmony import */ var _bounce__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bounce */ "./node_modules/d3-ease/src/bounce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounce", function() { return _bounce__WEBPACK_IMPORTED_MODULE_7__["bounceOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounceIn", function() { return _bounce__WEBPACK_IMPORTED_MODULE_7__["bounceIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounceOut", function() { return _bounce__WEBPACK_IMPORTED_MODULE_7__["bounceOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounceInOut", function() { return _bounce__WEBPACK_IMPORTED_MODULE_7__["bounceInOut"]; });

/* harmony import */ var _back__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./back */ "./node_modules/d3-ease/src/back.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBack", function() { return _back__WEBPACK_IMPORTED_MODULE_8__["backInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBackIn", function() { return _back__WEBPACK_IMPORTED_MODULE_8__["backIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBackOut", function() { return _back__WEBPACK_IMPORTED_MODULE_8__["backOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBackInOut", function() { return _back__WEBPACK_IMPORTED_MODULE_8__["backInOut"]; });

/* harmony import */ var _elastic__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./elastic */ "./node_modules/d3-ease/src/elastic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElastic", function() { return _elastic__WEBPACK_IMPORTED_MODULE_9__["elasticOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElasticIn", function() { return _elastic__WEBPACK_IMPORTED_MODULE_9__["elasticIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElasticOut", function() { return _elastic__WEBPACK_IMPORTED_MODULE_9__["elasticOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElasticInOut", function() { return _elastic__WEBPACK_IMPORTED_MODULE_9__["elasticInOut"]; });












/***/ }),

/***/ "./node_modules/d3-ease/src/linear.js":
/*!********************************************!*\
  !*** ./node_modules/d3-ease/src/linear.js ***!
  \********************************************/
/*! exports provided: linear */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linear", function() { return linear; });
function linear(t) {
  return +t;
}

/***/ }),

/***/ "./node_modules/d3-ease/src/poly.js":
/*!******************************************!*\
  !*** ./node_modules/d3-ease/src/poly.js ***!
  \******************************************/
/*! exports provided: polyIn, polyOut, polyInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyIn", function() { return polyIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyOut", function() { return polyOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyInOut", function() { return polyInOut; });
var exponent = 3;
var polyIn = function custom(e) {
  e = +e;

  function polyIn(t) {
    return Math.pow(t, e);
  }

  polyIn.exponent = custom;
  return polyIn;
}(exponent);
var polyOut = function custom(e) {
  e = +e;

  function polyOut(t) {
    return 1 - Math.pow(1 - t, e);
  }

  polyOut.exponent = custom;
  return polyOut;
}(exponent);
var polyInOut = function custom(e) {
  e = +e;

  function polyInOut(t) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
  }

  polyInOut.exponent = custom;
  return polyInOut;
}(exponent);

/***/ }),

/***/ "./node_modules/d3-ease/src/quad.js":
/*!******************************************!*\
  !*** ./node_modules/d3-ease/src/quad.js ***!
  \******************************************/
/*! exports provided: quadIn, quadOut, quadInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quadIn", function() { return quadIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quadOut", function() { return quadOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quadInOut", function() { return quadInOut; });
function quadIn(t) {
  return t * t;
}
function quadOut(t) {
  return t * (2 - t);
}
function quadInOut(t) {
  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
}

/***/ }),

/***/ "./node_modules/d3-ease/src/sin.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-ease/src/sin.js ***!
  \*****************************************/
/*! exports provided: sinIn, sinOut, sinInOut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinIn", function() { return sinIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinOut", function() { return sinOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinInOut", function() { return sinInOut; });
var pi = Math.PI,
    halfPi = pi / 2;
function sinIn(t) {
  return 1 - Math.cos(t * halfPi);
}
function sinOut(t) {
  return Math.sin(t * halfPi);
}
function sinInOut(t) {
  return (1 - Math.cos(pi * t)) / 2;
}

/***/ }),

/***/ "./node_modules/d3-fetch/src/blob.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-fetch/src/blob.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function responseBlob(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.blob();
}

/* harmony default export */ __webpack_exports__["default"] = (function (input, init) {
  return fetch(input, init).then(responseBlob);
});

/***/ }),

/***/ "./node_modules/d3-fetch/src/buffer.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-fetch/src/buffer.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function responseArrayBuffer(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.arrayBuffer();
}

/* harmony default export */ __webpack_exports__["default"] = (function (input, init) {
  return fetch(input, init).then(responseArrayBuffer);
});

/***/ }),

/***/ "./node_modules/d3-fetch/src/dsv.js":
/*!******************************************!*\
  !*** ./node_modules/d3-fetch/src/dsv.js ***!
  \******************************************/
/*! exports provided: default, csv, tsv */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return dsv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csv", function() { return csv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsv", function() { return tsv; });
/* harmony import */ var d3_dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dsv */ "./node_modules/d3-dsv/src/index.js");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./text */ "./node_modules/d3-fetch/src/text.js");



function dsvParse(parse) {
  return function (input, init, row) {
    if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;
    return Object(_text__WEBPACK_IMPORTED_MODULE_1__["default"])(input, init).then(function (response) {
      return parse(response, row);
    });
  };
}

function dsv(delimiter, input, init, row) {
  if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;
  var format = Object(d3_dsv__WEBPACK_IMPORTED_MODULE_0__["dsvFormat"])(delimiter);
  return Object(_text__WEBPACK_IMPORTED_MODULE_1__["default"])(input, init).then(function (response) {
    return format.parse(response, row);
  });
}
var csv = dsvParse(d3_dsv__WEBPACK_IMPORTED_MODULE_0__["csvParse"]);
var tsv = dsvParse(d3_dsv__WEBPACK_IMPORTED_MODULE_0__["tsvParse"]);

/***/ }),

/***/ "./node_modules/d3-fetch/src/image.js":
/*!********************************************!*\
  !*** ./node_modules/d3-fetch/src/image.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (input, init) {
  return new Promise(function (resolve, reject) {
    var image = new Image();

    for (var key in init) {
      image[key] = init[key];
    }

    image.onerror = reject;

    image.onload = function () {
      resolve(image);
    };

    image.src = input;
  });
});

/***/ }),

/***/ "./node_modules/d3-fetch/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-fetch/src/index.js ***!
  \********************************************/
/*! exports provided: blob, buffer, dsv, csv, tsv, image, json, text, xml, html, svg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _blob__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blob */ "./node_modules/d3-fetch/src/blob.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blob", function() { return _blob__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer */ "./node_modules/d3-fetch/src/buffer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return _buffer__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dsv */ "./node_modules/d3-fetch/src/dsv.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dsv", function() { return _dsv__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csv", function() { return _dsv__WEBPACK_IMPORTED_MODULE_2__["csv"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsv", function() { return _dsv__WEBPACK_IMPORTED_MODULE_2__["tsv"]; });

/* harmony import */ var _image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./image */ "./node_modules/d3-fetch/src/image.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "image", function() { return _image__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./json */ "./node_modules/d3-fetch/src/json.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "json", function() { return _json__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./text */ "./node_modules/d3-fetch/src/text.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "text", function() { return _text__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _xml__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./xml */ "./node_modules/d3-fetch/src/xml.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xml", function() { return _xml__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "html", function() { return _xml__WEBPACK_IMPORTED_MODULE_6__["html"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "svg", function() { return _xml__WEBPACK_IMPORTED_MODULE_6__["svg"]; });









/***/ }),

/***/ "./node_modules/d3-fetch/src/json.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-fetch/src/json.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function responseJson(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.json();
}

/* harmony default export */ __webpack_exports__["default"] = (function (input, init) {
  return fetch(input, init).then(responseJson);
});

/***/ }),

/***/ "./node_modules/d3-fetch/src/text.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-fetch/src/text.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function responseText(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.text();
}

/* harmony default export */ __webpack_exports__["default"] = (function (input, init) {
  return fetch(input, init).then(responseText);
});

/***/ }),

/***/ "./node_modules/d3-fetch/src/xml.js":
/*!******************************************!*\
  !*** ./node_modules/d3-fetch/src/xml.js ***!
  \******************************************/
/*! exports provided: default, html, svg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "html", function() { return html; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "svg", function() { return svg; });
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./text */ "./node_modules/d3-fetch/src/text.js");


function parser(type) {
  return function (input, init) {
    return Object(_text__WEBPACK_IMPORTED_MODULE_0__["default"])(input, init).then(function (text) {
      return new DOMParser().parseFromString(text, type);
    });
  };
}

/* harmony default export */ __webpack_exports__["default"] = (parser("application/xml"));
var html = parser("text/html");
var svg = parser("image/svg+xml");

/***/ }),

/***/ "./node_modules/d3-force/src/center.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-force/src/center.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x, y) {
  var nodes;
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force() {
    var i,
        n = nodes.length,
        node,
        sx = 0,
        sy = 0;

    for (i = 0; i < n; ++i) {
      node = nodes[i], sx += node.x, sy += node.y;
    }

    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {
      node = nodes[i], node.x -= sx, node.y -= sy;
    }
  }

  force.initialize = function (_) {
    nodes = _;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-force/src/collide.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-force/src/collide.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-force/src/constant.js");
/* harmony import */ var _jiggle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jiggle */ "./node_modules/d3-force/src/jiggle.js");
/* harmony import */ var d3_quadtree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-quadtree */ "./node_modules/d3-quadtree/src/index.js");




function x(d) {
  return d.x + d.vx;
}

function y(d) {
  return d.y + d.vy;
}

/* harmony default export */ __webpack_exports__["default"] = (function (radius) {
  var nodes,
      radii,
      strength = 1,
      iterations = 1;
  if (typeof radius !== "function") radius = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(radius == null ? 1 : +radius);

  function force() {
    var i,
        n = nodes.length,
        tree,
        node,
        xi,
        yi,
        ri,
        ri2;

    for (var k = 0; k < iterations; ++k) {
      tree = Object(d3_quadtree__WEBPACK_IMPORTED_MODULE_2__["quadtree"])(nodes, x, y).visitAfter(prepare);

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        ri = radii[node.index], ri2 = ri * ri;
        xi = node.x + node.vx;
        yi = node.y + node.vy;
        tree.visit(apply);
      }
    }

    function apply(quad, x0, y0, x1, y1) {
      var data = quad.data,
          rj = quad.r,
          r = ri + rj;

      if (data) {
        if (data.index > node.index) {
          var x = xi - data.x - data.vx,
              y = yi - data.y - data.vy,
              l = x * x + y * y;

          if (l < r * r) {
            if (x === 0) x = Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])(), l += x * x;
            if (y === 0) y = Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])(), l += y * y;
            l = (r - (l = Math.sqrt(l))) / l * strength;
            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
            node.vy += (y *= l) * r;
            data.vx -= x * (r = 1 - r);
            data.vy -= y * r;
          }
        }

        return;
      }

      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
    }
  }

  function prepare(quad) {
    if (quad.data) return quad.r = radii[quad.data.index];

    for (var i = quad.r = 0; i < 4; ++i) {
      if (quad[i] && quad[i].r > quad.r) {
        quad.r = quad[i].r;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    radii = new Array(n);

    for (i = 0; i < n; ++i) {
      node = nodes[i], radii[node.index] = +radius(node, i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : radius;
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-force/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-force/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-force/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-force/src/index.js ***!
  \********************************************/
/*! exports provided: forceCenter, forceCollide, forceLink, forceManyBody, forceRadial, forceSimulation, forceX, forceY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _center__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./center */ "./node_modules/d3-force/src/center.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceCenter", function() { return _center__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _collide__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collide */ "./node_modules/d3-force/src/collide.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceCollide", function() { return _collide__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./link */ "./node_modules/d3-force/src/link.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceLink", function() { return _link__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _manyBody__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./manyBody */ "./node_modules/d3-force/src/manyBody.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceManyBody", function() { return _manyBody__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _radial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./radial */ "./node_modules/d3-force/src/radial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceRadial", function() { return _radial__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _simulation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./simulation */ "./node_modules/d3-force/src/simulation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceSimulation", function() { return _simulation__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _x__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./x */ "./node_modules/d3-force/src/x.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceX", function() { return _x__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _y__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./y */ "./node_modules/d3-force/src/y.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceY", function() { return _y__WEBPACK_IMPORTED_MODULE_7__["default"]; });










/***/ }),

/***/ "./node_modules/d3-force/src/jiggle.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-force/src/jiggle.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return (Math.random() - 0.5) * 1e-6;
});

/***/ }),

/***/ "./node_modules/d3-force/src/link.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-force/src/link.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-force/src/constant.js");
/* harmony import */ var _jiggle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jiggle */ "./node_modules/d3-force/src/jiggle.js");
/* harmony import */ var d3_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-collection */ "./node_modules/d3-collection/src/index.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }





function index(d) {
  return d.index;
}

function find(nodeById, nodeId) {
  var node = nodeById.get(nodeId);
  if (!node) throw new Error("missing: " + nodeId);
  return node;
}

/* harmony default export */ __webpack_exports__["default"] = (function (links) {
  var id = index,
      strength = defaultStrength,
      strengths,
      distance = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(30),
      distances,
      nodes,
      count,
      bias,
      iterations = 1;
  if (links == null) links = [];

  function defaultStrength(link) {
    return 1 / Math.min(count[link.source.index], count[link.target.index]);
  }

  function force(alpha) {
    for (var k = 0, n = links.length; k < iterations; ++k) {
      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
        link = links[i], source = link.source, target = link.target;
        x = target.x + target.vx - source.x - source.vx || Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])();
        y = target.y + target.vy - source.y - source.vy || Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])();
        l = Math.sqrt(x * x + y * y);
        l = (l - distances[i]) / l * alpha * strengths[i];
        x *= l, y *= l;
        target.vx -= x * (b = bias[i]);
        target.vy -= y * b;
        source.vx += x * (b = 1 - b);
        source.vy += y * b;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        m = links.length,
        nodeById = Object(d3_collection__WEBPACK_IMPORTED_MODULE_2__["map"])(nodes, id),
        link;

    for (i = 0, count = new Array(n); i < m; ++i) {
      link = links[i], link.index = i;
      if (_typeof(link.source) !== "object") link.source = find(nodeById, link.source);
      if (_typeof(link.target) !== "object") link.target = find(nodeById, link.target);
      count[link.source.index] = (count[link.source.index] || 0) + 1;
      count[link.target.index] = (count[link.target.index] || 0) + 1;
    }

    for (i = 0, bias = new Array(m); i < m; ++i) {
      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
    }

    strengths = new Array(m), initializeStrength();
    distances = new Array(m), initializeDistance();
  }

  function initializeStrength() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      strengths[i] = +strength(links[i], i, links);
    }
  }

  function initializeDistance() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      distances[i] = +distance(links[i], i, links);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.links = function (_) {
    return arguments.length ? (links = _, initialize(), force) : links;
  };

  force.id = function (_) {
    return arguments.length ? (id = _, force) : id;
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initializeStrength(), force) : strength;
  };

  force.distance = function (_) {
    return arguments.length ? (distance = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initializeDistance(), force) : distance;
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-force/src/manyBody.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-force/src/manyBody.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-force/src/constant.js");
/* harmony import */ var _jiggle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jiggle */ "./node_modules/d3-force/src/jiggle.js");
/* harmony import */ var d3_quadtree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-quadtree */ "./node_modules/d3-quadtree/src/index.js");
/* harmony import */ var _simulation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./simulation */ "./node_modules/d3-force/src/simulation.js");




/* harmony default export */ __webpack_exports__["default"] = (function () {
  var nodes,
      node,
      alpha,
      strength = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(-30),
      strengths,
      distanceMin2 = 1,
      distanceMax2 = Infinity,
      theta2 = 0.81;

  function force(_) {
    var i,
        n = nodes.length,
        tree = Object(d3_quadtree__WEBPACK_IMPORTED_MODULE_2__["quadtree"])(nodes, _simulation__WEBPACK_IMPORTED_MODULE_3__["x"], _simulation__WEBPACK_IMPORTED_MODULE_3__["y"]).visitAfter(accumulate);

    for (alpha = _, i = 0; i < n; ++i) {
      node = nodes[i], tree.visit(apply);
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    strengths = new Array(n);

    for (i = 0; i < n; ++i) {
      node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
    }
  }

  function accumulate(quad) {
    var strength = 0,
        q,
        c,
        weight = 0,
        x,
        y,
        i; // For internal nodes, accumulate forces from child quadrants.

    if (quad.length) {
      for (x = y = i = 0; i < 4; ++i) {
        if ((q = quad[i]) && (c = Math.abs(q.value))) {
          strength += q.value, weight += c, x += c * q.x, y += c * q.y;
        }
      }

      quad.x = x / weight;
      quad.y = y / weight;
    } // For leaf nodes, accumulate forces from coincident quadrants.
    else {
        q = quad;
        q.x = q.data.x;
        q.y = q.data.y;

        do {
          strength += strengths[q.data.index];
        } while (q = q.next);
      }

    quad.value = strength;
  }

  function apply(quad, x1, _, x2) {
    if (!quad.value) return true;
    var x = quad.x - node.x,
        y = quad.y - node.y,
        w = x2 - x1,
        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.
    // Limit forces for very close nodes; randomize direction if coincident.

    if (w * w / theta2 < l) {
      if (l < distanceMax2) {
        if (x === 0) x = Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])(), l += x * x;
        if (y === 0) y = Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])(), l += y * y;
        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        node.vx += x * quad.value * alpha / l;
        node.vy += y * quad.value * alpha / l;
      }

      return true;
    } // Otherwise, process points directly.
    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.


    if (quad.data !== node || quad.next) {
      if (x === 0) x = Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])(), l += x * x;
      if (y === 0) y = Object(_jiggle__WEBPACK_IMPORTED_MODULE_1__["default"])(), l += y * y;
      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
    }

    do {
      if (quad.data !== node) {
        w = strengths[quad.data.index] * alpha / l;
        node.vx += x * w;
        node.vy += y * w;
      }
    } while (quad = quad.next);
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : strength;
  };

  force.distanceMin = function (_) {
    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
  };

  force.distanceMax = function (_) {
    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
  };

  force.theta = function (_) {
    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-force/src/radial.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-force/src/radial.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-force/src/constant.js");

/* harmony default export */ __webpack_exports__["default"] = (function (radius, x, y) {
  var nodes,
      strength = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(0.1),
      strengths,
      radiuses;
  if (typeof radius !== "function") radius = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+radius);
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force(alpha) {
    for (var i = 0, n = nodes.length; i < n; ++i) {
      var node = nodes[i],
          dx = node.x - x || 1e-6,
          dy = node.y - y || 1e-6,
          r = Math.sqrt(dx * dx + dy * dy),
          k = (radiuses[i] - r) * strengths[i] * alpha / r;
      node.vx += dx * k;
      node.vy += dy * k;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    radiuses = new Array(n);

    for (i = 0; i < n; ++i) {
      radiuses[i] = +radius(nodes[i], i, nodes);
      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _, initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : radius;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-force/src/simulation.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-force/src/simulation.js ***!
  \*************************************************/
/*! exports provided: x, y, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return x; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return y; });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony import */ var d3_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-collection */ "./node_modules/d3-collection/src/index.js");
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/index.js");



function x(d) {
  return d.x;
}
function y(d) {
  return d.y;
}
var initialRadius = 10,
    initialAngle = Math.PI * (3 - Math.sqrt(5));
/* harmony default export */ __webpack_exports__["default"] = (function (_nodes) {
  var simulation,
      _alpha = 1,
      _alphaMin = 0.001,
      _alphaDecay = 1 - Math.pow(_alphaMin, 1 / 300),
      _alphaTarget = 0,
      _velocityDecay = 0.6,
      forces = Object(d3_collection__WEBPACK_IMPORTED_MODULE_1__["map"])(),
      stepper = Object(d3_timer__WEBPACK_IMPORTED_MODULE_2__["timer"])(step),
      event = Object(d3_dispatch__WEBPACK_IMPORTED_MODULE_0__["dispatch"])("tick", "end");

  if (_nodes == null) _nodes = [];

  function step() {
    tick();
    event.call("tick", simulation);

    if (_alpha < _alphaMin) {
      stepper.stop();
      event.call("end", simulation);
    }
  }

  function tick(iterations) {
    var i,
        n = _nodes.length,
        node;
    if (iterations === undefined) iterations = 1;

    for (var k = 0; k < iterations; ++k) {
      _alpha += (_alphaTarget - _alpha) * _alphaDecay;
      forces.each(function (force) {
        force(_alpha);
      });

      for (i = 0; i < n; ++i) {
        node = _nodes[i];
        if (node.fx == null) node.x += node.vx *= _velocityDecay;else node.x = node.fx, node.vx = 0;
        if (node.fy == null) node.y += node.vy *= _velocityDecay;else node.y = node.fy, node.vy = 0;
      }
    }

    return simulation;
  }

  function initializeNodes() {
    for (var i = 0, n = _nodes.length, node; i < n; ++i) {
      node = _nodes[i], node.index = i;
      if (node.fx != null) node.x = node.fx;
      if (node.fy != null) node.y = node.fy;

      if (isNaN(node.x) || isNaN(node.y)) {
        var radius = initialRadius * Math.sqrt(i),
            angle = i * initialAngle;
        node.x = radius * Math.cos(angle);
        node.y = radius * Math.sin(angle);
      }

      if (isNaN(node.vx) || isNaN(node.vy)) {
        node.vx = node.vy = 0;
      }
    }
  }

  function initializeForce(force) {
    if (force.initialize) force.initialize(_nodes);
    return force;
  }

  initializeNodes();
  return simulation = {
    tick: tick,
    restart: function restart() {
      return stepper.restart(step), simulation;
    },
    stop: function stop() {
      return stepper.stop(), simulation;
    },
    nodes: function nodes(_) {
      return arguments.length ? (_nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : _nodes;
    },
    alpha: function alpha(_) {
      return arguments.length ? (_alpha = +_, simulation) : _alpha;
    },
    alphaMin: function alphaMin(_) {
      return arguments.length ? (_alphaMin = +_, simulation) : _alphaMin;
    },
    alphaDecay: function alphaDecay(_) {
      return arguments.length ? (_alphaDecay = +_, simulation) : +_alphaDecay;
    },
    alphaTarget: function alphaTarget(_) {
      return arguments.length ? (_alphaTarget = +_, simulation) : _alphaTarget;
    },
    velocityDecay: function velocityDecay(_) {
      return arguments.length ? (_velocityDecay = 1 - _, simulation) : 1 - _velocityDecay;
    },
    force: function force(name, _) {
      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);
    },
    find: function find(x, y, radius) {
      var i = 0,
          n = _nodes.length,
          dx,
          dy,
          d2,
          node,
          closest;
      if (radius == null) radius = Infinity;else radius *= radius;

      for (i = 0; i < n; ++i) {
        node = _nodes[i];
        dx = x - node.x;
        dy = y - node.y;
        d2 = dx * dx + dy * dy;
        if (d2 < radius) closest = node, radius = d2;
      }

      return closest;
    },
    on: function on(name, _) {
      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
    }
  };
});

/***/ }),

/***/ "./node_modules/d3-force/src/x.js":
/*!****************************************!*\
  !*** ./node_modules/d3-force/src/x.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-force/src/constant.js");

/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  var strength = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(0.1),
      nodes,
      strengths,
      xz;
  if (typeof x !== "function") x = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(x == null ? 0 : +x);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    xz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : strength;
  };

  force.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : x;
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-force/src/y.js":
/*!****************************************!*\
  !*** ./node_modules/d3-force/src/y.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-force/src/constant.js");

/* harmony default export */ __webpack_exports__["default"] = (function (y) {
  var strength = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(0.1),
      nodes,
      strengths,
      yz;
  if (typeof y !== "function") y = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(y == null ? 0 : +y);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    yz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : strength;
  };

  force.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : y;
  };

  return force;
});

/***/ }),

/***/ "./node_modules/d3-format/src/defaultLocale.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-format/src/defaultLocale.js ***!
  \*****************************************************/
/*! exports provided: format, formatPrefix, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "format", function() { return format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatPrefix", function() { return formatPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return defaultLocale; });
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale */ "./node_modules/d3-format/src/locale.js");

var locale;
var format;
var formatPrefix;
defaultLocale({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});
function defaultLocale(definition) {
  locale = Object(_locale__WEBPACK_IMPORTED_MODULE_0__["default"])(definition);
  format = locale.format;
  formatPrefix = locale.formatPrefix;
  return locale;
}

/***/ }),

/***/ "./node_modules/d3-format/src/exponent.js":
/*!************************************************!*\
  !*** ./node_modules/d3-format/src/exponent.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _formatDecimal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal */ "./node_modules/d3-format/src/formatDecimal.js");

/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return x = Object(_formatDecimal__WEBPACK_IMPORTED_MODULE_0__["default"])(Math.abs(x)), x ? x[1] : NaN;
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatDecimal.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-format/src/formatDecimal.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimal(1.23) returns ["123", 0].
/* harmony default export */ __webpack_exports__["default"] = (function (x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity

  var i,
      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).

  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatGroup.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-format/src/formatGroup.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (grouping, thousands) {
  return function (value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatNumerals.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-format/src/formatNumerals.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (numerals) {
  return function (value) {
    return value.replace(/[0-9]/g, function (i) {
      return numerals[+i];
    });
  };
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatPrefixAuto.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-format/src/formatPrefixAuto.js ***!
  \********************************************************/
/*! exports provided: prefixExponent, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prefixExponent", function() { return prefixExponent; });
/* harmony import */ var _formatDecimal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal */ "./node_modules/d3-format/src/formatDecimal.js");

var prefixExponent;
/* harmony default export */ __webpack_exports__["default"] = (function (x, p) {
  var d = Object(_formatDecimal__WEBPACK_IMPORTED_MODULE_0__["default"])(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + Object(_formatDecimal__WEBPACK_IMPORTED_MODULE_0__["default"])(x, Math.max(0, p + i - 1))[0]; // less than 1y!
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatRounded.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-format/src/formatRounded.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _formatDecimal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal */ "./node_modules/d3-format/src/formatDecimal.js");

/* harmony default export */ __webpack_exports__["default"] = (function (x, p) {
  var d = Object(_formatDecimal__WEBPACK_IMPORTED_MODULE_0__["default"])(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatSpecifier.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-format/src/formatSpecifier.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatSpecifier; });
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier(specifier) {
  return new FormatSpecifier(specifier);
}
formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  this.fill = match[1] || " ";
  this.align = match[2] || ">";
  this.sign = match[3] || "-";
  this.symbol = match[4] || "";
  this.zero = !!match[5];
  this.width = match[6] && +match[6];
  this.comma = !!match[7];
  this.precision = match[8] && +match[8].slice(1);
  this.trim = !!match[9];
  this.type = match[10] || "";
}

FormatSpecifier.prototype.toString = function () {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width == null ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision == null ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};

/***/ }),

/***/ "./node_modules/d3-format/src/formatTrim.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-format/src/formatTrim.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
/* harmony default export */ __webpack_exports__["default"] = (function (s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".":
        i0 = i1 = i;
        break;

      case "0":
        if (i0 === 0) i0 = i;
        i1 = i;
        break;

      default:
        if (i0 > 0) {
          if (!+s[i]) break out;
          i0 = 0;
        }

        break;
    }
  }

  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
});

/***/ }),

/***/ "./node_modules/d3-format/src/formatTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-format/src/formatTypes.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _formatPrefixAuto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatPrefixAuto */ "./node_modules/d3-format/src/formatPrefixAuto.js");
/* harmony import */ var _formatRounded__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatRounded */ "./node_modules/d3-format/src/formatRounded.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  "%": function _(x, p) {
    return (x * 100).toFixed(p);
  },
  "b": function b(x) {
    return Math.round(x).toString(2);
  },
  "c": function c(x) {
    return x + "";
  },
  "d": function d(x) {
    return Math.round(x).toString(10);
  },
  "e": function e(x, p) {
    return x.toExponential(p);
  },
  "f": function f(x, p) {
    return x.toFixed(p);
  },
  "g": function g(x, p) {
    return x.toPrecision(p);
  },
  "o": function o(x) {
    return Math.round(x).toString(8);
  },
  "p": function p(x, _p) {
    return Object(_formatRounded__WEBPACK_IMPORTED_MODULE_1__["default"])(x * 100, _p);
  },
  "r": _formatRounded__WEBPACK_IMPORTED_MODULE_1__["default"],
  "s": _formatPrefixAuto__WEBPACK_IMPORTED_MODULE_0__["default"],
  "X": function X(x) {
    return Math.round(x).toString(16).toUpperCase();
  },
  "x": function x(_x) {
    return Math.round(_x).toString(16);
  }
});

/***/ }),

/***/ "./node_modules/d3-format/src/identity.js":
/*!************************************************!*\
  !*** ./node_modules/d3-format/src/identity.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return x;
});

/***/ }),

/***/ "./node_modules/d3-format/src/index.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-format/src/index.js ***!
  \*********************************************/
/*! exports provided: formatDefaultLocale, format, formatPrefix, formatLocale, formatSpecifier, precisionFixed, precisionPrefix, precisionRound */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultLocale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale */ "./node_modules/d3-format/src/defaultLocale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDefaultLocale", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "format", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["format"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatPrefix", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["formatPrefix"]; });

/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale */ "./node_modules/d3-format/src/locale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatLocale", function() { return _locale__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _formatSpecifier__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatSpecifier */ "./node_modules/d3-format/src/formatSpecifier.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatSpecifier", function() { return _formatSpecifier__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _precisionFixed__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./precisionFixed */ "./node_modules/d3-format/src/precisionFixed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionFixed", function() { return _precisionFixed__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _precisionPrefix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./precisionPrefix */ "./node_modules/d3-format/src/precisionPrefix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionPrefix", function() { return _precisionPrefix__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _precisionRound__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./precisionRound */ "./node_modules/d3-format/src/precisionRound.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionRound", function() { return _precisionRound__WEBPACK_IMPORTED_MODULE_5__["default"]; });








/***/ }),

/***/ "./node_modules/d3-format/src/locale.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-format/src/locale.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent */ "./node_modules/d3-format/src/exponent.js");
/* harmony import */ var _formatGroup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatGroup */ "./node_modules/d3-format/src/formatGroup.js");
/* harmony import */ var _formatNumerals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatNumerals */ "./node_modules/d3-format/src/formatNumerals.js");
/* harmony import */ var _formatSpecifier__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatSpecifier */ "./node_modules/d3-format/src/formatSpecifier.js");
/* harmony import */ var _formatTrim__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./formatTrim */ "./node_modules/d3-format/src/formatTrim.js");
/* harmony import */ var _formatTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./formatTypes */ "./node_modules/d3-format/src/formatTypes.js");
/* harmony import */ var _formatPrefixAuto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./formatPrefixAuto */ "./node_modules/d3-format/src/formatPrefixAuto.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-format/src/identity.js");








var prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
/* harmony default export */ __webpack_exports__["default"] = (function (locale) {
  var group = locale.grouping && locale.thousands ? Object(_formatGroup__WEBPACK_IMPORTED_MODULE_1__["default"])(locale.grouping, locale.thousands) : _identity__WEBPACK_IMPORTED_MODULE_7__["default"],
      currency = locale.currency,
      decimal = locale.decimal,
      numerals = locale.numerals ? Object(_formatNumerals__WEBPACK_IMPORTED_MODULE_2__["default"])(locale.numerals) : _identity__WEBPACK_IMPORTED_MODULE_7__["default"],
      percent = locale.percent || "%";

  function newFormat(specifier) {
    specifier = Object(_formatSpecifier__WEBPACK_IMPORTED_MODULE_3__["default"])(specifier);
    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type; // The "n" type is an alias for ",g".

    if (type === "n") comma = true, type = "g"; // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!_formatTypes__WEBPACK_IMPORTED_MODULE_5__["default"][type]) precision == null && (precision = 12), trim = true, type = "g"; // If zero fill is specified, padding goes after sign and before digits.

    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "="; // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.

    var prefix = symbol === "$" ? currency[0] : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currency[1] : /[%p]/.test(type) ? percent : ""; // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?

    var formatType = _formatTypes__WEBPACK_IMPORTED_MODULE_5__["default"][type],
        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].

    precision = precision == null ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i,
          n,
          c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value; // Perform the initial formatting.

        var valueNegative = value < 0;
        value = formatType(Math.abs(value), precision); // Trim insignificant zeros.

        if (trim) value = Object(_formatTrim__WEBPACK_IMPORTED_MODULE_4__["default"])(value); // If a negative value rounds to zero during formatting, treat as positive.

        if (valueNegative && +value === 0) valueNegative = false; // Compute the prefix and suffix.

        valuePrefix = (valueNegative ? sign === "(" ? sign : "-" : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto__WEBPACK_IMPORTED_MODULE_6__["prefixExponent"] / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : ""); // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.

        if (maybeSuffix) {
          i = -1, n = value.length;

          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      } // If the fill character is not "0", grouping is applied before padding.


      if (comma && !zero) value = group(value, Infinity); // Compute the padding.

      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : ""; // If the fill character is "0", grouping is applied after padding.

      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = ""; // Reconstruct the final output based on the desired alignment.

      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;

        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;

        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;

        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }

      return numerals(value);
    }

    format.toString = function () {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = Object(_formatSpecifier__WEBPACK_IMPORTED_MODULE_3__["default"])(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor(Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function (value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
});

/***/ }),

/***/ "./node_modules/d3-format/src/precisionFixed.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-format/src/precisionFixed.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent */ "./node_modules/d3-format/src/exponent.js");

/* harmony default export */ __webpack_exports__["default"] = (function (step) {
  return Math.max(0, -Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(Math.abs(step)));
});

/***/ }),

/***/ "./node_modules/d3-format/src/precisionPrefix.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-format/src/precisionPrefix.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent */ "./node_modules/d3-format/src/exponent.js");

/* harmony default export */ __webpack_exports__["default"] = (function (step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(value) / 3))) * 3 - Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(Math.abs(step)));
});

/***/ }),

/***/ "./node_modules/d3-format/src/precisionRound.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-format/src/precisionRound.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent */ "./node_modules/d3-format/src/exponent.js");

/* harmony default export */ __webpack_exports__["default"] = (function (step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(max) - Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(step)) + 1;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/adder.js":
/*!******************************************!*\
  !*** ./node_modules/d3-geo/src/adder.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Adds floating point numbers with twice the normal precision.
// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and
// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)
// 305–363 (1997).
// Code adapted from GeographicLib by Charles F. F. Karney,
// http://geographiclib.sourceforge.net/
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return new Adder();
});

function Adder() {
  this.reset();
}

Adder.prototype = {
  constructor: Adder,
  reset: function reset() {
    this.s = // rounded value
    this.t = 0; // exact error
  },
  add: function add(y) {
    _add(temp, y, this.t);

    _add(this, temp.s, this.s);

    if (this.s) this.t += temp.t;else this.s = temp.t;
  },
  valueOf: function valueOf() {
    return this.s;
  }
};
var temp = new Adder();

function _add(adder, a, b) {
  var x = adder.s = a + b,
      bv = x - a,
      av = x - bv;
  adder.t = a - av + (b - bv);
}

/***/ }),

/***/ "./node_modules/d3-geo/src/area.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/area.js ***!
  \*****************************************/
/*! exports provided: areaRingSum, areaStream, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "areaRingSum", function() { return areaRingSum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "areaStream", function() { return areaStream; });
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./noop */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");




var areaRingSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])();
var areaSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    lambda00,
    phi00,
    lambda0,
    cosPhi0,
    sinPhi0;
var areaStream = {
  point: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineEnd: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonStart: function polygonStart() {
    areaRingSum.reset();
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function polygonEnd() {
    var areaRing = +areaRingSum;
    areaSum.add(areaRing < 0 ? _math__WEBPACK_IMPORTED_MODULE_1__["tau"] + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = _noop__WEBPACK_IMPORTED_MODULE_2__["default"];
  },
  sphere: function sphere() {
    areaSum.add(_math__WEBPACK_IMPORTED_MODULE_1__["tau"]);
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaRingEnd() {
  areaPoint(lambda00, phi00);
}

function areaPointFirst(lambda, phi) {
  areaStream.point = areaPoint;
  lambda00 = lambda, phi00 = phi;
  lambda *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"];
  lambda0 = lambda, cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi = phi / 2 + _math__WEBPACK_IMPORTED_MODULE_1__["quarterPi"]), sinPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi);
}

function areaPoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"];
  phi = phi / 2 + _math__WEBPACK_IMPORTED_MODULE_1__["quarterPi"]; // half the angular distance from south pole
  // Spherical excess E for a spherical triangle with vertices: south pole,
  // previous point, current point.  Uses a formula derived from Cagnoli’s
  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).

  var dLambda = lambda - lambda0,
      sdLambda = dLambda >= 0 ? 1 : -1,
      adLambda = sdLambda * dLambda,
      cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      sinPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
      k = sinPhi0 * sinPhi,
      u = cosPhi0 * cosPhi + k * Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(adLambda),
      v = k * sdLambda * Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(adLambda);
  areaRingSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(v, u)); // Advance the previous points.

  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}

/* harmony default export */ __webpack_exports__["default"] = (function (object) {
  areaSum.reset();
  Object(_stream__WEBPACK_IMPORTED_MODULE_3__["default"])(object, areaStream);
  return areaSum * 2;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/bounds.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/bounds.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area */ "./node_modules/d3-geo/src/area.js");
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");





var lambda0,
    phi0,
    lambda1,
    phi1,
    // bounds
lambda2,
    // previous lambda-coordinate
lambda00,
    phi00,
    // first point
p0,
    // previous 3D point
deltaSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    ranges,
    range;
var boundsStream = {
  point: boundsPoint,
  lineStart: boundsLineStart,
  lineEnd: boundsLineEnd,
  polygonStart: function polygonStart() {
    boundsStream.point = boundsRingPoint;
    boundsStream.lineStart = boundsRingStart;
    boundsStream.lineEnd = boundsRingEnd;
    deltaSum.reset();
    _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].polygonStart();
  },
  polygonEnd: function polygonEnd() {
    _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].polygonEnd();
    boundsStream.point = boundsPoint;
    boundsStream.lineStart = boundsLineStart;
    boundsStream.lineEnd = boundsLineEnd;
    if (_area__WEBPACK_IMPORTED_MODULE_1__["areaRingSum"] < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > _math__WEBPACK_IMPORTED_MODULE_3__["epsilon"]) phi1 = 90;else if (deltaSum < -_math__WEBPACK_IMPORTED_MODULE_3__["epsilon"]) phi0 = -90;
    range[0] = lambda0, range[1] = lambda1;
  }
};

function boundsPoint(lambda, phi) {
  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
}

function linePoint(lambda, phi) {
  var p = Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["cartesian"])([lambda * _math__WEBPACK_IMPORTED_MODULE_3__["radians"], phi * _math__WEBPACK_IMPORTED_MODULE_3__["radians"]]);

  if (p0) {
    var normal = Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["cartesianCross"])(p0, p),
        equatorial = [normal[1], -normal[0], 0],
        inflection = Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["cartesianCross"])(equatorial, normal);
    Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["cartesianNormalizeInPlace"])(inflection);
    inflection = Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["spherical"])(inflection);
    var delta = lambda - lambda2,
        sign = delta > 0 ? 1 : -1,
        lambdai = inflection[0] * _math__WEBPACK_IMPORTED_MODULE_3__["degrees"] * sign,
        phii,
        antimeridian = Object(_math__WEBPACK_IMPORTED_MODULE_3__["abs"])(delta) > 180;

    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = inflection[1] * _math__WEBPACK_IMPORTED_MODULE_3__["degrees"];
      if (phii > phi1) phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = -inflection[1] * _math__WEBPACK_IMPORTED_MODULE_3__["degrees"];
      if (phii < phi0) phi0 = phii;
    } else {
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }

    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
      }
    } else {
      if (lambda1 >= lambda0) {
        if (lambda < lambda0) lambda0 = lambda;
        if (lambda > lambda1) lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
        }
      }
    }
  } else {
    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  }

  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
  p0 = p, lambda2 = lambda;
}

function boundsLineStart() {
  boundsStream.point = linePoint;
}

function boundsLineEnd() {
  range[0] = lambda0, range[1] = lambda1;
  boundsStream.point = boundsPoint;
  p0 = null;
}

function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_3__["abs"])(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    lambda00 = lambda, phi00 = phi;
  }

  _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].point(lambda, phi);
  linePoint(lambda, phi);
}

function boundsRingStart() {
  _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].lineStart();
}

function boundsRingEnd() {
  boundsRingPoint(lambda00, phi00);
  _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].lineEnd();
  if (Object(_math__WEBPACK_IMPORTED_MODULE_3__["abs"])(deltaSum) > _math__WEBPACK_IMPORTED_MODULE_3__["epsilon"]) lambda0 = -(lambda1 = 180);
  range[0] = lambda0, range[1] = lambda1;
  p0 = null;
} // Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.


function angle(lambda0, lambda1) {
  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
}

function rangeCompare(a, b) {
  return a[0] - b[0];
}

function rangeContains(range, x) {
  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
}

/* harmony default export */ __webpack_exports__["default"] = (function (feature) {
  var i, n, a, b, merged, deltaMax, delta;
  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);
  ranges = [];
  Object(_stream__WEBPACK_IMPORTED_MODULE_4__["default"])(feature, boundsStream); // First, sort ranges by their minimum longitudes.

  if (n = ranges.length) {
    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.

    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
      b = ranges[i];

      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
      } else {
        merged.push(a = b);
      }
    } // Finally, find the largest gap between the merged ranges.
    // The final bounding box will be the inverse of this gap.


    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
      b = merged[i];
      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];
    }
  }

  ranges = range = null;
  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];
});

/***/ }),

/***/ "./node_modules/d3-geo/src/cartesian.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/cartesian.js ***!
  \**********************************************/
/*! exports provided: spherical, cartesian, cartesianDot, cartesianCross, cartesianAddInPlace, cartesianScale, cartesianNormalizeInPlace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spherical", function() { return spherical; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesian", function() { return cartesian; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianDot", function() { return cartesianDot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianCross", function() { return cartesianCross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianAddInPlace", function() { return cartesianAddInPlace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianScale", function() { return cartesianScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianNormalizeInPlace", function() { return cartesianNormalizeInPlace; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");

function spherical(cartesian) {
  return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(cartesian[1], cartesian[0]), Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(cartesian[2])];
}
function cartesian(spherical) {
  var lambda = spherical[0],
      phi = spherical[1],
      cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi);
  return [cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda), cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda), Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi)];
}
function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}
function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
} // TODO return a

function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}
function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
} // TODO return d

function cartesianNormalizeInPlace(d) {
  var l = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}

/***/ }),

/***/ "./node_modules/d3-geo/src/centroid.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/centroid.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./noop */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");



var W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point
x0, y0, z0; // previous point

var centroidStream = {
  sphere: _noop__WEBPACK_IMPORTED_MODULE_1__["default"],
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function polygonStart() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function polygonEnd() {
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  }
}; // Arithmetic mean of Cartesian vectors.

function centroidPoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi);
  centroidPointCartesian(cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda), cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda), Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi));
}

function centroidPointCartesian(x, y, z) {
  ++W0;
  X0 += (x - X0) / W0;
  Y0 += (y - Y0) / W0;
  Z0 += (z - Z0) / W0;
}

function centroidLineStart() {
  centroidStream.point = centroidLinePointFirst;
}

function centroidLinePointFirst(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi);
  x0 = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda);
  y0 = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda);
  z0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi);
  centroidStream.point = centroidLinePoint;
  centroidPointCartesian(x0, y0, z0);
}

function centroidLinePoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi),
      x = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda),
      y = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda),
      z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi),
      w = Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).


function centroidRingStart() {
  centroidStream.point = centroidRingPointFirst;
}

function centroidRingEnd() {
  centroidRingPoint(lambda00, phi00);
  centroidStream.point = centroidPoint;
}

function centroidRingPointFirst(lambda, phi) {
  lambda00 = lambda, phi00 = phi;
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  centroidStream.point = centroidRingPoint;
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi);
  x0 = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda);
  y0 = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda);
  z0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi);
  centroidPointCartesian(x0, y0, z0);
}

function centroidRingPoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi),
      x = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda),
      y = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda),
      z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi),
      cx = y0 * z - z0 * y,
      cy = z0 * x - x0 * z,
      cz = x0 * y - y0 * x,
      m = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(cx * cx + cy * cy + cz * cz),
      w = Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(m),
      // line weight = angle
  v = m && -w / m; // area weight multiplier

  X2 += v * cx;
  Y2 += v * cy;
  Z2 += v * cz;
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

/* harmony default export */ __webpack_exports__["default"] = (function (object) {
  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
  Object(_stream__WEBPACK_IMPORTED_MODULE_2__["default"])(object, centroidStream);
  var x = X2,
      y = Y2,
      z = Z2,
      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.

  if (m < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon2"]) {
    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.

    if (W1 < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) x = X0, y = Y0, z = Z0;
    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.

    if (m < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon2"]) return [NaN, NaN];
  }

  return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(y, x) * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"], Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(z / Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(m)) * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"]];
});

/***/ }),

/***/ "./node_modules/d3-geo/src/circle.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/circle.js ***!
  \*******************************************/
/*! exports provided: circleStream, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleStream", function() { return circleStream; });
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-geo/src/constant.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rotation */ "./node_modules/d3-geo/src/rotation.js");



 // Generates a circle centered at [0°, 0°], with a given radius and precision.

function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(radius),
      sinRadius = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(radius),
      step = direction * delta;

  if (t0 == null) {
    t0 = radius + direction * _math__WEBPACK_IMPORTED_MODULE_2__["tau"];
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * _math__WEBPACK_IMPORTED_MODULE_2__["tau"];
  }

  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["spherical"])([cosRadius, -sinRadius * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(t), -sinRadius * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(t)]);
    stream.point(point[0], point[1]);
  }
} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].

function circleRadius(cosRadius, point) {
  point = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesian"])(point), point[0] -= cosRadius;
  Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianNormalizeInPlace"])(point);
  var radius = Object(_math__WEBPACK_IMPORTED_MODULE_2__["acos"])(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + _math__WEBPACK_IMPORTED_MODULE_2__["tau"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) % _math__WEBPACK_IMPORTED_MODULE_2__["tau"];
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var center = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])([0, 0]),
      radius = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(90),
      precision = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(6),
      ring,
      rotate,
      stream = {
    point: point
  };

  function point(x, y) {
    ring.push(x = rotate(x, y));
    x[0] *= _math__WEBPACK_IMPORTED_MODULE_2__["degrees"], x[1] *= _math__WEBPACK_IMPORTED_MODULE_2__["degrees"];
  }

  function circle() {
    var c = center.apply(this, arguments),
        r = radius.apply(this, arguments) * _math__WEBPACK_IMPORTED_MODULE_2__["radians"],
        p = precision.apply(this, arguments) * _math__WEBPACK_IMPORTED_MODULE_2__["radians"];
    ring = [];
    rotate = Object(_rotation__WEBPACK_IMPORTED_MODULE_3__["rotateRadians"])(-c[0] * _math__WEBPACK_IMPORTED_MODULE_2__["radians"], -c[1] * _math__WEBPACK_IMPORTED_MODULE_2__["radians"], 0).invert;
    circleStream(stream, r, p, 1);
    c = {
      type: "Polygon",
      coordinates: [ring]
    };
    ring = rotate = null;
    return c;
  }

  circle.center = function (_) {
    return arguments.length ? (center = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])([+_[0], +_[1]]), circle) : center;
  };

  circle.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), circle) : radius;
  };

  circle.precision = function (_) {
    return arguments.length ? (precision = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), circle) : precision;
  };

  return circle;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/antimeridian.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/antimeridian.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/clip/index.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(_index__WEBPACK_IMPORTED_MODULE_0__["default"])(function () {
  return true;
}, clipAntimeridianLine, clipAntimeridianInterpolate, [-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], -_math__WEBPACK_IMPORTED_MODULE_1__["halfPi"]])); // Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.

function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      _clean; // no intersections


  return {
    lineStart: function lineStart() {
      stream.lineStart();
      _clean = 1;
    },
    point: function point(lambda1, phi1) {
      var sign1 = lambda1 > 0 ? _math__WEBPACK_IMPORTED_MODULE_1__["pi"] : -_math__WEBPACK_IMPORTED_MODULE_1__["pi"],
          delta = Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda1 - lambda0);

      if (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta - _math__WEBPACK_IMPORTED_MODULE_1__["pi"]) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) {
        // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? _math__WEBPACK_IMPORTED_MODULE_1__["halfPi"] : -_math__WEBPACK_IMPORTED_MODULE_1__["halfPi"]);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        _clean = 0;
      } else if (sign0 !== sign1 && delta >= _math__WEBPACK_IMPORTED_MODULE_1__["pi"]) {
        // line crosses antimeridian
        if (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda0 - sign0) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) lambda0 -= sign0 * _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]; // handle degeneracies

        if (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda1 - sign1) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) lambda1 -= sign1 * _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"];
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        _clean = 0;
      }

      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function lineEnd() {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function clean() {
      return 2 - _clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda0 - lambda1);
  return Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(sinLambda0Lambda1) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan"])((Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi0) * (cosPhi1 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi1)) * Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda1) - Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi1) * (cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi0)) * Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;

  if (from == null) {
    phi = direction * _math__WEBPACK_IMPORTED_MODULE_1__["halfPi"];
    stream.point(-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], phi);
    stream.point(0, phi);
    stream.point(_math__WEBPACK_IMPORTED_MODULE_1__["pi"], phi);
    stream.point(_math__WEBPACK_IMPORTED_MODULE_1__["pi"], 0);
    stream.point(_math__WEBPACK_IMPORTED_MODULE_1__["pi"], -phi);
    stream.point(0, -phi);
    stream.point(-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], -phi);
    stream.point(-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], 0);
    stream.point(-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], phi);
  } else if (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(from[0] - to[0]) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) {
    var lambda = from[0] < to[0] ? _math__WEBPACK_IMPORTED_MODULE_1__["pi"] : -_math__WEBPACK_IMPORTED_MODULE_1__["pi"];
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/buffer.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/buffer.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var lines = [],
      line;
  return {
    point: function point(x, y) {
      line.push([x, y]);
    },
    lineStart: function lineStart() {
      lines.push(line = []);
    },
    lineEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
    rejoin: function rejoin() {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function result() {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
});

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/circle.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/circle.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../circle */ "./node_modules/d3-geo/src/circle.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _pointEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pointEqual */ "./node_modules/d3-geo/src/pointEqual.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/clip/index.js");





/* harmony default export */ __webpack_exports__["default"] = (function (radius) {
  var cr = Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(radius),
      delta = 6 * _math__WEBPACK_IMPORTED_MODULE_2__["radians"],
      smallRadius = cr > 0,
      notHemisphere = Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(cr) > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]; // TODO optimise for this common case

  function interpolate(from, to, direction, stream) {
    Object(_circle__WEBPACK_IMPORTED_MODULE_1__["circleStream"])(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(lambda) * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi) > cr;
  } // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.


  function clipLine(stream) {
    var point0, // previous point
    c0, // code for previous point
    v0, // visibility of previous point
    v00, // visibility of first point
    _clean; // no intersections


    return {
      lineStart: function lineStart() {
        v00 = v0 = false;
        _clean = 1;
      },
      point: function point(lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? _math__WEBPACK_IMPORTED_MODULE_2__["pi"] : -_math__WEBPACK_IMPORTED_MODULE_2__["pi"]), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.
        // TODO ignore if not clipping polygons.

        if (v !== v0) {
          point2 = intersect(point0, point1);

          if (!point2 || Object(_pointEqual__WEBPACK_IMPORTED_MODULE_3__["default"])(point0, point2) || Object(_pointEqual__WEBPACK_IMPORTED_MODULE_3__["default"])(point1, point2)) {
            point1[0] += _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];
            point1[1] += _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];
            v = visible(point1[0], point1[1]);
          }
        }

        if (v !== v0) {
          _clean = 0;

          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1]);
            stream.lineEnd();
          }

          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t; // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.

          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            _clean = 0;

            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
            }
          }
        }

        if (v && (!point0 || !Object(_pointEqual__WEBPACK_IMPORTED_MODULE_3__["default"])(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }

        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function lineEnd() {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function clean() {
        return _clean | (v00 && v0) << 1;
      }
    };
  } // Intersects the great circle between a and b with the clip circle.


  function intersect(a, b, two) {
    var pa = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesian"])(a),
        pb = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesian"])(b); // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).

    var n1 = [1, 0, 0],
        // normal
    n2 = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianCross"])(pa, pb),
        n2n2 = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(n2, n2),
        n1n2 = n2[0],
        // cartesianDot(n1, n2),
    determinant = n2n2 - n1n2 * n1n2; // Two polar points.

    if (!determinant) return !two && a;
    var c1 = cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianCross"])(n1, n2),
        A = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(n1, c1),
        B = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(n2, c2);
    Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianAddInPlace"])(A, B); // Solve |p(t)|^2 = 1.

    var u = n1xn2,
        w = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(A, u),
        uu = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(u, u),
        t2 = w * w - uu * (Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(A, A) - 1);
    if (t2 < 0) return;
    var t = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(t2),
        q = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(u, (-w - t) / uu);
    Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianAddInPlace"])(q, A);
    q = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["spherical"])(q);
    if (!two) return q; // Two intersection points.

    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;
    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;
    var delta = lambda1 - lambda0,
        polar = Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(delta - _math__WEBPACK_IMPORTED_MODULE_2__["pi"]) < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"],
        meridian = polar || delta < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];
    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.

    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(q[0] - lambda0) < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > _math__WEBPACK_IMPORTED_MODULE_2__["pi"] ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(u, (-w + t) / uu);
      Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianAddInPlace"])(q1, A);
      return [q, Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["spherical"])(q1)];
    }
  } // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.


  function code(lambda, phi) {
    var r = smallRadius ? radius : _math__WEBPACK_IMPORTED_MODULE_2__["pi"] - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right

    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above

    return code;
  }

  return Object(_index__WEBPACK_IMPORTED_MODULE_4__["default"])(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-_math__WEBPACK_IMPORTED_MODULE_2__["pi"], radius - _math__WEBPACK_IMPORTED_MODULE_2__["pi"]]);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/extent.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/extent.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _rectangle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rectangle */ "./node_modules/d3-geo/src/clip/rectangle.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var x0 = 0,
      y0 = 0,
      x1 = 960,
      y1 = 500,
      cache,
      cacheStream,
      clip;
  return clip = {
    stream: function stream(_stream) {
      return cache && cacheStream === _stream ? cache : cache = Object(_rectangle__WEBPACK_IMPORTED_MODULE_0__["default"])(x0, y0, x1, y1)(cacheStream = _stream);
    },
    extent: function extent(_) {
      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
    }
  };
});

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/clip/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer */ "./node_modules/d3-geo/src/clip/buffer.js");
/* harmony import */ var _rejoin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rejoin */ "./node_modules/d3-geo/src/clip/rejoin.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _polygonContains__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../polygonContains */ "./node_modules/d3-geo/src/polygonContains.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");





/* harmony default export */ __webpack_exports__["default"] = (function (pointVisible, clipLine, interpolate, start) {
  return function (sink) {
    var line = clipLine(sink),
        ringBuffer = Object(_buffer__WEBPACK_IMPORTED_MODULE_0__["default"])(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;
    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function polygonStart() {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function polygonEnd() {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = Object(d3_array__WEBPACK_IMPORTED_MODULE_4__["merge"])(segments);
        var startInside = Object(_polygonContains__WEBPACK_IMPORTED_MODULE_3__["default"])(polygon, start);

        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          Object(_rejoin__WEBPACK_IMPORTED_MODULE_1__["default"])(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }

        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function sphere() {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();
      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i,
          n = ringSegments.length,
          m,
          segment,
          point;
      ring.pop();
      polygon.push(ring);
      ring = null;
      if (!n) return; // No intersections.

      if (clean & 1) {
        segment = ringSegments[0];

        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();

          for (i = 0; i < m; ++i) {
            sink.point((point = segment[i])[0], point[1]);
          }

          sink.lineEnd();
        }

        return;
      } // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?


      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
});

function validSegment(segment) {
  return segment.length > 1;
} // Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.


function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] : _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - a[1]) - ((b = b.x)[0] < 0 ? b[1] - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] : _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - b[1]);
}

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/line.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/clip/line.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/rectangle.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/rectangle.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return clipRectangle; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer */ "./node_modules/d3-geo/src/clip/buffer.js");
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./line */ "./node_modules/d3-geo/src/clip/line.js");
/* harmony import */ var _rejoin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rejoin */ "./node_modules/d3-geo/src/clip/rejoin.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");





var clipMax = 1e9,
    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {
  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0,
        a1 = 0;

    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {
      do {
        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
      } while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(p[0] - x0) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"] ? direction > 0 ? 0 : 3 : Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(p[0] - x1) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"] ? direction > 0 ? 2 : 1 : Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(p[1] - y0) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"] ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
  }

  return function (stream) {
    var activeStream = stream,
        bufferStream = Object(_buffer__WEBPACK_IMPORTED_MODULE_1__["default"])(),
        segments,
        polygon,
        ring,
        x__,
        y__,
        v__,
        // first point
    x_,
        y_,
        v_,
        // previous point
    first,
        clean;
    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];

          if (a1 <= y1) {
            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;
          } else {
            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;
          }
        }
      }

      return winding;
    } // Buffer geometry within a polygon and then clip it en masse.


    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = Object(d3_array__WEBPACK_IMPORTED_MODULE_4__["merge"])(segments)).length;

      if (cleanInside || visible) {
        stream.polygonStart();

        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }

        if (visible) {
          Object(_rejoin__WEBPACK_IMPORTED_MODULE_3__["default"])(segments, compareIntersection, startInside, interpolate, stream);
        }

        stream.polygonEnd();
      }

      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    } // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.


    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }

      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);

      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;

        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];

          if (Object(_line__WEBPACK_IMPORTED_MODULE_2__["default"])(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }

            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }

      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}

/***/ }),

/***/ "./node_modules/d3-geo/src/clip/rejoin.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/rejoin.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _pointEqual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pointEqual */ "./node_modules/d3-geo/src/pointEqual.js");


function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection

  this.e = entry; // is an entry?

  this.v = false; // visited

  this.n = this.p = null; // next & previous
} // A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.


/* harmony default export */ __webpack_exports__["default"] = (function (segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;
  segments.forEach(function (segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n,
        p0 = segment[0],
        p1 = segment[n],
        x; // If the first and last points of a segment are coincident, then treat as a
    // closed ring. TODO if all rings are closed, then the winding order of the
    // exterior ring should be checked.

    if (Object(_pointEqual__WEBPACK_IMPORTED_MODULE_0__["default"])(p0, p1)) {
      stream.lineStart();

      for (i = 0; i < n; ++i) {
        stream.point((p0 = segment[i])[0], p0[1]);
      }

      stream.lineEnd();
      return;
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });
  if (!subject.length) return;
  clip.sort(compareIntersection);
  link(subject);
  link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;

    while (current.v) {
      if ((current = current.n) === start) return;
    }

    points = current.z;
    stream.lineStart();

    do {
      current.v = current.o.v = true;

      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) {
            stream.point((point = points[i])[0], point[1]);
          }
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }

        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;

          for (i = points.length - 1; i >= 0; --i) {
            stream.point((point = points[i])[0], point[1]);
          }
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }

        current = current.p;
      }

      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);

    stream.lineEnd();
  }
});

function link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;

  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }

  a.n = b = array[0];
  b.p = a;
}

/***/ }),

/***/ "./node_modules/d3-geo/src/compose.js":
/*!********************************************!*\
  !*** ./node_modules/d3-geo/src/compose.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function (x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };
  return compose;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/constant.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/constant.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-geo/src/contains.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/contains.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _polygonContains__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polygonContains */ "./node_modules/d3-geo/src/polygonContains.js");
/* harmony import */ var _distance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./distance */ "./node_modules/d3-geo/src/distance.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");



var containsObjectType = {
  Feature: function Feature(object, point) {
    return containsGeometry(object.geometry, point);
  },
  FeatureCollection: function FeatureCollection(object, point) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) {
      if (containsGeometry(features[i].geometry, point)) return true;
    }

    return false;
  }
};
var containsGeometryType = {
  Sphere: function Sphere() {
    return true;
  },
  Point: function Point(object, point) {
    return containsPoint(object.coordinates, point);
  },
  MultiPoint: function MultiPoint(object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) {
      if (containsPoint(coordinates[i], point)) return true;
    }

    return false;
  },
  LineString: function LineString(object, point) {
    return containsLine(object.coordinates, point);
  },
  MultiLineString: function MultiLineString(object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) {
      if (containsLine(coordinates[i], point)) return true;
    }

    return false;
  },
  Polygon: function Polygon(object, point) {
    return containsPolygon(object.coordinates, point);
  },
  MultiPolygon: function MultiPolygon(object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) {
      if (containsPolygon(coordinates[i], point)) return true;
    }

    return false;
  },
  GeometryCollection: function GeometryCollection(object, point) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) {
      if (containsGeometry(geometries[i], point)) return true;
    }

    return false;
  }
};

function containsGeometry(geometry, point) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;
}

function containsPoint(coordinates, point) {
  return Object(_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates, point) === 0;
}

function containsLine(coordinates, point) {
  var ab = Object(_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[0], coordinates[1]),
      ao = Object(_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[0], point),
      ob = Object(_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(point, coordinates[1]);
  return ao + ob <= ab + _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];
}

function containsPolygon(coordinates, point) {
  return !!Object(_polygonContains__WEBPACK_IMPORTED_MODULE_0__["default"])(coordinates.map(ringRadians), pointRadians(point));
}

function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}

function pointRadians(point) {
  return [point[0] * _math__WEBPACK_IMPORTED_MODULE_2__["radians"], point[1] * _math__WEBPACK_IMPORTED_MODULE_2__["radians"]];
}

/* harmony default export */ __webpack_exports__["default"] = (function (object, point) {
  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/distance.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/distance.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _length__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./length */ "./node_modules/d3-geo/src/length.js");

var coordinates = [null, null],
    object = {
  type: "LineString",
  coordinates: coordinates
};
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  coordinates[0] = a;
  coordinates[1] = b;
  return Object(_length__WEBPACK_IMPORTED_MODULE_0__["default"])(object);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/graticule.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/graticule.js ***!
  \**********************************************/
/*! exports provided: default, graticule10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return graticule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "graticule10", function() { return graticule10; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");



function graticuleX(y0, y1, dy) {
  var y = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(y0, y1 - _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"], dy).concat(y1);
  return function (x) {
    return y.map(function (y) {
      return [x, y];
    });
  };
}

function graticuleY(x0, x1, dx) {
  var x = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(x0, x1 - _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"], dx).concat(x1);
  return function (y) {
    return x.map(function (x) {
      return [x, y];
    });
  };
}

function graticule() {
  var x1,
      x0,
      X1,
      X0,
      y1,
      y0,
      Y1,
      Y0,
      dx = 10,
      dy = dx,
      DX = 90,
      DY = 360,
      x,
      y,
      X,
      Y,
      precision = 2.5;

  function graticule() {
    return {
      type: "MultiLineString",
      coordinates: lines()
    };
  }

  function lines() {
    return Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["ceil"])(X0 / DX) * DX, X1, DX).map(X).concat(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["ceil"])(Y0 / DY) * DY, Y1, DY).map(Y)).concat(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["ceil"])(x0 / dx) * dx, x1, dx).filter(function (x) {
      return Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(x % DX) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"];
    }).map(x)).concat(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["ceil"])(y0 / dy) * dy, y1, dy).filter(function (y) {
      return Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(y % DY) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"];
    }).map(y));
  }

  graticule.lines = function () {
    return lines().map(function (coordinates) {
      return {
        type: "LineString",
        coordinates: coordinates
      };
    });
  };

  graticule.outline = function () {
    return {
      type: "Polygon",
      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]
    };
  };

  graticule.extent = function (_) {
    if (!arguments.length) return graticule.extentMinor();
    return graticule.extentMajor(_).extentMinor(_);
  };

  graticule.extentMajor = function (_) {
    if (!arguments.length) return [[X0, Y0], [X1, Y1]];
    X0 = +_[0][0], X1 = +_[1][0];
    Y0 = +_[0][1], Y1 = +_[1][1];
    if (X0 > X1) _ = X0, X0 = X1, X1 = _;
    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
    return graticule.precision(precision);
  };

  graticule.extentMinor = function (_) {
    if (!arguments.length) return [[x0, y0], [x1, y1]];
    x0 = +_[0][0], x1 = +_[1][0];
    y0 = +_[0][1], y1 = +_[1][1];
    if (x0 > x1) _ = x0, x0 = x1, x1 = _;
    if (y0 > y1) _ = y0, y0 = y1, y1 = _;
    return graticule.precision(precision);
  };

  graticule.step = function (_) {
    if (!arguments.length) return graticule.stepMinor();
    return graticule.stepMajor(_).stepMinor(_);
  };

  graticule.stepMajor = function (_) {
    if (!arguments.length) return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule;
  };

  graticule.stepMinor = function (_) {
    if (!arguments.length) return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule;
  };

  graticule.precision = function (_) {
    if (!arguments.length) return precision;
    precision = +_;
    x = graticuleX(y0, y1, 90);
    y = graticuleY(x0, x1, precision);
    X = graticuleX(Y0, Y1, 90);
    Y = graticuleY(X0, X1, precision);
    return graticule;
  };

  return graticule.extentMajor([[-180, -90 + _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]], [180, 90 - _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]]]).extentMinor([[-180, -80 - _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]], [180, 80 + _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]]]);
}
function graticule10() {
  return graticule()();
}

/***/ }),

/***/ "./node_modules/d3-geo/src/identity.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/identity.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return x;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/index.js":
/*!******************************************!*\
  !*** ./node_modules/d3-geo/src/index.js ***!
  \******************************************/
/*! exports provided: geoArea, geoBounds, geoCentroid, geoCircle, geoClipAntimeridian, geoClipCircle, geoClipExtent, geoClipRectangle, geoContains, geoDistance, geoGraticule, geoGraticule10, geoInterpolate, geoLength, geoPath, geoAlbers, geoAlbersUsa, geoAzimuthalEqualArea, geoAzimuthalEqualAreaRaw, geoAzimuthalEquidistant, geoAzimuthalEquidistantRaw, geoConicConformal, geoConicConformalRaw, geoConicEqualArea, geoConicEqualAreaRaw, geoConicEquidistant, geoConicEquidistantRaw, geoEqualEarth, geoEqualEarthRaw, geoEquirectangular, geoEquirectangularRaw, geoGnomonic, geoGnomonicRaw, geoIdentity, geoProjection, geoProjectionMutator, geoMercator, geoMercatorRaw, geoNaturalEarth1, geoNaturalEarth1Raw, geoOrthographic, geoOrthographicRaw, geoStereographic, geoStereographicRaw, geoTransverseMercator, geoTransverseMercatorRaw, geoRotation, geoStream, geoTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./area */ "./node_modules/d3-geo/src/area.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoArea", function() { return _area__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _bounds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bounds */ "./node_modules/d3-geo/src/bounds.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBounds", function() { return _bounds__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _centroid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./centroid */ "./node_modules/d3-geo/src/centroid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCentroid", function() { return _centroid__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _circle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./circle */ "./node_modules/d3-geo/src/circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCircle", function() { return _circle__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _clip_antimeridian__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clip/antimeridian */ "./node_modules/d3-geo/src/clip/antimeridian.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipAntimeridian", function() { return _clip_antimeridian__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _clip_circle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clip/circle */ "./node_modules/d3-geo/src/clip/circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipCircle", function() { return _clip_circle__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _clip_extent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./clip/extent */ "./node_modules/d3-geo/src/clip/extent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipExtent", function() { return _clip_extent__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _clip_rectangle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./clip/rectangle */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipRectangle", function() { return _clip_rectangle__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _contains__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contains */ "./node_modules/d3-geo/src/contains.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoContains", function() { return _contains__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _distance__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./distance */ "./node_modules/d3-geo/src/distance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoDistance", function() { return _distance__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _graticule__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./graticule */ "./node_modules/d3-geo/src/graticule.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGraticule", function() { return _graticule__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGraticule10", function() { return _graticule__WEBPACK_IMPORTED_MODULE_10__["graticule10"]; });

/* harmony import */ var _interpolate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./interpolate */ "./node_modules/d3-geo/src/interpolate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterpolate", function() { return _interpolate__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _length__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./length */ "./node_modules/d3-geo/src/length.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLength", function() { return _length__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _path_index__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./path/index */ "./node_modules/d3-geo/src/path/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPath", function() { return _path_index__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _projection_albers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./projection/albers */ "./node_modules/d3-geo/src/projection/albers.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAlbers", function() { return _projection_albers__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _projection_albersUsa__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./projection/albersUsa */ "./node_modules/d3-geo/src/projection/albersUsa.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAlbersUsa", function() { return _projection_albersUsa__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _projection_azimuthalEqualArea__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./projection/azimuthalEqualArea */ "./node_modules/d3-geo/src/projection/azimuthalEqualArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEqualArea", function() { return _projection_azimuthalEqualArea__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEqualAreaRaw", function() { return _projection_azimuthalEqualArea__WEBPACK_IMPORTED_MODULE_16__["azimuthalEqualAreaRaw"]; });

/* harmony import */ var _projection_azimuthalEquidistant__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./projection/azimuthalEquidistant */ "./node_modules/d3-geo/src/projection/azimuthalEquidistant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEquidistant", function() { return _projection_azimuthalEquidistant__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEquidistantRaw", function() { return _projection_azimuthalEquidistant__WEBPACK_IMPORTED_MODULE_17__["azimuthalEquidistantRaw"]; });

/* harmony import */ var _projection_conicConformal__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./projection/conicConformal */ "./node_modules/d3-geo/src/projection/conicConformal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicConformal", function() { return _projection_conicConformal__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicConformalRaw", function() { return _projection_conicConformal__WEBPACK_IMPORTED_MODULE_18__["conicConformalRaw"]; });

/* harmony import */ var _projection_conicEqualArea__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./projection/conicEqualArea */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEqualArea", function() { return _projection_conicEqualArea__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEqualAreaRaw", function() { return _projection_conicEqualArea__WEBPACK_IMPORTED_MODULE_19__["conicEqualAreaRaw"]; });

/* harmony import */ var _projection_conicEquidistant__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./projection/conicEquidistant */ "./node_modules/d3-geo/src/projection/conicEquidistant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEquidistant", function() { return _projection_conicEquidistant__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEquidistantRaw", function() { return _projection_conicEquidistant__WEBPACK_IMPORTED_MODULE_20__["conicEquidistantRaw"]; });

/* harmony import */ var _projection_equalEarth__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./projection/equalEarth */ "./node_modules/d3-geo/src/projection/equalEarth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEqualEarth", function() { return _projection_equalEarth__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEqualEarthRaw", function() { return _projection_equalEarth__WEBPACK_IMPORTED_MODULE_21__["equalEarthRaw"]; });

/* harmony import */ var _projection_equirectangular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./projection/equirectangular */ "./node_modules/d3-geo/src/projection/equirectangular.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEquirectangular", function() { return _projection_equirectangular__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEquirectangularRaw", function() { return _projection_equirectangular__WEBPACK_IMPORTED_MODULE_22__["equirectangularRaw"]; });

/* harmony import */ var _projection_gnomonic__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./projection/gnomonic */ "./node_modules/d3-geo/src/projection/gnomonic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGnomonic", function() { return _projection_gnomonic__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGnomonicRaw", function() { return _projection_gnomonic__WEBPACK_IMPORTED_MODULE_23__["gnomonicRaw"]; });

/* harmony import */ var _projection_identity__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./projection/identity */ "./node_modules/d3-geo/src/projection/identity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoIdentity", function() { return _projection_identity__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _projection_index__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./projection/index */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoProjection", function() { return _projection_index__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoProjectionMutator", function() { return _projection_index__WEBPACK_IMPORTED_MODULE_25__["projectionMutator"]; });

/* harmony import */ var _projection_mercator__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./projection/mercator */ "./node_modules/d3-geo/src/projection/mercator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMercator", function() { return _projection_mercator__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMercatorRaw", function() { return _projection_mercator__WEBPACK_IMPORTED_MODULE_26__["mercatorRaw"]; });

/* harmony import */ var _projection_naturalEarth1__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./projection/naturalEarth1 */ "./node_modules/d3-geo/src/projection/naturalEarth1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth1", function() { return _projection_naturalEarth1__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth1Raw", function() { return _projection_naturalEarth1__WEBPACK_IMPORTED_MODULE_27__["naturalEarth1Raw"]; });

/* harmony import */ var _projection_orthographic__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./projection/orthographic */ "./node_modules/d3-geo/src/projection/orthographic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoOrthographic", function() { return _projection_orthographic__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoOrthographicRaw", function() { return _projection_orthographic__WEBPACK_IMPORTED_MODULE_28__["orthographicRaw"]; });

/* harmony import */ var _projection_stereographic__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./projection/stereographic */ "./node_modules/d3-geo/src/projection/stereographic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStereographic", function() { return _projection_stereographic__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStereographicRaw", function() { return _projection_stereographic__WEBPACK_IMPORTED_MODULE_29__["stereographicRaw"]; });

/* harmony import */ var _projection_transverseMercator__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./projection/transverseMercator */ "./node_modules/d3-geo/src/projection/transverseMercator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransverseMercator", function() { return _projection_transverseMercator__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransverseMercatorRaw", function() { return _projection_transverseMercator__WEBPACK_IMPORTED_MODULE_30__["transverseMercatorRaw"]; });

/* harmony import */ var _rotation__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./rotation */ "./node_modules/d3-geo/src/rotation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoRotation", function() { return _rotation__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStream", function() { return _stream__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./transform */ "./node_modules/d3-geo/src/transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransform", function() { return _transform__WEBPACK_IMPORTED_MODULE_33__["default"]; });







 // DEPRECATED! Use d3.geoIdentity().clipExtent(…).





























/***/ }),

/***/ "./node_modules/d3-geo/src/interpolate.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/interpolate.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");

/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var x0 = a[0] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"],
      y0 = a[1] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"],
      x1 = b[0] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"],
      y1 = b[1] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"],
      cy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y0),
      sy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0),
      cy1 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y1),
      sy1 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y1),
      kx0 = cy0 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x0),
      ky0 = cy0 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x0),
      kx1 = cy1 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x1),
      ky1 = cy1 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x1),
      d = 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["haversin"])(y1 - y0) + cy0 * cy1 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["haversin"])(x1 - x0))),
      k = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(d);
  var interpolate = d ? function (t) {
    var B = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(t *= d) / k,
        A = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(d - t) / k,
        x = A * kx0 + B * kx1,
        y = A * ky0 + B * ky1,
        z = A * sy0 + B * sy1;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(y, x) * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"], Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(z, Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + y * y)) * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"]];
  } : function () {
    return [x0 * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"], y0 * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"]];
  };
  interpolate.distance = d;
  return interpolate;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/length.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/length.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./noop */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");




var lengthSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    lambda0,
    sinPhi0,
    cosPhi0;
var lengthStream = {
  sphere: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  point: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: lengthLineStart,
  lineEnd: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonStart: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonEnd: _noop__WEBPACK_IMPORTED_MODULE_2__["default"]
};

function lengthLineStart() {
  lengthStream.point = lengthPointFirst;
  lengthStream.lineEnd = lengthLineEnd;
}

function lengthLineEnd() {
  lengthStream.point = lengthStream.lineEnd = _noop__WEBPACK_IMPORTED_MODULE_2__["default"];
}

function lengthPointFirst(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"];
  lambda0 = lambda, sinPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi), cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi);
  lengthStream.point = lengthPoint;
}

function lengthPoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"];
  var sinPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
      cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      delta = Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda - lambda0),
      cosDelta = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(delta),
      sinDelta = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(delta),
      x = cosPhi * sinDelta,
      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,
      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
  lengthSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x * x + y * y), z));
  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}

/* harmony default export */ __webpack_exports__["default"] = (function (object) {
  lengthSum.reset();
  Object(_stream__WEBPACK_IMPORTED_MODULE_3__["default"])(object, lengthStream);
  return +lengthSum;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/math.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/math.js ***!
  \*****************************************/
/*! exports provided: epsilon, epsilon2, pi, halfPi, quarterPi, tau, degrees, radians, abs, atan, atan2, cos, ceil, exp, floor, log, pow, sin, sign, sqrt, tan, acos, asin, haversin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon", function() { return epsilon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon2", function() { return epsilon2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return pi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "halfPi", function() { return halfPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quarterPi", function() { return quarterPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return tau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "degrees", function() { return degrees; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "radians", function() { return radians; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "abs", function() { return abs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan", function() { return atan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan2", function() { return atan2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return cos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exp", function() { return exp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pow", function() { return pow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return sin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sign", function() { return sign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return sqrt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tan", function() { return tan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acos", function() { return acos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asin", function() { return asin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "haversin", function() { return haversin; });
var epsilon = 1e-6;
var epsilon2 = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var quarterPi = pi / 4;
var tau = pi * 2;
var degrees = 180 / pi;
var radians = pi / 180;
var abs = Math.abs;
var atan = Math.atan;
var atan2 = Math.atan2;
var cos = Math.cos;
var ceil = Math.ceil;
var exp = Math.exp;
var floor = Math.floor;
var log = Math.log;
var pow = Math.pow;
var sin = Math.sin;
var sign = Math.sign || function (x) {
  return x > 0 ? 1 : x < 0 ? -1 : 0;
};
var sqrt = Math.sqrt;
var tan = Math.tan;
function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}
function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}
function haversin(x) {
  return (x = sin(x / 2)) * x;
}

/***/ }),

/***/ "./node_modules/d3-geo/src/noop.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/noop.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return noop; });
function noop() {}

/***/ }),

/***/ "./node_modules/d3-geo/src/path/area.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/path/area.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");



var areaSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    areaRingSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    x00,
    y00,
    x0,
    y0;
var areaStream = {
  point: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineEnd: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonStart: function polygonStart() {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function polygonEnd() {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = _noop__WEBPACK_IMPORTED_MODULE_2__["default"];
    areaSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(areaRingSum));
    areaRingSum.reset();
  },
  result: function result() {
    var area = areaSum / 2;
    areaSum.reset();
    return area;
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaPointFirst(x, y) {
  areaStream.point = areaPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function areaPoint(x, y) {
  areaRingSum.add(y0 * x - x0 * y);
  x0 = x, y0 = y;
}

function areaRingEnd() {
  areaPoint(x00, y00);
}

/* harmony default export */ __webpack_exports__["default"] = (areaStream);

/***/ }),

/***/ "./node_modules/d3-geo/src/path/bounds.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/path/bounds.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");

var x0 = Infinity,
    y0 = x0,
    x1 = -x0,
    y1 = x1;
var boundsStream = {
  point: boundsPoint,
  lineStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  lineEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  polygonStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  polygonEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  result: function result() {
    var bounds = [[x0, y0], [x1, y1]];
    x1 = y1 = -(y0 = x0 = Infinity);
    return bounds;
  }
};

function boundsPoint(x, y) {
  if (x < x0) x0 = x;
  if (x > x1) x1 = x;
  if (y < y0) y0 = y;
  if (y > y1) y1 = y;
}

/* harmony default export */ __webpack_exports__["default"] = (boundsStream);

/***/ }),

/***/ "./node_modules/d3-geo/src/path/centroid.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-geo/src/path/centroid.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
 // TODO Enforce positive area for exterior, negative area for interior?

var X0 = 0,
    Y0 = 0,
    Z0 = 0,
    X1 = 0,
    Y1 = 0,
    Z1 = 0,
    X2 = 0,
    Y2 = 0,
    Z2 = 0,
    x00,
    y00,
    x0,
    y0;
var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function polygonStart() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function polygonEnd() {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function result() {
    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];
    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
    return centroid;
  }
};

function centroidPoint(x, y) {
  X0 += x;
  Y0 += y;
  ++Z0;
}

function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}

function centroidPointFirstLine(x, y) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0 = x, y0 = y);
}

function centroidPointLine(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  centroidPoint(x0 = x, y0 = y);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}

function centroidRingEnd() {
  centroidPointRing(x00, y00);
}

function centroidPointFirstRing(x, y) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00 = x0 = x, y00 = y0 = y);
}

function centroidPointRing(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  z = y0 * x - x0 * y;
  X2 += z * (x0 + x);
  Y2 += z * (y0 + y);
  Z2 += z * 3;
  centroidPoint(x0 = x, y0 = y);
}

/* harmony default export */ __webpack_exports__["default"] = (centroidStream);

/***/ }),

/***/ "./node_modules/d3-geo/src/path/context.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-geo/src/path/context.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PathContext; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");


function PathContext(context) {
  this._context = context;
}
PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function pointRadius(_) {
    return this._radius = _, this;
  },
  polygonStart: function polygonStart() {
    this._line = 0;
  },
  polygonEnd: function polygonEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._line === 0) this._context.closePath();
    this._point = NaN;
  },
  point: function point(x, y) {
    switch (this._point) {
      case 0:
        {
          this._context.moveTo(x, y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._context.lineTo(x, y);

          break;
        }

      default:
        {
          this._context.moveTo(x + this._radius, y);

          this._context.arc(x, y, this._radius, 0, _math__WEBPACK_IMPORTED_MODULE_0__["tau"]);

          break;
        }
    }
  },
  result: _noop__WEBPACK_IMPORTED_MODULE_1__["default"]
};

/***/ }),

/***/ "./node_modules/d3-geo/src/path/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/path/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../identity */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stream */ "./node_modules/d3-geo/src/stream.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./area */ "./node_modules/d3-geo/src/path/area.js");
/* harmony import */ var _bounds__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bounds */ "./node_modules/d3-geo/src/path/bounds.js");
/* harmony import */ var _centroid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./centroid */ "./node_modules/d3-geo/src/path/centroid.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./context */ "./node_modules/d3-geo/src/path/context.js");
/* harmony import */ var _measure__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./measure */ "./node_modules/d3-geo/src/path/measure.js");
/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./string */ "./node_modules/d3-geo/src/path/string.js");








/* harmony default export */ __webpack_exports__["default"] = (function (projection, context) {
  var pointRadius = 4.5,
      projectionStream,
      contextStream;

  function path(object) {
    if (object) {
      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
      Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(contextStream));
    }

    return contextStream.result();
  }

  path.area = function (object) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_area__WEBPACK_IMPORTED_MODULE_2__["default"]));
    return _area__WEBPACK_IMPORTED_MODULE_2__["default"].result();
  };

  path.measure = function (object) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_measure__WEBPACK_IMPORTED_MODULE_6__["default"]));
    return _measure__WEBPACK_IMPORTED_MODULE_6__["default"].result();
  };

  path.bounds = function (object) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_bounds__WEBPACK_IMPORTED_MODULE_3__["default"]));
    return _bounds__WEBPACK_IMPORTED_MODULE_3__["default"].result();
  };

  path.centroid = function (object) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_centroid__WEBPACK_IMPORTED_MODULE_4__["default"]));
    return _centroid__WEBPACK_IMPORTED_MODULE_4__["default"].result();
  };

  path.projection = function (_) {
    return arguments.length ? (projectionStream = _ == null ? (projection = null, _identity__WEBPACK_IMPORTED_MODULE_0__["default"]) : (projection = _).stream, path) : projection;
  };

  path.context = function (_) {
    if (!arguments.length) return context;
    contextStream = _ == null ? (context = null, new _string__WEBPACK_IMPORTED_MODULE_7__["default"]()) : new _context__WEBPACK_IMPORTED_MODULE_5__["default"](context = _);
    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
    return path;
  };

  path.pointRadius = function (_) {
    if (!arguments.length) return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };

  return path.projection(projection).context(context);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/path/measure.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-geo/src/path/measure.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");



var lengthSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    lengthRing,
    x00,
    y00,
    x0,
    y0;
var lengthStream = {
  point: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: function lineStart() {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function lineEnd() {
    if (lengthRing) lengthPoint(x00, y00);
    lengthStream.point = _noop__WEBPACK_IMPORTED_MODULE_2__["default"];
  },
  polygonStart: function polygonStart() {
    lengthRing = true;
  },
  polygonEnd: function polygonEnd() {
    lengthRing = null;
  },
  result: function result() {
    var length = +lengthSum;
    lengthSum.reset();
    return length;
  }
};

function lengthPointFirst(x, y) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function lengthPoint(x, y) {
  x0 -= x, y0 -= y;
  lengthSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x0 * x0 + y0 * y0));
  x0 = x, y0 = y;
}

/* harmony default export */ __webpack_exports__["default"] = (lengthStream);

/***/ }),

/***/ "./node_modules/d3-geo/src/path/string.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/path/string.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PathString; });
function PathString() {
  this._string = [];
}
PathString.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function pointRadius(_) {
    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function polygonStart() {
    this._line = 0;
  },
  polygonEnd: function polygonEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._line === 0) this._string.push("Z");
    this._point = NaN;
  },
  point: function point(x, y) {
    switch (this._point) {
      case 0:
        {
          this._string.push("M", x, ",", y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._string.push("L", x, ",", y);

          break;
        }

      default:
        {
          if (this._circle == null) this._circle = circle(this._radius);

          this._string.push("M", x, ",", y, this._circle);

          break;
        }
    }
  },
  result: function result() {
    if (this._string.length) {
      var result = this._string.join("");

      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};

function circle(radius) {
  return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}

/***/ }),

/***/ "./node_modules/d3-geo/src/pointEqual.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/pointEqual.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");

/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(a[0] - b[0]) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"] && Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(a[1] - b[1]) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"];
});

/***/ }),

/***/ "./node_modules/d3-geo/src/polygonContains.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-geo/src/polygonContains.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");



var sum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])();
/* harmony default export */ __webpack_exports__["default"] = (function (polygon, point) {
  var lambda = point[0],
      phi = point[1],
      sinPhi = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi),
      normal = [Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(lambda), -Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(lambda), 0],
      angle = 0,
      winding = 0;
  sum.reset();
  if (sinPhi === 1) phi = _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] + _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];else if (sinPhi === -1) phi = -_math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = point0[0],
        phi0 = point0[1] / 2 + _math__WEBPACK_IMPORTED_MODULE_2__["quarterPi"],
        sinPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi0),
        cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = point1[0],
          phi1 = point1[1] / 2 + _math__WEBPACK_IMPORTED_MODULE_2__["quarterPi"],
          sinPhi1 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi1),
          cosPhi1 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > _math__WEBPACK_IMPORTED_MODULE_2__["pi"],
          k = sinPhi0 * sinPhi1;
      sum.add(Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(k * sign * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(absDelta), cosPhi0 * cosPhi1 + k * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(absDelta)));
      angle += antimeridian ? delta + sign * _math__WEBPACK_IMPORTED_MODULE_2__["tau"] : delta; // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?

      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesianCross"])(Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesian"])(point0), Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesian"])(point1));
        Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesianNormalizeInPlace"])(arc);
        var intersection = Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesianCross"])(normal, arc);
        Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesianNormalizeInPlace"])(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * Object(_math__WEBPACK_IMPORTED_MODULE_2__["asin"])(intersection[2]);

        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  } // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.


  return (angle < -_math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] || angle < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] && sum < -_math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) ^ winding & 1;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/albers.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/albers.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _conicEqualArea__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./conicEqualArea */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_conicEqualArea__WEBPACK_IMPORTED_MODULE_0__["default"])().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/albersUsa.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/albersUsa.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _albers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./albers */ "./node_modules/d3-geo/src/projection/albers.js");
/* harmony import */ var _conicEqualArea__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./conicEqualArea */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");
/* harmony import */ var _fit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fit */ "./node_modules/d3-geo/src/projection/fit.js");



 // The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.

function multiplex(streams) {
  var n = streams.length;
  return {
    point: function point(x, y) {
      var i = -1;

      while (++i < n) {
        streams[i].point(x, y);
      }
    },
    sphere: function sphere() {
      var i = -1;

      while (++i < n) {
        streams[i].sphere();
      }
    },
    lineStart: function lineStart() {
      var i = -1;

      while (++i < n) {
        streams[i].lineStart();
      }
    },
    lineEnd: function lineEnd() {
      var i = -1;

      while (++i < n) {
        streams[i].lineEnd();
      }
    },
    polygonStart: function polygonStart() {
      var i = -1;

      while (++i < n) {
        streams[i].polygonStart();
      }
    },
    polygonEnd: function polygonEnd() {
      var i = -1;

      while (++i < n) {
        streams[i].polygonEnd();
      }
    }
  };
} // A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers


/* harmony default export */ __webpack_exports__["default"] = (function () {
  var cache,
      cacheStream,
      lower48 = Object(_albers__WEBPACK_IMPORTED_MODULE_1__["default"])(),
      lower48Point,
      alaska = Object(_conicEqualArea__WEBPACK_IMPORTED_MODULE_2__["default"])().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),
      alaskaPoint,
      // EPSG:3338
  hawaii = Object(_conicEqualArea__WEBPACK_IMPORTED_MODULE_2__["default"])().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),
      hawaiiPoint,
      // ESRI:102007
  _point,
      pointStream = {
    point: function point(x, y) {
      _point = [x, y];
    }
  };

  function albersUsa(coordinates) {
    var x = coordinates[0],
        y = coordinates[1];
    return _point = null, (lower48Point.point(x, y), _point) || (alaskaPoint.point(x, y), _point) || (hawaiiPoint.point(x, y), _point);
  }

  albersUsa.invert = function (coordinates) {
    var k = lower48.scale(),
        t = lower48.translate(),
        x = (coordinates[0] - t[0]) / k,
        y = (coordinates[1] - t[1]) / k;
    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);
  };

  albersUsa.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
  };

  albersUsa.precision = function (_) {
    if (!arguments.length) return lower48.precision();
    lower48.precision(_), alaska.precision(_), hawaii.precision(_);
    return reset();
  };

  albersUsa.scale = function (_) {
    if (!arguments.length) return lower48.scale();
    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
    return albersUsa.translate(lower48.translate());
  };

  albersUsa.translate = function (_) {
    if (!arguments.length) return lower48.translate();
    var k = lower48.scale(),
        x = +_[0],
        y = +_[1];
    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);
    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.120 * k + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]], [x - 0.214 * k - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.234 * k - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]]]).stream(pointStream);
    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.166 * k + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]], [x - 0.115 * k - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.234 * k - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]]]).stream(pointStream);
    return reset();
  };

  albersUsa.fitExtent = function (extent, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitExtent"])(albersUsa, extent, object);
  };

  albersUsa.fitSize = function (size, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitSize"])(albersUsa, size, object);
  };

  albersUsa.fitWidth = function (width, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitWidth"])(albersUsa, width, object);
  };

  albersUsa.fitHeight = function (height, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitHeight"])(albersUsa, height, object);
  };

  function reset() {
    cache = cacheStream = null;
    return albersUsa;
  }

  return albersUsa.scale(1070);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthal.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthal.js ***!
  \*********************************************************/
/*! exports provided: azimuthalRaw, azimuthalInvert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalRaw", function() { return azimuthalRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalInvert", function() { return azimuthalInvert; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");

function azimuthalRaw(scale) {
  return function (x, y) {
    var cx = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x),
        cy = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y),
        k = scale(cx * cy);
    return [k * cy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x), k * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y)];
  };
}
function azimuthalInvert(angle) {
  return function (x, y) {
    var z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + y * y),
        c = angle(z),
        sc = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(c),
        cc = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(c);
    return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x * sc, z * cc), Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(z && y * sc / z)];
  };
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthalEqualArea.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthalEqualArea.js ***!
  \******************************************************************/
/*! exports provided: azimuthalEqualAreaRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalEqualAreaRaw", function() { return azimuthalEqualAreaRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");



var azimuthalEqualAreaRaw = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalRaw"])(function (cxcy) {
  return Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(2 / (1 + cxcy));
});
azimuthalEqualAreaRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(function (z) {
  return 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(z / 2);
});
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthalEquidistant.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthalEquidistant.js ***!
  \********************************************************************/
/*! exports provided: azimuthalEquidistantRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalEquidistantRaw", function() { return azimuthalEquidistantRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");



var azimuthalEquidistantRaw = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalRaw"])(function (c) {
  return (c = Object(_math__WEBPACK_IMPORTED_MODULE_0__["acos"])(c)) && c / Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(c);
});
azimuthalEquidistantRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(function (z) {
  return z;
});
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conic.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conic.js ***!
  \*****************************************************/
/*! exports provided: conicProjection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicProjection", function() { return conicProjection; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");


function conicProjection(projectAt) {
  var phi0 = 0,
      phi1 = _math__WEBPACK_IMPORTED_MODULE_0__["pi"] / 3,
      m = Object(_index__WEBPACK_IMPORTED_MODULE_1__["projectionMutator"])(projectAt),
      p = m(phi0, phi1);

  p.parallels = function (_) {
    return arguments.length ? m(phi0 = _[0] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi1 = _[1] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"]) : [phi0 * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"], phi1 * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"]];
  };

  return p;
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicConformal.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicConformal.js ***!
  \**************************************************************/
/*! exports provided: conicConformalRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicConformalRaw", function() { return conicConformalRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conic */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _mercator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mercator */ "./node_modules/d3-geo/src/projection/mercator.js");




function tany(y) {
  return Object(_math__WEBPACK_IMPORTED_MODULE_0__["tan"])((_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + y) / 2);
}

function conicConformalRaw(y0, y1) {
  var cy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y0),
      n = y0 === y1 ? Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0) : Object(_math__WEBPACK_IMPORTED_MODULE_0__["log"])(cy0 / Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y1)) / Object(_math__WEBPACK_IMPORTED_MODULE_0__["log"])(tany(y1) / tany(y0)),
      f = cy0 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["pow"])(tany(y0), n) / n;
  if (!n) return _mercator__WEBPACK_IMPORTED_MODULE_2__["mercatorRaw"];

  function project(x, y) {
    if (f > 0) {
      if (y < -_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) y = -_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"];
    } else {
      if (y > _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) y = _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"];
    }

    var r = f / Object(_math__WEBPACK_IMPORTED_MODULE_0__["pow"])(tany(y), n);
    return [r * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(n * x), f - r * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(n * x)];
  }

  project.invert = function (x, y) {
    var fy = f - y,
        r = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(n) * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + fy * fy);
    return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x, Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(fy)) / n * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(fy), 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["pow"])(f / r, 1 / n)) - _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"]];
  };

  return project;
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_conic__WEBPACK_IMPORTED_MODULE_1__["conicProjection"])(conicConformalRaw).scale(109.5).parallels([30, 30]);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicEqualArea.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicEqualArea.js ***!
  \**************************************************************/
/*! exports provided: conicEqualAreaRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicEqualAreaRaw", function() { return conicEqualAreaRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conic */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _cylindricalEqualArea__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cylindricalEqualArea */ "./node_modules/d3-geo/src/projection/cylindricalEqualArea.js");



function conicEqualAreaRaw(y0, y1) {
  var sy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0),
      n = (sy0 + Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y1)) / 2; // Are the parallels symmetrical around the Equator?

  if (Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(n) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) return Object(_cylindricalEqualArea__WEBPACK_IMPORTED_MODULE_2__["cylindricalEqualAreaRaw"])(y0);
  var c = 1 + sy0 * (2 * n - sy0),
      r0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(c) / n;

  function project(x, y) {
    var r = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(c - 2 * n * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y)) / n;
    return [r * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x *= n), r0 - r * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x)];
  }

  project.invert = function (x, y) {
    var r0y = r0 - y;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x, Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(r0y)) / n * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(r0y), Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
  };

  return project;
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_conic__WEBPACK_IMPORTED_MODULE_1__["conicProjection"])(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicEquidistant.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicEquidistant.js ***!
  \****************************************************************/
/*! exports provided: conicEquidistantRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicEquidistantRaw", function() { return conicEquidistantRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conic */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _equirectangular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./equirectangular */ "./node_modules/d3-geo/src/projection/equirectangular.js");



function conicEquidistantRaw(y0, y1) {
  var cy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y0),
      n = y0 === y1 ? Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0) : (cy0 - Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y1)) / (y1 - y0),
      g = cy0 / n + y0;
  if (Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(n) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) return _equirectangular__WEBPACK_IMPORTED_MODULE_2__["equirectangularRaw"];

  function project(x, y) {
    var gy = g - y,
        nx = n * x;
    return [gy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(nx), g - gy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(nx)];
  }

  project.invert = function (x, y) {
    var gy = g - y;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x, Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(gy)) / n * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(gy), g - Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(n) * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + gy * gy)];
  };

  return project;
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_conic__WEBPACK_IMPORTED_MODULE_1__["conicProjection"])(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/cylindricalEqualArea.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/cylindricalEqualArea.js ***!
  \********************************************************************/
/*! exports provided: cylindricalEqualAreaRaw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cylindricalEqualAreaRaw", function() { return cylindricalEqualAreaRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");

function cylindricalEqualAreaRaw(phi0) {
  var cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi) / cosPhi0];
  }

  forward.invert = function (x, y) {
    return [x / cosPhi0, Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(y * cosPhi0)];
  };

  return forward;
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/equalEarth.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/equalEarth.js ***!
  \**********************************************************/
/*! exports provided: equalEarthRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equalEarthRaw", function() { return equalEarthRaw; });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");


var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(3) / 2,
    iterations = 12;
function equalEarthRaw(lambda, phi) {
  var l = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(M * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)),
      l2 = l * l,
      l6 = l2 * l2 * l2;
  return [lambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];
}

equalEarthRaw.invert = function (x, y) {
  var l = y,
      l2 = l * l,
      l6 = l2 * l2 * l2;

  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon2"]) break;
  }

  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(l), Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(l) / M)];
};

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(equalEarthRaw).scale(177.158);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/equirectangular.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/equirectangular.js ***!
  \***************************************************************/
/*! exports provided: equirectangularRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equirectangularRaw", function() { return equirectangularRaw; });
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");

function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}
equirectangularRaw.invert = equirectangularRaw;
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_0__["default"])(equirectangularRaw).scale(152.63);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/fit.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/fit.js ***!
  \***************************************************/
/*! exports provided: fitExtent, fitSize, fitWidth, fitHeight */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitExtent", function() { return fitExtent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitSize", function() { return fitSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitWidth", function() { return fitWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitHeight", function() { return fitHeight; });
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../stream */ "./node_modules/d3-geo/src/stream.js");
/* harmony import */ var _path_bounds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../path/bounds */ "./node_modules/d3-geo/src/path/bounds.js");



function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  Object(_stream__WEBPACK_IMPORTED_MODULE_0__["default"])(object, projection.stream(_path_bounds__WEBPACK_IMPORTED_MODULE_1__["default"]));
  fitBounds(_path_bounds__WEBPACK_IMPORTED_MODULE_1__["default"].result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function (b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}
function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}
function fitWidth(projection, width, object) {
  return fit(projection, function (b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}
function fitHeight(projection, height, object) {
  return fit(projection, function (b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/gnomonic.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/gnomonic.js ***!
  \********************************************************/
/*! exports provided: gnomonicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gnomonicRaw", function() { return gnomonicRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");



function gnomonicRaw(x, y) {
  var cy = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y),
      k = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x) * cy;
  return [cy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x) / k, Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y) / k];
}
gnomonicRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(_math__WEBPACK_IMPORTED_MODULE_0__["atan"]);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(gnomonicRaw).scale(144.049).clipAngle(60);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/identity.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/identity.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _clip_rectangle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clip/rectangle */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../identity */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transform */ "./node_modules/d3-geo/src/transform.js");
/* harmony import */ var _fit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fit */ "./node_modules/d3-geo/src/projection/fit.js");





function scaleTranslate(kx, ky, tx, ty) {
  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? _identity__WEBPACK_IMPORTED_MODULE_1__["default"] : Object(_transform__WEBPACK_IMPORTED_MODULE_2__["transformer"])({
    point: function point(x, y) {
      this.stream.point(x * kx + tx, y * ky + ty);
    }
  });
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var k = 1,
      tx = 0,
      ty = 0,
      sx = 1,
      sy = 1,
      transform = _identity__WEBPACK_IMPORTED_MODULE_1__["default"],
      // scale, translate and reflect
  x0 = null,
      y0,
      x1,
      y1,
      // clip extent
  _postclip = _identity__WEBPACK_IMPORTED_MODULE_1__["default"],
      cache,
      cacheStream,
      projection;

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return projection = {
    stream: function stream(_stream) {
      return cache && cacheStream === _stream ? cache : cache = transform(_postclip(cacheStream = _stream));
    },
    postclip: function postclip(_) {
      return arguments.length ? (_postclip = _, x0 = y0 = x1 = y1 = null, reset()) : _postclip;
    },
    clipExtent: function clipExtent(_) {
      return arguments.length ? (_postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity__WEBPACK_IMPORTED_MODULE_1__["default"]) : Object(_clip_rectangle__WEBPACK_IMPORTED_MODULE_0__["default"])(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
    },
    scale: function scale(_) {
      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;
    },
    translate: function translate(_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];
    },
    reflectX: function reflectX(_) {
      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;
    },
    reflectY: function reflectY(_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;
    },
    fitExtent: function fitExtent(extent, object) {
      return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitExtent"])(projection, extent, object);
    },
    fitSize: function fitSize(size, object) {
      return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitSize"])(projection, size, object);
    },
    fitWidth: function fitWidth(width, object) {
      return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitWidth"])(projection, width, object);
    },
    fitHeight: function fitHeight(height, object) {
      return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitHeight"])(projection, height, object);
    }
  };
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/index.js ***!
  \*****************************************************/
/*! exports provided: default, projectionMutator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projectionMutator", function() { return projectionMutator; });
/* harmony import */ var _clip_antimeridian__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clip/antimeridian */ "./node_modules/d3-geo/src/clip/antimeridian.js");
/* harmony import */ var _clip_circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../clip/circle */ "./node_modules/d3-geo/src/clip/circle.js");
/* harmony import */ var _clip_rectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clip/rectangle */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony import */ var _compose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../compose */ "./node_modules/d3-geo/src/compose.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../identity */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../rotation */ "./node_modules/d3-geo/src/rotation.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../transform */ "./node_modules/d3-geo/src/transform.js");
/* harmony import */ var _fit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./fit */ "./node_modules/d3-geo/src/projection/fit.js");
/* harmony import */ var _resample__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./resample */ "./node_modules/d3-geo/src/projection/resample.js");










var transformRadians = Object(_transform__WEBPACK_IMPORTED_MODULE_7__["transformer"])({
  point: function point(x, y) {
    this.stream.point(x * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], y * _math__WEBPACK_IMPORTED_MODULE_5__["radians"]);
  }
});

function transformRotate(rotate) {
  return Object(_transform__WEBPACK_IMPORTED_MODULE_7__["transformer"])({
    point: function point(x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy) {
  function transform(x, y) {
    return [dx + k * x, dy - k * y];
  }

  transform.invert = function (x, y) {
    return [(x - dx) / k, (dy - y) / k];
  };

  return transform;
}

function scaleTranslateRotate(k, dx, dy, alpha) {
  var cosAlpha = Object(_math__WEBPACK_IMPORTED_MODULE_5__["cos"])(alpha),
      sinAlpha = Object(_math__WEBPACK_IMPORTED_MODULE_5__["sin"])(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;

  function transform(x, y) {
    return [a * x - b * y + dx, dy - b * x - a * y];
  }

  transform.invert = function (x, y) {
    return [ai * x - bi * y + ci, fi - bi * x - ai * y];
  };

  return transform;
}

function projection(project) {
  return projectionMutator(function () {
    return project;
  })();
}
function projectionMutator(projectAt) {
  var project,
      k = 150,
      // scale
  x = 480,
      y = 250,
      // translate
  lambda = 0,
      phi = 0,
      // center
  deltaLambda = 0,
      deltaPhi = 0,
      deltaGamma = 0,
      rotate,
      // pre-rotate
  alpha = 0,
      // post-rotate
  theta = null,
      preclip = _clip_antimeridian__WEBPACK_IMPORTED_MODULE_0__["default"],
      // pre-clip angle
  x0 = null,
      y0,
      x1,
      y1,
      postclip = _identity__WEBPACK_IMPORTED_MODULE_4__["default"],
      // post-clip extent
  delta2 = 0.5,
      // precision
  projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], point[1] * _math__WEBPACK_IMPORTED_MODULE_5__["radians"]);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"], point[1] * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"]];
  }

  projection.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function (_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function (_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function (_) {
    return arguments.length ? (preclip = +_ ? Object(_clip_circle__WEBPACK_IMPORTED_MODULE_1__["default"])(theta = _ * _math__WEBPACK_IMPORTED_MODULE_5__["radians"]) : (theta = null, _clip_antimeridian__WEBPACK_IMPORTED_MODULE_0__["default"]), reset()) : theta * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"];
  };

  projection.clipExtent = function (_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity__WEBPACK_IMPORTED_MODULE_4__["default"]) : Object(_clip_rectangle__WEBPACK_IMPORTED_MODULE_2__["default"])(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function (_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function (_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function (_) {
    return arguments.length ? (lambda = _[0] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], phi = _[1] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], recenter()) : [lambda * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"], phi * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"]];
  };

  projection.rotate = function (_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], deltaPhi = _[1] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], deltaGamma = _.length > 2 ? _[2] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"] : 0, recenter()) : [deltaLambda * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"], deltaPhi * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"], deltaGamma * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"]];
  };

  projection.angle = function (_) {
    return arguments.length ? (alpha = _ % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], recenter()) : alpha * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"];
  };

  projection.precision = function (_) {
    return arguments.length ? (projectResample = Object(_resample__WEBPACK_IMPORTED_MODULE_9__["default"])(projectTransform, delta2 = _ * _), reset()) : Object(_math__WEBPACK_IMPORTED_MODULE_5__["sqrt"])(delta2);
  };

  projection.fitExtent = function (extent, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_8__["fitExtent"])(projection, extent, object);
  };

  projection.fitSize = function (size, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_8__["fitSize"])(projection, size, object);
  };

  projection.fitWidth = function (width, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_8__["fitWidth"])(projection, width, object);
  };

  projection.fitHeight = function (height, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_8__["fitHeight"])(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),
        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);
    rotate = Object(_rotation__WEBPACK_IMPORTED_MODULE_6__["rotateRadians"])(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = Object(_compose__WEBPACK_IMPORTED_MODULE_3__["default"])(project, transform);
    projectRotateTransform = Object(_compose__WEBPACK_IMPORTED_MODULE_3__["default"])(rotate, projectTransform);
    projectResample = Object(_resample__WEBPACK_IMPORTED_MODULE_9__["default"])(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function () {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/mercator.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/mercator.js ***!
  \********************************************************/
/*! exports provided: mercatorRaw, default, mercatorProjection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mercatorRaw", function() { return mercatorRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mercatorProjection", function() { return mercatorProjection; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rotation */ "./node_modules/d3-geo/src/rotation.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");



function mercatorRaw(lambda, phi) {
  return [lambda, Object(_math__WEBPACK_IMPORTED_MODULE_0__["log"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["tan"])((_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + phi) / 2))];
}

mercatorRaw.invert = function (x, y) {
  return [x, 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["exp"])(y)) - _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"]];
};

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return mercatorProjection(mercatorRaw).scale(961 / _math__WEBPACK_IMPORTED_MODULE_0__["tau"]);
});
function mercatorProjection(project) {
  var m = Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null,
      y0,
      x1,
      y1; // clip extent

  m.scale = function (_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function (_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function (_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function (_) {
    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = _math__WEBPACK_IMPORTED_MODULE_0__["pi"] * scale(),
        t = m(Object(_rotation__WEBPACK_IMPORTED_MODULE_1__["default"])(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/naturalEarth1.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/naturalEarth1.js ***!
  \*************************************************************/
/*! exports provided: naturalEarth1Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "naturalEarth1Raw", function() { return naturalEarth1Raw; });
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");


function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi,
      phi4 = phi2 * phi2;
  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];
}

naturalEarth1Raw.invert = function (x, y) {
  var phi = y,
      i = 25,
      delta;

  do {
    var phi2 = phi * phi,
        phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
  } while (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);

  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];
};

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_0__["default"])(naturalEarth1Raw).scale(175.295);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/orthographic.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/orthographic.js ***!
  \************************************************************/
/*! exports provided: orthographicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orthographicRaw", function() { return orthographicRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");



function orthographicRaw(x, y) {
  return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y) * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x), Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y)];
}
orthographicRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(_math__WEBPACK_IMPORTED_MODULE_0__["asin"]);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(orthographicRaw).scale(249.5).clipAngle(90 + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/resample.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/resample.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transform */ "./node_modules/d3-geo/src/transform.js");



var maxDepth = 16,
    // maximum depth of subdivision
cosMinDistance = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(30 * _math__WEBPACK_IMPORTED_MODULE_1__["radians"]); // cos(minimum angular distance)

/* harmony default export */ __webpack_exports__["default"] = (function (project, delta2) {
  return +delta2 ? resample(project, delta2) : resampleNone(project);
});

function resampleNone(project) {
  return Object(_transform__WEBPACK_IMPORTED_MODULE_2__["transformer"])({
    point: function point(x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample(project, delta2) {
  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;

    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(a * a + b * b + c * c),
          phi2 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["asin"])(c /= m),
          lambda2 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(c) - 1) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda0 - lambda1) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? (lambda0 + lambda1) / 2 : Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;

      if (dz * dz / d2 > delta2 // perpendicular projected distance
      || Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
        // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }

  return function (stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
    lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function polygonStart() {
        stream.polygonStart();
        resampleStream.lineStart = ringStart;
      },
      polygonEnd: function polygonEnd() {
        stream.polygonEnd();
        resampleStream.lineStart = lineStart;
      }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesian"])([lambda, phi]),
          p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/stereographic.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/stereographic.js ***!
  \*************************************************************/
/*! exports provided: stereographicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stereographicRaw", function() { return stereographicRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");



function stereographicRaw(x, y) {
  var cy = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y),
      k = 1 + Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x) * cy;
  return [cy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x) / k, Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y) / k];
}
stereographicRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(function (z) {
  return 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan"])(z);
});
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(stereographicRaw).scale(250).clipAngle(142);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/projection/transverseMercator.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/transverseMercator.js ***!
  \******************************************************************/
/*! exports provided: transverseMercatorRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transverseMercatorRaw", function() { return transverseMercatorRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _mercator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mercator */ "./node_modules/d3-geo/src/projection/mercator.js");


function transverseMercatorRaw(lambda, phi) {
  return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["log"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["tan"])((_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + phi) / 2)), -lambda];
}

transverseMercatorRaw.invert = function (x, y) {
  return [-y, 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["exp"])(x)) - _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"]];
};

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var m = Object(_mercator__WEBPACK_IMPORTED_MODULE_1__["mercatorProjection"])(transverseMercatorRaw),
      center = m.center,
      rotate = m.rotate;

  m.center = function (_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };

  m.rotate = function (_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };

  return rotate([0, 0, 90]).scale(159.155);
});

/***/ }),

/***/ "./node_modules/d3-geo/src/rotation.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/rotation.js ***!
  \*********************************************/
/*! exports provided: rotateRadians, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateRadians", function() { return rotateRadians; });
/* harmony import */ var _compose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compose */ "./node_modules/d3-geo/src/compose.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");



function rotationIdentity(lambda, phi) {
  return [Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda) > _math__WEBPACK_IMPORTED_MODULE_1__["pi"] ? lambda + Math.round(-lambda / _math__WEBPACK_IMPORTED_MODULE_1__["tau"]) * _math__WEBPACK_IMPORTED_MODULE_1__["tau"] : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;
function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= _math__WEBPACK_IMPORTED_MODULE_1__["tau"]) ? deltaPhi || deltaGamma ? Object(_compose__WEBPACK_IMPORTED_MODULE_0__["default"])(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;
}

function forwardRotationLambda(deltaLambda) {
  return function (lambda, phi) {
    return lambda += deltaLambda, [lambda > _math__WEBPACK_IMPORTED_MODULE_1__["pi"] ? lambda - _math__WEBPACK_IMPORTED_MODULE_1__["tau"] : lambda < -_math__WEBPACK_IMPORTED_MODULE_1__["pi"] ? lambda + _math__WEBPACK_IMPORTED_MODULE_1__["tau"] : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(deltaPhi),
      sinDeltaPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(deltaPhi),
      cosDeltaGamma = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(deltaGamma),
      sinDeltaGamma = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        x = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda) * cosPhi,
        y = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) * cosPhi,
        z = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), Object(_math__WEBPACK_IMPORTED_MODULE_1__["asin"])(k * cosDeltaGamma + y * sinDeltaGamma)];
  }

  rotation.invert = function (lambda, phi) {
    var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        x = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda) * cosPhi,
        y = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) * cosPhi,
        z = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), Object(_math__WEBPACK_IMPORTED_MODULE_1__["asin"])(k * cosDeltaPhi - x * sinDeltaPhi)];
  };

  return rotation;
}

/* harmony default export */ __webpack_exports__["default"] = (function (rotate) {
  rotate = rotateRadians(rotate[0] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"], rotate[1] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"], rotate.length > 2 ? rotate[2] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"] : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"], coordinates[1] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"]);
    return coordinates[0] *= _math__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates[1] *= _math__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates;
  }

  forward.invert = function (coordinates) {
    coordinates = rotate.invert(coordinates[0] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"], coordinates[1] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"]);
    return coordinates[0] *= _math__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates[1] *= _math__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates;
  };

  return forward;
});

/***/ }),

/***/ "./node_modules/d3-geo/src/stream.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/stream.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function Feature(object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function FeatureCollection(object, stream) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) {
      streamGeometry(features[i].geometry, stream);
    }
  }
};
var streamGeometryType = {
  Sphere: function Sphere(object, stream) {
    stream.sphere();
  },
  Point: function Point(object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function MultiPoint(object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) {
      object = coordinates[i], stream.point(object[0], object[1], object[2]);
    }
  },
  LineString: function LineString(object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function MultiLineString(object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) {
      streamLine(coordinates[i], stream, 0);
    }
  },
  Polygon: function Polygon(object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function MultiPolygon(object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) {
      streamPolygon(coordinates[i], stream);
    }
  },
  GeometryCollection: function GeometryCollection(object, stream) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) {
      streamGeometry(geometries[i], stream);
    }
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1,
      n = coordinates.length - closed,
      coordinate;
  stream.lineStart();

  while (++i < n) {
    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
  }

  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1,
      n = coordinates.length;
  stream.polygonStart();

  while (++i < n) {
    streamLine(coordinates[i], stream, 1);
  }

  stream.polygonEnd();
}

/* harmony default export */ __webpack_exports__["default"] = (function (object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
});

/***/ }),

/***/ "./node_modules/d3-geo/src/transform.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/transform.js ***!
  \**********************************************/
/*! exports provided: default, transformer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformer", function() { return transformer; });
/* harmony default export */ __webpack_exports__["default"] = (function (methods) {
  return {
    stream: transformer(methods)
  };
});
function transformer(methods) {
  return function (stream) {
    var s = new TransformStream();

    for (var key in methods) {
      s[key] = methods[key];
    }

    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function point(x, y) {
    this.stream.point(x, y);
  },
  sphere: function sphere() {
    this.stream.sphere();
  },
  lineStart: function lineStart() {
    this.stream.lineStart();
  },
  lineEnd: function lineEnd() {
    this.stream.lineEnd();
  },
  polygonStart: function polygonStart() {
    this.stream.polygonStart();
  },
  polygonEnd: function polygonEnd() {
    this.stream.polygonEnd();
  }
};

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/accessors.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/accessors.js ***!
  \****************************************************/
/*! exports provided: optional, required */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "optional", function() { return optional; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "required", function() { return required; });
function optional(f) {
  return f == null ? null : required(f);
}
function required(f) {
  if (typeof f !== "function") throw new Error();
  return f;
}

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/array.js":
/*!************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/array.js ***!
  \************************************************/
/*! exports provided: slice, shuffle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return shuffle; });
var slice = Array.prototype.slice;
function shuffle(array) {
  var m = array.length,
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m];
    array[m] = array[i];
    array[i] = t;
  }

  return array;
}

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/cluster.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/cluster.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

function meanX(children) {
  return children.reduce(meanXReduce, 0) / children.length;
}

function meanXReduce(x, c) {
  return x + c.x;
}

function maxY(children) {
  return 1 + children.reduce(maxYReduce, 0);
}

function maxYReduce(y, c) {
  return Math.max(y, c.y);
}

function leafLeft(node) {
  var children;

  while (children = node.children) {
    node = children[0];
  }

  return node;
}

function leafRight(node) {
  var children;

  while (children = node.children) {
    node = children[children.length - 1];
  }

  return node;
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = false;

  function cluster(root) {
    var previousNode,
        x = 0; // First walk, computing the initial x & y values.

    root.eachAfter(function (node) {
      var children = node.children;

      if (children) {
        node.x = meanX(children);
        node.y = maxY(children);
      } else {
        node.x = previousNode ? x += separation(node, previousNode) : 0;
        node.y = 0;
        previousNode = node;
      }
    });
    var left = leafLeft(root),
        right = leafRight(root),
        x0 = left.x - separation(left, right) / 2,
        x1 = right.x + separation(right, left) / 2; // Second walk, normalizing x & y to the desired size.

    return root.eachAfter(nodeSize ? function (node) {
      node.x = (node.x - root.x) * dx;
      node.y = (root.y - node.y) * dy;
    } : function (node) {
      node.x = (node.x - x0) / (x1 - x0) * dx;
      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
    });
  }

  cluster.separation = function (x) {
    return arguments.length ? (separation = x, cluster) : separation;
  };

  cluster.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : nodeSize ? null : [dx, dy];
  };

  cluster.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : nodeSize ? [dx, dy] : null;
  };

  return cluster;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/constant.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/constant.js ***!
  \***************************************************/
/*! exports provided: constantZero, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "constantZero", function() { return constantZero; });
function constantZero() {
  return 0;
}
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/ancestors.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/ancestors.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var node = this,
      nodes = [node];

  while (node = node.parent) {
    nodes.push(node);
  }

  return nodes;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/count.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/count.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function count(node) {
  var sum = 0,
      children = node.children,
      i = children && children.length;
  if (!i) sum = 1;else while (--i >= 0) {
    sum += children[i].value;
  }
  node.value = sum;
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return this.eachAfter(count);
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/descendants.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/descendants.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var nodes = [];
  this.each(function (node) {
    nodes.push(node);
  });
  return nodes;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/each.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/each.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (callback) {
  var node = this,
      current,
      next = [node],
      children,
      i,
      n;

  do {
    current = next.reverse(), next = [];

    while (node = current.pop()) {
      callback(node), children = node.children;
      if (children) for (i = 0, n = children.length; i < n; ++i) {
        next.push(children[i]);
      }
    }
  } while (next.length);

  return this;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (callback) {
  var node = this,
      nodes = [node],
      next = [],
      children,
      i,
      n;

  while (node = nodes.pop()) {
    next.push(node), children = node.children;
    if (children) for (i = 0, n = children.length; i < n; ++i) {
      nodes.push(children[i]);
    }
  }

  while (node = next.pop()) {
    callback(node);
  }

  return this;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (callback) {
  var node = this,
      nodes = [node],
      children,
      i;

  while (node = nodes.pop()) {
    callback(node), children = node.children;
    if (children) for (i = children.length - 1; i >= 0; --i) {
      nodes.push(children[i]);
    }
  }

  return this;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/index.js ***!
  \**********************************************************/
/*! exports provided: default, computeHeight, Node */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return hierarchy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computeHeight", function() { return computeHeight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Node", function() { return Node; });
/* harmony import */ var _count__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./count */ "./node_modules/d3-hierarchy/src/hierarchy/count.js");
/* harmony import */ var _each__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./each */ "./node_modules/d3-hierarchy/src/hierarchy/each.js");
/* harmony import */ var _eachBefore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./eachBefore */ "./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js");
/* harmony import */ var _eachAfter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eachAfter */ "./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js");
/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sum */ "./node_modules/d3-hierarchy/src/hierarchy/sum.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sort */ "./node_modules/d3-hierarchy/src/hierarchy/sort.js");
/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./path */ "./node_modules/d3-hierarchy/src/hierarchy/path.js");
/* harmony import */ var _ancestors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ancestors */ "./node_modules/d3-hierarchy/src/hierarchy/ancestors.js");
/* harmony import */ var _descendants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./descendants */ "./node_modules/d3-hierarchy/src/hierarchy/descendants.js");
/* harmony import */ var _leaves__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./leaves */ "./node_modules/d3-hierarchy/src/hierarchy/leaves.js");
/* harmony import */ var _links__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./links */ "./node_modules/d3-hierarchy/src/hierarchy/links.js");











function hierarchy(data, children) {
  var root = new Node(data),
      valued = +data.value && (root.value = data.value),
      node,
      nodes = [root],
      child,
      childs,
      i,
      n;
  if (children == null) children = defaultChildren;

  while (node = nodes.pop()) {
    if (valued) node.value = +node.data.value;

    if ((childs = children(node.data)) && (n = childs.length)) {
      node.children = new Array(n);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }

  return root.eachBefore(computeHeight);
}

function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}

function defaultChildren(d) {
  return d.children;
}

function copyData(node) {
  node.data = node.data.data;
}

function computeHeight(node) {
  var height = 0;

  do {
    node.height = height;
  } while ((node = node.parent) && node.height < ++height);
}
function Node(data) {
  this.data = data;
  this.depth = this.height = 0;
  this.parent = null;
}
Node.prototype = hierarchy.prototype = {
  constructor: Node,
  count: _count__WEBPACK_IMPORTED_MODULE_0__["default"],
  each: _each__WEBPACK_IMPORTED_MODULE_1__["default"],
  eachAfter: _eachAfter__WEBPACK_IMPORTED_MODULE_3__["default"],
  eachBefore: _eachBefore__WEBPACK_IMPORTED_MODULE_2__["default"],
  sum: _sum__WEBPACK_IMPORTED_MODULE_4__["default"],
  sort: _sort__WEBPACK_IMPORTED_MODULE_5__["default"],
  path: _path__WEBPACK_IMPORTED_MODULE_6__["default"],
  ancestors: _ancestors__WEBPACK_IMPORTED_MODULE_7__["default"],
  descendants: _descendants__WEBPACK_IMPORTED_MODULE_8__["default"],
  leaves: _leaves__WEBPACK_IMPORTED_MODULE_9__["default"],
  links: _links__WEBPACK_IMPORTED_MODULE_10__["default"],
  copy: node_copy
};

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/leaves.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/leaves.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var leaves = [];
  this.eachBefore(function (node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/links.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/links.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var root = this,
      links = [];
  root.each(function (node) {
    if (node !== root) {
      // Don’t include the root’s parent, if any.
      links.push({
        source: node.parent,
        target: node
      });
    }
  });
  return links;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/path.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/path.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (end) {
  var start = this,
      ancestor = leastCommonAncestor(start, end),
      nodes = [start];

  while (start !== ancestor) {
    start = start.parent;
    nodes.push(start);
  }

  var k = nodes.length;

  while (end !== ancestor) {
    nodes.splice(k, 0, end);
    end = end.parent;
  }

  return nodes;
});

function leastCommonAncestor(a, b) {
  if (a === b) return a;
  var aNodes = a.ancestors(),
      bNodes = b.ancestors(),
      c = null;
  a = aNodes.pop();
  b = bNodes.pop();

  while (a === b) {
    c = a;
    a = aNodes.pop();
    b = bNodes.pop();
  }

  return c;
}

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/sort.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/sort.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (compare) {
  return this.eachBefore(function (node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/sum.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/sum.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  return this.eachAfter(function (node) {
    var sum = +value(node.data) || 0,
        children = node.children,
        i = children && children.length;

    while (--i >= 0) {
      sum += children[i].value;
    }

    node.value = sum;
  });
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/index.js ***!
  \************************************************/
/*! exports provided: cluster, hierarchy, pack, packSiblings, packEnclose, partition, stratify, tree, treemap, treemapBinary, treemapDice, treemapSlice, treemapSliceDice, treemapSquarify, treemapResquarify */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cluster__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cluster */ "./node_modules/d3-hierarchy/src/cluster.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cluster", function() { return _cluster__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _hierarchy_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hierarchy/index */ "./node_modules/d3-hierarchy/src/hierarchy/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hierarchy", function() { return _hierarchy_index__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _pack_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pack/index */ "./node_modules/d3-hierarchy/src/pack/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pack", function() { return _pack_index__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _pack_siblings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pack/siblings */ "./node_modules/d3-hierarchy/src/pack/siblings.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "packSiblings", function() { return _pack_siblings__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _pack_enclose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pack/enclose */ "./node_modules/d3-hierarchy/src/pack/enclose.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "packEnclose", function() { return _pack_enclose__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _partition__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./partition */ "./node_modules/d3-hierarchy/src/partition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _partition__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _stratify__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./stratify */ "./node_modules/d3-hierarchy/src/stratify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stratify", function() { return _stratify__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tree */ "./node_modules/d3-hierarchy/src/tree.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tree", function() { return _tree__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _treemap_index__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./treemap/index */ "./node_modules/d3-hierarchy/src/treemap/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemap", function() { return _treemap_index__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _treemap_binary__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./treemap/binary */ "./node_modules/d3-hierarchy/src/treemap/binary.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapBinary", function() { return _treemap_binary__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _treemap_dice__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./treemap/dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapDice", function() { return _treemap_dice__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _treemap_slice__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./treemap/slice */ "./node_modules/d3-hierarchy/src/treemap/slice.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSlice", function() { return _treemap_slice__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _treemap_sliceDice__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./treemap/sliceDice */ "./node_modules/d3-hierarchy/src/treemap/sliceDice.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSliceDice", function() { return _treemap_sliceDice__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _treemap_squarify__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./treemap/squarify */ "./node_modules/d3-hierarchy/src/treemap/squarify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSquarify", function() { return _treemap_squarify__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _treemap_resquarify__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./treemap/resquarify */ "./node_modules/d3-hierarchy/src/treemap/resquarify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapResquarify", function() { return _treemap_resquarify__WEBPACK_IMPORTED_MODULE_14__["default"]; });

















/***/ }),

/***/ "./node_modules/d3-hierarchy/src/pack/enclose.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/enclose.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array */ "./node_modules/d3-hierarchy/src/array.js");

/* harmony default export */ __webpack_exports__["default"] = (function (circles) {
  var i = 0,
      n = (circles = Object(_array__WEBPACK_IMPORTED_MODULE_0__["shuffle"])(_array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(circles))).length,
      B = [],
      p,
      e;

  while (i < n) {
    p = circles[i];
    if (e && enclosesWeak(e, p)) ++i;else e = encloseBasis(B = extendBasis(B, p)), i = 0;
  }

  return e;
});

function extendBasis(B, p) {
  var i, j;
  if (enclosesWeakAll(p, B)) return [p]; // If we get here then B must have at least one element.

  for (i = 0; i < B.length; ++i) {
    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
      return [B[i], p];
    }
  } // If we get here then B must have at least two elements.


  for (i = 0; i < B.length - 1; ++i) {
    for (j = i + 1; j < B.length; ++j) {
      if (enclosesNot(encloseBasis2(B[i], B[j]), p) && enclosesNot(encloseBasis2(B[i], p), B[j]) && enclosesNot(encloseBasis2(B[j], p), B[i]) && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
        return [B[i], B[j], p];
      }
    }
  } // If we get here then something is very wrong.


  throw new Error();
}

function enclosesNot(a, b) {
  var dr = a.r - b.r,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}

function enclosesWeak(a, b) {
  var dr = a.r - b.r + 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function enclosesWeakAll(a, B) {
  for (var i = 0; i < B.length; ++i) {
    if (!enclosesWeak(a, B[i])) {
      return false;
    }
  }

  return true;
}

function encloseBasis(B) {
  switch (B.length) {
    case 1:
      return encloseBasis1(B[0]);

    case 2:
      return encloseBasis2(B[0], B[1]);

    case 3:
      return encloseBasis3(B[0], B[1], B[2]);
  }
}

function encloseBasis1(a) {
  return {
    x: a.x,
    y: a.y,
    r: a.r
  };
}

function encloseBasis2(a, b) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x21 = x2 - x1,
      y21 = y2 - y1,
      r21 = r2 - r1,
      l = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x1 + x2 + x21 / l * r21) / 2,
    y: (y1 + y2 + y21 / l * r21) / 2,
    r: (l + r1 + r2) / 2
  };
}

function encloseBasis3(a, b, c) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x3 = c.x,
      y3 = c.y,
      r3 = c.r,
      a2 = x1 - x2,
      a3 = x1 - x3,
      b2 = y1 - y2,
      b3 = y1 - y3,
      c2 = r2 - r1,
      c3 = r3 - r1,
      d1 = x1 * x1 + y1 * y1 - r1 * r1,
      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
      ab = a3 * b2 - a2 * b3,
      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
      xb = (b3 * c2 - b2 * c3) / ab,
      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
      yb = (a2 * c3 - a3 * c2) / ab,
      A = xb * xb + yb * yb - 1,
      B = 2 * (r1 + xa * xb + ya * yb),
      C = xa * xa + ya * ya - r1 * r1,
      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
  return {
    x: x1 + xa + xb * r,
    y: y1 + ya + yb * r,
    r: r
  };
}

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/pack/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/index.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _siblings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./siblings */ "./node_modules/d3-hierarchy/src/pack/siblings.js");
/* harmony import */ var _accessors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../accessors */ "./node_modules/d3-hierarchy/src/accessors.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant */ "./node_modules/d3-hierarchy/src/constant.js");




function defaultRadius(d) {
  return Math.sqrt(d.value);
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var radius = null,
      dx = 1,
      dy = 1,
      padding = _constant__WEBPACK_IMPORTED_MODULE_2__["constantZero"];

  function pack(root) {
    root.x = dx / 2, root.y = dy / 2;

    if (radius) {
      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));
    } else {
      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(_constant__WEBPACK_IMPORTED_MODULE_2__["constantZero"], 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
    }

    return root;
  }

  pack.radius = function (x) {
    return arguments.length ? (radius = Object(_accessors__WEBPACK_IMPORTED_MODULE_1__["optional"])(x), pack) : radius;
  };

  pack.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
  };

  pack.padding = function (x) {
    return arguments.length ? (padding = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(+x), pack) : padding;
  };

  return pack;
});

function radiusLeaf(radius) {
  return function (node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}

function packChildren(padding, k) {
  return function (node) {
    if (children = node.children) {
      var children,
          i,
          n = children.length,
          r = padding(node) * k || 0,
          e;
      if (r) for (i = 0; i < n; ++i) {
        children[i].r += r;
      }
      e = Object(_siblings__WEBPACK_IMPORTED_MODULE_0__["packEnclose"])(children);
      if (r) for (i = 0; i < n; ++i) {
        children[i].r -= r;
      }
      node.r = e + r;
    }
  };
}

function translateChild(k) {
  return function (node) {
    var parent = node.parent;
    node.r *= k;

    if (parent) {
      node.x = parent.x + k * node.x;
      node.y = parent.y + k * node.y;
    }
  };
}

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/pack/siblings.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/siblings.js ***!
  \********************************************************/
/*! exports provided: packEnclose, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "packEnclose", function() { return packEnclose; });
/* harmony import */ var _enclose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enclose */ "./node_modules/d3-hierarchy/src/pack/enclose.js");


function place(b, a, c) {
  var dx = b.x - a.x,
      x,
      a2,
      dy = b.y - a.y,
      y,
      b2,
      d2 = dx * dx + dy * dy;

  if (d2) {
    a2 = a.r + c.r, a2 *= a2;
    b2 = b.r + c.r, b2 *= b2;

    if (a2 > b2) {
      x = (d2 + b2 - a2) / (2 * d2);
      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
      c.x = b.x - x * dx - y * dy;
      c.y = b.y - x * dy + y * dx;
    } else {
      x = (d2 + a2 - b2) / (2 * d2);
      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
      c.x = a.x + x * dx - y * dy;
      c.y = a.y + x * dy + y * dx;
    }
  } else {
    c.x = a.x + c.r;
    c.y = a.y;
  }
}

function intersects(a, b) {
  var dr = a.r + b.r - 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function score(node) {
  var a = node._,
      b = node.next._,
      ab = a.r + b.r,
      dx = (a.x * b.r + b.x * a.r) / ab,
      dy = (a.y * b.r + b.y * a.r) / ab;
  return dx * dx + dy * dy;
}

function Node(circle) {
  this._ = circle;
  this.next = null;
  this.previous = null;
}

function packEnclose(circles) {
  if (!(n = circles.length)) return 0;
  var a, b, c, n, aa, ca, i, j, k, sj, sk; // Place the first circle.

  a = circles[0], a.x = 0, a.y = 0;
  if (!(n > 1)) return a.r; // Place the second circle.

  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
  if (!(n > 2)) return a.r + b.r; // Place the third circle.

  place(b, a, c = circles[2]); // Initialize the front-chain using the first three circles a, b and c.

  a = new Node(a), b = new Node(b), c = new Node(c);
  a.next = c.previous = b;
  b.next = a.previous = c;
  c.next = b.previous = a; // Attempt to place each remaining circle…

  pack: for (i = 3; i < n; ++i) {
    place(a._, b._, c = circles[i]), c = new Node(c); // Find the closest intersecting circle on the front-chain, if any.
    // “Closeness” is determined by linear distance along the front-chain.
    // “Ahead” or “behind” is likewise determined by linear distance.

    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;

    do {
      if (sj <= sk) {
        if (intersects(j._, c._)) {
          b = j, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sj += j._.r, j = j.next;
      } else {
        if (intersects(k._, c._)) {
          a = k, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sk += k._.r, k = k.previous;
      }
    } while (j !== k.next); // Success! Insert the new circle c between a and b.


    c.previous = a, c.next = b, a.next = b.previous = b = c; // Compute the new closest circle pair to the centroid.

    aa = score(a);

    while ((c = c.next) !== b) {
      if ((ca = score(c)) < aa) {
        a = c, aa = ca;
      }
    }

    b = a.next;
  } // Compute the enclosing circle of the front chain.


  a = [b._], c = b;

  while ((c = c.next) !== b) {
    a.push(c._);
  }

  c = Object(_enclose__WEBPACK_IMPORTED_MODULE_0__["default"])(a); // Translate the circles to put the enclosing circle around the origin.

  for (i = 0; i < n; ++i) {
    a = circles[i], a.x -= c.x, a.y -= c.y;
  }

  return c.r;
}
/* harmony default export */ __webpack_exports__["default"] = (function (circles) {
  packEnclose(circles);
  return circles;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/partition.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/partition.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _treemap_round__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./treemap/round */ "./node_modules/d3-hierarchy/src/treemap/round.js");
/* harmony import */ var _treemap_dice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./treemap/dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");


/* harmony default export */ __webpack_exports__["default"] = (function () {
  var dx = 1,
      dy = 1,
      padding = 0,
      round = false;

  function partition(root) {
    var n = root.height + 1;
    root.x0 = root.y0 = padding;
    root.x1 = dx;
    root.y1 = dy / n;
    root.eachBefore(positionNode(dy, n));
    if (round) root.eachBefore(_treemap_round__WEBPACK_IMPORTED_MODULE_0__["default"]);
    return root;
  }

  function positionNode(dy, n) {
    return function (node) {
      if (node.children) {
        Object(_treemap_dice__WEBPACK_IMPORTED_MODULE_1__["default"])(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
      }

      var x0 = node.x0,
          y0 = node.y0,
          x1 = node.x1 - padding,
          y1 = node.y1 - padding;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      node.x0 = x0;
      node.y0 = y0;
      node.x1 = x1;
      node.y1 = y1;
    };
  }

  partition.round = function (x) {
    return arguments.length ? (round = !!x, partition) : round;
  };

  partition.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
  };

  partition.padding = function (x) {
    return arguments.length ? (padding = +x, partition) : padding;
  };

  return partition;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/stratify.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/stratify.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _accessors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessors */ "./node_modules/d3-hierarchy/src/accessors.js");
/* harmony import */ var _hierarchy_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hierarchy/index */ "./node_modules/d3-hierarchy/src/hierarchy/index.js");


var keyPrefix = "$",
    // Protect against keys like “__proto__”.
preroot = {
  depth: -1
},
    ambiguous = {};

function defaultId(d) {
  return d.id;
}

function defaultParentId(d) {
  return d.parentId;
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var id = defaultId,
      parentId = defaultParentId;

  function stratify(data) {
    var d,
        i,
        n = data.length,
        root,
        parent,
        node,
        nodes = new Array(n),
        nodeId,
        nodeKey,
        nodeByKey = {};

    for (i = 0; i < n; ++i) {
      d = data[i], node = nodes[i] = new _hierarchy_index__WEBPACK_IMPORTED_MODULE_1__["Node"](d);

      if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
        nodeKey = keyPrefix + (node.id = nodeId);
        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;
      }
    }

    for (i = 0; i < n; ++i) {
      node = nodes[i], nodeId = parentId(data[i], i, data);

      if (nodeId == null || !(nodeId += "")) {
        if (root) throw new Error("multiple roots");
        root = node;
      } else {
        parent = nodeByKey[keyPrefix + nodeId];
        if (!parent) throw new Error("missing: " + nodeId);
        if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
        if (parent.children) parent.children.push(node);else parent.children = [node];
        node.parent = parent;
      }
    }

    if (!root) throw new Error("no root");
    root.parent = preroot;
    root.eachBefore(function (node) {
      node.depth = node.parent.depth + 1;
      --n;
    }).eachBefore(_hierarchy_index__WEBPACK_IMPORTED_MODULE_1__["computeHeight"]);
    root.parent = null;
    if (n > 0) throw new Error("cycle");
    return root;
  }

  stratify.id = function (x) {
    return arguments.length ? (id = Object(_accessors__WEBPACK_IMPORTED_MODULE_0__["required"])(x), stratify) : id;
  };

  stratify.parentId = function (x) {
    return arguments.length ? (parentId = Object(_accessors__WEBPACK_IMPORTED_MODULE_0__["required"])(x), stratify) : parentId;
  };

  return stratify;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/tree.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-hierarchy/src/tree.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _hierarchy_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hierarchy/index */ "./node_modules/d3-hierarchy/src/hierarchy/index.js");


function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
} // function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }
// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.


function nextLeft(v) {
  var children = v.children;
  return children ? children[0] : v.t;
} // This function works analogously to nextLeft.


function nextRight(v) {
  var children = v.children;
  return children ? children[children.length - 1] : v.t;
} // Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.


function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
} // All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).


function executeShifts(v) {
  var shift = 0,
      change = 0,
      children = v.children,
      i = children.length,
      w;

  while (--i >= 0) {
    w = children[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
} // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.


function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}

function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null; // default ancestor

  this.a = this; // ancestor

  this.z = 0; // prelim

  this.m = 0; // mod

  this.c = 0; // change

  this.s = 0; // shift

  this.t = null; // thread

  this.i = i; // number
}

TreeNode.prototype = Object.create(_hierarchy_index__WEBPACK_IMPORTED_MODULE_0__["Node"].prototype);

function treeRoot(root) {
  var tree = new TreeNode(root, 0),
      node,
      nodes = [tree],
      child,
      children,
      i,
      n;

  while (node = nodes.pop()) {
    if (children = node._.children) {
      node.children = new Array(n = children.length);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children[i], i));
        child.parent = node;
      }
    }
  }

  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
} // Node-link tree diagram using the Reingold-Tilford "tidy" algorithm


/* harmony default export */ __webpack_exports__["default"] = (function () {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = null;

  function tree(root) {
    var t = treeRoot(root); // Compute the layout using Buchheim et al.’s algorithm.

    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk); // If a fixed node size is specified, scale x and y.

    if (nodeSize) root.eachBefore(sizeNode); // If a fixed tree size is specified, scale x and y based on the extent.
    // Compute the left-most, right-most, and depth-most nodes for extents.
    else {
        var left = root,
            right = root,
            bottom = root;
        root.eachBefore(function (node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var s = left === right ? 1 : separation(left, right) / 2,
            tx = s - left.x,
            kx = dx / (right.x + s + tx),
            ky = dy / (bottom.depth || 1);
        root.eachBefore(function (node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
    return root;
  } // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
  // applied recursively to the children of v, as well as the function
  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
  // node v is placed to the midpoint of its outermost children.


  function firstWalk(v) {
    var children = v.children,
        siblings = v.parent.children,
        w = v.i ? siblings[v.i - 1] : null;

    if (children) {
      executeShifts(v);
      var midpoint = (children[0].z + children[children.length - 1].z) / 2;

      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }

    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  } // Computes all real x-coordinates by summing up the modifiers recursively.


  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  } // The core of the algorithm. Here, a new subtree is combined with the
  // previous subtrees. Threads are used to traverse the inside and outside
  // contours of the left and right subtree up to the highest common level. The
  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
  // superscript o means outside and i means inside, the subscript - means left
  // subtree and + means right subtree. For summing up the modifiers along the
  // contour, we use respective variables si+, si-, so-, and so+. Whenever two
  // nodes of the inside contours conflict, we compute the left one of the
  // greatest uncommon ancestors using the function ANCESTOR and call MOVE
  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
  // Finally, we add a new thread (if necessary).


  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v,
          vop = v,
          vim = w,
          vom = vip.parent.children[0],
          sip = vip.m,
          sop = vop.m,
          sim = vim.m,
          som = vom.m,
          shift;

      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);

        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }

        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }

      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }

      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }

    return ancestor;
  }

  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }

  tree.separation = function (x) {
    return arguments.length ? (separation = x, tree) : separation;
  };

  tree.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];
  };

  tree.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;
  };

  return tree;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/binary.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/binary.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      i,
      n = nodes.length,
      sum,
      sums = new Array(n + 1);

  for (sums[0] = sum = i = 0; i < n; ++i) {
    sums[i + 1] = sum += nodes[i].value;
  }

  partition(0, n, parent.value, x0, y0, x1, y1);

  function partition(i, j, value, x0, y0, x1, y1) {
    if (i >= j - 1) {
      var node = nodes[i];
      node.x0 = x0, node.y0 = y0;
      node.x1 = x1, node.y1 = y1;
      return;
    }

    var valueOffset = sums[i],
        valueTarget = value / 2 + valueOffset,
        k = i + 1,
        hi = j - 1;

    while (k < hi) {
      var mid = k + hi >>> 1;
      if (sums[mid] < valueTarget) k = mid + 1;else hi = mid;
    }

    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) --k;
    var valueLeft = sums[k] - valueOffset,
        valueRight = value - valueLeft;

    if (x1 - x0 > y1 - y0) {
      var xk = (x0 * valueRight + x1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, xk, y1);
      partition(k, j, valueRight, xk, y0, x1, y1);
    } else {
      var yk = (y0 * valueRight + y1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, x1, yk);
      partition(k, j, valueRight, x0, yk, x1, y1);
    }
  }
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/dice.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/dice.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (x1 - x0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k;
  }
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/index.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/index.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _round__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./round */ "./node_modules/d3-hierarchy/src/treemap/round.js");
/* harmony import */ var _squarify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./squarify */ "./node_modules/d3-hierarchy/src/treemap/squarify.js");
/* harmony import */ var _accessors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../accessors */ "./node_modules/d3-hierarchy/src/accessors.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constant */ "./node_modules/d3-hierarchy/src/constant.js");




/* harmony default export */ __webpack_exports__["default"] = (function () {
  var tile = _squarify__WEBPACK_IMPORTED_MODULE_1__["default"],
      round = false,
      dx = 1,
      dy = 1,
      paddingStack = [0],
      paddingInner = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"],
      paddingTop = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"],
      paddingRight = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"],
      paddingBottom = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"],
      paddingLeft = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"];

  function treemap(root) {
    root.x0 = root.y0 = 0;
    root.x1 = dx;
    root.y1 = dy;
    root.eachBefore(positionNode);
    paddingStack = [0];
    if (round) root.eachBefore(_round__WEBPACK_IMPORTED_MODULE_0__["default"]);
    return root;
  }

  function positionNode(node) {
    var p = paddingStack[node.depth],
        x0 = node.x0 + p,
        y0 = node.y0 + p,
        x1 = node.x1 - p,
        y1 = node.y1 - p;
    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
    node.x0 = x0;
    node.y0 = y0;
    node.x1 = x1;
    node.y1 = y1;

    if (node.children) {
      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x0 += paddingLeft(node) - p;
      y0 += paddingTop(node) - p;
      x1 -= paddingRight(node) - p;
      y1 -= paddingBottom(node) - p;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      tile(node, x0, y0, x1, y1);
    }
  }

  treemap.round = function (x) {
    return arguments.length ? (round = !!x, treemap) : round;
  };

  treemap.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
  };

  treemap.tile = function (x) {
    return arguments.length ? (tile = Object(_accessors__WEBPACK_IMPORTED_MODULE_2__["required"])(x), treemap) : tile;
  };

  treemap.padding = function (x) {
    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
  };

  treemap.paddingInner = function (x) {
    return arguments.length ? (paddingInner = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingInner;
  };

  treemap.paddingOuter = function (x) {
    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
  };

  treemap.paddingTop = function (x) {
    return arguments.length ? (paddingTop = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingTop;
  };

  treemap.paddingRight = function (x) {
    return arguments.length ? (paddingRight = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingRight;
  };

  treemap.paddingBottom = function (x) {
    return arguments.length ? (paddingBottom = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingBottom;
  };

  treemap.paddingLeft = function (x) {
    return arguments.length ? (paddingLeft = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingLeft;
  };

  return treemap;
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/resquarify.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/resquarify.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slice */ "./node_modules/d3-hierarchy/src/treemap/slice.js");
/* harmony import */ var _squarify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./squarify */ "./node_modules/d3-hierarchy/src/treemap/squarify.js");



/* harmony default export */ __webpack_exports__["default"] = ((function custom(ratio) {
  function resquarify(parent, x0, y0, x1, y1) {
    if ((rows = parent._squarify) && rows.ratio === ratio) {
      var rows,
          row,
          nodes,
          i,
          j = -1,
          n,
          m = rows.length,
          value = parent.value;

      while (++j < m) {
        row = rows[j], nodes = row.children;

        for (i = row.value = 0, n = nodes.length; i < n; ++i) {
          row.value += nodes[i].value;
        }

        if (row.dice) Object(_dice__WEBPACK_IMPORTED_MODULE_0__["default"])(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);else Object(_slice__WEBPACK_IMPORTED_MODULE_1__["default"])(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
        value -= row.value;
      }
    } else {
      parent._squarify = rows = Object(_squarify__WEBPACK_IMPORTED_MODULE_2__["squarifyRatio"])(ratio, parent, x0, y0, x1, y1);
      rows.ratio = ratio;
    }
  }

  resquarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return resquarify;
})(_squarify__WEBPACK_IMPORTED_MODULE_2__["phi"]));

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/round.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/round.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/slice.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/slice.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (y1 - y0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k;
  }
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/sliceDice.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/sliceDice.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slice */ "./node_modules/d3-hierarchy/src/treemap/slice.js");


/* harmony default export */ __webpack_exports__["default"] = (function (parent, x0, y0, x1, y1) {
  (parent.depth & 1 ? _slice__WEBPACK_IMPORTED_MODULE_1__["default"] : _dice__WEBPACK_IMPORTED_MODULE_0__["default"])(parent, x0, y0, x1, y1);
});

/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/squarify.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/squarify.js ***!
  \***********************************************************/
/*! exports provided: phi, squarifyRatio, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "phi", function() { return phi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squarifyRatio", function() { return squarifyRatio; });
/* harmony import */ var _dice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slice */ "./node_modules/d3-hierarchy/src/treemap/slice.js");


var phi = (1 + Math.sqrt(5)) / 2;
function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
  var rows = [],
      nodes = parent.children,
      row,
      nodeValue,
      i0 = 0,
      i1 = 0,
      n = nodes.length,
      dx,
      dy,
      value = parent.value,
      sumValue,
      minValue,
      maxValue,
      newRatio,
      minRatio,
      alpha,
      beta;

  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0; // Find the next non-empty node.

    do {
      sumValue = nodes[i1++].value;
    } while (!sumValue && i1 < n);

    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue); // Keep adding nodes while the aspect ratio maintains or improves.

    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue) minValue = nodeValue;
      if (nodeValue > maxValue) maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);

      if (newRatio > minRatio) {
        sumValue -= nodeValue;
        break;
      }

      minRatio = newRatio;
    } // Position and record the row orientation.


    rows.push(row = {
      value: sumValue,
      dice: dx < dy,
      children: nodes.slice(i0, i1)
    });
    if (row.dice) Object(_dice__WEBPACK_IMPORTED_MODULE_0__["default"])(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else Object(_slice__WEBPACK_IMPORTED_MODULE_1__["default"])(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
    value -= sumValue, i0 = i1;
  }

  return rows;
}
/* harmony default export */ __webpack_exports__["default"] = ((function custom(ratio) {
  function squarify(parent, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent, x0, y0, x1, y1);
  }

  squarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return squarify;
})(phi));

/***/ }),

/***/ "./node_modules/d3-interpolate/src/array.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/array.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value */ "./node_modules/d3-interpolate/src/value.js");

/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) {
    x[i] = Object(_value__WEBPACK_IMPORTED_MODULE_0__["default"])(a[i], b[i]);
  }

  for (; i < nb; ++i) {
    c[i] = b[i];
  }

  return function (t) {
    for (i = 0; i < na; ++i) {
      c[i] = x[i](t);
    }

    return c;
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/basis.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/basis.js ***!
  \**************************************************/
/*! exports provided: basis, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "basis", function() { return basis; });
function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1,
      t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
}
/* harmony default export */ __webpack_exports__["default"] = (function (values) {
  var n = values.length - 1;
  return function (t) {
    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/basisClosed.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-interpolate/src/basisClosed.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-interpolate/src/basis.js");

/* harmony default export */ __webpack_exports__["default"] = (function (values) {
  var n = values.length;
  return function (t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return Object(_basis__WEBPACK_IMPORTED_MODULE_0__["basis"])((t - i / n) * n, v0, v1, v2, v3);
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/color.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/color.js ***!
  \**************************************************/
/*! exports provided: hue, gamma, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hue", function() { return hue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gamma", function() { return gamma; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return nogamma; });
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-interpolate/src/constant.js");


function linear(a, d) {
  return function (t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
}
function gamma(y) {
  return (y = +y) === 1 ? nogamma : function (a, b) {
    return b - a ? exponential(a, b, y) : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
  };
}
function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
}

/***/ }),

/***/ "./node_modules/d3-interpolate/src/constant.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/constant.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/cubehelix.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-interpolate/src/cubehelix.js ***!
  \******************************************************/
/*! exports provided: default, cubehelixLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubehelixLong", function() { return cubehelixLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");



function cubehelix(hue) {
  return function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(end)).h),
          s = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.s, end.s),
          l = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
          opacity = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
      return function (t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;
    return cubehelix;
  }(1);
}

/* harmony default export */ __webpack_exports__["default"] = (cubehelix(_color__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var cubehelixLong = cubehelix(_color__WEBPACK_IMPORTED_MODULE_1__["default"]);

/***/ }),

/***/ "./node_modules/d3-interpolate/src/date.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-interpolate/src/date.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var d = new Date();
  return a = +a, b -= a, function (t) {
    return d.setTime(a + b * t), d;
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/discrete.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/discrete.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/hcl.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hcl.js ***!
  \************************************************/
/*! exports provided: default, hclLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hclLong", function() { return hclLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");



function hcl(hue) {
  return function (start, end) {
    var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hcl"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hcl"])(end)).h),
        c = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.c, end.c),
        l = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
        opacity = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

/* harmony default export */ __webpack_exports__["default"] = (hcl(_color__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var hclLong = hcl(_color__WEBPACK_IMPORTED_MODULE_1__["default"]);

/***/ }),

/***/ "./node_modules/d3-interpolate/src/hsl.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hsl.js ***!
  \************************************************/
/*! exports provided: default, hslLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hslLong", function() { return hslLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");



function hsl(hue) {
  return function (start, end) {
    var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hsl"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hsl"])(end)).h),
        s = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.s, end.s),
        l = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
        opacity = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

/* harmony default export */ __webpack_exports__["default"] = (hsl(_color__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var hslLong = hsl(_color__WEBPACK_IMPORTED_MODULE_1__["default"]);

/***/ }),

/***/ "./node_modules/d3-interpolate/src/hue.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hue.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");

/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var i = Object(_color__WEBPACK_IMPORTED_MODULE_0__["hue"])(+a, +b);
  return function (t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/index.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/index.js ***!
  \**************************************************/
/*! exports provided: interpolate, interpolateArray, interpolateBasis, interpolateBasisClosed, interpolateDate, interpolateDiscrete, interpolateHue, interpolateNumber, interpolateObject, interpolateRound, interpolateString, interpolateTransformCss, interpolateTransformSvg, interpolateZoom, interpolateRgb, interpolateRgbBasis, interpolateRgbBasisClosed, interpolateHsl, interpolateHslLong, interpolateLab, interpolateHcl, interpolateHclLong, interpolateCubehelix, interpolateCubehelixLong, piecewise, quantize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value */ "./node_modules/d3-interpolate/src/value.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return _value__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-interpolate/src/array.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateArray", function() { return _array__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-interpolate/src/basis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasis", function() { return _basis__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _basisClosed__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./basisClosed */ "./node_modules/d3-interpolate/src/basisClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasisClosed", function() { return _basisClosed__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./date */ "./node_modules/d3-interpolate/src/date.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDate", function() { return _date__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _discrete__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./discrete */ "./node_modules/d3-interpolate/src/discrete.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDiscrete", function() { return _discrete__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _hue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hue */ "./node_modules/d3-interpolate/src/hue.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHue", function() { return _hue__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./number */ "./node_modules/d3-interpolate/src/number.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateNumber", function() { return _number__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _object__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./object */ "./node_modules/d3-interpolate/src/object.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateObject", function() { return _object__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _round__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./round */ "./node_modules/d3-interpolate/src/round.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRound", function() { return _round__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./string */ "./node_modules/d3-interpolate/src/string.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateString", function() { return _string__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _transform_index__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./transform/index */ "./node_modules/d3-interpolate/src/transform/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformCss", function() { return _transform_index__WEBPACK_IMPORTED_MODULE_11__["interpolateTransformCss"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformSvg", function() { return _transform_index__WEBPACK_IMPORTED_MODULE_11__["interpolateTransformSvg"]; });

/* harmony import */ var _zoom__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./zoom */ "./node_modules/d3-interpolate/src/zoom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateZoom", function() { return _zoom__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _rgb__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./rgb */ "./node_modules/d3-interpolate/src/rgb.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgb", function() { return _rgb__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasis", function() { return _rgb__WEBPACK_IMPORTED_MODULE_13__["rgbBasis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasisClosed", function() { return _rgb__WEBPACK_IMPORTED_MODULE_13__["rgbBasisClosed"]; });

/* harmony import */ var _hsl__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./hsl */ "./node_modules/d3-interpolate/src/hsl.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHsl", function() { return _hsl__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHslLong", function() { return _hsl__WEBPACK_IMPORTED_MODULE_14__["hslLong"]; });

/* harmony import */ var _lab__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./lab */ "./node_modules/d3-interpolate/src/lab.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateLab", function() { return _lab__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _hcl__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./hcl */ "./node_modules/d3-interpolate/src/hcl.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHcl", function() { return _hcl__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHclLong", function() { return _hcl__WEBPACK_IMPORTED_MODULE_16__["hclLong"]; });

/* harmony import */ var _cubehelix__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./cubehelix */ "./node_modules/d3-interpolate/src/cubehelix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelix", function() { return _cubehelix__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelixLong", function() { return _cubehelix__WEBPACK_IMPORTED_MODULE_17__["cubehelixLong"]; });

/* harmony import */ var _piecewise__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./piecewise */ "./node_modules/d3-interpolate/src/piecewise.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "piecewise", function() { return _piecewise__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _quantize__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./quantize */ "./node_modules/d3-interpolate/src/quantize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantize", function() { return _quantize__WEBPACK_IMPORTED_MODULE_19__["default"]; });






















/***/ }),

/***/ "./node_modules/d3-interpolate/src/lab.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/lab.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lab; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");


function lab(start, end) {
  var l = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["lab"])(start)).l, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["lab"])(end)).l),
      a = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.a, end.a),
      b = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.b, end.b),
      opacity = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
  return function (t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}

/***/ }),

/***/ "./node_modules/d3-interpolate/src/number.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/number.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return a = +a, b -= a, function (t) {
    return a + b * t;
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/object.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/object.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value */ "./node_modules/d3-interpolate/src/value.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }


/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var i = {},
      c = {},
      k;
  if (a === null || _typeof(a) !== "object") a = {};
  if (b === null || _typeof(b) !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = Object(_value__WEBPACK_IMPORTED_MODULE_0__["default"])(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function (t) {
    for (k in i) {
      c[k] = i[k](t);
    }

    return c;
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/piecewise.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-interpolate/src/piecewise.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return piecewise; });
function piecewise(interpolate, values) {
  var i = 0,
      n = values.length - 1,
      v = values[0],
      I = new Array(n < 0 ? 0 : n);

  while (i < n) {
    I[i] = interpolate(v, v = values[++i]);
  }

  return function (t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}

/***/ }),

/***/ "./node_modules/d3-interpolate/src/quantize.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/quantize.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (interpolator, n) {
  var samples = new Array(n);

  for (var i = 0; i < n; ++i) {
    samples[i] = interpolator(i / (n - 1));
  }

  return samples;
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/rgb.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/rgb.js ***!
  \************************************************/
/*! exports provided: default, rgbBasis, rgbBasisClosed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbBasis", function() { return rgbBasis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbBasisClosed", function() { return rgbBasisClosed; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-interpolate/src/basis.js");
/* harmony import */ var _basisClosed__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basisClosed */ "./node_modules/d3-interpolate/src/basisClosed.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");




/* harmony default export */ __webpack_exports__["default"] = ((function rgbGamma(y) {
  var color = Object(_color__WEBPACK_IMPORTED_MODULE_3__["gamma"])(y);

  function rgb(start, end) {
    var r = color((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(start)).r, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = Object(_color__WEBPACK_IMPORTED_MODULE_3__["default"])(start.opacity, end.opacity);
    return function (t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;
  return rgb;
})(1));

function rgbSpline(spline) {
  return function (colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i,
        color;

    for (i = 0; i < n; ++i) {
      color = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }

    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function (t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(_basis__WEBPACK_IMPORTED_MODULE_1__["default"]);
var rgbBasisClosed = rgbSpline(_basisClosed__WEBPACK_IMPORTED_MODULE_2__["default"]);

/***/ }),

/***/ "./node_modules/d3-interpolate/src/round.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/round.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return a = +a, b -= a, function (t) {
    return Math.round(a + b * t);
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/string.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/string.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-interpolate/src/number.js");

var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function () {
    return b;
  };
}

function one(b) {
  return function (t) {
    return b(t) + "";
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0,
      // scan index for next number in b
  am,
      // current match in a
  bm,
      // current match in b
  bs,
      // string preceding current number in b, if any
  i = -1,
      // index in s
  s = [],
      // string constants and placeholders
  q = []; // number interpolators
  // Coerce inputs to strings.

  a = a + "", b = b + ""; // Interpolate pairs of numbers in a & b.

  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }

    if ((am = am[0]) === (bm = bm[0])) {
      // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else {
      // interpolate non-matching numbers
      s[++i] = null;
      q.push({
        i: i,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(am, bm)
      });
    }

    bi = reB.lastIndex;
  } // Add remains of b.


  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  } // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.


  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {
    for (var i = 0, o; i < b; ++i) {
      s[(o = q[i]).i] = o.x(t);
    }

    return s.join("");
  });
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/decompose.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/decompose.js ***!
  \****************************************************************/
/*! exports provided: identity, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
var degrees = 180 / Math.PI;
var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
/* harmony default export */ __webpack_exports__["default"] = (function (a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/index.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/index.js ***!
  \************************************************************/
/*! exports provided: interpolateTransformCss, interpolateTransformSvg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformCss", function() { return interpolateTransformCss; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformSvg", function() { return interpolateTransformSvg; });
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../number */ "./node_modules/d3-interpolate/src/number.js");
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse */ "./node_modules/d3-interpolate/src/transform/parse.js");



function interpolateTransform(parse, pxComma, pxParen, degParen) {
  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({
        i: i - 4,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(xa, xb)
      }, {
        i: i - 2,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(ya, yb)
      });
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path

      q.push({
        i: s.push(pop(s) + "rotate(", null, degParen) - 2,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({
        i: s.push(pop(s) + "skewX(", null, degParen) - 2,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({
        i: i - 4,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(xa, xb)
      }, {
        i: i - 2,
        x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(ya, yb)
      });
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function (a, b) {
    var s = [],
        // string constants and placeholders
    q = []; // number interpolators

    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc

    return function (t) {
      var i = -1,
          n = q.length,
          o;

      while (++i < n) {
        s[(o = q[i]).i] = o.x(t);
      }

      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(_parse__WEBPACK_IMPORTED_MODULE_1__["parseCss"], "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(_parse__WEBPACK_IMPORTED_MODULE_1__["parseSvg"], ", ", ")", ")");

/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/parse.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/parse.js ***!
  \************************************************************/
/*! exports provided: parseCss, parseSvg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseCss", function() { return parseCss; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseSvg", function() { return parseSvg; });
/* harmony import */ var _decompose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decompose */ "./node_modules/d3-interpolate/src/transform/decompose.js");

var cssNode, cssRoot, cssView, svgNode;
function parseCss(value) {
  if (value === "none") return _decompose__WEBPACK_IMPORTED_MODULE_0__["identity"];
  if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
  cssNode.style.transform = value;
  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
  cssRoot.removeChild(cssNode);
  value = value.slice(7, -1).split(",");
  return Object(_decompose__WEBPACK_IMPORTED_MODULE_0__["default"])(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
}
function parseSvg(value) {
  if (value == null) return _decompose__WEBPACK_IMPORTED_MODULE_0__["identity"];
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose__WEBPACK_IMPORTED_MODULE_0__["identity"];
  value = value.matrix;
  return Object(_decompose__WEBPACK_IMPORTED_MODULE_0__["default"])(value.a, value.b, value.c, value.d, value.e, value.f);
}

/***/ }),

/***/ "./node_modules/d3-interpolate/src/value.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/value.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _rgb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rgb */ "./node_modules/d3-interpolate/src/rgb.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array */ "./node_modules/d3-interpolate/src/array.js");
/* harmony import */ var _date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./date */ "./node_modules/d3-interpolate/src/date.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number */ "./node_modules/d3-interpolate/src/number.js");
/* harmony import */ var _object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./object */ "./node_modules/d3-interpolate/src/object.js");
/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./string */ "./node_modules/d3-interpolate/src/string.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-interpolate/src/constant.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }









/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var t = _typeof(b),
      c;

  return b == null || t === "boolean" ? Object(_constant__WEBPACK_IMPORTED_MODULE_7__["default"])(b) : (t === "number" ? _number__WEBPACK_IMPORTED_MODULE_4__["default"] : t === "string" ? (c = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["color"])(b)) ? (b = c, _rgb__WEBPACK_IMPORTED_MODULE_1__["default"]) : _string__WEBPACK_IMPORTED_MODULE_6__["default"] : b instanceof d3_color__WEBPACK_IMPORTED_MODULE_0__["color"] ? _rgb__WEBPACK_IMPORTED_MODULE_1__["default"] : b instanceof Date ? _date__WEBPACK_IMPORTED_MODULE_3__["default"] : Array.isArray(b) ? _array__WEBPACK_IMPORTED_MODULE_2__["default"] : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object__WEBPACK_IMPORTED_MODULE_5__["default"] : _number__WEBPACK_IMPORTED_MODULE_4__["default"])(a, b);
});

/***/ }),

/***/ "./node_modules/d3-interpolate/src/zoom.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-interpolate/src/zoom.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var rho = Math.SQRT2,
    rho2 = 2,
    rho4 = 4,
    epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
} // p0 = [ux0, uy0, w0]
// p1 = [ux1, uy1, w1]


/* harmony default export */ __webpack_exports__["default"] = (function (p0, p1) {
  var ux0 = p0[0],
      uy0 = p0[1],
      w0 = p0[2],
      ux1 = p1[0],
      uy1 = p1[1],
      w1 = p1[2],
      dx = ux1 - ux0,
      dy = uy1 - uy0,
      d2 = dx * dx + dy * dy,
      i,
      S; // Special case for u0 ≅ u1.

  if (d2 < epsilon2) {
    S = Math.log(w1 / w0) / rho;

    i = function i(t) {
      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];
    };
  } // General case.
  else {
      var d1 = Math.sqrt(d2),
          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / rho;

      i = function i(t) {
        var s = t * S,
            coshr0 = cosh(r0),
            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];
      };
    }

  i.duration = S * 1000;
  return i;
});

/***/ }),

/***/ "./node_modules/d3-path/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-path/src/index.js ***!
  \*******************************************/
/*! exports provided: path */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path */ "./node_modules/d3-path/src/path.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "path", function() { return _path__WEBPACK_IMPORTED_MODULE_0__["default"]; });



/***/ }),

/***/ "./node_modules/d3-path/src/path.js":
/*!******************************************!*\
  !*** ./node_modules/d3-path/src/path.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var pi = Math.PI,
    tau = 2 * pi,
    epsilon = 1e-6,
    tauEpsilon = tau - epsilon;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath

  this._ = "";
}

function path() {
  return new Path();
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function moveTo(x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function closePath() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function lineTo(x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function arcTo(x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x1,y1).

    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
      // Equivalently, is (x1,y1) coincident with (x2,y2)?
      // Or, is the radius zero? Line to (x1,y1).
      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
          this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        } // Otherwise, draw an arc!
        else {
            var x20 = x2 - x0,
                y20 = y2 - y0,
                l21_2 = x21 * x21 + y21 * y21,
                l20_2 = x20 * x20 + y20 * y20,
                l21 = Math.sqrt(l21_2),
                l01 = Math.sqrt(l01_2),
                l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
                t01 = l / l01,
                t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.

            if (Math.abs(t01 - 1) > epsilon) {
              this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
            }

            this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
          }
  },
  arc: function arc(x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x0,y0).

    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
        this._ += "L" + x0 + "," + y0;
      } // Is this arc empty? We’re done.


    if (!r) return; // Does the angle go the wrong way? Flip the direction.

    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.

    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } // Is this arc non-empty? Draw an arc!
    else if (da > epsilon) {
        this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
      }
  },
  rect: function rect(x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function toString() {
    return this._;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (path);

/***/ }),

/***/ "./node_modules/d3-polygon/src/area.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-polygon/src/area.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (polygon) {
  var i = -1,
      n = polygon.length,
      a,
      b = polygon[n - 1],
      area = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    area += a[1] * b[0] - a[0] * b[1];
  }

  return area / 2;
});

/***/ }),

/***/ "./node_modules/d3-polygon/src/centroid.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-polygon/src/centroid.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (polygon) {
  var i = -1,
      n = polygon.length,
      x = 0,
      y = 0,
      a,
      b = polygon[n - 1],
      c,
      k = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    k += c = a[0] * b[1] - b[0] * a[1];
    x += (a[0] + b[0]) * c;
    y += (a[1] + b[1]) * c;
  }

  return k *= 3, [x / k, y / k];
});

/***/ }),

/***/ "./node_modules/d3-polygon/src/contains.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-polygon/src/contains.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (polygon, point) {
  var n = polygon.length,
      p = polygon[n - 1],
      x = point[0],
      y = point[1],
      x0 = p[0],
      y0 = p[1],
      x1,
      y1,
      inside = false;

  for (var i = 0; i < n; ++i) {
    p = polygon[i], x1 = p[0], y1 = p[1];
    if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1) inside = !inside;
    x0 = x1, y0 = y1;
  }

  return inside;
});

/***/ }),

/***/ "./node_modules/d3-polygon/src/cross.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-polygon/src/cross.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of
// the 3D cross product in a quadrant I Cartesian coordinate system (+x is
// right, +y is up). Returns a positive value if ABC is counter-clockwise,
// negative if clockwise, and zero if the points are collinear.
/* harmony default export */ __webpack_exports__["default"] = (function (a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
});

/***/ }),

/***/ "./node_modules/d3-polygon/src/hull.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-polygon/src/hull.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cross__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cross */ "./node_modules/d3-polygon/src/cross.js");


function lexicographicOrder(a, b) {
  return a[0] - b[0] || a[1] - b[1];
} // Computes the upper convex hull per the monotone chain algorithm.
// Assumes points.length >= 3, is sorted by x, unique in y.
// Returns an array of indices into points in left-to-right order.


function computeUpperHullIndexes(points) {
  var n = points.length,
      indexes = [0, 1],
      size = 2;

  for (var i = 2; i < n; ++i) {
    while (size > 1 && Object(_cross__WEBPACK_IMPORTED_MODULE_0__["default"])(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) {
      --size;
    }

    indexes[size++] = i;
  }

  return indexes.slice(0, size); // remove popped points
}

/* harmony default export */ __webpack_exports__["default"] = (function (points) {
  if ((n = points.length) < 3) return null;
  var i,
      n,
      sortedPoints = new Array(n),
      flippedPoints = new Array(n);

  for (i = 0; i < n; ++i) {
    sortedPoints[i] = [+points[i][0], +points[i][1], i];
  }

  sortedPoints.sort(lexicographicOrder);

  for (i = 0; i < n; ++i) {
    flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];
  }

  var upperIndexes = computeUpperHullIndexes(sortedPoints),
      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.

  var skipLeft = lowerIndexes[0] === upperIndexes[0],
      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
      hull = []; // Add upper hull in right-to-l order.
  // Then add lower hull in left-to-right order.

  for (i = upperIndexes.length - 1; i >= 0; --i) {
    hull.push(points[sortedPoints[upperIndexes[i]][2]]);
  }

  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) {
    hull.push(points[sortedPoints[lowerIndexes[i]][2]]);
  }

  return hull;
});

/***/ }),

/***/ "./node_modules/d3-polygon/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-polygon/src/index.js ***!
  \**********************************************/
/*! exports provided: polygonArea, polygonCentroid, polygonHull, polygonContains, polygonLength */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./area */ "./node_modules/d3-polygon/src/area.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonArea", function() { return _area__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _centroid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./centroid */ "./node_modules/d3-polygon/src/centroid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonCentroid", function() { return _centroid__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _hull__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hull */ "./node_modules/d3-polygon/src/hull.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonHull", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _contains__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contains */ "./node_modules/d3-polygon/src/contains.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonContains", function() { return _contains__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _length__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./length */ "./node_modules/d3-polygon/src/length.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonLength", function() { return _length__WEBPACK_IMPORTED_MODULE_4__["default"]; });







/***/ }),

/***/ "./node_modules/d3-polygon/src/length.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-polygon/src/length.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (polygon) {
  var i = -1,
      n = polygon.length,
      b = polygon[n - 1],
      xa,
      ya,
      xb = b[0],
      yb = b[1],
      perimeter = 0;

  while (++i < n) {
    xa = xb;
    ya = yb;
    b = polygon[i];
    xb = b[0];
    yb = b[1];
    xa -= xb;
    ya -= yb;
    perimeter += Math.sqrt(xa * xa + ya * ya);
  }

  return perimeter;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/add.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-quadtree/src/add.js ***!
  \*********************************************/
/*! exports provided: default, addAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addAll", function() { return addAll; });
/* harmony default export */ __webpack_exports__["default"] = (function (d) {
  var x = +this._x.call(null, d),
      y = +this._y.call(null, d);
  return add(this.cover(x, y), x, y, d);
});

function add(tree, x, y, d) {
  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

  var parent,
      node = tree._root,
      leaf = {
    data: d
  },
      x0 = tree._x0,
      y0 = tree._y0,
      x1 = tree._x1,
      y1 = tree._y1,
      xm,
      ym,
      xp,
      yp,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.

  while (node.length) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
  } // Is the new point is exactly coincident with the existing point?


  xp = +tree._x.call(null, node.data);
  yp = +tree._y.call(null, node.data);
  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.

  do {
    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));

  return parent[j] = node, parent[i] = leaf, tree;
}

function addAll(data) {
  var d,
      i,
      n = data.length,
      x,
      y,
      xz = new Array(n),
      yz = new Array(n),
      x0 = Infinity,
      y0 = Infinity,
      x1 = -Infinity,
      y1 = -Infinity; // Compute the points and their extent.

  for (i = 0; i < n; ++i) {
    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
    xz[i] = x;
    yz[i] = y;
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
  } // If there were no (valid) points, abort.


  if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.

  this.cover(x0, y0).cover(x1, y1); // Add the new points.

  for (i = 0; i < n; ++i) {
    add(this, xz[i], yz[i], data[i]);
  }

  return this;
}

/***/ }),

/***/ "./node_modules/d3-quadtree/src/cover.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-quadtree/src/cover.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x, y) {
  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

  var x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1; // If the quadtree has no extent, initialize them.
  // Integer extent are necessary so that if we later double the extent,
  // the existing quadrant boundaries don’t change due to floating point error!

  if (isNaN(x0)) {
    x1 = (x0 = Math.floor(x)) + 1;
    y1 = (y0 = Math.floor(y)) + 1;
  } // Otherwise, double repeatedly to cover.
  else {
      var z = x1 - x0,
          node = this._root,
          parent,
          i;

      while (x0 > x || x >= x1 || y0 > y || y >= y1) {
        i = (y < y0) << 1 | x < x0;
        parent = new Array(4), parent[i] = node, node = parent, z *= 2;

        switch (i) {
          case 0:
            x1 = x0 + z, y1 = y0 + z;
            break;

          case 1:
            x0 = x1 - z, y1 = y0 + z;
            break;

          case 2:
            x1 = x0 + z, y0 = y1 - z;
            break;

          case 3:
            x0 = x1 - z, y0 = y1 - z;
            break;
        }
      }

      if (this._root && this._root.length) this._root = node;
    }

  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  return this;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/data.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/data.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var data = [];
  this.visit(function (node) {
    if (!node.length) do {
      data.push(node.data);
    } while (node = node.next);
  });
  return data;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/extent.js":
/*!************************************************!*\
  !*** ./node_modules/d3-quadtree/src/extent.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (_) {
  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/find.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/find.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quad */ "./node_modules/d3-quadtree/src/quad.js");

/* harmony default export */ __webpack_exports__["default"] = (function (x, y, radius) {
  var data,
      x0 = this._x0,
      y0 = this._y0,
      x1,
      y1,
      x2,
      y2,
      x3 = this._x1,
      y3 = this._y1,
      quads = [],
      node = this._root,
      q,
      i;
  if (node) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node, x0, y0, x3, y3));
  if (radius == null) radius = Infinity;else {
    x0 = x - radius, y0 = y - radius;
    x3 = x + radius, y3 = y + radius;
    radius *= radius;
  }

  while (q = quads.pop()) {
    // Stop searching if this quadrant can’t contain a closer node.
    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.

    if (node.length) {
      var xm = (x1 + x2) / 2,
          ym = (y1 + y2) / 2;
      quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node[3], xm, ym, x2, y2), new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node[2], x1, ym, xm, y2), new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node[1], xm, y1, x2, ym), new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.

      if (i = (y >= ym) << 1 | x >= xm) {
        q = quads[quads.length - 1];
        quads[quads.length - 1] = quads[quads.length - 1 - i];
        quads[quads.length - 1 - i] = q;
      }
    } // Visit this point. (Visiting coincident points isn’t necessary!)
    else {
        var dx = x - +this._x.call(null, node.data),
            dy = y - +this._y.call(null, node.data),
            d2 = dx * dx + dy * dy;

        if (d2 < radius) {
          var d = Math.sqrt(radius = d2);
          x0 = x - d, y0 = y - d;
          x3 = x + d, y3 = y + d;
          data = node.data;
        }
      }
  }

  return data;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-quadtree/src/index.js ***!
  \***********************************************/
/*! exports provided: quadtree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quadtree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quadtree */ "./node_modules/d3-quadtree/src/quadtree.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quadtree", function() { return _quadtree__WEBPACK_IMPORTED_MODULE_0__["default"]; });



/***/ }),

/***/ "./node_modules/d3-quadtree/src/quad.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/quad.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (node, x0, y0, x1, y1) {
  this.node = node;
  this.x0 = x0;
  this.y0 = y0;
  this.x1 = x1;
  this.y1 = y1;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/quadtree.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-quadtree/src/quadtree.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quadtree; });
/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add */ "./node_modules/d3-quadtree/src/add.js");
/* harmony import */ var _cover__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cover */ "./node_modules/d3-quadtree/src/cover.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ "./node_modules/d3-quadtree/src/data.js");
/* harmony import */ var _extent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extent */ "./node_modules/d3-quadtree/src/extent.js");
/* harmony import */ var _find__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./find */ "./node_modules/d3-quadtree/src/find.js");
/* harmony import */ var _remove__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./remove */ "./node_modules/d3-quadtree/src/remove.js");
/* harmony import */ var _root__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./root */ "./node_modules/d3-quadtree/src/root.js");
/* harmony import */ var _size__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./size */ "./node_modules/d3-quadtree/src/size.js");
/* harmony import */ var _visit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./visit */ "./node_modules/d3-quadtree/src/visit.js");
/* harmony import */ var _visitAfter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./visitAfter */ "./node_modules/d3-quadtree/src/visitAfter.js");
/* harmony import */ var _x__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./x */ "./node_modules/d3-quadtree/src/x.js");
/* harmony import */ var _y__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./y */ "./node_modules/d3-quadtree/src/y.js");












function quadtree(nodes, x, y) {
  var tree = new Quadtree(x == null ? _x__WEBPACK_IMPORTED_MODULE_10__["defaultX"] : x, y == null ? _y__WEBPACK_IMPORTED_MODULE_11__["defaultY"] : y, NaN, NaN, NaN, NaN);
  return nodes == null ? tree : tree.addAll(nodes);
}

function Quadtree(x, y, x0, y0, x1, y1) {
  this._x = x;
  this._y = y;
  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  this._root = undefined;
}

function leaf_copy(leaf) {
  var copy = {
    data: leaf.data
  },
      next = copy;

  while (leaf = leaf.next) {
    next = next.next = {
      data: leaf.data
    };
  }

  return copy;
}

var treeProto = quadtree.prototype = Quadtree.prototype;

treeProto.copy = function () {
  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
      node = this._root,
      nodes,
      child;
  if (!node) return copy;
  if (!node.length) return copy._root = leaf_copy(node), copy;
  nodes = [{
    source: node,
    target: copy._root = new Array(4)
  }];

  while (node = nodes.pop()) {
    for (var i = 0; i < 4; ++i) {
      if (child = node.source[i]) {
        if (child.length) nodes.push({
          source: child,
          target: node.target[i] = new Array(4)
        });else node.target[i] = leaf_copy(child);
      }
    }
  }

  return copy;
};

treeProto.add = _add__WEBPACK_IMPORTED_MODULE_0__["default"];
treeProto.addAll = _add__WEBPACK_IMPORTED_MODULE_0__["addAll"];
treeProto.cover = _cover__WEBPACK_IMPORTED_MODULE_1__["default"];
treeProto.data = _data__WEBPACK_IMPORTED_MODULE_2__["default"];
treeProto.extent = _extent__WEBPACK_IMPORTED_MODULE_3__["default"];
treeProto.find = _find__WEBPACK_IMPORTED_MODULE_4__["default"];
treeProto.remove = _remove__WEBPACK_IMPORTED_MODULE_5__["default"];
treeProto.removeAll = _remove__WEBPACK_IMPORTED_MODULE_5__["removeAll"];
treeProto.root = _root__WEBPACK_IMPORTED_MODULE_6__["default"];
treeProto.size = _size__WEBPACK_IMPORTED_MODULE_7__["default"];
treeProto.visit = _visit__WEBPACK_IMPORTED_MODULE_8__["default"];
treeProto.visitAfter = _visitAfter__WEBPACK_IMPORTED_MODULE_9__["default"];
treeProto.x = _x__WEBPACK_IMPORTED_MODULE_10__["default"];
treeProto.y = _y__WEBPACK_IMPORTED_MODULE_11__["default"];

/***/ }),

/***/ "./node_modules/d3-quadtree/src/remove.js":
/*!************************************************!*\
  !*** ./node_modules/d3-quadtree/src/remove.js ***!
  \************************************************/
/*! exports provided: default, removeAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeAll", function() { return removeAll; });
/* harmony default export */ __webpack_exports__["default"] = (function (d) {
  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

  var parent,
      node = this._root,
      retainer,
      previous,
      next,
      x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1,
      x,
      y,
      xm,
      ym,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return this; // Find the leaf node for the point.
  // While descending, also retain the deepest parent with a non-removed sibling.

  if (node.length) while (true) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
    if (!node.length) break;
    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;
  } // Find the point to remove.

  while (node.data !== d) {
    if (!(previous = node, node = node.next)) return this;
  }

  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.

  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.

  if (!parent) return this._root = next, this; // Remove this leaf.

  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.

  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {
    if (retainer) retainer[j] = node;else this._root = node;
  }

  return this;
});
function removeAll(data) {
  for (var i = 0, n = data.length; i < n; ++i) {
    this.remove(data[i]);
  }

  return this;
}

/***/ }),

/***/ "./node_modules/d3-quadtree/src/root.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/root.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return this._root;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/size.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/size.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var size = 0;
  this.visit(function (node) {
    if (!node.length) do {
      ++size;
    } while (node = node.next);
  });
  return size;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/visit.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-quadtree/src/visit.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quad */ "./node_modules/d3-quadtree/src/quad.js");

/* harmony default export */ __webpack_exports__["default"] = (function (callback) {
  var quads = [],
      q,
      node = this._root,
      child,
      x0,
      y0,
      x1,
      y1;
  if (node) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
      var xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[3]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, xm, ym, x1, y1));
      if (child = node[2]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, x0, ym, xm, y1));
      if (child = node[1]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, xm, y0, x1, ym));
      if (child = node[0]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, x0, y0, xm, ym));
    }
  }

  return this;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/visitAfter.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-quadtree/src/visitAfter.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quad */ "./node_modules/d3-quadtree/src/quad.js");

/* harmony default export */ __webpack_exports__["default"] = (function (callback) {
  var quads = [],
      next = [],
      q;
  if (this._root) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](this._root, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    var node = q.node;

    if (node.length) {
      var child,
          x0 = q.x0,
          y0 = q.y0,
          x1 = q.x1,
          y1 = q.y1,
          xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[0]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, x0, y0, xm, ym));
      if (child = node[1]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, xm, y0, x1, ym));
      if (child = node[2]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, x0, ym, xm, y1));
      if (child = node[3]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, xm, ym, x1, y1));
    }

    next.push(q);
  }

  while (q = next.pop()) {
    callback(q.node, q.x0, q.y0, q.x1, q.y1);
  }

  return this;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/x.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-quadtree/src/x.js ***!
  \*******************************************/
/*! exports provided: defaultX, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultX", function() { return defaultX; });
function defaultX(d) {
  return d[0];
}
/* harmony default export */ __webpack_exports__["default"] = (function (_) {
  return arguments.length ? (this._x = _, this) : this._x;
});

/***/ }),

/***/ "./node_modules/d3-quadtree/src/y.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-quadtree/src/y.js ***!
  \*******************************************/
/*! exports provided: defaultY, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultY", function() { return defaultY; });
function defaultY(d) {
  return d[1];
}
/* harmony default export */ __webpack_exports__["default"] = (function (_) {
  return arguments.length ? (this._y = _, this) : this._y;
});

/***/ }),

/***/ "./node_modules/d3-random/src/bates.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-random/src/bates.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultSource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource */ "./node_modules/d3-random/src/defaultSource.js");
/* harmony import */ var _irwinHall__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./irwinHall */ "./node_modules/d3-random/src/irwinHall.js");


/* harmony default export */ __webpack_exports__["default"] = ((function sourceRandomBates(source) {
  function randomBates(n) {
    var randomIrwinHall = _irwinHall__WEBPACK_IMPORTED_MODULE_1__["default"].source(source)(n);
    return function () {
      return randomIrwinHall() / n;
    };
  }

  randomBates.source = sourceRandomBates;
  return randomBates;
})(_defaultSource__WEBPACK_IMPORTED_MODULE_0__["default"]));

/***/ }),

/***/ "./node_modules/d3-random/src/defaultSource.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-random/src/defaultSource.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return Math.random();
});

/***/ }),

/***/ "./node_modules/d3-random/src/exponential.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-random/src/exponential.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultSource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource */ "./node_modules/d3-random/src/defaultSource.js");

/* harmony default export */ __webpack_exports__["default"] = ((function sourceRandomExponential(source) {
  function randomExponential(lambda) {
    return function () {
      return -Math.log(1 - source()) / lambda;
    };
  }

  randomExponential.source = sourceRandomExponential;
  return randomExponential;
})(_defaultSource__WEBPACK_IMPORTED_MODULE_0__["default"]));

/***/ }),

/***/ "./node_modules/d3-random/src/index.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-random/src/index.js ***!
  \*********************************************/
/*! exports provided: randomUniform, randomNormal, randomLogNormal, randomBates, randomIrwinHall, randomExponential */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _uniform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uniform */ "./node_modules/d3-random/src/uniform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomUniform", function() { return _uniform__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _normal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normal */ "./node_modules/d3-random/src/normal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomNormal", function() { return _normal__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _logNormal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logNormal */ "./node_modules/d3-random/src/logNormal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomLogNormal", function() { return _logNormal__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _bates__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bates */ "./node_modules/d3-random/src/bates.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomBates", function() { return _bates__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _irwinHall__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./irwinHall */ "./node_modules/d3-random/src/irwinHall.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomIrwinHall", function() { return _irwinHall__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _exponential__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exponential */ "./node_modules/d3-random/src/exponential.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomExponential", function() { return _exponential__WEBPACK_IMPORTED_MODULE_5__["default"]; });








/***/ }),

/***/ "./node_modules/d3-random/src/irwinHall.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-random/src/irwinHall.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultSource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource */ "./node_modules/d3-random/src/defaultSource.js");

/* harmony default export */ __webpack_exports__["default"] = ((function sourceRandomIrwinHall(source) {
  function randomIrwinHall(n) {
    return function () {
      for (var sum = 0, i = 0; i < n; ++i) {
        sum += source();
      }

      return sum;
    };
  }

  randomIrwinHall.source = sourceRandomIrwinHall;
  return randomIrwinHall;
})(_defaultSource__WEBPACK_IMPORTED_MODULE_0__["default"]));

/***/ }),

/***/ "./node_modules/d3-random/src/logNormal.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-random/src/logNormal.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultSource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource */ "./node_modules/d3-random/src/defaultSource.js");
/* harmony import */ var _normal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normal */ "./node_modules/d3-random/src/normal.js");


/* harmony default export */ __webpack_exports__["default"] = ((function sourceRandomLogNormal(source) {
  function randomLogNormal() {
    var randomNormal = _normal__WEBPACK_IMPORTED_MODULE_1__["default"].source(source).apply(this, arguments);
    return function () {
      return Math.exp(randomNormal());
    };
  }

  randomLogNormal.source = sourceRandomLogNormal;
  return randomLogNormal;
})(_defaultSource__WEBPACK_IMPORTED_MODULE_0__["default"]));

/***/ }),

/***/ "./node_modules/d3-random/src/normal.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-random/src/normal.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultSource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource */ "./node_modules/d3-random/src/defaultSource.js");

/* harmony default export */ __webpack_exports__["default"] = ((function sourceRandomNormal(source) {
  function randomNormal(mu, sigma) {
    var x, r;
    mu = mu == null ? 0 : +mu;
    sigma = sigma == null ? 1 : +sigma;
    return function () {
      var y; // If available, use the second previously-generated uniform random.

      if (x != null) y = x, x = null; // Otherwise, generate a new x and y.
      else do {
          x = source() * 2 - 1;
          y = source() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
    };
  }

  randomNormal.source = sourceRandomNormal;
  return randomNormal;
})(_defaultSource__WEBPACK_IMPORTED_MODULE_0__["default"]));

/***/ }),

/***/ "./node_modules/d3-random/src/uniform.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-random/src/uniform.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultSource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource */ "./node_modules/d3-random/src/defaultSource.js");

/* harmony default export */ __webpack_exports__["default"] = ((function sourceRandomUniform(source) {
  function randomUniform(min, max) {
    min = min == null ? 0 : +min;
    max = max == null ? 1 : +max;
    if (arguments.length === 1) max = min, min = 0;else max -= min;
    return function () {
      return source() * max + min;
    };
  }

  randomUniform.source = sourceRandomUniform;
  return randomUniform;
})(_defaultSource__WEBPACK_IMPORTED_MODULE_0__["default"]));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Accent.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Accent.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Dark2.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Dark2.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Paired.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Paired.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Set1.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Set1.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Set2.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Set2.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Set3.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Set3.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/category10.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/category10.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");

/* harmony default export */ __webpack_exports__["default"] = (Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/colors.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/colors.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (specifier) {
  var n = specifier.length / 6 | 0,
      colors = new Array(n),
      i = 0;

  while (i < n) {
    colors[i] = "#" + specifier.slice(i * 6, ++i * 6);
  }

  return colors;
});

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/BrBG.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/BrBG.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("d8b365f5f5f55ab4ac", "a6611adfc27d80cdc1018571", "a6611adfc27df5f5f580cdc1018571", "8c510ad8b365f6e8c3c7eae55ab4ac01665e", "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e", "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e", "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e", "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30", "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/PRGn.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/PRGn.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("af8dc3f7f7f77fbf7b", "7b3294c2a5cfa6dba0008837", "7b3294c2a5cff7f7f7a6dba0008837", "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837", "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837", "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837", "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837", "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b", "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/PiYG.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/PiYG.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("e9a3c9f7f7f7a1d76a", "d01c8bf1b6dab8e1864dac26", "d01c8bf1b6daf7f7f7b8e1864dac26", "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221", "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221", "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221", "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221", "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419", "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/PuOr.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/PuOr.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("998ec3f7f7f7f1a340", "5e3c99b2abd2fdb863e66101", "5e3c99b2abd2f7f7f7fdb863e66101", "542788998ec3d8daebfee0b6f1a340b35806", "542788998ec3d8daebf7f7f7fee0b6f1a340b35806", "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806", "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806", "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08", "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdBu.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdBu.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("ef8a62f7f7f767a9cf", "ca0020f4a58292c5de0571b0", "ca0020f4a582f7f7f792c5de0571b0", "b2182bef8a62fddbc7d1e5f067a9cf2166ac", "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac", "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac", "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac", "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061", "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdGy.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdGy.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("ef8a62ffffff999999", "ca0020f4a582bababa404040", "ca0020f4a582ffffffbababa404040", "b2182bef8a62fddbc7e0e0e09999994d4d4d", "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d", "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d", "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d", "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a", "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js ***!
  \*****************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fc8d59ffffbf91bfdb", "d7191cfdae61abd9e92c7bb6", "d7191cfdae61ffffbfabd9e92c7bb6", "d73027fc8d59fee090e0f3f891bfdb4575b4", "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4", "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4", "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4", "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695", "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js ***!
  \*****************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fc8d59ffffbf91cf60", "d7191cfdae61a6d96a1a9641", "d7191cfdae61ffffbfa6d96a1a9641", "d73027fc8d59fee08bd9ef8b91cf601a9850", "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850", "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850", "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850", "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837", "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/Spectral.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/Spectral.js ***!
  \*******************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fc8d59ffffbf99d594", "d7191cfdae61abdda42b83ba", "d7191cfdae61ffffbfabdda42b83ba", "d53e4ffc8d59fee08be6f59899d5943288bd", "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd", "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd", "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd", "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2", "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/index.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/index.js ***!
  \******************************************************/
/*! exports provided: schemeCategory10, schemeAccent, schemeDark2, schemePaired, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3, interpolateBrBG, schemeBrBG, interpolatePRGn, schemePRGn, interpolatePiYG, schemePiYG, interpolatePuOr, schemePuOr, interpolateRdBu, schemeRdBu, interpolateRdGy, schemeRdGy, interpolateRdYlBu, schemeRdYlBu, interpolateRdYlGn, schemeRdYlGn, interpolateSpectral, schemeSpectral, interpolateBuGn, schemeBuGn, interpolateBuPu, schemeBuPu, interpolateGnBu, schemeGnBu, interpolateOrRd, schemeOrRd, interpolatePuBuGn, schemePuBuGn, interpolatePuBu, schemePuBu, interpolatePuRd, schemePuRd, interpolateRdPu, schemeRdPu, interpolateYlGnBu, schemeYlGnBu, interpolateYlGn, schemeYlGn, interpolateYlOrBr, schemeYlOrBr, interpolateYlOrRd, schemeYlOrRd, interpolateBlues, schemeBlues, interpolateGreens, schemeGreens, interpolateGreys, schemeGreys, interpolatePurples, schemePurples, interpolateReds, schemeReds, interpolateOranges, schemeOranges, interpolateCubehelixDefault, interpolateRainbow, interpolateWarm, interpolateCool, interpolateSinebow, interpolateViridis, interpolateMagma, interpolateInferno, interpolatePlasma */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _categorical_category10__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./categorical/category10 */ "./node_modules/d3-scale-chromatic/src/categorical/category10.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeCategory10", function() { return _categorical_category10__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _categorical_Accent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./categorical/Accent */ "./node_modules/d3-scale-chromatic/src/categorical/Accent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeAccent", function() { return _categorical_Accent__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _categorical_Dark2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./categorical/Dark2 */ "./node_modules/d3-scale-chromatic/src/categorical/Dark2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeDark2", function() { return _categorical_Dark2__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _categorical_Paired__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./categorical/Paired */ "./node_modules/d3-scale-chromatic/src/categorical/Paired.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePaired", function() { return _categorical_Paired__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _categorical_Pastel1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./categorical/Pastel1 */ "./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePastel1", function() { return _categorical_Pastel1__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _categorical_Pastel2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./categorical/Pastel2 */ "./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePastel2", function() { return _categorical_Pastel2__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _categorical_Set1__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./categorical/Set1 */ "./node_modules/d3-scale-chromatic/src/categorical/Set1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet1", function() { return _categorical_Set1__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _categorical_Set2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./categorical/Set2 */ "./node_modules/d3-scale-chromatic/src/categorical/Set2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet2", function() { return _categorical_Set2__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _categorical_Set3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./categorical/Set3 */ "./node_modules/d3-scale-chromatic/src/categorical/Set3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet3", function() { return _categorical_Set3__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _diverging_BrBG__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./diverging/BrBG */ "./node_modules/d3-scale-chromatic/src/diverging/BrBG.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBrBG", function() { return _diverging_BrBG__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBrBG", function() { return _diverging_BrBG__WEBPACK_IMPORTED_MODULE_9__["scheme"]; });

/* harmony import */ var _diverging_PRGn__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./diverging/PRGn */ "./node_modules/d3-scale-chromatic/src/diverging/PRGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePRGn", function() { return _diverging_PRGn__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePRGn", function() { return _diverging_PRGn__WEBPACK_IMPORTED_MODULE_10__["scheme"]; });

/* harmony import */ var _diverging_PiYG__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./diverging/PiYG */ "./node_modules/d3-scale-chromatic/src/diverging/PiYG.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePiYG", function() { return _diverging_PiYG__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePiYG", function() { return _diverging_PiYG__WEBPACK_IMPORTED_MODULE_11__["scheme"]; });

/* harmony import */ var _diverging_PuOr__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./diverging/PuOr */ "./node_modules/d3-scale-chromatic/src/diverging/PuOr.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuOr", function() { return _diverging_PuOr__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuOr", function() { return _diverging_PuOr__WEBPACK_IMPORTED_MODULE_12__["scheme"]; });

/* harmony import */ var _diverging_RdBu__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./diverging/RdBu */ "./node_modules/d3-scale-chromatic/src/diverging/RdBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdBu", function() { return _diverging_RdBu__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdBu", function() { return _diverging_RdBu__WEBPACK_IMPORTED_MODULE_13__["scheme"]; });

/* harmony import */ var _diverging_RdGy__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./diverging/RdGy */ "./node_modules/d3-scale-chromatic/src/diverging/RdGy.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdGy", function() { return _diverging_RdGy__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdGy", function() { return _diverging_RdGy__WEBPACK_IMPORTED_MODULE_14__["scheme"]; });

/* harmony import */ var _diverging_RdYlBu__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./diverging/RdYlBu */ "./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdYlBu", function() { return _diverging_RdYlBu__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdYlBu", function() { return _diverging_RdYlBu__WEBPACK_IMPORTED_MODULE_15__["scheme"]; });

/* harmony import */ var _diverging_RdYlGn__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./diverging/RdYlGn */ "./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdYlGn", function() { return _diverging_RdYlGn__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdYlGn", function() { return _diverging_RdYlGn__WEBPACK_IMPORTED_MODULE_16__["scheme"]; });

/* harmony import */ var _diverging_Spectral__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./diverging/Spectral */ "./node_modules/d3-scale-chromatic/src/diverging/Spectral.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateSpectral", function() { return _diverging_Spectral__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSpectral", function() { return _diverging_Spectral__WEBPACK_IMPORTED_MODULE_17__["scheme"]; });

/* harmony import */ var _sequential_multi_BuGn__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./sequential-multi/BuGn */ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBuGn", function() { return _sequential_multi_BuGn__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBuGn", function() { return _sequential_multi_BuGn__WEBPACK_IMPORTED_MODULE_18__["scheme"]; });

/* harmony import */ var _sequential_multi_BuPu__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./sequential-multi/BuPu */ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBuPu", function() { return _sequential_multi_BuPu__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBuPu", function() { return _sequential_multi_BuPu__WEBPACK_IMPORTED_MODULE_19__["scheme"]; });

/* harmony import */ var _sequential_multi_GnBu__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./sequential-multi/GnBu */ "./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGnBu", function() { return _sequential_multi_GnBu__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGnBu", function() { return _sequential_multi_GnBu__WEBPACK_IMPORTED_MODULE_20__["scheme"]; });

/* harmony import */ var _sequential_multi_OrRd__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./sequential-multi/OrRd */ "./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateOrRd", function() { return _sequential_multi_OrRd__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeOrRd", function() { return _sequential_multi_OrRd__WEBPACK_IMPORTED_MODULE_21__["scheme"]; });

/* harmony import */ var _sequential_multi_PuBuGn__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./sequential-multi/PuBuGn */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuBuGn", function() { return _sequential_multi_PuBuGn__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuBuGn", function() { return _sequential_multi_PuBuGn__WEBPACK_IMPORTED_MODULE_22__["scheme"]; });

/* harmony import */ var _sequential_multi_PuBu__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./sequential-multi/PuBu */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuBu", function() { return _sequential_multi_PuBu__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuBu", function() { return _sequential_multi_PuBu__WEBPACK_IMPORTED_MODULE_23__["scheme"]; });

/* harmony import */ var _sequential_multi_PuRd__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./sequential-multi/PuRd */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuRd", function() { return _sequential_multi_PuRd__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuRd", function() { return _sequential_multi_PuRd__WEBPACK_IMPORTED_MODULE_24__["scheme"]; });

/* harmony import */ var _sequential_multi_RdPu__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./sequential-multi/RdPu */ "./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdPu", function() { return _sequential_multi_RdPu__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdPu", function() { return _sequential_multi_RdPu__WEBPACK_IMPORTED_MODULE_25__["scheme"]; });

/* harmony import */ var _sequential_multi_YlGnBu__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./sequential-multi/YlGnBu */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlGnBu", function() { return _sequential_multi_YlGnBu__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlGnBu", function() { return _sequential_multi_YlGnBu__WEBPACK_IMPORTED_MODULE_26__["scheme"]; });

/* harmony import */ var _sequential_multi_YlGn__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./sequential-multi/YlGn */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlGn", function() { return _sequential_multi_YlGn__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlGn", function() { return _sequential_multi_YlGn__WEBPACK_IMPORTED_MODULE_27__["scheme"]; });

/* harmony import */ var _sequential_multi_YlOrBr__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./sequential-multi/YlOrBr */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlOrBr", function() { return _sequential_multi_YlOrBr__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlOrBr", function() { return _sequential_multi_YlOrBr__WEBPACK_IMPORTED_MODULE_28__["scheme"]; });

/* harmony import */ var _sequential_multi_YlOrRd__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./sequential-multi/YlOrRd */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlOrRd", function() { return _sequential_multi_YlOrRd__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlOrRd", function() { return _sequential_multi_YlOrRd__WEBPACK_IMPORTED_MODULE_29__["scheme"]; });

/* harmony import */ var _sequential_single_Blues__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./sequential-single/Blues */ "./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBlues", function() { return _sequential_single_Blues__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBlues", function() { return _sequential_single_Blues__WEBPACK_IMPORTED_MODULE_30__["scheme"]; });

/* harmony import */ var _sequential_single_Greens__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./sequential-single/Greens */ "./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGreens", function() { return _sequential_single_Greens__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGreens", function() { return _sequential_single_Greens__WEBPACK_IMPORTED_MODULE_31__["scheme"]; });

/* harmony import */ var _sequential_single_Greys__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./sequential-single/Greys */ "./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGreys", function() { return _sequential_single_Greys__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGreys", function() { return _sequential_single_Greys__WEBPACK_IMPORTED_MODULE_32__["scheme"]; });

/* harmony import */ var _sequential_single_Purples__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./sequential-single/Purples */ "./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePurples", function() { return _sequential_single_Purples__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePurples", function() { return _sequential_single_Purples__WEBPACK_IMPORTED_MODULE_33__["scheme"]; });

/* harmony import */ var _sequential_single_Reds__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./sequential-single/Reds */ "./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateReds", function() { return _sequential_single_Reds__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeReds", function() { return _sequential_single_Reds__WEBPACK_IMPORTED_MODULE_34__["scheme"]; });

/* harmony import */ var _sequential_single_Oranges__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./sequential-single/Oranges */ "./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateOranges", function() { return _sequential_single_Oranges__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeOranges", function() { return _sequential_single_Oranges__WEBPACK_IMPORTED_MODULE_35__["scheme"]; });

/* harmony import */ var _sequential_multi_cubehelix__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./sequential-multi/cubehelix */ "./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelixDefault", function() { return _sequential_multi_cubehelix__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony import */ var _sequential_multi_rainbow__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./sequential-multi/rainbow */ "./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRainbow", function() { return _sequential_multi_rainbow__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateWarm", function() { return _sequential_multi_rainbow__WEBPACK_IMPORTED_MODULE_37__["warm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCool", function() { return _sequential_multi_rainbow__WEBPACK_IMPORTED_MODULE_37__["cool"]; });

/* harmony import */ var _sequential_multi_sinebow__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./sequential-multi/sinebow */ "./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateSinebow", function() { return _sequential_multi_sinebow__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony import */ var _sequential_multi_viridis__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./sequential-multi/viridis */ "./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateViridis", function() { return _sequential_multi_viridis__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateMagma", function() { return _sequential_multi_viridis__WEBPACK_IMPORTED_MODULE_39__["magma"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateInferno", function() { return _sequential_multi_viridis__WEBPACK_IMPORTED_MODULE_39__["inferno"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePlasma", function() { return _sequential_multi_viridis__WEBPACK_IMPORTED_MODULE_39__["plasma"]; });










































/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/ramp.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/ramp.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");

/* harmony default export */ __webpack_exports__["default"] = (function (scheme) {
  return Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["interpolateRgbBasis"])(scheme[scheme.length - 1]);
});

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js":
/*!***************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateCubehelixLong"])(Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(300, 0.5, 0.0), Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(-240, 0.5, 1.0)));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js ***!
  \*************************************************************************/
/*! exports provided: warm, cool, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "warm", function() { return warm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cool", function() { return cool; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");


var warm = Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateCubehelixLong"])(Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(-100, 0.75, 0.35), Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(80, 1.50, 0.8));
var cool = Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateCubehelixLong"])(Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(260, 0.75, 0.35), Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(80, 1.50, 0.8));
var c = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])();
/* harmony default export */ __webpack_exports__["default"] = (function (t) {
  if (t < 0 || t > 1) t -= Math.floor(t);
  var ts = Math.abs(t - 0.5);
  c.h = 360 * t - 100;
  c.s = 1.5 - 1.5 * ts;
  c.l = 0.8 - 0.9 * ts;
  return c + "";
});

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");

var c = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(),
    pi_1_3 = Math.PI / 3,
    pi_2_3 = Math.PI * 2 / 3;
/* harmony default export */ __webpack_exports__["default"] = (function (t) {
  var x;
  t = (0.5 - t) * Math.PI;
  c.r = 255 * (x = Math.sin(t)) * x;
  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
  return c + "";
});

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js ***!
  \*************************************************************************/
/*! exports provided: default, magma, inferno, plasma */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "magma", function() { return magma; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inferno", function() { return inferno; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "plasma", function() { return plasma; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");


function ramp(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

/* harmony default export */ __webpack_exports__["default"] = (ramp(Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")));
var magma = ramp(Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
var inferno = ramp(Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
var plasma = ramp(Object(_colors__WEBPACK_IMPORTED_MODULE_0__["default"])("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js ***!
  \*************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js":
/*!**************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js ***!
  \**************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js":
/*!**************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js ***!
  \**************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js ***!
  \***********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp */ "./node_modules/d3-scale-chromatic/src/ramp.js");


var scheme = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(_colors__WEBPACK_IMPORTED_MODULE_0__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));

/***/ }),

/***/ "./node_modules/d3-scale/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-scale/src/array.js ***!
  \********************************************/
/*! exports provided: map, slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
var array = Array.prototype;
var map = array.map;
var slice = array.slice;

/***/ }),

/***/ "./node_modules/d3-scale/src/band.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/band.js ***!
  \*******************************************/
/*! exports provided: default, point */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return band; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return point; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _ordinal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ordinal */ "./node_modules/d3-scale/src/ordinal.js");



function band() {
  var scale = Object(_ordinal__WEBPACK_IMPORTED_MODULE_2__["default"])().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      range = [0, 1],
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;
  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = range[1] < range[0],
        start = range[reverse - 0],
        stop = range[1 - reverse];
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(n).map(function (i) {
      return start + step * i;
    });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function (_) {
    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = [+_[0], +_[1]], round = true, rescale();
  };

  scale.bandwidth = function () {
    return bandwidth;
  };

  scale.step = function () {
    return step;
  };

  scale.round = function (_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function (_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function (_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function () {
    return band(domain(), range).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initRange"].apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;
  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function () {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}

/***/ }),

/***/ "./node_modules/d3-scale/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-scale/src/continuous.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-scale/src/continuous.js ***!
  \*************************************************/
/*! exports provided: identity, copy, transformer, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformer", function() { return transformer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return continuous; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-scale/src/constant.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number */ "./node_modules/d3-scale/src/number.js");





var unit = [0, 1];
function identity(x) {
  return x;
}

function normalize(a, b) {
  return (b -= a = +a) ? function (x) {
    return (x - a) / b;
  } : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(isNaN(b) ? NaN : 0.5);
}

function clamper(domain) {
  var a = domain[0],
      b = domain[domain.length - 1],
      t;
  if (a > b) t = a, a = b, b = t;
  return function (x) {
    return Math.max(a, Math.min(b, x));
  };
} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].


function bimap(domain, range, interpolate) {
  var d0 = domain[0],
      d1 = domain[1],
      r0 = range[0],
      r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function (x) {
    return r0(d0(x));
  };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1; // Reverse descending domains.

  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function (x) {
    var i = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}
function transformer() {
  var domain = unit,
      range = unit,
      interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolate"],
      transform,
      untransform,
      unknown,
      clamp = identity,
      piecewise,
      output,
      input;

  function rescale() {
    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function (y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateNumber"])))(y)));
  };

  scale.domain = function (_) {
    return arguments.length ? (domain = _array__WEBPACK_IMPORTED_MODULE_2__["map"].call(_, _number__WEBPACK_IMPORTED_MODULE_4__["default"]), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array__WEBPACK_IMPORTED_MODULE_2__["slice"].call(_), rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = _array__WEBPACK_IMPORTED_MODULE_2__["slice"].call(_), interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateRound"], rescale();
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;
  };

  scale.interpolate = function (_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}
function continuous(transform, untransform) {
  return transformer()(transform, untransform);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/diverging.js":
/*!************************************************!*\
  !*** ./node_modules/d3-scale/src/diverging.js ***!
  \************************************************/
/*! exports provided: default, divergingLog, divergingSymlog, divergingPow, divergingSqrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return diverging; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingLog", function() { return divergingLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingSymlog", function() { return divergingSymlog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingPow", function() { return divergingPow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingSqrt", function() { return divergingSqrt; });
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log */ "./node_modules/d3-scale/src/log.js");
/* harmony import */ var _sequential__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sequential */ "./node_modules/d3-scale/src/sequential.js");
/* harmony import */ var _symlog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./symlog */ "./node_modules/d3-scale/src/symlog.js");
/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pow */ "./node_modules/d3-scale/src/pow.js");








function transformer() {
  var x0 = 0,
      x1 = 0.5,
      x2 = 1,
      t0,
      t1,
      t2,
      k10,
      k21,
      interpolator = _continuous__WEBPACK_IMPORTED_MODULE_0__["identity"],
      transform,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);
    return scale;
  };
}

function diverging() {
  var scale = Object(_linear__WEBPACK_IMPORTED_MODULE_2__["linearish"])(transformer()(_continuous__WEBPACK_IMPORTED_MODULE_0__["identity"]));

  scale.copy = function () {
    return Object(_sequential__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, diverging());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function divergingLog() {
  var scale = Object(_log__WEBPACK_IMPORTED_MODULE_3__["loggish"])(transformer()).domain([0.1, 1, 10]);

  scale.copy = function () {
    return Object(_sequential__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, divergingLog()).base(scale.base());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function divergingSymlog() {
  var scale = Object(_symlog__WEBPACK_IMPORTED_MODULE_5__["symlogish"])(transformer());

  scale.copy = function () {
    return Object(_sequential__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, divergingSymlog()).constant(scale.constant());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function divergingPow() {
  var scale = Object(_pow__WEBPACK_IMPORTED_MODULE_6__["powish"])(transformer());

  scale.copy = function () {
    return Object(_sequential__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, divergingPow()).exponent(scale.exponent());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/identity.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return identity; });
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number */ "./node_modules/d3-scale/src/number.js");



function identity(domain) {
  var unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : x;
  }

  scale.invert = scale;

  scale.domain = scale.range = function (_) {
    return arguments.length ? (domain = _array__WEBPACK_IMPORTED_MODULE_0__["map"].call(_, _number__WEBPACK_IMPORTED_MODULE_2__["default"]), scale) : domain.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return identity(domain).unknown(unknown);
  };

  domain = arguments.length ? _array__WEBPACK_IMPORTED_MODULE_0__["map"].call(domain, _number__WEBPACK_IMPORTED_MODULE_2__["default"]) : [0, 1];
  return Object(_linear__WEBPACK_IMPORTED_MODULE_1__["linearish"])(scale);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-scale/src/index.js ***!
  \********************************************/
/*! exports provided: scaleBand, scalePoint, scaleIdentity, scaleLinear, scaleLog, scaleSymlog, scaleOrdinal, scaleImplicit, scalePow, scaleSqrt, scaleQuantile, scaleQuantize, scaleThreshold, scaleTime, scaleUtc, scaleSequential, scaleSequentialLog, scaleSequentialPow, scaleSequentialSqrt, scaleSequentialSymlog, scaleSequentialQuantile, scaleDiverging, scaleDivergingLog, scaleDivergingPow, scaleDivergingSqrt, scaleDivergingSymlog, tickFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _band__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./band */ "./node_modules/d3-scale/src/band.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleBand", function() { return _band__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scalePoint", function() { return _band__WEBPACK_IMPORTED_MODULE_0__["point"]; });

/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-scale/src/identity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleIdentity", function() { return _identity__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleLinear", function() { return _linear__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log */ "./node_modules/d3-scale/src/log.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleLog", function() { return _log__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _symlog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./symlog */ "./node_modules/d3-scale/src/symlog.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSymlog", function() { return _symlog__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _ordinal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ordinal */ "./node_modules/d3-scale/src/ordinal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleOrdinal", function() { return _ordinal__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleImplicit", function() { return _ordinal__WEBPACK_IMPORTED_MODULE_5__["implicit"]; });

/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pow */ "./node_modules/d3-scale/src/pow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scalePow", function() { return _pow__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSqrt", function() { return _pow__WEBPACK_IMPORTED_MODULE_6__["sqrt"]; });

/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./quantile */ "./node_modules/d3-scale/src/quantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleQuantile", function() { return _quantile__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _quantize__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./quantize */ "./node_modules/d3-scale/src/quantize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleQuantize", function() { return _quantize__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _threshold__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./threshold */ "./node_modules/d3-scale/src/threshold.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleThreshold", function() { return _threshold__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _time__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./time */ "./node_modules/d3-scale/src/time.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleTime", function() { return _time__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _utcTime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utcTime */ "./node_modules/d3-scale/src/utcTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleUtc", function() { return _utcTime__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _sequential__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./sequential */ "./node_modules/d3-scale/src/sequential.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequential", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialLog", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["sequentialLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialPow", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["sequentialPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialSqrt", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["sequentialSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialSymlog", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["sequentialSymlog"]; });

/* harmony import */ var _sequentialQuantile__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./sequentialQuantile */ "./node_modules/d3-scale/src/sequentialQuantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialQuantile", function() { return _sequentialQuantile__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _diverging__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./diverging */ "./node_modules/d3-scale/src/diverging.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDiverging", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingLog", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["divergingLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingPow", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["divergingPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingSqrt", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["divergingSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingSymlog", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["divergingSymlog"]; });

/* harmony import */ var _tickFormat__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./tickFormat */ "./node_modules/d3-scale/src/tickFormat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickFormat", function() { return _tickFormat__WEBPACK_IMPORTED_MODULE_15__["default"]; });


















/***/ }),

/***/ "./node_modules/d3-scale/src/init.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/init.js ***!
  \*******************************************/
/*! exports provided: initRange, initInterpolator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initRange", function() { return initRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initInterpolator", function() { return initInterpolator; });
function initRange(domain, range) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.range(domain);
      break;

    default:
      this.range(range).domain(domain);
      break;
  }

  return this;
}
function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.interpolator(domain);
      break;

    default:
      this.interpolator(interpolator).domain(domain);
      break;
  }

  return this;
}

/***/ }),

/***/ "./node_modules/d3-scale/src/linear.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-scale/src/linear.js ***!
  \*********************************************/
/*! exports provided: linearish, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linearish", function() { return linearish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return linear; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _tickFormat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tickFormat */ "./node_modules/d3-scale/src/tickFormat.js");




function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function (count) {
    var d = domain();
    return Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["ticks"])(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function (count, specifier) {
    var d = domain();
    return Object(_tickFormat__WEBPACK_IMPORTED_MODULE_3__["default"])(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function (count) {
    if (count == null) count = 10;
    var d = domain(),
        i0 = 0,
        i1 = d.length - 1,
        start = d[i0],
        stop = d[i1],
        step;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }

    step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickIncrement"])(start, stop, count);

    if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
      step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickIncrement"])(start, stop, count);
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
      step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickIncrement"])(start, stop, count);
    }

    if (step > 0) {
      d[i0] = Math.floor(start / step) * step;
      d[i1] = Math.ceil(stop / step) * step;
      domain(d);
    } else if (step < 0) {
      d[i0] = Math.ceil(start * step) / step;
      d[i1] = Math.floor(stop * step) / step;
      domain(d);
    }

    return scale;
  };

  return scale;
}
function linear() {
  var scale = Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["default"])(_continuous__WEBPACK_IMPORTED_MODULE_1__["identity"], _continuous__WEBPACK_IMPORTED_MODULE_1__["identity"]);

  scale.copy = function () {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["copy"])(scale, linear());
  };

  _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
  return linearish(scale);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/log.js":
/*!******************************************!*\
  !*** ./node_modules/d3-scale/src/log.js ***!
  \******************************************/
/*! exports provided: loggish, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loggish", function() { return loggish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return log; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/index.js");
/* harmony import */ var _nice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nice */ "./node_modules/d3-scale/src/nice.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");






function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10 : base === Math.E ? Math.exp : function (x) {
    return Math.pow(base, x);
  };
}

function logp(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function (x) {
    return Math.log(x) / base;
  });
}

function reflect(f) {
  return function (x) {
    return -f(-x);
  };
}

function loggish(transform) {
  var scale = transform(transformLog, transformExp),
      domain = scale.domain,
      base = 10,
      logs,
      pows;

  function rescale() {
    logs = logp(base), pows = powp(base);

    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }

    return scale;
  }

  scale.base = function (_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = function (count) {
    var d = domain(),
        u = d[0],
        v = d[d.length - 1],
        r;
    if (r = v < u) i = u, u = v, v = i;
    var i = logs(u),
        j = logs(v),
        p,
        k,
        t,
        n = count == null ? 10 : +count,
        z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.round(i) - 1, j = Math.round(j) + 1;
      if (u > 0) for (; i < j; ++i) {
        for (k = 1, p = pows(i); k < base; ++k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i < j; ++i) {
        for (k = base - 1, p = pows(i); k >= 1; --k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
    } else {
      z = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["ticks"])(i, j, Math.min(j - i, n)).map(pows);
    }

    return r ? z.reverse() : z;
  };

  scale.tickFormat = function (count, specifier) {
    if (specifier == null) specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function") specifier = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["format"])(specifier);
    if (count === Infinity) return specifier;
    if (count == null) count = 10;
    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?

    return function (d) {
      var i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = function () {
    return domain(Object(_nice__WEBPACK_IMPORTED_MODULE_2__["default"])(domain(), {
      floor: function floor(x) {
        return pows(Math.floor(logs(x)));
      },
      ceil: function ceil(x) {
        return pows(Math.ceil(logs(x)));
      }
    }));
  };

  return scale;
}
function log() {
  var scale = loggish(Object(_continuous__WEBPACK_IMPORTED_MODULE_3__["transformer"])()).domain([1, 10]);

  scale.copy = function () {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_3__["copy"])(scale, log()).base(scale.base());
  };

  _init__WEBPACK_IMPORTED_MODULE_4__["initRange"].apply(scale, arguments);
  return scale;
}

/***/ }),

/***/ "./node_modules/d3-scale/src/nice.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/nice.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (domain, interval) {
  domain = domain.slice();
  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
});

/***/ }),

/***/ "./node_modules/d3-scale/src/number.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-scale/src/number.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return +x;
});

/***/ }),

/***/ "./node_modules/d3-scale/src/ordinal.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-scale/src/ordinal.js ***!
  \**********************************************/
/*! exports provided: implicit, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "implicit", function() { return implicit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ordinal; });
/* harmony import */ var d3_collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-collection */ "./node_modules/d3-collection/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");



var implicit = {
  name: "implicit"
};
function ordinal() {
  var index = Object(d3_collection__WEBPACK_IMPORTED_MODULE_0__["map"])(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    var key = d + "",
        i = index.get(key);

    if (!i) {
      if (unknown !== implicit) return unknown;
      index.set(key, i = domain.push(d));
    }

    return range[(i - 1) % range.length];
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = Object(d3_collection__WEBPACK_IMPORTED_MODULE_0__["map"])();
    var i = -1,
        n = _.length,
        d,
        key;

    while (++i < n) {
      if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));
    }

    return scale;
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_), scale) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return ordinal(domain, range).unknown(unknown);
  };

  _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
  return scale;
}

/***/ }),

/***/ "./node_modules/d3-scale/src/pow.js":
/*!******************************************!*\
  !*** ./node_modules/d3-scale/src/pow.js ***!
  \******************************************/
/*! exports provided: powish, default, sqrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "powish", function() { return powish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return pow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return sqrt; });
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");




function transformPow(exponent) {
  return function (x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function transformSqrt(x) {
  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}

function transformSquare(x) {
  return x < 0 ? -x * x : x * x;
}

function powish(transform) {
  var scale = transform(_continuous__WEBPACK_IMPORTED_MODULE_1__["identity"], _continuous__WEBPACK_IMPORTED_MODULE_1__["identity"]),
      exponent = 1;

  function rescale() {
    return exponent === 1 ? transform(_continuous__WEBPACK_IMPORTED_MODULE_1__["identity"], _continuous__WEBPACK_IMPORTED_MODULE_1__["identity"]) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));
  }

  scale.exponent = function (_) {
    return arguments.length ? (exponent = +_, rescale()) : exponent;
  };

  return Object(_linear__WEBPACK_IMPORTED_MODULE_0__["linearish"])(scale);
}
function pow() {
  var scale = powish(Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["transformer"])());

  scale.copy = function () {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["copy"])(scale, pow()).exponent(scale.exponent());
  };

  _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
  return scale;
}
function sqrt() {
  return pow.apply(null, arguments).exponent(0.5);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/quantile.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/quantile.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quantile; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");



function quantile() {
  var domain = [],
      range = [],
      thresholds = [],
      unknown;

  function rescale() {
    var i = 0,
        n = Math.max(1, range.length);
    thresholds = new Array(n - 1);

    while (++i < n) {
      thresholds[i - 1] = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["quantile"])(domain, i / n);
    }

    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : range[Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(thresholds, x)];
  }

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];
  };

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) {
      if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);
    }

    domain.sort(d3_array__WEBPACK_IMPORTED_MODULE_0__["ascending"]);
    return rescale();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_), rescale()) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.quantiles = function () {
    return thresholds.slice();
  };

  scale.copy = function () {
    return quantile().domain(domain).range(range).unknown(unknown);
  };

  return _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/quantize.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/quantize.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quantize; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");




function quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x <= x ? range[Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);

    while (++i < n) {
      domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
    }

    return scale;
  }

  scale.domain = function (_) {
    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
  };

  scale.range = function (_) {
    return arguments.length ? (n = (range = _array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function () {
    return domain.slice();
  };

  scale.copy = function () {
    return quantize().domain([x0, x1]).range(range).unknown(unknown);
  };

  return _init__WEBPACK_IMPORTED_MODULE_3__["initRange"].apply(Object(_linear__WEBPACK_IMPORTED_MODULE_2__["linearish"])(scale), arguments);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/sequential.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-scale/src/sequential.js ***!
  \*************************************************/
/*! exports provided: copy, default, sequentialLog, sequentialSymlog, sequentialPow, sequentialSqrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sequential; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialLog", function() { return sequentialLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialSymlog", function() { return sequentialSymlog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialPow", function() { return sequentialPow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialSqrt", function() { return sequentialSqrt; });
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log */ "./node_modules/d3-scale/src/log.js");
/* harmony import */ var _symlog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./symlog */ "./node_modules/d3-scale/src/symlog.js");
/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pow */ "./node_modules/d3-scale/src/pow.js");







function transformer() {
  var x0 = 0,
      x1 = 1,
      t0,
      t1,
      k10,
      transform,
      interpolator = _continuous__WEBPACK_IMPORTED_MODULE_0__["identity"],
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
    return scale;
  };
}

function copy(source, target) {
  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
}
function sequential() {
  var scale = Object(_linear__WEBPACK_IMPORTED_MODULE_2__["linearish"])(transformer()(_continuous__WEBPACK_IMPORTED_MODULE_0__["identity"]));

  scale.copy = function () {
    return copy(scale, sequential());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function sequentialLog() {
  var scale = Object(_log__WEBPACK_IMPORTED_MODULE_3__["loggish"])(transformer()).domain([1, 10]);

  scale.copy = function () {
    return copy(scale, sequentialLog()).base(scale.base());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function sequentialSymlog() {
  var scale = Object(_symlog__WEBPACK_IMPORTED_MODULE_4__["symlogish"])(transformer());

  scale.copy = function () {
    return copy(scale, sequentialSymlog()).constant(scale.constant());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function sequentialPow() {
  var scale = Object(_pow__WEBPACK_IMPORTED_MODULE_5__["powish"])(transformer());

  scale.copy = function () {
    return copy(scale, sequentialPow()).exponent(scale.exponent());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}
function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/sequentialQuantile.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-scale/src/sequentialQuantile.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sequentialQuantile; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");



function sequentialQuantile() {
  var domain = [],
      interpolator = _continuous__WEBPACK_IMPORTED_MODULE_1__["identity"];

  function scale(x) {
    if (!isNaN(x = +x)) return interpolator((Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x) - 1) / (domain.length - 1));
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) {
      if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);
    }

    domain.sort(d3_array__WEBPACK_IMPORTED_MODULE_0__["ascending"]);
    return scale;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.copy = function () {
    return sequentialQuantile(interpolator).domain(domain);
  };

  return _init__WEBPACK_IMPORTED_MODULE_2__["initInterpolator"].apply(scale, arguments);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/symlog.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-scale/src/symlog.js ***!
  \*********************************************/
/*! exports provided: symlogish, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symlogish", function() { return symlogish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return symlog; });
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");




function transformSymlog(c) {
  return function (x) {
    return Math.sign(x) * Math.log1p(Math.abs(x / c));
  };
}

function transformSymexp(c) {
  return function (x) {
    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
  };
}

function symlogish(transform) {
  var c = 1,
      scale = transform(transformSymlog(c), transformSymexp(c));

  scale.constant = function (_) {
    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
  };

  return Object(_linear__WEBPACK_IMPORTED_MODULE_0__["linearish"])(scale);
}
function symlog() {
  var scale = symlogish(Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["transformer"])());

  scale.copy = function () {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["copy"])(scale, symlog()).constant(scale.constant());
  };

  return _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/threshold.js":
/*!************************************************!*\
  !*** ./node_modules/d3-scale/src/threshold.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return threshold; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");



function threshold() {
  var domain = [0.5],
      range = [0, 1],
      unknown,
      n = 1;

  function scale(x) {
    return x <= x ? range[Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x, 0, n)] : unknown;
  }

  scale.domain = function (_) {
    return arguments.length ? (domain = _array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return threshold().domain(domain).range(range).unknown(unknown);
  };

  return _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
}

/***/ }),

/***/ "./node_modules/d3-scale/src/tickFormat.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-scale/src/tickFormat.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function (start, stop, count, specifier) {
  var step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start, stop, count),
      precision;
  specifier = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["formatSpecifier"])(specifier == null ? ",f" : specifier);

  switch (specifier.type) {
    case "s":
      {
        var value = Math.max(Math.abs(start), Math.abs(stop));
        if (specifier.precision == null && !isNaN(precision = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["precisionPrefix"])(step, value))) specifier.precision = precision;
        return Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["formatPrefix"])(specifier, value);
      }

    case "":
    case "e":
    case "g":
    case "p":
    case "r":
      {
        if (specifier.precision == null && !isNaN(precision = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["precisionRound"])(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
        break;
      }

    case "f":
    case "%":
      {
        if (specifier.precision == null && !isNaN(precision = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["precisionFixed"])(step))) specifier.precision = precision - (specifier.type === "%") * 2;
        break;
      }
  }

  return Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["format"])(specifier);
});

/***/ }),

/***/ "./node_modules/d3-scale/src/time.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/time.js ***!
  \*******************************************/
/*! exports provided: calendar, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calendar", function() { return calendar; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/index.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./array */ "./node_modules/d3-scale/src/array.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _nice__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./nice */ "./node_modules/d3-scale/src/nice.js");







var durationSecond = 1000,
    durationMinute = durationSecond * 60,
    durationHour = durationMinute * 60,
    durationDay = durationHour * 24,
    durationWeek = durationDay * 7,
    durationMonth = durationDay * 30,
    durationYear = durationDay * 365;

function date(t) {
  return new Date(t);
}

function number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
  var scale = Object(_continuous__WEBPACK_IMPORTED_MODULE_4__["default"])(_continuous__WEBPACK_IMPORTED_MODULE_4__["identity"], _continuous__WEBPACK_IMPORTED_MODULE_4__["identity"]),
      invert = scale.invert,
      domain = scale.domain;
  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");
  var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);
  }

  function tickInterval(interval, start, stop, step) {
    if (interval == null) interval = 10; // If a desired tick count is specified, pick a reasonable tick interval
    // based on the extent of the domain and a rough estimate of tick size.
    // Otherwise, assume interval is already a time interval and use it.

    if (typeof interval === "number") {
      var target = Math.abs(stop - start) / interval,
          i = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisector"])(function (i) {
        return i[2];
      }).right(tickIntervals, target);

      if (i === tickIntervals.length) {
        step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start / durationYear, stop / durationYear, interval);
        interval = year;
      } else if (i) {
        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        step = i[1];
        interval = i[0];
      } else {
        step = Math.max(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start, stop, interval), 1);
        interval = millisecond;
      }
    }

    return step == null ? interval : interval.every(step);
  }

  scale.invert = function (y) {
    return new Date(invert(y));
  };

  scale.domain = function (_) {
    return arguments.length ? domain(_array__WEBPACK_IMPORTED_MODULE_3__["map"].call(_, number)) : domain().map(date);
  };

  scale.ticks = function (interval, step) {
    var d = domain(),
        t0 = d[0],
        t1 = d[d.length - 1],
        r = t1 < t0,
        t;
    if (r) t = t0, t0 = t1, t1 = t;
    t = tickInterval(interval, t0, t1, step);
    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop

    return r ? t.reverse() : t;
  };

  scale.tickFormat = function (count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function (interval, step) {
    var d = domain();
    return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain(Object(_nice__WEBPACK_IMPORTED_MODULE_6__["default"])(d, interval)) : scale;
  };

  scale.copy = function () {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
  };

  return scale;
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return _init__WEBPACK_IMPORTED_MODULE_5__["initRange"].apply(calendar(d3_time__WEBPACK_IMPORTED_MODULE_1__["timeYear"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeMonth"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeWeek"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeDay"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeHour"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeMinute"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeSecond"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeMillisecond"], d3_time_format__WEBPACK_IMPORTED_MODULE_2__["timeFormat"]).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
});

/***/ }),

/***/ "./node_modules/d3-scale/src/utcTime.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-scale/src/utcTime.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./time */ "./node_modules/d3-scale/src/time.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/index.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/index.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");




/* harmony default export */ __webpack_exports__["default"] = (function () {
  return _init__WEBPACK_IMPORTED_MODULE_3__["initRange"].apply(Object(_time__WEBPACK_IMPORTED_MODULE_0__["calendar"])(d3_time__WEBPACK_IMPORTED_MODULE_2__["utcYear"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcMonth"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcWeek"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcDay"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcHour"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcMinute"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcSecond"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcMillisecond"], d3_time_format__WEBPACK_IMPORTED_MODULE_1__["utcFormat"]).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/constant.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-selection/src/constant.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-selection/src/create.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/create.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _creator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./creator */ "./node_modules/d3-selection/src/creator.js");
/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./select */ "./node_modules/d3-selection/src/select.js");


/* harmony default export */ __webpack_exports__["default"] = (function (name) {
  return Object(_select__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_creator__WEBPACK_IMPORTED_MODULE_0__["default"])(name).call(document.documentElement));
});

/***/ }),

/***/ "./node_modules/d3-selection/src/creator.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/creator.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _namespace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./namespace */ "./node_modules/d3-selection/src/namespace.js");
/* harmony import */ var _namespaces__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./namespaces */ "./node_modules/d3-selection/src/namespaces.js");



function creatorInherit(name) {
  return function () {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === _namespaces__WEBPACK_IMPORTED_MODULE_1__["xhtml"] && document.documentElement.namespaceURI === _namespaces__WEBPACK_IMPORTED_MODULE_1__["xhtml"] ? document.createElement(name) : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function () {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name) {
  var fullname = Object(_namespace__WEBPACK_IMPORTED_MODULE_0__["default"])(name);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/index.js ***!
  \************************************************/
/*! exports provided: create, creator, local, matcher, mouse, namespace, namespaces, clientPoint, select, selectAll, selection, selector, selectorAll, style, touch, touches, window, event, customEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _create__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create */ "./node_modules/d3-selection/src/create.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "create", function() { return _create__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _creator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./creator */ "./node_modules/d3-selection/src/creator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "creator", function() { return _creator__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _local__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./local */ "./node_modules/d3-selection/src/local.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "local", function() { return _local__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _matcher__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./matcher */ "./node_modules/d3-selection/src/matcher.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matcher", function() { return _matcher__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _mouse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mouse */ "./node_modules/d3-selection/src/mouse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mouse", function() { return _mouse__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _namespace__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./namespace */ "./node_modules/d3-selection/src/namespace.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return _namespace__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _namespaces__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./namespaces */ "./node_modules/d3-selection/src/namespaces.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "namespaces", function() { return _namespaces__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./point */ "./node_modules/d3-selection/src/point.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clientPoint", function() { return _point__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./select */ "./node_modules/d3-selection/src/select.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "select", function() { return _select__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _selectAll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./selectAll */ "./node_modules/d3-selection/src/selectAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectAll", function() { return _selectAll__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _selection_index__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./selection/index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selection", function() { return _selection_index__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./selector */ "./node_modules/d3-selection/src/selector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selector", function() { return _selector__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _selectorAll__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./selectorAll */ "./node_modules/d3-selection/src/selectorAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectorAll", function() { return _selectorAll__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _selection_style__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./selection/style */ "./node_modules/d3-selection/src/selection/style.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "style", function() { return _selection_style__WEBPACK_IMPORTED_MODULE_13__["styleValue"]; });

/* harmony import */ var _touch__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./touch */ "./node_modules/d3-selection/src/touch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touch", function() { return _touch__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _touches__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./touches */ "./node_modules/d3-selection/src/touches.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touches", function() { return _touches__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./window */ "./node_modules/d3-selection/src/window.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "window", function() { return _window__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _selection_on__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./selection/on */ "./node_modules/d3-selection/src/selection/on.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "event", function() { return _selection_on__WEBPACK_IMPORTED_MODULE_17__["event"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "customEvent", function() { return _selection_on__WEBPACK_IMPORTED_MODULE_17__["customEvent"]; });




















/***/ }),

/***/ "./node_modules/d3-selection/src/local.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/local.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return local; });
var nextId = 0;
function local() {
  return new Local();
}

function Local() {
  this._ = "@" + (++nextId).toString(36);
}

Local.prototype = local.prototype = {
  constructor: Local,
  get: function get(node) {
    var id = this._;

    while (!(id in node)) {
      if (!(node = node.parentNode)) return;
    }

    return node[id];
  },
  set: function set(node, value) {
    return node[this._] = value;
  },
  remove: function remove(node) {
    return this._ in node && delete node[this._];
  },
  toString: function toString() {
    return this._;
  }
};

/***/ }),

/***/ "./node_modules/d3-selection/src/matcher.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/matcher.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (selector) {
  return function () {
    return this.matches(selector);
  };
});

/***/ }),

/***/ "./node_modules/d3-selection/src/mouse.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/mouse.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sourceEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sourceEvent */ "./node_modules/d3-selection/src/sourceEvent.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "./node_modules/d3-selection/src/point.js");


/* harmony default export */ __webpack_exports__["default"] = (function (node) {
  var event = Object(_sourceEvent__WEBPACK_IMPORTED_MODULE_0__["default"])();
  if (event.changedTouches) event = event.changedTouches[0];
  return Object(_point__WEBPACK_IMPORTED_MODULE_1__["default"])(node, event);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/namespace.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-selection/src/namespace.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _namespaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./namespaces */ "./node_modules/d3-selection/src/namespaces.js");

/* harmony default export */ __webpack_exports__["default"] = (function (name) {
  var prefix = name += "",
      i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return _namespaces__WEBPACK_IMPORTED_MODULE_0__["default"].hasOwnProperty(prefix) ? {
    space: _namespaces__WEBPACK_IMPORTED_MODULE_0__["default"][prefix],
    local: name
  } : name;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/namespaces.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-selection/src/namespaces.js ***!
  \*****************************************************/
/*! exports provided: xhtml, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xhtml", function() { return xhtml; });
var xhtml = "http://www.w3.org/1999/xhtml";
/* harmony default export */ __webpack_exports__["default"] = ({
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
});

/***/ }),

/***/ "./node_modules/d3-selection/src/point.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/point.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (node, event) {
  var svg = node.ownerSVGElement || node;

  if (svg.createSVGPoint) {
    var point = svg.createSVGPoint();
    point.x = event.clientX, point.y = event.clientY;
    point = point.matrixTransform(node.getScreenCTM().inverse());
    return [point.x, point.y];
  }

  var rect = node.getBoundingClientRect();
  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
});

/***/ }),

/***/ "./node_modules/d3-selection/src/select.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/select.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _selection_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/index */ "./node_modules/d3-selection/src/selection/index.js");

/* harmony default export */ __webpack_exports__["default"] = (function (selector) {
  return typeof selector === "string" ? new _selection_index__WEBPACK_IMPORTED_MODULE_0__["Selection"]([[document.querySelector(selector)]], [document.documentElement]) : new _selection_index__WEBPACK_IMPORTED_MODULE_0__["Selection"]([[selector]], _selection_index__WEBPACK_IMPORTED_MODULE_0__["root"]);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selectAll.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-selection/src/selectAll.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _selection_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/index */ "./node_modules/d3-selection/src/selection/index.js");

/* harmony default export */ __webpack_exports__["default"] = (function (selector) {
  return typeof selector === "string" ? new _selection_index__WEBPACK_IMPORTED_MODULE_0__["Selection"]([document.querySelectorAll(selector)], [document.documentElement]) : new _selection_index__WEBPACK_IMPORTED_MODULE_0__["Selection"]([selector == null ? [] : selector], _selection_index__WEBPACK_IMPORTED_MODULE_0__["root"]);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/append.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/append.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _creator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../creator */ "./node_modules/d3-selection/src/creator.js");

/* harmony default export */ __webpack_exports__["default"] = (function (name) {
  var create = typeof name === "function" ? name : Object(_creator__WEBPACK_IMPORTED_MODULE_0__["default"])(name);
  return this.select(function () {
    return this.appendChild(create.apply(this, arguments));
  });
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/attr.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/attr.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _namespace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../namespace */ "./node_modules/d3-selection/src/namespace.js");


function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function () {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function () {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value) {
  var fullname = Object(_namespace__WEBPACK_IMPORTED_MODULE_0__["default"])(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }

  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/call.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/call.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/classed.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/classed.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function add(name) {
    var i = this._names.indexOf(name);

    if (i < 0) {
      this._names.push(name);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function remove(name) {
    var i = this._names.indexOf(name);

    if (i >= 0) {
      this._names.splice(i, 1);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function contains(name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) {
    list.add(names[i]);
  }
}

function classedRemove(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) {
    list.remove(names[i]);
  }
}

function classedTrue(names) {
  return function () {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function () {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function () {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()),
        i = -1,
        n = names.length;

    while (++i < n) {
      if (!list.contains(names[i])) return false;
    }

    return true;
  }

  return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/clone.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/clone.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function selection_cloneShallow() {
  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);
}

function selection_cloneDeep() {
  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);
}

/* harmony default export */ __webpack_exports__["default"] = (function (deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/data.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/data.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _enter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enter */ "./node_modules/d3-selection/src/selection/enter.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant */ "./node_modules/d3-selection/src/constant.js");



var keyPrefix = "$"; // Protect against keys like “__proto__”.

function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length; // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.

  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new _enter__WEBPACK_IMPORTED_MODULE_1__["EnterNode"](parent, data[i]);
    }
  } // Put any non-null nodes that don’t fit into exit.


  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = {},
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue; // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.

  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);

      if (keyValue in nodeByKeyValue) {
        exit[i] = node;
      } else {
        nodeByKeyValue[keyValue] = node;
      }
    }
  } // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.


  for (i = 0; i < dataLength; ++i) {
    keyValue = keyPrefix + key.call(parent, data[i], i, data);

    if (node = nodeByKeyValue[keyValue]) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue[keyValue] = null;
    } else {
      enter[i] = new _enter__WEBPACK_IMPORTED_MODULE_1__["EnterNode"](parent, data[i]);
    }
  } // Add any remaining nodes that were not bound to data to exit.


  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {
      exit[i] = node;
    }
  }
}

/* harmony default export */ __webpack_exports__["default"] = (function (value, key) {
  if (!value) {
    data = new Array(this.size()), j = -1;
    this.each(function (d) {
      data[++j] = d;
    });
    return data;
  }

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;
  if (typeof value !== "function") value = Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = value.call(parent, parent && parent.__data__, j, parents),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);
    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.

    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;

        while (!(next = updateGroup[i1]) && ++i1 < dataLength) {
          ;
        }

        previous._next = next || null;
      }
    }
  }

  update = new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/datum.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/datum.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  return arguments.length ? this.property("__data__", value) : this.node().__data__;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/dispatch.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/dispatch.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../window */ "./node_modules/d3-selection/src/window.js");


function dispatchEvent(node, type, params) {
  var window = Object(_window__WEBPACK_IMPORTED_MODULE_0__["default"])(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function () {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function () {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (type, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/each.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/each.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (callback) {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/empty.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/empty.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return !this.node();
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/enter.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/enter.js ***!
  \**********************************************************/
/*! exports provided: default, EnterNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EnterNode", function() { return EnterNode; });
/* harmony import */ var _sparse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sparse */ "./node_modules/d3-selection/src/selection/sparse.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function () {
  return new _index__WEBPACK_IMPORTED_MODULE_1__["Selection"](this._enter || this._groups.map(_sparse__WEBPACK_IMPORTED_MODULE_0__["default"]), this._parents);
});
function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}
EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function appendChild(child) {
    return this._parent.insertBefore(child, this._next);
  },
  insertBefore: function insertBefore(child, next) {
    return this._parent.insertBefore(child, next);
  },
  querySelector: function querySelector(selector) {
    return this._parent.querySelector(selector);
  },
  querySelectorAll: function querySelectorAll(selector) {
    return this._parent.querySelectorAll(selector);
  }
};

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/exit.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/exit.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sparse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sparse */ "./node_modules/d3-selection/src/selection/sparse.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function () {
  return new _index__WEBPACK_IMPORTED_MODULE_1__["Selection"](this._exit || this._groups.map(_sparse__WEBPACK_IMPORTED_MODULE_0__["default"]), this._parents);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/filter.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/filter.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _matcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../matcher */ "./node_modules/d3-selection/src/matcher.js");


/* harmony default export */ __webpack_exports__["default"] = (function (match) {
  if (typeof match !== "function") match = Object(_matcher__WEBPACK_IMPORTED_MODULE_1__["default"])(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](subgroups, this._parents);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/html.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/html.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function () {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/index.js ***!
  \**********************************************************/
/*! exports provided: root, Selection, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "root", function() { return root; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Selection", function() { return Selection; });
/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./select */ "./node_modules/d3-selection/src/selection/select.js");
/* harmony import */ var _selectAll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./selectAll */ "./node_modules/d3-selection/src/selection/selectAll.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filter */ "./node_modules/d3-selection/src/selection/filter.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data */ "./node_modules/d3-selection/src/selection/data.js");
/* harmony import */ var _enter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./enter */ "./node_modules/d3-selection/src/selection/enter.js");
/* harmony import */ var _exit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exit */ "./node_modules/d3-selection/src/selection/exit.js");
/* harmony import */ var _join__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./join */ "./node_modules/d3-selection/src/selection/join.js");
/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./merge */ "./node_modules/d3-selection/src/selection/merge.js");
/* harmony import */ var _order__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./order */ "./node_modules/d3-selection/src/selection/order.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./sort */ "./node_modules/d3-selection/src/selection/sort.js");
/* harmony import */ var _call__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./call */ "./node_modules/d3-selection/src/selection/call.js");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./nodes */ "./node_modules/d3-selection/src/selection/nodes.js");
/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./node */ "./node_modules/d3-selection/src/selection/node.js");
/* harmony import */ var _size__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./size */ "./node_modules/d3-selection/src/selection/size.js");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./empty */ "./node_modules/d3-selection/src/selection/empty.js");
/* harmony import */ var _each__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./each */ "./node_modules/d3-selection/src/selection/each.js");
/* harmony import */ var _attr__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./attr */ "./node_modules/d3-selection/src/selection/attr.js");
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./style */ "./node_modules/d3-selection/src/selection/style.js");
/* harmony import */ var _property__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./property */ "./node_modules/d3-selection/src/selection/property.js");
/* harmony import */ var _classed__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./classed */ "./node_modules/d3-selection/src/selection/classed.js");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./text */ "./node_modules/d3-selection/src/selection/text.js");
/* harmony import */ var _html__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./html */ "./node_modules/d3-selection/src/selection/html.js");
/* harmony import */ var _raise__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./raise */ "./node_modules/d3-selection/src/selection/raise.js");
/* harmony import */ var _lower__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./lower */ "./node_modules/d3-selection/src/selection/lower.js");
/* harmony import */ var _append__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./append */ "./node_modules/d3-selection/src/selection/append.js");
/* harmony import */ var _insert__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./insert */ "./node_modules/d3-selection/src/selection/insert.js");
/* harmony import */ var _remove__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./remove */ "./node_modules/d3-selection/src/selection/remove.js");
/* harmony import */ var _clone__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./clone */ "./node_modules/d3-selection/src/selection/clone.js");
/* harmony import */ var _datum__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./datum */ "./node_modules/d3-selection/src/selection/datum.js");
/* harmony import */ var _on__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./on */ "./node_modules/d3-selection/src/selection/on.js");
/* harmony import */ var _dispatch__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./dispatch */ "./node_modules/d3-selection/src/selection/dispatch.js");































var root = [null];
function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: _select__WEBPACK_IMPORTED_MODULE_0__["default"],
  selectAll: _selectAll__WEBPACK_IMPORTED_MODULE_1__["default"],
  filter: _filter__WEBPACK_IMPORTED_MODULE_2__["default"],
  data: _data__WEBPACK_IMPORTED_MODULE_3__["default"],
  enter: _enter__WEBPACK_IMPORTED_MODULE_4__["default"],
  exit: _exit__WEBPACK_IMPORTED_MODULE_5__["default"],
  join: _join__WEBPACK_IMPORTED_MODULE_6__["default"],
  merge: _merge__WEBPACK_IMPORTED_MODULE_7__["default"],
  order: _order__WEBPACK_IMPORTED_MODULE_8__["default"],
  sort: _sort__WEBPACK_IMPORTED_MODULE_9__["default"],
  call: _call__WEBPACK_IMPORTED_MODULE_10__["default"],
  nodes: _nodes__WEBPACK_IMPORTED_MODULE_11__["default"],
  node: _node__WEBPACK_IMPORTED_MODULE_12__["default"],
  size: _size__WEBPACK_IMPORTED_MODULE_13__["default"],
  empty: _empty__WEBPACK_IMPORTED_MODULE_14__["default"],
  each: _each__WEBPACK_IMPORTED_MODULE_15__["default"],
  attr: _attr__WEBPACK_IMPORTED_MODULE_16__["default"],
  style: _style__WEBPACK_IMPORTED_MODULE_17__["default"],
  property: _property__WEBPACK_IMPORTED_MODULE_18__["default"],
  classed: _classed__WEBPACK_IMPORTED_MODULE_19__["default"],
  text: _text__WEBPACK_IMPORTED_MODULE_20__["default"],
  html: _html__WEBPACK_IMPORTED_MODULE_21__["default"],
  raise: _raise__WEBPACK_IMPORTED_MODULE_22__["default"],
  lower: _lower__WEBPACK_IMPORTED_MODULE_23__["default"],
  append: _append__WEBPACK_IMPORTED_MODULE_24__["default"],
  insert: _insert__WEBPACK_IMPORTED_MODULE_25__["default"],
  remove: _remove__WEBPACK_IMPORTED_MODULE_26__["default"],
  clone: _clone__WEBPACK_IMPORTED_MODULE_27__["default"],
  datum: _datum__WEBPACK_IMPORTED_MODULE_28__["default"],
  on: _on__WEBPACK_IMPORTED_MODULE_29__["default"],
  dispatch: _dispatch__WEBPACK_IMPORTED_MODULE_30__["default"]
};
/* harmony default export */ __webpack_exports__["default"] = (selection);

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/insert.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/insert.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _creator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../creator */ "./node_modules/d3-selection/src/creator.js");
/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selector */ "./node_modules/d3-selection/src/selector.js");



function constantNull() {
  return null;
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, before) {
  var create = typeof name === "function" ? name : Object(_creator__WEBPACK_IMPORTED_MODULE_0__["default"])(name),
      select = before == null ? constantNull : typeof before === "function" ? before : Object(_selector__WEBPACK_IMPORTED_MODULE_1__["default"])(before);
  return this.select(function () {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/join.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/join.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (onenter, onupdate, onexit) {
  var enter = this.enter(),
      update = this,
      exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null) update = onupdate(update);
  if (onexit == null) exit.remove();else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/lower.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/lower.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return this.each(lower);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/merge.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/merge.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");

/* harmony default export */ __webpack_exports__["default"] = (function (selection) {
  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](merges, this._parents);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/node.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/node.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/nodes.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/nodes.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var nodes = new Array(this.size()),
      i = -1;
  this.each(function () {
    nodes[++i] = this;
  });
  return nodes;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/on.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/on.js ***!
  \*******************************************************/
/*! exports provided: event, default, customEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "event", function() { return event; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "customEvent", function() { return customEvent; });
var filterEvents = {};
var event = null;

if (typeof document !== "undefined") {
  var element = document.documentElement;

  if (!("onmouseenter" in element)) {
    filterEvents = {
      mouseenter: "mouseover",
      mouseleave: "mouseout"
    };
  }
}

function filterContextListener(listener, index, group) {
  listener = contextListener(listener, index, group);
  return function (event) {
    var related = event.relatedTarget;

    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {
      listener.call(this, event);
    }
  };
}

function contextListener(listener, index, group) {
  return function (event1) {
    var event0 = event; // Events can be reentrant (e.g., focus).

    event = event1;

    try {
      listener.call(this, this.__data__, index, group);
    } finally {
      event = event0;
    }
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {
      type: t,
      name: name
    };
  });
}

function onRemove(typename) {
  return function () {
    var on = this.__on;
    if (!on) return;

    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
      } else {
        on[++i] = o;
      }
    }

    if (++i) on.length = i;else delete this.__on;
  };
}

function onAdd(typename, value, capture) {
  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
  return function (d, i, group) {
    var on = this.__on,
        o,
        listener = wrap(value, i, group);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
        this.addEventListener(o.type, o.listener = listener, o.capture = capture);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, capture);
    o = {
      type: typename.type,
      name: typename.name,
      value: value,
      listener: listener,
      capture: capture
    };
    if (!on) this.__on = [o];else on.push(o);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (typename, value, capture) {
  var typenames = parseTypenames(typename + ""),
      i,
      n = typenames.length,
      t;

  if (arguments.length < 2) {
    var on = this.node().__on;

    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  if (capture == null) capture = false;

  for (i = 0; i < n; ++i) {
    this.each(on(typenames[i], value, capture));
  }

  return this;
});
function customEvent(event1, listener, that, args) {
  var event0 = event;
  event1.sourceEvent = event;
  event = event1;

  try {
    return listener.apply(that, args);
  } finally {
    event = event0;
  }
}

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/order.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/order.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/property.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/property.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function propertyRemove(name) {
  return function () {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function () {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];else this[name] = v;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value) {
  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/raise.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/raise.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return this.each(raise);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/remove.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/remove.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return this.each(remove);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/select.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/select.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selector */ "./node_modules/d3-selection/src/selector.js");


/* harmony default export */ __webpack_exports__["default"] = (function (select) {
  if (typeof select !== "function") select = Object(_selector__WEBPACK_IMPORTED_MODULE_1__["default"])(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](subgroups, this._parents);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/selectAll.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/selectAll.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _selectorAll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selectorAll */ "./node_modules/d3-selection/src/selectorAll.js");


/* harmony default export */ __webpack_exports__["default"] = (function (select) {
  if (typeof select !== "function") select = Object(_selectorAll__WEBPACK_IMPORTED_MODULE_1__["default"])(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](subgroups, parents);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/size.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/size.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var size = 0;
  this.each(function () {
    ++size;
  });
  return size;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/sort.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/sort.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");

/* harmony default export */ __webpack_exports__["default"] = (function (compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }

    sortgroup.sort(compareNode);
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](sortgroups, this._parents).order();
});

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/sparse.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/sparse.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (update) {
  return new Array(update.length);
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/style.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/style.js ***!
  \**********************************************************/
/*! exports provided: default, styleValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "styleValue", function() { return styleValue; });
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../window */ "./node_modules/d3-selection/src/window.js");


function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function () {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value, priority) {
  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
});
function styleValue(node, name) {
  return node.style.getPropertyValue(name) || Object(_window__WEBPACK_IMPORTED_MODULE_0__["default"])(node).getComputedStyle(node, null).getPropertyValue(name);
}

/***/ }),

/***/ "./node_modules/d3-selection/src/selection/text.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/text.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selector.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-selection/src/selector.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function none() {}

/* harmony default export */ __webpack_exports__["default"] = (function (selector) {
  return selector == null ? none : function () {
    return this.querySelector(selector);
  };
});

/***/ }),

/***/ "./node_modules/d3-selection/src/selectorAll.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-selection/src/selectorAll.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function empty() {
  return [];
}

/* harmony default export */ __webpack_exports__["default"] = (function (selector) {
  return selector == null ? empty : function () {
    return this.querySelectorAll(selector);
  };
});

/***/ }),

/***/ "./node_modules/d3-selection/src/sourceEvent.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-selection/src/sourceEvent.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _selection_on__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/on */ "./node_modules/d3-selection/src/selection/on.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var current = _selection_on__WEBPACK_IMPORTED_MODULE_0__["event"],
      source;

  while (source = current.sourceEvent) {
    current = source;
  }

  return current;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/touch.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/touch.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sourceEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sourceEvent */ "./node_modules/d3-selection/src/sourceEvent.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "./node_modules/d3-selection/src/point.js");


/* harmony default export */ __webpack_exports__["default"] = (function (node, touches, identifier) {
  if (arguments.length < 3) identifier = touches, touches = Object(_sourceEvent__WEBPACK_IMPORTED_MODULE_0__["default"])().changedTouches;

  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
    if ((touch = touches[i]).identifier === identifier) {
      return Object(_point__WEBPACK_IMPORTED_MODULE_1__["default"])(node, touch);
    }
  }

  return null;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/touches.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/touches.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sourceEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sourceEvent */ "./node_modules/d3-selection/src/sourceEvent.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "./node_modules/d3-selection/src/point.js");


/* harmony default export */ __webpack_exports__["default"] = (function (node, touches) {
  if (touches == null) touches = Object(_sourceEvent__WEBPACK_IMPORTED_MODULE_0__["default"])().touches;

  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
    points[i] = Object(_point__WEBPACK_IMPORTED_MODULE_1__["default"])(node, touches[i]);
  }

  return points;
});

/***/ }),

/***/ "./node_modules/d3-selection/src/window.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/window.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (node) {
  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node
  node.document && node // node is a Window
  || node.defaultView; // node is a Document
});

/***/ }),

/***/ "./node_modules/d3-shape/src/arc.js":
/*!******************************************!*\
  !*** ./node_modules/d3-shape/src/arc.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-shape/src/math.js");




function arcInnerRadius(d) {
  return d.innerRadius;
}

function arcOuterRadius(d) {
  return d.outerRadius;
}

function arcStartAngle(d) {
  return d.startAngle;
}

function arcEndAngle(d) {
  return d.endAngle;
}

function arcPadAngle(d) {
  return d && d.padAngle; // Note: optional!
}

function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0,
      y10 = y1 - y0,
      x32 = x3 - x2,
      y32 = y3 - y2,
      t = y32 * x10 - x32 * y10;
  if (t * t < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
} // Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html


function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1,
      y01 = y0 - y1,
      lo = (cw ? rc : -rc) / Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(x01 * x01 + y01 * y01),
      ox = lo * y01,
      oy = -lo * x01,
      x11 = x0 + ox,
      y11 = y0 + oy,
      x10 = x1 + ox,
      y10 = y1 + oy,
      x00 = (x11 + x10) / 2,
      y00 = (y11 + y10) / 2,
      dx = x10 - x11,
      dy = y10 - y11,
      d2 = dx * dx + dy * dy,
      r = r1 - rc,
      D = x11 * y10 - x10 * y11,
      d = (dy < 0 ? -1 : 1) * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(Object(_math__WEBPACK_IMPORTED_MODULE_2__["max"])(0, r * r * d2 - D * D)),
      cx0 = (D * dy - dx * d) / d2,
      cy0 = (-D * dx - dy * d) / d2,
      cx1 = (D * dy + dx * d) / d2,
      cy1 = (-D * dx + dy * d) / d2,
      dx0 = cx0 - x00,
      dy0 = cy0 - y00,
      dx1 = cx1 - x00,
      dy1 = cy1 - y00; // Pick the closer of the two intersection points.
  // TODO Is there a faster way to determine which intersection to use?

  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var innerRadius = arcInnerRadius,
      outerRadius = arcOuterRadius,
      cornerRadius = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(0),
      padRadius = null,
      startAngle = arcStartAngle,
      endAngle = arcEndAngle,
      padAngle = arcPadAngle,
      context = null;

  function arc() {
    var buffer,
        r,
        r0 = +innerRadius.apply(this, arguments),
        r1 = +outerRadius.apply(this, arguments),
        a0 = startAngle.apply(this, arguments) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"],
        a1 = endAngle.apply(this, arguments) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"],
        da = Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(a1 - a0),
        cw = a1 > a0;
    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])(); // Ensure that the outer radius is always larger than the inner radius.

    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?

    if (!(r1 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"])) context.moveTo(0, 0); // Or is it a circle or annulus?
    else if (da > _math__WEBPACK_IMPORTED_MODULE_2__["tau"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
        context.moveTo(r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a0), r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a0));
        context.arc(0, 0, r1, a0, a1, !cw);

        if (r0 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
          context.moveTo(r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a1), r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a1));
          context.arc(0, 0, r0, a1, a0, cw);
        }
      } // Or is it a circular or annular sector?
      else {
          var a01 = a0,
              a11 = a1,
              a00 = a0,
              a10 = a1,
              da0 = da,
              da1 = da,
              ap = padAngle.apply(this, arguments) / 2,
              rp = ap > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] && (padRadius ? +padRadius.apply(this, arguments) : Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(r0 * r0 + r1 * r1)),
              rc = Object(_math__WEBPACK_IMPORTED_MODULE_2__["min"])(Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
              rc0 = rc,
              rc1 = rc,
              t0,
              t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.

          if (rp > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
            var p0 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["asin"])(rp / r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(ap)),
                p1 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["asin"])(rp / r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(ap));
            if ((da0 -= p0 * 2) > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;
            if ((da1 -= p1 * 2) > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;
          }

          var x01 = r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a01),
              y01 = r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a01),
              x10 = r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a10),
              y10 = r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a10); // Apply rounded corners?

          if (rc > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
            var x11 = r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a11),
                y11 = r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a11),
                x00 = r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a00),
                y00 = r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a00),
                oc; // Restrict the corner radius according to the sector angle.

            if (da < _math__WEBPACK_IMPORTED_MODULE_2__["pi"] && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
              var ax = x01 - oc[0],
                  ay = y01 - oc[1],
                  bx = x11 - oc[0],
                  by = y11 - oc[1],
                  kc = 1 / Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(Object(_math__WEBPACK_IMPORTED_MODULE_2__["acos"])((ax * bx + ay * by) / (Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(ax * ax + ay * ay) * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(bx * bx + by * by))) / 2),
                  lc = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["min"])(rc, (r0 - lc) / (kc - 1));
              rc1 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["min"])(rc, (r1 - lc) / (kc + 1));
            }
          } // Is the sector collapsed to a line?


          if (!(da1 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"])) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?
          else if (rc1 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
              t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
              t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y01, t0.x01), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc1, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y01, t0.x01), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r1, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.cy + t0.y11, t0.cx + t0.x11), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
                  context.arc(t1.cx, t1.cy, rc1, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y11, t1.x11), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y01, t1.x01), !cw);
                }
            } // Or is the outer ring just a circular arc?
            else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?
          // Or perhaps it’s an annular sector collapsed due to padding?

          if (!(r0 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) || !(da0 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"])) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?
          else if (rc0 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
              t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
              t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
              context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y01, t0.x01), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc0, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y01, t0.x01), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r0, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.cy + t0.y11, t0.cx + t0.x11), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.cy + t1.y11, t1.cx + t1.x11), cw);
                  context.arc(t1.cx, t1.cy, rc0, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y11, t1.x11), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y01, t1.x01), !cw);
                }
            } // Or is the inner ring just a circular arc?
            else context.arc(0, 0, r0, a10, a00, cw);
        }
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  arc.centroid = function () {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - _math__WEBPACK_IMPORTED_MODULE_2__["pi"] / 2;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a) * r, Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a) * r];
  };

  arc.innerRadius = function (_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : innerRadius;
  };

  arc.outerRadius = function (_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : outerRadius;
  };

  arc.cornerRadius = function (_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : cornerRadius;
  };

  arc.padRadius = function (_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : padRadius;
  };

  arc.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : startAngle;
  };

  arc.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : endAngle;
  };

  arc.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : padAngle;
  };

  arc.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, arc) : context;
  };

  return arc;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/area.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/area.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _curve_linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./curve/linear */ "./node_modules/d3-shape/src/curve/linear.js");
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./line */ "./node_modules/d3-shape/src/line.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./point */ "./node_modules/d3-shape/src/point.js");





/* harmony default export */ __webpack_exports__["default"] = (function () {
  var x0 = _point__WEBPACK_IMPORTED_MODULE_4__["x"],
      x1 = null,
      y0 = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(0),
      y1 = _point__WEBPACK_IMPORTED_MODULE_4__["y"],
      defined = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(true),
      context = null,
      curve = _curve_linear__WEBPACK_IMPORTED_MODULE_2__["default"],
      output = null;

  function area(data) {
    var i,
        j,
        k,
        n = data.length,
        d,
        defined0 = false,
        buffer,
        x0z = new Array(n),
        y0z = new Array(n);
    if (context == null) output = curve(buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();

          for (k = i - 1; k >= j; --k) {
            output.point(x0z[k], y0z[k]);
          }

          output.lineEnd();
          output.areaEnd();
        }
      }

      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  function arealine() {
    return Object(_line__WEBPACK_IMPORTED_MODULE_3__["default"])().defined(defined).curve(curve).context(context);
  }

  area.x = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), x1 = null, area) : x0;
  };

  area.x0 = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), area) : x0;
  };

  area.x1 = function (_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), area) : x1;
  };

  area.y = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), y1 = null, area) : y0;
  };

  area.y0 = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), area) : y0;
  };

  area.y1 = function (_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), area) : y1;
  };

  area.lineX0 = area.lineY0 = function () {
    return arealine().x(x0).y(y0);
  };

  area.lineY1 = function () {
    return arealine().x(x0).y(y1);
  };

  area.lineX1 = function () {
    return arealine().x(x1).y(y0);
  };

  area.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(!!_), area) : defined;
  };

  area.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };

  area.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };

  return area;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/areaRadial.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/areaRadial.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _curve_radial__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curve/radial */ "./node_modules/d3-shape/src/curve/radial.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area */ "./node_modules/d3-shape/src/area.js");
/* harmony import */ var _lineRadial__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lineRadial */ "./node_modules/d3-shape/src/lineRadial.js");



/* harmony default export */ __webpack_exports__["default"] = (function () {
  var a = Object(_area__WEBPACK_IMPORTED_MODULE_1__["default"])().curve(_curve_radial__WEBPACK_IMPORTED_MODULE_0__["curveRadialLinear"]),
      c = a.curve,
      x0 = a.lineX0,
      x1 = a.lineX1,
      y0 = a.lineY0,
      y1 = a.lineY1;
  a.angle = a.x, delete a.x;
  a.startAngle = a.x0, delete a.x0;
  a.endAngle = a.x1, delete a.x1;
  a.radius = a.y, delete a.y;
  a.innerRadius = a.y0, delete a.y0;
  a.outerRadius = a.y1, delete a.y1;
  a.lineStartAngle = function () {
    return Object(_lineRadial__WEBPACK_IMPORTED_MODULE_2__["lineRadial"])(x0());
  }, delete a.lineX0;
  a.lineEndAngle = function () {
    return Object(_lineRadial__WEBPACK_IMPORTED_MODULE_2__["lineRadial"])(x1());
  }, delete a.lineX1;
  a.lineInnerRadius = function () {
    return Object(_lineRadial__WEBPACK_IMPORTED_MODULE_2__["lineRadial"])(y0());
  }, delete a.lineY0;
  a.lineOuterRadius = function () {
    return Object(_lineRadial__WEBPACK_IMPORTED_MODULE_2__["lineRadial"])(y1());
  }, delete a.lineY1;

  a.curve = function (_) {
    return arguments.length ? c(Object(_curve_radial__WEBPACK_IMPORTED_MODULE_0__["default"])(_)) : c()._curve;
  };

  return a;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/array.js ***!
  \********************************************/
/*! exports provided: slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
var slice = Array.prototype.slice;

/***/ }),

/***/ "./node_modules/d3-shape/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-shape/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function constant() {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/basis.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basis.js ***!
  \**************************************************/
/*! exports provided: point, Basis, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return _point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Basis", function() { return Basis; });
function _point(that, x, y) {
  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
}


function Basis(context) {
  this._context = context;
}
Basis.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 3:
        _point(this, this._x1, this._y1);

      // proceed

      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;

        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);

      // proceed

      default:
        _point(this, x, y);

        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new Basis(context);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/basisClosed.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basisClosed.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-shape/src/noop.js");
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-shape/src/curve/basis.js");



function BasisClosed(context) {
  this._context = context;
}

BasisClosed.prototype = {
  areaStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  areaEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x2, this._y2);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);

          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x2, this._y2);
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          break;
        }
    }
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x, this._y2 = y;
        break;

      case 1:
        this._point = 2;
        this._x3 = x, this._y3 = y;
        break;

      case 2:
        this._point = 3;
        this._x4 = x, this._y4 = y;

        this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);

        break;

      default:
        Object(_basis__WEBPACK_IMPORTED_MODULE_1__["point"])(this, x, y);

        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new BasisClosed(context);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/basisOpen.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basisOpen.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-shape/src/curve/basis.js");


function BasisOpen(context) {
  this._context = context;
}

BasisOpen.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x) / 6,
            y0 = (this._y0 + 4 * this._y1 + y) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        Object(_basis__WEBPACK_IMPORTED_MODULE_0__["point"])(this, x, y);

        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new BasisOpen(context);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/bundle.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/bundle.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-shape/src/curve/basis.js");


function Bundle(context, beta) {
  this._basis = new _basis__WEBPACK_IMPORTED_MODULE_0__["Basis"](context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function lineStart() {
    this._x = [];
    this._y = [];

    this._basis.lineStart();
  },
  lineEnd: function lineEnd() {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;

        this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
      }
    }

    this._x = this._y = null;

    this._basis.lineEnd();
  },
  point: function point(x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(beta) {
  function bundle(context) {
    return beta === 1 ? new _basis__WEBPACK_IMPORTED_MODULE_0__["Basis"](context) : new Bundle(context, beta);
  }

  bundle.beta = function (beta) {
    return custom(+beta);
  };

  return bundle;
})(0.85));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/cardinal.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinal.js ***!
  \*****************************************************/
/*! exports provided: point, Cardinal, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return _point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cardinal", function() { return Cardinal; });
function _point(that, x, y) {
  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
}


function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
Cardinal.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        _point(this, this._x1, this._y1);

        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        this._x1 = x, this._y1 = y;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        _point(this, x, y);

        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(tension) {
  function cardinal(context) {
    return new Cardinal(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/cardinalClosed.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinalClosed.js ***!
  \***********************************************************/
/*! exports provided: CardinalClosed, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardinalClosed", function() { return CardinalClosed; });
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-shape/src/noop.js");
/* harmony import */ var _cardinal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cardinal */ "./node_modules/d3-shape/src/curve/cardinal.js");


function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalClosed.prototype = {
  areaStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  areaEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        Object(_cardinal__WEBPACK_IMPORTED_MODULE_1__["point"])(this, x, y);

        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(tension) {
  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/cardinalOpen.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinalOpen.js ***!
  \*********************************************************/
/*! exports provided: CardinalOpen, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardinalOpen", function() { return CardinalOpen; });
/* harmony import */ var _cardinal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cardinal */ "./node_modules/d3-shape/src/curve/cardinal.js");

function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalOpen.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        Object(_cardinal__WEBPACK_IMPORTED_MODULE_0__["point"])(this, x, y);

        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(tension) {
  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/catmullRom.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRom.js ***!
  \*******************************************************/
/*! exports provided: point, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return _point; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-shape/src/math.js");
/* harmony import */ var _cardinal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cardinal */ "./node_modules/d3-shape/src/curve/cardinal.js");



function _point(that, x, y) {
  var x1 = that._x1,
      y1 = that._y1,
      x2 = that._x2,
      y2 = that._y2;

  if (that._l01_a > _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) {
    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }

  if (that._l23_a > _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
  }

  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}



function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRom.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        this.point(this._x2, this._y2);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        _point(this, x, y);

        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new _cardinal__WEBPACK_IMPORTED_MODULE_1__["Cardinal"](context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/catmullRomClosed.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRomClosed.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cardinalClosed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cardinalClosed */ "./node_modules/d3-shape/src/curve/cardinalClosed.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-shape/src/noop.js");
/* harmony import */ var _catmullRom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./catmullRom */ "./node_modules/d3-shape/src/curve/catmullRom.js");




function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomClosed.prototype = {
  areaStart: _noop__WEBPACK_IMPORTED_MODULE_1__["default"],
  areaEnd: _noop__WEBPACK_IMPORTED_MODULE_1__["default"],
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function point(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        Object(_catmullRom__WEBPACK_IMPORTED_MODULE_2__["point"])(this, x, y);

        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new _cardinalClosed__WEBPACK_IMPORTED_MODULE_0__["CardinalClosed"](context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/catmullRomOpen.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRomOpen.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cardinalOpen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cardinalOpen */ "./node_modules/d3-shape/src/curve/cardinalOpen.js");
/* harmony import */ var _catmullRom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./catmullRom */ "./node_modules/d3-shape/src/curve/catmullRom.js");



function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomOpen.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        Object(_catmullRom__WEBPACK_IMPORTED_MODULE_1__["point"])(this, x, y);

        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = ((function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new _cardinalOpen__WEBPACK_IMPORTED_MODULE_0__["CardinalOpen"](context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/linear.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/linear.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        this._context.lineTo(x, y);

        break;
    }
  }
};
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new Linear(context);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/linearClosed.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/linearClosed.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-shape/src/noop.js");


function LinearClosed(context) {
  this._context = context;
}

LinearClosed.prototype = {
  areaStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  areaEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  lineStart: function lineStart() {
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (this._point) this._context.closePath();
  },
  point: function point(x, y) {
    x = +x, y = +y;
    if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);
  }
};
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new LinearClosed(context);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/monotone.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/monotone.js ***!
  \*****************************************************/
/*! exports provided: monotoneX, monotoneY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monotoneX", function() { return monotoneX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monotoneY", function() { return monotoneY; });
function sign(x) {
  return x < 0 ? -1 : 1;
} // Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.


function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0,
      h1 = x2 - that._x1,
      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
      p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
} // Calculate a one-sided slope.


function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
} // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".


function _point(that, t0, t1) {
  var x0 = that._x0,
      y0 = that._y0,
      x1 = that._x1,
      y1 = that._y1,
      dx = (x1 - x0) / 3;

  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}

function MonotoneX(context) {
  this._context = context;
}

MonotoneX.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;

      case 3:
        _point(this, this._t0, slope2(this, this._t0));

        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function point(x, y) {
    var t1 = NaN;
    x = +x, y = +y;
    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;

        _point(this, slope2(this, t1 = slope3(this, x, y)), t1);

        break;

      default:
        _point(this, this._t0, t1 = slope3(this, x, y));

        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
    this._t0 = t1;
  }
};

function MonotoneY(context) {
  this._context = new ReflectContext(context);
}

(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {
  MonotoneX.prototype.point.call(this, y, x);
};

function ReflectContext(context) {
  this._context = context;
}

ReflectContext.prototype = {
  moveTo: function moveTo(x, y) {
    this._context.moveTo(y, x);
  },
  closePath: function closePath() {
    this._context.closePath();
  },
  lineTo: function lineTo(x, y) {
    this._context.lineTo(y, x);
  },
  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {
    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
  }
};
function monotoneX(context) {
  return new MonotoneX(context);
}
function monotoneY(context) {
  return new MonotoneY(context);
}

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/natural.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/natural.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function Natural(context) {
  this._context = context;
}

Natural.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function lineEnd() {
    var x = this._x,
        y = this._y,
        n = x.length;

    if (n) {
      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);

      if (n === 2) {
        this._context.lineTo(x[1], y[1]);
      } else {
        var px = controlPoints(x),
            py = controlPoints(y);

        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }

    if (this._line || this._line !== 0 && n === 1) this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function point(x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
}; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.

function controlPoints(x) {
  var i,
      n = x.length - 1,
      m,
      a = new Array(n),
      b = new Array(n),
      r = new Array(n);
  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];

  for (i = 1; i < n - 1; ++i) {
    a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
  }

  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];

  for (i = 1; i < n; ++i) {
    m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
  }

  a[n - 1] = r[n - 1] / b[n - 1];

  for (i = n - 2; i >= 0; --i) {
    a[i] = (r[i] - a[i + 1]) / b[i];
  }

  b[n - 1] = (x[n] + a[n - 1]) / 2;

  for (i = 0; i < n - 1; ++i) {
    b[i] = 2 * x[i + 1] - a[i + 1];
  }

  return [a, b];
}

/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new Natural(context);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/radial.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/radial.js ***!
  \***************************************************/
/*! exports provided: curveRadialLinear, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "curveRadialLinear", function() { return curveRadialLinear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return curveRadial; });
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-shape/src/curve/linear.js");

var curveRadialLinear = curveRadial(_linear__WEBPACK_IMPORTED_MODULE_0__["default"]);

function Radial(curve) {
  this._curve = curve;
}

Radial.prototype = {
  areaStart: function areaStart() {
    this._curve.areaStart();
  },
  areaEnd: function areaEnd() {
    this._curve.areaEnd();
  },
  lineStart: function lineStart() {
    this._curve.lineStart();
  },
  lineEnd: function lineEnd() {
    this._curve.lineEnd();
  },
  point: function point(a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }
};
function curveRadial(curve) {
  function radial(context) {
    return new Radial(curve(context));
  }

  radial._curve = curve;
  return radial;
}

/***/ }),

/***/ "./node_modules/d3-shape/src/curve/step.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/step.js ***!
  \*************************************************/
/*! exports provided: default, stepBefore, stepAfter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stepBefore", function() { return stepBefore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stepAfter", function() { return stepAfter; });
function Step(context, t) {
  this._context = context;
  this._t = t;
}

Step.prototype = {
  areaStart: function areaStart() {
    this._line = 0;
  },
  areaEnd: function areaEnd() {
    this._line = NaN;
  },
  lineStart: function lineStart() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function lineEnd() {
    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        {
          if (this._t <= 0) {
            this._context.lineTo(this._x, y);

            this._context.lineTo(x, y);
          } else {
            var x1 = this._x * (1 - this._t) + x * this._t;

            this._context.lineTo(x1, this._y);

            this._context.lineTo(x1, y);
          }

          break;
        }
    }

    this._x = x, this._y = y;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (function (context) {
  return new Step(context, 0.5);
});
function stepBefore(context) {
  return new Step(context, 0);
}
function stepAfter(context) {
  return new Step(context, 1);
}

/***/ }),

/***/ "./node_modules/d3-shape/src/descending.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/descending.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-shape/src/identity.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (d) {
  return d;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/index.js ***!
  \********************************************/
/*! exports provided: arc, area, line, pie, areaRadial, radialArea, lineRadial, radialLine, pointRadial, linkHorizontal, linkVertical, linkRadial, symbol, symbols, symbolCircle, symbolCross, symbolDiamond, symbolSquare, symbolStar, symbolTriangle, symbolWye, curveBasisClosed, curveBasisOpen, curveBasis, curveBundle, curveCardinalClosed, curveCardinalOpen, curveCardinal, curveCatmullRomClosed, curveCatmullRomOpen, curveCatmullRom, curveLinearClosed, curveLinear, curveMonotoneX, curveMonotoneY, curveNatural, curveStep, curveStepAfter, curveStepBefore, stack, stackOffsetExpand, stackOffsetDiverging, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle, stackOrderAppearance, stackOrderAscending, stackOrderDescending, stackOrderInsideOut, stackOrderNone, stackOrderReverse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arc */ "./node_modules/d3-shape/src/arc.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arc", function() { return _arc__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area */ "./node_modules/d3-shape/src/area.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "area", function() { return _area__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./line */ "./node_modules/d3-shape/src/line.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "line", function() { return _line__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _pie__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pie */ "./node_modules/d3-shape/src/pie.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pie", function() { return _pie__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _areaRadial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./areaRadial */ "./node_modules/d3-shape/src/areaRadial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "areaRadial", function() { return _areaRadial__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "radialArea", function() { return _areaRadial__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _lineRadial__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lineRadial */ "./node_modules/d3-shape/src/lineRadial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lineRadial", function() { return _lineRadial__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "radialLine", function() { return _lineRadial__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _pointRadial__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pointRadial */ "./node_modules/d3-shape/src/pointRadial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pointRadial", function() { return _pointRadial__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _link_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./link/index */ "./node_modules/d3-shape/src/link/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkHorizontal", function() { return _link_index__WEBPACK_IMPORTED_MODULE_7__["linkHorizontal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkVertical", function() { return _link_index__WEBPACK_IMPORTED_MODULE_7__["linkVertical"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkRadial", function() { return _link_index__WEBPACK_IMPORTED_MODULE_7__["linkRadial"]; });

/* harmony import */ var _symbol__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./symbol */ "./node_modules/d3-shape/src/symbol.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbol", function() { return _symbol__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbols", function() { return _symbol__WEBPACK_IMPORTED_MODULE_8__["symbols"]; });

/* harmony import */ var _symbol_circle__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./symbol/circle */ "./node_modules/d3-shape/src/symbol/circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolCircle", function() { return _symbol_circle__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _symbol_cross__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./symbol/cross */ "./node_modules/d3-shape/src/symbol/cross.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolCross", function() { return _symbol_cross__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _symbol_diamond__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./symbol/diamond */ "./node_modules/d3-shape/src/symbol/diamond.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolDiamond", function() { return _symbol_diamond__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _symbol_square__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./symbol/square */ "./node_modules/d3-shape/src/symbol/square.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolSquare", function() { return _symbol_square__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _symbol_star__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./symbol/star */ "./node_modules/d3-shape/src/symbol/star.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolStar", function() { return _symbol_star__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _symbol_triangle__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./symbol/triangle */ "./node_modules/d3-shape/src/symbol/triangle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolTriangle", function() { return _symbol_triangle__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _symbol_wye__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./symbol/wye */ "./node_modules/d3-shape/src/symbol/wye.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolWye", function() { return _symbol_wye__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _curve_basisClosed__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./curve/basisClosed */ "./node_modules/d3-shape/src/curve/basisClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasisClosed", function() { return _curve_basisClosed__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _curve_basisOpen__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./curve/basisOpen */ "./node_modules/d3-shape/src/curve/basisOpen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasisOpen", function() { return _curve_basisOpen__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _curve_basis__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./curve/basis */ "./node_modules/d3-shape/src/curve/basis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasis", function() { return _curve_basis__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _curve_bundle__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./curve/bundle */ "./node_modules/d3-shape/src/curve/bundle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBundle", function() { return _curve_bundle__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _curve_cardinalClosed__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./curve/cardinalClosed */ "./node_modules/d3-shape/src/curve/cardinalClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinalClosed", function() { return _curve_cardinalClosed__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _curve_cardinalOpen__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./curve/cardinalOpen */ "./node_modules/d3-shape/src/curve/cardinalOpen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinalOpen", function() { return _curve_cardinalOpen__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _curve_cardinal__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./curve/cardinal */ "./node_modules/d3-shape/src/curve/cardinal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinal", function() { return _curve_cardinal__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _curve_catmullRomClosed__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./curve/catmullRomClosed */ "./node_modules/d3-shape/src/curve/catmullRomClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRomClosed", function() { return _curve_catmullRomClosed__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _curve_catmullRomOpen__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./curve/catmullRomOpen */ "./node_modules/d3-shape/src/curve/catmullRomOpen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRomOpen", function() { return _curve_catmullRomOpen__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _curve_catmullRom__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./curve/catmullRom */ "./node_modules/d3-shape/src/curve/catmullRom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRom", function() { return _curve_catmullRom__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _curve_linearClosed__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./curve/linearClosed */ "./node_modules/d3-shape/src/curve/linearClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveLinearClosed", function() { return _curve_linearClosed__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _curve_linear__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./curve/linear */ "./node_modules/d3-shape/src/curve/linear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveLinear", function() { return _curve_linear__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _curve_monotone__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./curve/monotone */ "./node_modules/d3-shape/src/curve/monotone.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveMonotoneX", function() { return _curve_monotone__WEBPACK_IMPORTED_MODULE_28__["monotoneX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveMonotoneY", function() { return _curve_monotone__WEBPACK_IMPORTED_MODULE_28__["monotoneY"]; });

/* harmony import */ var _curve_natural__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./curve/natural */ "./node_modules/d3-shape/src/curve/natural.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveNatural", function() { return _curve_natural__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _curve_step__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./curve/step */ "./node_modules/d3-shape/src/curve/step.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStep", function() { return _curve_step__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStepAfter", function() { return _curve_step__WEBPACK_IMPORTED_MODULE_30__["stepAfter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStepBefore", function() { return _curve_step__WEBPACK_IMPORTED_MODULE_30__["stepBefore"]; });

/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./stack */ "./node_modules/d3-shape/src/stack.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stack", function() { return _stack__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _offset_expand__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./offset/expand */ "./node_modules/d3-shape/src/offset/expand.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetExpand", function() { return _offset_expand__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _offset_diverging__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./offset/diverging */ "./node_modules/d3-shape/src/offset/diverging.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetDiverging", function() { return _offset_diverging__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _offset_none__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./offset/none */ "./node_modules/d3-shape/src/offset/none.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetNone", function() { return _offset_none__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony import */ var _offset_silhouette__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./offset/silhouette */ "./node_modules/d3-shape/src/offset/silhouette.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetSilhouette", function() { return _offset_silhouette__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony import */ var _offset_wiggle__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./offset/wiggle */ "./node_modules/d3-shape/src/offset/wiggle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetWiggle", function() { return _offset_wiggle__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony import */ var _order_appearance__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./order/appearance */ "./node_modules/d3-shape/src/order/appearance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderAppearance", function() { return _order_appearance__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony import */ var _order_ascending__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./order/ascending */ "./node_modules/d3-shape/src/order/ascending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderAscending", function() { return _order_ascending__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony import */ var _order_descending__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./order/descending */ "./node_modules/d3-shape/src/order/descending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderDescending", function() { return _order_descending__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony import */ var _order_insideOut__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./order/insideOut */ "./node_modules/d3-shape/src/order/insideOut.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderInsideOut", function() { return _order_insideOut__WEBPACK_IMPORTED_MODULE_40__["default"]; });

/* harmony import */ var _order_none__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./order/none */ "./node_modules/d3-shape/src/order/none.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderNone", function() { return _order_none__WEBPACK_IMPORTED_MODULE_41__["default"]; });

/* harmony import */ var _order_reverse__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./order/reverse */ "./node_modules/d3-shape/src/order/reverse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderReverse", function() { return _order_reverse__WEBPACK_IMPORTED_MODULE_42__["default"]; });





 // Note: radialArea is deprecated!

 // Note: radialLine is deprecated!







































/***/ }),

/***/ "./node_modules/d3-shape/src/line.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/line.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _curve_linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./curve/linear */ "./node_modules/d3-shape/src/curve/linear.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./point */ "./node_modules/d3-shape/src/point.js");




/* harmony default export */ __webpack_exports__["default"] = (function () {
  var x = _point__WEBPACK_IMPORTED_MODULE_3__["x"],
      y = _point__WEBPACK_IMPORTED_MODULE_3__["y"],
      defined = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(true),
      context = null,
      curve = _curve_linear__WEBPACK_IMPORTED_MODULE_2__["default"],
      output = null;

  function line(data) {
    var i,
        n = data.length,
        d,
        defined0 = false,
        buffer;
    if (context == null) output = curve(buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();else output.lineEnd();
      }

      if (defined0) output.point(+x(d, i, data), +y(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), line) : x;
  };

  line.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), line) : y;
  };

  line.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(!!_), line) : defined;
  };

  line.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/lineRadial.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/lineRadial.js ***!
  \*************************************************/
/*! exports provided: lineRadial, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lineRadial", function() { return lineRadial; });
/* harmony import */ var _curve_radial__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curve/radial */ "./node_modules/d3-shape/src/curve/radial.js");
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./line */ "./node_modules/d3-shape/src/line.js");


function lineRadial(l) {
  var c = l.curve;
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;

  l.curve = function (_) {
    return arguments.length ? c(Object(_curve_radial__WEBPACK_IMPORTED_MODULE_0__["default"])(_)) : c()._curve;
  };

  return l;
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return lineRadial(Object(_line__WEBPACK_IMPORTED_MODULE_1__["default"])().curve(_curve_radial__WEBPACK_IMPORTED_MODULE_0__["curveRadialLinear"]));
});

/***/ }),

/***/ "./node_modules/d3-shape/src/link/index.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/link/index.js ***!
  \*************************************************/
/*! exports provided: linkHorizontal, linkVertical, linkRadial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkHorizontal", function() { return linkHorizontal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkVertical", function() { return linkVertical; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkRadial", function() { return linkRadial; });
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../array */ "./node_modules/d3-shape/src/array.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../point */ "./node_modules/d3-shape/src/point.js");
/* harmony import */ var _pointRadial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../pointRadial */ "./node_modules/d3-shape/src/pointRadial.js");






function linkSource(d) {
  return d.source;
}

function linkTarget(d) {
  return d.target;
}

function link(curve) {
  var source = linkSource,
      target = linkTarget,
      x = _point__WEBPACK_IMPORTED_MODULE_3__["x"],
      y = _point__WEBPACK_IMPORTED_MODULE_3__["y"],
      context = null;

  function link() {
    var buffer,
        argv = _array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv);
    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])();
    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));
    if (buffer) return context = null, buffer + "" || null;
  }

  link.source = function (_) {
    return arguments.length ? (source = _, link) : source;
  };

  link.target = function (_) {
    return arguments.length ? (target = _, link) : target;
  };

  link.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(+_), link) : x;
  };

  link.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(+_), link) : y;
  };

  link.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, link) : context;
  };

  return link;
}

function curveHorizontal(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
}

function curveVertical(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
}

function curveRadial(context, x0, y0, x1, y1) {
  var p0 = Object(_pointRadial__WEBPACK_IMPORTED_MODULE_4__["default"])(x0, y0),
      p1 = Object(_pointRadial__WEBPACK_IMPORTED_MODULE_4__["default"])(x0, y0 = (y0 + y1) / 2),
      p2 = Object(_pointRadial__WEBPACK_IMPORTED_MODULE_4__["default"])(x1, y0),
      p3 = Object(_pointRadial__WEBPACK_IMPORTED_MODULE_4__["default"])(x1, y1);
  context.moveTo(p0[0], p0[1]);
  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
}

function linkHorizontal() {
  return link(curveHorizontal);
}
function linkVertical() {
  return link(curveVertical);
}
function linkRadial() {
  var l = link(curveRadial);
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  return l;
}

/***/ }),

/***/ "./node_modules/d3-shape/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/math.js ***!
  \*******************************************/
/*! exports provided: abs, atan2, cos, max, min, sin, sqrt, epsilon, pi, halfPi, tau, acos, asin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "abs", function() { return abs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan2", function() { return atan2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return cos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return sin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return sqrt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon", function() { return epsilon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return pi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "halfPi", function() { return halfPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return tau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acos", function() { return acos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asin", function() { return asin; });
var abs = Math.abs;
var atan2 = Math.atan2;
var cos = Math.cos;
var max = Math.max;
var min = Math.min;
var sin = Math.sin;
var sqrt = Math.sqrt;
var epsilon = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var tau = 2 * pi;
function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}
function asin(x) {
  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}

/***/ }),

/***/ "./node_modules/d3-shape/src/noop.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/noop.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {});

/***/ }),

/***/ "./node_modules/d3-shape/src/offset/diverging.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/diverging.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = yp;
      }
    }
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/offset/expand.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/expand.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/offset/none.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
    for (y = i = 0; i < n; ++i) {
      y += series[i][j][1] || 0;
    }

    if (y) for (i = 0; i < n; ++i) {
      series[i][j][1] /= y;
    }
  }

  Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series, order);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/offset/none.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/none.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (series, order) {
  if (!((n = series.length) > 1)) return;

  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];

    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/offset/silhouette.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/silhouette.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/offset/none.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series, order) {
  if (!((n = series.length) > 0)) return;

  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
    for (var i = 0, y = 0; i < n; ++i) {
      y += series[i][j][1] || 0;
    }

    s0[j][1] += s0[j][0] = -y / 2;
  }

  Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series, order);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/offset/wiggle.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/wiggle.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/offset/none.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series, order) {
  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;

  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
      var si = series[order[i]],
          sij0 = si[j][1] || 0,
          sij1 = si[j - 1][1] || 0,
          s3 = (sij0 - sij1) / 2;

      for (var k = 0; k < i; ++k) {
        var sk = series[order[k]],
            skj0 = sk[j][1] || 0,
            skj1 = sk[j - 1][1] || 0;
        s3 += skj0 - skj1;
      }

      s1 += sij0, s2 += s3 * sij0;
    }

    s0[j - 1][1] += s0[j - 1][0] = y;
    if (s1) y -= s2 / s1;
  }

  s0[j - 1][1] += s0[j - 1][0] = y;
  Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series, order);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/order/appearance.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/appearance.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/order/none.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series) {
  var peaks = series.map(peak);
  return Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series).sort(function (a, b) {
    return peaks[a] - peaks[b];
  });
});

function peak(series) {
  var i = -1,
      j = 0,
      n = series.length,
      vi,
      vj = -Infinity;

  while (++i < n) {
    if ((vi = +series[i][1]) > vj) vj = vi, j = i;
  }

  return j;
}

/***/ }),

/***/ "./node_modules/d3-shape/src/order/ascending.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/ascending.js ***!
  \******************************************************/
/*! exports provided: default, sum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return sum; });
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/order/none.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series) {
  var sums = series.map(sum);
  return Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series).sort(function (a, b) {
    return sums[a] - sums[b];
  });
});
function sum(series) {
  var s = 0,
      i = -1,
      n = series.length,
      v;

  while (++i < n) {
    if (v = +series[i][1]) s += v;
  }

  return s;
}

/***/ }),

/***/ "./node_modules/d3-shape/src/order/descending.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/descending.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-shape/src/order/ascending.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series) {
  return Object(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"])(series).reverse();
});

/***/ }),

/***/ "./node_modules/d3-shape/src/order/insideOut.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/insideOut.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _appearance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appearance */ "./node_modules/d3-shape/src/order/appearance.js");
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-shape/src/order/ascending.js");


/* harmony default export */ __webpack_exports__["default"] = (function (series) {
  var n = series.length,
      i,
      j,
      sums = series.map(_ascending__WEBPACK_IMPORTED_MODULE_1__["sum"]),
      order = Object(_appearance__WEBPACK_IMPORTED_MODULE_0__["default"])(series),
      top = 0,
      bottom = 0,
      tops = [],
      bottoms = [];

  for (i = 0; i < n; ++i) {
    j = order[i];

    if (top < bottom) {
      top += sums[j];
      tops.push(j);
    } else {
      bottom += sums[j];
      bottoms.push(j);
    }
  }

  return bottoms.reverse().concat(tops);
});

/***/ }),

/***/ "./node_modules/d3-shape/src/order/none.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/order/none.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (series) {
  var n = series.length,
      o = new Array(n);

  while (--n >= 0) {
    o[n] = n;
  }

  return o;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/order/reverse.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/order/reverse.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/order/none.js");

/* harmony default export */ __webpack_exports__["default"] = (function (series) {
  return Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series).reverse();
});

/***/ }),

/***/ "./node_modules/d3-shape/src/pie.js":
/*!******************************************!*\
  !*** ./node_modules/d3-shape/src/pie.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _descending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./descending */ "./node_modules/d3-shape/src/descending.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-shape/src/identity.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./math */ "./node_modules/d3-shape/src/math.js");




/* harmony default export */ __webpack_exports__["default"] = (function () {
  var value = _identity__WEBPACK_IMPORTED_MODULE_2__["default"],
      sortValues = _descending__WEBPACK_IMPORTED_MODULE_1__["default"],
      sort = null,
      startAngle = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(0),
      endAngle = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(_math__WEBPACK_IMPORTED_MODULE_3__["tau"]),
      padAngle = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(0);

  function pie(data) {
    var i,
        n = data.length,
        j,
        k,
        sum = 0,
        index = new Array(n),
        arcs = new Array(n),
        a0 = +startAngle.apply(this, arguments),
        da = Math.min(_math__WEBPACK_IMPORTED_MODULE_3__["tau"], Math.max(-_math__WEBPACK_IMPORTED_MODULE_3__["tau"], endAngle.apply(this, arguments) - a0)),
        a1,
        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
        pa = p * (da < 0 ? -1 : 1),
        v;

    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum += v;
      }
    } // Optionally sort the arcs by previously-computed values or by data.


    if (sortValues != null) index.sort(function (i, j) {
      return sortValues(arcs[i], arcs[j]);
    });else if (sort != null) index.sort(function (i, j) {
      return sort(data[i], data[j]);
    }); // Compute the arcs! They are stored in the original data's order.

    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }

    return arcs;
  }

  pie.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), pie) : value;
  };

  pie.sortValues = function (_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };

  pie.sort = function (_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };

  pie.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), pie) : startAngle;
  };

  pie.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), pie) : endAngle;
  };

  pie.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), pie) : padAngle;
  };

  return pie;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/point.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/point.js ***!
  \********************************************/
/*! exports provided: x, y */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return x; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return y; });
function x(p) {
  return p[0];
}
function y(p) {
  return p[1];
}

/***/ }),

/***/ "./node_modules/d3-shape/src/pointRadial.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/pointRadial.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x, y) {
  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
});

/***/ }),

/***/ "./node_modules/d3-shape/src/stack.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/stack.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/d3-shape/src/array.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _offset_none__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./offset/none */ "./node_modules/d3-shape/src/offset/none.js");
/* harmony import */ var _order_none__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./order/none */ "./node_modules/d3-shape/src/order/none.js");





function stackValue(d, key) {
  return d[key];
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var keys = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])([]),
      order = _order_none__WEBPACK_IMPORTED_MODULE_3__["default"],
      offset = _offset_none__WEBPACK_IMPORTED_MODULE_2__["default"],
      value = stackValue;

  function stack(data) {
    var kz = keys.apply(this, arguments),
        i,
        m = data.length,
        n = kz.length,
        sz = new Array(n),
        oz;

    for (i = 0; i < n; ++i) {
      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
        si[j] = sij = [0, +value(data[j], ki, j, data)];
        sij.data = data[j];
      }

      si.key = ki;
    }

    for (i = 0, oz = order(sz); i < n; ++i) {
      sz[oz[i]].index = i;
    }

    offset(sz, oz);
    return sz;
  }

  stack.keys = function (_) {
    return arguments.length ? (keys = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(_array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_)), stack) : keys;
  };

  stack.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), stack) : value;
  };

  stack.order = function (_) {
    return arguments.length ? (order = _ == null ? _order_none__WEBPACK_IMPORTED_MODULE_3__["default"] : typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(_array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_)), stack) : order;
  };

  stack.offset = function (_) {
    return arguments.length ? (offset = _ == null ? _offset_none__WEBPACK_IMPORTED_MODULE_2__["default"] : _, stack) : offset;
  };

  return stack;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-shape/src/symbol.js ***!
  \*********************************************/
/*! exports provided: symbols, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symbols", function() { return symbols; });
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _symbol_circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./symbol/circle */ "./node_modules/d3-shape/src/symbol/circle.js");
/* harmony import */ var _symbol_cross__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./symbol/cross */ "./node_modules/d3-shape/src/symbol/cross.js");
/* harmony import */ var _symbol_diamond__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./symbol/diamond */ "./node_modules/d3-shape/src/symbol/diamond.js");
/* harmony import */ var _symbol_star__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./symbol/star */ "./node_modules/d3-shape/src/symbol/star.js");
/* harmony import */ var _symbol_square__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./symbol/square */ "./node_modules/d3-shape/src/symbol/square.js");
/* harmony import */ var _symbol_triangle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./symbol/triangle */ "./node_modules/d3-shape/src/symbol/triangle.js");
/* harmony import */ var _symbol_wye__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./symbol/wye */ "./node_modules/d3-shape/src/symbol/wye.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");









var symbols = [_symbol_circle__WEBPACK_IMPORTED_MODULE_1__["default"], _symbol_cross__WEBPACK_IMPORTED_MODULE_2__["default"], _symbol_diamond__WEBPACK_IMPORTED_MODULE_3__["default"], _symbol_square__WEBPACK_IMPORTED_MODULE_5__["default"], _symbol_star__WEBPACK_IMPORTED_MODULE_4__["default"], _symbol_triangle__WEBPACK_IMPORTED_MODULE_6__["default"], _symbol_wye__WEBPACK_IMPORTED_MODULE_7__["default"]];
/* harmony default export */ __webpack_exports__["default"] = (function () {
  var type = Object(_constant__WEBPACK_IMPORTED_MODULE_8__["default"])(_symbol_circle__WEBPACK_IMPORTED_MODULE_1__["default"]),
      size = Object(_constant__WEBPACK_IMPORTED_MODULE_8__["default"])(64),
      context = null;

  function symbol() {
    var buffer;
    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])();
    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer) return context = null, buffer + "" || null;
  }

  symbol.type = function (_) {
    return arguments.length ? (type = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_8__["default"])(_), symbol) : type;
  };

  symbol.size = function (_) {
    return arguments.length ? (size = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_8__["default"])(+_), symbol) : size;
  };

  symbol.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
  };

  return symbol;
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/circle.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/circle.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-shape/src/math.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var r = Math.sqrt(size / _math__WEBPACK_IMPORTED_MODULE_0__["pi"]);
    context.moveTo(r, 0);
    context.arc(0, 0, r, 0, _math__WEBPACK_IMPORTED_MODULE_0__["tau"]);
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/cross.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/cross.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var r = Math.sqrt(size / 5) / 2;
    context.moveTo(-3 * r, -r);
    context.lineTo(-r, -r);
    context.lineTo(-r, -3 * r);
    context.lineTo(r, -3 * r);
    context.lineTo(r, -r);
    context.lineTo(3 * r, -r);
    context.lineTo(3 * r, r);
    context.lineTo(r, r);
    context.lineTo(r, 3 * r);
    context.lineTo(-r, 3 * r);
    context.lineTo(-r, r);
    context.lineTo(-3 * r, r);
    context.closePath();
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/diamond.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/diamond.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var tan30 = Math.sqrt(1 / 3),
    tan30_2 = tan30 * 2;
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var y = Math.sqrt(size / tan30_2),
        x = y * tan30;
    context.moveTo(0, -y);
    context.lineTo(x, 0);
    context.lineTo(0, y);
    context.lineTo(-x, 0);
    context.closePath();
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/square.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/square.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var w = Math.sqrt(size),
        x = -w / 2;
    context.rect(x, x, w, w);
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/star.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/star.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-shape/src/math.js");

var ka = 0.89081309152928522810,
    kr = Math.sin(_math__WEBPACK_IMPORTED_MODULE_0__["pi"] / 10) / Math.sin(7 * _math__WEBPACK_IMPORTED_MODULE_0__["pi"] / 10),
    kx = Math.sin(_math__WEBPACK_IMPORTED_MODULE_0__["tau"] / 10) * kr,
    ky = -Math.cos(_math__WEBPACK_IMPORTED_MODULE_0__["tau"] / 10) * kr;
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var r = Math.sqrt(size * ka),
        x = kx * r,
        y = ky * r;
    context.moveTo(0, -r);
    context.lineTo(x, y);

    for (var i = 1; i < 5; ++i) {
      var a = _math__WEBPACK_IMPORTED_MODULE_0__["tau"] * i / 5,
          c = Math.cos(a),
          s = Math.sin(a);
      context.lineTo(s * r, -c * r);
      context.lineTo(c * x - s * y, s * x + c * y);
    }

    context.closePath();
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/triangle.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/triangle.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var sqrt3 = Math.sqrt(3);
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var y = -Math.sqrt(size / (sqrt3 * 3));
    context.moveTo(0, y * 2);
    context.lineTo(-sqrt3 * y, -y);
    context.lineTo(sqrt3 * y, -y);
    context.closePath();
  }
});

/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/wye.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/wye.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var c = -0.5,
    s = Math.sqrt(3) / 2,
    k = 1 / Math.sqrt(12),
    a = (k / 2 + 1) * 3;
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function draw(context, size) {
    var r = Math.sqrt(size / a),
        x0 = r / 2,
        y0 = r * k,
        x1 = x0,
        y1 = r * k + r,
        x2 = -x1,
        y2 = y1;
    context.moveTo(x0, y0);
    context.lineTo(x1, y1);
    context.lineTo(x2, y2);
    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
    context.closePath();
  }
});

/***/ }),

/***/ "./node_modules/d3-time-format/src/defaultLocale.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-time-format/src/defaultLocale.js ***!
  \**********************************************************/
/*! exports provided: timeFormat, timeParse, utcFormat, utcParse, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeFormat", function() { return timeFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeParse", function() { return timeParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFormat", function() { return utcFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcParse", function() { return utcParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return defaultLocale; });
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale */ "./node_modules/d3-time-format/src/locale.js");

var locale;
var timeFormat;
var timeParse;
var utcFormat;
var utcParse;
defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});
function defaultLocale(definition) {
  locale = Object(_locale__WEBPACK_IMPORTED_MODULE_0__["default"])(definition);
  timeFormat = locale.format;
  timeParse = locale.parse;
  utcFormat = locale.utcFormat;
  utcParse = locale.utcParse;
  return locale;
}

/***/ }),

/***/ "./node_modules/d3-time-format/src/index.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-time-format/src/index.js ***!
  \**************************************************/
/*! exports provided: timeFormatDefaultLocale, timeFormat, timeParse, utcFormat, utcParse, timeFormatLocale, isoFormat, isoParse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultLocale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale */ "./node_modules/d3-time-format/src/defaultLocale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatDefaultLocale", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormat", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["timeFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeParse", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["timeParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFormat", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["utcFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcParse", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["utcParse"]; });

/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale */ "./node_modules/d3-time-format/src/locale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatLocale", function() { return _locale__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _isoFormat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isoFormat */ "./node_modules/d3-time-format/src/isoFormat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isoFormat", function() { return _isoFormat__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _isoParse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isoParse */ "./node_modules/d3-time-format/src/isoParse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isoParse", function() { return _isoParse__WEBPACK_IMPORTED_MODULE_3__["default"]; });






/***/ }),

/***/ "./node_modules/d3-time-format/src/isoFormat.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-time-format/src/isoFormat.js ***!
  \******************************************************/
/*! exports provided: isoSpecifier, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isoSpecifier", function() { return isoSpecifier; });
/* harmony import */ var _defaultLocale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale */ "./node_modules/d3-time-format/src/defaultLocale.js");

var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";

function formatIsoNative(date) {
  return date.toISOString();
}

var formatIso = Date.prototype.toISOString ? formatIsoNative : Object(_defaultLocale__WEBPACK_IMPORTED_MODULE_0__["utcFormat"])(isoSpecifier);
/* harmony default export */ __webpack_exports__["default"] = (formatIso);

/***/ }),

/***/ "./node_modules/d3-time-format/src/isoParse.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-time-format/src/isoParse.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isoFormat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isoFormat */ "./node_modules/d3-time-format/src/isoFormat.js");
/* harmony import */ var _defaultLocale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultLocale */ "./node_modules/d3-time-format/src/defaultLocale.js");



function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}

var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : Object(_defaultLocale__WEBPACK_IMPORTED_MODULE_1__["utcParse"])(_isoFormat__WEBPACK_IMPORTED_MODULE_0__["isoSpecifier"]);
/* harmony default export */ __webpack_exports__["default"] = (parseIso);

/***/ }),

/***/ "./node_modules/d3-time-format/src/locale.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-time-format/src/locale.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatLocale; });
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/index.js");


function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }

  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }

  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newYear(y) {
  return {
    y: y,
    m: 0,
    d: 1,
    H: 0,
    M: 0,
    S: 0,
    L: 0
  };
}

function formatLocale(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;
  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  }; // These recursive directive definitions must be deferred.

  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function (date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;
      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, newDate) {
    return function (string) {
      var d = newYear(1900),
          i = parseSpecifier(d, specifier, string += "", 0),
          week,
          day;
      if (i != string.length) return null; // If a UNIX timestamp is specified, return it.

      if ("Q" in d) return new Date(d.Q); // The am-pm flag is 0 for AM, and 1 for PM.

      if ("p" in d) d.H = d.H % 12 + d.p * 12; // Convert day-of-week and week-of-year to day-of-year.

      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;

        if ("Z" in d) {
          week = utcDate(newYear(d.y)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonday"].ceil(week) : Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonday"])(week);
          week = d3_time__WEBPACK_IMPORTED_MODULE_0__["utcDay"].offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = newDate(newYear(d.y)), day = week.getDay();
          week = day > 4 || day === 0 ? d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonday"].ceil(week) : Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonday"])(week);
          week = d3_time__WEBPACK_IMPORTED_MODULE_0__["timeDay"].offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      } // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.


      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      } // Otherwise, all fields are in local time.


      return newDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);

      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || (j = parse(d, string, j)) < 0) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  return {
    format: function format(specifier) {
      var f = newFormat(specifier += "", formats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    parse: function parse(specifier) {
      var p = newParse(specifier += "", localDate);

      p.toString = function () {
        return specifier;
      };

      return p;
    },
    utcFormat: function utcFormat(specifier) {
      var f = newFormat(specifier += "", utcFormats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    utcParse: function utcParse(specifier) {
      var p = newParse(specifier, utcDate);

      p.toString = function () {
        return specifier;
      };

      return p;
    }
  };
}
var pads = {
  "-": "",
  "_": " ",
  "0": "0"
},
    numberRe = /^\s*\d+/,
    // note: ignores next directive
percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  var map = {},
      i = -1,
      n = names.length;

  while (++i < n) {
    map[names[i].toLowerCase()] = i;
  }

  return map;
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0] * 1000, i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return pad(1 + d3_time__WEBPACK_IMPORTED_MODULE_0__["timeDay"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeSunday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d), p, 2);
}

function formatWeekNumberISO(d, p) {
  var day = d.getDay();
  d = day >= 4 || day === 0 ? Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"])(d) : d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"].ceil(d);
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d) + (Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d), p, 2);
}

function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return pad(1 + d3_time__WEBPACK_IMPORTED_MODULE_0__["utcDay"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcSunday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d), p, 2);
}

function formatUTCWeekNumberISO(d, p) {
  var day = d.getUTCDay();
  d = day >= 4 || day === 0 ? Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"])(d) : d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"].ceil(d);
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d) + (Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d), p, 2);
}

function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}

/***/ }),

/***/ "./node_modules/d3-time/src/day.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-time/src/day.js ***!
  \*****************************************/
/*! exports provided: default, days */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "days", function() { return days; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var day = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setDate(date.getDate() + step);
}, function (start, end) {
  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationDay"];
}, function (date) {
  return date.getDate() - 1;
});
/* harmony default export */ __webpack_exports__["default"] = (day);
var days = day.range;

/***/ }),

/***/ "./node_modules/d3-time/src/duration.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-time/src/duration.js ***!
  \**********************************************/
/*! exports provided: durationSecond, durationMinute, durationHour, durationDay, durationWeek */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationSecond", function() { return durationSecond; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationMinute", function() { return durationMinute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationHour", function() { return durationHour; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationDay", function() { return durationDay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationWeek", function() { return durationWeek; });
var durationSecond = 1e3;
var durationMinute = 6e4;
var durationHour = 36e5;
var durationDay = 864e5;
var durationWeek = 6048e5;

/***/ }),

/***/ "./node_modules/d3-time/src/hour.js":
/*!******************************************!*\
  !*** ./node_modules/d3-time/src/hour.js ***!
  \******************************************/
/*! exports provided: default, hours */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hours", function() { return hours; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var hour = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration__WEBPACK_IMPORTED_MODULE_1__["durationSecond"] - date.getMinutes() * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]);
}, function (date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationHour"]);
}, function (start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationHour"];
}, function (date) {
  return date.getHours();
});
/* harmony default export */ __webpack_exports__["default"] = (hour);
var hours = hour.range;

/***/ }),

/***/ "./node_modules/d3-time/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-time/src/index.js ***!
  \*******************************************/
/*! exports provided: timeInterval, timeMillisecond, timeMilliseconds, utcMillisecond, utcMilliseconds, timeSecond, timeSeconds, utcSecond, utcSeconds, timeMinute, timeMinutes, timeHour, timeHours, timeDay, timeDays, timeWeek, timeWeeks, timeSunday, timeSundays, timeMonday, timeMondays, timeTuesday, timeTuesdays, timeWednesday, timeWednesdays, timeThursday, timeThursdays, timeFriday, timeFridays, timeSaturday, timeSaturdays, timeMonth, timeMonths, timeYear, timeYears, utcMinute, utcMinutes, utcHour, utcHours, utcDay, utcDays, utcWeek, utcWeeks, utcSunday, utcSundays, utcMonday, utcMondays, utcTuesday, utcTuesdays, utcWednesday, utcWednesdays, utcThursday, utcThursdays, utcFriday, utcFridays, utcSaturday, utcSaturdays, utcMonth, utcMonths, utcYear, utcYears */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return _interval__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _millisecond__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./millisecond */ "./node_modules/d3-time/src/millisecond.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMillisecond", function() { return _millisecond__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMilliseconds", function() { return _millisecond__WEBPACK_IMPORTED_MODULE_1__["milliseconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMillisecond", function() { return _millisecond__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMilliseconds", function() { return _millisecond__WEBPACK_IMPORTED_MODULE_1__["milliseconds"]; });

/* harmony import */ var _second__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./second */ "./node_modules/d3-time/src/second.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSecond", function() { return _second__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSeconds", function() { return _second__WEBPACK_IMPORTED_MODULE_2__["seconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSecond", function() { return _second__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSeconds", function() { return _second__WEBPACK_IMPORTED_MODULE_2__["seconds"]; });

/* harmony import */ var _minute__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./minute */ "./node_modules/d3-time/src/minute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMinute", function() { return _minute__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMinutes", function() { return _minute__WEBPACK_IMPORTED_MODULE_3__["minutes"]; });

/* harmony import */ var _hour__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hour */ "./node_modules/d3-time/src/hour.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeHour", function() { return _hour__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeHours", function() { return _hour__WEBPACK_IMPORTED_MODULE_4__["hours"]; });

/* harmony import */ var _day__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./day */ "./node_modules/d3-time/src/day.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeDay", function() { return _day__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeDays", function() { return _day__WEBPACK_IMPORTED_MODULE_5__["days"]; });

/* harmony import */ var _week__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./week */ "./node_modules/d3-time/src/week.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWeek", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["sunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWeeks", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["sundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSunday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["sunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSundays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["sundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["monday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMondays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["mondays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTuesday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["tuesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTuesdays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["tuesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWednesday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["wednesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWednesdays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["wednesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeThursday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["thursday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeThursdays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["thursdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFriday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["friday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFridays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["fridays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSaturday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["saturday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSaturdays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["saturdays"]; });

/* harmony import */ var _month__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./month */ "./node_modules/d3-time/src/month.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonth", function() { return _month__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonths", function() { return _month__WEBPACK_IMPORTED_MODULE_7__["months"]; });

/* harmony import */ var _year__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./year */ "./node_modules/d3-time/src/year.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeYear", function() { return _year__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeYears", function() { return _year__WEBPACK_IMPORTED_MODULE_8__["years"]; });

/* harmony import */ var _utcMinute__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utcMinute */ "./node_modules/d3-time/src/utcMinute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMinute", function() { return _utcMinute__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMinutes", function() { return _utcMinute__WEBPACK_IMPORTED_MODULE_9__["utcMinutes"]; });

/* harmony import */ var _utcHour__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utcHour */ "./node_modules/d3-time/src/utcHour.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcHour", function() { return _utcHour__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcHours", function() { return _utcHour__WEBPACK_IMPORTED_MODULE_10__["utcHours"]; });

/* harmony import */ var _utcDay__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utcDay */ "./node_modules/d3-time/src/utcDay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcDay", function() { return _utcDay__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcDays", function() { return _utcDay__WEBPACK_IMPORTED_MODULE_11__["utcDays"]; });

/* harmony import */ var _utcWeek__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utcWeek */ "./node_modules/d3-time/src/utcWeek.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWeek", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWeeks", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSunday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSundays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcMonday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMondays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcMondays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTuesday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcTuesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTuesdays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcTuesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWednesday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcWednesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWednesdays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcWednesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcThursday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcThursday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcThursdays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcThursdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFriday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcFriday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFridays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcFridays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSaturday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSaturday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSaturdays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSaturdays"]; });

/* harmony import */ var _utcMonth__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utcMonth */ "./node_modules/d3-time/src/utcMonth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonth", function() { return _utcMonth__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonths", function() { return _utcMonth__WEBPACK_IMPORTED_MODULE_13__["utcMonths"]; });

/* harmony import */ var _utcYear__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utcYear */ "./node_modules/d3-time/src/utcYear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcYear", function() { return _utcYear__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcYears", function() { return _utcYear__WEBPACK_IMPORTED_MODULE_14__["utcYears"]; });

















/***/ }),

/***/ "./node_modules/d3-time/src/interval.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-time/src/interval.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return newInterval; });
var t0 = new Date(),
    t1 = new Date();
function newInterval(floori, offseti, count, field) {
  function interval(date) {
    return floori(date = new Date(+date)), date;
  }

  interval.floor = interval;

  interval.ceil = function (date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function (date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function (date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function (start, stop, step) {
    var range = [],
        previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date

    do {
      range.push(previous = new Date(+start)), offseti(start, step), floori(start);
    } while (previous < start && start < stop);

    return range;
  };

  interval.filter = function (test) {
    return newInterval(function (date) {
      if (date >= date) while (floori(date), !test(date)) {
        date.setTime(date - 1);
      }
    }, function (date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty

        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty

        }
      }
    });
  };

  if (count) {
    interval.count = function (start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };

    interval.every = function (step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {
        return field(d) % step === 0;
      } : function (d) {
        return interval.count(0, d) % step === 0;
      });
    };
  }

  return interval;
}

/***/ }),

/***/ "./node_modules/d3-time/src/millisecond.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-time/src/millisecond.js ***!
  \*************************************************/
/*! exports provided: default, milliseconds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "milliseconds", function() { return milliseconds; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");

var millisecond = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function () {// noop
}, function (date, step) {
  date.setTime(+date + step);
}, function (start, end) {
  return end - start;
}); // An optimized implementation for this simple case.

millisecond.every = function (k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
    date.setTime(Math.floor(date / k) * k);
  }, function (date, step) {
    date.setTime(+date + step * k);
  }, function (start, end) {
    return (end - start) / k;
  });
};

/* harmony default export */ __webpack_exports__["default"] = (millisecond);
var milliseconds = millisecond.range;

/***/ }),

/***/ "./node_modules/d3-time/src/minute.js":
/*!********************************************!*\
  !*** ./node_modules/d3-time/src/minute.js ***!
  \********************************************/
/*! exports provided: default, minutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "minutes", function() { return minutes; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var minute = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration__WEBPACK_IMPORTED_MODULE_1__["durationSecond"]);
}, function (date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]);
}, function (start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"];
}, function (date) {
  return date.getMinutes();
});
/* harmony default export */ __webpack_exports__["default"] = (minute);
var minutes = minute.range;

/***/ }),

/***/ "./node_modules/d3-time/src/month.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-time/src/month.js ***!
  \*******************************************/
/*! exports provided: default, months */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "months", function() { return months; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");

var month = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setMonth(date.getMonth() + step);
}, function (start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function (date) {
  return date.getMonth();
});
/* harmony default export */ __webpack_exports__["default"] = (month);
var months = month.range;

/***/ }),

/***/ "./node_modules/d3-time/src/second.js":
/*!********************************************!*\
  !*** ./node_modules/d3-time/src/second.js ***!
  \********************************************/
/*! exports provided: default, seconds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "seconds", function() { return seconds; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var second = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setTime(date - date.getMilliseconds());
}, function (date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationSecond"]);
}, function (start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationSecond"];
}, function (date) {
  return date.getUTCSeconds();
});
/* harmony default export */ __webpack_exports__["default"] = (second);
var seconds = second.range;

/***/ }),

/***/ "./node_modules/d3-time/src/utcDay.js":
/*!********************************************!*\
  !*** ./node_modules/d3-time/src/utcDay.js ***!
  \********************************************/
/*! exports provided: default, utcDays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcDays", function() { return utcDays; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var utcDay = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function (start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationDay"];
}, function (date) {
  return date.getUTCDate() - 1;
});
/* harmony default export */ __webpack_exports__["default"] = (utcDay);
var utcDays = utcDay.range;

/***/ }),

/***/ "./node_modules/d3-time/src/utcHour.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-time/src/utcHour.js ***!
  \*********************************************/
/*! exports provided: default, utcHours */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcHours", function() { return utcHours; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var utcHour = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setUTCMinutes(0, 0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationHour"]);
}, function (start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationHour"];
}, function (date) {
  return date.getUTCHours();
});
/* harmony default export */ __webpack_exports__["default"] = (utcHour);
var utcHours = utcHour.range;

/***/ }),

/***/ "./node_modules/d3-time/src/utcMinute.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-time/src/utcMinute.js ***!
  \***********************************************/
/*! exports provided: default, utcMinutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMinutes", function() { return utcMinutes; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");


var utcMinute = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setUTCSeconds(0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]);
}, function (start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"];
}, function (date) {
  return date.getUTCMinutes();
});
/* harmony default export */ __webpack_exports__["default"] = (utcMinute);
var utcMinutes = utcMinute.range;

/***/ }),

/***/ "./node_modules/d3-time/src/utcMonth.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-time/src/utcMonth.js ***!
  \**********************************************/
/*! exports provided: default, utcMonths */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMonths", function() { return utcMonths; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");

var utcMonth = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function (start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function (date) {
  return date.getUTCMonth();
});
/* harmony default export */ __webpack_exports__["default"] = (utcMonth);
var utcMonths = utcMonth.range;

/***/ }),

/***/ "./node_modules/d3-time/src/utcWeek.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-time/src/utcWeek.js ***!
  \*********************************************/
/*! exports provided: utcSunday, utcMonday, utcTuesday, utcWednesday, utcThursday, utcFriday, utcSaturday, utcSundays, utcMondays, utcTuesdays, utcWednesdays, utcThursdays, utcFridays, utcSaturdays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSunday", function() { return utcSunday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMonday", function() { return utcMonday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcTuesday", function() { return utcTuesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcWednesday", function() { return utcWednesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcThursday", function() { return utcThursday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFriday", function() { return utcFriday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSaturday", function() { return utcSaturday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSundays", function() { return utcSundays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMondays", function() { return utcMondays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcTuesdays", function() { return utcTuesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcWednesdays", function() { return utcWednesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcThursdays", function() { return utcThursdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFridays", function() { return utcFridays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSaturdays", function() { return utcSaturdays; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");



function utcWeekday(i) {
  return Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function (start, end) {
    return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationWeek"];
  });
}

var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);
var utcSundays = utcSunday.range;
var utcMondays = utcMonday.range;
var utcTuesdays = utcTuesday.range;
var utcWednesdays = utcWednesday.range;
var utcThursdays = utcThursday.range;
var utcFridays = utcFriday.range;
var utcSaturdays = utcSaturday.range;

/***/ }),

/***/ "./node_modules/d3-time/src/utcYear.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-time/src/utcYear.js ***!
  \*********************************************/
/*! exports provided: default, utcYears */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcYears", function() { return utcYears; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");

var utcYear = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function (start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function (date) {
  return date.getUTCFullYear();
}); // An optimized implementation for this simple case.

utcYear.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (utcYear);
var utcYears = utcYear.range;

/***/ }),

/***/ "./node_modules/d3-time/src/week.js":
/*!******************************************!*\
  !*** ./node_modules/d3-time/src/week.js ***!
  \******************************************/
/*! exports provided: sunday, monday, tuesday, wednesday, thursday, friday, saturday, sundays, mondays, tuesdays, wednesdays, thursdays, fridays, saturdays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sunday", function() { return sunday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monday", function() { return monday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tuesday", function() { return tuesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wednesday", function() { return wednesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thursday", function() { return thursday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "friday", function() { return friday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saturday", function() { return saturday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sundays", function() { return sundays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mondays", function() { return mondays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tuesdays", function() { return tuesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wednesdays", function() { return wednesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thursdays", function() { return thursdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fridays", function() { return fridays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saturdays", function() { return saturdays; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");



function weekday(i) {
  return Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function (start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationWeek"];
  });
}

var sunday = weekday(0);
var monday = weekday(1);
var tuesday = weekday(2);
var wednesday = weekday(3);
var thursday = weekday(4);
var friday = weekday(5);
var saturday = weekday(6);
var sundays = sunday.range;
var mondays = monday.range;
var tuesdays = tuesday.range;
var wednesdays = wednesday.range;
var thursdays = thursday.range;
var fridays = friday.range;
var saturdays = saturday.range;

/***/ }),

/***/ "./node_modules/d3-time/src/year.js":
/*!******************************************!*\
  !*** ./node_modules/d3-time/src/year.js ***!
  \******************************************/
/*! exports provided: default, years */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "years", function() { return years; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");

var year = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function (start, end) {
  return end.getFullYear() - start.getFullYear();
}, function (date) {
  return date.getFullYear();
}); // An optimized implementation for this simple case.

year.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function (date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (year);
var years = year.range;

/***/ }),

/***/ "./node_modules/d3-timer/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-timer/src/index.js ***!
  \********************************************/
/*! exports provided: now, timer, timerFlush, timeout, interval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer */ "./node_modules/d3-timer/src/timer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "now", function() { return _timer__WEBPACK_IMPORTED_MODULE_0__["now"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return _timer__WEBPACK_IMPORTED_MODULE_0__["timer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timerFlush", function() { return _timer__WEBPACK_IMPORTED_MODULE_0__["timerFlush"]; });

/* harmony import */ var _timeout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./timeout */ "./node_modules/d3-timer/src/timeout.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return _timeout__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-timer/src/interval.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return _interval__WEBPACK_IMPORTED_MODULE_2__["default"]; });





/***/ }),

/***/ "./node_modules/d3-timer/src/interval.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-timer/src/interval.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer */ "./node_modules/d3-timer/src/timer.js");

/* harmony default export */ __webpack_exports__["default"] = (function (callback, delay, time) {
  var t = new _timer__WEBPACK_IMPORTED_MODULE_0__["Timer"](),
      total = delay;
  if (delay == null) return t.restart(callback, delay, time), t;
  delay = +delay, time = time == null ? Object(_timer__WEBPACK_IMPORTED_MODULE_0__["now"])() : +time;
  t.restart(function tick(elapsed) {
    elapsed += total;
    t.restart(tick, total += delay, time);
    callback(elapsed);
  }, delay, time);
  return t;
});

/***/ }),

/***/ "./node_modules/d3-timer/src/timeout.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-timer/src/timeout.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer */ "./node_modules/d3-timer/src/timer.js");

/* harmony default export */ __webpack_exports__["default"] = (function (callback, delay, time) {
  var t = new _timer__WEBPACK_IMPORTED_MODULE_0__["Timer"]();
  delay = delay == null ? 0 : +delay;
  t.restart(function (elapsed) {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
});

/***/ }),

/***/ "./node_modules/d3-timer/src/timer.js":
/*!********************************************!*\
  !*** ./node_modules/d3-timer/src/timer.js ***!
  \********************************************/
/*! exports provided: now, Timer, timer, timerFlush */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "now", function() { return now; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Timer", function() { return Timer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return timer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timerFlush", function() { return timerFlush; });
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var frame = 0,
    // is an animation frame pending?
timeout = 0,
    // is a timeout pending?
interval = 0,
    // are any timers active?
pokeDelay = 1000,
    // how frequently we check for clock skew
taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = (typeof performance === "undefined" ? "undefined" : _typeof(performance)) === "object" && performance.now ? performance : Date,
    setFrame = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {
  setTimeout(f, 17);
};
function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call = this._time = this._next = null;
}
Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function restart(callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);

    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;else taskHead = this;
      taskTail = this;
    }

    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function stop() {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};
function timer(callback, delay, time) {
  var t = new Timer();
  t.restart(callback, delay, time);
  return t;
}
function timerFlush() {
  now(); // Get the current time, if not already set.

  ++frame; // Pretend we’ve set an alarm, if we haven’t already.

  var t = taskHead,
      e;

  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
    t = t._next;
  }

  --frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout = 0;

  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(),
      delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0,
      t1 = taskHead,
      t2,
      time = Infinity;

  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }

  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (frame) return; // Soonest alarm already set, or will be.

  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.

  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}

/***/ }),

/***/ "./node_modules/d3-transition/src/active.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-transition/src/active.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transition_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transition/index */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _transition_schedule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transition/schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


var root = [null];
/* harmony default export */ __webpack_exports__["default"] = (function (node, name) {
  var schedules = node.__transition,
      schedule,
      i;

  if (schedules) {
    name = name == null ? null : name + "";

    for (i in schedules) {
      if ((schedule = schedules[i]).state > _transition_schedule__WEBPACK_IMPORTED_MODULE_1__["SCHEDULED"] && schedule.name === name) {
        return new _transition_index__WEBPACK_IMPORTED_MODULE_0__["Transition"]([[node]], root, name, +i);
      }
    }
  }

  return null;
});

/***/ }),

/***/ "./node_modules/d3-transition/src/index.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-transition/src/index.js ***!
  \*************************************************/
/*! exports provided: transition, active, interrupt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _selection_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/index */ "./node_modules/d3-transition/src/selection/index.js");
/* harmony import */ var _transition_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transition/index */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transition", function() { return _transition_index__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _active__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./active */ "./node_modules/d3-transition/src/active.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "active", function() { return _active__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _interrupt__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interrupt */ "./node_modules/d3-transition/src/interrupt.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interrupt", function() { return _interrupt__WEBPACK_IMPORTED_MODULE_3__["default"]; });






/***/ }),

/***/ "./node_modules/d3-transition/src/interrupt.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-transition/src/interrupt.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transition_schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transition/schedule */ "./node_modules/d3-transition/src/transition/schedule.js");

/* harmony default export */ __webpack_exports__["default"] = (function (node, name) {
  var schedules = node.__transition,
      schedule,
      active,
      empty = true,
      i;
  if (!schedules) return;
  name = name == null ? null : name + "";

  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) {
      empty = false;
      continue;
    }

    active = schedule.state > _transition_schedule__WEBPACK_IMPORTED_MODULE_0__["STARTING"] && schedule.state < _transition_schedule__WEBPACK_IMPORTED_MODULE_0__["ENDING"];
    schedule.state = _transition_schedule__WEBPACK_IMPORTED_MODULE_0__["ENDED"];
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }

  if (empty) delete node.__transition;
});

/***/ }),

/***/ "./node_modules/d3-transition/src/selection/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/selection/index.js ***!
  \***********************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _interrupt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interrupt */ "./node_modules/d3-transition/src/selection/interrupt.js");
/* harmony import */ var _transition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transition */ "./node_modules/d3-transition/src/selection/transition.js");



d3_selection__WEBPACK_IMPORTED_MODULE_0__["selection"].prototype.interrupt = _interrupt__WEBPACK_IMPORTED_MODULE_1__["default"];
d3_selection__WEBPACK_IMPORTED_MODULE_0__["selection"].prototype.transition = _transition__WEBPACK_IMPORTED_MODULE_2__["default"];

/***/ }),

/***/ "./node_modules/d3-transition/src/selection/interrupt.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-transition/src/selection/interrupt.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _interrupt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interrupt */ "./node_modules/d3-transition/src/interrupt.js");

/* harmony default export */ __webpack_exports__["default"] = (function (name) {
  return this.each(function () {
    Object(_interrupt__WEBPACK_IMPORTED_MODULE_0__["default"])(this, name);
  });
});

/***/ }),

/***/ "./node_modules/d3-transition/src/selection/transition.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/selection/transition.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transition_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transition/index */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _transition_schedule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transition/schedule */ "./node_modules/d3-transition/src/transition/schedule.js");
/* harmony import */ var d3_ease__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-ease */ "./node_modules/d3-ease/src/index.js");
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/index.js");




var defaultTiming = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: d3_ease__WEBPACK_IMPORTED_MODULE_2__["easeCubicInOut"]
};

function inherit(node, id) {
  var timing;

  while (!(timing = node.__transition) || !(timing = timing[id])) {
    if (!(node = node.parentNode)) {
      return defaultTiming.time = Object(d3_timer__WEBPACK_IMPORTED_MODULE_3__["now"])(), defaultTiming;
    }
  }

  return timing;
}

/* harmony default export */ __webpack_exports__["default"] = (function (name) {
  var id, timing;

  if (name instanceof _transition_index__WEBPACK_IMPORTED_MODULE_0__["Transition"]) {
    id = name._id, name = name._name;
  } else {
    id = Object(_transition_index__WEBPACK_IMPORTED_MODULE_0__["newId"])(), (timing = defaultTiming).time = Object(d3_timer__WEBPACK_IMPORTED_MODULE_3__["now"])(), name = name == null ? null : name + "";
  }

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        Object(_transition_schedule__WEBPACK_IMPORTED_MODULE_1__["default"])(node, name, id, i, group, timing || inherit(node, id));
      }
    }
  }

  return new _transition_index__WEBPACK_IMPORTED_MODULE_0__["Transition"](groups, this._parents, name, id);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/attr.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/attr.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _tween__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tween */ "./node_modules/d3-transition/src/transition/tween.js");
/* harmony import */ var _interpolate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interpolate */ "./node_modules/d3-transition/src/transition/interpolate.js");





function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrConstantNS(fullname, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function attrFunctionNS(fullname, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value) {
  var fullname = Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["namespace"])(name),
      i = fullname === "transform" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["interpolateTransformSvg"] : _interpolate__WEBPACK_IMPORTED_MODULE_3__["default"];
  return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, Object(_tween__WEBPACK_IMPORTED_MODULE_2__["tweenValue"])(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/attrTween.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/attrTween.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");


function attrInterpolate(name, i) {
  return function (t) {
    this.setAttribute(name, i(t));
  };
}

function attrInterpolateNS(fullname, i) {
  return function (t) {
    this.setAttributeNS(fullname.space, fullname.local, i(t));
  };
}

function attrTweenNS(fullname, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function attrTween(name, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value) {
  var key = "attr." + name;
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  var fullname = Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["namespace"])(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/delay.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/delay.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


function delayFunction(id, value) {
  return function () {
    Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["init"])(this, id).delay = +value.apply(this, arguments);
  };
}

function delayConstant(id, value) {
  return value = +value, function () {
    Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["init"])(this, id).delay = value;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["get"])(this.node(), id).delay;
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/duration.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/duration.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


function durationFunction(id, value) {
  return function () {
    Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id).duration = +value.apply(this, arguments);
  };
}

function durationConstant(id, value) {
  return value = +value, function () {
    Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id).duration = value;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["get"])(this.node(), id).duration;
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/ease.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/ease.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


function easeConstant(id, value) {
  if (typeof value !== "function") throw new Error();
  return function () {
    Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id).ease = value;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  var id = this._id;
  return arguments.length ? this.each(easeConstant(id, value)) : Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["get"])(this.node(), id).ease;
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/end.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/end.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var on0,
      on1,
      that = this,
      id = that._id,
      size = that.size();
  return new Promise(function (resolve, reject) {
    var cancel = {
      value: reject
    },
        end = {
      value: function value() {
        if (--size === 0) resolve();
      }
    };
    that.each(function () {
      var schedule = Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id),
          on = schedule.on; // If this node shared a dispatch with the previous node,
      // just assign the updated shared dispatch and we’re done!
      // Otherwise, copy-on-write.

      if (on !== on0) {
        on1 = (on0 = on).copy();

        on1._.cancel.push(cancel);

        on1._.interrupt.push(cancel);

        on1._.end.push(end);
      }

      schedule.on = on1;
    });
  });
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/filter.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/filter.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-transition/src/transition/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function (match) {
  if (typeof match !== "function") match = Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["matcher"])(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_1__["Transition"](subgroups, this._parents, this._name, this._id);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/index.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/index.js ***!
  \************************************************************/
/*! exports provided: Transition, default, newId */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Transition", function() { return Transition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return transition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newId", function() { return newId; });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _attr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./attr */ "./node_modules/d3-transition/src/transition/attr.js");
/* harmony import */ var _attrTween__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./attrTween */ "./node_modules/d3-transition/src/transition/attrTween.js");
/* harmony import */ var _delay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./delay */ "./node_modules/d3-transition/src/transition/delay.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-transition/src/transition/duration.js");
/* harmony import */ var _ease__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ease */ "./node_modules/d3-transition/src/transition/ease.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./filter */ "./node_modules/d3-transition/src/transition/filter.js");
/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./merge */ "./node_modules/d3-transition/src/transition/merge.js");
/* harmony import */ var _on__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./on */ "./node_modules/d3-transition/src/transition/on.js");
/* harmony import */ var _remove__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./remove */ "./node_modules/d3-transition/src/transition/remove.js");
/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./select */ "./node_modules/d3-transition/src/transition/select.js");
/* harmony import */ var _selectAll__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./selectAll */ "./node_modules/d3-transition/src/transition/selectAll.js");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./selection */ "./node_modules/d3-transition/src/transition/selection.js");
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./style */ "./node_modules/d3-transition/src/transition/style.js");
/* harmony import */ var _styleTween__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./styleTween */ "./node_modules/d3-transition/src/transition/styleTween.js");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./text */ "./node_modules/d3-transition/src/transition/text.js");
/* harmony import */ var _transition__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./transition */ "./node_modules/d3-transition/src/transition/transition.js");
/* harmony import */ var _tween__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./tween */ "./node_modules/d3-transition/src/transition/tween.js");
/* harmony import */ var _end__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./end */ "./node_modules/d3-transition/src/transition/end.js");



















var id = 0;
function Transition(groups, parents, name, id) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id;
}
function transition(name) {
  return Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["selection"])().transition(name);
}
function newId() {
  return ++id;
}
var selection_prototype = d3_selection__WEBPACK_IMPORTED_MODULE_0__["selection"].prototype;
Transition.prototype = transition.prototype = {
  constructor: Transition,
  select: _select__WEBPACK_IMPORTED_MODULE_10__["default"],
  selectAll: _selectAll__WEBPACK_IMPORTED_MODULE_11__["default"],
  filter: _filter__WEBPACK_IMPORTED_MODULE_6__["default"],
  merge: _merge__WEBPACK_IMPORTED_MODULE_7__["default"],
  selection: _selection__WEBPACK_IMPORTED_MODULE_12__["default"],
  transition: _transition__WEBPACK_IMPORTED_MODULE_16__["default"],
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: _on__WEBPACK_IMPORTED_MODULE_8__["default"],
  attr: _attr__WEBPACK_IMPORTED_MODULE_1__["default"],
  attrTween: _attrTween__WEBPACK_IMPORTED_MODULE_2__["default"],
  style: _style__WEBPACK_IMPORTED_MODULE_13__["default"],
  styleTween: _styleTween__WEBPACK_IMPORTED_MODULE_14__["default"],
  text: _text__WEBPACK_IMPORTED_MODULE_15__["default"],
  remove: _remove__WEBPACK_IMPORTED_MODULE_9__["default"],
  tween: _tween__WEBPACK_IMPORTED_MODULE_17__["default"],
  delay: _delay__WEBPACK_IMPORTED_MODULE_3__["default"],
  duration: _duration__WEBPACK_IMPORTED_MODULE_4__["default"],
  ease: _ease__WEBPACK_IMPORTED_MODULE_5__["default"],
  end: _end__WEBPACK_IMPORTED_MODULE_18__["default"]
};

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/interpolate.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/interpolate.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function (a, b) {
  var c;
  return (typeof b === "number" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateNumber"] : b instanceof d3_color__WEBPACK_IMPORTED_MODULE_0__["color"] ? d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateRgb"] : (c = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["color"])(b)) ? (b = c, d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateRgb"]) : d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateString"])(a, b);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/merge.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/merge.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-transition/src/transition/index.js");

/* harmony default export */ __webpack_exports__["default"] = (function (transition) {
  if (transition._id !== this._id) throw new Error();

  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Transition"](merges, this._parents, this._name, this._id);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/on.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/on.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function (t) {
    var i = t.indexOf(".");
    if (i >= 0) t = t.slice(0, i);
    return !t || t === "start";
  });
}

function onFunction(id, name, listener) {
  var on0,
      on1,
      sit = start(name) ? _schedule__WEBPACK_IMPORTED_MODULE_0__["init"] : _schedule__WEBPACK_IMPORTED_MODULE_0__["set"];
  return function () {
    var schedule = sit(this, id),
        on = schedule.on; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
    schedule.on = on1;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, listener) {
  var id = this._id;
  return arguments.length < 2 ? Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["get"])(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/remove.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/remove.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function removeFunction(id) {
  return function () {
    var parent = this.parentNode;

    for (var i in this.__transition) {
      if (+i !== id) return;
    }

    if (parent) parent.removeChild(this);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  return this.on("end.remove", removeFunction(this._id));
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/schedule.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/schedule.js ***!
  \***************************************************************/
/*! exports provided: CREATED, SCHEDULED, STARTING, STARTED, RUNNING, ENDING, ENDED, default, init, set, get */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CREATED", function() { return CREATED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCHEDULED", function() { return SCHEDULED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STARTING", function() { return STARTING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STARTED", function() { return STARTED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RUNNING", function() { return RUNNING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ENDING", function() { return ENDING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ENDED", function() { return ENDED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get", function() { return get; });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/index.js");


var emptyOn = Object(d3_dispatch__WEBPACK_IMPORTED_MODULE_0__["dispatch"])("start", "end", "cancel", "interrupt");
var emptyTween = [];
var CREATED = 0;
var SCHEDULED = 1;
var STARTING = 2;
var STARTED = 3;
var RUNNING = 4;
var ENDING = 5;
var ENDED = 6;
/* harmony default export */ __webpack_exports__["default"] = (function (node, name, id, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules) node.__transition = {};else if (id in schedules) return;
  create(node, id, {
    name: name,
    index: index,
    // For context during callback.
    group: group,
    // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
});
function init(node, id) {
  var schedule = get(node, id);
  if (schedule.state > CREATED) throw new Error("too late; already scheduled");
  return schedule;
}
function set(node, id) {
  var schedule = get(node, id);
  if (schedule.state > STARTED) throw new Error("too late; already running");
  return schedule;
}
function get(node, id) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
  return schedule;
}

function create(node, id, self) {
  var schedules = node.__transition,
      tween; // Initialize the self timer when the transition is created.
  // Note the actual delay is not known until the first callback!

  schedules[id] = self;
  self.timer = Object(d3_timer__WEBPACK_IMPORTED_MODULE_1__["timer"])(schedule, 0, self.time);

  function schedule(elapsed) {
    self.state = SCHEDULED;
    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.

    if (self.delay <= elapsed) start(elapsed - self.delay);
  }

  function start(elapsed) {
    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.

    if (self.state !== SCHEDULED) return stop();

    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,
      // defer starting an interrupting transition until that transition has a
      // chance to tick (and possibly end); see d3/d3-transition#54!

      if (o.state === STARTED) return Object(d3_timer__WEBPACK_IMPORTED_MODULE_1__["timeout"])(start); // Interrupt the active transition, if any.

      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      } // Cancel any pre-empted transitions.
      else if (+i < id) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("cancel", node, node.__data__, o.index, o.group);
          delete schedules[i];
        }
    } // Defer the first tick to end of the current frame; see d3/d3#1576.
    // Note the transition may be canceled after start and before the first tick!
    // Note this must be scheduled before the start event; see d3/d3-transition#16!
    // Assuming this is successful, subsequent callbacks go straight to tick.


    Object(d3_timer__WEBPACK_IMPORTED_MODULE_1__["timeout"])(function () {
      if (self.state === STARTED) {
        self.state = RUNNING;
        self.timer.restart(tick, self.delay, self.time);
        tick(elapsed);
      }
    }); // Dispatch the start event.
    // Note this must be done before the tween are initialized.

    self.state = STARTING;
    self.on.call("start", node, node.__data__, self.index, self.group);
    if (self.state !== STARTING) return; // interrupted

    self.state = STARTED; // Initialize the tween, deleting null tween.

    tween = new Array(n = self.tween.length);

    for (i = 0, j = -1; i < n; ++i) {
      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
        tween[++j] = o;
      }
    }

    tween.length = j + 1;
  }

  function tick(elapsed) {
    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
        i = -1,
        n = tween.length;

    while (++i < n) {
      tween[i].call(node, t);
    } // Dispatch the end event.


    if (self.state === ENDING) {
      self.on.call("end", node, node.__data__, self.index, self.group);
      stop();
    }
  }

  function stop() {
    self.state = ENDED;
    self.timer.stop();
    delete schedules[id];

    for (var i in schedules) {
      return;
    } // eslint-disable-line no-unused-vars


    delete node.__transition;
  }
}

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/select.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/select.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");



/* harmony default export */ __webpack_exports__["default"] = (function (select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["selector"])(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        Object(_schedule__WEBPACK_IMPORTED_MODULE_2__["default"])(subgroup[i], name, id, i, subgroup, Object(_schedule__WEBPACK_IMPORTED_MODULE_2__["get"])(node, id));
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_1__["Transition"](subgroups, this._parents, name, id);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/selectAll.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/selectAll.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");



/* harmony default export */ __webpack_exports__["default"] = (function (select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = Object(d3_selection__WEBPACK_IMPORTED_MODULE_0__["selectorAll"])(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children = select.call(node, node.__data__, i, group), child, inherit = Object(_schedule__WEBPACK_IMPORTED_MODULE_2__["get"])(node, id), k = 0, l = children.length; k < l; ++k) {
          if (child = children[k]) {
            Object(_schedule__WEBPACK_IMPORTED_MODULE_2__["default"])(child, name, id, k, children, inherit);
          }
        }

        subgroups.push(children);
        parents.push(node);
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_1__["Transition"](subgroups, parents, name, id);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/selection.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/selection.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");

var Selection = d3_selection__WEBPACK_IMPORTED_MODULE_0__["selection"].prototype.constructor;
/* harmony default export */ __webpack_exports__["default"] = (function () {
  return new Selection(this._groups, this._parents);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/style.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/style.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");
/* harmony import */ var _tween__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tween */ "./node_modules/d3-transition/src/transition/tween.js");
/* harmony import */ var _interpolate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./interpolate */ "./node_modules/d3-transition/src/transition/interpolate.js");






function styleNull(name, interpolate) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["style"])(this, name),
        string1 = (this.style.removeProperty(name), Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["style"])(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["style"])(this, name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function styleFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["style"])(this, name),
        value1 = value(this),
        string1 = value1 + "";
    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), Object(d3_selection__WEBPACK_IMPORTED_MODULE_1__["style"])(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function styleMaybeRemove(id, name) {
  var on0,
      on1,
      listener0,
      key = "style." + name,
      event = "end." + key,
      remove;
  return function () {
    var schedule = Object(_schedule__WEBPACK_IMPORTED_MODULE_2__["set"])(this, id),
        on = schedule.on,
        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);
    schedule.on = on1;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value, priority) {
  var i = (name += "") === "transform" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["interpolateTransformCss"] : _interpolate__WEBPACK_IMPORTED_MODULE_4__["default"];
  return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove(name)) : typeof value === "function" ? this.styleTween(name, styleFunction(name, i, Object(_tween__WEBPACK_IMPORTED_MODULE_3__["tweenValue"])(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant(name, i, value), priority).on("end.style." + name, null);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/styleTween.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/styleTween.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function styleInterpolate(name, i, priority) {
  return function (t) {
    this.style.setProperty(name, i(t), priority);
  };
}

function styleTween(name, value, priority) {
  var t, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }

  tween._value = value;
  return tween;
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/text.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/text.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tween__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tween */ "./node_modules/d3-transition/src/transition/tween.js");


function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (value) {
  return this.tween("text", typeof value === "function" ? textFunction(Object(_tween__WEBPACK_IMPORTED_MODULE_0__["tweenValue"])(this, "text", value)) : textConstant(value == null ? "" : value + ""));
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/transition.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/transition.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


/* harmony default export */ __webpack_exports__["default"] = (function () {
  var name = this._name,
      id0 = this._id,
      id1 = Object(_index__WEBPACK_IMPORTED_MODULE_0__["newId"])();

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit = Object(_schedule__WEBPACK_IMPORTED_MODULE_1__["get"])(node, id0);
        Object(_schedule__WEBPACK_IMPORTED_MODULE_1__["default"])(node, name, id1, i, group, {
          time: inherit.time + inherit.delay + inherit.duration,
          delay: 0,
          duration: inherit.duration,
          ease: inherit.ease
        });
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Transition"](groups, this._parents, name, id1);
});

/***/ }),

/***/ "./node_modules/d3-transition/src/transition/tween.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/tween.js ***!
  \************************************************************/
/*! exports provided: default, tweenValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tweenValue", function() { return tweenValue; });
/* harmony import */ var _schedule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule */ "./node_modules/d3-transition/src/transition/schedule.js");


function tweenRemove(id, name) {
  var tween0, tween1;
  return function () {
    var schedule = Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = tween0 = tween;

      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }

    schedule.tween = tween1;
  };
}

function tweenFunction(id, name, value) {
  var tween0, tween1;
  if (typeof value !== "function") throw new Error();
  return function () {
    var schedule = Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();

      for (var t = {
        name: name,
        value: value
      }, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }

      if (i === n) tween1.push(t);
    }

    schedule.tween = tween1;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, value) {
  var id = this._id;
  name += "";

  if (arguments.length < 2) {
    var tween = Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["get"])(this.node(), id).tween;

    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }

    return null;
  }

  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
});
function tweenValue(transition, name, value) {
  var id = transition._id;
  transition.each(function () {
    var schedule = Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["set"])(this, id);
    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
  });
  return function (node) {
    return Object(_schedule__WEBPACK_IMPORTED_MODULE_0__["get"])(node, id).value[name];
  };
}

/***/ }),

/***/ "./node_modules/d3-voronoi/src/Beach.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-voronoi/src/Beach.js ***!
  \**********************************************/
/*! exports provided: removeBeach, addBeach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeBeach", function() { return removeBeach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addBeach", function() { return addBeach; });
/* harmony import */ var _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RedBlackTree */ "./node_modules/d3-voronoi/src/RedBlackTree.js");
/* harmony import */ var _Cell__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cell */ "./node_modules/d3-voronoi/src/Cell.js");
/* harmony import */ var _Circle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Circle */ "./node_modules/d3-voronoi/src/Circle.js");
/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Edge */ "./node_modules/d3-voronoi/src/Edge.js");
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");





var beachPool = [];

function Beach() {
  Object(_RedBlackTree__WEBPACK_IMPORTED_MODULE_0__["RedBlackNode"])(this);
  this.edge = this.site = this.circle = null;
}

function createBeach(site) {
  var beach = beachPool.pop() || new Beach();
  beach.site = site;
  return beach;
}

function detachBeach(beach) {
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(beach);
  _Diagram__WEBPACK_IMPORTED_MODULE_4__["beaches"].remove(beach);
  beachPool.push(beach);
  Object(_RedBlackTree__WEBPACK_IMPORTED_MODULE_0__["RedBlackNode"])(beach);
}

function removeBeach(beach) {
  var circle = beach.circle,
      x = circle.x,
      y = circle.cy,
      vertex = [x, y],
      previous = beach.P,
      next = beach.N,
      disappearing = [beach];
  detachBeach(beach);
  var lArc = previous;

  while (lArc.circle && Math.abs(x - lArc.circle.x) < _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"] && Math.abs(y - lArc.circle.cy) < _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
    previous = lArc.P;
    disappearing.unshift(lArc);
    detachBeach(lArc);
    lArc = previous;
  }

  disappearing.unshift(lArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(lArc);
  var rArc = next;

  while (rArc.circle && Math.abs(x - rArc.circle.x) < _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"] && Math.abs(y - rArc.circle.cy) < _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
    next = rArc.N;
    disappearing.push(rArc);
    detachBeach(rArc);
    rArc = next;
  }

  disappearing.push(rArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(rArc);
  var nArcs = disappearing.length,
      iArc;

  for (iArc = 1; iArc < nArcs; ++iArc) {
    rArc = disappearing[iArc];
    lArc = disappearing[iArc - 1];
    Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["setEdgeEnd"])(rArc.edge, lArc.site, rArc.site, vertex);
  }

  lArc = disappearing[0];
  rArc = disappearing[nArcs - 1];
  rArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(lArc.site, rArc.site, null, vertex);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(lArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(rArc);
}
function addBeach(site) {
  var x = site[0],
      directrix = site[1],
      lArc,
      rArc,
      dxl,
      dxr,
      node = _Diagram__WEBPACK_IMPORTED_MODULE_4__["beaches"]._;

  while (node) {
    dxl = leftBreakPoint(node, directrix) - x;
    if (dxl > _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) node = node.L;else {
      dxr = x - rightBreakPoint(node, directrix);

      if (dxr > _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
        if (!node.R) {
          lArc = node;
          break;
        }

        node = node.R;
      } else {
        if (dxl > -_Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
          lArc = node.P;
          rArc = node;
        } else if (dxr > -_Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
          lArc = node;
          rArc = node.N;
        } else {
          lArc = rArc = node;
        }

        break;
      }
    }
  }

  Object(_Cell__WEBPACK_IMPORTED_MODULE_1__["createCell"])(site);
  var newArc = createBeach(site);
  _Diagram__WEBPACK_IMPORTED_MODULE_4__["beaches"].insert(lArc, newArc);
  if (!lArc && !rArc) return;

  if (lArc === rArc) {
    Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(lArc);
    rArc = createBeach(lArc.site);
    _Diagram__WEBPACK_IMPORTED_MODULE_4__["beaches"].insert(newArc, rArc);
    newArc.edge = rArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(lArc.site, newArc.site);
    Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(lArc);
    Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(rArc);
    return;
  }

  if (!rArc) {
    // && lArc
    newArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(lArc.site, newArc.site);
    return;
  } // else lArc !== rArc


  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(lArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(rArc);
  var lSite = lArc.site,
      ax = lSite[0],
      ay = lSite[1],
      bx = site[0] - ax,
      by = site[1] - ay,
      rSite = rArc.site,
      cx = rSite[0] - ax,
      cy = rSite[1] - ay,
      d = 2 * (bx * cy - by * cx),
      hb = bx * bx + by * by,
      hc = cx * cx + cy * cy,
      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];
  Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["setEdgeEnd"])(rArc.edge, lSite, rSite, vertex);
  newArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(lSite, site, null, vertex);
  rArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(site, rSite, null, vertex);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(lArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(rArc);
}

function leftBreakPoint(arc, directrix) {
  var site = arc.site,
      rfocx = site[0],
      rfocy = site[1],
      pby2 = rfocy - directrix;
  if (!pby2) return rfocx;
  var lArc = arc.P;
  if (!lArc) return -Infinity;
  site = lArc.site;
  var lfocx = site[0],
      lfocy = site[1],
      plby2 = lfocy - directrix;
  if (!plby2) return lfocx;
  var hl = lfocx - rfocx,
      aby2 = 1 / pby2 - 1 / plby2,
      b = hl / plby2;
  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
  return (rfocx + lfocx) / 2;
}

function rightBreakPoint(arc, directrix) {
  var rArc = arc.N;
  if (rArc) return leftBreakPoint(rArc, directrix);
  var site = arc.site;
  return site[1] === directrix ? site[0] : Infinity;
}

/***/ }),

/***/ "./node_modules/d3-voronoi/src/Cell.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-voronoi/src/Cell.js ***!
  \*********************************************/
/*! exports provided: createCell, cellHalfedgeStart, cellHalfedgeEnd, sortCellHalfedges, clipCells */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCell", function() { return createCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cellHalfedgeStart", function() { return cellHalfedgeStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cellHalfedgeEnd", function() { return cellHalfedgeEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortCellHalfedges", function() { return sortCellHalfedges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clipCells", function() { return clipCells; });
/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Edge */ "./node_modules/d3-voronoi/src/Edge.js");
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");


function createCell(site) {
  return _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][site.index] = {
    site: site,
    halfedges: []
  };
}

function cellHalfedgeAngle(cell, edge) {
  var site = cell.site,
      va = edge.left,
      vb = edge.right;
  if (site === vb) vb = va, va = site;
  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);
  if (site === va) va = edge[1], vb = edge[0];else va = edge[0], vb = edge[1];
  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);
}

function cellHalfedgeStart(cell, edge) {
  return edge[+(edge.left !== cell.site)];
}
function cellHalfedgeEnd(cell, edge) {
  return edge[+(edge.left === cell.site)];
}
function sortCellHalfedges() {
  for (var i = 0, n = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"].length, cell, halfedges, j, m; i < n; ++i) {
    if ((cell = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][i]) && (m = (halfedges = cell.halfedges).length)) {
      var index = new Array(m),
          array = new Array(m);

      for (j = 0; j < m; ++j) {
        index[j] = j, array[j] = cellHalfedgeAngle(cell, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"][halfedges[j]]);
      }

      index.sort(function (i, j) {
        return array[j] - array[i];
      });

      for (j = 0; j < m; ++j) {
        array[j] = halfedges[index[j]];
      }

      for (j = 0; j < m; ++j) {
        halfedges[j] = array[j];
      }
    }
  }
}
function clipCells(x0, y0, x1, y1) {
  var nCells = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"].length,
      iCell,
      cell,
      site,
      iHalfedge,
      halfedges,
      nHalfedges,
      start,
      startX,
      startY,
      end,
      endX,
      endY,
      cover = true;

  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][iCell]) {
      site = cell.site;
      halfedges = cell.halfedges;
      iHalfedge = halfedges.length; // Remove any dangling clipped edges.

      while (iHalfedge--) {
        if (!_Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"][halfedges[iHalfedge]]) {
          halfedges.splice(iHalfedge, 1);
        }
      } // Insert any border edges as necessary.


      iHalfedge = 0, nHalfedges = halfedges.length;

      while (iHalfedge < nHalfedges) {
        end = cellHalfedgeEnd(cell, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"][halfedges[iHalfedge]]), endX = end[0], endY = end[1];
        start = cellHalfedgeStart(cell, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"][halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];

        if (Math.abs(endX - startX) > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Math.abs(endY - startY) > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) {
          halfedges.splice(iHalfedge, 0, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site, end, Math.abs(endX - x0) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && y1 - endY > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? [x0, Math.abs(startX - x0) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? startY : y1] : Math.abs(endY - y1) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && x1 - endX > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? [Math.abs(startY - y1) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? startX : x1, y1] : Math.abs(endX - x1) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && endY - y0 > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? [x1, Math.abs(startX - x1) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? startY : y0] : Math.abs(endY - y0) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && endX - x0 > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? [Math.abs(startY - y0) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? startX : x0, y0] : null)) - 1);
          ++nHalfedges;
        }
      }

      if (nHalfedges) cover = false;
    }
  } // If there weren’t any edges, have the closest site cover the extent.
  // It doesn’t matter which corner of the extent we measure!


  if (cover) {
    var dx,
        dy,
        d2,
        dc = Infinity;

    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {
      if (cell = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][iCell]) {
        site = cell.site;
        dx = site[0] - x0;
        dy = site[1] - y0;
        d2 = dx * dx + dy * dy;
        if (d2 < dc) dc = d2, cover = cell;
      }
    }

    if (cover) {
      var v00 = [x0, y0],
          v01 = [x0, y1],
          v11 = [x1, y1],
          v10 = [x1, y0];
      cover.halfedges.push(_Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site = cover.site, v00, v01)) - 1, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site, v01, v11)) - 1, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site, v11, v10)) - 1, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site, v10, v00)) - 1);
    }
  } // Lastly delete any cells with no edges; these were entirely clipped.


  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][iCell]) {
      if (!cell.halfedges.length) {
        delete _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][iCell];
      }
    }
  }
}

/***/ }),

/***/ "./node_modules/d3-voronoi/src/Circle.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-voronoi/src/Circle.js ***!
  \***********************************************/
/*! exports provided: firstCircle, attachCircle, detachCircle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "firstCircle", function() { return firstCircle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "attachCircle", function() { return attachCircle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detachCircle", function() { return detachCircle; });
/* harmony import */ var _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RedBlackTree */ "./node_modules/d3-voronoi/src/RedBlackTree.js");
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");


var circlePool = [];
var firstCircle;

function Circle() {
  Object(_RedBlackTree__WEBPACK_IMPORTED_MODULE_0__["RedBlackNode"])(this);
  this.x = this.y = this.arc = this.site = this.cy = null;
}

function attachCircle(arc) {
  var lArc = arc.P,
      rArc = arc.N;
  if (!lArc || !rArc) return;
  var lSite = lArc.site,
      cSite = arc.site,
      rSite = rArc.site;
  if (lSite === rSite) return;
  var bx = cSite[0],
      by = cSite[1],
      ax = lSite[0] - bx,
      ay = lSite[1] - by,
      cx = rSite[0] - bx,
      cy = rSite[1] - by;
  var d = 2 * (ax * cy - ay * cx);
  if (d >= -_Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon2"]) return;
  var ha = ax * ax + ay * ay,
      hc = cx * cx + cy * cy,
      x = (cy * ha - ay * hc) / d,
      y = (ax * hc - cx * ha) / d;
  var circle = circlePool.pop() || new Circle();
  circle.arc = arc;
  circle.site = cSite;
  circle.x = x + bx;
  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom

  arc.circle = circle;
  var before = null,
      node = _Diagram__WEBPACK_IMPORTED_MODULE_1__["circles"]._;

  while (node) {
    if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
      if (node.L) node = node.L;else {
        before = node.P;
        break;
      }
    } else {
      if (node.R) node = node.R;else {
        before = node;
        break;
      }
    }
  }

  _Diagram__WEBPACK_IMPORTED_MODULE_1__["circles"].insert(before, circle);
  if (!before) firstCircle = circle;
}
function detachCircle(arc) {
  var circle = arc.circle;

  if (circle) {
    if (!circle.P) firstCircle = circle.N;
    _Diagram__WEBPACK_IMPORTED_MODULE_1__["circles"].remove(circle);
    circlePool.push(circle);
    Object(_RedBlackTree__WEBPACK_IMPORTED_MODULE_0__["RedBlackNode"])(circle);
    arc.circle = null;
  }
}

/***/ }),

/***/ "./node_modules/d3-voronoi/src/Diagram.js":
/*!************************************************!*\
  !*** ./node_modules/d3-voronoi/src/Diagram.js ***!
  \************************************************/
/*! exports provided: epsilon, epsilon2, beaches, cells, circles, edges, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon", function() { return epsilon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon2", function() { return epsilon2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "beaches", function() { return beaches; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cells", function() { return cells; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circles", function() { return circles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "edges", function() { return edges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Diagram; });
/* harmony import */ var _Beach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Beach */ "./node_modules/d3-voronoi/src/Beach.js");
/* harmony import */ var _Cell__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cell */ "./node_modules/d3-voronoi/src/Cell.js");
/* harmony import */ var _Circle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Circle */ "./node_modules/d3-voronoi/src/Circle.js");
/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Edge */ "./node_modules/d3-voronoi/src/Edge.js");
/* harmony import */ var _RedBlackTree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RedBlackTree */ "./node_modules/d3-voronoi/src/RedBlackTree.js");





var epsilon = 1e-6;
var epsilon2 = 1e-12;
var beaches;
var cells;
var circles;
var edges;

function triangleArea(a, b, c) {
  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);
}

function lexicographic(a, b) {
  return b[1] - a[1] || b[0] - a[0];
}

function Diagram(sites, extent) {
  var site = sites.sort(lexicographic).pop(),
      x,
      y,
      circle;
  edges = [];
  cells = new Array(sites.length);
  beaches = new _RedBlackTree__WEBPACK_IMPORTED_MODULE_4__["default"]();
  circles = new _RedBlackTree__WEBPACK_IMPORTED_MODULE_4__["default"]();

  while (true) {
    circle = _Circle__WEBPACK_IMPORTED_MODULE_2__["firstCircle"];

    if (site && (!circle || site[1] < circle.y || site[1] === circle.y && site[0] < circle.x)) {
      if (site[0] !== x || site[1] !== y) {
        Object(_Beach__WEBPACK_IMPORTED_MODULE_0__["addBeach"])(site);
        x = site[0], y = site[1];
      }

      site = sites.pop();
    } else if (circle) {
      Object(_Beach__WEBPACK_IMPORTED_MODULE_0__["removeBeach"])(circle.arc);
    } else {
      break;
    }
  }

  Object(_Cell__WEBPACK_IMPORTED_MODULE_1__["sortCellHalfedges"])();

  if (extent) {
    var x0 = +extent[0][0],
        y0 = +extent[0][1],
        x1 = +extent[1][0],
        y1 = +extent[1][1];
    Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["clipEdges"])(x0, y0, x1, y1);
    Object(_Cell__WEBPACK_IMPORTED_MODULE_1__["clipCells"])(x0, y0, x1, y1);
  }

  this.edges = edges;
  this.cells = cells;
  beaches = circles = edges = cells = null;
}
Diagram.prototype = {
  constructor: Diagram,
  polygons: function polygons() {
    var edges = this.edges;
    return this.cells.map(function (cell) {
      var polygon = cell.halfedges.map(function (i) {
        return Object(_Cell__WEBPACK_IMPORTED_MODULE_1__["cellHalfedgeStart"])(cell, edges[i]);
      });
      polygon.data = cell.site.data;
      return polygon;
    });
  },
  triangles: function triangles() {
    var triangles = [],
        edges = this.edges;
    this.cells.forEach(function (cell, i) {
      if (!(m = (halfedges = cell.halfedges).length)) return;
      var site = cell.site,
          halfedges,
          j = -1,
          m,
          s0,
          e1 = edges[halfedges[m - 1]],
          s1 = e1.left === site ? e1.right : e1.left;

      while (++j < m) {
        s0 = s1;
        e1 = edges[halfedges[j]];
        s1 = e1.left === site ? e1.right : e1.left;

        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {
          triangles.push([site.data, s0.data, s1.data]);
        }
      }
    });
    return triangles;
  },
  links: function links() {
    return this.edges.filter(function (edge) {
      return edge.right;
    }).map(function (edge) {
      return {
        source: edge.left.data,
        target: edge.right.data
      };
    });
  },
  find: function find(x, y, radius) {
    var that = this,
        i0,
        i1 = that._found || 0,
        n = that.cells.length,
        cell; // Use the previously-found cell, or start with an arbitrary one.

    while (!(cell = that.cells[i1])) {
      if (++i1 >= n) return null;
    }

    var dx = x - cell.site[0],
        dy = y - cell.site[1],
        d2 = dx * dx + dy * dy; // Traverse the half-edges to find a closer cell, if any.

    do {
      cell = that.cells[i0 = i1], i1 = null;
      cell.halfedges.forEach(function (e) {
        var edge = that.edges[e],
            v = edge.left;
        if ((v === cell.site || !v) && !(v = edge.right)) return;
        var vx = x - v[0],
            vy = y - v[1],
            v2 = vx * vx + vy * vy;
        if (v2 < d2) d2 = v2, i1 = v.index;
      });
    } while (i1 !== null);

    that._found = i0;
    return radius == null || d2 <= radius * radius ? cell.site : null;
  }
};

/***/ }),

/***/ "./node_modules/d3-voronoi/src/Edge.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-voronoi/src/Edge.js ***!
  \*********************************************/
/*! exports provided: createEdge, createBorderEdge, setEdgeEnd, clipEdges */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEdge", function() { return createEdge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBorderEdge", function() { return createBorderEdge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setEdgeEnd", function() { return setEdgeEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clipEdges", function() { return clipEdges; });
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");

function createEdge(left, right, v0, v1) {
  var edge = [null, null],
      index = _Diagram__WEBPACK_IMPORTED_MODULE_0__["edges"].push(edge) - 1;
  edge.left = left;
  edge.right = right;
  if (v0) setEdgeEnd(edge, left, right, v0);
  if (v1) setEdgeEnd(edge, right, left, v1);
  _Diagram__WEBPACK_IMPORTED_MODULE_0__["cells"][left.index].halfedges.push(index);
  _Diagram__WEBPACK_IMPORTED_MODULE_0__["cells"][right.index].halfedges.push(index);
  return edge;
}
function createBorderEdge(left, v0, v1) {
  var edge = [v0, v1];
  edge.left = left;
  return edge;
}
function setEdgeEnd(edge, left, right, vertex) {
  if (!edge[0] && !edge[1]) {
    edge[0] = vertex;
    edge.left = left;
    edge.right = right;
  } else if (edge.left === right) {
    edge[1] = vertex;
  } else {
    edge[0] = vertex;
  }
} // Liang–Barsky line clipping.

function clipEdge(edge, x0, y0, x1, y1) {
  var a = edge[0],
      b = edge[1],
      ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?

  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];
  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];
  return true;
}

function connectEdge(edge, x0, y0, x1, y1) {
  var v1 = edge[1];
  if (v1) return true;
  var v0 = edge[0],
      left = edge.left,
      right = edge.right,
      lx = left[0],
      ly = left[1],
      rx = right[0],
      ry = right[1],
      fx = (lx + rx) / 2,
      fy = (ly + ry) / 2,
      fm,
      fb;

  if (ry === ly) {
    if (fx < x0 || fx >= x1) return;

    if (lx > rx) {
      if (!v0) v0 = [fx, y0];else if (v0[1] >= y1) return;
      v1 = [fx, y1];
    } else {
      if (!v0) v0 = [fx, y1];else if (v0[1] < y0) return;
      v1 = [fx, y0];
    }
  } else {
    fm = (lx - rx) / (ry - ly);
    fb = fy - fm * fx;

    if (fm < -1 || fm > 1) {
      if (lx > rx) {
        if (!v0) v0 = [(y0 - fb) / fm, y0];else if (v0[1] >= y1) return;
        v1 = [(y1 - fb) / fm, y1];
      } else {
        if (!v0) v0 = [(y1 - fb) / fm, y1];else if (v0[1] < y0) return;
        v1 = [(y0 - fb) / fm, y0];
      }
    } else {
      if (ly < ry) {
        if (!v0) v0 = [x0, fm * x0 + fb];else if (v0[0] >= x1) return;
        v1 = [x1, fm * x1 + fb];
      } else {
        if (!v0) v0 = [x1, fm * x1 + fb];else if (v0[0] < x0) return;
        v1 = [x0, fm * x0 + fb];
      }
    }
  }

  edge[0] = v0;
  edge[1] = v1;
  return true;
}

function clipEdges(x0, y0, x1, y1) {
  var i = _Diagram__WEBPACK_IMPORTED_MODULE_0__["edges"].length,
      edge;

  while (i--) {
    if (!connectEdge(edge = _Diagram__WEBPACK_IMPORTED_MODULE_0__["edges"][i], x0, y0, x1, y1) || !clipEdge(edge, x0, y0, x1, y1) || !(Math.abs(edge[0][0] - edge[1][0]) > _Diagram__WEBPACK_IMPORTED_MODULE_0__["epsilon"] || Math.abs(edge[0][1] - edge[1][1]) > _Diagram__WEBPACK_IMPORTED_MODULE_0__["epsilon"])) {
      delete _Diagram__WEBPACK_IMPORTED_MODULE_0__["edges"][i];
    }
  }
}

/***/ }),

/***/ "./node_modules/d3-voronoi/src/RedBlackTree.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-voronoi/src/RedBlackTree.js ***!
  \*****************************************************/
/*! exports provided: RedBlackNode, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RedBlackNode", function() { return RedBlackNode; });
function RedBlackTree() {
  this._ = null; // root node
}

function RedBlackNode(node) {
  node.U = // parent node
  node.C = // color - true for red, false for black
  node.L = // left node
  node.R = // right node
  node.P = // previous node
  node.N = null; // next node
}
RedBlackTree.prototype = {
  constructor: RedBlackTree,
  insert: function insert(after, node) {
    var parent, grandpa, uncle;

    if (after) {
      node.P = after;
      node.N = after.N;
      if (after.N) after.N.P = node;
      after.N = node;

      if (after.R) {
        after = after.R;

        while (after.L) {
          after = after.L;
        }

        after.L = node;
      } else {
        after.R = node;
      }

      parent = after;
    } else if (this._) {
      after = RedBlackFirst(this._);
      node.P = null;
      node.N = after;
      after.P = after.L = node;
      parent = after;
    } else {
      node.P = node.N = null;
      this._ = node;
      parent = null;
    }

    node.L = node.R = null;
    node.U = parent;
    node.C = true;
    after = node;

    while (parent && parent.C) {
      grandpa = parent.U;

      if (parent === grandpa.L) {
        uncle = grandpa.R;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.R) {
            RedBlackRotateLeft(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateRight(this, grandpa);
        }
      } else {
        uncle = grandpa.L;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.L) {
            RedBlackRotateRight(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateLeft(this, grandpa);
        }
      }

      parent = after.U;
    }

    this._.C = false;
  },
  remove: function remove(node) {
    if (node.N) node.N.P = node.P;
    if (node.P) node.P.N = node.N;
    node.N = node.P = null;
    var parent = node.U,
        sibling,
        left = node.L,
        right = node.R,
        next,
        red;
    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);

    if (parent) {
      if (parent.L === node) parent.L = next;else parent.R = next;
    } else {
      this._ = next;
    }

    if (left && right) {
      red = next.C;
      next.C = node.C;
      next.L = left;
      left.U = next;

      if (next !== right) {
        parent = next.U;
        next.U = node.U;
        node = next.R;
        parent.L = node;
        next.R = right;
        right.U = next;
      } else {
        next.U = parent;
        parent = next;
        node = next.R;
      }
    } else {
      red = node.C;
      node = next;
    }

    if (node) node.U = parent;
    if (red) return;

    if (node && node.C) {
      node.C = false;
      return;
    }

    do {
      if (node === this._) break;

      if (node === parent.L) {
        sibling = parent.R;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateLeft(this, parent);
          sibling = parent.R;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.R || !sibling.R.C) {
            sibling.L.C = false;
            sibling.C = true;
            RedBlackRotateRight(this, sibling);
            sibling = parent.R;
          }

          sibling.C = parent.C;
          parent.C = sibling.R.C = false;
          RedBlackRotateLeft(this, parent);
          node = this._;
          break;
        }
      } else {
        sibling = parent.L;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateRight(this, parent);
          sibling = parent.L;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.L || !sibling.L.C) {
            sibling.R.C = false;
            sibling.C = true;
            RedBlackRotateLeft(this, sibling);
            sibling = parent.L;
          }

          sibling.C = parent.C;
          parent.C = sibling.L.C = false;
          RedBlackRotateRight(this, parent);
          node = this._;
          break;
        }
      }

      sibling.C = true;
      node = parent;
      parent = parent.U;
    } while (!node.C);

    if (node) node.C = false;
  }
};

function RedBlackRotateLeft(tree, node) {
  var p = node,
      q = node.R,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.R = q.L;
  if (p.R) p.R.U = p;
  q.L = p;
}

function RedBlackRotateRight(tree, node) {
  var p = node,
      q = node.L,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.L = q.R;
  if (p.L) p.L.U = p;
  q.R = p;
}

function RedBlackFirst(node) {
  while (node.L) {
    node = node.L;
  }

  return node;
}

/* harmony default export */ __webpack_exports__["default"] = (RedBlackTree);

/***/ }),

/***/ "./node_modules/d3-voronoi/src/constant.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-voronoi/src/constant.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-voronoi/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-voronoi/src/index.js ***!
  \**********************************************/
/*! exports provided: voronoi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _voronoi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./voronoi */ "./node_modules/d3-voronoi/src/voronoi.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "voronoi", function() { return _voronoi__WEBPACK_IMPORTED_MODULE_0__["default"]; });



/***/ }),

/***/ "./node_modules/d3-voronoi/src/point.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-voronoi/src/point.js ***!
  \**********************************************/
/*! exports provided: x, y */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return x; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return y; });
function x(d) {
  return d[0];
}
function y(d) {
  return d[1];
}

/***/ }),

/***/ "./node_modules/d3-voronoi/src/voronoi.js":
/*!************************************************!*\
  !*** ./node_modules/d3-voronoi/src/voronoi.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-voronoi/src/constant.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "./node_modules/d3-voronoi/src/point.js");
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");



/* harmony default export */ __webpack_exports__["default"] = (function () {
  var x = _point__WEBPACK_IMPORTED_MODULE_1__["x"],
      y = _point__WEBPACK_IMPORTED_MODULE_1__["y"],
      extent = null;

  function voronoi(data) {
    return new _Diagram__WEBPACK_IMPORTED_MODULE_2__["default"](data.map(function (d, i) {
      var s = [Math.round(x(d, i, data) / _Diagram__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) * _Diagram__WEBPACK_IMPORTED_MODULE_2__["epsilon"], Math.round(y(d, i, data) / _Diagram__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) * _Diagram__WEBPACK_IMPORTED_MODULE_2__["epsilon"]];
      s.index = i;
      s.data = d;
      return s;
    }), extent);
  }

  voronoi.polygons = function (data) {
    return voronoi(data).polygons();
  };

  voronoi.links = function (data) {
    return voronoi(data).links();
  };

  voronoi.triangles = function (data) {
    return voronoi(data).triangles();
  };

  voronoi.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), voronoi) : x;
  };

  voronoi.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), voronoi) : y;
  };

  voronoi.extent = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];
  };

  voronoi.size = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];
  };

  return voronoi;
});

/***/ }),

/***/ "./node_modules/d3-zoom/src/constant.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-zoom/src/constant.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (x) {
  return function () {
    return x;
  };
});

/***/ }),

/***/ "./node_modules/d3-zoom/src/event.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-zoom/src/event.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ZoomEvent; });
function ZoomEvent(target, type, transform) {
  this.target = target;
  this.type = type;
  this.transform = transform;
}

/***/ }),

/***/ "./node_modules/d3-zoom/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-zoom/src/index.js ***!
  \*******************************************/
/*! exports provided: zoom, zoomTransform, zoomIdentity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _zoom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./zoom */ "./node_modules/d3-zoom/src/zoom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoom", function() { return _zoom__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform */ "./node_modules/d3-zoom/src/transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomTransform", function() { return _transform__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomIdentity", function() { return _transform__WEBPACK_IMPORTED_MODULE_1__["identity"]; });




/***/ }),

/***/ "./node_modules/d3-zoom/src/noevent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-zoom/src/noevent.js ***!
  \*********************************************/
/*! exports provided: nopropagation, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nopropagation", function() { return nopropagation; });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");

function nopropagation() {
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].stopImmediatePropagation();
}
/* harmony default export */ __webpack_exports__["default"] = (function () {
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].preventDefault();
  d3_selection__WEBPACK_IMPORTED_MODULE_0__["event"].stopImmediatePropagation();
});

/***/ }),

/***/ "./node_modules/d3-zoom/src/transform.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-zoom/src/transform.js ***!
  \***********************************************/
/*! exports provided: Transform, identity, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Transform", function() { return Transform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return transform; });
function Transform(k, x, y) {
  this.k = k;
  this.x = x;
  this.y = y;
}
Transform.prototype = {
  constructor: Transform,
  scale: function scale(k) {
    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
  },
  translate: function translate(x, y) {
    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
  },
  apply: function apply(point) {
    return [point[0] * this.k + this.x, point[1] * this.k + this.y];
  },
  applyX: function applyX(x) {
    return x * this.k + this.x;
  },
  applyY: function applyY(y) {
    return y * this.k + this.y;
  },
  invert: function invert(location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function invertX(x) {
    return (x - this.x) / this.k;
  },
  invertY: function invertY(y) {
    return (y - this.y) / this.k;
  },
  rescaleX: function rescaleX(x) {
    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
  },
  rescaleY: function rescaleY(y) {
    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
  },
  toString: function toString() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var identity = new Transform(1, 0, 0);
transform.prototype = Transform.prototype;
function transform(node) {
  return node.__zoom || identity;
}

/***/ }),

/***/ "./node_modules/d3-zoom/src/zoom.js":
/*!******************************************!*\
  !*** ./node_modules/d3-zoom/src/zoom.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony import */ var d3_drag__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-drag */ "./node_modules/d3-drag/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-transition */ "./node_modules/d3-transition/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-zoom/src/constant.js");
/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./event */ "./node_modules/d3-zoom/src/event.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./transform */ "./node_modules/d3-zoom/src/transform.js");
/* harmony import */ var _noevent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./noevent */ "./node_modules/d3-zoom/src/noevent.js");








 // Ignore right-click, since that should open the context menu.

function defaultFilter() {
  return !d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].button;
}

function defaultExtent() {
  var e = this,
      w,
      h;

  if (e instanceof SVGElement) {
    e = e.ownerSVGElement || e;
    w = e.width.baseVal.value;
    h = e.height.baseVal.value;
  } else {
    w = e.clientWidth;
    h = e.clientHeight;
  }

  return [[0, 0], [w, h]];
}

function defaultTransform() {
  return this.__zoom || _transform__WEBPACK_IMPORTED_MODULE_7__["identity"];
}

function defaultWheelDelta() {
  return -d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].deltaY * (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].deltaMode ? 120 : 1) / 500;
}

function defaultTouchable() {
  return "ontouchstart" in this;
}

function defaultConstrain(transform, extent, translateExtent) {
  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
  return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));
}

/* harmony default export */ __webpack_exports__["default"] = (function () {
  var filter = defaultFilter,
      extent = defaultExtent,
      constrain = defaultConstrain,
      wheelDelta = defaultWheelDelta,
      touchable = defaultTouchable,
      scaleExtent = [0, Infinity],
      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
      duration = 250,
      interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_2__["interpolateZoom"],
      gestures = [],
      listeners = Object(d3_dispatch__WEBPACK_IMPORTED_MODULE_0__["dispatch"])("start", "zoom", "end"),
      touchstarting,
      touchending,
      touchDelay = 500,
      wheelDelay = 150,
      clickDistance2 = 0;

  function zoom(selection) {
    selection.property("__zoom", defaultTransform).on("wheel.zoom", wheeled).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  zoom.transform = function (collection, transform) {
    var selection = collection.selection ? collection.selection() : collection;
    selection.property("__zoom", defaultTransform);

    if (collection !== selection) {
      schedule(collection, transform);
    } else {
      selection.interrupt().each(function () {
        gesture(this, arguments).start().zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform).end();
      });
    }
  };

  zoom.scaleBy = function (selection, k) {
    zoom.scaleTo(selection, function () {
      var k0 = this.__zoom.k,
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return k0 * k1;
    });
  };

  zoom.scaleTo = function (selection, k) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t0 = this.__zoom,
          p0 = centroid(e),
          p1 = t0.invert(p0),
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
    });
  };

  zoom.translateBy = function (selection, x, y) {
    zoom.transform(selection, function () {
      return constrain(this.__zoom.translate(typeof x === "function" ? x.apply(this, arguments) : x, typeof y === "function" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);
    });
  };

  zoom.translateTo = function (selection, x, y) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t = this.__zoom,
          p = centroid(e);
      return constrain(_transform__WEBPACK_IMPORTED_MODULE_7__["identity"].translate(p[0], p[1]).scale(t.k).translate(typeof x === "function" ? -x.apply(this, arguments) : -x, typeof y === "function" ? -y.apply(this, arguments) : -y), e, translateExtent);
    });
  };

  function scale(transform, k) {
    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
    return k === transform.k ? transform : new _transform__WEBPACK_IMPORTED_MODULE_7__["Transform"](k, transform.x, transform.y);
  }

  function translate(transform, p0, p1) {
    var x = p0[0] - p1[0] * transform.k,
        y = p0[1] - p1[1] * transform.k;
    return x === transform.x && y === transform.y ? transform : new _transform__WEBPACK_IMPORTED_MODULE_7__["Transform"](transform.k, x, y);
  }

  function centroid(extent) {
    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
  }

  function schedule(transition, transform, center) {
    transition.on("start.zoom", function () {
      gesture(this, arguments).start();
    }).on("interrupt.zoom end.zoom", function () {
      gesture(this, arguments).end();
    }).tween("zoom", function () {
      var that = this,
          args = arguments,
          g = gesture(that, args),
          e = extent.apply(that, args),
          p = center || centroid(e),
          w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
          a = that.__zoom,
          b = typeof transform === "function" ? transform.apply(that, args) : transform,
          i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
      return function (t) {
        if (t === 1) t = b; // Avoid rounding error on end.
        else {
            var l = i(t),
                k = w / l[2];
            t = new _transform__WEBPACK_IMPORTED_MODULE_7__["Transform"](k, p[0] - l[0] * k, p[1] - l[1] * k);
          }
        g.zoom(null, t);
      };
    });
  }

  function gesture(that, args) {
    for (var i = 0, n = gestures.length, g; i < n; ++i) {
      if ((g = gestures[i]).that === that) {
        return g;
      }
    }

    return new Gesture(that, args);
  }

  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.index = -1;
    this.active = 0;
    this.extent = extent.apply(that, args);
  }

  Gesture.prototype = {
    start: function start() {
      if (++this.active === 1) {
        this.index = gestures.push(this) - 1;
        this.emit("start");
      }

      return this;
    },
    zoom: function zoom(key, transform) {
      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    },
    end: function end() {
      if (--this.active === 0) {
        gestures.splice(this.index, 1);
        this.index = -1;
        this.emit("end");
      }

      return this;
    },
    emit: function emit(type) {
      Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["customEvent"])(new _event__WEBPACK_IMPORTED_MODULE_6__["default"](zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function wheeled() {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, arguments),
        t = this.__zoom,
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
        p = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["mouse"])(this); // If the mouse is in the same location as before, reuse it.
    // If there were recent wheel events, reset the wheel idle timeout.

    if (g.wheel) {
      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
        g.mouse[1] = t.invert(g.mouse[0] = p);
      }

      clearTimeout(g.wheel);
    } // If this wheel event won’t trigger a transform change, ignore it.
    else if (t.k === k) return; // Otherwise, capture the mouse point and location at the start.
      else {
          g.mouse = [p, t.invert(p)];
          Object(d3_transition__WEBPACK_IMPORTED_MODULE_4__["interrupt"])(this);
          g.start();
        }

    Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["default"])();
    g.wheel = setTimeout(wheelidled, wheelDelay);
    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

    function wheelidled() {
      g.wheel = null;
      g.end();
    }
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var g = gesture(this, arguments),
        v = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
        p = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["mouse"])(this),
        x0 = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].clientX,
        y0 = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].clientY;
    Object(d3_drag__WEBPACK_IMPORTED_MODULE_1__["dragDisable"])(d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].view);
    Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["nopropagation"])();
    g.mouse = [p, this.__zoom.invert(p)];
    Object(d3_transition__WEBPACK_IMPORTED_MODULE_4__["interrupt"])(this);
    g.start();

    function mousemoved() {
      Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["default"])();

      if (!g.moved) {
        var dx = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].clientX - x0,
            dy = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].clientY - y0;
        g.moved = dx * dx + dy * dy > clickDistance2;
      }

      g.zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["mouse"])(g.that), g.mouse[1]), g.extent, translateExtent));
    }

    function mouseupped() {
      v.on("mousemove.zoom mouseup.zoom", null);
      Object(d3_drag__WEBPACK_IMPORTED_MODULE_1__["dragEnable"])(d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].view, g.moved);
      Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["default"])();
      g.end();
    }
  }

  function dblclicked() {
    if (!filter.apply(this, arguments)) return;
    var t0 = this.__zoom,
        p0 = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["mouse"])(this),
        p1 = t0.invert(p0),
        k1 = t0.k * (d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].shiftKey ? 0.5 : 2),
        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);
    Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["default"])();
    if (duration > 0) Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(this).transition().duration(duration).call(schedule, t1, p0);else Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(this).call(zoom.transform, t1);
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, arguments),
        touches = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].changedTouches,
        started,
        n = touches.length,
        i,
        t,
        p;
    Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["nopropagation"])();

    for (i = 0; i < n; ++i) {
      t = touches[i], p = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["touch"])(this, touches, t.identifier);
      p = [p, this.__zoom.invert(p), t.identifier];
      if (!g.touch0) g.touch0 = p, started = true;else if (!g.touch1) g.touch1 = p;
    } // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.


    if (touchstarting) {
      touchstarting = clearTimeout(touchstarting);

      if (!g.touch1) {
        g.end();
        p = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["select"])(this).on("dblclick.zoom");
        if (p) p.apply(this, arguments);
        return;
      }
    }

    if (started) {
      touchstarting = setTimeout(function () {
        touchstarting = null;
      }, touchDelay);
      Object(d3_transition__WEBPACK_IMPORTED_MODULE_4__["interrupt"])(this);
      g.start();
    }
  }

  function touchmoved() {
    var g = gesture(this, arguments),
        touches = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].changedTouches,
        n = touches.length,
        i,
        t,
        p,
        l;
    Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["default"])();
    if (touchstarting) touchstarting = clearTimeout(touchstarting);

    for (i = 0; i < n; ++i) {
      t = touches[i], p = Object(d3_selection__WEBPACK_IMPORTED_MODULE_3__["touch"])(this, touches, t.identifier);
      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
    }

    t = g.that.__zoom;

    if (g.touch1) {
      var p0 = g.touch0[0],
          l0 = g.touch0[1],
          p1 = g.touch1[0],
          l1 = g.touch1[1],
          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
      t = scale(t, Math.sqrt(dp / dl));
      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];else return;

    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
  }

  function touchended() {
    var g = gesture(this, arguments),
        touches = d3_selection__WEBPACK_IMPORTED_MODULE_3__["event"].changedTouches,
        n = touches.length,
        i,
        t;
    Object(_noevent__WEBPACK_IMPORTED_MODULE_8__["nopropagation"])();
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, touchDelay);

    for (i = 0; i < n; ++i) {
      t = touches[i];
      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
    }

    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);else g.end();
  }

  zoom.wheelDelta = function (_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_5__["default"])(+_), zoom) : wheelDelta;
  };

  zoom.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_5__["default"])(!!_), zoom) : filter;
  };

  zoom.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_5__["default"])(!!_), zoom) : touchable;
  };

  zoom.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_5__["default"])([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
  };

  zoom.scaleExtent = function (_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
  };

  zoom.translateExtent = function (_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };

  zoom.constrain = function (_) {
    return arguments.length ? (constrain = _, zoom) : constrain;
  };

  zoom.duration = function (_) {
    return arguments.length ? (duration = +_, zoom) : duration;
  };

  zoom.interpolate = function (_) {
    return arguments.length ? (interpolate = _, zoom) : interpolate;
  };

  zoom.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? zoom : value;
  };

  zoom.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
  };

  return zoom;
});

/***/ }),

/***/ "./node_modules/d3/dist/package.js":
/*!*****************************************!*\
  !*** ./node_modules/d3/dist/package.js ***!
  \*****************************************/
/*! exports provided: name, version, description, keywords, homepage, license, author, main, unpkg, jsdelivr, module, repository, scripts, devDependencies, dependencies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "name", function() { return name; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "description", function() { return description; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keywords", function() { return keywords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "homepage", function() { return homepage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "license", function() { return license; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "author", function() { return author; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "main", function() { return main; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unpkg", function() { return unpkg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "jsdelivr", function() { return jsdelivr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "module", function() { return module; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "repository", function() { return repository; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scripts", function() { return scripts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "devDependencies", function() { return devDependencies; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dependencies", function() { return dependencies; });
var name = "d3";
var version = "5.9.2";
var description = "Data-Driven Documents";
var keywords = ["dom", "visualization", "svg", "animation", "canvas"];
var homepage = "https://d3js.org";
var license = "BSD-3-Clause";
var author = {
  "name": "Mike Bostock",
  "url": "https://bost.ocks.org/mike"
};
var main = "dist/d3.node.js";
var unpkg = "dist/d3.min.js";
var jsdelivr = "dist/d3.min.js";
var module = "index.js";
var repository = {
  "type": "git",
  "url": "https://github.com/d3/d3.git"
};
var scripts = {
  "pretest": "rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node",
  "test": "tape 'test/**/*-test.js'",
  "prepublishOnly": "yarn test && rollup -c",
  "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \"d3 ${npm_package_version}\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \"${npm_package_version}\" && git tag -am \"${npm_package_version}\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js"
};
var devDependencies = {
  "json2module": "0.0",
  "rimraf": "2",
  "rollup": "0.64",
  "rollup-plugin-ascii": "0.0",
  "rollup-plugin-node-resolve": "3",
  "rollup-plugin-terser": "1",
  "tape": "4"
};
var dependencies = {
  "d3-array": "1",
  "d3-axis": "1",
  "d3-brush": "1",
  "d3-chord": "1",
  "d3-collection": "1",
  "d3-color": "1",
  "d3-contour": "1",
  "d3-dispatch": "1",
  "d3-drag": "1",
  "d3-dsv": "1",
  "d3-ease": "1",
  "d3-fetch": "1",
  "d3-force": "1",
  "d3-format": "1",
  "d3-geo": "1",
  "d3-hierarchy": "1",
  "d3-interpolate": "1",
  "d3-path": "1",
  "d3-polygon": "1",
  "d3-quadtree": "1",
  "d3-random": "1",
  "d3-scale": "2",
  "d3-scale-chromatic": "1",
  "d3-selection": "1",
  "d3-shape": "1",
  "d3-time": "1",
  "d3-time-format": "2",
  "d3-timer": "1",
  "d3-transition": "1",
  "d3-voronoi": "1",
  "d3-zoom": "1"
};

/***/ }),

/***/ "./node_modules/d3/index.js":
/*!**********************************!*\
  !*** ./node_modules/d3/index.js ***!
  \**********************************/
/*! exports provided: version, bisect, bisectRight, bisectLeft, ascending, bisector, cross, descending, deviation, extent, histogram, thresholdFreedmanDiaconis, thresholdScott, thresholdSturges, max, mean, median, merge, min, pairs, permute, quantile, range, scan, shuffle, sum, ticks, tickIncrement, tickStep, transpose, variance, zip, axisTop, axisRight, axisBottom, axisLeft, brush, brushX, brushY, brushSelection, chord, ribbon, nest, set, map, keys, values, entries, color, rgb, hsl, lab, hcl, lch, gray, cubehelix, contours, contourDensity, dispatch, drag, dragDisable, dragEnable, dsvFormat, csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows, tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows, autoType, easeLinear, easeQuad, easeQuadIn, easeQuadOut, easeQuadInOut, easeCubic, easeCubicIn, easeCubicOut, easeCubicInOut, easePoly, easePolyIn, easePolyOut, easePolyInOut, easeSin, easeSinIn, easeSinOut, easeSinInOut, easeExp, easeExpIn, easeExpOut, easeExpInOut, easeCircle, easeCircleIn, easeCircleOut, easeCircleInOut, easeBounce, easeBounceIn, easeBounceOut, easeBounceInOut, easeBack, easeBackIn, easeBackOut, easeBackInOut, easeElastic, easeElasticIn, easeElasticOut, easeElasticInOut, blob, buffer, dsv, csv, tsv, image, json, text, xml, html, svg, forceCenter, forceCollide, forceLink, forceManyBody, forceRadial, forceSimulation, forceX, forceY, formatDefaultLocale, format, formatPrefix, formatLocale, formatSpecifier, precisionFixed, precisionPrefix, precisionRound, geoArea, geoBounds, geoCentroid, geoCircle, geoClipAntimeridian, geoClipCircle, geoClipExtent, geoClipRectangle, geoContains, geoDistance, geoGraticule, geoGraticule10, geoInterpolate, geoLength, geoPath, geoAlbers, geoAlbersUsa, geoAzimuthalEqualArea, geoAzimuthalEqualAreaRaw, geoAzimuthalEquidistant, geoAzimuthalEquidistantRaw, geoConicConformal, geoConicConformalRaw, geoConicEqualArea, geoConicEqualAreaRaw, geoConicEquidistant, geoConicEquidistantRaw, geoEqualEarth, geoEqualEarthRaw, geoEquirectangular, geoEquirectangularRaw, geoGnomonic, geoGnomonicRaw, geoIdentity, geoProjection, geoProjectionMutator, geoMercator, geoMercatorRaw, geoNaturalEarth1, geoNaturalEarth1Raw, geoOrthographic, geoOrthographicRaw, geoStereographic, geoStereographicRaw, geoTransverseMercator, geoTransverseMercatorRaw, geoRotation, geoStream, geoTransform, cluster, hierarchy, pack, packSiblings, packEnclose, partition, stratify, tree, treemap, treemapBinary, treemapDice, treemapSlice, treemapSliceDice, treemapSquarify, treemapResquarify, interpolate, interpolateArray, interpolateBasis, interpolateBasisClosed, interpolateDate, interpolateDiscrete, interpolateHue, interpolateNumber, interpolateObject, interpolateRound, interpolateString, interpolateTransformCss, interpolateTransformSvg, interpolateZoom, interpolateRgb, interpolateRgbBasis, interpolateRgbBasisClosed, interpolateHsl, interpolateHslLong, interpolateLab, interpolateHcl, interpolateHclLong, interpolateCubehelix, interpolateCubehelixLong, piecewise, quantize, path, polygonArea, polygonCentroid, polygonHull, polygonContains, polygonLength, quadtree, randomUniform, randomNormal, randomLogNormal, randomBates, randomIrwinHall, randomExponential, scaleBand, scalePoint, scaleIdentity, scaleLinear, scaleLog, scaleSymlog, scaleOrdinal, scaleImplicit, scalePow, scaleSqrt, scaleQuantile, scaleQuantize, scaleThreshold, scaleTime, scaleUtc, scaleSequential, scaleSequentialLog, scaleSequentialPow, scaleSequentialSqrt, scaleSequentialSymlog, scaleSequentialQuantile, scaleDiverging, scaleDivergingLog, scaleDivergingPow, scaleDivergingSqrt, scaleDivergingSymlog, tickFormat, schemeCategory10, schemeAccent, schemeDark2, schemePaired, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3, interpolateBrBG, schemeBrBG, interpolatePRGn, schemePRGn, interpolatePiYG, schemePiYG, interpolatePuOr, schemePuOr, interpolateRdBu, schemeRdBu, interpolateRdGy, schemeRdGy, interpolateRdYlBu, schemeRdYlBu, interpolateRdYlGn, schemeRdYlGn, interpolateSpectral, schemeSpectral, interpolateBuGn, schemeBuGn, interpolateBuPu, schemeBuPu, interpolateGnBu, schemeGnBu, interpolateOrRd, schemeOrRd, interpolatePuBuGn, schemePuBuGn, interpolatePuBu, schemePuBu, interpolatePuRd, schemePuRd, interpolateRdPu, schemeRdPu, interpolateYlGnBu, schemeYlGnBu, interpolateYlGn, schemeYlGn, interpolateYlOrBr, schemeYlOrBr, interpolateYlOrRd, schemeYlOrRd, interpolateBlues, schemeBlues, interpolateGreens, schemeGreens, interpolateGreys, schemeGreys, interpolatePurples, schemePurples, interpolateReds, schemeReds, interpolateOranges, schemeOranges, interpolateCubehelixDefault, interpolateRainbow, interpolateWarm, interpolateCool, interpolateSinebow, interpolateViridis, interpolateMagma, interpolateInferno, interpolatePlasma, create, creator, local, matcher, mouse, namespace, namespaces, clientPoint, select, selectAll, selection, selector, selectorAll, style, touch, touches, window, event, customEvent, arc, area, line, pie, areaRadial, radialArea, lineRadial, radialLine, pointRadial, linkHorizontal, linkVertical, linkRadial, symbol, symbols, symbolCircle, symbolCross, symbolDiamond, symbolSquare, symbolStar, symbolTriangle, symbolWye, curveBasisClosed, curveBasisOpen, curveBasis, curveBundle, curveCardinalClosed, curveCardinalOpen, curveCardinal, curveCatmullRomClosed, curveCatmullRomOpen, curveCatmullRom, curveLinearClosed, curveLinear, curveMonotoneX, curveMonotoneY, curveNatural, curveStep, curveStepAfter, curveStepBefore, stack, stackOffsetExpand, stackOffsetDiverging, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle, stackOrderAppearance, stackOrderAscending, stackOrderDescending, stackOrderInsideOut, stackOrderNone, stackOrderReverse, timeInterval, timeMillisecond, timeMilliseconds, utcMillisecond, utcMilliseconds, timeSecond, timeSeconds, utcSecond, utcSeconds, timeMinute, timeMinutes, timeHour, timeHours, timeDay, timeDays, timeWeek, timeWeeks, timeSunday, timeSundays, timeMonday, timeMondays, timeTuesday, timeTuesdays, timeWednesday, timeWednesdays, timeThursday, timeThursdays, timeFriday, timeFridays, timeSaturday, timeSaturdays, timeMonth, timeMonths, timeYear, timeYears, utcMinute, utcMinutes, utcHour, utcHours, utcDay, utcDays, utcWeek, utcWeeks, utcSunday, utcSundays, utcMonday, utcMondays, utcTuesday, utcTuesdays, utcWednesday, utcWednesdays, utcThursday, utcThursdays, utcFriday, utcFridays, utcSaturday, utcSaturdays, utcMonth, utcMonths, utcYear, utcYears, timeFormatDefaultLocale, timeFormat, timeParse, utcFormat, utcParse, timeFormatLocale, isoFormat, isoParse, now, timer, timerFlush, timeout, interval, transition, active, interrupt, voronoi, zoom, zoomTransform, zoomIdentity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dist_package__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/package */ "./node_modules/d3/dist/package.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "version", function() { return _dist_package__WEBPACK_IMPORTED_MODULE_0__["version"]; });

/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisect", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["bisect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["bisectRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["bisectLeft"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ascending", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["ascending"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisector", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["bisector"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["cross"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "descending", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["descending"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deviation", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["deviation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["extent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "histogram", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["histogram"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdFreedmanDiaconis", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["thresholdFreedmanDiaconis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdScott", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["thresholdScott"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdSturges", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["thresholdSturges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["max"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["mean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "median", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["median"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["merge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["min"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["pairs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permute", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["permute"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantile", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["quantile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["range"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["scan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["shuffle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["sum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ticks", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["ticks"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["tickIncrement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["tickStep"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["transpose"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "variance", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["variance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return d3_array__WEBPACK_IMPORTED_MODULE_1__["zip"]; });

/* harmony import */ var d3_axis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-axis */ "./node_modules/d3-axis/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisTop", function() { return d3_axis__WEBPACK_IMPORTED_MODULE_2__["axisTop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisRight", function() { return d3_axis__WEBPACK_IMPORTED_MODULE_2__["axisRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisBottom", function() { return d3_axis__WEBPACK_IMPORTED_MODULE_2__["axisBottom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisLeft", function() { return d3_axis__WEBPACK_IMPORTED_MODULE_2__["axisLeft"]; });

/* harmony import */ var d3_brush__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-brush */ "./node_modules/d3-brush/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brush", function() { return d3_brush__WEBPACK_IMPORTED_MODULE_3__["brush"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brushX", function() { return d3_brush__WEBPACK_IMPORTED_MODULE_3__["brushX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brushY", function() { return d3_brush__WEBPACK_IMPORTED_MODULE_3__["brushY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "brushSelection", function() { return d3_brush__WEBPACK_IMPORTED_MODULE_3__["brushSelection"]; });

/* harmony import */ var d3_chord__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-chord */ "./node_modules/d3-chord/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chord", function() { return d3_chord__WEBPACK_IMPORTED_MODULE_4__["chord"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ribbon", function() { return d3_chord__WEBPACK_IMPORTED_MODULE_4__["ribbon"]; });

/* harmony import */ var d3_collection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-collection */ "./node_modules/d3-collection/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nest", function() { return d3_collection__WEBPACK_IMPORTED_MODULE_5__["nest"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "set", function() { return d3_collection__WEBPACK_IMPORTED_MODULE_5__["set"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return d3_collection__WEBPACK_IMPORTED_MODULE_5__["map"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keys", function() { return d3_collection__WEBPACK_IMPORTED_MODULE_5__["keys"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "values", function() { return d3_collection__WEBPACK_IMPORTED_MODULE_5__["values"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "entries", function() { return d3_collection__WEBPACK_IMPORTED_MODULE_5__["entries"]; });

/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "color", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["color"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rgb", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["rgb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hsl", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["hsl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lab", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["lab"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hcl", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["hcl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lch", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["lch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gray", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["gray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cubehelix", function() { return d3_color__WEBPACK_IMPORTED_MODULE_6__["cubehelix"]; });

/* harmony import */ var d3_contour__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-contour */ "./node_modules/d3-contour/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "contours", function() { return d3_contour__WEBPACK_IMPORTED_MODULE_7__["contours"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "contourDensity", function() { return d3_contour__WEBPACK_IMPORTED_MODULE_7__["contourDensity"]; });

/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dispatch", function() { return d3_dispatch__WEBPACK_IMPORTED_MODULE_8__["dispatch"]; });

/* harmony import */ var d3_drag__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! d3-drag */ "./node_modules/d3-drag/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drag", function() { return d3_drag__WEBPACK_IMPORTED_MODULE_9__["drag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dragDisable", function() { return d3_drag__WEBPACK_IMPORTED_MODULE_9__["dragDisable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dragEnable", function() { return d3_drag__WEBPACK_IMPORTED_MODULE_9__["dragEnable"]; });

/* harmony import */ var d3_dsv__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! d3-dsv */ "./node_modules/d3-dsv/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dsvFormat", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["dsvFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvParse", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["csvParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvParseRows", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["csvParseRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormat", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["csvFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormatBody", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["csvFormatBody"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormatRows", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["csvFormatRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvParse", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["tsvParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvParseRows", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["tsvParseRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormat", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["tsvFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormatBody", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["tsvFormatBody"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormatRows", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["tsvFormatRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "autoType", function() { return d3_dsv__WEBPACK_IMPORTED_MODULE_10__["autoType"]; });

/* harmony import */ var d3_ease__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! d3-ease */ "./node_modules/d3-ease/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeLinear", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuad", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeQuad"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuadIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeQuadIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuadOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeQuadOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeQuadInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeQuadInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubic", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCubic"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubicIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCubicIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubicOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCubicOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCubicInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCubicInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePoly", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easePoly"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePolyIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easePolyIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePolyOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easePolyOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easePolyInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easePolyInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSin", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeSin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSinIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeSinIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSinOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeSinOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeSinInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeSinInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExp", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeExp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExpIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeExpIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExpOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeExpOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeExpInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeExpInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircle", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCircle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircleIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCircleIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircleOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCircleOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeCircleInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeCircleInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounce", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBounce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounceIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBounceIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounceOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBounceOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBounceInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBounceInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBack", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBack"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBackIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBackIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBackOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBackOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeBackInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeBackInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElastic", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeElastic"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElasticIn", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeElasticIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElasticOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeElasticOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeElasticInOut", function() { return d3_ease__WEBPACK_IMPORTED_MODULE_11__["easeElasticInOut"]; });

/* harmony import */ var d3_fetch__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! d3-fetch */ "./node_modules/d3-fetch/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blob", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["blob"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["buffer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dsv", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["dsv"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csv", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["csv"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsv", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["tsv"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "image", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["image"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "json", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["json"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "text", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["text"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xml", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["xml"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "html", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["html"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "svg", function() { return d3_fetch__WEBPACK_IMPORTED_MODULE_12__["svg"]; });

/* harmony import */ var d3_force__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! d3-force */ "./node_modules/d3-force/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceCenter", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceCenter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceCollide", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceCollide"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceLink", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceLink"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceManyBody", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceManyBody"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceRadial", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceRadial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceSimulation", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceSimulation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceX", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceY", function() { return d3_force__WEBPACK_IMPORTED_MODULE_13__["forceY"]; });

/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDefaultLocale", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["formatDefaultLocale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "format", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["format"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatPrefix", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["formatPrefix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatLocale", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["formatLocale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatSpecifier", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["formatSpecifier"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionFixed", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["precisionFixed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionPrefix", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["precisionPrefix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionRound", function() { return d3_format__WEBPACK_IMPORTED_MODULE_14__["precisionRound"]; });

/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoArea", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBounds", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoBounds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCentroid", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoCentroid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCircle", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoCircle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipAntimeridian", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoClipAntimeridian"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipCircle", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoClipCircle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipExtent", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoClipExtent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipRectangle", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoClipRectangle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoContains", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoContains"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoDistance", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoDistance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGraticule", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoGraticule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGraticule10", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoGraticule10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterpolate", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoInterpolate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLength", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoLength"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPath", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAlbers", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoAlbers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAlbersUsa", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoAlbersUsa"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEqualArea", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoAzimuthalEqualArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEqualAreaRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoAzimuthalEqualAreaRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEquidistant", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoAzimuthalEquidistant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEquidistantRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoAzimuthalEquidistantRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicConformal", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoConicConformal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicConformalRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoConicConformalRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEqualArea", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoConicEqualArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEqualAreaRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoConicEqualAreaRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEquidistant", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoConicEquidistant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEquidistantRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoConicEquidistantRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEqualEarth", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoEqualEarth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEqualEarthRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoEqualEarthRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEquirectangular", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoEquirectangular"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEquirectangularRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoEquirectangularRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGnomonic", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoGnomonic"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGnomonicRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoGnomonicRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoIdentity", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoIdentity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoProjection", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoProjection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoProjectionMutator", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoProjectionMutator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMercator", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoMercator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMercatorRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoMercatorRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth1", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoNaturalEarth1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth1Raw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoNaturalEarth1Raw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoOrthographic", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoOrthographic"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoOrthographicRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoOrthographicRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStereographic", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoStereographic"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStereographicRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoStereographicRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransverseMercator", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoTransverseMercator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransverseMercatorRaw", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoTransverseMercatorRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoRotation", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoRotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStream", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoStream"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransform", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_15__["geoTransform"]; });

/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! d3-hierarchy */ "./node_modules/d3-hierarchy/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cluster", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["cluster"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hierarchy", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["hierarchy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pack", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["pack"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "packSiblings", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["packSiblings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "packEnclose", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["packEnclose"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["partition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stratify", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["stratify"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tree", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["tree"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemap", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapBinary", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemapBinary"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapDice", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemapDice"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSlice", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemapSlice"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSliceDice", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemapSliceDice"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSquarify", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemapSquarify"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapResquarify", function() { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__["treemapResquarify"]; });

/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateArray", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasis", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateBasis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasisClosed", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateBasisClosed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDate", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDiscrete", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateDiscrete"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHue", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateHue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateNumber", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateObject", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRound", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateRound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateString", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformCss", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateTransformCss"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformSvg", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateTransformSvg"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateZoom", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateZoom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgb", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateRgb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasis", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateRgbBasis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasisClosed", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateRgbBasisClosed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHsl", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateHsl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHslLong", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateHslLong"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateLab", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateLab"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHcl", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateHcl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHclLong", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateHclLong"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelix", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateCubehelix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelixLong", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["interpolateCubehelixLong"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "piecewise", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["piecewise"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantize", function() { return d3_interpolate__WEBPACK_IMPORTED_MODULE_17__["quantize"]; });

/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "path", function() { return d3_path__WEBPACK_IMPORTED_MODULE_18__["path"]; });

/* harmony import */ var d3_polygon__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! d3-polygon */ "./node_modules/d3-polygon/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonArea", function() { return d3_polygon__WEBPACK_IMPORTED_MODULE_19__["polygonArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonCentroid", function() { return d3_polygon__WEBPACK_IMPORTED_MODULE_19__["polygonCentroid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonHull", function() { return d3_polygon__WEBPACK_IMPORTED_MODULE_19__["polygonHull"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonContains", function() { return d3_polygon__WEBPACK_IMPORTED_MODULE_19__["polygonContains"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "polygonLength", function() { return d3_polygon__WEBPACK_IMPORTED_MODULE_19__["polygonLength"]; });

/* harmony import */ var d3_quadtree__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! d3-quadtree */ "./node_modules/d3-quadtree/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quadtree", function() { return d3_quadtree__WEBPACK_IMPORTED_MODULE_20__["quadtree"]; });

/* harmony import */ var d3_random__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! d3-random */ "./node_modules/d3-random/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomUniform", function() { return d3_random__WEBPACK_IMPORTED_MODULE_21__["randomUniform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomNormal", function() { return d3_random__WEBPACK_IMPORTED_MODULE_21__["randomNormal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomLogNormal", function() { return d3_random__WEBPACK_IMPORTED_MODULE_21__["randomLogNormal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomBates", function() { return d3_random__WEBPACK_IMPORTED_MODULE_21__["randomBates"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomIrwinHall", function() { return d3_random__WEBPACK_IMPORTED_MODULE_21__["randomIrwinHall"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomExponential", function() { return d3_random__WEBPACK_IMPORTED_MODULE_21__["randomExponential"]; });

/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! d3-scale */ "./node_modules/d3-scale/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleBand", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleBand"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scalePoint", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scalePoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleIdentity", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleIdentity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleLinear", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleLog", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSymlog", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSymlog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleOrdinal", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleOrdinal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleImplicit", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleImplicit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scalePow", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scalePow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSqrt", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleQuantile", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleQuantile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleQuantize", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleQuantize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleThreshold", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleThreshold"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleTime", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleTime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleUtc", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleUtc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequential", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSequential"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialLog", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSequentialLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialPow", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSequentialPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialSqrt", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSequentialSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialSymlog", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSequentialSymlog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialQuantile", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleSequentialQuantile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDiverging", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleDiverging"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingLog", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleDivergingLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingPow", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleDivergingPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingSqrt", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleDivergingSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingSymlog", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["scaleDivergingSymlog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickFormat", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_22__["tickFormat"]; });

/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeCategory10", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeCategory10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeAccent", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeAccent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeDark2", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeDark2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePaired", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePaired"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePastel1", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePastel1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePastel2", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePastel2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet1", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeSet1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet2", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeSet2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet3", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeSet3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBrBG", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateBrBG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBrBG", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeBrBG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePRGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePRGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePRGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePRGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePiYG", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePiYG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePiYG", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePiYG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuOr", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePuOr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuOr", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePuOr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateRdBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeRdBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdGy", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateRdGy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdGy", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeRdGy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdYlBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateRdYlBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdYlBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeRdYlBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdYlGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateRdYlGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdYlGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeRdYlGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateSpectral", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateSpectral"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSpectral", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeSpectral"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBuGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateBuGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBuGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeBuGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBuPu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateBuPu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBuPu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeBuPu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGnBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateGnBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGnBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeGnBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateOrRd", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateOrRd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeOrRd", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeOrRd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuBuGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePuBuGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuBuGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePuBuGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePuBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePuBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuRd", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePuRd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuRd", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePuRd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdPu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateRdPu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdPu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeRdPu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlGnBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateYlGnBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlGnBu", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeYlGnBu"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateYlGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlGn", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeYlGn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlOrBr", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateYlOrBr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlOrBr", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeYlOrBr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlOrRd", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateYlOrRd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlOrRd", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeYlOrRd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBlues", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateBlues"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBlues", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeBlues"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGreens", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateGreens"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGreens", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeGreens"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGreys", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateGreys"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGreys", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeGreys"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePurples", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePurples"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePurples", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemePurples"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateReds", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateReds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeReds", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeReds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateOranges", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateOranges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeOranges", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["schemeOranges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelixDefault", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateCubehelixDefault"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRainbow", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateRainbow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateWarm", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateWarm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCool", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateCool"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateSinebow", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateSinebow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateViridis", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateViridis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateMagma", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateMagma"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateInferno", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolateInferno"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePlasma", function() { return d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["interpolatePlasma"]; });

/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "create", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["create"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "creator", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["creator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "local", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["local"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matcher", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["matcher"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mouse", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["mouse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["namespace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "namespaces", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["namespaces"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clientPoint", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["clientPoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "select", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["select"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectAll", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["selectAll"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selection", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["selection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selector", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["selector"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectorAll", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["selectorAll"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "style", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["style"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touch", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["touch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touches", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["touches"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "window", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["window"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "event", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["event"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "customEvent", function() { return d3_selection__WEBPACK_IMPORTED_MODULE_24__["customEvent"]; });

/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! d3-shape */ "./node_modules/d3-shape/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arc", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["arc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "area", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["area"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "line", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["line"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pie", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["pie"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "areaRadial", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["areaRadial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "radialArea", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["radialArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lineRadial", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["lineRadial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "radialLine", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["radialLine"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pointRadial", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["pointRadial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkHorizontal", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["linkHorizontal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkVertical", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["linkVertical"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkRadial", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["linkRadial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbol", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbol"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbols", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbols"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolCircle", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolCircle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolCross", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolCross"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolDiamond", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolDiamond"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolSquare", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolSquare"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolStar", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolStar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolTriangle", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolTriangle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolWye", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["symbolWye"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasisClosed", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveBasisClosed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasisOpen", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveBasisOpen"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasis", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveBasis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBundle", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveBundle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinalClosed", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveCardinalClosed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinalOpen", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveCardinalOpen"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinal", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveCardinal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRomClosed", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveCatmullRomClosed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRomOpen", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveCatmullRomOpen"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRom", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveCatmullRom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveLinearClosed", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveLinearClosed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveLinear", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveMonotoneX", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveMonotoneX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveMonotoneY", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveMonotoneY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveNatural", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveNatural"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStep", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveStep"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStepAfter", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveStepAfter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStepBefore", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["curveStepBefore"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stack", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stack"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetExpand", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOffsetExpand"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetDiverging", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOffsetDiverging"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetNone", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOffsetNone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetSilhouette", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOffsetSilhouette"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetWiggle", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOffsetWiggle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderAppearance", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOrderAppearance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderAscending", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOrderAscending"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderDescending", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOrderDescending"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderInsideOut", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOrderInsideOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderNone", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOrderNone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderReverse", function() { return d3_shape__WEBPACK_IMPORTED_MODULE_25__["stackOrderReverse"]; });

/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeInterval"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMillisecond", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMillisecond"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMilliseconds", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMilliseconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMillisecond", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMillisecond"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMilliseconds", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMilliseconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSecond", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeSecond"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSeconds", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeSeconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSecond", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcSecond"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSeconds", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcSeconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMinute", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMinute"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMinutes", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMinutes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeHour", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeHour"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeHours", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeHours"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeDay", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeDay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeDays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeDays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWeek", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeWeek"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWeeks", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeWeeks"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSunday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeSunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSundays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeSundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMonday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMondays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMondays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTuesday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeTuesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTuesdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeTuesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWednesday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeWednesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWednesdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeWednesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeThursday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeThursday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeThursdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeThursdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFriday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeFriday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFridays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeFridays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSaturday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeSaturday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSaturdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeSaturdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonth", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMonth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonths", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeMonths"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeYear", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeYear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeYears", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["timeYears"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMinute", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMinute"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMinutes", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMinutes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcHour", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcHour"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcHours", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcHours"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcDay", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcDay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcDays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcDays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWeek", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcWeek"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWeeks", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcWeeks"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSunday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcSunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSundays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcSundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMonday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMondays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMondays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTuesday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcTuesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTuesdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcTuesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWednesday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcWednesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWednesdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcWednesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcThursday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcThursday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcThursdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcThursdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFriday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcFriday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFridays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcFridays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSaturday", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcSaturday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSaturdays", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcSaturdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonth", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMonth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonths", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcMonths"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcYear", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcYear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcYears", function() { return d3_time__WEBPACK_IMPORTED_MODULE_26__["utcYears"]; });

/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatDefaultLocale", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["timeFormatDefaultLocale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormat", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["timeFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeParse", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["timeParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFormat", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["utcFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcParse", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["utcParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatLocale", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["timeFormatLocale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isoFormat", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["isoFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isoParse", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_27__["isoParse"]; });

/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "now", function() { return d3_timer__WEBPACK_IMPORTED_MODULE_28__["now"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return d3_timer__WEBPACK_IMPORTED_MODULE_28__["timer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timerFlush", function() { return d3_timer__WEBPACK_IMPORTED_MODULE_28__["timerFlush"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return d3_timer__WEBPACK_IMPORTED_MODULE_28__["timeout"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return d3_timer__WEBPACK_IMPORTED_MODULE_28__["interval"]; });

/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! d3-transition */ "./node_modules/d3-transition/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transition", function() { return d3_transition__WEBPACK_IMPORTED_MODULE_29__["transition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "active", function() { return d3_transition__WEBPACK_IMPORTED_MODULE_29__["active"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interrupt", function() { return d3_transition__WEBPACK_IMPORTED_MODULE_29__["interrupt"]; });

/* harmony import */ var d3_voronoi__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! d3-voronoi */ "./node_modules/d3-voronoi/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "voronoi", function() { return d3_voronoi__WEBPACK_IMPORTED_MODULE_30__["voronoi"]; });

/* harmony import */ var d3_zoom__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! d3-zoom */ "./node_modules/d3-zoom/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoom", function() { return d3_zoom__WEBPACK_IMPORTED_MODULE_31__["zoom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomTransform", function() { return d3_zoom__WEBPACK_IMPORTED_MODULE_31__["zoomTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomIdentity", function() { return d3_zoom__WEBPACK_IMPORTED_MODULE_31__["zoomIdentity"]; });


































/***/ }),

/***/ "./src/Connection.js":
/*!***************************!*\
  !*** ./src/Connection.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Connection; });
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var Connection =
/*#__PURE__*/
function () {
  function Connection() {
    _classCallCheck(this, Connection);
  }

  _createClass(Connection, null, [{
    key: "makeNodeList",
    // //detect whether selected node match or not, and if matched, move to selected node.
    // static goToMatchedNode(selectedName) {
    //   let selectNode = d3.selectAll("circle")["_groups"][0]
    //   for (let i = 0, l = dataSet.nodes.length; l > i; i++) {
    //     if (dataSet.nodes[i].id === selectedName) {
    //       selectNode = selectNode[i];
    //       let selectNodeX = selectNode.cx.animVal.value;
    //       let selectNodeY = selectNode.cy.animVal.value;
    //
    //       //move to selected node
    //       //translate(100,50):原点を100,50移動するという意味
    //       //let serchedTransform = d3.zoomIdentity
    //       //    .translate(-selectNodeX+width/2, -selectNodeY+height/2)
    //       //    .scale(1);
    //
    //       let scaleVal = 0.2;
    //       let serchedTransform = d3.zoomIdentity
    //           .translate(-selectNodeX * scaleVal + width / 2, -selectNodeY * scaleVal + height / 2)
    //           .scale(scaleVal);
    //
    //       svg.call(zoom_handler.transform, serchedTransform);
    //     }
    //   }
    // }
    value: function makeNodeList(nodeIndex, linkData) {
      var sameNodes = [];
      var diffNodes = [];

      for (var i = 0, l = linkData.length; l > i; i++) {
        if (linkData[i].target.index === nodeIndex) {
          if (linkData[i].source.group_id === linkData[i].target.group_id) {
            sameNodes.push(linkData[i].source.name); //console.log(linkData[i].source.name)
          } else {
            diffNodes.push(linkData[i].source.name);
          }
        }

        if (linkData[i].source.index === nodeIndex) {
          if (linkData[i].source.group_id === linkData[i].target.group_id) {
            sameNodes.push(linkData[i].target.name); //console.log(linkData[i].source.name)
          } else {
            diffNodes.push(linkData[i].target.name);
          }
        }
      }

      sameNodes = sameNodes.sort();
      diffNodes = diffNodes.sort();
      return {
        sameNodes: sameNodes,
        diffNodes: diffNodes
      };
    }
  }, {
    key: "makeNodeList2nd",
    value: function makeNodeList2nd(nodeIndex, linkData, clickedNodeCategory) {
      var sameNodes = [];
      var diffNodes = [];

      for (var i = 0, l = linkData.length; l > i; i++) {
        if (linkData[i].target.index === nodeIndex) {
          if (linkData[i].source.group_id === clickedNodeCategory) {
            sameNodes.push(linkData[i].source.name); //console.log(linkData[i].source.name)
          } else {
            diffNodes.push(linkData[i].source.name);
          }
        }

        if (linkData[i].source.index === nodeIndex) {
          if (linkData[i].target.group_id === clickedNodeCategory) {
            sameNodes.push(linkData[i].target.name); //console.log(linkData[i].source.name)
          } else {
            diffNodes.push(linkData[i].target.name);
          }
        }
      }

      sameNodes = sameNodes.sort();
      diffNodes = diffNodes.sort();
      return {
        sameNodes: sameNodes,
        diffNodes: diffNodes
      };
    }
  }, {
    key: "displayDetail",
    value: function displayDetail(nodeName, sameNodes, diffNodes, areaID) {
      Connection.removeDetail(areaID);
      var detailBox = document.getElementById(areaID);
      var elements = []; // title

      elements.push('<p class="detailSelected" >' + nodeName + '</p>'); // same category

      elements.push('<p class="detailTitle" >' + "same category(".concat(sameNodes.length, ")") + '</p>');

      for (var i = 0, l = sameNodes.length; l > i; i++) {
        elements.push('<p class="detailText" >' + sameNodes[i] + '</p>');
      }

      elements.push('</br>'); // different category

      elements.push('<p class="detailTitle" >' + "different category(".concat(diffNodes.length, ")") + '</p>');

      for (var _i = 0, _l = diffNodes.length; _l > _i; _i++) {
        elements.push('<p class="detailText" >' + diffNodes[_i] + '</p>');
      }

      elements.push('</br>');
      detailBox.insertAdjacentHTML('beforeEnd', elements.join(''));
    }
  }, {
    key: "removeDetail",
    value: function removeDetail(areaID) {
      var detailBox = document.getElementById(areaID);
      detailBox.innerHTML = '';
    }
  }]);

  return Connection;
}();



/***/ }),

/***/ "./src/Mouse.js":
/*!**********************!*\
  !*** ./src/Mouse.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Mouse; });
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var Mouse =
/*#__PURE__*/
function () {
  function Mouse() {
    _classCallCheck(this, Mouse);
  }

  _createClass(Mouse, null, [{
    key: "mouseover",
    value: function mouseover(nodeIndex, linkData, linkLine, nodeCircle, nodeText) {
      // at first, make all node & line fade
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](nodeCircle)['_groups'][0].attr("class", "nodeColorFade");
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](linkLine)['_groups'][0].attr("class", "lineColorFade");
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](nodeText)['_groups'][0].attr("class", "nodeTextFade");

      for (var i = 0, l = linkData.length; l > i; i++) {
        if (linkData[i].source.index === nodeIndex || linkData[i].target.index === nodeIndex) {
          var lineIndex = i;
          var nodeSource = linkData[lineIndex].source.index;
          var nodeTarget = linkData[lineIndex].target.index; // line

          var selectLine = linkLine['_groups'][0][lineIndex];
          selectLine.setAttribute('class', 'lineColor'); // node

          nodeCircle['_groups'][0][nodeSource].setAttribute("class", "nodeColor");
          nodeCircle['_groups'][0][nodeTarget].setAttribute("class", "nodeColor"); // text

          nodeText['_groups'][0][nodeSource].setAttribute("class", "linkedNodeText");
          nodeText['_groups'][0][nodeTarget].setAttribute("class", "linkedNodeText");
        }
      } // selectNode


      nodeCircle['_groups'][0][nodeIndex].setAttribute("class", "nodeColor"); // selectNodeText

      nodeText['_groups'][0][nodeIndex].setAttribute("class", "linkedNodeText");
    }
  }, {
    key: "mouseout",
    value: function mouseout(linkData, linkLine, nodeCircle, nodeText) {
      Mouse.reset(linkData, linkLine, nodeCircle, nodeText);
    }
  }, {
    key: "mousedown",
    value: function mousedown(nodeIndex, linkData, linkLine, nodeCircle, nodeText) {
      // make node non-drag
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](nodeCircle)['_groups'][0].attr("class", "nodeColorFadeNonDrag");

      for (var i = 0, l = linkData.length; l > i; i++) {
        if (linkData[i].source.index === nodeIndex || linkData[i].target.index === nodeIndex) {
          var lineIndex = i;
          var nodeSource = linkData[lineIndex].source.index;
          var nodeTarget = linkData[lineIndex].target.index;
          nodeCircle['_groups'][0][nodeSource].setAttribute("class", "nodeColor");
          nodeCircle['_groups'][0][nodeTarget].setAttribute("class", "nodeColor");
        }
      } // selectNode


      nodeCircle['_groups'][0][nodeIndex].setAttribute("class", "nodeColor");
    }
  }, {
    key: "mouseup",
    value: function mouseup(nodeIndex, linkData, linkLine, nodeCircle, nodeText) {
      Mouse.reset(linkData, linkLine, nodeCircle, nodeText);
      Mouse.mouseover(nodeIndex, linkData, linkLine, nodeCircle, nodeText);
    }
  }, {
    key: "reset",
    value: function reset(linkData, linkLine, nodeCircle, nodeText) {
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](nodeCircle)['_groups'][0].attr("class", "nodeReturnFade");
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](linkLine)['_groups'][0].attr("class", "lineReturnFade");
      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](nodeText)['_groups'][0].attr("class", "nodeTextReturnFade");
    }
  }, {
    key: "cursor",
    value: function cursor(type, body, circle) {
      var grabTypeCircle;
      var grabTypeBody;

      if (type === 'grabbing') {
        grabTypeCircle = "grabbing";
        grabTypeBody = "grabbing";
      } else if (type === 'grab') {
        grabTypeCircle = "grab";
        grabTypeBody = "auto";
      } else if (type === 'pointer') {
        grabTypeCircle = "pointer";
        grabTypeBody = "auto";
      } //grabbing


      circle.style("cursor", "-webkit-" + grabTypeCircle);
      circle.style("cursor", "-moz-" + grabTypeCircle);
      circle.style("cursor", grabTypeCircle);
      body.style("cursor", "-webkit-" + grabTypeBody);
      body.style("cursor", "-moz-" + grabTypeBody);
      body.style("cursor", grabTypeBody);
    }
  }]);

  return Mouse;
}();



/***/ }),

/***/ "./src/Network.js":
/*!************************!*\
  !*** ./src/Network.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Network; });
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
/* harmony import */ var _Mouse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Mouse */ "./src/Mouse.js");
/* harmony import */ var _Update__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Update */ "./src/Update.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





var Network =
/*#__PURE__*/
function () {
  function Network(flavorData, umamiData, isSp, svgID, dataType, vizMode, vizID, nodeInfo) {
    _classCallCheck(this, Network);

    this.flavorData = flavorData;
    this.umamiData = umamiData;
    this.dataType = dataType;
    this.vizMode = vizMode;
    this.vizID = vizID;
    this.linkData = dataType === 'Flavor' ? this.flavorData.links : this.umamiData.links;
    this.nodeData = dataType === 'Flavor' ? this.flavorData.nodes : this.umamiData.nodes;
    this.width = 1000;
    this.height = 650;
    this.centerX = this.width / 2 + 30;
    this.centerY = this.height / 2 + 15;
    this.body = d3__WEBPACK_IMPORTED_MODULE_0__["select"]("body");
    this.svg = d3__WEBPACK_IMPORTED_MODULE_0__["select"](svgID); // this.scaleRatio = 1.0;

    this.zoomScale = {
      'scale': 1.0,
      'X': 0,
      'Y': 0
    };
    this.svg.attr("style", "outline: 1px solid #ff8e1e;") // .attr("width", this.width / this.scaleRatio)
    // .attr("height", this.height / this.scaleRatio)
    .attr("width", vizMode === 'Single' ? this.width : 0).attr("height", vizMode === 'Single' ? this.height : 0).attr("viewBox", "0 0 1000 650");
    this.link = '';
    this.node = '';
    this.label = '';
    this.simulation = d3__WEBPACK_IMPORTED_MODULE_0__["forceSimulation"]();
    this.nodeInfo = nodeInfo;
    this.isDragging = 0;
    this.legend = '';
    this.legendName = ["plant", "fruit", "meat", "vegetable", "cereal/crop", "alcoholic beverage", "herb", "dairy", "nut/seed/pulse", "spice", "fish/seafood", "plant derivative", "flower", "animal product"];
    this.legendColor = ["#0fff0f", "#fc783f", "#ff4c4c", "#3cb37a", "#e8c59c", "#e73552", "#ad5d88", "#db830d", "#965d21", "#00afcc", "#434da2", "#b3e500", "#ff00ae", "#ff7fbf"];
    this.wallMargin = 7.5;
    this.isSp = isSp;
    this.zoomGroup = this.svg.append("g");
    this.zoom_handler = d3__WEBPACK_IMPORTED_MODULE_0__["zoom"]().scaleExtent([0.5, 2]) // .translateExtent([
    //   [-this.width / 2, -this.height / 2], [this.width + this.width / 2, this.height + this.height / 2]
    // ])
    .on("zoom", this.zoom_actions.bind(this)).on("start", this.zoom_start.bind(this)).on("end", this.zoom_end.bind(this)); //zoom initialises
    // this.initialTransform = d3.zoomIdentity
    //     .translate(this.width / 2, this.height / 2)
    //     .scale(0.25);

    this.svg.call(this.zoom_handler); // this.svg.call(this.zoom_handler.transform, this.initialTransform);
  }

  _createClass(Network, [{
    key: "setVizMode",
    value: function setVizMode(vizMode) {
      this.vizMode = vizMode;
    }
  }, {
    key: "color",
    value: function color(n) {
      return this.legendColor[n];
    }
  }, {
    key: "setLegend",
    value: function setLegend() {
      var _this = this;

      this.legend = this.svg.selectAll('.legends').data(this.legendName).enter().append('g').attr("class", "legends").attr("transform", function (d, i) {
        return "translate(20," + (i + 1) * 20 + ")";
      }).attr("width", 200).attr("height", 20); // $(".legends").css({"cursor": ["pointer"]});

      d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"](".legends").style("cursor", "pointer");
      this.legend.append('circle') // 凡例の色付け四角
      .attr("cx", 5).attr("cy", 5).attr("r", 9).attr("opacity", 0.6).attr("class", "legendCircle").attr("fill", function (d, i) {
        return _this.color(i);
      });
      this.legend.append('text') // 凡例の文言
      .attr("x", 20).attr("y", 10).attr("class", "legendText").text(function (d) {
        return d;
      }) // .attr("class", "textselected")
      .style("text-anchor", "start").style("font-size", 15);
    }
  }, {
    key: "render",
    value: function render() {
      this.setLink();
      this.setNode();
      this.setLabel();
      this.setSimulation();
    }
  }, {
    key: "setLink",
    value: function setLink() {
      var _this2 = this;

      this.link = this.zoomGroup.append("g").selectAll("line").data(this.linkData).enter().append("line").attr("opacity", "0.5").attr("stroke-width", function (d) {
        return Math.sqrt(d.weight) * 0.1 + d.weight * 0.015;
      }).attr("stroke", function (d) {
        return _this2.color(d.group_id_s);
      });
    }
  }, {
    key: "setNode",
    value: function setNode() {
      var _this3 = this;

      this.node = this.zoomGroup.append("g").selectAll("circle").filter(function () {
        return !this.classList.contains('legendCircle');
      }).data(this.nodeData).enter().append("circle") // .attr("opacity", "0.6")
      .attr("r", function (d) {
        return Math.sqrt(d.size) * 4 + 2.5;
      }).attr("fill", function (d) {
        return _this3.color(d.group_id);
      }).attr("stroke", "#fffcf9").call(d3__WEBPACK_IMPORTED_MODULE_0__["drag"]().on("start", this.dragstarted.bind(this)).on("drag", this.dragging.bind(this)).on("end", this.dragended.bind(this)));

      if (this.dataType === 'Flavor') {
        this.node.attr("opacity", "0.6");
      } else {
        this.node.attr("opacity", function (d) {
          return d.umami === 1 ? "0.6" : "0.2";
        });
      }
    }
  }, {
    key: "setLabel",
    value: function setLabel() {
      this.label = this.zoomGroup.append("g").selectAll("text").filter(function () {
        return !this.classList.contains('legendText');
      }).filter(function () {
        return !this.classList.contains('node_link');
      }).data(this.nodeData).enter().append("text").text(function (d) {
        return d.name;
      });
      this.label.attr("font-size", ".7em").attr("font-weight", "300").attr("class", "nonDrag").attr("fill", "#352622").attr({
        "font-family": ["Futura", "Nunito", "Helvetica Neue", "Arial", "sans-serif"]
      });

      if (this.dataType === 'Flavor') {
        this.label.attr("opacity", "1.0");
      } else {
        this.label.attr("opacity", function (d) {
          return d.umami === 1 ? "1.0" : "0.5";
        });
      }
    }
  }, {
    key: "setSimulation",
    value: function setSimulation() {
      this.simulation.force("link", d3__WEBPACK_IMPORTED_MODULE_0__["forceLink"]().distance(80) //     .distance(function(d) { return  Math.sqrt(d.weight) * 0.1 + d.weight * 0.5; })
      .strength(0.8).iterations(1.0).id(function (d) {
        return d.name;
      })).force("collide", d3__WEBPACK_IMPORTED_MODULE_0__["forceCollide"]().radius(function (d) {
        return Math.sqrt(d.size) * 4 + 2.5;
      }).strength(0.7).iterations(1.0)).force("charge", d3__WEBPACK_IMPORTED_MODULE_0__["forceManyBody"]().strength(-300)).force("center", d3__WEBPACK_IMPORTED_MODULE_0__["forceCenter"](this.centerX, this.centerY)).force("x", d3__WEBPACK_IMPORTED_MODULE_0__["forceX"]().strength(0.25).x(this.centerX)).force("y", d3__WEBPACK_IMPORTED_MODULE_0__["forceY"]().strength(0.35).y(this.centerY));

      if (this.dataType === 'Umami') {
        _Update__WEBPACK_IMPORTED_MODULE_2__["default"].umamiSimulation(this.simulation, this.centerX, this.centerY);
      }

      this.simulation.nodes(this.nodeData).on("tick", this.ticked.bind(this));
      this.simulation.force("link").links(this.linkData);
    } ////////////////////////////////////////////////////////////////////
    // tick event

  }, {
    key: "ticked",
    value: function ticked() {
      if (this.zoomScale.scale <= 1) {
        var marginXright = this.wallMargin - this.zoomScale.X / this.zoomScale.scale;
        var marginYup = this.wallMargin - this.zoomScale.Y / this.zoomScale.scale;
        var marginXleft = (this.width - this.zoomScale.X) / this.zoomScale.scale - this.wallMargin;
        var marginYdown = (this.height - this.zoomScale.Y) / this.zoomScale.scale - this.wallMargin;
        this.link.attr("x1", function (d) {
          return Math.max(marginXright, Math.min(marginXleft, d.source.x));
        }).attr("y1", function (d) {
          return Math.max(marginYup, Math.min(marginYdown, d.source.y));
        }).attr("x2", function (d) {
          return Math.max(marginXright, Math.min(marginXleft, d.target.x));
        }).attr("y2", function (d) {
          return Math.max(marginYup, Math.min(marginYdown, d.target.y));
        });
        this.node.attr("cx", function (d) {
          return Math.max(marginXright, Math.min(marginXleft, d.x));
        }).attr("cy", function (d) {
          return Math.max(marginYup, Math.min(marginYdown, d.y));
        });
        this.label.attr("x", function (d) {
          return Math.max(marginXright, Math.min(marginXleft, d.x));
        }).attr("y", function (d) {
          return Math.max(marginYup, Math.min(marginYdown, d.y));
        });
      } else {
        this.link.attr("x1", function (d) {
          return d.source.x;
        }).attr("y1", function (d) {
          return d.source.y;
        }).attr("x2", function (d) {
          return d.target.x;
        }).attr("y2", function (d) {
          return d.target.y;
        });
        this.node.attr("cx", function (d) {
          return d.x;
        }).attr("cy", function (d) {
          return d.y;
        });
        this.label.attr("x", function (d) {
          return d.x;
        }).attr("y", function (d) {
          return d.y;
        });
      }
    } ////////////////////////////////////////////////////////////////////
    // drag event

  }, {
    key: "dragstarted",
    value: function dragstarted(d) {
      if (this.vizMode === 'Single') {
        if (!d3__WEBPACK_IMPORTED_MODULE_0__["event"].active) this.simulation.alphaTarget(0.3).restart();
        d.fx = d.x;
        d.fy = d.y;
        _Mouse__WEBPACK_IMPORTED_MODULE_1__["default"].mousedown(d.index, this.linkData, this.link, this.node, this.label);
        _Mouse__WEBPACK_IMPORTED_MODULE_1__["default"].cursor('grabbing', this.body, this.node);
      }

      this.isDragging = 1;
    }
  }, {
    key: "dragging",
    value: function dragging(d) {
      if (this.vizMode === 'Single') {
        d.fx = d3__WEBPACK_IMPORTED_MODULE_0__["event"].x;
        d.fy = d3__WEBPACK_IMPORTED_MODULE_0__["event"].y;
      }
    }
  }, {
    key: "dragended",
    value: function dragended(d) {
      if (this.vizMode === 'Single') {
        if (!d3__WEBPACK_IMPORTED_MODULE_0__["event"].active) this.simulation.alphaTarget(0);
        d.fx = null;
        d.fy = null;
        _Mouse__WEBPACK_IMPORTED_MODULE_1__["default"].mouseup(d.index, this.linkData, this.link, this.node, this.label);
        _Mouse__WEBPACK_IMPORTED_MODULE_1__["default"].cursor('grab', this.body, this.node);
      }

      this.isDragging = 0;
    } ////////////////////////////////////////////////////////////////////
    // zoom event

  }, {
    key: "zoom_actions",
    value: function zoom_actions() {
      this.zoomGroup.attr("transform", d3__WEBPACK_IMPORTED_MODULE_0__["event"].transform);
      this.zoomScale = this.getScale();
    }
  }, {
    key: "zoom_start",
    value: function zoom_start() {
      if (this.vizMode === 'Single') {
        this.simulation.alphaTarget(0.5).restart();
      }
    }
  }, {
    key: "zoom_end",
    value: function zoom_end() {
      if (this.vizMode === 'Single') {
        this.simulation.alphaTarget(0);
      }
    }
  }, {
    key: "getScale",
    value: function getScale() {
      var scale, X, Y;
      var scale_ = this.zoomGroup.attr('transform');

      if (scale_ === "none") {
        scale = 1.0;
      } else {
        var values = scale_.split("scale(")[1];
        scale = values.split(")")[0];
        var values_ = scale_.split("(")[1];
        values_ = values_.split(")")[0];
        values_ = values_.split(",");
        X = values_[0];
        Y = values_[1];
      }

      return {
        scale: scale,
        X: X,
        Y: Y
      };
    } ////////////////////////////////////////////////////////////////////
    // update network data

  }, {
    key: "update",
    value: function update(selectedType) {
      var _this4 = this;

      this.dataType = selectedType;
      var prevNodePosition = [];

      if (selectedType === 'Flavor') {
        _Update__WEBPACK_IMPORTED_MODULE_2__["default"].flavorSimulation(this.simulation, this.centerX, this.centerY);
        this.nodeData = this.flavorData.nodes;
        this.linkData = this.flavorData.links;
      } else if (selectedType === 'Umami') {
        _Update__WEBPACK_IMPORTED_MODULE_2__["default"].umamiSimulation(this.simulation, this.centerX, this.centerY);
        this.nodeData = this.umamiData.nodes;
        this.linkData = this.umamiData.links;
      }

      this.simulation.stop();
      var resDeleteObj;
      var resAddObj;
      new Promise(function (resolve) {
        resDeleteObj = _Update__WEBPACK_IMPORTED_MODULE_2__["default"].deleteObj(_this4.link, _this4.node, _this4.label, _this4.linkData, _this4.nodeData);
        setTimeout(function () {
          resolve(_this4.link = resDeleteObj.link, _this4.node = resDeleteObj.node, _this4.label = resDeleteObj.label, console.log(1));
        }, 500);
      }).then(function () {
        resAddObj = _Update__WEBPACK_IMPORTED_MODULE_2__["default"].addObj(_this4.link, _this4.node, _this4.label, _this4.nodeData, _this4.linkData, _this4.legendColor, _this4.dragstarted, _this4.dragging, _this4.dragended);
        return new Promise(function (resolve) {
          setTimeout(function () {
            resolve(_this4.link = resAddObj.link, _this4.node = resAddObj.node, _this4.label = resAddObj.label, console.log(2));
          }, 500);
        });
      }).then(function () {
        prevNodePosition = _Update__WEBPACK_IMPORTED_MODULE_2__["default"].storePreviousNodePosition(_this4.node, _this4.nodeData, prevNodePosition);
        _Update__WEBPACK_IMPORTED_MODULE_2__["default"].simulation(_this4.linkData, _this4.nodeData, _this4.simulation, _this4.ticked.bind(_this4));
        console.log(3);
      }).then(function () {
        setTimeout(function () {
          _Update__WEBPACK_IMPORTED_MODULE_2__["default"].nodeLabelOpacity(selectedType, _this4.node, _this4.label, _this4.nodeData);
        }, 500);

        _this4.simulation.tick(30);

        var t = 3000;
        return new Promise(function (resolve) {
          setTimeout(function () {
            resolve(_Update__WEBPACK_IMPORTED_MODULE_2__["default"].transitNodePosition(_this4.node, _this4.label, _this4.nodeData, prevNodePosition, t), _Update__WEBPACK_IMPORTED_MODULE_2__["default"].transitLinkPosition(_this4.link, _this4.linkData, prevNodePosition, t), console.log(4));
          }, 50);
        });
      });
    } ////////////////////////////////////////////////////////////////////
    // set mouse action (utility)

  }, {
    key: "setMouseAction",
    value: function setMouseAction() {
      var _this5 = this;

      if (!this.isSp) {
        this.node.on("mouseover", function (d) {
          // Mouse.mouseover(d.index, this.linkData, this.link, this.node, this.label);
          if (_this5.isDragging === 0) {
            _Mouse__WEBPACK_IMPORTED_MODULE_1__["default"].mouseover(d.index, _this5.linkData, _this5.link, _this5.node, _this5.label); // 内容が変わったときだけ変更する必要はない
            // if(this.nodeInfo.name !== d.name){
            //   this.nodeInfo.name = d.name;
            // }

            _this5.nodeInfo.network = _this5.vizID;
            _this5.nodeInfo.name = d.name;
            _this5.nodeInfo.mouseAction = 'mouseover'; // event trigger
          }
        });
        this.node.on("mouseout", function () {
          if (_this5.isDragging === 0) {
            _Mouse__WEBPACK_IMPORTED_MODULE_1__["default"].mouseout(_this5.linkData, _this5.link, _this5.node, _this5.label);
            _this5.nodeInfo.mouseAction = 'mouseout'; // event trigger
          }
        });
        this.node.on("click", function (d) {
          console.log('click', d.name);
          _this5.nodeInfo.mouseAction = 'click'; // event trigger
        }); // d3.select("body").on("mouseup", () => {
        //   console.log('mouseup')
        //   Mouse.reset(this.linkData, this.link, this.node, this.label);
        //   Mouse.cursor('grab', this.body, this.node);
        //
        // });

        this.svg.on("mouseenter", function () {
          _Mouse__WEBPACK_IMPORTED_MODULE_1__["default"].reset(_this5.linkData, _this5.link, _this5.node, _this5.label);
          _Mouse__WEBPACK_IMPORTED_MODULE_1__["default"].cursor(_this5.vizMode === 'Single' ? 'grab' : 'pointer', _this5.body, _this5.node);
          _this5.nodeInfo.mouseAction = 'mouseenter'; // event trigger
        });
      } /////////////////////////////////////////////////////////////
      // for SmartPhone
      // if (this.isSp) {
      //   let touchColored = 0;
      //   let touchmove = 0;
      //   this.svg.on("touchmove", () => {
      //     touchmove = 1
      //   });
      //
      //   this.node.on("touchstart", (d) => {
      //     Mouse.touchStart(d.index, this.linkData, this.link, this.node, this.label);
      //   });
      //
      //   node.on("touchend", () => {
      //     touchColored = 0;
      //   });
      //
      //   this.svg.on("touchstart", () => {
      //     touchColored = 1;
      //   });
      //
      //   this.svg.on("touchend", () => {
      //     if (touchmove === 0) {
      //       if (touchColored === 1) {
      //         this.node.attr("class", "nodeReturnFade");
      //         this.link.attr("class", "lineReturnFade");
      //         this.label.attr("class", "nodeTextReturnFade");
      //       }
      //     }
      //     touchmove = 0
      //   });
      // }

    } ////////////////////////////////////////////////////////////////////
    // comparision mode
    // getNodeName() {
    //   console.log(this.nodeInfo.name);
    //   return this.nodeInfo.name;
    // }

  }, {
    key: "detectNodeIndex",
    value: function detectNodeIndex(nodeName) {
      for (var i = 0, l = this.nodeData.length; l > i; i++) {
        if (this.nodeData[i].name === nodeName) {
          return i;
        }
      }
    }
    /*
    /////////////////////////////////////////////////////////////
     Legend.putId2Legend(cell, legendName);
    // ノードを更新する場合は再度クラスを付与する必要あり
    Legend.putClass2Node(nodes, circle);
      let legendFilter = d3.selectAll(".cell");
    if (!isSp) {
      legendFilter.on("mouseover", function () {
        const legendId = this.id.slice(9);
        Legend.mouseoverFilter(legendId, circle, cell, this.color);
       });
       legendFilter.on("click", function () {
        const legendId = this.id.slice(9);
        Legend.mouseoverClick(legendId, circle, cell, this.color);
       });
       // legend filter(mouse out)
      legendFilter.on("mouseout", function () {
        const legendId = this.id.slice(9);
        Legend.mouseoutFilter(legendId, circle, cell);
      });
    }
    */

  }]);

  return Network;
}();



/***/ }),

/***/ "./src/Update.js":
/*!***********************!*\
  !*** ./src/Update.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Update; });
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var Update =
/*#__PURE__*/
function () {
  function Update() {
    _classCallCheck(this, Update);
  }

  _createClass(Update, null, [{
    key: "deleteObj",
    value: function deleteObj(linkLine, nodeCircle, nodeText, linkData, nodeData) {
      return {
        link: Update.deleteLinkData(linkLine, linkData),
        node: Update.deleteNodeData(nodeCircle, nodeData),
        label: Update.deleteLabelData(nodeText, nodeData)
      };
    }
  }, {
    key: "addObj",
    value: function addObj(linkLine, nodeCircle, nodeText, nodeData, linkData, color, dragstarted, dragging, dragended) {
      return {
        link: Update.addLinkData(linkLine, linkData, color),
        node: Update.addNodeData(nodeCircle, nodeData, color, dragstarted, dragging, dragended),
        label: Update.addLabelData(nodeText)
      };
    }
  }, {
    key: "deleteLinkData",
    value: function deleteLinkData(linkLine, linkData) {
      linkLine = linkLine.data(linkData, function (d) {
        return d.name;
      });
      linkLine.exit() // .transition()
      // .duration(1000)
      // .ease(d3.easeLinear)
      // .attr("opacity", 0.0)
      .remove();
      return linkLine;
    }
  }, {
    key: "addLinkData",
    value: function addLinkData(linkLine, linkData, color) {
      var linkLineEnter = linkLine.enter().append("line") // .attr("opacity", 0.0)
      .attr("stroke-width", function (d) {
        return Math.sqrt(d.weight) * 0.1 + d.weight * 0.015;
      }).attr("stroke", function (d) {
        return color[d.group_id_s];
      });
      linkLine = linkLineEnter.merge(linkLine);
      linkLine // .transition()
      // .duration(1000)
      // .ease(d3.easeLinear)
      .attr("opacity", 0.5); // change line display order to back of node

      for (var i = linkData.length - 1; 0 <= i; i--) {
        var linkSVG = linkLine['_groups'][0][i];
        var firstSVG = linkSVG.parentNode.firstChild;

        if (firstSVG) {
          linkSVG.parentNode.insertBefore(linkSVG, firstSVG);
        }
      }

      return linkLine;
    }
  }, {
    key: "deleteNodeData",
    value: function deleteNodeData(nodeCircle, nodeData) {
      nodeCircle = nodeCircle.data(nodeData, function (d) {
        return d.name;
      });
      nodeCircle.exit() // .transition()
      // .duration(1000)
      // .ease(d3.easeLinear)
      // .attr("opacity", 0.0)
      .remove();
      return nodeCircle;
    }
  }, {
    key: "addNodeData",
    value: function addNodeData(nodeCircle, nodeData, color, dragstarted, dragging, dragended) {
      nodeCircle = nodeCircle.enter().append("circle") // .attr("opacity", "0.0")
      .attr("r", function (d) {
        return Math.sqrt(d.size) * 4 + 2.5;
      }).attr("fill", function (d) {
        return color[d.group_id];
      }).attr("stroke", "#fffcf9").call(d3__WEBPACK_IMPORTED_MODULE_0__["drag"]().on("start", dragstarted).on("drag", dragging).on("end", dragended)).merge(nodeCircle);
      nodeCircle; // .transition()
      // .duration(1000)
      // .ease(d3.easeLinear)
      // .attr("opacity", 0.6);

      return nodeCircle;
    }
  }, {
    key: "deleteLabelData",
    value: function deleteLabelData(nodeText, nodeData) {
      nodeText = nodeText.data(nodeData, function (d) {
        return d.name;
      });
      nodeText.exit() // .transition()
      // .duration(1000)
      // .ease(d3.easeLinear)
      // .attr("opacity", 0.0)
      .remove();
      return nodeText;
    }
  }, {
    key: "addLabelData",
    value: function addLabelData(nodeText) {
      nodeText = nodeText.enter().append("text").merge(nodeText).text(function (d) {
        return d.name;
      });
      nodeText // .attr("opacity", 1.0)
      .attr("font-size", ".7em").attr("font-weight", "300").attr("class", "nonDrag").attr("fill", "#352622").attr({
        "font-family": ["Futura", "Nunito", "Helvetica Neue", "Arial", "sans-serif"]
      }); // nodeText.transition()
      //    .duration(1000)
      //    .ease(d3.easeLinear)
      //    .style("opacity", 0.6);

      return nodeText;
    }
  }, {
    key: "nodeLabelOpacity",
    value: function nodeLabelOpacity(selectedType, nodeCircle, nodeText, nodeData) {
      if (selectedType === 'Umami') {
        for (var i = 0, l = nodeData.length; l > i; i++) {
          nodeCircle['_groups'][0][i].setAttribute("opacity", nodeData[i].umami === 1 ? "0.6" : "0.2");
          nodeText['_groups'][0][i].setAttribute("opacity", nodeData[i].umami === 1 ? "1.0" : "0.5");
        }
      } else {
        nodeCircle.attr("opacity", 0.6);
        nodeText.attr("opacity", 1.0);
      }
    }
  }, {
    key: "storePreviousNodePosition",
    value: function storePreviousNodePosition(nodeCircle, nodeData, prevNodePosition) {
      // get previous node position
      for (var i = 0, l = nodeData.length; l > i; i++) {
        prevNodePosition.push({
          'name': nodeCircle['_groups'][0][i]['__data__']['name'],
          'x': nodeCircle['_groups'][0][i]['cx']['baseVal']['value'],
          'y': nodeCircle['_groups'][0][i]['cy']['baseVal']['value']
        });
      }

      return prevNodePosition;
    }
  }, {
    key: "simulation",
    value: function simulation(linkData, nodeData, _simulation, ticked) {
      _simulation.nodes(nodeData).on("tick", ticked);

      _simulation.force("link").links(linkData);

      _simulation.stop();
    }
  }, {
    key: "transitNodePosition",
    value: function transitNodePosition(nodeCircle, nodeText, nodeData, prevNodePosition, durationTime) {
      var t = d3__WEBPACK_IMPORTED_MODULE_0__["transition"]().duration(durationTime);

      for (var i = 0, l = nodeData.length; l > i; i++) {
        // new node -> new position, existing node -> previous position
        if (prevNodePosition[i]['x'] === 0) {
          prevNodePosition[i]['x'] = nodeCircle['_groups'][0][i]['__data__']['x'];
          prevNodePosition[i]['y'] = nodeCircle['_groups'][0][i]['__data__']['y'];
        } // node


        nodeCircle['_groups'][0][i].setAttribute("cx", prevNodePosition[i]['x']);
        nodeCircle['_groups'][0][i].setAttribute("cy", prevNodePosition[i]['y']); // label

        nodeText['_groups'][0][i].setAttribute("x", prevNodePosition[i]['x']);
        nodeText['_groups'][0][i].setAttribute("y", prevNodePosition[i]['y']);
      }

      nodeCircle.transition(t).attr("cx", function (d) {
        return d.x;
      }).attr("cy", function (d) {
        return d.y;
      });
      nodeText.transition(t).attr("x", function (d) {
        return d.x;
      }).attr("y", function (d) {
        return d.y;
      });
    }
  }, {
    key: "transitLinkPosition",
    value: function transitLinkPosition(linkLine, linkData, prevNodePosition, durationTime) {
      var t = d3__WEBPACK_IMPORTED_MODULE_0__["transition"]().duration(durationTime);
      var nodePositionIndex = {};

      for (var i1 = 0, l1 = prevNodePosition.length; l1 > i1; i1++) {
        nodePositionIndex[prevNodePosition[i1]['name']] = i1;
      }

      for (var i2 = 0, l2 = linkData.length; l2 > i2; i2++) {
        var sourceName = linkLine['_groups'][0][i2]['__data__']['source']['name'];
        var targetName = linkLine['_groups'][0][i2]['__data__']['target']['name'];
        linkLine['_groups'][0][i2].setAttribute("x1", prevNodePosition[nodePositionIndex[sourceName]]['x']);
        linkLine['_groups'][0][i2].setAttribute("y1", prevNodePosition[nodePositionIndex[sourceName]]['y']);
        linkLine['_groups'][0][i2].setAttribute("x2", prevNodePosition[nodePositionIndex[targetName]]['x']);
        linkLine['_groups'][0][i2].setAttribute("y2", prevNodePosition[nodePositionIndex[targetName]]['y']);
      }

      linkLine.transition(t).attr("x1", function (d) {
        return d.source.x;
      }).attr("y1", function (d) {
        return d.source.y;
      }).attr("x2", function (d) {
        return d.target.x;
      }).attr("y2", function (d) {
        return d.target.y;
      });
    }
  }, {
    key: "flavorSimulation",
    value: function flavorSimulation(simulation, centerX, centerY) {
      simulation.force("link", d3__WEBPACK_IMPORTED_MODULE_0__["forceLink"]().distance(80)).force("charge", d3__WEBPACK_IMPORTED_MODULE_0__["forceManyBody"]().strength(-300)).force("x", d3__WEBPACK_IMPORTED_MODULE_0__["forceX"]().strength(0.25).x(centerX)).force("y", d3__WEBPACK_IMPORTED_MODULE_0__["forceY"]().strength(0.35).y(centerY));
    }
  }, {
    key: "umamiSimulation",
    value: function umamiSimulation(simulation, centerX, centerY) {
      simulation.force("link", d3__WEBPACK_IMPORTED_MODULE_0__["forceLink"]().distance(250).id(function (d) {
        return d.name;
      })).force("charge", d3__WEBPACK_IMPORTED_MODULE_0__["forceManyBody"]().strength(-2000)).force("x", d3__WEBPACK_IMPORTED_MODULE_0__["forceX"]().strength(1.5).x(centerX)).force("y", d3__WEBPACK_IMPORTED_MODULE_0__["forceY"]().strength(2.25).y(centerY));
    }
  }]);

  return Update;
}();



/***/ }),

/***/ "./src/data/flavor_data.js":
/*!*********************************!*\
  !*** ./src/data/flavor_data.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var flavorData = {
  "links": [{
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 320,
    "source": "citrus",
    "target": "orange",
    "weight": 51.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 571,
    "source": "mandarin",
    "target": "orange",
    "weight": 57.0
  }, {
    "group_id_s": 0,
    "group_id_t": 1,
    "name": 548,
    "source": "lemon_peel",
    "target": "orange",
    "weight": 8.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 553,
    "source": "lime",
    "target": "orange",
    "weight": 56.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 499,
    "source": "grapefruit",
    "target": "orange",
    "weight": 30.0
  }, {
    "group_id_s": 6,
    "group_id_t": 1,
    "name": 63,
    "source": "basil",
    "target": "orange",
    "weight": 10.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 319,
    "source": "citrus",
    "target": "mandarin",
    "weight": 51.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 317,
    "source": "citrus",
    "target": "lemon",
    "weight": 51.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 318,
    "source": "citrus",
    "target": "lime",
    "weight": 51.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 576,
    "source": "mandarin",
    "target": "tangerine",
    "weight": 53.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 554,
    "source": "lime",
    "target": "tangerine",
    "weight": 53.0
  }, {
    "group_id_s": 0,
    "group_id_t": 1,
    "name": 321,
    "source": "citrus_peel",
    "target": "tangerine",
    "weight": 32.0
  }, {
    "group_id_s": 0,
    "group_id_t": 11,
    "name": 547,
    "source": "lemon_peel",
    "target": "lime_peel_oil",
    "weight": 6.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 17,
    "source": "apple_brandy",
    "target": "red_wine",
    "weight": 17.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 309,
    "source": "cider",
    "target": "red_wine",
    "weight": 52.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 376,
    "source": "cognac",
    "target": "red_wine",
    "weight": 94.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 213,
    "source": "champagne_wine",
    "target": "red_wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 168,
    "source": "brandy",
    "target": "red_wine",
    "weight": 18.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 126,
    "source": "beer",
    "target": "red_wine",
    "weight": 106.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 310,
    "source": "cider",
    "target": "rum",
    "weight": 54.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 377,
    "source": "cognac",
    "target": "rum",
    "weight": 94.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 16,
    "source": "apple_brandy",
    "target": "cider",
    "weight": 15.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 167,
    "source": "brandy",
    "target": "port_wine",
    "weight": 18.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 680,
    "source": "rum",
    "target": "whiskey",
    "weight": 76.0
  }, {
    "group_id_s": 2,
    "group_id_t": 5,
    "name": 82,
    "source": "beef",
    "target": "beer",
    "weight": 102.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 311,
    "source": "cider",
    "target": "sherry",
    "weight": 52.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 378,
    "source": "cognac",
    "target": "sherry",
    "weight": 90.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 169,
    "source": "brandy",
    "target": "sherry",
    "weight": 18.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 671,
    "source": "red_wine",
    "target": "sherry",
    "weight": 138.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 659,
    "source": "port_wine",
    "target": "sherry",
    "weight": 131.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 679,
    "source": "rum",
    "target": "sherry",
    "weight": 87.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 706,
    "source": "white_wine",
    "target": "wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 380,
    "source": "cognac",
    "target": "wine",
    "weight": 82.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 215,
    "source": "champagne_wine",
    "target": "wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 171,
    "source": "brandy",
    "target": "wine",
    "weight": 18.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 130,
    "source": "beer",
    "target": "wine",
    "weight": 86.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 673,
    "source": "red_wine",
    "target": "wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 661,
    "source": "port_wine",
    "target": "wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 694,
    "source": "sherry",
    "target": "wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 191,
    "source": "cabernet_sauvignon_wine",
    "target": "wine",
    "weight": 128.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 637,
    "source": "pineapple",
    "target": "strawberry",
    "weight": 67.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 584,
    "source": "melon",
    "target": "strawberry",
    "weight": 67.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 633,
    "source": "pear",
    "target": "strawberry",
    "weight": 38.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 639,
    "source": "plum",
    "target": "strawberry",
    "weight": 63.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 668,
    "source": "raspberry",
    "target": "strawberry",
    "weight": 89.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 14,
    "source": "apple",
    "target": "strawberry",
    "weight": 114.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 540,
    "source": "kiwi",
    "target": "strawberry",
    "weight": 39.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 621,
    "source": "orange",
    "target": "strawberry",
    "weight": 69.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 607,
    "source": "olive",
    "target": "strawberry",
    "weight": 47.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 19,
    "source": "apricot",
    "target": "strawberry",
    "weight": 70.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 60,
    "source": "banana",
    "target": "strawberry",
    "weight": 69.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 61,
    "source": "bartlett_pear",
    "target": "pear",
    "weight": 49.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 284,
    "source": "chicken",
    "target": "pork",
    "weight": 80.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 21,
    "source": "bacon",
    "target": "beef",
    "weight": 102.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 268,
    "source": "chicken",
    "target": "cured_pork",
    "weight": 83.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 31,
    "source": "bacon",
    "target": "cured_pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 91,
    "source": "beef",
    "target": "cured_pork",
    "weight": 103.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 285,
    "source": "chicken",
    "target": "pork_sausage",
    "weight": 84.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 645,
    "source": "pork",
    "target": "pork_sausage",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 49,
    "source": "bacon",
    "target": "pork_sausage",
    "weight": 119.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 111,
    "source": "beef",
    "target": "pork_sausage",
    "weight": 101.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 403,
    "source": "cured_pork",
    "target": "pork_sausage",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 604,
    "source": "mutton",
    "target": "pork_sausage",
    "weight": 52.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 287,
    "source": "chicken",
    "target": "roasted_beef",
    "weight": 99.0
  }, {
    "group_id_s": 8,
    "group_id_t": 2,
    "name": 629,
    "source": "peanut",
    "target": "roasted_beef",
    "weight": 74.0
  }, {
    "group_id_s": 11,
    "group_id_t": 2,
    "name": 369,
    "source": "coffee",
    "target": "roasted_beef",
    "weight": 105.0
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 609,
    "source": "onion",
    "target": "roasted_beef",
    "weight": 32.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 647,
    "source": "pork",
    "target": "roasted_beef",
    "weight": 97.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 51,
    "source": "bacon",
    "target": "roasted_beef",
    "weight": 102.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 113,
    "source": "beef",
    "target": "roasted_beef",
    "weight": 199.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 404,
    "source": "cured_pork",
    "target": "roasted_beef",
    "weight": 105.0
  }, {
    "group_id_s": 5,
    "group_id_t": 2,
    "name": 127,
    "source": "beer",
    "target": "roasted_beef",
    "weight": 106.0
  }, {
    "group_id_s": 7,
    "group_id_t": 2,
    "name": 587,
    "source": "milk",
    "target": "roasted_beef",
    "weight": 77.0
  }, {
    "group_id_s": 8,
    "group_id_t": 11,
    "name": 628,
    "source": "peanut",
    "target": "peanut_butter",
    "weight": 97.0
  }, {
    "group_id_s": 11,
    "group_id_t": 11,
    "name": 366,
    "source": "coffee",
    "target": "peanut_butter",
    "weight": 86.0
  }, {
    "group_id_s": 8,
    "group_id_t": 8,
    "name": 630,
    "source": "peanut",
    "target": "roasted_peanut",
    "weight": 97.0
  }, {
    "group_id_s": 11,
    "group_id_t": 8,
    "name": 370,
    "source": "coffee",
    "target": "roasted_peanut",
    "weight": 86.0
  }, {
    "group_id_s": 11,
    "group_id_t": 8,
    "name": 631,
    "source": "peanut_butter",
    "target": "roasted_peanut",
    "weight": 144.0
  }, {
    "group_id_s": 11,
    "group_id_t": 11,
    "name": 374,
    "source": "coffee",
    "target": "tea",
    "weight": 86.0
  }, {
    "group_id_s": 11,
    "group_id_t": 11,
    "name": 363,
    "source": "coffee",
    "target": "green_tea",
    "weight": 93.0
  }, {
    "group_id_s": 11,
    "group_id_t": 4,
    "name": 367,
    "source": "coffee",
    "target": "popcorn",
    "weight": 25.0
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 632,
    "source": "peanut_butter",
    "target": "soybean",
    "weight": 88.0
  }, {
    "group_id_s": 8,
    "group_id_t": 3,
    "name": 677,
    "source": "roasted_peanut",
    "target": "soybean",
    "weight": 88.0
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 669,
    "source": "raw_beef",
    "target": "soybean",
    "weight": 96.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 592,
    "source": "mung_bean",
    "target": "soybean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 551,
    "source": "lima_bean",
    "target": "soybean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 80,
    "source": "bean",
    "target": "soybean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 539,
    "source": "kidney_bean",
    "target": "soybean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 670,
    "source": "red_bean",
    "target": "soybean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 141,
    "source": "black_bean",
    "target": "soybean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 611,
    "source": "onion",
    "target": "shallot",
    "weight": 12.0
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 675,
    "source": "roasted_beef",
    "target": "shallot",
    "weight": 10.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 44,
    "source": "bacon",
    "target": "mutton",
    "weight": 52.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 99,
    "source": "beef",
    "target": "lamb",
    "weight": 58.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 110,
    "source": "beef",
    "target": "pork_liver",
    "weight": 16.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 579,
    "source": "matsutake",
    "target": "shiitake",
    "weight": 118.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 642,
    "source": "porcini",
    "target": "shiitake",
    "weight": 117.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 578,
    "source": "matsutake",
    "target": "mushroom",
    "weight": 117.0
  }, {
    "group_id_s": 5,
    "group_id_t": 10,
    "name": 124,
    "source": "beer",
    "target": "katsuobushi",
    "weight": 23.0
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 333,
    "source": "cocoa",
    "target": "katsuobushi",
    "weight": 23.0
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 148,
    "source": "black_tea",
    "target": "katsuobushi",
    "weight": 26.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 586,
    "source": "milk",
    "target": "parmesan_cheese",
    "weight": 79.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 193,
    "source": "camembert_cheese",
    "target": "parmesan_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 162,
    "source": "blue_cheese",
    "target": "parmesan_cheese",
    "weight": 137.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 231,
    "source": "cheddar_cheese",
    "target": "parmesan_cheese",
    "weight": 134.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 254,
    "source": "cheese",
    "target": "parmesan_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 397,
    "source": "cream_cheese",
    "target": "parmesan_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 518,
    "source": "gruyere_cheese",
    "target": "parmesan_cheese",
    "weight": 134.0
  }, {
    "group_id_s": 9,
    "group_id_t": 8,
    "name": 606,
    "source": "nutmeg",
    "target": "seed",
    "weight": 12.0
  }, {
    "group_id_s": 9,
    "group_id_t": 8,
    "name": 488,
    "source": "ginger",
    "target": "seed",
    "weight": 10.0
  }, {
    "group_id_s": 8,
    "group_id_t": 9,
    "name": 147,
    "source": "black_sesame_seed",
    "target": "ginger",
    "weight": 10.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 2,
    "source": "apple",
    "target": "apricot",
    "weight": 74.0
  }, {
    "group_id_s": 1,
    "group_id_t": 13,
    "name": 7,
    "source": "apple",
    "target": "honey",
    "weight": 41.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 3,
    "source": "apple",
    "target": "banana",
    "weight": 85.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 192,
    "source": "camembert_cheese",
    "target": "cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 155,
    "source": "blue_cheese",
    "target": "cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 216,
    "source": "cheddar_cheese",
    "target": "cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 163,
    "source": "blue_cheese",
    "target": "provolone_cheese",
    "weight": 133.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 233,
    "source": "cheddar_cheese",
    "target": "provolone_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 256,
    "source": "cheese",
    "target": "provolone_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 157,
    "source": "blue_cheese",
    "target": "cream",
    "weight": 27.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 220,
    "source": "cheddar_cheese",
    "target": "cream",
    "weight": 28.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 164,
    "source": "blue_cheese",
    "target": "romano_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 234,
    "source": "cheddar_cheese",
    "target": "romano_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 257,
    "source": "cheese",
    "target": "romano_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 666,
    "source": "provolone_cheese",
    "target": "romano_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 159,
    "source": "blue_cheese",
    "target": "feta_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 223,
    "source": "cheddar_cheese",
    "target": "feta_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 246,
    "source": "cheese",
    "target": "feta_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 392,
    "source": "cream_cheese",
    "target": "feta_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 383,
    "source": "cottage_cheese",
    "target": "feta_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 156,
    "source": "blue_cheese",
    "target": "cottage_cheese",
    "weight": 131.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 219,
    "source": "cheddar_cheese",
    "target": "cottage_cheese",
    "weight": 131.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 243,
    "source": "cheese",
    "target": "cottage_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 158,
    "source": "blue_cheese",
    "target": "cream_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 221,
    "source": "cheddar_cheese",
    "target": "cream_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 244,
    "source": "cheese",
    "target": "cream_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 161,
    "source": "blue_cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 229,
    "source": "cheddar_cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 252,
    "source": "cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 395,
    "source": "cream_cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 517,
    "source": "gruyere_cheese",
    "target": "mozzarella_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 385,
    "source": "cottage_cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 492,
    "source": "goat_cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 230,
    "source": "cheddar_cheese",
    "target": "munster_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 253,
    "source": "cheese",
    "target": "munster_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 396,
    "source": "cream_cheese",
    "target": "munster_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 443,
    "source": "feta_cheese",
    "target": "munster_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 154,
    "source": "blue_cheese",
    "target": "cheddar_cheese",
    "weight": 142.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 226,
    "source": "cheddar_cheese",
    "target": "gruyere_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 249,
    "source": "cheese",
    "target": "gruyere_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 394,
    "source": "cream_cheese",
    "target": "gruyere_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 153,
    "source": "blue_cheese",
    "target": "buttermilk",
    "weight": 12.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 160,
    "source": "blue_cheese",
    "target": "goat_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 225,
    "source": "cheddar_cheese",
    "target": "goat_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 248,
    "source": "cheese",
    "target": "goat_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 393,
    "source": "cream_cheese",
    "target": "goat_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 384,
    "source": "cottage_cheese",
    "target": "goat_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 235,
    "source": "cheddar_cheese",
    "target": "roquefort_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 258,
    "source": "cheese",
    "target": "roquefort_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 66,
    "source": "bean",
    "target": "black_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 550,
    "source": "lima_bean",
    "target": "red_kidney_bean",
    "weight": 90.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 77,
    "source": "bean",
    "target": "red_kidney_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 140,
    "source": "black_bean",
    "target": "red_kidney_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 72,
    "source": "bean",
    "target": "kidney_bean",
    "weight": 86.0
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 496,
    "source": "grape",
    "target": "rhubarb",
    "weight": 8.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 209,
    "source": "cayenne",
    "target": "pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 144,
    "source": "black_pepper",
    "target": "pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 3,
    "name": 208,
    "source": "cayenne",
    "target": "green_bell_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 3,
    "name": 143,
    "source": "black_pepper",
    "target": "green_bell_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 210,
    "source": "cayenne",
    "target": "tabasco_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 145,
    "source": "black_pepper",
    "target": "tabasco_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 634,
    "source": "pepper",
    "target": "tabasco_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 211,
    "source": "cayenne",
    "target": "thai_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 151,
    "source": "black_tea",
    "target": "tomato",
    "weight": 84.0
  }, {
    "group_id_s": 11,
    "group_id_t": 6,
    "name": 149,
    "source": "black_tea",
    "target": "mint",
    "weight": 24.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 563,
    "source": "mackerel",
    "target": "salmon",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 463,
    "source": "fish",
    "target": "salmon",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 520,
    "source": "haddock",
    "target": "salmon",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 569,
    "source": "mackerel",
    "target": "tuna",
    "weight": 65.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 470,
    "source": "fish",
    "target": "tuna",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 686,
    "source": "salmon",
    "target": "tuna",
    "weight": 84.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 692,
    "source": "sardine",
    "target": "tuna",
    "weight": 65.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 452,
    "source": "fish",
    "target": "haddock",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 453,
    "source": "fish",
    "target": "herring",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 466,
    "source": "fish",
    "target": "smoked_salmon",
    "weight": 64.0
  }, {
    "group_id_s": 4,
    "group_id_t": 4,
    "name": 174,
    "source": "bread",
    "target": "white_bread",
    "weight": 51.0
  }, {
    "group_id_s": 4,
    "group_id_t": 4,
    "name": 173,
    "source": "bread",
    "target": "wheat_bread",
    "weight": 51.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 626,
    "source": "parmesan_cheese",
    "target": "sheep_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 9,
    "group_id_t": 6,
    "name": 316,
    "source": "cinnamon",
    "target": "tarragon",
    "weight": 7.0
  }, {
    "group_id_s": 8,
    "group_id_t": 11,
    "name": 335,
    "source": "coconut",
    "target": "coconut_oil",
    "weight": 18.0
  }, {
    "group_id_s": 1,
    "group_id_t": 0,
    "name": 616,
    "source": "orange",
    "target": "orange_peel",
    "weight": 14.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 615,
    "source": "orange",
    "target": "orange_juice",
    "weight": 54.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 622,
    "source": "orange",
    "target": "tangerine",
    "weight": 62.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 9,
    "source": "apple",
    "target": "orange_juice",
    "weight": 30.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 5,
    "source": "apple",
    "target": "cherry",
    "weight": 31.0
  }, {
    "group_id_s": 1,
    "group_id_t": 5,
    "name": 15,
    "source": "apple",
    "target": "white_wine",
    "weight": 105.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 11,
    "source": "apple",
    "target": "pineapple",
    "weight": 64.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 8,
    "source": "apple",
    "target": "melon",
    "weight": 71.0
  }, {
    "group_id_s": 1,
    "group_id_t": 5,
    "name": 1,
    "source": "apple",
    "target": "apple_brandy",
    "weight": 14.0
  }, {
    "group_id_s": 1,
    "group_id_t": 5,
    "name": 6,
    "source": "apple",
    "target": "cider",
    "weight": 59.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 13,
    "source": "apple",
    "target": "quince",
    "weight": 36.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 4,
    "source": "apple",
    "target": "bartlett_pear",
    "weight": 44.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 10,
    "source": "apple",
    "target": "pear",
    "weight": 44.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 12,
    "source": "apple",
    "target": "plum",
    "weight": 64.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 544,
    "source": "lemon",
    "target": "mandarin",
    "weight": 56.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 543,
    "source": "lemon",
    "target": "lime",
    "weight": 58.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 546,
    "source": "lemon",
    "target": "tangerine",
    "weight": 55.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 545,
    "source": "lemon",
    "target": "orange",
    "weight": 69.0
  }, {
    "group_id_s": 1,
    "group_id_t": 6,
    "name": 542,
    "source": "lemon",
    "target": "lemongrass",
    "weight": 13.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 552,
    "source": "lime",
    "target": "mandarin",
    "weight": 53.0
  }, {
    "group_id_s": 11,
    "group_id_t": 5,
    "name": 334,
    "source": "cocoa",
    "target": "white_wine",
    "weight": 86.0
  }, {
    "group_id_s": 11,
    "group_id_t": 11,
    "name": 332,
    "source": "cocoa",
    "target": "coffee",
    "weight": 95.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 672,
    "source": "red_wine",
    "target": "white_wine",
    "weight": 155.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 681,
    "source": "rum",
    "target": "white_wine",
    "weight": 98.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 190,
    "source": "cabernet_sauvignon_wine",
    "target": "white_wine",
    "weight": 155.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 189,
    "source": "cabernet_sauvignon_wine",
    "target": "red_wine",
    "weight": 165.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 188,
    "source": "cabernet_sauvignon_wine",
    "target": "port_wine",
    "weight": 133.0
  }, {
    "group_id_s": 1,
    "group_id_t": 5,
    "name": 638,
    "source": "pineapple",
    "target": "white_wine",
    "weight": 62.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 312,
    "source": "cider",
    "target": "white_wine",
    "weight": 59.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 308,
    "source": "cider",
    "target": "cognac",
    "weight": 55.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 170,
    "source": "brandy",
    "target": "white_wine",
    "weight": 19.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 166,
    "source": "brandy",
    "target": "champagne_wine",
    "weight": 18.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 660,
    "source": "port_wine",
    "target": "white_wine",
    "weight": 135.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 658,
    "source": "port_wine",
    "target": "red_wine",
    "weight": 133.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 214,
    "source": "champagne_wine",
    "target": "white_wine",
    "weight": 128.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 212,
    "source": "champagne_wine",
    "target": "cognac",
    "weight": 82.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 705,
    "source": "whiskey",
    "target": "white_wine",
    "weight": 72.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 129,
    "source": "beer",
    "target": "white_wine",
    "weight": 118.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 121,
    "source": "beer",
    "target": "cider",
    "weight": 50.0
  }, {
    "group_id_s": 5,
    "group_id_t": 11,
    "name": 123,
    "source": "beer",
    "target": "coffee",
    "weight": 101.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 128,
    "source": "beer",
    "target": "rum",
    "weight": 103.0
  }, {
    "group_id_s": 5,
    "group_id_t": 7,
    "name": 125,
    "source": "beer",
    "target": "milk",
    "weight": 78.0
  }, {
    "group_id_s": 5,
    "group_id_t": 11,
    "name": 122,
    "source": "beer",
    "target": "cocoa",
    "weight": 94.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 379,
    "source": "cognac",
    "target": "white_wine",
    "weight": 107.0
  }, {
    "group_id_s": 1,
    "group_id_t": 5,
    "name": 596,
    "source": "muscat_grape",
    "target": "white_wine",
    "weight": 80.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 693,
    "source": "sherry",
    "target": "white_wine",
    "weight": 139.0
  }, {
    "group_id_s": 5,
    "group_id_t": 5,
    "name": 18,
    "source": "apple_brandy",
    "target": "white_wine",
    "weight": 17.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 648,
    "source": "pork",
    "target": "roasted_pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 115,
    "source": "beef",
    "target": "roasted_pork",
    "weight": 100.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 87,
    "source": "beef",
    "target": "chicken",
    "weight": 98.0
  }, {
    "group_id_s": 2,
    "group_id_t": 8,
    "name": 106,
    "source": "beef",
    "target": "peanut",
    "weight": 72.0
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 90,
    "source": "beef",
    "target": "coffee",
    "weight": 102.0
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 107,
    "source": "beef",
    "target": "peanut_butter",
    "weight": 99.0
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 89,
    "source": "beef",
    "target": "clam",
    "weight": 48.0
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 104,
    "source": "beef",
    "target": "onion",
    "weight": 30.0
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 92,
    "source": "beef",
    "target": "eel",
    "weight": 49.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 109,
    "source": "beef",
    "target": "pork",
    "weight": 97.0
  }, {
    "group_id_s": 2,
    "group_id_t": 8,
    "name": 114,
    "source": "beef",
    "target": "roasted_peanut",
    "weight": 99.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 52,
    "source": "bacon",
    "target": "roasted_pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 26,
    "source": "bacon",
    "target": "chicken",
    "weight": 84.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 48,
    "source": "bacon",
    "target": "pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 405,
    "source": "cured_pork",
    "target": "roasted_pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 402,
    "source": "cured_pork",
    "target": "pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 288,
    "source": "chicken",
    "target": "roasted_pork",
    "weight": 81.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 657,
    "source": "pork_sausage",
    "target": "roasted_pork",
    "weight": 115.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 656,
    "source": "pork_sausage",
    "target": "roasted_beef",
    "weight": 101.0
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 676,
    "source": "roasted_beef",
    "target": "soybean",
    "weight": 100.0
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 674,
    "source": "roasted_beef",
    "target": "sardine",
    "weight": 50.0
  }, {
    "group_id_s": 11,
    "group_id_t": 9,
    "name": 516,
    "source": "green_tea",
    "target": "vanilla",
    "weight": 44.0
  }, {
    "group_id_s": 11,
    "group_id_t": 6,
    "name": 510,
    "source": "green_tea",
    "target": "peppermint",
    "weight": 33.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 302,
    "source": "chive",
    "target": "onion",
    "weight": 17.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 300,
    "source": "chive",
    "target": "leek",
    "weight": 11.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 474,
    "source": "garlic",
    "target": "onion",
    "weight": 16.0
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 476,
    "source": "garlic",
    "target": "roasted_beef",
    "weight": 11.0
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 603,
    "source": "mutton",
    "target": "pork",
    "weight": 52.0
  }, {
    "group_id_s": 13,
    "group_id_t": 2,
    "name": 412,
    "source": "egg",
    "target": "roasted_beef",
    "weight": 42.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 426,
    "source": "enokidake",
    "target": "matsutake",
    "weight": 117.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 436,
    "source": "enokidake",
    "target": "shiitake",
    "weight": 117.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 428,
    "source": "enokidake",
    "target": "mushroom",
    "weight": 117.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 597,
    "source": "mushroom",
    "target": "porcini",
    "weight": 117.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 600,
    "source": "mushroom",
    "target": "shiitake",
    "weight": 117.0
  }, {
    "group_id_s": 4,
    "group_id_t": 4,
    "name": 172,
    "source": "bread",
    "target": "rye_bread",
    "weight": 51.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 627,
    "source": "parmesan_cheese",
    "target": "swiss_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 624,
    "source": "parmesan_cheese",
    "target": "provolone_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 625,
    "source": "parmesan_cheese",
    "target": "romano_cheese",
    "weight": 131.0
  }, {
    "group_id_s": 9,
    "group_id_t": 6,
    "name": 313,
    "source": "cinnamon",
    "target": "fennel",
    "weight": 10.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 315,
    "source": "cinnamon",
    "target": "nutmeg",
    "weight": 20.0
  }, {
    "group_id_s": 9,
    "group_id_t": 1,
    "name": 314,
    "source": "cinnamon",
    "target": "guava",
    "weight": 25.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 484,
    "source": "ginger",
    "target": "nutmeg",
    "weight": 22.0
  }, {
    "group_id_s": 9,
    "group_id_t": 6,
    "name": 486,
    "source": "ginger",
    "target": "rosemary",
    "weight": 17.0
  }, {
    "group_id_s": 9,
    "group_id_t": 6,
    "name": 483,
    "source": "ginger",
    "target": "marjoram",
    "weight": 18.0
  }, {
    "group_id_s": 13,
    "group_id_t": 1,
    "name": 523,
    "source": "honey",
    "target": "strawberry",
    "weight": 40.0
  }, {
    "group_id_s": 4,
    "group_id_t": 3,
    "name": 570,
    "source": "malt",
    "target": "soybean",
    "weight": 58.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 262,
    "source": "cheese",
    "target": "swiss_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 667,
    "source": "provolone_cheese",
    "target": "swiss_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 391,
    "source": "cream",
    "target": "swiss_cheese",
    "weight": 27.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 678,
    "source": "romano_cheese",
    "target": "swiss_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 447,
    "source": "feta_cheese",
    "target": "swiss_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 445,
    "source": "feta_cheese",
    "target": "provolone_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 446,
    "source": "feta_cheese",
    "target": "romano_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 444,
    "source": "feta_cheese",
    "target": "parmesan_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 441,
    "source": "feta_cheese",
    "target": "goat_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 442,
    "source": "feta_cheese",
    "target": "mozzarella_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 389,
    "source": "cottage_cheese",
    "target": "swiss_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 387,
    "source": "cottage_cheese",
    "target": "provolone_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 388,
    "source": "cottage_cheese",
    "target": "romano_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 382,
    "source": "cottage_cheese",
    "target": "cream_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 386,
    "source": "cottage_cheese",
    "target": "parmesan_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 401,
    "source": "cream_cheese",
    "target": "swiss_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 398,
    "source": "cream_cheese",
    "target": "provolone_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 399,
    "source": "cream_cheese",
    "target": "romano_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 400,
    "source": "cream_cheese",
    "target": "roquefort_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 165,
    "source": "blue_cheese",
    "target": "swiss_cheese",
    "weight": 134.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 591,
    "source": "mozzarella_cheese",
    "target": "swiss_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 589,
    "source": "mozzarella_cheese",
    "target": "provolone_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 590,
    "source": "mozzarella_cheese",
    "target": "romano_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 588,
    "source": "mozzarella_cheese",
    "target": "parmesan_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 595,
    "source": "munster_cheese",
    "target": "swiss_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 594,
    "source": "munster_cheese",
    "target": "provolone_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 593,
    "source": "munster_cheese",
    "target": "parmesan_cheese",
    "weight": 127.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 239,
    "source": "cheddar_cheese",
    "target": "swiss_cheese",
    "weight": 136.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 519,
    "source": "gruyere_cheese",
    "target": "swiss_cheese",
    "weight": 131.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 187,
    "source": "buttermilk",
    "target": "cheddar_cheese",
    "weight": 12.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 494,
    "source": "goat_cheese",
    "target": "provolone_cheese",
    "weight": 129.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 495,
    "source": "goat_cheese",
    "target": "romano_cheese",
    "weight": 130.0
  }, {
    "group_id_s": 7,
    "group_id_t": 7,
    "name": 493,
    "source": "goat_cheese",
    "target": "parmesan_cheese",
    "weight": 128.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 75,
    "source": "bean",
    "target": "mung_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 73,
    "source": "bean",
    "target": "lima_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 139,
    "source": "black_bean",
    "target": "lima_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 138,
    "source": "black_bean",
    "target": "kidney_bean",
    "weight": 86.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 538,
    "source": "kidney_bean",
    "target": "lima_bean",
    "weight": 87.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 381,
    "source": "concord_grape",
    "target": "grape",
    "weight": 125.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 635,
    "source": "pepper",
    "target": "thai_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 507,
    "source": "green_bell_pepper",
    "target": "thai_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 505,
    "source": "green_bell_pepper",
    "target": "pepper",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 506,
    "source": "green_bell_pepper",
    "target": "tabasco_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 142,
    "source": "black_pepper",
    "target": "cayenne",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 146,
    "source": "black_pepper",
    "target": "thai_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 703,
    "source": "tabasco_pepper",
    "target": "thai_pepper",
    "weight": 38.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 133,
    "source": "bell_pepper",
    "target": "cayenne",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 137,
    "source": "bell_pepper",
    "target": "thai_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 131,
    "source": "bell_pepper",
    "target": "black_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 135,
    "source": "bell_pepper",
    "target": "pepper",
    "weight": 36.0
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 136,
    "source": "bell_pepper",
    "target": "tabasco_pepper",
    "weight": 37.0
  }, {
    "group_id_s": 3,
    "group_id_t": 11,
    "name": 132,
    "source": "bell_pepper",
    "target": "black_tea",
    "weight": 41.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 134,
    "source": "bell_pepper",
    "target": "green_bell_pepper",
    "weight": 36.0
  }, {
    "group_id_s": 6,
    "group_id_t": 11,
    "name": 62,
    "source": "basil",
    "target": "black_tea",
    "weight": 11.0
  }, {
    "group_id_s": 6,
    "group_id_t": 6,
    "name": 64,
    "source": "basil",
    "target": "rosemary",
    "weight": 10.0
  }, {
    "group_id_s": 4,
    "group_id_t": 4,
    "name": 182,
    "source": "brown_rice",
    "target": "rice",
    "weight": 74.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 454,
    "source": "fish",
    "target": "mackerel",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 464,
    "source": "fish",
    "target": "sardine",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 684,
    "source": "salmon",
    "target": "smoked_salmon",
    "weight": 84.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 682,
    "source": "salmon",
    "target": "sardine",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 339,
    "source": "cod",
    "target": "fish",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 344,
    "source": "cod",
    "target": "haddock",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 357,
    "source": "cod",
    "target": "smoked_salmon",
    "weight": 65.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 354,
    "source": "cod",
    "target": "salmon",
    "weight": 65.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 355,
    "source": "cod",
    "target": "sardine",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 521,
    "source": "haddock",
    "target": "sardine",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 194,
    "source": "catfish",
    "target": "fish",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 195,
    "source": "catfish",
    "target": "sardine",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 522,
    "source": "herring",
    "target": "sardine",
    "weight": 64.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 205,
    "source": "caviar",
    "target": "smoked_salmon",
    "weight": 18.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 688,
    "source": "sardine",
    "target": "smoked_salmon",
    "weight": 64.0
  }, {
    "group_id_s": 11,
    "group_id_t": 9,
    "name": 152,
    "source": "black_tea",
    "target": "vanilla",
    "weight": 45.0
  }, {
    "group_id_s": 11,
    "group_id_t": 11,
    "name": 150,
    "source": "black_tea",
    "target": "tea",
    "weight": 171.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 390,
    "source": "cranberry",
    "target": "juniper_berry",
    "weight": 54.0
  }, {
    "group_id_s": 0,
    "group_id_t": 11,
    "name": 549,
    "source": "lemon_peel",
    "target": "tea",
    "weight": 8.0
  }, {
    "group_id_s": 6,
    "group_id_t": 11,
    "name": 636,
    "source": "peppermint",
    "target": "tea",
    "weight": 29.0
  }, {
    "group_id_s": 12,
    "group_id_t": 12,
    "name": 471,
    "source": "flower",
    "target": "lavender",
    "weight": 5.0
  }, {
    "group_id_s": 9,
    "group_id_t": 9,
    "name": 0,
    "source": "anise",
    "target": "cinnamon",
    "weight": 10.0
  }, {
    "group_id_s": 1,
    "group_id_t": 1,
    "name": 605,
    "source": "nectarine",
    "target": "strawberry",
    "weight": 40.0
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 541,
    "source": "leek",
    "target": "shallot",
    "weight": 11.0
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 417,
    "source": "emmental_cheese",
    "target": "potato",
    "weight": 44.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 564,
    "source": "mackerel",
    "target": "sardine",
    "weight": 65.0
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 406,
    "source": "eel",
    "target": "sardine",
    "weight": 65.0
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 364,
    "source": "coffee",
    "target": "katsuobushi",
    "weight": 32.0
  }],
  "nodes": [{
    "group_id": 0,
    "name": "orange_peel",
    "size": 1.0124252185918086
  }, {
    "group_id": 1,
    "name": "cherry",
    "size": 1.9186519876809798
  }, {
    "group_id": 2,
    "name": "roasted_pork",
    "size": 0.22124676979716093
  }, {
    "group_id": 3,
    "name": "matsutake",
    "size": 0.09911855286912812
  }, {
    "group_id": 1,
    "name": "orange_juice",
    "size": 3.008956069241389
  }, {
    "group_id": 4,
    "name": "rye_bread",
    "size": 0.16106764841233318
  }, {
    "group_id": 5,
    "name": "white_wine",
    "size": 3.8337640270452047
  }, {
    "group_id": 6,
    "name": "fennel",
    "size": 1.6053665616482
  }, {
    "group_id": 1,
    "name": "pineapple",
    "size": 2.860278239937697
  }, {
    "group_id": 2,
    "name": "chicken",
    "size": 9.370243194449362
  }, {
    "group_id": 3,
    "name": "porcini",
    "size": 0.18761726078799248
  }, {
    "group_id": 7,
    "name": "milk",
    "size": 22.823816772275123
  }, {
    "group_id": 2,
    "name": "raw_beef",
    "size": 0.003539948316754575
  }, {
    "group_id": 1,
    "name": "grape",
    "size": 0.6106410846401643
  }, {
    "group_id": 7,
    "name": "camembert_cheese",
    "size": 0.021239689900527454
  }, {
    "group_id": 8,
    "name": "peanut",
    "size": 0.8017982937449113
  }, {
    "group_id": 9,
    "name": "cayenne",
    "size": 14.071294559099437
  }, {
    "group_id": 5,
    "name": "cognac",
    "size": 0.116818294452901
  }, {
    "group_id": 1,
    "name": "melon",
    "size": 0.27788594286523416
  }, {
    "group_id": 3,
    "name": "mung_bean",
    "size": 0.033629509009168466
  }, {
    "group_id": 4,
    "name": "rice",
    "size": 6.009062267690892
  }, {
    "group_id": 10,
    "name": "mackerel",
    "size": 0.07787886296860065
  }, {
    "group_id": 9,
    "name": "thai_pepper",
    "size": 0.15398775177882404
  }, {
    "group_id": 11,
    "name": "coffee",
    "size": 1.267301497398138
  }, {
    "group_id": 1,
    "name": "citrus",
    "size": 0.28850578781549785
  }, {
    "group_id": 3,
    "name": "lima_bean",
    "size": 0.2637261495982159
  }, {
    "group_id": 9,
    "name": "black_pepper",
    "size": 17.26078799249531
  }, {
    "group_id": 3,
    "name": "bean",
    "size": 3.3682608233919784
  }, {
    "group_id": 11,
    "name": "peanut_butter",
    "size": 1.7611242875854014
  }, {
    "group_id": 3,
    "name": "kidney_bean",
    "size": 0.7823285780027611
  }, {
    "group_id": 5,
    "name": "apple_brandy",
    "size": 0.06548904385995964
  }, {
    "group_id": 4,
    "name": "bread",
    "size": 8.05869234309179
  }, {
    "group_id": 1,
    "name": "juniper_berry",
    "size": 0.0584091472264505
  }, {
    "group_id": 10,
    "name": "clam",
    "size": 0.8159580870119296
  }, {
    "group_id": 3,
    "name": "onion",
    "size": 31.914404049700874
  }, {
    "group_id": 5,
    "name": "cider",
    "size": 1.9823710573825624
  }, {
    "group_id": 0,
    "name": "citrus_peel",
    "size": 0.00707989663350915
  }, {
    "group_id": 10,
    "name": "eel",
    "size": 0.03539948316754576
  }, {
    "group_id": 9,
    "name": "nutmeg",
    "size": 4.4461750858437465
  }, {
    "group_id": 6,
    "name": "rosemary",
    "size": 3.3452511593330736
  }, {
    "group_id": 9,
    "name": "vanilla",
    "size": 15.974016779355022
  }, {
    "group_id": 2,
    "name": "pork",
    "size": 3.4762292470529927
  }, {
    "group_id": 3,
    "name": "red_bean",
    "size": 0.0584091472264505
  }, {
    "group_id": 11,
    "name": "tea",
    "size": 0.17876738999610606
  }, {
    "group_id": 10,
    "name": "fish",
    "size": 3.3257814435909236
  }, {
    "group_id": 2,
    "name": "bacon",
    "size": 3.8160642854614326
  }, {
    "group_id": 12,
    "name": "lavender",
    "size": 0.10973839781939183
  }, {
    "group_id": 6,
    "name": "peppermint",
    "size": 0.2513363304895749
  }, {
    "group_id": 8,
    "name": "black_sesame_seed",
    "size": 0.04601932811780948
  }, {
    "group_id": 6,
    "name": "lemongrass",
    "size": 0.24248645969768842
  }, {
    "group_id": 1,
    "name": "guava",
    "size": 0.02300966405890474
  }, {
    "group_id": 8,
    "name": "roasted_peanut",
    "size": 0.2920457361322525
  }, {
    "group_id": 10,
    "name": "haddock",
    "size": 0.05486919890969592
  }, {
    "group_id": 1,
    "name": "mandarin",
    "size": 0.492052816028886
  }, {
    "group_id": 1,
    "name": "quince",
    "size": 0.04955927643456406
  }, {
    "group_id": 1,
    "name": "bartlett_pear",
    "size": 0.04070940564267762
  }, {
    "group_id": 0,
    "name": "lemon_peel",
    "size": 1.2655315232397606
  }, {
    "group_id": 9,
    "name": "pepper",
    "size": 16.035965874898224
  }, {
    "group_id": 5,
    "name": "rum",
    "size": 1.065524443343127
  }, {
    "group_id": 1,
    "name": "pear",
    "size": 0.8283479061205707
  }, {
    "group_id": 5,
    "name": "champagne_wine",
    "size": 0.1752274416793515
  }, {
    "group_id": 1,
    "name": "raspberry",
    "size": 1.3876597401677935
  }, {
    "group_id": 10,
    "name": "smoked_salmon",
    "size": 0.1716874933625969
  }, {
    "group_id": 1,
    "name": "concord_grape",
    "size": 0.021239689900527454
  }, {
    "group_id": 3,
    "name": "black_bean",
    "size": 0.8389677510708343
  }, {
    "group_id": 1,
    "name": "plum",
    "size": 0.4902828418705087
  }, {
    "group_id": 5,
    "name": "brandy",
    "size": 0.6991397925590287
  }, {
    "group_id": 7,
    "name": "swiss_cheese",
    "size": 0.9239265106729442
  }, {
    "group_id": 9,
    "name": "cinnamon",
    "size": 9.917165209387942
  }, {
    "group_id": 7,
    "name": "blue_cheese",
    "size": 0.6991397925590287
  }, {
    "group_id": 4,
    "name": "popcorn",
    "size": 0.1716874933625969
  }, {
    "group_id": 7,
    "name": "cheddar_cheese",
    "size": 5.361251725724804
  }, {
    "group_id": 7,
    "name": "cheese",
    "size": 5.809055187794258
  }, {
    "group_id": 6,
    "name": "marjoram",
    "size": 0.934546355623208
  }, {
    "group_id": 1,
    "name": "apple",
    "size": 4.2797975149562815
  }, {
    "group_id": 7,
    "name": "roquefort_cheese",
    "size": 0.04070940564267762
  }, {
    "group_id": 9,
    "name": "tabasco_pepper",
    "size": 1.7080250628340825
  }, {
    "group_id": 11,
    "name": "cocoa",
    "size": 8.497645934369357
  }, {
    "group_id": 3,
    "name": "soybean",
    "size": 1.8301532797621156
  }, {
    "group_id": 11,
    "name": "black_tea",
    "size": 0.06725901801833693
  }, {
    "group_id": 4,
    "name": "white_bread",
    "size": 0.6548904385995965
  }, {
    "group_id": 10,
    "name": "herring",
    "size": 0.01769974158377288
  }, {
    "group_id": 1,
    "name": "lime",
    "size": 1.9168820135226023
  }, {
    "group_id": 7,
    "name": "provolone_cheese",
    "size": 0.29558568444900707
  }, {
    "group_id": 2,
    "name": "beef",
    "size": 8.53481539169528
  }, {
    "group_id": 7,
    "name": "romano_cheese",
    "size": 0.48674289355375416
  }, {
    "group_id": 3,
    "name": "shiitake",
    "size": 0.9044567949307939
  }, {
    "group_id": 9,
    "name": "anise",
    "size": 0.3947042373181352
  }, {
    "group_id": 10,
    "name": "caviar",
    "size": 0.04601932811780948
  }, {
    "group_id": 2,
    "name": "cured_pork",
    "size": 0.5557718857304683
  }, {
    "group_id": 7,
    "name": "buttermilk",
    "size": 2.8903678006301106
  }, {
    "group_id": 5,
    "name": "beer",
    "size": 0.5363021699883181
  }, {
    "group_id": 1,
    "name": "grapefruit",
    "size": 0.20708697653014269
  }, {
    "group_id": 4,
    "name": "brown_rice",
    "size": 0.596481291373146
  }, {
    "group_id": 6,
    "name": "basil",
    "size": 6.68873234450777
  }, {
    "group_id": 2,
    "name": "roasted_beef",
    "size": 0.3929342631597579
  }, {
    "group_id": 1,
    "name": "kiwi",
    "size": 0.18584728662961522
  }, {
    "group_id": 3,
    "name": "green_bell_pepper",
    "size": 4.562993380296647
  }, {
    "group_id": 3,
    "name": "mushroom",
    "size": 5.871004283337463
  }, {
    "group_id": 3,
    "name": "shallot",
    "size": 2.1009593259938404
  }, {
    "group_id": 5,
    "name": "red_wine",
    "size": 2.4655740026195616
  }, {
    "group_id": 1,
    "name": "tangerine",
    "size": 0.07787886296860065
  }, {
    "group_id": 1,
    "name": "orange",
    "size": 3.0248858366667846
  }, {
    "group_id": 9,
    "name": "ginger",
    "size": 6.75422138836773
  }, {
    "group_id": 7,
    "name": "cream_cheese",
    "size": 5.02495663563312
  }, {
    "group_id": 1,
    "name": "olive",
    "size": 3.180643562603986
  }, {
    "group_id": 11,
    "name": "lime_peel_oil",
    "size": 0.17699741583772877
  }, {
    "group_id": 7,
    "name": "gruyere_cheese",
    "size": 0.07787886296860065
  }, {
    "group_id": 1,
    "name": "apricot",
    "size": 1.0973839781939185
  }, {
    "group_id": 4,
    "name": "malt",
    "size": 0.06548904385995964
  }, {
    "group_id": 3,
    "name": "enokidake",
    "size": 0.18761726078799248
  }, {
    "group_id": 7,
    "name": "parmesan_cheese",
    "size": 5.60550815958087
  }, {
    "group_id": 1,
    "name": "banana",
    "size": 1.741654571843251
  }, {
    "group_id": 1,
    "name": "strawberry",
    "size": 1.9080321427307163
  }, {
    "group_id": 2,
    "name": "pork_liver",
    "size": 0.00884987079188644
  }, {
    "group_id": 5,
    "name": "whiskey",
    "size": 0.26195617543983857
  }, {
    "group_id": 8,
    "name": "coconut",
    "size": 3.026655810825162
  }, {
    "group_id": 2,
    "name": "mutton",
    "size": 0.0053099224751318634
  }, {
    "group_id": 5,
    "name": "port_wine",
    "size": 0.08672873376048709
  }, {
    "group_id": 13,
    "name": "honey",
    "size": 4.3948458352508055
  }, {
    "group_id": 8,
    "name": "seed",
    "size": 2.3239760699493788
  }, {
    "group_id": 3,
    "name": "red_kidney_bean",
    "size": 0.10442847534425997
  }, {
    "group_id": 6,
    "name": "mint",
    "size": 1.6496159156076322
  }, {
    "group_id": 7,
    "name": "cream",
    "size": 17.968777655846225
  }, {
    "group_id": 2,
    "name": "lamb",
    "size": 0.8354278027540798
  }, {
    "group_id": 1,
    "name": "lemon",
    "size": 5.3913412864172185
  }, {
    "group_id": 3,
    "name": "rhubarb",
    "size": 0.2991256327657616
  }, {
    "group_id": 7,
    "name": "cottage_cheese",
    "size": 0.6159510071152962
  }, {
    "group_id": 10,
    "name": "catfish",
    "size": 0.12035824276965557
  }, {
    "group_id": 7,
    "name": "goat_cheese",
    "size": 0.45842330701971756
  }, {
    "group_id": 5,
    "name": "sherry",
    "size": 1.1150837197776913
  }, {
    "group_id": 3,
    "name": "leek",
    "size": 0.7274593790930652
  }, {
    "group_id": 3,
    "name": "bell_pepper",
    "size": 10.349038904032001
  }, {
    "group_id": 1,
    "name": "cranberry",
    "size": 1.6212963290735956
  }, {
    "group_id": 10,
    "name": "salmon",
    "size": 0.7681687847357429
  }, {
    "group_id": 3,
    "name": "chive",
    "size": 2.327516018266133
  }, {
    "group_id": 7,
    "name": "sheep_cheese",
    "size": 0.003539948316754575
  }, {
    "group_id": 12,
    "name": "flower",
    "size": 0.053099224751318626
  }, {
    "group_id": 3,
    "name": "garlic",
    "size": 29.90017345746752
  }, {
    "group_id": 11,
    "name": "green_tea",
    "size": 0.0566391730680732
  }, {
    "group_id": 7,
    "name": "mozzarella_cheese",
    "size": 2.283266664306701
  }, {
    "group_id": 10,
    "name": "tuna",
    "size": 0.7840985521611384
  }, {
    "group_id": 1,
    "name": "nectarine",
    "size": 0.08849870791886438
  }, {
    "group_id": 2,
    "name": "pork_sausage",
    "size": 2.410704803709866
  }, {
    "group_id": 3,
    "name": "tomato",
    "size": 17.538673935360542
  }, {
    "group_id": 10,
    "name": "cod",
    "size": 0.3079755035576481
  }, {
    "group_id": 6,
    "name": "tarragon",
    "size": 0.842507699387589
  }, {
    "group_id": 3,
    "name": "potato",
    "size": 6.274558391447485
  }, {
    "group_id": 7,
    "name": "feta_cheese",
    "size": 1.0991539523522955
  }, {
    "group_id": 7,
    "name": "emmental_cheese",
    "size": 0.0017699741583772875
  }, {
    "group_id": 5,
    "name": "cabernet_sauvignon_wine",
    "size": 0.03008956069241389
  }, {
    "group_id": 4,
    "name": "wheat_bread",
    "size": 0.14690785514531488
  }, {
    "group_id": 1,
    "name": "muscat_grape",
    "size": 0.0017699741583772875
  }, {
    "group_id": 7,
    "name": "munster_cheese",
    "size": 0.04778930227618677
  }, {
    "group_id": 11,
    "name": "coconut_oil",
    "size": 0.03008956069241389
  }, {
    "group_id": 13,
    "name": "egg",
    "size": 37.08272859216255
  }, {
    "group_id": 5,
    "name": "wine",
    "size": 1.5522673368968813
  }, {
    "group_id": 10,
    "name": "katsuobushi",
    "size": 0.08672873376049997
  }, {
    "group_id": 10,
    "name": "sardine",
    "size": 0.0
  }]
};
/* harmony default export */ __webpack_exports__["default"] = (flavorData);

/***/ }),

/***/ "./src/data/umami_data.js":
/*!********************************!*\
  !*** ./src/data/umami_data.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var umamiData = {
  "links": [{
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 20,
    "source": "bacon",
    "target": "bean",
    "weight": 0.9151206475652063
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 21,
    "source": "bacon",
    "target": "beef",
    "weight": 17.180985869260198
  }, {
    "group_id_s": 2,
    "group_id_t": 4,
    "name": 22,
    "source": "bacon",
    "target": "brown_rice",
    "weight": 0.20711602209944752
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 23,
    "source": "bacon",
    "target": "caviar",
    "weight": 1.0557348066298344
  }, {
    "group_id_s": 2,
    "group_id_t": 7,
    "name": 24,
    "source": "bacon",
    "target": "cheddar_cheese",
    "weight": 1.1819879958150548
  }, {
    "group_id_s": 2,
    "group_id_t": 7,
    "name": 25,
    "source": "bacon",
    "target": "cheese",
    "weight": 4.218193419583116
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 26,
    "source": "bacon",
    "target": "chicken",
    "weight": 18.19396956522003
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 27,
    "source": "bacon",
    "target": "chive",
    "weight": 0.35389746884234874
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 28,
    "source": "bacon",
    "target": "clam",
    "weight": 2.548218424771939
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 29,
    "source": "bacon",
    "target": "cod",
    "weight": 44.7765559443611
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 30,
    "source": "bacon",
    "target": "coffee",
    "weight": 0.34896363869973024
  }, {
    "group_id_s": 2,
    "group_id_t": 13,
    "name": 32,
    "source": "bacon",
    "target": "egg",
    "weight": 0.29674726969035076
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 33,
    "source": "bacon",
    "target": "enokidake",
    "weight": 66.62086677712642
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 34,
    "source": "bacon",
    "target": "fish",
    "weight": 21.436752738262175
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 35,
    "source": "bacon",
    "target": "garlic",
    "weight": 2.5339862224374623
  }, {
    "group_id_s": 2,
    "group_id_t": 9,
    "name": 36,
    "source": "bacon",
    "target": "ginger",
    "weight": 0.225617885134267
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 37,
    "source": "bacon",
    "target": "grapefruit",
    "weight": 0.34032943595014775
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 38,
    "source": "bacon",
    "target": "green_tea",
    "weight": 3.152612617242709
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 39,
    "source": "bacon",
    "target": "katsuobushi",
    "weight": 10.13859876527928
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 40,
    "source": "bacon",
    "target": "mackerel",
    "weight": 32.196616142908695
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 41,
    "source": "bacon",
    "target": "mandarin",
    "weight": 0.17134575356546322
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 42,
    "source": "bacon",
    "target": "melon",
    "weight": 1.197582423230117
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 43,
    "source": "bacon",
    "target": "mushroom",
    "weight": 1.9906956186560456
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 45,
    "source": "bacon",
    "target": "onion",
    "weight": 0.4036469227804189
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 46,
    "source": "bacon",
    "target": "orange",
    "weight": 0.2798900167030708
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 47,
    "source": "bacon",
    "target": "porcini",
    "weight": 1.398636001541822
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 48,
    "source": "bacon",
    "target": "pork",
    "weight": 36.464978696317644
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 50,
    "source": "bacon",
    "target": "potato",
    "weight": 0.5011722985995117
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 53,
    "source": "bacon",
    "target": "salmon",
    "weight": 0.3039424386483361
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 54,
    "source": "bacon",
    "target": "sardine",
    "weight": 251.14110034690998
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 55,
    "source": "bacon",
    "target": "shiitake",
    "weight": 251.14110034690998
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 56,
    "source": "bacon",
    "target": "soybean",
    "weight": 5.97210648435536
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 57,
    "source": "bacon",
    "target": "strawberry",
    "weight": 0.19354798920724656
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 58,
    "source": "bacon",
    "target": "tomato",
    "weight": 1.9319830399588847
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 59,
    "source": "bacon",
    "target": "tuna",
    "weight": 91.61675733274765
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 65,
    "source": "bean",
    "target": "beef",
    "weight": 6.323099501314379
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 67,
    "source": "bean",
    "target": "chicken",
    "weight": 6.6959067867346675
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 68,
    "source": "bean",
    "target": "cod",
    "weight": 16.479067075477218
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 69,
    "source": "bean",
    "target": "enokidake",
    "weight": 24.518404979848725
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 70,
    "source": "bean",
    "target": "fish",
    "weight": 7.889344743110588
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 71,
    "source": "bean",
    "target": "katsuobushi",
    "weight": 3.7312974519968227
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 74,
    "source": "bean",
    "target": "mackerel",
    "weight": 11.849285543123642
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 76,
    "source": "bean",
    "target": "pork",
    "weight": 13.420166360922211
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 78,
    "source": "bean",
    "target": "sardine",
    "weight": 92.42718540408582
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 79,
    "source": "bean",
    "target": "shiitake",
    "weight": 92.42718540408582
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 80,
    "source": "bean",
    "target": "soybean",
    "weight": 2.197907839537136
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 81,
    "source": "bean",
    "target": "tuna",
    "weight": 33.71761533424051
  }, {
    "group_id_s": 2,
    "group_id_t": 4,
    "name": 83,
    "source": "beef",
    "target": "brown_rice",
    "weight": 1.4310847641080233
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 84,
    "source": "beef",
    "target": "caviar",
    "weight": 7.294684309749091
  }, {
    "group_id_s": 2,
    "group_id_t": 7,
    "name": 85,
    "source": "beef",
    "target": "cheddar_cheese",
    "weight": 8.167040845141912
  }, {
    "group_id_s": 2,
    "group_id_t": 7,
    "name": 86,
    "source": "beef",
    "target": "cheese",
    "weight": 29.145945705386456
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 87,
    "source": "beef",
    "target": "chicken",
    "weight": 5.058465833655433
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 88,
    "source": "beef",
    "target": "chive",
    "weight": 2.445282941333731
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 89,
    "source": "beef",
    "target": "clam",
    "weight": 17.607119557170158
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 90,
    "source": "beef",
    "target": "coffee",
    "weight": 2.4111922463009345
  }, {
    "group_id_s": 2,
    "group_id_t": 13,
    "name": 93,
    "source": "beef",
    "target": "egg",
    "weight": 2.0503990572038333
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 94,
    "source": "beef",
    "target": "enokidake",
    "weight": 6.86855062183913
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 95,
    "source": "beef",
    "target": "garlic",
    "weight": 17.508781013806317
  }, {
    "group_id_s": 2,
    "group_id_t": 9,
    "name": 96,
    "source": "beef",
    "target": "ginger",
    "weight": 1.5589248704810115
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 97,
    "source": "beef",
    "target": "grapefruit",
    "weight": 2.3515335299935396
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 98,
    "source": "beef",
    "target": "green_tea",
    "weight": 21.78322969868778
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 100,
    "source": "beef",
    "target": "mackerel",
    "weight": 1.5844928917556094
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 101,
    "source": "beef",
    "target": "mandarin",
    "weight": 1.1839272251202457
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 102,
    "source": "beef",
    "target": "melon",
    "weight": 8.274791791942002
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 103,
    "source": "beef",
    "target": "mushroom",
    "weight": 13.754871018464105
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 104,
    "source": "beef",
    "target": "onion",
    "weight": 2.789030782914433
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 105,
    "source": "beef",
    "target": "orange",
    "weight": 1.9339225158417777
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 108,
    "source": "beef",
    "target": "porcini",
    "weight": 9.663987614528475
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 109,
    "source": "beef",
    "target": "pork",
    "weight": 1.7790103869427447
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 112,
    "source": "beef",
    "target": "potato",
    "weight": 3.4628901880627185
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 116,
    "source": "beef",
    "target": "salmon",
    "weight": 2.100114654126662
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 117,
    "source": "beef",
    "target": "shiitake",
    "weight": 33.49764477933262
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 118,
    "source": "beef",
    "target": "soybean",
    "weight": 4.5290766752134415
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 119,
    "source": "beef",
    "target": "strawberry",
    "weight": 1.3373353527678318
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 120,
    "source": "beef",
    "target": "tomato",
    "weight": 13.34919174757382
  }, {
    "group_id_s": 4,
    "group_id_t": 2,
    "name": 175,
    "source": "brown_rice",
    "target": "chicken",
    "weight": 1.5154609195049995
  }, {
    "group_id_s": 4,
    "group_id_t": 10,
    "name": 176,
    "source": "brown_rice",
    "target": "cod",
    "weight": 3.7296490136723977
  }, {
    "group_id_s": 4,
    "group_id_t": 3,
    "name": 177,
    "source": "brown_rice",
    "target": "enokidake",
    "weight": 5.54916395030603
  }, {
    "group_id_s": 4,
    "group_id_t": 10,
    "name": 178,
    "source": "brown_rice",
    "target": "fish",
    "weight": 1.7855675145258072
  }, {
    "group_id_s": 4,
    "group_id_t": 10,
    "name": 179,
    "source": "brown_rice",
    "target": "katsuobushi",
    "weight": 0.8444913657926401
  }, {
    "group_id_s": 4,
    "group_id_t": 10,
    "name": 180,
    "source": "brown_rice",
    "target": "mackerel",
    "weight": 2.681806921242469
  }, {
    "group_id_s": 4,
    "group_id_t": 2,
    "name": 181,
    "source": "brown_rice",
    "target": "pork",
    "weight": 3.037338825194602
  }, {
    "group_id_s": 4,
    "group_id_t": 10,
    "name": 183,
    "source": "brown_rice",
    "target": "sardine",
    "weight": 20.9187182320442
  }, {
    "group_id_s": 4,
    "group_id_t": 3,
    "name": 184,
    "source": "brown_rice",
    "target": "shiitake",
    "weight": 20.9187182320442
  }, {
    "group_id_s": 4,
    "group_id_t": 3,
    "name": 185,
    "source": "brown_rice",
    "target": "soybean",
    "weight": 0.49744471384980526
  }, {
    "group_id_s": 4,
    "group_id_t": 10,
    "name": 186,
    "source": "brown_rice",
    "target": "tuna",
    "weight": 7.631188719528511
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 196,
    "source": "caviar",
    "target": "chicken",
    "weight": 7.724775826567738
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 197,
    "source": "caviar",
    "target": "cod",
    "weight": 19.011181464058666
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 198,
    "source": "caviar",
    "target": "enokidake",
    "weight": 28.28581521916557
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 199,
    "source": "caviar",
    "target": "fish",
    "weight": 9.101593182237181
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 200,
    "source": "caviar",
    "target": "katsuobushi",
    "weight": 4.3046352461209985
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 201,
    "source": "caviar",
    "target": "mackerel",
    "weight": 13.670004293810843
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 202,
    "source": "caviar",
    "target": "pork",
    "weight": 15.482261028296683
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 203,
    "source": "caviar",
    "target": "sardine",
    "weight": 106.62921546961326
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 204,
    "source": "caviar",
    "target": "shiitake",
    "weight": 106.62921546961326
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 206,
    "source": "caviar",
    "target": "soybean",
    "weight": 2.535630481224167
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 207,
    "source": "caviar",
    "target": "tuna",
    "weight": 38.898543268172865
  }, {
    "group_id_s": 7,
    "group_id_t": 2,
    "name": 217,
    "source": "cheddar_cheese",
    "target": "chicken",
    "weight": 8.648566136142167
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 218,
    "source": "cheddar_cheese",
    "target": "cod",
    "weight": 21.284690185134608
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 222,
    "source": "cheddar_cheese",
    "target": "enokidake",
    "weight": 31.668458623263955
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 224,
    "source": "cheddar_cheese",
    "target": "fish",
    "weight": 10.190034293307612
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 227,
    "source": "cheddar_cheese",
    "target": "katsuobushi",
    "weight": 4.819417864529484
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 228,
    "source": "cheddar_cheese",
    "target": "mackerel",
    "weight": 15.304772445273723
  }, {
    "group_id_s": 7,
    "group_id_t": 2,
    "name": 232,
    "source": "cheddar_cheese",
    "target": "pork",
    "weight": 17.333753295431784
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 236,
    "source": "cheddar_cheese",
    "target": "sardine",
    "weight": 119.38078757732052
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 237,
    "source": "cheddar_cheese",
    "target": "shiitake",
    "weight": 119.38078757732052
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 238,
    "source": "cheddar_cheese",
    "target": "soybean",
    "weight": 2.8388613994807557
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 240,
    "source": "cheddar_cheese",
    "target": "tuna",
    "weight": 43.55034134419107
  }, {
    "group_id_s": 7,
    "group_id_t": 2,
    "name": 241,
    "source": "cheese",
    "target": "chicken",
    "weight": 30.86437839764024
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 242,
    "source": "cheese",
    "target": "cod",
    "weight": 75.95926557180402
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 245,
    "source": "cheese",
    "target": "enokidake",
    "weight": 113.01610866265852
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 247,
    "source": "cheese",
    "target": "fish",
    "weight": 36.36545866247704
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 250,
    "source": "cheese",
    "target": "katsuobushi",
    "weight": 17.199190511542632
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 251,
    "source": "cheese",
    "target": "mackerel",
    "weight": 54.61856689361172
  }, {
    "group_id_s": 7,
    "group_id_t": 2,
    "name": 255,
    "source": "cheese",
    "target": "pork",
    "weight": 61.85944725864043
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 259,
    "source": "cheese",
    "target": "sardine",
    "weight": 426.03753537789464
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 260,
    "source": "cheese",
    "target": "shiitake",
    "weight": 426.03753537789464
  }, {
    "group_id_s": 7,
    "group_id_t": 3,
    "name": 261,
    "source": "cheese",
    "target": "soybean",
    "weight": 10.131123595837213
  }, {
    "group_id_s": 7,
    "group_id_t": 10,
    "name": 263,
    "source": "cheese",
    "target": "tuna",
    "weight": 155.41931384166892
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 264,
    "source": "chicken",
    "target": "chive",
    "weight": 2.589455794418467
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 265,
    "source": "chicken",
    "target": "clam",
    "weight": 18.64522791602401
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 266,
    "source": "chicken",
    "target": "cod",
    "weight": 13.183217780218376
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 267,
    "source": "chicken",
    "target": "coffee",
    "weight": 2.553355126354149
  }, {
    "group_id_s": 2,
    "group_id_t": 13,
    "name": 269,
    "source": "chicken",
    "target": "egg",
    "weight": 2.1712897226734476
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 270,
    "source": "chicken",
    "target": "enokidake",
    "weight": 19.614670599523365
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 271,
    "source": "chicken",
    "target": "fish",
    "weight": 6.311458616879009
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 272,
    "source": "chicken",
    "target": "garlic",
    "weight": 18.541091373530783
  }, {
    "group_id_s": 2,
    "group_id_t": 9,
    "name": 273,
    "source": "chicken",
    "target": "ginger",
    "weight": 1.6508384247461931
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 274,
    "source": "chicken",
    "target": "grapefruit",
    "weight": 2.490178957241592
  }, {
    "group_id_s": 2,
    "group_id_t": 11,
    "name": 275,
    "source": "chicken",
    "target": "green_tea",
    "weight": 23.067559753902994
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 276,
    "source": "chicken",
    "target": "katsuobushi",
    "weight": 2.9850298373777036
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 277,
    "source": "chicken",
    "target": "mackerel",
    "weight": 9.479402634840506
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 278,
    "source": "chicken",
    "target": "mandarin",
    "weight": 1.2537310760386924
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 279,
    "source": "chicken",
    "target": "melon",
    "weight": 8.762670033416887
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 280,
    "source": "chicken",
    "target": "mushroom",
    "weight": 14.565852424756047
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 281,
    "source": "chicken",
    "target": "onion",
    "weight": 2.9534708640670098
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 282,
    "source": "chicken",
    "target": "orange",
    "weight": 2.047945773453694
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 283,
    "source": "chicken",
    "target": "porcini",
    "weight": 10.233772257037854
  }, {
    "group_id_s": 2,
    "group_id_t": 2,
    "name": 284,
    "source": "chicken",
    "target": "pork",
    "weight": 10.736103868772847
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 286,
    "source": "chicken",
    "target": "potato",
    "weight": 3.667060736138367
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 289,
    "source": "chicken",
    "target": "salmon",
    "weight": 2.223936530267245
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 290,
    "source": "chicken",
    "target": "sardine",
    "weight": 73.94154707992767
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 291,
    "source": "chicken",
    "target": "shiitake",
    "weight": 73.94154707992767
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 292,
    "source": "chicken",
    "target": "soybean",
    "weight": 4.79610912984992
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 293,
    "source": "chicken",
    "target": "strawberry",
    "weight": 1.4161840823281244
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 294,
    "source": "chicken",
    "target": "tomato",
    "weight": 14.136254474790656
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 295,
    "source": "chicken",
    "target": "tuna",
    "weight": 26.974018853433837
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 296,
    "source": "chive",
    "target": "cod",
    "weight": 6.372821050875836
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 297,
    "source": "chive",
    "target": "enokidake",
    "weight": 9.48181148082098
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 298,
    "source": "chive",
    "target": "fish",
    "weight": 3.0509847448421636
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 299,
    "source": "chive",
    "target": "katsuobushi",
    "weight": 1.4429755543959462
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 301,
    "source": "chive",
    "target": "mackerel",
    "weight": 4.582381757486127
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 303,
    "source": "chive",
    "target": "pork",
    "weight": 5.189876241138131
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 304,
    "source": "chive",
    "target": "sardine",
    "weight": 35.74364435307722
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 305,
    "source": "chive",
    "target": "shiitake",
    "weight": 35.74364435307722
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 306,
    "source": "chive",
    "target": "soybean",
    "weight": 0.8499797521020569
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 307,
    "source": "chive",
    "target": "tuna",
    "weight": 13.039350334773683
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 322,
    "source": "clam",
    "target": "cod",
    "weight": 45.887132430581026
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 323,
    "source": "clam",
    "target": "enokidake",
    "weight": 68.2732396891075
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 324,
    "source": "clam",
    "target": "fish",
    "weight": 21.968440650159803
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 325,
    "source": "clam",
    "target": "katsuobushi",
    "weight": 10.390062710070582
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 326,
    "source": "clam",
    "target": "mackerel",
    "weight": 32.99517699847325
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 327,
    "source": "clam",
    "target": "pork",
    "weight": 37.3694061820082
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 328,
    "source": "clam",
    "target": "sardine",
    "weight": 257.3700609019658
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 329,
    "source": "clam",
    "target": "shiitake",
    "weight": 257.3700609019658
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 330,
    "source": "clam",
    "target": "soybean",
    "weight": 6.120230450007567
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 331,
    "source": "clam",
    "target": "tuna",
    "weight": 93.88909414587587
  }, {
    "group_id_s": 10,
    "group_id_t": 11,
    "name": 336,
    "source": "cod",
    "target": "coffee",
    "weight": 6.283974931978243
  }, {
    "group_id_s": 10,
    "group_id_t": 13,
    "name": 337,
    "source": "cod",
    "target": "egg",
    "weight": 5.343686840312032
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 338,
    "source": "cod",
    "target": "enokidake",
    "weight": 17.900604977838732
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 340,
    "source": "cod",
    "target": "garlic",
    "weight": 45.630845549145654
  }, {
    "group_id_s": 10,
    "group_id_t": 9,
    "name": 341,
    "source": "cod",
    "target": "ginger",
    "weight": 4.062821959538378
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 342,
    "source": "cod",
    "target": "grapefruit",
    "weight": 6.128494223907451
  }, {
    "group_id_s": 10,
    "group_id_t": 11,
    "name": 343,
    "source": "cod",
    "target": "green_tea",
    "weight": 56.77078199553636
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 345,
    "source": "cod",
    "target": "mackerel",
    "weight": 4.129456548711573
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 346,
    "source": "cod",
    "target": "mandarin",
    "weight": 3.0855146516648375
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 347,
    "source": "cod",
    "target": "melon",
    "weight": 21.56550738236451
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 348,
    "source": "cod",
    "target": "mushroom",
    "weight": 35.847520995152834
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 349,
    "source": "cod",
    "target": "onion",
    "weight": 7.268686083093249
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 350,
    "source": "cod",
    "target": "orange",
    "weight": 5.040129267411919
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 351,
    "source": "cod",
    "target": "porcini",
    "weight": 25.185986727441485
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 352,
    "source": "cod",
    "target": "pork",
    "weight": 4.636402050656672
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 353,
    "source": "cod",
    "target": "potato",
    "weight": 9.024877699969034
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 354,
    "source": "cod",
    "target": "salmon",
    "weight": 5.473254097037691
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 356,
    "source": "cod",
    "target": "shiitake",
    "weight": 87.30052960172227
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 358,
    "source": "cod",
    "target": "soybean",
    "weight": 11.803540068491301
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 359,
    "source": "cod",
    "target": "strawberry",
    "weight": 3.4853221867040127
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 360,
    "source": "cod",
    "target": "tomato",
    "weight": 34.79025218027146
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 361,
    "source": "coffee",
    "target": "enokidake",
    "weight": 9.349621647862495
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 362,
    "source": "coffee",
    "target": "fish",
    "weight": 3.0084497118903535
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 364,
    "source": "coffee",
    "target": "katsuobushi",
    "weight": 1.422858438812642
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 365,
    "source": "coffee",
    "target": "mackerel",
    "weight": 4.5184968890409625
  }, {
    "group_id_s": 11,
    "group_id_t": 2,
    "name": 368,
    "source": "coffee",
    "target": "pork",
    "weight": 5.117522042282887
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 371,
    "source": "coffee",
    "target": "sardine",
    "weight": 35.24532750867275
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 372,
    "source": "coffee",
    "target": "shiitake",
    "weight": 35.24532750867275
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 373,
    "source": "coffee",
    "target": "soybean",
    "weight": 0.8381298348498804
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 375,
    "source": "coffee",
    "target": "tuna",
    "weight": 12.857563389723426
  }, {
    "group_id_s": 13,
    "group_id_t": 3,
    "name": 407,
    "source": "egg",
    "target": "enokidake",
    "weight": 7.950612582385187
  }, {
    "group_id_s": 13,
    "group_id_t": 10,
    "name": 408,
    "source": "egg",
    "target": "fish",
    "weight": 2.5582872798170277
  }, {
    "group_id_s": 13,
    "group_id_t": 10,
    "name": 409,
    "source": "egg",
    "target": "katsuobushi",
    "weight": 1.2099522988893368
  }, {
    "group_id_s": 13,
    "group_id_t": 10,
    "name": 410,
    "source": "egg",
    "target": "mackerel",
    "weight": 3.8423820313296324
  }, {
    "group_id_s": 13,
    "group_id_t": 2,
    "name": 411,
    "source": "egg",
    "target": "pork",
    "weight": 4.351773437731547
  }, {
    "group_id_s": 13,
    "group_id_t": 10,
    "name": 413,
    "source": "egg",
    "target": "sardine",
    "weight": 29.971474238725428
  }, {
    "group_id_s": 13,
    "group_id_t": 3,
    "name": 414,
    "source": "egg",
    "target": "shiitake",
    "weight": 29.971474238725428
  }, {
    "group_id_s": 13,
    "group_id_t": 3,
    "name": 415,
    "source": "egg",
    "target": "soybean",
    "weight": 0.7127182105976787
  }, {
    "group_id_s": 13,
    "group_id_t": 10,
    "name": 416,
    "source": "egg",
    "target": "tuna",
    "weight": 10.933651554608197
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 418,
    "source": "enokidake",
    "target": "fish",
    "weight": 8.569905270339554
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 419,
    "source": "enokidake",
    "target": "garlic",
    "weight": 67.8919228632657
  }, {
    "group_id_s": 3,
    "group_id_t": 9,
    "name": 420,
    "source": "enokidake",
    "target": "ginger",
    "weight": 6.044875823900353
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 421,
    "source": "enokidake",
    "target": "grapefruit",
    "weight": 9.118289440185142
  }, {
    "group_id_s": 3,
    "group_id_t": 11,
    "name": 422,
    "source": "enokidake",
    "target": "green_tea",
    "weight": 84.46649422652199
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 423,
    "source": "enokidake",
    "target": "katsuobushi",
    "weight": 4.0531713013296935
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 424,
    "source": "enokidake",
    "target": "mackerel",
    "weight": 12.871443438246283
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 425,
    "source": "enokidake",
    "target": "mandarin",
    "weight": 4.590787661357011
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 427,
    "source": "enokidake",
    "target": "melon",
    "weight": 32.08627291672203
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 428,
    "source": "enokidake",
    "target": "mushroom",
    "weight": 53.335788564798605
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 429,
    "source": "enokidake",
    "target": "onion",
    "weight": 10.814725629819044
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 430,
    "source": "enokidake",
    "target": "orange",
    "weight": 7.4989639864436946
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 431,
    "source": "enokidake",
    "target": "porcini",
    "weight": 37.473008609780315
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 432,
    "source": "enokidake",
    "target": "pork",
    "weight": 14.577833542606125
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 433,
    "source": "enokidake",
    "target": "potato",
    "weight": 13.427677994631777
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 434,
    "source": "enokidake",
    "target": "salmon",
    "weight": 8.14338942211631
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 435,
    "source": "enokidake",
    "target": "sardine",
    "weight": 100.40025491455737
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 436,
    "source": "enokidake",
    "target": "shiitake",
    "weight": 129.89022557688162
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 437,
    "source": "enokidake",
    "target": "soybean",
    "weight": 17.561915020408414
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 438,
    "source": "enokidake",
    "target": "strawberry",
    "weight": 5.185641909670195
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 439,
    "source": "enokidake",
    "target": "tomato",
    "weight": 51.76272955259262
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 440,
    "source": "enokidake",
    "target": "tuna",
    "weight": 36.626206455044645
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 448,
    "source": "fish",
    "target": "garlic",
    "weight": 21.845743439721886
  }, {
    "group_id_s": 10,
    "group_id_t": 9,
    "name": 449,
    "source": "fish",
    "target": "ginger",
    "weight": 1.945073888095096
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 450,
    "source": "fish",
    "target": "grapefruit",
    "weight": 2.934013404224685
  }, {
    "group_id_s": 10,
    "group_id_t": 11,
    "name": 451,
    "source": "fish",
    "target": "green_tea",
    "weight": 27.178982186756567
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 454,
    "source": "fish",
    "target": "mackerel",
    "weight": 1.9769751628089536
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 455,
    "source": "fish",
    "target": "mandarin",
    "weight": 1.4771885256251827
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 456,
    "source": "fish",
    "target": "melon",
    "weight": 10.32447537960173
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 457,
    "source": "fish",
    "target": "mushroom",
    "weight": 17.161981926605236
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 458,
    "source": "fish",
    "target": "onion",
    "weight": 3.4798796604395847
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 459,
    "source": "fish",
    "target": "orange",
    "weight": 2.4129592505650095
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 460,
    "source": "fish",
    "target": "porcini",
    "weight": 12.057777972387997
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 461,
    "source": "fish",
    "target": "pork",
    "weight": 2.2196750567104595
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 462,
    "source": "fish",
    "target": "potato",
    "weight": 4.320655478453702
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 463,
    "source": "fish",
    "target": "salmon",
    "weight": 2.620317536205085
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 465,
    "source": "fish",
    "target": "shiitake",
    "weight": 41.795082884822385
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 467,
    "source": "fish",
    "target": "soybean",
    "weight": 5.650938634021569
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 468,
    "source": "fish",
    "target": "strawberry",
    "weight": 1.6685961739083288
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 469,
    "source": "fish",
    "target": "tomato",
    "weight": 16.655815034478692
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 472,
    "source": "garlic",
    "target": "katsuobushi",
    "weight": 10.332032568964896
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 473,
    "source": "garlic",
    "target": "mackerel",
    "weight": 32.81089372411219
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 475,
    "source": "garlic",
    "target": "pork",
    "weight": 37.16069214684884
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 477,
    "source": "garlic",
    "target": "sardine",
    "weight": 255.9326084661837
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 478,
    "source": "garlic",
    "target": "shiitake",
    "weight": 255.9326084661837
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 479,
    "source": "garlic",
    "target": "soybean",
    "weight": 6.086047996395518
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 480,
    "source": "garlic",
    "target": "tuna",
    "weight": 93.36470872746166
  }, {
    "group_id_s": 9,
    "group_id_t": 10,
    "name": 481,
    "source": "ginger",
    "target": "katsuobushi",
    "weight": 0.9199305492300315
  }, {
    "group_id_s": 9,
    "group_id_t": 10,
    "name": 482,
    "source": "ginger",
    "target": "mackerel",
    "weight": 2.921375177911838
  }, {
    "group_id_s": 9,
    "group_id_t": 2,
    "name": 485,
    "source": "ginger",
    "target": "pork",
    "weight": 3.308667070901769
  }, {
    "group_id_s": 9,
    "group_id_t": 10,
    "name": 487,
    "source": "ginger",
    "target": "sardine",
    "weight": 22.787406398560965
  }, {
    "group_id_s": 9,
    "group_id_t": 3,
    "name": 489,
    "source": "ginger",
    "target": "shiitake",
    "weight": 22.787406398560965
  }, {
    "group_id_s": 9,
    "group_id_t": 3,
    "name": 490,
    "source": "ginger",
    "target": "soybean",
    "weight": 0.5418819035454672
  }, {
    "group_id_s": 9,
    "group_id_t": 10,
    "name": 491,
    "source": "ginger",
    "target": "tuna",
    "weight": 8.312889763466979
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 497,
    "source": "grapefruit",
    "target": "katsuobushi",
    "weight": 1.3876534865418588
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 498,
    "source": "grapefruit",
    "target": "mackerel",
    "weight": 4.406698369261923
  }, {
    "group_id_s": 1,
    "group_id_t": 2,
    "name": 500,
    "source": "grapefruit",
    "target": "pork",
    "weight": 4.990902194286208
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 501,
    "source": "grapefruit",
    "target": "sardine",
    "weight": 34.373273030964924
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 502,
    "source": "grapefruit",
    "target": "shiitake",
    "weight": 34.373273030964924
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 503,
    "source": "grapefruit",
    "target": "soybean",
    "weight": 0.8173924796585713
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 504,
    "source": "grapefruit",
    "target": "tuna",
    "weight": 12.539436235885473
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 508,
    "source": "green_tea",
    "target": "katsuobushi",
    "weight": 12.854409369025372
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 509,
    "source": "green_tea",
    "target": "mackerel",
    "weight": 40.82107338300596
  }, {
    "group_id_s": 11,
    "group_id_t": 2,
    "name": 511,
    "source": "green_tea",
    "target": "pork",
    "weight": 46.23279554177567
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 512,
    "source": "green_tea",
    "target": "sardine",
    "weight": 318.4138743415136
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 513,
    "source": "green_tea",
    "target": "shiitake",
    "weight": 318.4138743415136
  }, {
    "group_id_s": 11,
    "group_id_t": 3,
    "name": 514,
    "source": "green_tea",
    "target": "soybean",
    "weight": 7.571845313399191
  }, {
    "group_id_s": 11,
    "group_id_t": 10,
    "name": 515,
    "source": "green_tea",
    "target": "tuna",
    "weight": 116.15799491453247
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 524,
    "source": "katsuobushi",
    "target": "mackerel",
    "weight": 0.9350183859175099
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 525,
    "source": "katsuobushi",
    "target": "mandarin",
    "weight": 0.698642277813683
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 526,
    "source": "katsuobushi",
    "target": "melon",
    "weight": 4.883002319141
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 527,
    "source": "katsuobushi",
    "target": "mushroom",
    "weight": 8.116828649157185
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 528,
    "source": "katsuobushi",
    "target": "onion",
    "weight": 1.6458231365275993
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 529,
    "source": "katsuobushi",
    "target": "orange",
    "weight": 1.14121882064638
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 530,
    "source": "katsuobushi",
    "target": "porcini",
    "weight": 5.702774779160655
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 531,
    "source": "katsuobushi",
    "target": "pork",
    "weight": 1.0498042807163646
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 532,
    "source": "katsuobushi",
    "target": "potato",
    "weight": 2.043471454557583
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 533,
    "source": "katsuobushi",
    "target": "salmon",
    "weight": 1.239289759114989
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 534,
    "source": "katsuobushi",
    "target": "shiitake",
    "weight": 19.76715321133835
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 535,
    "source": "katsuobushi",
    "target": "soybean",
    "weight": 2.672634244425428
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 536,
    "source": "katsuobushi",
    "target": "strawberry",
    "weight": 0.7891692979385528
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 537,
    "source": "katsuobushi",
    "target": "tomato",
    "weight": 7.877434973715861
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 555,
    "source": "mackerel",
    "target": "mandarin",
    "weight": 2.2186416250150236
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 556,
    "source": "mackerel",
    "target": "melon",
    "weight": 15.506694261609336
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 557,
    "source": "mackerel",
    "target": "mushroom",
    "weight": 25.776186864169606
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 558,
    "source": "mackerel",
    "target": "onion",
    "weight": 5.226554180974874
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 559,
    "source": "mackerel",
    "target": "orange",
    "weight": 3.624108730808653
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 560,
    "source": "mackerel",
    "target": "porcini",
    "weight": 18.110002650749806
  }, {
    "group_id_s": 10,
    "group_id_t": 2,
    "name": 561,
    "source": "mackerel",
    "target": "pork",
    "weight": 3.362932720043203
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 562,
    "source": "mackerel",
    "target": "potato",
    "weight": 6.489345080574301
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 563,
    "source": "mackerel",
    "target": "salmon",
    "weight": 3.935547464478831
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 564,
    "source": "mackerel",
    "target": "sardine",
    "weight": 23.16114403186432
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 565,
    "source": "mackerel",
    "target": "shiitake",
    "weight": 62.77351130247577
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 566,
    "source": "mackerel",
    "target": "soybean",
    "weight": 8.487344341196835
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 567,
    "source": "mackerel",
    "target": "strawberry",
    "weight": 2.506123533018265
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 568,
    "source": "mackerel",
    "target": "tomato",
    "weight": 25.015956929672143
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 569,
    "source": "mackerel",
    "target": "tuna",
    "weight": 8.449229972254674
  }, {
    "group_id_s": 1,
    "group_id_t": 2,
    "name": 572,
    "source": "mandarin",
    "target": "pork",
    "weight": 2.5127708834940785
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 573,
    "source": "mandarin",
    "target": "sardine",
    "weight": 17.305921110111782
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 574,
    "source": "mandarin",
    "target": "shiitake",
    "weight": 17.305921110111782
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 575,
    "source": "mandarin",
    "target": "soybean",
    "weight": 0.4115328137715255
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 577,
    "source": "mandarin",
    "target": "tuna",
    "weight": 6.313233367914144
  }, {
    "group_id_s": 1,
    "group_id_t": 2,
    "name": 580,
    "source": "melon",
    "target": "pork",
    "weight": 17.56244424538497
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 581,
    "source": "melon",
    "target": "sardine",
    "weight": 120.9558247462418
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 582,
    "source": "melon",
    "target": "shiitake",
    "weight": 120.9558247462418
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 583,
    "source": "melon",
    "target": "soybean",
    "weight": 2.8763156022242424
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 585,
    "source": "melon",
    "target": "tuna",
    "weight": 44.12491793836778
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 598,
    "source": "mushroom",
    "target": "pork",
    "weight": 29.19338171136555
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 599,
    "source": "mushroom",
    "target": "sardine",
    "weight": 201.06025748426057
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 600,
    "source": "mushroom",
    "target": "shiitake",
    "weight": 201.06025748426057
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 601,
    "source": "mushroom",
    "target": "soybean",
    "weight": 4.781189800511619
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 602,
    "source": "mushroom",
    "target": "tuna",
    "weight": 73.34716935519674
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 608,
    "source": "onion",
    "target": "pork",
    "weight": 5.919447746261849
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 610,
    "source": "onion",
    "target": "sardine",
    "weight": 40.76833920082231
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 612,
    "source": "onion",
    "target": "shiitake",
    "weight": 40.76833920082231
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 613,
    "source": "onion",
    "target": "soybean",
    "weight": 0.9694664177281702
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 614,
    "source": "onion",
    "target": "tuna",
    "weight": 14.872368697363786
  }, {
    "group_id_s": 1,
    "group_id_t": 2,
    "name": 617,
    "source": "orange",
    "target": "pork",
    "weight": 4.104563258309461
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 618,
    "source": "orange",
    "target": "sardine",
    "weight": 28.268891687010154
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 619,
    "source": "orange",
    "target": "shiitake",
    "weight": 28.268891687010154
  }, {
    "group_id_s": 1,
    "group_id_t": 3,
    "name": 620,
    "source": "orange",
    "target": "soybean",
    "weight": 0.672230993319409
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 623,
    "source": "orange",
    "target": "tuna",
    "weight": 10.312546159019817
  }, {
    "group_id_s": 3,
    "group_id_t": 2,
    "name": 640,
    "source": "porcini",
    "target": "pork",
    "weight": 20.51087784873619
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 641,
    "source": "porcini",
    "target": "sardine",
    "weight": 141.262236155724
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 642,
    "source": "porcini",
    "target": "shiitake",
    "weight": 141.262236155724
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 643,
    "source": "porcini",
    "target": "soybean",
    "weight": 3.3591997302504355
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 644,
    "source": "porcini",
    "target": "tuna",
    "weight": 51.53273594916578
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 646,
    "source": "pork",
    "target": "potato",
    "weight": 7.349649076967184
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 649,
    "source": "pork",
    "target": "salmon",
    "weight": 4.457289977728778
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 650,
    "source": "pork",
    "target": "sardine",
    "weight": 26.004481320525127
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 651,
    "source": "pork",
    "target": "shiitake",
    "weight": 71.09550712340912
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 652,
    "source": "pork",
    "target": "soybean",
    "weight": 9.61252664616496
  }, {
    "group_id_s": 2,
    "group_id_t": 1,
    "name": 653,
    "source": "pork",
    "target": "strawberry",
    "weight": 2.838364778342679
  }, {
    "group_id_s": 2,
    "group_id_t": 3,
    "name": 654,
    "source": "pork",
    "target": "tomato",
    "weight": 28.332366744988136
  }, {
    "group_id_s": 2,
    "group_id_t": 10,
    "name": 655,
    "source": "pork",
    "target": "tuna",
    "weight": 9.486484894012028
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 662,
    "source": "potato",
    "target": "sardine",
    "weight": 50.61840215855069
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 663,
    "source": "potato",
    "target": "shiitake",
    "weight": 50.61840215855069
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 664,
    "source": "potato",
    "target": "soybean",
    "weight": 1.2036997820795259
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 665,
    "source": "potato",
    "target": "tuna",
    "weight": 18.46569064452388
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 682,
    "source": "salmon",
    "target": "sardine",
    "weight": 30.698186303481943
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 683,
    "source": "salmon",
    "target": "shiitake",
    "weight": 30.698186303481943
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 685,
    "source": "salmon",
    "target": "soybean",
    "weight": 0.7299993399237695
  }, {
    "group_id_s": 10,
    "group_id_t": 10,
    "name": 686,
    "source": "salmon",
    "target": "tuna",
    "weight": 11.198757516139823
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 687,
    "source": "sardine",
    "target": "shiitake",
    "weight": 489.648
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 689,
    "source": "sardine",
    "target": "soybean",
    "weight": 66.20326146730052
  }, {
    "group_id_s": 10,
    "group_id_t": 1,
    "name": 690,
    "source": "sardine",
    "target": "strawberry",
    "weight": 19.548346909931904
  }, {
    "group_id_s": 10,
    "group_id_t": 3,
    "name": 691,
    "source": "sardine",
    "target": "tomato",
    "weight": 195.13028703584735
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 695,
    "source": "shiitake",
    "target": "soybean",
    "weight": 66.20326146730052
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 696,
    "source": "shiitake",
    "target": "strawberry",
    "weight": 19.548346909931904
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 697,
    "source": "shiitake",
    "target": "tomato",
    "weight": 195.13028703584735
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 698,
    "source": "shiitake",
    "target": "tuna",
    "weight": 178.62453390742732
  }, {
    "group_id_s": 3,
    "group_id_t": 1,
    "name": 699,
    "source": "soybean",
    "target": "strawberry",
    "weight": 0.4648574414063198
  }, {
    "group_id_s": 3,
    "group_id_t": 3,
    "name": 700,
    "source": "soybean",
    "target": "tomato",
    "weight": 4.640175785210718
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 701,
    "source": "soybean",
    "target": "tuna",
    "weight": 24.151077350970695
  }, {
    "group_id_s": 1,
    "group_id_t": 10,
    "name": 702,
    "source": "strawberry",
    "target": "tuna",
    "weight": 7.131274620640303
  }, {
    "group_id_s": 3,
    "group_id_t": 10,
    "name": 704,
    "source": "tomato",
    "target": "tuna",
    "weight": 71.18390470909866
  }],
  "nodes": [{
    "group_id": 0,
    "name": "orange_peel",
    "size": 1.0124252185918086,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "cherry",
    "size": 1.9186519876809798,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "roasted_pork",
    "size": 0.22124676979716093,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "matsutake",
    "size": 0.09911855286912812,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "orange_juice",
    "size": 3.008956069241389,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "rye_bread",
    "size": 0.16106764841233318,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "white_wine",
    "size": 3.8337640270452047,
    "umami": 0
  }, {
    "group_id": 6,
    "name": "fennel",
    "size": 1.6053665616482,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "pineapple",
    "size": 2.860278239937697,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "chicken",
    "size": 9.370243194449362,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "porcini",
    "size": 0.18761726078799248,
    "umami": 1
  }, {
    "group_id": 7,
    "name": "milk",
    "size": 22.823816772275123,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "raw_beef",
    "size": 0.003539948316754575,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "grape",
    "size": 0.6106410846401643,
    "umami": 0
  }, {
    "group_id": 8,
    "name": "peanut",
    "size": 0.8017982937449113,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "cayenne",
    "size": 14.071294559099437,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "cognac",
    "size": 0.116818294452901,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "melon",
    "size": 0.27788594286523416,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "mung_bean",
    "size": 0.033629509009168466,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "rice",
    "size": 6.009062267690892,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "mackerel",
    "size": 0.07787886296860065,
    "umami": 1
  }, {
    "group_id": 9,
    "name": "thai_pepper",
    "size": 0.15398775177882404,
    "umami": 0
  }, {
    "group_id": 11,
    "name": "coffee",
    "size": 1.267301497398138,
    "umami": 1
  }, {
    "group_id": 1,
    "name": "citrus",
    "size": 0.28850578781549785,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "lima_bean",
    "size": 0.2637261495982159,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "black_pepper",
    "size": 17.26078799249531,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "bean",
    "size": 3.3682608233919784,
    "umami": 1
  }, {
    "group_id": 11,
    "name": "peanut_butter",
    "size": 1.7611242875854014,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "kidney_bean",
    "size": 0.7823285780027611,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "apple_brandy",
    "size": 0.06548904385995964,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "bread",
    "size": 8.05869234309179,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "juniper_berry",
    "size": 0.0584091472264505,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "clam",
    "size": 0.8159580870119296,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "onion",
    "size": 31.914404049700874,
    "umami": 1
  }, {
    "group_id": 5,
    "name": "cider",
    "size": 1.9823710573825624,
    "umami": 0
  }, {
    "group_id": 0,
    "name": "citrus_peel",
    "size": 0.00707989663350915,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "eel",
    "size": 0.03539948316754576,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "nutmeg",
    "size": 4.4461750858437465,
    "umami": 0
  }, {
    "group_id": 6,
    "name": "rosemary",
    "size": 3.3452511593330736,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "vanilla",
    "size": 15.974016779355022,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "pork",
    "size": 3.4762292470529927,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "red_bean",
    "size": 0.0584091472264505,
    "umami": 0
  }, {
    "group_id": 11,
    "name": "tea",
    "size": 0.17876738999610606,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "fish",
    "size": 3.3257814435909236,
    "umami": 1
  }, {
    "group_id": 2,
    "name": "bacon",
    "size": 3.8160642854614326,
    "umami": 1
  }, {
    "group_id": 12,
    "name": "lavender",
    "size": 0.10973839781939183,
    "umami": 0
  }, {
    "group_id": 6,
    "name": "peppermint",
    "size": 0.2513363304895749,
    "umami": 0
  }, {
    "group_id": 8,
    "name": "black_sesame_seed",
    "size": 0.04601932811780948,
    "umami": 0
  }, {
    "group_id": 6,
    "name": "lemongrass",
    "size": 0.24248645969768842,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "guava",
    "size": 0.02300966405890474,
    "umami": 0
  }, {
    "group_id": 8,
    "name": "roasted_peanut",
    "size": 0.2920457361322525,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "haddock",
    "size": 0.05486919890969592,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "mandarin",
    "size": 0.492052816028886,
    "umami": 1
  }, {
    "group_id": 1,
    "name": "quince",
    "size": 0.04955927643456406,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "bartlett_pear",
    "size": 0.04070940564267762,
    "umami": 0
  }, {
    "group_id": 0,
    "name": "lemon_peel",
    "size": 1.2655315232397606,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "pepper",
    "size": 16.035965874898224,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "rum",
    "size": 1.065524443343127,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "pear",
    "size": 0.8283479061205707,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "champagne_wine",
    "size": 0.1752274416793515,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "raspberry",
    "size": 1.3876597401677935,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "smoked_salmon",
    "size": 0.1716874933625969,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "concord_grape",
    "size": 0.021239689900527454,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "black_bean",
    "size": 0.8389677510708343,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "plum",
    "size": 0.4902828418705087,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "brandy",
    "size": 0.6991397925590287,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "cinnamon",
    "size": 9.917165209387942,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "popcorn",
    "size": 0.1716874933625969,
    "umami": 0
  }, {
    "group_id": 7,
    "name": "cheddar_cheese",
    "size": 5.361251725724804,
    "umami": 1
  }, {
    "group_id": 7,
    "name": "cheese",
    "size": 5.809055187794258,
    "umami": 1
  }, {
    "group_id": 6,
    "name": "marjoram",
    "size": 0.934546355623208,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "apple",
    "size": 4.2797975149562815,
    "umami": 0
  }, {
    "group_id": 9,
    "name": "tabasco_pepper",
    "size": 1.7080250628340825,
    "umami": 0
  }, {
    "group_id": 11,
    "name": "cocoa",
    "size": 8.497645934369357,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "soybean",
    "size": 1.8301532797621156,
    "umami": 1
  }, {
    "group_id": 11,
    "name": "black_tea",
    "size": 0.06725901801833693,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "white_bread",
    "size": 0.6548904385995965,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "herring",
    "size": 0.01769974158377288,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "lime",
    "size": 1.9168820135226023,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "beef",
    "size": 8.53481539169528,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "shiitake",
    "size": 0.9044567949307939,
    "umami": 1
  }, {
    "group_id": 9,
    "name": "anise",
    "size": 0.3947042373181352,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "caviar",
    "size": 0.04601932811780948,
    "umami": 1
  }, {
    "group_id": 2,
    "name": "cured_pork",
    "size": 0.5557718857304683,
    "umami": 0
  }, {
    "group_id": 7,
    "name": "buttermilk",
    "size": 2.8903678006301106,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "beer",
    "size": 0.5363021699883181,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "grapefruit",
    "size": 0.20708697653014269,
    "umami": 1
  }, {
    "group_id": 4,
    "name": "brown_rice",
    "size": 0.596481291373146,
    "umami": 1
  }, {
    "group_id": 6,
    "name": "basil",
    "size": 6.68873234450777,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "roasted_beef",
    "size": 0.3929342631597579,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "kiwi",
    "size": 0.18584728662961522,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "green_bell_pepper",
    "size": 4.562993380296647,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "mushroom",
    "size": 5.871004283337463,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "shallot",
    "size": 2.1009593259938404,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "red_wine",
    "size": 2.4655740026195616,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "tangerine",
    "size": 0.07787886296860065,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "orange",
    "size": 3.0248858366667846,
    "umami": 1
  }, {
    "group_id": 9,
    "name": "ginger",
    "size": 6.75422138836773,
    "umami": 1
  }, {
    "group_id": 1,
    "name": "olive",
    "size": 3.180643562603986,
    "umami": 0
  }, {
    "group_id": 11,
    "name": "lime_peel_oil",
    "size": 0.17699741583772877,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "apricot",
    "size": 1.0973839781939185,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "malt",
    "size": 0.06548904385995964,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "enokidake",
    "size": 0.18761726078799248,
    "umami": 1
  }, {
    "group_id": 1,
    "name": "banana",
    "size": 1.741654571843251,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "strawberry",
    "size": 1.9080321427307163,
    "umami": 1
  }, {
    "group_id": 2,
    "name": "pork_liver",
    "size": 0.00884987079188644,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "whiskey",
    "size": 0.26195617543983857,
    "umami": 0
  }, {
    "group_id": 8,
    "name": "coconut",
    "size": 3.026655810825162,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "mutton",
    "size": 0.0053099224751318634,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "port_wine",
    "size": 0.08672873376048709,
    "umami": 0
  }, {
    "group_id": 13,
    "name": "honey",
    "size": 4.3948458352508055,
    "umami": 0
  }, {
    "group_id": 8,
    "name": "seed",
    "size": 2.3239760699493788,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "red_kidney_bean",
    "size": 0.10442847534425997,
    "umami": 0
  }, {
    "group_id": 6,
    "name": "mint",
    "size": 1.6496159156076322,
    "umami": 0
  }, {
    "group_id": 7,
    "name": "cream",
    "size": 17.968777655846225,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "lamb",
    "size": 0.8354278027540798,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "lemon",
    "size": 5.3913412864172185,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "rhubarb",
    "size": 0.2991256327657616,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "catfish",
    "size": 0.12035824276965557,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "sherry",
    "size": 1.1150837197776913,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "leek",
    "size": 0.7274593790930652,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "bell_pepper",
    "size": 10.349038904032001,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "cranberry",
    "size": 1.6212963290735956,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "salmon",
    "size": 0.7681687847357429,
    "umami": 1
  }, {
    "group_id": 3,
    "name": "chive",
    "size": 2.327516018266133,
    "umami": 1
  }, {
    "group_id": 12,
    "name": "flower",
    "size": 0.053099224751318626,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "garlic",
    "size": 29.90017345746752,
    "umami": 1
  }, {
    "group_id": 11,
    "name": "green_tea",
    "size": 0.0566391730680732,
    "umami": 1
  }, {
    "group_id": 7,
    "name": "mozzarella_cheese",
    "size": 2.283266664306701,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "tuna",
    "size": 0.7840985521611384,
    "umami": 1
  }, {
    "group_id": 1,
    "name": "nectarine",
    "size": 0.08849870791886438,
    "umami": 0
  }, {
    "group_id": 2,
    "name": "pork_sausage",
    "size": 2.410704803709866,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "tomato",
    "size": 17.538673935360542,
    "umami": 1
  }, {
    "group_id": 10,
    "name": "cod",
    "size": 0.3079755035576481,
    "umami": 1
  }, {
    "group_id": 6,
    "name": "tarragon",
    "size": 0.842507699387589,
    "umami": 0
  }, {
    "group_id": 3,
    "name": "potato",
    "size": 6.274558391447485,
    "umami": 1
  }, {
    "group_id": 7,
    "name": "feta_cheese",
    "size": 1.0991539523522955,
    "umami": 0
  }, {
    "group_id": 5,
    "name": "cabernet_sauvignon_wine",
    "size": 0.03008956069241389,
    "umami": 0
  }, {
    "group_id": 4,
    "name": "wheat_bread",
    "size": 0.14690785514531488,
    "umami": 0
  }, {
    "group_id": 1,
    "name": "muscat_grape",
    "size": 0.0017699741583772875,
    "umami": 0
  }, {
    "group_id": 11,
    "name": "coconut_oil",
    "size": 0.03008956069241389,
    "umami": 0
  }, {
    "group_id": 13,
    "name": "egg",
    "size": 37.08272859216255,
    "umami": 1
  }, {
    "group_id": 5,
    "name": "wine",
    "size": 1.5522673368968813,
    "umami": 0
  }, {
    "group_id": 10,
    "name": "katsuobushi",
    "size": 0.08672873376049997,
    "umami": 1
  }, {
    "group_id": 10,
    "name": "sardine",
    "size": 0.0,
    "umami": 1
  }]
};
/* harmony default export */ __webpack_exports__["default"] = (umamiData);

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
/* harmony import */ var _data_flavor_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data/flavor_data */ "./src/data/flavor_data.js");
/* harmony import */ var _data_umami_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data/umami_data */ "./src/data/umami_data.js");
/* harmony import */ var _Network__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Network */ "./src/Network.js");
/* harmony import */ var _Mouse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Mouse */ "./src/Mouse.js");
/* harmony import */ var _Connection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Connection */ "./src/Connection.js");







(function () {
  // initial svg setting
  d3__WEBPACK_IMPORTED_MODULE_0__["selectAll"]('.graph').attr("width", 0).attr("height", 0); // mobile check

  var isSp = navigator.userAgent.indexOf('iPhone') > 0 || navigator.userAgent.indexOf('iPad') > 0 || navigator.userAgent.indexOf('iPod') > 0 || navigator.userAgent.indexOf('Android') > 0;
  console.log(isSp); // name: node name
  // network: network object is being manipulated
  // network: mouseAction which is event trigger

  var nodeInfo = {
    'name': '',
    'network': '',
    'mouseAction': ''
  };
  var networkMain, networkSub; // Base graph

  networkMain = new _Network__WEBPACK_IMPORTED_MODULE_3__["default"](_data_flavor_data__WEBPACK_IMPORTED_MODULE_1__["default"], _data_umami_data__WEBPACK_IMPORTED_MODULE_2__["default"], isSp, '#graphMain', 'Flavor', 'Single', 'Main', nodeInfo);
  networkMain.setLegend();
  networkMain.render();
  networkMain.setMouseAction();

  function watchMouseAction(obj, propName, func) {
    var value = obj[propName];
    Object.defineProperty(obj, propName, {
      get: function get() {
        return value;
      },
      set: function set(newValue) {
        var oldValue = value;
        value = newValue;
        func(oldValue, obj);
      },
      configurable: true
    });
  }

  watchMouseAction(nodeInfo, 'mouseAction', onChange);

  function onChange(oldVal, obj) {
    if (networkMain.vizMode === 'Single') return;
    var N;

    if (obj.network === 'Main') {
      N = networkSub;
    } else {
      N = networkMain;
    }

    if (obj.mouseAction === 'mouseenter') {
      _Mouse__WEBPACK_IMPORTED_MODULE_4__["default"].reset(N.linkData, N.link, N.node, N.label);
      _Mouse__WEBPACK_IMPORTED_MODULE_4__["default"].cursor(N.vizMode === 'Single' ? 'grab' : 'pointer', N.body, N.node);
      return;
    }

    var index = N.detectNodeIndex(obj.name);

    if (obj.mouseAction === 'mouseover') {
      _Mouse__WEBPACK_IMPORTED_MODULE_4__["default"].mouseover(index, N.linkData, N.link, N.node, N.label);
      var F = _Connection__WEBPACK_IMPORTED_MODULE_5__["default"].makeNodeList(networkMain.detectNodeIndex(obj.name), networkMain.linkData);
      var U = _Connection__WEBPACK_IMPORTED_MODULE_5__["default"].makeNodeList(networkSub.detectNodeIndex(obj.name), networkSub.linkData);
      console.log(F);
      console.log(U);
      _Connection__WEBPACK_IMPORTED_MODULE_5__["default"].displayDetail(obj.name, F.sameNodes, F.diffNodes, 'detailFlavor');
      _Connection__WEBPACK_IMPORTED_MODULE_5__["default"].displayDetail(obj.name, U.sameNodes, U.diffNodes, 'detailUmami');
    } else if (obj.mouseAction === 'mouseout') {
      _Mouse__WEBPACK_IMPORTED_MODULE_4__["default"].mouseout(N.linkData, N.link, N.node, N.label);
    }
  }

  document.addEventListener("dblclick", function () {
    networkMain.svg.transition().duration(1000).ease(d3__WEBPACK_IMPORTED_MODULE_0__["easeLinear"]).attr("width", 500).attr("height", 325);
    networkMain.setVizMode('Multi');
    networkSub = new _Network__WEBPACK_IMPORTED_MODULE_3__["default"](_data_flavor_data__WEBPACK_IMPORTED_MODULE_1__["default"], _data_umami_data__WEBPACK_IMPORTED_MODULE_2__["default"], isSp, '#graphSub2', 'Umami', 'Multi', 'Sub', nodeInfo);
    networkSub.setLegend();
    networkSub.render();
    networkSub.setMouseAction();
    networkSub.svg.transition().duration(1000).ease(d3__WEBPACK_IMPORTED_MODULE_0__["easeLinear"]).attr("width", 500).attr("height", 325);
    document.getElementById("detailFlavor").style.display = 'block';
    document.getElementById("detailUmami").style.display = 'block';
  }, false);
  var dataTypeSelector = document.getElementById('dataType');

  dataTypeSelector.onchange = function () {
    var selectedType = this.options[this.selectedIndex].value;
    networkMain.update(selectedType);
    networkMain.setMouseAction();
    document.getElementById('h1').textContent = selectedType + ' Network';
  };
})();

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2FzY2VuZGluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2Jpc2VjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2Jpc2VjdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9jcm9zcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2Rlc2NlbmRpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9kZXZpYXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9leHRlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9oaXN0b2dyYW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9pZGVudGl0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvbWF4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvbWVhbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL21lZGlhbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL21lcmdlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvbWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvbnVtYmVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvcGFpcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9wZXJtdXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvcXVhbnRpbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9yYW5nZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3NjYW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9zaHVmZmxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvc3VtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvdGhyZXNob2xkL2ZyZWVkbWFuRGlhY29uaXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy90aHJlc2hvbGQvc2NvdHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy90aHJlc2hvbGQvc3R1cmdlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3RpY2tzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvdHJhbnNwb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvdmFyaWFuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy96aXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWF4aXMvc3JjL2FycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1heGlzL3NyYy9heGlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1heGlzL3NyYy9pZGVudGl0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXhpcy9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWJydXNoL3NyYy9icnVzaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYnJ1c2gvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1icnVzaC9zcmMvZXZlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWJydXNoL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYnJ1c2gvc3JjL25vZXZlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNob3JkL3NyYy9hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY2hvcmQvc3JjL2Nob3JkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jaG9yZC9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNob3JkL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY2hvcmQvc3JjL21hdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNob3JkL3NyYy9yaWJib24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbGxlY3Rpb24vc3JjL2VudHJpZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbGxlY3Rpb24vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb2xsZWN0aW9uL3NyYy9rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb2xsZWN0aW9uL3NyYy9tYXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbGxlY3Rpb24vc3JjL25lc3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbGxlY3Rpb24vc3JjL3NldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29sbGVjdGlvbi9zcmMvdmFsdWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb2xvci9zcmMvY29sb3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbG9yL3NyYy9jdWJlaGVsaXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbG9yL3NyYy9kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbG9yL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29sb3Ivc3JjL2xhYi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29sb3Ivc3JjL21hdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2FyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2FycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb250b3VyL3NyYy9hc2NlbmRpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2JsdXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb250b3VyL3NyYy9jb250YWlucy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29udG91ci9zcmMvY29udG91cnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2RlbnNpdHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb250b3VyL3NyYy9ub29wLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kaXNwYXRjaC9zcmMvZGlzcGF0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWRpc3BhdGNoL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZHJhZy9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWRyYWcvc3JjL2RyYWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWRyYWcvc3JjL2V2ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kcmFnL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZHJhZy9zcmMvbm9kcmFnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kcmFnL3NyYy9ub2V2ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kc3Yvc3JjL2F1dG9UeXBlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kc3Yvc3JjL2Nzdi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZHN2L3NyYy9kc3YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWRzdi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWRzdi9zcmMvdHN2LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9iYWNrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9ib3VuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2NpcmNsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvY3ViaWMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2VsYXN0aWMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2V4cC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2xpbmVhci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvcG9seS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvcXVhZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvc2luLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mZXRjaC9zcmMvYmxvYi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL2J1ZmZlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL2Rzdi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL2ltYWdlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mZXRjaC9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZldGNoL3NyYy9qc29uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mZXRjaC9zcmMvdGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL3htbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9yY2Uvc3JjL2NlbnRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9yY2Uvc3JjL2NvbGxpZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcmNlL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9yY2Uvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvamlnZ2xlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvbGluay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9yY2Uvc3JjL21hbnlCb2R5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvcmFkaWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvc2ltdWxhdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9yY2Uvc3JjL3guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcmNlL3NyYy95LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL2RlZmF1bHRMb2NhbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZXhwb25lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0RGVjaW1hbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9mb3JtYXRHcm91cC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9mb3JtYXROdW1lcmFscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9mb3JtYXRQcmVmaXhBdXRvLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL2Zvcm1hdFJvdW5kZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0U3BlY2lmaWVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL2Zvcm1hdFRyaW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0VHlwZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvaWRlbnRpdHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvbG9jYWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL3ByZWNpc2lvbkZpeGVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL3ByZWNpc2lvblByZWZpeC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9wcmVjaXNpb25Sb3VuZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9hZGRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9hcmVhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2JvdW5kcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9jYXJ0ZXNpYW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2VudHJvaWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2lyY2xlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvYW50aW1lcmlkaWFuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvYnVmZmVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvY2lyY2xlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvZXh0ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2xpcC9saW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvcmVjdGFuZ2xlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvcmVqb2luLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NvbXBvc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY29udGFpbnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvZGlzdGFuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvZ3JhdGljdWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2lkZW50aXR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2ludGVycG9sYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2xlbmd0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9tYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL25vb3AuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcGF0aC9hcmVhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvYm91bmRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvY2VudHJvaWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcGF0aC9jb250ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcGF0aC9tZWFzdXJlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvc3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BvaW50RXF1YWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcG9seWdvbkNvbnRhaW5zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vYWxiZXJzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vYWxiZXJzVXNhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vYXppbXV0aGFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vYXppbXV0aGFsRXF1YWxBcmVhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vYXppbXV0aGFsRXF1aWRpc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9jb25pYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2NvbmljQ29uZm9ybWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vY29uaWNFcXVhbEFyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9jb25pY0VxdWlkaXN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vY3lsaW5kcmljYWxFcXVhbEFyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9lcXVhbEVhcnRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vZXF1aXJlY3Rhbmd1bGFyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vZml0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vZ25vbW9uaWMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9pZGVudGl0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vbWVyY2F0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9uYXR1cmFsRWFydGgxLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vb3J0aG9ncmFwaGljLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vcmVzYW1wbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9zdGVyZW9ncmFwaGljLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vdHJhbnN2ZXJzZU1lcmNhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3JvdGF0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3N0cmVhbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy90cmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvYWNjZXNzb3JzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2FycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2NsdXN0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2FuY2VzdG9ycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvY291bnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2Rlc2NlbmRhbnRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9lYWNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9lYWNoQWZ0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2VhY2hCZWZvcmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9sZWF2ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2xpbmtzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9wYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9zb3J0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9zdW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvcGFjay9lbmNsb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3BhY2svaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvcGFjay9zaWJsaW5ncy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9wYXJ0aXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvc3RyYXRpZnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvdHJlZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL2JpbmFyeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL2RpY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvdHJlZW1hcC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL3Jlc3F1YXJpZnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvdHJlZW1hcC9yb3VuZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL3NsaWNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvc2xpY2VEaWNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvc3F1YXJpZnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2Jhc2lzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvYmFzaXNDbG9zZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9jb2xvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvY3ViZWhlbGl4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvZGF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2Rpc2NyZXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvaGNsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvaHNsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvaHVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9sYWIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9udW1iZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9waWVjZXdpc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9xdWFudGl6ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3JnYi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3JvdW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvc3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvdHJhbnNmb3JtL2RlY29tcG9zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3RyYW5zZm9ybS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3RyYW5zZm9ybS9wYXJzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3ZhbHVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvem9vbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcGF0aC9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXBhdGgvc3JjL3BhdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXBvbHlnb24vc3JjL2FyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXBvbHlnb24vc3JjL2NlbnRyb2lkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1wb2x5Z29uL3NyYy9jb250YWlucy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcG9seWdvbi9zcmMvY3Jvc3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXBvbHlnb24vc3JjL2h1bGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXBvbHlnb24vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1wb2x5Z29uL3NyYy9sZW5ndGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9hZGQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9jb3Zlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL2RhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9leHRlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9maW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9xdWFkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvcXVhZHRyZWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9yZW1vdmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9yb290LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvc2l6ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL3Zpc2l0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvdmlzaXRBZnRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL3guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy95LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL2JhdGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL2RlZmF1bHRTb3VyY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvZXhwb25lbnRpYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvaXJ3aW5IYWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL2xvZ05vcm1hbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcmFuZG9tL3NyYy9ub3JtYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvdW5pZm9ybS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9jYXRlZ29yaWNhbC9BY2NlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvRGFyazIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvUGFpcmVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2NhdGVnb3JpY2FsL1Bhc3RlbDEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvUGFzdGVsMi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9jYXRlZ29yaWNhbC9TZXQxLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2NhdGVnb3JpY2FsL1NldDIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvU2V0My5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9jYXRlZ29yaWNhbC9jYXRlZ29yeTEwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2NvbG9ycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvQnJCRy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUFJHbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUGlZRy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUHVPci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUmRCdS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUmRHeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUmRZbEJ1LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2RpdmVyZ2luZy9SZFlsR24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvZGl2ZXJnaW5nL1NwZWN0cmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3JhbXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9CdUduLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvQnVQdS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL0duQnUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9PclJkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvUHVCdS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1B1QnVHbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1B1UmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9SZFB1LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvWWxHbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1lsR25CdS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1lsT3JCci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1lsT3JSZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL2N1YmVoZWxpeC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL3JhaW5ib3cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9zaW5lYm93LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvdmlyaWRpcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLXNpbmdsZS9CbHVlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLXNpbmdsZS9HcmVlbnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1zaW5nbGUvR3JleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1zaW5nbGUvT3Jhbmdlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLXNpbmdsZS9QdXJwbGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtc2luZ2xlL1JlZHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2JhbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2NvbnRpbnVvdXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9kaXZlcmdpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9pZGVudGl0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvaW5pdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2xpbmVhci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2xvZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL25pY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9udW1iZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9vcmRpbmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvcG93LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvcXVhbnRpbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9xdWFudGl6ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL3NlcXVlbnRpYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9zZXF1ZW50aWFsUXVhbnRpbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9zeW1sb2cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy90aHJlc2hvbGQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy90aWNrRm9ybWF0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvdGltZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL3V0Y1RpbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL2NyZWF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvbG9jYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvbWF0Y2hlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9tb3VzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9uYW1lc3BhY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvbmFtZXNwYWNlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9wb2ludC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0QWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9hcHBlbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2F0dHIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2NhbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2NsYXNzZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2Nsb25lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9kYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9kYXR1bS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZGlzcGF0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2VhY2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2VtcHR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9lbnRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZXhpdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZmlsdGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9odG1sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vaW5zZXJ0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9qb2luLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9sb3dlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vbWVyZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL25vZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL25vZGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9vbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vb3JkZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3Byb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9yYWlzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vcmVtb3ZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zZWxlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3NlbGVjdEFsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc2l6ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc29ydC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc3BhcnNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zdHlsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vdGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3RvckFsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zb3VyY2VFdmVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy90b3VjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy90b3VjaGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3dpbmRvdy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2FyYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2FyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9hcmVhUmFkaWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2Jhc2lzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvYmFzaXNDbG9zZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9iYXNpc09wZW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9idW5kbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9jYXJkaW5hbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2NhcmRpbmFsQ2xvc2VkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvY2FyZGluYWxPcGVuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvY2F0bXVsbFJvbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2NhdG11bGxSb21DbG9zZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9jYXRtdWxsUm9tT3Blbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2xpbmVhci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2xpbmVhckNsb3NlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL21vbm90b25lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvbmF0dXJhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL3JhZGlhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL3N0ZXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9kZXNjZW5kaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvaWRlbnRpdHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2xpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9saW5lUmFkaWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvbGluay9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL21hdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9ub29wLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb2Zmc2V0L2RpdmVyZ2luZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29mZnNldC9leHBhbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vZmZzZXQvbm9uZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29mZnNldC9zaWxob3VldHRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb2Zmc2V0L3dpZ2dsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29yZGVyL2FwcGVhcmFuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vcmRlci9hc2NlbmRpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vcmRlci9kZXNjZW5kaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb3JkZXIvaW5zaWRlT3V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb3JkZXIvbm9uZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29yZGVyL3JldmVyc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9waWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9wb2ludC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3BvaW50UmFkaWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3RhY2suanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wvY2lyY2xlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3ltYm9sL2Nyb3NzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3ltYm9sL2RpYW1vbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wvc3F1YXJlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3ltYm9sL3N0YXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wvdHJpYW5nbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wvd3llLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lLWZvcm1hdC9zcmMvZGVmYXVsdExvY2FsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS1mb3JtYXQvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lLWZvcm1hdC9zcmMvaXNvRm9ybWF0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lLWZvcm1hdC9zcmMvaXNvUGFyc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUtZm9ybWF0L3NyYy9sb2NhbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL2RheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvZHVyYXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL2hvdXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy9pbnRlcnZhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvbWlsbGlzZWNvbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL21pbnV0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvbW9udGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL3NlY29uZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvdXRjRGF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNIb3VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNNaW51dGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL3V0Y01vbnRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNXZWVrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNZZWFyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy93ZWVrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy95ZWFyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lci9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWVyL3NyYy9pbnRlcnZhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZXIvc3JjL3RpbWVvdXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWVyL3NyYy90aW1lci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvYWN0aXZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvaW50ZXJydXB0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9zZWxlY3Rpb24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3NlbGVjdGlvbi9pbnRlcnJ1cHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3NlbGVjdGlvbi90cmFuc2l0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2F0dHIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vYXR0clR3ZWVuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2RlbGF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2R1cmF0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2Vhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vZW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2ZpbHRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9pbnRlcnBvbGF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9tZXJnZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9vbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9yZW1vdmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc2NoZWR1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc2VsZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3NlbGVjdEFsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zZWxlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc3R5bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc3R5bGVUd2Vlbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi90ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3RyYW5zaXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vdHdlZW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXZvcm9ub2kvc3JjL0JlYWNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy12b3Jvbm9pL3NyYy9DZWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy12b3Jvbm9pL3NyYy9DaXJjbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXZvcm9ub2kvc3JjL0RpYWdyYW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXZvcm9ub2kvc3JjL0VkZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXZvcm9ub2kvc3JjL1JlZEJsYWNrVHJlZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdm9yb25vaS9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXZvcm9ub2kvc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy12b3Jvbm9pL3NyYy9wb2ludC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdm9yb25vaS9zcmMvdm9yb25vaS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtem9vbS9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXpvb20vc3JjL2V2ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy16b29tL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtem9vbS9zcmMvbm9ldmVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtem9vbS9zcmMvdHJhbnNmb3JtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy16b29tL3NyYy96b29tLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy9kaXN0L3BhY2thZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9Db25uZWN0aW9uLmpzIiwid2VicGFjazovLy8uL3NyYy9Nb3VzZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvTmV0d29yay5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvVXBkYXRlLmpzIiwid2VicGFjazovLy8uL3NyYy9kYXRhL2ZsYXZvcl9kYXRhLmpzIiwid2VicGFjazovLy8uL3NyYy9kYXRhL3VtYW1pX2RhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbImFycmF5IiwiQXJyYXkiLCJwcm90b3R5cGUiLCJzbGljZSIsIm1hcCIsImEiLCJiIiwiTmFOIiwiYXNjZW5kaW5nQmlzZWN0IiwiYmlzZWN0b3IiLCJhc2NlbmRpbmciLCJiaXNlY3RSaWdodCIsInJpZ2h0IiwiYmlzZWN0TGVmdCIsImxlZnQiLCJjb21wYXJlIiwibGVuZ3RoIiwiYXNjZW5kaW5nQ29tcGFyYXRvciIsIngiLCJsbyIsImhpIiwibWlkIiwiZiIsImQiLCJ2YWx1ZXMwIiwidmFsdWVzMSIsInJlZHVjZSIsIm4wIiwibjEiLCJ2YWx1ZXMiLCJpMCIsImkxIiwiaSIsInZhbHVlMCIsInBhaXIiLCJ2IiwidmFyaWFuY2UiLCJNYXRoIiwic3FydCIsInZhbHVlb2YiLCJuIiwidmFsdWUiLCJtaW4iLCJtYXgiLCJpZGVudGl0eSIsImRvbWFpbiIsImV4dGVudCIsInRocmVzaG9sZCIsInN0dXJnZXMiLCJoaXN0b2dyYW0iLCJkYXRhIiwieHoiLCJ4MCIsIngxIiwidHoiLCJpc0FycmF5IiwidGlja1N0ZXAiLCJyYW5nZSIsImNlaWwiLCJtIiwic2hpZnQiLCJwb3AiLCJiaW5zIiwiYmluIiwiYmlzZWN0IiwicHVzaCIsIl8iLCJhcmd1bWVudHMiLCJjb25zdGFudCIsInRocmVzaG9sZHMiLCJjYWxsIiwic3VtIiwiaXNOYU4iLCJudW1iZXIiLCJudW1iZXJzIiwicXVhbnRpbGUiLCJzb3J0IiwiYXJyYXlzIiwiaiIsIm1lcmdlZCIsInAiLCJwYWlycyIsImluZGV4ZXMiLCJwZXJtdXRlcyIsImZsb29yIiwidmFsdWUxIiwic3RhcnQiLCJzdG9wIiwic3RlcCIsInhpIiwieGoiLCJ0IiwicmFuZG9tIiwicG93IiwiZGV2aWF0aW9uIiwibG9nIiwiTE4yIiwiZTEwIiwiZTUiLCJlMiIsImNvdW50IiwicmV2ZXJzZSIsInRpY2tzIiwidGlja0luY3JlbWVudCIsImlzRmluaXRlIiwicG93ZXIiLCJMTjEwIiwiZXJyb3IiLCJzdGVwMCIsImFicyIsInN0ZXAxIiwibWF0cml4IiwidHJhbnNwb3NlIiwicm93IiwibWVhbiIsImRlbHRhIiwidG9wIiwiYm90dG9tIiwiZXBzaWxvbiIsInRyYW5zbGF0ZVgiLCJ0cmFuc2xhdGVZIiwieSIsInNjYWxlIiwiY2VudGVyIiwib2Zmc2V0IiwiYmFuZHdpZHRoIiwicm91bmQiLCJlbnRlcmluZyIsIl9fYXhpcyIsImF4aXMiLCJvcmllbnQiLCJ0aWNrQXJndW1lbnRzIiwidGlja1ZhbHVlcyIsInRpY2tGb3JtYXQiLCJ0aWNrU2l6ZUlubmVyIiwidGlja1NpemVPdXRlciIsInRpY2tQYWRkaW5nIiwiayIsInRyYW5zZm9ybSIsImNvbnRleHQiLCJhcHBseSIsImZvcm1hdCIsInNwYWNpbmciLCJyYW5nZTAiLCJyYW5nZTEiLCJwb3NpdGlvbiIsImNvcHkiLCJzZWxlY3Rpb24iLCJwYXRoIiwic2VsZWN0QWxsIiwidGljayIsIm9yZGVyIiwidGlja0V4aXQiLCJleGl0IiwidGlja0VudGVyIiwiZW50ZXIiLCJhcHBlbmQiLCJhdHRyIiwibGluZSIsInNlbGVjdCIsInRleHQiLCJtZXJnZSIsImluc2VydCIsInRyYW5zaXRpb24iLCJnZXRBdHRyaWJ1dGUiLCJwYXJlbnROb2RlIiwicmVtb3ZlIiwiZmlsdGVyIiwiZWFjaCIsInRpY2tTaXplIiwiYXhpc1RvcCIsImF4aXNSaWdodCIsImF4aXNCb3R0b20iLCJheGlzTGVmdCIsIk1PREVfRFJBRyIsIm5hbWUiLCJNT0RFX1NQQUNFIiwiTU9ERV9IQU5ETEUiLCJNT0RFX0NFTlRFUiIsIlgiLCJoYW5kbGVzIiwidHlwZSIsImlucHV0IiwiZSIsIm91dHB1dCIsInh5IiwiWSIsIlhZIiwiY3Vyc29ycyIsIm92ZXJsYXkiLCJzIiwidyIsIm53IiwibmUiLCJzZSIsInN3IiwiZmxpcFgiLCJmbGlwWSIsInNpZ25zWCIsInNpZ25zWSIsImRlZmF1bHRGaWx0ZXIiLCJldmVudCIsImJ1dHRvbiIsImRlZmF1bHRFeHRlbnQiLCJzdmciLCJvd25lclNWR0VsZW1lbnQiLCJ3aWR0aCIsImJhc2VWYWwiLCJoZWlnaHQiLCJsb2NhbCIsIm5vZGUiLCJfX2JydXNoIiwiZW1wdHkiLCJicnVzaFNlbGVjdGlvbiIsInN0YXRlIiwiZGltIiwiYnJ1c2hYIiwiYnJ1c2giLCJicnVzaFkiLCJsaXN0ZW5lcnMiLCJkaXNwYXRjaCIsImhhbmRsZVNpemUiLCJ0b3VjaGVuZGluZyIsImdyb3VwIiwicHJvcGVydHkiLCJpbml0aWFsaXplIiwiaGFuZGxlIiwicmVkcmF3Iiwic3R5bGUiLCJvbiIsInN0YXJ0ZWQiLCJtb3ZlIiwiZW1pdHRlciIsImJlZm9yZXN0YXJ0IiwiZW5kIiwidHdlZW4iLCJ0aGF0IiwiZW1pdCIsInNlbGVjdGlvbjAiLCJzZWxlY3Rpb24xIiwiaW50ZXJwb2xhdGUiLCJhcmdzIiwiaW50ZXJydXB0IiwiRW1pdHRlciIsImFjdGl2ZSIsInN0YXJ0aW5nIiwiY3VzdG9tRXZlbnQiLCJCcnVzaEV2ZW50IiwidG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwibm9ldmVudCIsInRhcmdldCIsIl9fZGF0YV9fIiwibW9kZSIsIm1ldGFLZXkiLCJhbHRLZXkiLCJzaWduWCIsInNpZ25ZIiwiVyIsIncwIiwidzEiLCJOIiwiRSIsImUwIiwiZTEiLCJTIiwiczAiLCJzMSIsImR4IiwiZHkiLCJtb3ZpbmciLCJzaGlmdGluZyIsInNoaWZ0S2V5IiwibG9ja1giLCJsb2NrWSIsInBvaW50MCIsIm1vdXNlIiwicG9pbnQiLCJtb3ZlZCIsImVuZGVkIiwidmlldyIsImtleWRvd25lZCIsImtleXVwcGVkIiwiZHJhZ0Rpc2FibGUiLCJub3Byb3BhZ2F0aW9uIiwicG9pbnQxIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImRyYWdFbmFibGUiLCJrZXlDb2RlIiwic3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIiwicHJldmVudERlZmF1bHQiLCJjb21wYXJlVmFsdWUiLCJzb3VyY2UiLCJwYWRBbmdsZSIsInNvcnRHcm91cHMiLCJzb3J0U3ViZ3JvdXBzIiwic29ydENob3JkcyIsImNob3JkIiwiZ3JvdXBTdW1zIiwiZ3JvdXBJbmRleCIsInN1Ymdyb3VwSW5kZXgiLCJjaG9yZHMiLCJncm91cHMiLCJzdWJncm91cHMiLCJmb3JFYWNoIiwidGF1IiwiZGkiLCJkaiIsImEwIiwiYTEiLCJpbmRleCIsInN1YmluZGV4Iiwic3RhcnRBbmdsZSIsImVuZEFuZ2xlIiwiY29zIiwic2luIiwicGkiLCJQSSIsImhhbGZQaSIsImRlZmF1bHRTb3VyY2UiLCJkZWZhdWx0VGFyZ2V0IiwiZGVmYXVsdFJhZGl1cyIsInJhZGl1cyIsImRlZmF1bHRTdGFydEFuZ2xlIiwiZGVmYXVsdEVuZEFuZ2xlIiwicmliYm9uIiwiYnVmZmVyIiwiYXJndiIsInNyIiwic2EwIiwic2ExIiwic3gwIiwic3kwIiwidHIiLCJ0YTAiLCJ0YTEiLCJtb3ZlVG8iLCJhcmMiLCJxdWFkcmF0aWNDdXJ2ZVRvIiwiY2xvc2VQYXRoIiwiZW50cmllcyIsImtleSIsImtleXMiLCJwcmVmaXgiLCJNYXAiLCJjb25zdHJ1Y3RvciIsImhhcyIsImdldCIsInNldCIsImNsZWFyIiwic2l6ZSIsIm9iamVjdCIsIm8iLCJzb3J0S2V5cyIsInNvcnRWYWx1ZXMiLCJyb2xsdXAiLCJuZXN0IiwiZGVwdGgiLCJjcmVhdGVSZXN1bHQiLCJzZXRSZXN1bHQiLCJrZXlWYWx1ZSIsInZhbHVlc0J5S2V5IiwicmVzdWx0Iiwic29ydEtleSIsImNyZWF0ZU9iamVjdCIsInNldE9iamVjdCIsImNyZWF0ZU1hcCIsInNldE1hcCIsIlNldCIsInByb3RvIiwiYWRkIiwiQ29sb3IiLCJkYXJrZXIiLCJicmlnaHRlciIsInJlSSIsInJlTiIsInJlUCIsInJlSGV4MyIsInJlSGV4NiIsInJlUmdiSW50ZWdlciIsIlJlZ0V4cCIsInJlUmdiUGVyY2VudCIsInJlUmdiYUludGVnZXIiLCJyZVJnYmFQZXJjZW50IiwicmVIc2xQZXJjZW50IiwicmVIc2xhUGVyY2VudCIsIm5hbWVkIiwiYWxpY2VibHVlIiwiYW50aXF1ZXdoaXRlIiwiYXF1YSIsImFxdWFtYXJpbmUiLCJhenVyZSIsImJlaWdlIiwiYmlzcXVlIiwiYmxhY2siLCJibGFuY2hlZGFsbW9uZCIsImJsdWUiLCJibHVldmlvbGV0IiwiYnJvd24iLCJidXJseXdvb2QiLCJjYWRldGJsdWUiLCJjaGFydHJldXNlIiwiY2hvY29sYXRlIiwiY29yYWwiLCJjb3JuZmxvd2VyYmx1ZSIsImNvcm5zaWxrIiwiY3JpbXNvbiIsImN5YW4iLCJkYXJrYmx1ZSIsImRhcmtjeWFuIiwiZGFya2dvbGRlbnJvZCIsImRhcmtncmF5IiwiZGFya2dyZWVuIiwiZGFya2dyZXkiLCJkYXJra2hha2kiLCJkYXJrbWFnZW50YSIsImRhcmtvbGl2ZWdyZWVuIiwiZGFya29yYW5nZSIsImRhcmtvcmNoaWQiLCJkYXJrcmVkIiwiZGFya3NhbG1vbiIsImRhcmtzZWFncmVlbiIsImRhcmtzbGF0ZWJsdWUiLCJkYXJrc2xhdGVncmF5IiwiZGFya3NsYXRlZ3JleSIsImRhcmt0dXJxdW9pc2UiLCJkYXJrdmlvbGV0IiwiZGVlcHBpbmsiLCJkZWVwc2t5Ymx1ZSIsImRpbWdyYXkiLCJkaW1ncmV5IiwiZG9kZ2VyYmx1ZSIsImZpcmVicmljayIsImZsb3JhbHdoaXRlIiwiZm9yZXN0Z3JlZW4iLCJmdWNoc2lhIiwiZ2FpbnNib3JvIiwiZ2hvc3R3aGl0ZSIsImdvbGQiLCJnb2xkZW5yb2QiLCJncmF5IiwiZ3JlZW4iLCJncmVlbnllbGxvdyIsImdyZXkiLCJob25leWRldyIsImhvdHBpbmsiLCJpbmRpYW5yZWQiLCJpbmRpZ28iLCJpdm9yeSIsImtoYWtpIiwibGF2ZW5kZXIiLCJsYXZlbmRlcmJsdXNoIiwibGF3bmdyZWVuIiwibGVtb25jaGlmZm9uIiwibGlnaHRibHVlIiwibGlnaHRjb3JhbCIsImxpZ2h0Y3lhbiIsImxpZ2h0Z29sZGVucm9keWVsbG93IiwibGlnaHRncmF5IiwibGlnaHRncmVlbiIsImxpZ2h0Z3JleSIsImxpZ2h0cGluayIsImxpZ2h0c2FsbW9uIiwibGlnaHRzZWFncmVlbiIsImxpZ2h0c2t5Ymx1ZSIsImxpZ2h0c2xhdGVncmF5IiwibGlnaHRzbGF0ZWdyZXkiLCJsaWdodHN0ZWVsYmx1ZSIsImxpZ2h0eWVsbG93IiwibGltZSIsImxpbWVncmVlbiIsImxpbmVuIiwibWFnZW50YSIsIm1hcm9vbiIsIm1lZGl1bWFxdWFtYXJpbmUiLCJtZWRpdW1ibHVlIiwibWVkaXVtb3JjaGlkIiwibWVkaXVtcHVycGxlIiwibWVkaXVtc2VhZ3JlZW4iLCJtZWRpdW1zbGF0ZWJsdWUiLCJtZWRpdW1zcHJpbmdncmVlbiIsIm1lZGl1bXR1cnF1b2lzZSIsIm1lZGl1bXZpb2xldHJlZCIsIm1pZG5pZ2h0Ymx1ZSIsIm1pbnRjcmVhbSIsIm1pc3R5cm9zZSIsIm1vY2Nhc2luIiwibmF2YWpvd2hpdGUiLCJuYXZ5Iiwib2xkbGFjZSIsIm9saXZlIiwib2xpdmVkcmFiIiwib3JhbmdlIiwib3JhbmdlcmVkIiwib3JjaGlkIiwicGFsZWdvbGRlbnJvZCIsInBhbGVncmVlbiIsInBhbGV0dXJxdW9pc2UiLCJwYWxldmlvbGV0cmVkIiwicGFwYXlhd2hpcCIsInBlYWNocHVmZiIsInBlcnUiLCJwaW5rIiwicGx1bSIsInBvd2RlcmJsdWUiLCJwdXJwbGUiLCJyZWJlY2NhcHVycGxlIiwicmVkIiwicm9zeWJyb3duIiwicm95YWxibHVlIiwic2FkZGxlYnJvd24iLCJzYWxtb24iLCJzYW5keWJyb3duIiwic2VhZ3JlZW4iLCJzZWFzaGVsbCIsInNpZW5uYSIsInNpbHZlciIsInNreWJsdWUiLCJzbGF0ZWJsdWUiLCJzbGF0ZWdyYXkiLCJzbGF0ZWdyZXkiLCJzbm93Iiwic3ByaW5nZ3JlZW4iLCJzdGVlbGJsdWUiLCJ0YW4iLCJ0ZWFsIiwidGhpc3RsZSIsInRvbWF0byIsInR1cnF1b2lzZSIsInZpb2xldCIsIndoZWF0Iiwid2hpdGUiLCJ3aGl0ZXNtb2tlIiwieWVsbG93IiwieWVsbG93Z3JlZW4iLCJkZWZpbmUiLCJjb2xvciIsImRpc3BsYXlhYmxlIiwicmdiIiwiaGV4IiwidG9TdHJpbmciLCJ0cmltIiwidG9Mb3dlckNhc2UiLCJleGVjIiwicGFyc2VJbnQiLCJSZ2IiLCJyZ2JuIiwicmdiYSIsImhzbGEiLCJoYXNPd25Qcm9wZXJ0eSIsInIiLCJnIiwicmdiQ29udmVydCIsIm9wYWNpdHkiLCJleHRlbmQiLCJoIiwibCIsIkhzbCIsImhzbENvbnZlcnQiLCJoc2wiLCJtMiIsIm0xIiwiaHNsMnJnYiIsIkEiLCJCIiwiQyIsIkQiLCJFRCIsIkVCIiwiQkNfREEiLCJjdWJlaGVsaXhDb252ZXJ0IiwiQ3ViZWhlbGl4IiwiYmwiLCJhdGFuMiIsInJhZDJkZWciLCJjdWJlaGVsaXgiLCJkZWcycmFkIiwiY29zaCIsInNpbmgiLCJmYWN0b3J5IiwicGFyZW50IiwiZGVmaW5pdGlvbiIsIk9iamVjdCIsImNyZWF0ZSIsIksiLCJYbiIsIlluIiwiWm4iLCJ0MCIsInQxIiwidDIiLCJ0MyIsImxhYkNvbnZlcnQiLCJMYWIiLCJIY2wiLCJjIiwicmdiMmxyZ2IiLCJ4eXoybGFiIiwieiIsImxhYiIsImxhYjJ4eXoiLCJscmdiMnJnYiIsImhjbENvbnZlcnQiLCJsY2giLCJoY2wiLCJyaW5nIiwiYXJlYSIsImJsdXJYIiwiYmx1clkiLCJob2xlIiwicmluZ0NvbnRhaW5zIiwiY29udGFpbnMiLCJ5aSIsInBqIiwieWoiLCJzZWdtZW50Q29udGFpbnMiLCJjb2xsaW5lYXIiLCJ3aXRoaW4iLCJxIiwiY2FzZXMiLCJ0aHJlc2hvbGRTdHVyZ2VzIiwic21vb3RoIiwic21vb3RoTGluZWFyIiwiY29udG91cnMiLCJjb250b3VyIiwicG9seWdvbnMiLCJob2xlcyIsImlzb3JpbmdzIiwicG9seWdvbiIsImNvb3JkaW5hdGVzIiwiY2FsbGJhY2siLCJmcmFnbWVudEJ5U3RhcnQiLCJmcmFnbWVudEJ5RW5kIiwic3RpdGNoIiwic3RhcnRJbmRleCIsImVuZEluZGV4IiwiY29uY2F0IiwidW5zaGlmdCIsInh0IiwieXQiLCJ2MCIsInYxIiwiXzAiLCJfMSIsIkVycm9yIiwibm9vcCIsImRlZmF1bHRYIiwiZGVmYXVsdFkiLCJkZWZhdWx0V2VpZ2h0Iiwid2VpZ2h0IiwiZGVuc2l0eSIsIkZsb2F0MzJBcnJheSIsIndpIiwiZ2VvbWV0cnkiLCJ0cmFuc2Zvcm1Qb2x5Z29uIiwidHJhbnNmb3JtUmluZyIsInRyYW5zZm9ybVBvaW50IiwicmVzaXplIiwiY2VsbFNpemUiLCJEaXNwYXRjaCIsInBhcnNlVHlwZW5hbWVzIiwidHlwZW5hbWVzIiwidHlwZXMiLCJzcGxpdCIsImluZGV4T2YiLCJ0eXBlbmFtZSIsIlQiLCJkZWZhdWx0Q29udGFpbmVyIiwiZGVmYXVsdFN1YmplY3QiLCJkZWZhdWx0VG91Y2hhYmxlIiwiY29udGFpbmVyIiwic3ViamVjdCIsInRvdWNoYWJsZSIsImdlc3R1cmVzIiwibW91c2Vkb3dueCIsIm1vdXNlZG93bnkiLCJtb3VzZW1vdmluZyIsImNsaWNrRGlzdGFuY2UyIiwiZHJhZyIsIm1vdXNlZG93bmVkIiwidG91Y2hzdGFydGVkIiwidG91Y2htb3ZlZCIsInRvdWNoZW5kZWQiLCJnZXN0dXJlIiwibW91c2Vtb3ZlZCIsIm1vdXNldXBwZWQiLCJub2RyYWciLCJjbGllbnRYIiwiY2xpZW50WSIsInllc2RyYWciLCJpZGVudGlmaWVyIiwidG91Y2giLCJpZCIsInN1Ymxpc3RlbmVycyIsIkRyYWdFdmVudCIsInAwIiwiY2xpY2tEaXN0YW5jZSIsInJvb3QiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsIl9fbm9zZWxlY3QiLCJNb3pVc2VyU2VsZWN0Iiwibm9jbGljayIsImF1dG9UeXBlIiwidGVzdCIsIkRhdGUiLCJjc3YiLCJkc3YiLCJjc3ZQYXJzZSIsInBhcnNlIiwiY3N2UGFyc2VSb3dzIiwicGFyc2VSb3dzIiwiY3N2Rm9ybWF0IiwiY3N2Rm9ybWF0Qm9keSIsImZvcm1hdEJvZHkiLCJjc3ZGb3JtYXRSb3dzIiwiZm9ybWF0Um93cyIsIkVPTCIsIkVPRiIsIlFVT1RFIiwiTkVXTElORSIsIlJFVFVSTiIsIm9iamVjdENvbnZlcnRlciIsImNvbHVtbnMiLCJGdW5jdGlvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJqb2luIiwiY3VzdG9tQ29udmVydGVyIiwiaW5mZXJDb2x1bW5zIiwicm93cyIsImNvbHVtblNldCIsImNvbHVtbiIsInBhZCIsImZvcm1hdFllYXIiLCJ5ZWFyIiwiZm9ybWF0RGF0ZSIsImRhdGUiLCJob3VycyIsImdldFVUQ0hvdXJzIiwibWludXRlcyIsImdldFVUQ01pbnV0ZXMiLCJzZWNvbmRzIiwiZ2V0VVRDU2Vjb25kcyIsIm1pbGxpc2Vjb25kcyIsImdldFVUQ01pbGxpc2Vjb25kcyIsImdldFVUQ0Z1bGxZZWFyIiwiZ2V0VVRDTW9udGgiLCJnZXRVVENEYXRlIiwiZGVsaW1pdGVyIiwicmVGb3JtYXQiLCJERUxJTUlURVIiLCJjaGFyQ29kZUF0IiwiY29udmVydCIsIkkiLCJlb2YiLCJlb2wiLCJ0b2tlbiIsInJlcGxhY2UiLCJwcmVmb3JtYXRCb2R5IiwiZm9ybWF0VmFsdWUiLCJmb3JtYXRSb3ciLCJ0c3YiLCJ0c3ZQYXJzZSIsInRzdlBhcnNlUm93cyIsInRzdkZvcm1hdCIsInRzdkZvcm1hdEJvZHkiLCJ0c3ZGb3JtYXRSb3dzIiwib3ZlcnNob290IiwiYmFja0luIiwiY3VzdG9tIiwiYmFja091dCIsImJhY2tJbk91dCIsImIxIiwiYjIiLCJiMyIsImI0IiwiYjUiLCJiNiIsImI3IiwiYjgiLCJiOSIsImIwIiwiYm91bmNlSW4iLCJib3VuY2VPdXQiLCJib3VuY2VJbk91dCIsImNpcmNsZUluIiwiY2lyY2xlT3V0IiwiY2lyY2xlSW5PdXQiLCJjdWJpY0luIiwiY3ViaWNPdXQiLCJjdWJpY0luT3V0IiwiYW1wbGl0dWRlIiwicGVyaW9kIiwiZWxhc3RpY0luIiwiYXNpbiIsImVsYXN0aWNPdXQiLCJlbGFzdGljSW5PdXQiLCJleHBJbiIsImV4cE91dCIsImV4cEluT3V0IiwibGluZWFyIiwiZXhwb25lbnQiLCJwb2x5SW4iLCJwb2x5T3V0IiwicG9seUluT3V0IiwicXVhZEluIiwicXVhZE91dCIsInF1YWRJbk91dCIsInNpbkluIiwic2luT3V0Iiwic2luSW5PdXQiLCJyZXNwb25zZUJsb2IiLCJyZXNwb25zZSIsIm9rIiwic3RhdHVzIiwic3RhdHVzVGV4dCIsImJsb2IiLCJpbml0IiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2VBcnJheUJ1ZmZlciIsImFycmF5QnVmZmVyIiwiZHN2UGFyc2UiLCJ1bmRlZmluZWQiLCJkc3ZGb3JtYXQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImltYWdlIiwiSW1hZ2UiLCJvbmVycm9yIiwib25sb2FkIiwic3JjIiwicmVzcG9uc2VKc29uIiwianNvbiIsInJlc3BvbnNlVGV4dCIsInBhcnNlciIsIkRPTVBhcnNlciIsInBhcnNlRnJvbVN0cmluZyIsImh0bWwiLCJub2RlcyIsImZvcmNlIiwic3giLCJzeSIsInZ4IiwidnkiLCJyYWRpaSIsInN0cmVuZ3RoIiwiaXRlcmF0aW9ucyIsInRyZWUiLCJyaSIsInJpMiIsInF1YWR0cmVlIiwidmlzaXRBZnRlciIsInByZXBhcmUiLCJ2aXNpdCIsInF1YWQiLCJ5MCIsInkxIiwicmoiLCJqaWdnbGUiLCJmaW5kIiwibm9kZUJ5SWQiLCJub2RlSWQiLCJsaW5rcyIsImRlZmF1bHRTdHJlbmd0aCIsInN0cmVuZ3RocyIsImRpc3RhbmNlIiwiZGlzdGFuY2VzIiwiYmlhcyIsImxpbmsiLCJhbHBoYSIsImluaXRpYWxpemVTdHJlbmd0aCIsImluaXRpYWxpemVEaXN0YW5jZSIsImRpc3RhbmNlTWluMiIsImRpc3RhbmNlTWF4MiIsIkluZmluaXR5IiwidGhldGEyIiwiYWNjdW11bGF0ZSIsIm5leHQiLCJ4MiIsImRpc3RhbmNlTWluIiwiZGlzdGFuY2VNYXgiLCJ0aGV0YSIsInJhZGl1c2VzIiwiaW5pdGlhbFJhZGl1cyIsImluaXRpYWxBbmdsZSIsInNpbXVsYXRpb24iLCJhbHBoYU1pbiIsImFscGhhRGVjYXkiLCJhbHBoYVRhcmdldCIsInZlbG9jaXR5RGVjYXkiLCJmb3JjZXMiLCJzdGVwcGVyIiwidGltZXIiLCJmeCIsImZ5IiwiaW5pdGlhbGl6ZU5vZGVzIiwiYW5nbGUiLCJpbml0aWFsaXplRm9yY2UiLCJyZXN0YXJ0IiwiZDIiLCJjbG9zZXN0IiwieXoiLCJsb2NhbGUiLCJmb3JtYXRQcmVmaXgiLCJkZWZhdWx0TG9jYWxlIiwiZGVjaW1hbCIsInRob3VzYW5kcyIsImdyb3VwaW5nIiwiY3VycmVuY3kiLCJmb3JtYXRMb2NhbGUiLCJmb3JtYXREZWNpbWFsIiwidG9FeHBvbmVudGlhbCIsImNvZWZmaWNpZW50Iiwic3Vic3RyaW5nIiwibnVtZXJhbHMiLCJwcmVmaXhFeHBvbmVudCIsInJlIiwiZm9ybWF0U3BlY2lmaWVyIiwic3BlY2lmaWVyIiwiRm9ybWF0U3BlY2lmaWVyIiwibWF0Y2giLCJmaWxsIiwiYWxpZ24iLCJzaWduIiwic3ltYm9sIiwiemVybyIsImNvbW1hIiwicHJlY2lzaW9uIiwib3V0IiwidG9GaXhlZCIsInRvUHJlY2lzaW9uIiwiZm9ybWF0Um91bmRlZCIsImZvcm1hdFByZWZpeEF1dG8iLCJ0b1VwcGVyQ2FzZSIsInByZWZpeGVzIiwiZm9ybWF0R3JvdXAiLCJmb3JtYXROdW1lcmFscyIsInBlcmNlbnQiLCJuZXdGb3JtYXQiLCJmb3JtYXRUeXBlcyIsInN1ZmZpeCIsImZvcm1hdFR5cGUiLCJtYXliZVN1ZmZpeCIsInZhbHVlUHJlZml4IiwidmFsdWVTdWZmaXgiLCJ2YWx1ZU5lZ2F0aXZlIiwiZm9ybWF0VHJpbSIsInBhZGRpbmciLCJBZGRlciIsInJlc2V0IiwidGVtcCIsInZhbHVlT2YiLCJhZGRlciIsImJ2IiwiYXYiLCJhcmVhUmluZ1N1bSIsImFyZWFTdW0iLCJsYW1iZGEwMCIsInBoaTAwIiwibGFtYmRhMCIsImNvc1BoaTAiLCJzaW5QaGkwIiwiYXJlYVN0cmVhbSIsImxpbmVTdGFydCIsImxpbmVFbmQiLCJwb2x5Z29uU3RhcnQiLCJhcmVhUmluZ1N0YXJ0IiwiYXJlYVJpbmdFbmQiLCJwb2x5Z29uRW5kIiwiYXJlYVJpbmciLCJzcGhlcmUiLCJhcmVhUG9pbnRGaXJzdCIsImFyZWFQb2ludCIsImxhbWJkYSIsInBoaSIsInJhZGlhbnMiLCJxdWFydGVyUGkiLCJkTGFtYmRhIiwic2RMYW1iZGEiLCJhZExhbWJkYSIsImNvc1BoaSIsInNpblBoaSIsInUiLCJzdHJlYW0iLCJwaGkwIiwibGFtYmRhMSIsInBoaTEiLCJsYW1iZGEyIiwiZGVsdGFTdW0iLCJyYW5nZXMiLCJib3VuZHNTdHJlYW0iLCJib3VuZHNQb2ludCIsImJvdW5kc0xpbmVTdGFydCIsImJvdW5kc0xpbmVFbmQiLCJib3VuZHNSaW5nUG9pbnQiLCJib3VuZHNSaW5nU3RhcnQiLCJib3VuZHNSaW5nRW5kIiwibGluZVBvaW50IiwiY2FydGVzaWFuIiwibm9ybWFsIiwiY2FydGVzaWFuQ3Jvc3MiLCJlcXVhdG9yaWFsIiwiaW5mbGVjdGlvbiIsImNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UiLCJzcGhlcmljYWwiLCJsYW1iZGFpIiwiZGVncmVlcyIsInBoaWkiLCJhbnRpbWVyaWRpYW4iLCJyYW5nZUNvbXBhcmUiLCJyYW5nZUNvbnRhaW5zIiwiZmVhdHVyZSIsImRlbHRhTWF4IiwiY2FydGVzaWFuRG90IiwiY2FydGVzaWFuQWRkSW5QbGFjZSIsImNhcnRlc2lhblNjYWxlIiwidmVjdG9yIiwiVzAiLCJXMSIsIlgwIiwiWTAiLCJaMCIsIlgxIiwiWTEiLCJaMSIsIlgyIiwiWTIiLCJaMiIsInowIiwiY2VudHJvaWRTdHJlYW0iLCJjZW50cm9pZFBvaW50IiwiY2VudHJvaWRMaW5lU3RhcnQiLCJjZW50cm9pZExpbmVFbmQiLCJjZW50cm9pZFJpbmdTdGFydCIsImNlbnRyb2lkUmluZ0VuZCIsImNlbnRyb2lkUG9pbnRDYXJ0ZXNpYW4iLCJjZW50cm9pZExpbmVQb2ludEZpcnN0IiwiY2VudHJvaWRMaW5lUG9pbnQiLCJjZW50cm9pZFJpbmdQb2ludEZpcnN0IiwiY2VudHJvaWRSaW5nUG9pbnQiLCJjeCIsImN5IiwiY3oiLCJlcHNpbG9uMiIsImNpcmNsZVN0cmVhbSIsImRpcmVjdGlvbiIsImNvc1JhZGl1cyIsInNpblJhZGl1cyIsImNpcmNsZVJhZGl1cyIsImFjb3MiLCJyb3RhdGUiLCJjaXJjbGUiLCJyb3RhdGVSYWRpYW5zIiwiaW52ZXJ0IiwiY2xpcCIsImNsaXBBbnRpbWVyaWRpYW5MaW5lIiwiY2xpcEFudGltZXJpZGlhbkludGVycG9sYXRlIiwic2lnbjAiLCJjbGVhbiIsInNpZ24xIiwiY2xpcEFudGltZXJpZGlhbkludGVyc2VjdCIsImNvc1BoaTEiLCJzaW5MYW1iZGEwTGFtYmRhMSIsImF0YW4iLCJmcm9tIiwidG8iLCJsaW5lcyIsInJlam9pbiIsImNyIiwic21hbGxSYWRpdXMiLCJub3RIZW1pc3BoZXJlIiwidmlzaWJsZSIsImNsaXBMaW5lIiwiYzAiLCJ2MDAiLCJwb2ludDIiLCJjb2RlIiwiaW50ZXJzZWN0IiwicG9pbnRFcXVhbCIsInR3byIsInBhIiwicGIiLCJuMiIsIm4ybjIiLCJuMW4yIiwiZGV0ZXJtaW5hbnQiLCJjMSIsImMyIiwibjF4bjIiLCJ1dSIsInBvbGFyIiwibWVyaWRpYW4iLCJxMSIsImNhY2hlIiwiY2FjaGVTdHJlYW0iLCJjbGlwUmVjdGFuZ2xlIiwicG9pbnRWaXNpYmxlIiwic2luayIsInJpbmdCdWZmZXIiLCJjbGlwQnVmZmVyIiwicmluZ1NpbmsiLCJwb2x5Z29uU3RhcnRlZCIsInNlZ21lbnRzIiwicG9pbnRSaW5nIiwicmluZ1N0YXJ0IiwicmluZ0VuZCIsInN0YXJ0SW5zaWRlIiwicG9seWdvbkNvbnRhaW5zIiwiY2xpcFJlam9pbiIsImNvbXBhcmVJbnRlcnNlY3Rpb24iLCJwb2ludExpbmUiLCJyaW5nU2VnbWVudHMiLCJzZWdtZW50IiwidmFsaWRTZWdtZW50IiwiYXgiLCJheSIsImJ4IiwiYnkiLCJjbGlwTWF4IiwiY2xpcE1pbiIsImNvcm5lciIsImNvbXBhcmVQb2ludCIsImNhIiwiY2IiLCJhY3RpdmVTdHJlYW0iLCJidWZmZXJTdHJlYW0iLCJ4X18iLCJ5X18iLCJ2X18iLCJ4XyIsInlfIiwidl8iLCJmaXJzdCIsImNsaXBTdHJlYW0iLCJwb2x5Z29uSW5zaWRlIiwid2luZGluZyIsImNsZWFuSW5zaWRlIiwiSW50ZXJzZWN0aW9uIiwicG9pbnRzIiwib3RoZXIiLCJlbnRyeSIsInAxIiwiY3VycmVudCIsImlzU3ViamVjdCIsImNvbXBvc2UiLCJjb250YWluc09iamVjdFR5cGUiLCJGZWF0dXJlIiwiY29udGFpbnNHZW9tZXRyeSIsIkZlYXR1cmVDb2xsZWN0aW9uIiwiZmVhdHVyZXMiLCJjb250YWluc0dlb21ldHJ5VHlwZSIsIlNwaGVyZSIsIlBvaW50IiwiY29udGFpbnNQb2ludCIsIk11bHRpUG9pbnQiLCJMaW5lU3RyaW5nIiwiY29udGFpbnNMaW5lIiwiTXVsdGlMaW5lU3RyaW5nIiwiUG9seWdvbiIsImNvbnRhaW5zUG9seWdvbiIsIk11bHRpUG9seWdvbiIsIkdlb21ldHJ5Q29sbGVjdGlvbiIsImdlb21ldHJpZXMiLCJhYiIsImFvIiwib2IiLCJyaW5nUmFkaWFucyIsInBvaW50UmFkaWFucyIsImdyYXRpY3VsZVgiLCJncmF0aWN1bGVZIiwiZ3JhdGljdWxlIiwiRFgiLCJEWSIsIm91dGxpbmUiLCJleHRlbnRNaW5vciIsImV4dGVudE1ham9yIiwic3RlcE1pbm9yIiwic3RlcE1ham9yIiwiZ3JhdGljdWxlMTAiLCJjeTAiLCJjeTEiLCJzeTEiLCJreDAiLCJreTAiLCJreDEiLCJreTEiLCJoYXZlcnNpbiIsImxlbmd0aFN1bSIsImxlbmd0aFN0cmVhbSIsImxlbmd0aExpbmVTdGFydCIsImxlbmd0aFBvaW50Rmlyc3QiLCJsZW5ndGhMaW5lRW5kIiwibGVuZ3RoUG9pbnQiLCJjb3NEZWx0YSIsInNpbkRlbHRhIiwiZXhwIiwieDAwIiwieTAwIiwiYm91bmRzIiwiY2VudHJvaWQiLCJjZW50cm9pZFBvaW50Rmlyc3RMaW5lIiwiY2VudHJvaWRQb2ludExpbmUiLCJjZW50cm9pZFBvaW50Rmlyc3RSaW5nIiwiY2VudHJvaWRQb2ludFJpbmciLCJQYXRoQ29udGV4dCIsIl9jb250ZXh0IiwiX3JhZGl1cyIsInBvaW50UmFkaXVzIiwiX2xpbmUiLCJfcG9pbnQiLCJsaW5lVG8iLCJwcm9qZWN0aW9uIiwicHJvamVjdGlvblN0cmVhbSIsImNvbnRleHRTdHJlYW0iLCJwYXRoQXJlYSIsIm1lYXN1cmUiLCJwYXRoTWVhc3VyZSIsInBhdGhCb3VuZHMiLCJwYXRoQ2VudHJvaWQiLCJQYXRoU3RyaW5nIiwibGVuZ3RoUmluZyIsIl9zdHJpbmciLCJfY2lyY2xlIiwic2luUGhpMSIsImFic0RlbHRhIiwiaW50ZXJzZWN0aW9uIiwicGhpQXJjIiwiY29uaWNFcXVhbEFyZWEiLCJwYXJhbGxlbHMiLCJ0cmFuc2xhdGUiLCJtdWx0aXBsZXgiLCJzdHJlYW1zIiwibG93ZXI0OCIsImFsYmVycyIsImxvd2VyNDhQb2ludCIsImFsYXNrYSIsImFsYXNrYVBvaW50IiwiaGF3YWlpIiwiaGF3YWlpUG9pbnQiLCJwb2ludFN0cmVhbSIsImFsYmVyc1VzYSIsImNsaXBFeHRlbnQiLCJmaXRFeHRlbnQiLCJmaXRTaXplIiwiZml0V2lkdGgiLCJmaXRIZWlnaHQiLCJhemltdXRoYWxSYXciLCJhemltdXRoYWxJbnZlcnQiLCJzYyIsImNjIiwiYXppbXV0aGFsRXF1YWxBcmVhUmF3IiwiY3hjeSIsImNsaXBBbmdsZSIsImF6aW11dGhhbEVxdWlkaXN0YW50UmF3IiwiY29uaWNQcm9qZWN0aW9uIiwicHJvamVjdEF0IiwicHJvamVjdGlvbk11dGF0b3IiLCJ0YW55IiwiY29uaWNDb25mb3JtYWxSYXciLCJtZXJjYXRvclJhdyIsInByb2plY3QiLCJjb25pY0VxdWFsQXJlYVJhdyIsImN5bGluZHJpY2FsRXF1YWxBcmVhUmF3IiwicjAiLCJyMHkiLCJjb25pY0VxdWlkaXN0YW50UmF3IiwiZXF1aXJlY3Rhbmd1bGFyUmF3IiwiZ3kiLCJueCIsImZvcndhcmQiLCJBMSIsIkEyIiwiQTMiLCJBNCIsIk0iLCJlcXVhbEVhcnRoUmF3IiwibDIiLCJsNiIsImZweSIsImZpdCIsImZpdEJvdW5kcyIsImdlb1N0cmVhbSIsImdub21vbmljUmF3Iiwic2NhbGVUcmFuc2xhdGUiLCJreCIsImt5IiwidHgiLCJ0eSIsInRyYW5zZm9ybWVyIiwicG9zdGNsaXAiLCJyZWZsZWN0WCIsInJlZmxlY3RZIiwidHJhbnNmb3JtUmFkaWFucyIsInRyYW5zZm9ybVJvdGF0ZSIsInNjYWxlVHJhbnNsYXRlUm90YXRlIiwiY29zQWxwaGEiLCJzaW5BbHBoYSIsImFpIiwiYmkiLCJjaSIsImZpIiwiZGVsdGFMYW1iZGEiLCJkZWx0YVBoaSIsImRlbHRhR2FtbWEiLCJwcmVjbGlwIiwiY2xpcEFudGltZXJpZGlhbiIsImRlbHRhMiIsInByb2plY3RSZXNhbXBsZSIsInByb2plY3RUcmFuc2Zvcm0iLCJwcm9qZWN0Um90YXRlVHJhbnNmb3JtIiwiY2xpcENpcmNsZSIsInJlY2VudGVyIiwicmVzYW1wbGUiLCJtZXJjYXRvclByb2plY3Rpb24iLCJyZWNsaXAiLCJyb3RhdGlvbiIsIm5hdHVyYWxFYXJ0aDFSYXciLCJwaGkyIiwicGhpNCIsIm9ydGhvZ3JhcGhpY1JhdyIsIm1heERlcHRoIiwiY29zTWluRGlzdGFuY2UiLCJyZXNhbXBsZU5vbmUiLCJyZXNhbXBsZUxpbmVUbyIsInkyIiwiZHgyIiwiZHkyIiwiZHoiLCJhMDAiLCJiMDAiLCJjMDAiLCJyZXNhbXBsZVN0cmVhbSIsInJpbmdQb2ludCIsInN0ZXJlb2dyYXBoaWNSYXciLCJ0cmFuc3ZlcnNlTWVyY2F0b3JSYXciLCJyb3RhdGlvbklkZW50aXR5Iiwicm90YXRpb25MYW1iZGEiLCJyb3RhdGlvblBoaUdhbW1hIiwiZm9yd2FyZFJvdGF0aW9uTGFtYmRhIiwiY29zRGVsdGFQaGkiLCJzaW5EZWx0YVBoaSIsImNvc0RlbHRhR2FtbWEiLCJzaW5EZWx0YUdhbW1hIiwic3RyZWFtR2VvbWV0cnkiLCJzdHJlYW1HZW9tZXRyeVR5cGUiLCJzdHJlYW1PYmplY3RUeXBlIiwic3RyZWFtTGluZSIsInN0cmVhbVBvbHlnb24iLCJjbG9zZWQiLCJjb29yZGluYXRlIiwibWV0aG9kcyIsIlRyYW5zZm9ybVN0cmVhbSIsIm9wdGlvbmFsIiwicmVxdWlyZWQiLCJzaHVmZmxlIiwiZGVmYXVsdFNlcGFyYXRpb24iLCJtZWFuWCIsImNoaWxkcmVuIiwibWVhblhSZWR1Y2UiLCJtYXhZIiwibWF4WVJlZHVjZSIsImxlYWZMZWZ0IiwibGVhZlJpZ2h0Iiwic2VwYXJhdGlvbiIsIm5vZGVTaXplIiwiY2x1c3RlciIsInByZXZpb3VzTm9kZSIsImVhY2hBZnRlciIsImNvbnN0YW50WmVybyIsImhpZXJhcmNoeSIsIk5vZGUiLCJ2YWx1ZWQiLCJjaGlsZCIsImNoaWxkcyIsImRlZmF1bHRDaGlsZHJlbiIsImVhY2hCZWZvcmUiLCJjb21wdXRlSGVpZ2h0Iiwibm9kZV9jb3B5IiwiY29weURhdGEiLCJub2RlX2NvdW50Iiwibm9kZV9lYWNoIiwibm9kZV9lYWNoQWZ0ZXIiLCJub2RlX2VhY2hCZWZvcmUiLCJub2RlX3N1bSIsIm5vZGVfc29ydCIsIm5vZGVfcGF0aCIsImFuY2VzdG9ycyIsIm5vZGVfYW5jZXN0b3JzIiwiZGVzY2VuZGFudHMiLCJub2RlX2Rlc2NlbmRhbnRzIiwibGVhdmVzIiwibm9kZV9sZWF2ZXMiLCJub2RlX2xpbmtzIiwiYW5jZXN0b3IiLCJsZWFzdENvbW1vbkFuY2VzdG9yIiwic3BsaWNlIiwiYU5vZGVzIiwiYk5vZGVzIiwiY2lyY2xlcyIsImVuY2xvc2VzV2VhayIsImVuY2xvc2VCYXNpcyIsImV4dGVuZEJhc2lzIiwiZW5jbG9zZXNXZWFrQWxsIiwiZW5jbG9zZXNOb3QiLCJlbmNsb3NlQmFzaXMyIiwiZW5jbG9zZUJhc2lzMyIsImRyIiwiZW5jbG9zZUJhc2lzMSIsInIxIiwicjIiLCJ4MjEiLCJ5MjEiLCJyMjEiLCJ4MyIsInkzIiwicjMiLCJhMiIsImEzIiwiYzMiLCJkMSIsImQzIiwieGEiLCJ4YiIsInlhIiwieWIiLCJwYWNrIiwicmFkaXVzTGVhZiIsInBhY2tDaGlsZHJlbiIsInRyYW5zbGF0ZUNoaWxkIiwicGFja0VuY2xvc2UiLCJwbGFjZSIsImludGVyc2VjdHMiLCJzY29yZSIsInByZXZpb3VzIiwiYWEiLCJzaiIsInNrIiwiZW5jbG9zZSIsInBhcnRpdGlvbiIsInBvc2l0aW9uTm9kZSIsInJvdW5kTm9kZSIsInRyZWVtYXBEaWNlIiwia2V5UHJlZml4IiwicHJlcm9vdCIsImFtYmlndW91cyIsImRlZmF1bHRJZCIsImRlZmF1bHRQYXJlbnRJZCIsInBhcmVudElkIiwic3RyYXRpZnkiLCJub2RlS2V5Iiwibm9kZUJ5S2V5IiwibmV4dExlZnQiLCJuZXh0UmlnaHQiLCJtb3ZlU3VidHJlZSIsIndtIiwid3AiLCJjaGFuZ2UiLCJleGVjdXRlU2hpZnRzIiwibmV4dEFuY2VzdG9yIiwidmltIiwiVHJlZU5vZGUiLCJ0cmVlUm9vdCIsImZpcnN0V2FsayIsInNlY29uZFdhbGsiLCJzaXplTm9kZSIsInNpYmxpbmdzIiwibWlkcG9pbnQiLCJhcHBvcnRpb24iLCJ2aXAiLCJ2b3AiLCJ2b20iLCJzaXAiLCJzb3AiLCJzaW0iLCJzb20iLCJzdW1zIiwidmFsdWVPZmZzZXQiLCJ2YWx1ZVRhcmdldCIsInZhbHVlTGVmdCIsInZhbHVlUmlnaHQiLCJ4ayIsInlrIiwidGlsZSIsInNxdWFyaWZ5IiwicGFkZGluZ1N0YWNrIiwicGFkZGluZ0lubmVyIiwicGFkZGluZ1RvcCIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdCb3R0b20iLCJwYWRkaW5nTGVmdCIsInRyZWVtYXAiLCJwYWRkaW5nT3V0ZXIiLCJyYXRpbyIsInJlc3F1YXJpZnkiLCJfc3F1YXJpZnkiLCJkaWNlIiwidHJlZW1hcFNsaWNlIiwic3F1YXJpZnlSYXRpbyIsIm5vZGVWYWx1ZSIsInN1bVZhbHVlIiwibWluVmFsdWUiLCJtYXhWYWx1ZSIsIm5ld1JhdGlvIiwibWluUmF0aW8iLCJiZXRhIiwibmIiLCJuYSIsImJhc2lzIiwidjIiLCJ2MyIsImV4cG9uZW50aWFsIiwiaHVlIiwiZ2FtbWEiLCJub2dhbW1hIiwiY3ViZWhlbGl4R2FtbWEiLCJjb2xvckN1YmVoZWxpeCIsImN1YmVoZWxpeExvbmciLCJzZXRUaW1lIiwiY29sb3JIY2wiLCJoY2xMb25nIiwiY29sb3JIc2wiLCJoc2xMb25nIiwiY29sb3JMYWIiLCJwaWVjZXdpc2UiLCJpbnRlcnBvbGF0b3IiLCJzYW1wbGVzIiwicmdiR2FtbWEiLCJjb2xvclJnYiIsInJnYlNwbGluZSIsInNwbGluZSIsImNvbG9ycyIsInJnYkJhc2lzIiwicmdiQmFzaXNDbG9zZWQiLCJiYXNpc0Nsb3NlZCIsInJlQSIsInJlQiIsIm9uZSIsImxhc3RJbmRleCIsImFtIiwiYm0iLCJicyIsInNrZXdYIiwic2NhbGVYIiwic2NhbGVZIiwiaW50ZXJwb2xhdGVUcmFuc2Zvcm0iLCJweENvbW1hIiwicHhQYXJlbiIsImRlZ1BhcmVuIiwiaW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3MiLCJwYXJzZUNzcyIsImludGVycG9sYXRlVHJhbnNmb3JtU3ZnIiwicGFyc2VTdmciLCJjc3NOb2RlIiwiY3NzUm9vdCIsImNzc1ZpZXciLCJzdmdOb2RlIiwiY3JlYXRlRWxlbWVudCIsImRlZmF1bHRWaWV3IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImFwcGVuZENoaWxkIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInJlbW92ZUNoaWxkIiwiZGVjb21wb3NlIiwiY3JlYXRlRWxlbWVudE5TIiwic2V0QXR0cmlidXRlIiwiY29uc29saWRhdGUiLCJzdHJpbmciLCJyaG8iLCJTUVJUMiIsInJobzIiLCJyaG80IiwidGFuaCIsInV4MCIsInV5MCIsInV4MSIsInV5MSIsImNvc2hyMCIsImR1cmF0aW9uIiwidGF1RXBzaWxvbiIsIlBhdGgiLCJfeDAiLCJfeTAiLCJfeDEiLCJfeTEiLCJiZXppZXJDdXJ2ZVRvIiwiYXJjVG8iLCJ4MDEiLCJ5MDEiLCJsMDFfMiIsIngyMCIsInkyMCIsImwyMV8yIiwibDIwXzIiLCJsMjEiLCJsMDEiLCJ0MDEiLCJ0MjEiLCJjY3ciLCJjdyIsImRhIiwicmVjdCIsImluc2lkZSIsImxleGljb2dyYXBoaWNPcmRlciIsImNvbXB1dGVVcHBlckh1bGxJbmRleGVzIiwiY3Jvc3MiLCJzb3J0ZWRQb2ludHMiLCJmbGlwcGVkUG9pbnRzIiwidXBwZXJJbmRleGVzIiwibG93ZXJJbmRleGVzIiwic2tpcExlZnQiLCJza2lwUmlnaHQiLCJodWxsIiwicGVyaW1ldGVyIiwiX3giLCJfeSIsImNvdmVyIiwiX3Jvb3QiLCJsZWFmIiwieG0iLCJ5bSIsInhwIiwieXAiLCJhZGRBbGwiLCJxdWFkcyIsIlF1YWQiLCJRdWFkdHJlZSIsImxlYWZfY29weSIsInRyZWVQcm90byIsInRyZWVfYWRkIiwidHJlZV9hZGRBbGwiLCJ0cmVlX2NvdmVyIiwidHJlZV9kYXRhIiwidHJlZV9leHRlbnQiLCJ0cmVlX2ZpbmQiLCJ0cmVlX3JlbW92ZSIsInJlbW92ZUFsbCIsInRyZWVfcmVtb3ZlQWxsIiwidHJlZV9yb290IiwidHJlZV9zaXplIiwidHJlZV92aXNpdCIsInRyZWVfdmlzaXRBZnRlciIsInRyZWVfeCIsInRyZWVfeSIsInJldGFpbmVyIiwic291cmNlUmFuZG9tQmF0ZXMiLCJyYW5kb21CYXRlcyIsInJhbmRvbUlyd2luSGFsbCIsImlyd2luSGFsbCIsInNvdXJjZVJhbmRvbUV4cG9uZW50aWFsIiwicmFuZG9tRXhwb25lbnRpYWwiLCJzb3VyY2VSYW5kb21JcndpbkhhbGwiLCJzb3VyY2VSYW5kb21Mb2dOb3JtYWwiLCJyYW5kb21Mb2dOb3JtYWwiLCJyYW5kb21Ob3JtYWwiLCJzb3VyY2VSYW5kb21Ob3JtYWwiLCJtdSIsInNpZ21hIiwic291cmNlUmFuZG9tVW5pZm9ybSIsInJhbmRvbVVuaWZvcm0iLCJzY2hlbWUiLCJyYW1wIiwiaW50ZXJwb2xhdGVSZ2JCYXNpcyIsImludGVycG9sYXRlQ3ViZWhlbGl4TG9uZyIsIndhcm0iLCJjb29sIiwidHMiLCJwaV8xXzMiLCJwaV8yXzMiLCJtYWdtYSIsImluZmVybm8iLCJwbGFzbWEiLCJiYW5kIiwib3JkaW5hbCIsInVua25vd24iLCJvcmRpbmFsUmFuZ2UiLCJyZXNjYWxlIiwic2VxdWVuY2UiLCJyYW5nZVJvdW5kIiwiaW5pdFJhbmdlIiwicG9pbnRpc2giLCJ1bml0Iiwibm9ybWFsaXplIiwiY2xhbXBlciIsImJpbWFwIiwiZDAiLCJwb2x5bWFwIiwiY2xhbXAiLCJpbnRlcnBvbGF0ZVZhbHVlIiwidW50cmFuc2Zvcm0iLCJpbnRlcnBvbGF0ZU51bWJlciIsImludGVycG9sYXRlUm91bmQiLCJjb250aW51b3VzIiwiazEwIiwiazIxIiwiZGl2ZXJnaW5nIiwibGluZWFyaXNoIiwiaW5pdEludGVycG9sYXRvciIsImRpdmVyZ2luZ0xvZyIsImxvZ2dpc2giLCJiYXNlIiwiZGl2ZXJnaW5nU3ltbG9nIiwic3ltbG9naXNoIiwiZGl2ZXJnaW5nUG93IiwicG93aXNoIiwiZGl2ZXJnaW5nU3FydCIsIm5pY2UiLCJ0cmFuc2Zvcm1Mb2ciLCJ0cmFuc2Zvcm1FeHAiLCJ0cmFuc2Zvcm1Mb2duIiwidHJhbnNmb3JtRXhwbiIsInBvdzEwIiwicG93cCIsImxvZ3AiLCJsb2cxMCIsImxvZzIiLCJyZWZsZWN0IiwibG9ncyIsInBvd3MiLCJpbnRlcnZhbCIsImltcGxpY2l0IiwidHJhbnNmb3JtUG93IiwidHJhbnNmb3JtU3FydCIsInRyYW5zZm9ybVNxdWFyZSIsImludmVydEV4dGVudCIsInF1YW50aWxlcyIsInF1YW50aXplIiwic2VxdWVudGlhbCIsInNlcXVlbnRpYWxMb2ciLCJzZXF1ZW50aWFsU3ltbG9nIiwic2VxdWVudGlhbFBvdyIsInNlcXVlbnRpYWxTcXJ0Iiwic2VxdWVudGlhbFF1YW50aWxlIiwidHJhbnNmb3JtU3ltbG9nIiwibG9nMXAiLCJ0cmFuc2Zvcm1TeW1leHAiLCJleHBtMSIsInN5bWxvZyIsInByZWNpc2lvblByZWZpeCIsInByZWNpc2lvblJvdW5kIiwicHJlY2lzaW9uRml4ZWQiLCJkdXJhdGlvblNlY29uZCIsImR1cmF0aW9uTWludXRlIiwiZHVyYXRpb25Ib3VyIiwiZHVyYXRpb25EYXkiLCJkdXJhdGlvbldlZWsiLCJkdXJhdGlvbk1vbnRoIiwiZHVyYXRpb25ZZWFyIiwiY2FsZW5kYXIiLCJtb250aCIsIndlZWsiLCJkYXkiLCJob3VyIiwibWludXRlIiwic2Vjb25kIiwibWlsbGlzZWNvbmQiLCJmb3JtYXRNaWxsaXNlY29uZCIsImZvcm1hdFNlY29uZCIsImZvcm1hdE1pbnV0ZSIsImZvcm1hdEhvdXIiLCJmb3JtYXREYXkiLCJmb3JtYXRXZWVrIiwiZm9ybWF0TW9udGgiLCJ0aWNrSW50ZXJ2YWxzIiwidGlja0ludGVydmFsIiwiZXZlcnkiLCJ0aW1lWWVhciIsInRpbWVNb250aCIsInRpbWVXZWVrIiwidGltZURheSIsInRpbWVIb3VyIiwidGltZU1pbnV0ZSIsInRpbWVTZWNvbmQiLCJ0aW1lTWlsbGlzZWNvbmQiLCJ0aW1lRm9ybWF0IiwidXRjWWVhciIsInV0Y01vbnRoIiwidXRjV2VlayIsInV0Y0RheSIsInV0Y0hvdXIiLCJ1dGNNaW51dGUiLCJ1dGNTZWNvbmQiLCJ1dGNNaWxsaXNlY29uZCIsInV0Y0Zvcm1hdCIsIlVUQyIsImNyZWF0b3IiLCJjcmVhdG9ySW5oZXJpdCIsIm93bmVyRG9jdW1lbnQiLCJ1cmkiLCJuYW1lc3BhY2VVUkkiLCJ4aHRtbCIsImNyZWF0b3JGaXhlZCIsImZ1bGxuYW1lIiwic3BhY2UiLCJuYW1lc3BhY2UiLCJuZXh0SWQiLCJMb2NhbCIsInNlbGVjdG9yIiwibWF0Y2hlcyIsInNvdXJjZUV2ZW50IiwibmFtZXNwYWNlcyIsInhsaW5rIiwieG1sIiwieG1sbnMiLCJjcmVhdGVTVkdQb2ludCIsIm1hdHJpeFRyYW5zZm9ybSIsImdldFNjcmVlbkNUTSIsImludmVyc2UiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJjbGllbnRMZWZ0IiwiY2xpZW50VG9wIiwiU2VsZWN0aW9uIiwicXVlcnlTZWxlY3RvciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJhdHRyUmVtb3ZlIiwicmVtb3ZlQXR0cmlidXRlIiwiYXR0clJlbW92ZU5TIiwicmVtb3ZlQXR0cmlidXRlTlMiLCJhdHRyQ29uc3RhbnQiLCJhdHRyQ29uc3RhbnROUyIsInNldEF0dHJpYnV0ZU5TIiwiYXR0ckZ1bmN0aW9uIiwiYXR0ckZ1bmN0aW9uTlMiLCJnZXRBdHRyaWJ1dGVOUyIsImNsYXNzQXJyYXkiLCJjbGFzc0xpc3QiLCJDbGFzc0xpc3QiLCJfbm9kZSIsIl9uYW1lcyIsImNsYXNzZWRBZGQiLCJuYW1lcyIsImxpc3QiLCJjbGFzc2VkUmVtb3ZlIiwiY2xhc3NlZFRydWUiLCJjbGFzc2VkRmFsc2UiLCJjbGFzc2VkRnVuY3Rpb24iLCJzZWxlY3Rpb25fY2xvbmVTaGFsbG93IiwiaW5zZXJ0QmVmb3JlIiwiY2xvbmVOb2RlIiwibmV4dFNpYmxpbmciLCJzZWxlY3Rpb25fY2xvbmVEZWVwIiwiZGVlcCIsImJpbmRJbmRleCIsInVwZGF0ZSIsImdyb3VwTGVuZ3RoIiwiZGF0YUxlbmd0aCIsIkVudGVyTm9kZSIsImJpbmRLZXkiLCJub2RlQnlLZXlWYWx1ZSIsImtleVZhbHVlcyIsImJpbmQiLCJwYXJlbnRzIiwiX3BhcmVudHMiLCJfZ3JvdXBzIiwiZW50ZXJHcm91cCIsInVwZGF0ZUdyb3VwIiwiZXhpdEdyb3VwIiwiX25leHQiLCJfZW50ZXIiLCJfZXhpdCIsImRpc3BhdGNoRXZlbnQiLCJwYXJhbXMiLCJ3aW5kb3ciLCJDdXN0b21FdmVudCIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJkZXRhaWwiLCJkaXNwYXRjaENvbnN0YW50IiwiZGlzcGF0Y2hGdW5jdGlvbiIsInNwYXJzZSIsImRhdHVtIiwiX3BhcmVudCIsIm1hdGNoZXIiLCJzdWJncm91cCIsImh0bWxSZW1vdmUiLCJpbm5lckhUTUwiLCJodG1sQ29uc3RhbnQiLCJodG1sRnVuY3Rpb24iLCJzZWxlY3Rpb25fc2VsZWN0Iiwic2VsZWN0aW9uX3NlbGVjdEFsbCIsInNlbGVjdGlvbl9maWx0ZXIiLCJzZWxlY3Rpb25fZGF0YSIsInNlbGVjdGlvbl9lbnRlciIsInNlbGVjdGlvbl9leGl0Iiwic2VsZWN0aW9uX2pvaW4iLCJzZWxlY3Rpb25fbWVyZ2UiLCJzZWxlY3Rpb25fb3JkZXIiLCJzZWxlY3Rpb25fc29ydCIsInNlbGVjdGlvbl9jYWxsIiwic2VsZWN0aW9uX25vZGVzIiwic2VsZWN0aW9uX25vZGUiLCJzZWxlY3Rpb25fc2l6ZSIsInNlbGVjdGlvbl9lbXB0eSIsInNlbGVjdGlvbl9lYWNoIiwic2VsZWN0aW9uX2F0dHIiLCJzZWxlY3Rpb25fc3R5bGUiLCJzZWxlY3Rpb25fcHJvcGVydHkiLCJjbGFzc2VkIiwic2VsZWN0aW9uX2NsYXNzZWQiLCJzZWxlY3Rpb25fdGV4dCIsInNlbGVjdGlvbl9odG1sIiwicmFpc2UiLCJzZWxlY3Rpb25fcmFpc2UiLCJsb3dlciIsInNlbGVjdGlvbl9sb3dlciIsInNlbGVjdGlvbl9hcHBlbmQiLCJzZWxlY3Rpb25faW5zZXJ0Iiwic2VsZWN0aW9uX3JlbW92ZSIsImNsb25lIiwic2VsZWN0aW9uX2Nsb25lIiwic2VsZWN0aW9uX2RhdHVtIiwic2VsZWN0aW9uX29uIiwic2VsZWN0aW9uX2Rpc3BhdGNoIiwiY29uc3RhbnROdWxsIiwiYmVmb3JlIiwib25lbnRlciIsIm9udXBkYXRlIiwib25leGl0IiwicHJldmlvdXNTaWJsaW5nIiwiZmlyc3RDaGlsZCIsImdyb3VwczAiLCJncm91cHMxIiwibTAiLCJtZXJnZXMiLCJncm91cDAiLCJncm91cDEiLCJmaWx0ZXJFdmVudHMiLCJlbGVtZW50IiwibW91c2VlbnRlciIsIm1vdXNlbGVhdmUiLCJmaWx0ZXJDb250ZXh0TGlzdGVuZXIiLCJsaXN0ZW5lciIsImNvbnRleHRMaXN0ZW5lciIsInJlbGF0ZWQiLCJyZWxhdGVkVGFyZ2V0IiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJldmVudDEiLCJldmVudDAiLCJvblJlbW92ZSIsIl9fb24iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY2FwdHVyZSIsIm9uQWRkIiwid3JhcCIsImFkZEV2ZW50TGlzdGVuZXIiLCJwcm9wZXJ0eVJlbW92ZSIsInByb3BlcnR5Q29uc3RhbnQiLCJwcm9wZXJ0eUZ1bmN0aW9uIiwic3Vibm9kZSIsInNlbGVjdG9yQWxsIiwiY29tcGFyZU5vZGUiLCJzb3J0Z3JvdXBzIiwic29ydGdyb3VwIiwic3R5bGVSZW1vdmUiLCJyZW1vdmVQcm9wZXJ0eSIsInN0eWxlQ29uc3RhbnQiLCJwcmlvcml0eSIsInNldFByb3BlcnR5Iiwic3R5bGVGdW5jdGlvbiIsInN0eWxlVmFsdWUiLCJ0ZXh0UmVtb3ZlIiwidGV4dENvbnRlbnQiLCJ0ZXh0Q29uc3RhbnQiLCJ0ZXh0RnVuY3Rpb24iLCJub25lIiwiYXJjSW5uZXJSYWRpdXMiLCJpbm5lclJhZGl1cyIsImFyY091dGVyUmFkaXVzIiwib3V0ZXJSYWRpdXMiLCJhcmNTdGFydEFuZ2xlIiwiYXJjRW5kQW5nbGUiLCJhcmNQYWRBbmdsZSIsIngxMCIsInkxMCIsIngzMiIsInkzMiIsImNvcm5lclRhbmdlbnRzIiwicmMiLCJveCIsIm95IiwieDExIiwieTExIiwiY3gwIiwiY3gxIiwiZHgwIiwiZHkwIiwiZHgxIiwiZHkxIiwiY29ybmVyUmFkaXVzIiwicGFkUmFkaXVzIiwiYTAxIiwiYTExIiwiYTEwIiwiZGEwIiwiZGExIiwiYXAiLCJycCIsInJjMCIsInJjMSIsIm9jIiwia2MiLCJsYyIsInBvaW50WCIsInBvaW50WSIsImRlZmluZWQiLCJjdXJ2ZSIsImN1cnZlTGluZWFyIiwiZGVmaW5lZDAiLCJ4MHoiLCJ5MHoiLCJhcmVhU3RhcnQiLCJhcmVhRW5kIiwiYXJlYWxpbmUiLCJsaW5lWDAiLCJsaW5lWTAiLCJsaW5lWTEiLCJsaW5lWDEiLCJjdXJ2ZVJhZGlhbExpbmVhciIsImxpbmVTdGFydEFuZ2xlIiwibGluZVJhZGlhbCIsImxpbmVFbmRBbmdsZSIsImxpbmVJbm5lclJhZGl1cyIsImxpbmVPdXRlclJhZGl1cyIsImN1cnZlUmFkaWFsIiwiX2N1cnZlIiwiQmFzaXMiLCJCYXNpc0Nsb3NlZCIsIl94MiIsIl94MyIsIl94NCIsIl95MiIsIl95MyIsIl95NCIsIkJhc2lzT3BlbiIsIkJ1bmRsZSIsIl9iYXNpcyIsIl9iZXRhIiwiYnVuZGxlIiwiX2siLCJDYXJkaW5hbCIsInRlbnNpb24iLCJjYXJkaW5hbCIsIkNhcmRpbmFsQ2xvc2VkIiwiX3g1IiwiX3k1IiwiQ2FyZGluYWxPcGVuIiwiX2wwMV9hIiwiX2wwMV8yYSIsIl9sMTJfYSIsIl9sMTJfMmEiLCJfbDIzX2EiLCJfbDIzXzJhIiwiQ2F0bXVsbFJvbSIsIl9hbHBoYSIsIngyMyIsInkyMyIsImNhdG11bGxSb20iLCJDYXRtdWxsUm9tQ2xvc2VkIiwiQ2F0bXVsbFJvbU9wZW4iLCJMaW5lYXIiLCJMaW5lYXJDbG9zZWQiLCJzbG9wZTMiLCJoMCIsImgxIiwic2xvcGUyIiwiTW9ub3RvbmVYIiwiX3QwIiwiTW9ub3RvbmVZIiwiUmVmbGVjdENvbnRleHQiLCJtb25vdG9uZVgiLCJtb25vdG9uZVkiLCJOYXR1cmFsIiwicHgiLCJjb250cm9sUG9pbnRzIiwicHkiLCJSYWRpYWwiLCJyYWRpYWwiLCJTdGVwIiwiX3QiLCJzdGVwQmVmb3JlIiwic3RlcEFmdGVyIiwibGlua1NvdXJjZSIsImxpbmtUYXJnZXQiLCJjdXJ2ZUhvcml6b250YWwiLCJjdXJ2ZVZlcnRpY2FsIiwicG9pbnRSYWRpYWwiLCJwMiIsInAzIiwibGlua0hvcml6b250YWwiLCJsaW5rVmVydGljYWwiLCJsaW5rUmFkaWFsIiwic2VyaWVzIiwieW4iLCJzMiIsInNpIiwic2lqMCIsInNpajEiLCJzMyIsInNrajAiLCJza2oxIiwicGVha3MiLCJwZWFrIiwidmkiLCJ2aiIsImFwcGVhcmFuY2UiLCJ0b3BzIiwiYm90dG9tcyIsImRlc2NlbmRpbmciLCJwaWUiLCJhcmNzIiwic3RhY2tWYWx1ZSIsIm9yZGVyTm9uZSIsIm9mZnNldE5vbmUiLCJzdGFjayIsImt6Iiwic3oiLCJveiIsImtpIiwic2lqIiwic3ltYm9scyIsImRpYW1vbmQiLCJzcXVhcmUiLCJzdGFyIiwidHJpYW5nbGUiLCJ3eWUiLCJkcmF3IiwidGFuMzAiLCJ0YW4zMF8yIiwia2EiLCJrciIsInNxcnQzIiwidGltZVBhcnNlIiwidXRjUGFyc2UiLCJkYXRlVGltZSIsInRpbWUiLCJwZXJpb2RzIiwiZGF5cyIsInNob3J0RGF5cyIsIm1vbnRocyIsInNob3J0TW9udGhzIiwiaXNvU3BlY2lmaWVyIiwiZm9ybWF0SXNvTmF0aXZlIiwidG9JU09TdHJpbmciLCJmb3JtYXRJc28iLCJwYXJzZUlzb05hdGl2ZSIsInBhcnNlSXNvIiwibG9jYWxEYXRlIiwiSCIsIkwiLCJzZXRGdWxsWWVhciIsInV0Y0RhdGUiLCJzZXRVVENGdWxsWWVhciIsIm5ld1llYXIiLCJsb2NhbGVfZGF0ZVRpbWUiLCJsb2NhbGVfZGF0ZSIsImxvY2FsZV90aW1lIiwibG9jYWxlX3BlcmlvZHMiLCJsb2NhbGVfd2Vla2RheXMiLCJsb2NhbGVfc2hvcnRXZWVrZGF5cyIsImxvY2FsZV9tb250aHMiLCJsb2NhbGVfc2hvcnRNb250aHMiLCJwZXJpb2RSZSIsImZvcm1hdFJlIiwicGVyaW9kTG9va3VwIiwiZm9ybWF0TG9va3VwIiwid2Vla2RheVJlIiwid2Vla2RheUxvb2t1cCIsInNob3J0V2Vla2RheVJlIiwic2hvcnRXZWVrZGF5TG9va3VwIiwibW9udGhSZSIsIm1vbnRoTG9va3VwIiwic2hvcnRNb250aFJlIiwic2hvcnRNb250aExvb2t1cCIsImZvcm1hdHMiLCJmb3JtYXRTaG9ydFdlZWtkYXkiLCJmb3JtYXRXZWVrZGF5IiwiZm9ybWF0U2hvcnRNb250aCIsImZvcm1hdERheU9mTW9udGgiLCJmb3JtYXRNaWNyb3NlY29uZHMiLCJmb3JtYXRIb3VyMjQiLCJmb3JtYXRIb3VyMTIiLCJmb3JtYXREYXlPZlllYXIiLCJmb3JtYXRNaWxsaXNlY29uZHMiLCJmb3JtYXRNb250aE51bWJlciIsImZvcm1hdE1pbnV0ZXMiLCJmb3JtYXRQZXJpb2QiLCJmb3JtYXRVbml4VGltZXN0YW1wIiwiZm9ybWF0VW5peFRpbWVzdGFtcFNlY29uZHMiLCJmb3JtYXRTZWNvbmRzIiwiZm9ybWF0V2Vla2RheU51bWJlck1vbmRheSIsImZvcm1hdFdlZWtOdW1iZXJTdW5kYXkiLCJmb3JtYXRXZWVrTnVtYmVySVNPIiwiZm9ybWF0V2Vla2RheU51bWJlclN1bmRheSIsImZvcm1hdFdlZWtOdW1iZXJNb25kYXkiLCJmb3JtYXRGdWxsWWVhciIsImZvcm1hdFpvbmUiLCJmb3JtYXRMaXRlcmFsUGVyY2VudCIsInV0Y0Zvcm1hdHMiLCJmb3JtYXRVVENTaG9ydFdlZWtkYXkiLCJmb3JtYXRVVENXZWVrZGF5IiwiZm9ybWF0VVRDU2hvcnRNb250aCIsImZvcm1hdFVUQ01vbnRoIiwiZm9ybWF0VVRDRGF5T2ZNb250aCIsImZvcm1hdFVUQ01pY3Jvc2Vjb25kcyIsImZvcm1hdFVUQ0hvdXIyNCIsImZvcm1hdFVUQ0hvdXIxMiIsImZvcm1hdFVUQ0RheU9mWWVhciIsImZvcm1hdFVUQ01pbGxpc2Vjb25kcyIsImZvcm1hdFVUQ01vbnRoTnVtYmVyIiwiZm9ybWF0VVRDTWludXRlcyIsImZvcm1hdFVUQ1BlcmlvZCIsImZvcm1hdFVUQ1NlY29uZHMiLCJmb3JtYXRVVENXZWVrZGF5TnVtYmVyTW9uZGF5IiwiZm9ybWF0VVRDV2Vla051bWJlclN1bmRheSIsImZvcm1hdFVUQ1dlZWtOdW1iZXJJU08iLCJmb3JtYXRVVENXZWVrZGF5TnVtYmVyU3VuZGF5IiwiZm9ybWF0VVRDV2Vla051bWJlck1vbmRheSIsImZvcm1hdFVUQ1llYXIiLCJmb3JtYXRVVENGdWxsWWVhciIsImZvcm1hdFVUQ1pvbmUiLCJwYXJzZXMiLCJwYXJzZVNob3J0V2Vla2RheSIsInBhcnNlV2Vla2RheSIsInBhcnNlU2hvcnRNb250aCIsInBhcnNlTW9udGgiLCJwYXJzZUxvY2FsZURhdGVUaW1lIiwicGFyc2VEYXlPZk1vbnRoIiwicGFyc2VNaWNyb3NlY29uZHMiLCJwYXJzZUhvdXIyNCIsInBhcnNlRGF5T2ZZZWFyIiwicGFyc2VNaWxsaXNlY29uZHMiLCJwYXJzZU1vbnRoTnVtYmVyIiwicGFyc2VNaW51dGVzIiwicGFyc2VQZXJpb2QiLCJwYXJzZVVuaXhUaW1lc3RhbXAiLCJwYXJzZVVuaXhUaW1lc3RhbXBTZWNvbmRzIiwicGFyc2VTZWNvbmRzIiwicGFyc2VXZWVrZGF5TnVtYmVyTW9uZGF5IiwicGFyc2VXZWVrTnVtYmVyU3VuZGF5IiwicGFyc2VXZWVrTnVtYmVySVNPIiwicGFyc2VXZWVrZGF5TnVtYmVyU3VuZGF5IiwicGFyc2VXZWVrTnVtYmVyTW9uZGF5IiwicGFyc2VMb2NhbGVEYXRlIiwicGFyc2VMb2NhbGVUaW1lIiwicGFyc2VZZWFyIiwicGFyc2VGdWxsWWVhciIsInBhcnNlWm9uZSIsInBhcnNlTGl0ZXJhbFBlcmNlbnQiLCJwYWRzIiwiY2hhckF0IiwibmV3UGFyc2UiLCJuZXdEYXRlIiwicGFyc2VTcGVjaWZpZXIiLCJRIiwiViIsImdldFVUQ0RheSIsInV0Y01vbmRheSIsImdldERheSIsInRpbWVNb25kYXkiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsIlUiLCJaIiwiZ2V0SG91cnMiLCJudW1iZXJSZSIsInBlcmNlbnRSZSIsInJlcXVvdGVSZSIsInJlcXVvdGUiLCJnZXRNaWxsaXNlY29uZHMiLCJnZXRNaW51dGVzIiwiZ2V0U2Vjb25kcyIsInRpbWVTdW5kYXkiLCJ0aW1lVGh1cnNkYXkiLCJnZXRUaW1lem9uZU9mZnNldCIsImRvdyIsInV0Y1N1bmRheSIsInV0Y1RodXJzZGF5Iiwic2V0SG91cnMiLCJzZXREYXRlIiwibmV3SW50ZXJ2YWwiLCJmbG9vcmkiLCJvZmZzZXRpIiwiZmllbGQiLCJzZXRNb250aCIsInNldFVUQ0hvdXJzIiwic2V0VVRDRGF0ZSIsInV0Y0RheXMiLCJzZXRVVENNaW51dGVzIiwidXRjSG91cnMiLCJzZXRVVENTZWNvbmRzIiwidXRjTWludXRlcyIsInNldFVUQ01vbnRoIiwidXRjTW9udGhzIiwidXRjV2Vla2RheSIsInV0Y1R1ZXNkYXkiLCJ1dGNXZWRuZXNkYXkiLCJ1dGNGcmlkYXkiLCJ1dGNTYXR1cmRheSIsInV0Y1N1bmRheXMiLCJ1dGNNb25kYXlzIiwidXRjVHVlc2RheXMiLCJ1dGNXZWRuZXNkYXlzIiwidXRjVGh1cnNkYXlzIiwidXRjRnJpZGF5cyIsInV0Y1NhdHVyZGF5cyIsInV0Y1llYXJzIiwid2Vla2RheSIsInN1bmRheSIsIm1vbmRheSIsInR1ZXNkYXkiLCJ3ZWRuZXNkYXkiLCJ0aHVyc2RheSIsImZyaWRheSIsInNhdHVyZGF5Iiwic3VuZGF5cyIsIm1vbmRheXMiLCJ0dWVzZGF5cyIsIndlZG5lc2RheXMiLCJ0aHVyc2RheXMiLCJmcmlkYXlzIiwic2F0dXJkYXlzIiwieWVhcnMiLCJkZWxheSIsIlRpbWVyIiwidG90YWwiLCJub3ciLCJlbGFwc2VkIiwiZnJhbWUiLCJ0aW1lb3V0IiwicG9rZURlbGF5IiwidGFza0hlYWQiLCJ0YXNrVGFpbCIsImNsb2NrTGFzdCIsImNsb2NrTm93IiwiY2xvY2tTa2V3IiwiY2xvY2siLCJwZXJmb3JtYW5jZSIsInNldEZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2xlYXJOb3ciLCJfY2FsbCIsIl90aW1lIiwiVHlwZUVycm9yIiwic2xlZXAiLCJ0aW1lckZsdXNoIiwid2FrZSIsIm5hcCIsInBva2UiLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJzY2hlZHVsZXMiLCJfX3RyYW5zaXRpb24iLCJzY2hlZHVsZSIsIlNDSEVEVUxFRCIsIlRyYW5zaXRpb24iLCJTVEFSVElORyIsIkVORElORyIsIkVOREVEIiwic2VsZWN0aW9uX2ludGVycnVwdCIsInNlbGVjdGlvbl90cmFuc2l0aW9uIiwiZGVmYXVsdFRpbWluZyIsImVhc2UiLCJlYXNlQ3ViaWNJbk91dCIsImluaGVyaXQiLCJ0aW1pbmciLCJfaWQiLCJfbmFtZSIsIm5ld0lkIiwic3RyaW5nMDAiLCJzdHJpbmcxIiwiaW50ZXJwb2xhdGUwIiwic3RyaW5nMCIsInN0cmluZzEwIiwiYXR0clR3ZWVuIiwidHdlZW5WYWx1ZSIsImF0dHJJbnRlcnBvbGF0ZSIsImF0dHJJbnRlcnBvbGF0ZU5TIiwiYXR0clR3ZWVuTlMiLCJfdmFsdWUiLCJkZWxheUZ1bmN0aW9uIiwiZGVsYXlDb25zdGFudCIsImR1cmF0aW9uRnVuY3Rpb24iLCJkdXJhdGlvbkNvbnN0YW50IiwiZWFzZUNvbnN0YW50Iiwib24wIiwib24xIiwiY2FuY2VsIiwic2VsZWN0aW9uX3Byb3RvdHlwZSIsInRyYW5zaXRpb25fc2VsZWN0IiwidHJhbnNpdGlvbl9zZWxlY3RBbGwiLCJ0cmFuc2l0aW9uX2ZpbHRlciIsInRyYW5zaXRpb25fbWVyZ2UiLCJ0cmFuc2l0aW9uX3NlbGVjdGlvbiIsInRyYW5zaXRpb25fdHJhbnNpdGlvbiIsInRyYW5zaXRpb25fb24iLCJ0cmFuc2l0aW9uX2F0dHIiLCJ0cmFuc2l0aW9uX2F0dHJUd2VlbiIsInRyYW5zaXRpb25fc3R5bGUiLCJzdHlsZVR3ZWVuIiwidHJhbnNpdGlvbl9zdHlsZVR3ZWVuIiwidHJhbnNpdGlvbl90ZXh0IiwidHJhbnNpdGlvbl9yZW1vdmUiLCJ0cmFuc2l0aW9uX3R3ZWVuIiwidHJhbnNpdGlvbl9kZWxheSIsInRyYW5zaXRpb25fZHVyYXRpb24iLCJ0cmFuc2l0aW9uX2Vhc2UiLCJ0cmFuc2l0aW9uX2VuZCIsImludGVycG9sYXRlUmdiIiwiaW50ZXJwb2xhdGVTdHJpbmciLCJvbkZ1bmN0aW9uIiwic2l0IiwicmVtb3ZlRnVuY3Rpb24iLCJlbXB0eU9uIiwiZW1wdHlUd2VlbiIsIkNSRUFURUQiLCJTVEFSVEVEIiwiUlVOTklORyIsInNlbGYiLCJzdHlsZU51bGwiLCJzdHlsZU1heWJlUmVtb3ZlIiwibGlzdGVuZXIwIiwic3R5bGVJbnRlcnBvbGF0ZSIsImlkMCIsImlkMSIsInR3ZWVuUmVtb3ZlIiwidHdlZW4wIiwidHdlZW4xIiwidHdlZW5GdW5jdGlvbiIsImJlYWNoUG9vbCIsIkJlYWNoIiwiUmVkQmxhY2tOb2RlIiwiZWRnZSIsInNpdGUiLCJjcmVhdGVCZWFjaCIsImJlYWNoIiwiZGV0YWNoQmVhY2giLCJkZXRhY2hDaXJjbGUiLCJiZWFjaGVzIiwicmVtb3ZlQmVhY2giLCJ2ZXJ0ZXgiLCJQIiwiZGlzYXBwZWFyaW5nIiwibEFyYyIsInJBcmMiLCJuQXJjcyIsImlBcmMiLCJzZXRFZGdlRW5kIiwiY3JlYXRlRWRnZSIsImF0dGFjaENpcmNsZSIsImFkZEJlYWNoIiwiZGlyZWN0cml4IiwiZHhsIiwiZHhyIiwibGVmdEJyZWFrUG9pbnQiLCJyaWdodEJyZWFrUG9pbnQiLCJSIiwiY3JlYXRlQ2VsbCIsIm5ld0FyYyIsImxTaXRlIiwiclNpdGUiLCJoYiIsImhjIiwicmZvY3giLCJyZm9jeSIsInBieTIiLCJsZm9jeCIsImxmb2N5IiwicGxieTIiLCJobCIsImFieTIiLCJjZWxscyIsImhhbGZlZGdlcyIsImNlbGxIYWxmZWRnZUFuZ2xlIiwiY2VsbCIsInZhIiwidmIiLCJjZWxsSGFsZmVkZ2VTdGFydCIsImNlbGxIYWxmZWRnZUVuZCIsInNvcnRDZWxsSGFsZmVkZ2VzIiwiZWRnZXMiLCJjbGlwQ2VsbHMiLCJuQ2VsbHMiLCJpQ2VsbCIsImlIYWxmZWRnZSIsIm5IYWxmZWRnZXMiLCJzdGFydFgiLCJzdGFydFkiLCJlbmRYIiwiZW5kWSIsImNyZWF0ZUJvcmRlckVkZ2UiLCJkYyIsInYwMSIsInYxMSIsInYxMCIsImNpcmNsZVBvb2wiLCJmaXJzdENpcmNsZSIsIkNpcmNsZSIsImNTaXRlIiwiaGEiLCJ0cmlhbmdsZUFyZWEiLCJsZXhpY29ncmFwaGljIiwiRGlhZ3JhbSIsInNpdGVzIiwiUmVkQmxhY2tUcmVlIiwiY2xpcEVkZ2VzIiwidHJpYW5nbGVzIiwiX2ZvdW5kIiwiY2xpcEVkZ2UiLCJjb25uZWN0RWRnZSIsImx4IiwibHkiLCJyeCIsInJ5IiwiZm0iLCJmYiIsImFmdGVyIiwiZ3JhbmRwYSIsInVuY2xlIiwiUmVkQmxhY2tGaXJzdCIsIlJlZEJsYWNrUm90YXRlTGVmdCIsIlJlZEJsYWNrUm90YXRlUmlnaHQiLCJzaWJsaW5nIiwidm9yb25vaSIsIlpvb21FdmVudCIsIlRyYW5zZm9ybSIsImFwcGx5WCIsImFwcGx5WSIsImxvY2F0aW9uIiwiaW52ZXJ0WCIsImludmVydFkiLCJyZXNjYWxlWCIsInJlc2NhbGVZIiwiX196b29tIiwiU1ZHRWxlbWVudCIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwiZGVmYXVsdFRyYW5zZm9ybSIsImRlZmF1bHRXaGVlbERlbHRhIiwiZGVsdGFZIiwiZGVsdGFNb2RlIiwiZGVmYXVsdENvbnN0cmFpbiIsInRyYW5zbGF0ZUV4dGVudCIsImNvbnN0cmFpbiIsIndoZWVsRGVsdGEiLCJzY2FsZUV4dGVudCIsImludGVycG9sYXRlWm9vbSIsInRvdWNoc3RhcnRpbmciLCJ0b3VjaERlbGF5Iiwid2hlZWxEZWxheSIsInpvb20iLCJ3aGVlbGVkIiwiZGJsY2xpY2tlZCIsImNvbGxlY3Rpb24iLCJzY2FsZUJ5Iiwic2NhbGVUbyIsImswIiwiazEiLCJ0cmFuc2xhdGVCeSIsInRyYW5zbGF0ZVRvIiwiR2VzdHVyZSIsInRvdWNoMCIsInRvdWNoMSIsIndoZWVsIiwid2hlZWxpZGxlZCIsImwwIiwibDEiLCJkcCIsImRsIiwidmVyc2lvbiIsImRlc2NyaXB0aW9uIiwia2V5d29yZHMiLCJob21lcGFnZSIsImxpY2Vuc2UiLCJhdXRob3IiLCJtYWluIiwidW5wa2ciLCJqc2RlbGl2ciIsIm1vZHVsZSIsInJlcG9zaXRvcnkiLCJzY3JpcHRzIiwiZGV2RGVwZW5kZW5jaWVzIiwiZGVwZW5kZW5jaWVzIiwiQ29ubmVjdGlvbiIsIm5vZGVJbmRleCIsImxpbmtEYXRhIiwic2FtZU5vZGVzIiwiZGlmZk5vZGVzIiwiZ3JvdXBfaWQiLCJjbGlja2VkTm9kZUNhdGVnb3J5Iiwibm9kZU5hbWUiLCJhcmVhSUQiLCJyZW1vdmVEZXRhaWwiLCJkZXRhaWxCb3giLCJnZXRFbGVtZW50QnlJZCIsImVsZW1lbnRzIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwiTW91c2UiLCJsaW5rTGluZSIsIm5vZGVDaXJjbGUiLCJub2RlVGV4dCIsImxpbmVJbmRleCIsIm5vZGVTb3VyY2UiLCJub2RlVGFyZ2V0Iiwic2VsZWN0TGluZSIsIm1vdXNlb3ZlciIsImJvZHkiLCJncmFiVHlwZUNpcmNsZSIsImdyYWJUeXBlQm9keSIsIk5ldHdvcmsiLCJmbGF2b3JEYXRhIiwidW1hbWlEYXRhIiwiaXNTcCIsInN2Z0lEIiwiZGF0YVR5cGUiLCJ2aXpNb2RlIiwidml6SUQiLCJub2RlSW5mbyIsIm5vZGVEYXRhIiwiY2VudGVyWCIsImNlbnRlclkiLCJ6b29tU2NhbGUiLCJsYWJlbCIsImlzRHJhZ2dpbmciLCJsZWdlbmQiLCJsZWdlbmROYW1lIiwibGVnZW5kQ29sb3IiLCJ3YWxsTWFyZ2luIiwiem9vbUdyb3VwIiwiem9vbV9oYW5kbGVyIiwiem9vbV9hY3Rpb25zIiwiem9vbV9zdGFydCIsInpvb21fZW5kIiwic2V0TGluayIsInNldE5vZGUiLCJzZXRMYWJlbCIsInNldFNpbXVsYXRpb24iLCJncm91cF9pZF9zIiwiZHJhZ3N0YXJ0ZWQiLCJkcmFnZ2luZyIsImRyYWdlbmRlZCIsInVtYW1pIiwiVXBkYXRlIiwidW1hbWlTaW11bGF0aW9uIiwidGlja2VkIiwibWFyZ2luWHJpZ2h0IiwibWFyZ2luWXVwIiwibWFyZ2luWGxlZnQiLCJtYXJnaW5ZZG93biIsIm1vdXNlZG93biIsImN1cnNvciIsIm1vdXNldXAiLCJnZXRTY2FsZSIsInNjYWxlXyIsInZhbHVlc18iLCJzZWxlY3RlZFR5cGUiLCJwcmV2Tm9kZVBvc2l0aW9uIiwiZmxhdm9yU2ltdWxhdGlvbiIsInJlc0RlbGV0ZU9iaiIsInJlc0FkZE9iaiIsImRlbGV0ZU9iaiIsImNvbnNvbGUiLCJhZGRPYmoiLCJzdG9yZVByZXZpb3VzTm9kZVBvc2l0aW9uIiwibm9kZUxhYmVsT3BhY2l0eSIsInRyYW5zaXROb2RlUG9zaXRpb24iLCJ0cmFuc2l0TGlua1Bvc2l0aW9uIiwibmV0d29yayIsIm1vdXNlQWN0aW9uIiwibW91c2VvdXQiLCJkZWxldGVMaW5rRGF0YSIsImRlbGV0ZU5vZGVEYXRhIiwiZGVsZXRlTGFiZWxEYXRhIiwiYWRkTGlua0RhdGEiLCJhZGROb2RlRGF0YSIsImFkZExhYmVsRGF0YSIsImxpbmtMaW5lRW50ZXIiLCJsaW5rU1ZHIiwiZmlyc3RTVkciLCJkdXJhdGlvblRpbWUiLCJub2RlUG9zaXRpb25JbmRleCIsImkyIiwic291cmNlTmFtZSIsInRhcmdldE5hbWUiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZXR3b3JrTWFpbiIsIm5ldHdvcmtTdWIiLCJzZXRMZWdlbmQiLCJyZW5kZXIiLCJzZXRNb3VzZUFjdGlvbiIsIndhdGNoTW91c2VBY3Rpb24iLCJvYmoiLCJwcm9wTmFtZSIsImZ1bmMiLCJkZWZpbmVQcm9wZXJ0eSIsIm5ld1ZhbHVlIiwib2xkVmFsdWUiLCJjb25maWd1cmFibGUiLCJvbkNoYW5nZSIsIm9sZFZhbCIsImRldGVjdE5vZGVJbmRleCIsIkYiLCJtYWtlTm9kZUxpc3QiLCJkaXNwbGF5RGV0YWlsIiwic2V0Vml6TW9kZSIsImRpc3BsYXkiLCJkYXRhVHlwZVNlbGVjdG9yIiwib25jaGFuZ2UiLCJvcHRpb25zIiwic2VsZWN0ZWRJbmRleCJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0RBQTBDLGdDQUFnQztBQUMxRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdFQUF3RCxrQkFBa0I7QUFDMUU7QUFDQSx5REFBaUQsY0FBYztBQUMvRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQXlDLGlDQUFpQztBQUMxRSx3SEFBZ0gsbUJBQW1CLEVBQUU7QUFDckk7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtB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O0FBQ0E7QUFDQTtBQUVBLElBQUk0aEIsS0FBSyxHQUFHLENBQ1YsRUFEVSxFQUVWLENBQUMsQ0FBQyxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQUQsRUFBYSxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQWIsQ0FBRCxDQUZVLEVBR1YsQ0FBQyxDQUFDLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBRCxFQUFhLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBYixDQUFELENBSFUsRUFJVixDQUFDLENBQUMsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFELEVBQWEsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFiLENBQUQsQ0FKVSxFQUtWLENBQUMsQ0FBQyxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQUQsRUFBYSxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQWIsQ0FBRCxDQUxVLEVBTVYsQ0FBQyxDQUFDLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBRCxFQUFhLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBYixDQUFELEVBQTJCLENBQUMsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFELEVBQWEsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFiLENBQTNCLENBTlUsRUFPVixDQUFDLENBQUMsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFELEVBQWEsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFiLENBQUQsQ0FQVSxFQVFWLENBQUMsQ0FBQyxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQUQsRUFBYSxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQWIsQ0FBRCxDQVJVLEVBU1YsQ0FBQyxDQUFDLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBRCxFQUFhLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FBYixDQUFELENBVFUsRUFVVixDQUFDLENBQUMsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFELEVBQWEsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFiLENBQUQsQ0FWVSxFQVdWLENBQUMsQ0FBQyxDQUFDLEdBQUQsRUFBTSxHQUFOLENBQUQsRUFBYSxDQUFDLEdBQUQsRUFBTSxHQUFO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QUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0NBQzJFOztDQUNBOztBQUMzRTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7QUM1Q0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRWUsMkVBQVc7QUFDeEIsTUFBSUwsQ0FBQyxHQUFHcThELHdDQUFSO0FBQUEsTUFDSTkxRCxDQUFDLEdBQUcrMUQsd0NBRFI7QUFBQSxNQUVJQyxPQUFPLEdBQUdyNUQseURBQVEsQ0FBQyxJQUFELENBRnRCO0FBQUEsTUFHSXVFLE9BQU8sR0FBRyxJQUhkO0FBQUEsTUFJSSswRCxLQUFLLEdBQUdDLHFEQUpaO0FBQUEsTUFLSW55RCxNQUFNLEdBQUcsSUFMYjs7QUFPQSxXQUFTMUIsSUFBVCxDQUFjNUcsSUFBZCxFQUFvQjtBQUNsQixRQUFJbEIsQ0FBSjtBQUFBLFFBQ0lRLENBQUMsR0FBR1UsSUFBSSxDQUFDbEMsTUFEYjtBQUFBLFFBRUlPLENBRko7QUFBQSxRQUdJcThELFFBQVEsR0FBRyxLQUhmO0FBQUEsUUFJSXJwRCxNQUpKO0FBTUEsUUFBSTVMLE9BQU8sSUFBSSxJQUFmLEVBQXFCNkMsTUFBTSxHQUFHa3lELEtBQUssQ0FBQ25wRCxNQUFNLEdBQUduTCxvREFBSSxFQUFkLENBQWQ7O0FBRXJCLFNBQUtwSCxDQUFDLEdBQUcsQ0FBVCxFQUFZQSxDQUFDLElBQUlRLENBQWpCLEVBQW9CLEVBQUVSLENBQXRCLEVBQXlCO0FBQ3ZCLFVBQUksRUFBRUEsQ0FBQyxHQUFHUSxDQUFKLElBQVNpN0QsT0FBTyxDQUFDbDhELENBQUMsR0FBRzJCLElBQUksQ0FBQ2xCLENBQUQsQ0FBVCxFQUFjQSxDQUFkLEVBQWlCa0IsSUFBakIsQ0FBbEIsTUFBOEMwNkQsUUFBbEQsRUFBNEQ7QUFDMUQsWUFBSUEsUUFBUSxHQUFHLENBQUNBLFFBQWhCLEVBQTBCcHlELE1BQU0sQ0FBQyt3QixTQUFQLEdBQTFCLEtBQ0svd0IsTUFBTSxDQUFDZ3hCLE9BQVA7QUFDTjs7QUFDRCxVQUFJb2hDLFFBQUosRUFBY3B5RCxNQUFNLENBQUM2RixLQUFQLENBQWEsQ0FBQ25RLENBQUMsQ0FBQ0ssQ0FBRCxFQUFJUyxDQUFKLEVBQU9rQixJQUFQLENBQWYsRUFBNkIsQ0FBQ3VFLENBQUMsQ0FBQ2xHLENBQUQsRUFBSVMsQ0FBSixFQUFPa0IsSUFBUCxDQUEvQjtBQUNmOztBQUVELFFBQUlxUixNQUFKLEVBQVksT0FBTy9JLE1BQU0sR0FBRyxJQUFULEVBQWUrSSxNQUFNLEdBQUcsRUFBVCxJQUFlLElBQXJDO0FBQ2I7O0FBRUR6SyxNQUFJLENBQUM1SSxDQUFMLEdBQVMsVUFBU2dELENBQVQsRUFBWTtBQUNuQixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9CRSxDQUFDLEdBQUcsT0FBT2dELENBQVAsS0FBYSxVQUFiLEdBQTBCQSxDQUExQixHQUE4QkUseURBQVEsQ0FBQyxDQUFDRixDQUFGLENBQTFDLEVBQWdENEYsSUFBcEUsSUFBNEU1SSxDQUFuRjtBQUNELEdBRkQ7O0FBSUE0SSxNQUFJLENBQUNyQyxDQUFMLEdBQVMsVUFBU3ZELENBQVQsRUFBWTtBQUNuQixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9CeUcsQ0FBQyxHQUFHLE9BQU92RCxDQUFQLEtBQWEsVUFBYixHQUEwQkEsQ0FBMUIsR0FBOEJFLHlEQUFRLENBQUMsQ0FBQ0YsQ0FBRixDQUExQyxFQUFnRDRGLElBQXBFLElBQTRFckMsQ0FBbkY7QUFDRCxHQUZEOztBQUlBcUMsTUFBSSxDQUFDMnpELE9BQUwsR0FBZSxVQUFTdjVELENBQVQsRUFBWTtBQUN6QixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9CeThELE9BQU8sR0FBRyxPQUFPdjVELENBQVAsS0FBYSxVQUFiLEdBQTBCQSxDQUExQixHQUE4QkUseURBQVEsQ0FBQyxDQUFDLENBQUNGLENBQUgsQ0FBaEQsRUFBdUQ0RixJQUEzRSxJQUFtRjJ6RCxPQUExRjtBQUNELEdBRkQ7O0FBSUEzekQsTUFBSSxDQUFDNHpELEtBQUwsR0FBYSxVQUFTeDVELENBQVQsRUFBWTtBQUN2QixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9CMDhELEtBQUssR0FBR3g1RCxDQUFSLEVBQVd5RSxPQUFPLElBQUksSUFBWCxLQUFvQjZDLE1BQU0sR0FBR2t5RCxLQUFLLENBQUMvMEQsT0FBRCxDQUFsQyxDQUFYLEVBQXlEbUIsSUFBN0UsSUFBcUY0ekQsS0FBNUY7QUFDRCxHQUZEOztBQUlBNXpELE1BQUksQ0FBQ25CLE9BQUwsR0FBZSxVQUFTekUsQ0FBVCxFQUFZO0FBQ3pCLFdBQU9DLFNBQVMsQ0FBQ25ELE1BQVYsSUFBb0JrRCxDQUFDLElBQUksSUFBTCxHQUFZeUUsT0FBTyxHQUFHNkMsTUFBTSxHQUFHLElBQS9CLEdBQXNDQSxNQUFNLEdBQUdreUQsS0FBSyxDQUFDLzBELE9BQU8sR0FBR3pFLENBQVgsQ0FBcEQsRUFBbUU0RixJQUF2RixJQUErRm5CLE9BQXRHO0FBQ0QsR0FGRDs7QUFJQSxTQUFPbUIsSUFBUDtBQUNELEM7Ozs7Ozs7Ozs7OztBQ3RERDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFTyxTQUFTMDBELFVBQVQsQ0FBb0IzN0MsQ0FBcEIsRUFBdUI7QUFDNUIsTUFBSXVDLENBQUMsR0FBR3ZDLENBQUMsQ0FBQzY2QyxLQUFWO0FBRUE3NkMsR0FBQyxDQUFDdVYsS0FBRixHQUFVdlYsQ0FBQyxDQUFDM2hCLENBQVosRUFBZSxPQUFPMmhCLENBQUMsQ0FBQzNoQixDQUF4QjtBQUNBMmhCLEdBQUMsQ0FBQzFPLE1BQUYsR0FBVzBPLENBQUMsQ0FBQ3BiLENBQWIsRUFBZ0IsT0FBT29iLENBQUMsQ0FBQ3BiLENBQXpCOztBQUVBb2IsR0FBQyxDQUFDNjZDLEtBQUYsR0FBVSxVQUFTeDVELENBQVQsRUFBWTtBQUNwQixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLEdBQW1Cb2tCLENBQUMsQ0FBQ3c1Qyw2REFBVyxDQUFDMTZELENBQUQsQ0FBWixDQUFwQixHQUF1Q2toQixDQUFDLEdBQUd5NUMsTUFBbEQ7QUFDRCxHQUZEOztBQUlBLFNBQU9oOEMsQ0FBUDtBQUNEO0FBRWMsMkVBQVc7QUFDeEIsU0FBTzI3QyxVQUFVLENBQUMxMEQscURBQUksR0FBRzR6RCxLQUFQLENBQWFZLCtEQUFiLENBQUQsQ0FBakI7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUNsQkQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTZ0UsVUFBVCxDQUFvQi9nRSxDQUFwQixFQUF1QjtBQUNyQixTQUFPQSxDQUFDLENBQUM4USxNQUFUO0FBQ0Q7O0FBRUQsU0FBU2t3RCxVQUFULENBQW9CaGhFLENBQXBCLEVBQXVCO0FBQ3JCLFNBQU9BLENBQUMsQ0FBQ29PLE1BQVQ7QUFDRDs7QUFFRCxTQUFTNm1CLElBQVQsQ0FBY2tuQyxLQUFkLEVBQXFCO0FBQ25CLE1BQUlyckQsTUFBTSxHQUFHaXdELFVBQWI7QUFBQSxNQUNJM3lELE1BQU0sR0FBRzR5RCxVQURiO0FBQUEsTUFFSXJoRSxDQUFDLEdBQUdxOEQsd0NBRlI7QUFBQSxNQUdJOTFELENBQUMsR0FBRysxRCx3Q0FIUjtBQUFBLE1BSUk3MEQsT0FBTyxHQUFHLElBSmQ7O0FBTUEsV0FBUzZ0QixJQUFULEdBQWdCO0FBQ2QsUUFBSWppQixNQUFKO0FBQUEsUUFBWUMsSUFBSSxHQUFHclUsNENBQUssQ0FBQ21FLElBQU4sQ0FBV0gsU0FBWCxDQUFuQjtBQUFBLFFBQTBDMkgsQ0FBQyxHQUFHdUcsTUFBTSxDQUFDekosS0FBUCxDQUFhLElBQWIsRUFBbUI0TCxJQUFuQixDQUE5QztBQUFBLFFBQXdFN08sQ0FBQyxHQUFHZ0ssTUFBTSxDQUFDL0csS0FBUCxDQUFhLElBQWIsRUFBbUI0TCxJQUFuQixDQUE1RTtBQUNBLFFBQUksQ0FBQzdMLE9BQUwsRUFBY0EsT0FBTyxHQUFHNEwsTUFBTSxHQUFHbkwsb0RBQUksRUFBdkI7QUFDZHMwRCxTQUFLLENBQUMvMEQsT0FBRCxFQUFVLENBQUN6SCxDQUFDLENBQUMwSCxLQUFGLENBQVEsSUFBUixHQUFlNEwsSUFBSSxDQUFDLENBQUQsQ0FBSixHQUFVMUksQ0FBVixFQUFhMEksSUFBNUIsRUFBWCxFQUErQyxDQUFDL00sQ0FBQyxDQUFDbUIsS0FBRixDQUFRLElBQVIsRUFBYzRMLElBQWQsQ0FBaEQsRUFBcUUsQ0FBQ3RULENBQUMsQ0FBQzBILEtBQUYsQ0FBUSxJQUFSLEdBQWU0TCxJQUFJLENBQUMsQ0FBRCxDQUFKLEdBQVU3TyxDQUFWLEVBQWE2TyxJQUE1QixFQUF0RSxFQUEwRyxDQUFDL00sQ0FBQyxDQUFDbUIsS0FBRixDQUFRLElBQVIsRUFBYzRMLElBQWQsQ0FBM0csQ0FBTDtBQUNBLFFBQUlELE1BQUosRUFBWSxPQUFPNUwsT0FBTyxHQUFHLElBQVYsRUFBZ0I0TCxNQUFNLEdBQUcsRUFBVCxJQUFlLElBQXRDO0FBQ2I7O0FBRURpaUIsTUFBSSxDQUFDbmtCLE1BQUwsR0FBYyxVQUFTbk8sQ0FBVCxFQUFZO0FBQ3hCLFdBQU9DLFNBQVMsQ0FBQ25ELE1BQVYsSUFBb0JxUixNQUFNLEdBQUduTyxDQUFULEVBQVlzeUIsSUFBaEMsSUFBd0Nua0IsTUFBL0M7QUFDRCxHQUZEOztBQUlBbWtCLE1BQUksQ0FBQzdtQixNQUFMLEdBQWMsVUFBU3pMLENBQVQsRUFBWTtBQUN4QixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9CMk8sTUFBTSxHQUFHekwsQ0FBVCxFQUFZc3lCLElBQWhDLElBQXdDN21CLE1BQS9DO0FBQ0QsR0FGRDs7QUFJQTZtQixNQUFJLENBQUN0MUIsQ0FBTCxHQUFTLFVBQVNnRCxDQUFULEVBQVk7QUFDbkIsV0FBT0MsU0FBUyxDQUFDbkQsTUFBVixJQUFvQkUsQ0FBQyxHQUFHLE9BQU9nRCxDQUFQLEtBQWEsVUFBYixHQUEwQkEsQ0FBMUIsR0FBOEJFLHlEQUFRLENBQUMsQ0FBQ0YsQ0FBRixDQUExQyxFQUFnRHN5QixJQUFwRSxJQUE0RXQxQixDQUFuRjtBQUNELEdBRkQ7O0FBSUFzMUIsTUFBSSxDQUFDL3VCLENBQUwsR0FBUyxVQUFTdkQsQ0FBVCxFQUFZO0FBQ25CLFdBQU9DLFNBQVMsQ0FBQ25ELE1BQVYsSUFBb0J5RyxDQUFDLEdBQUcsT0FBT3ZELENBQVAsS0FBYSxVQUFiLEdBQTBCQSxDQUExQixHQUE4QkUseURBQVEsQ0FBQyxDQUFDRixDQUFGLENBQTFDLEVBQWdEc3lCLElBQXBFLElBQTRFL3VCLENBQW5GO0FBQ0QsR0FGRDs7QUFJQSt1QixNQUFJLENBQUM3dEIsT0FBTCxHQUFlLFVBQVN6RSxDQUFULEVBQVk7QUFDekIsV0FBT0MsU0FBUyxDQUFDbkQsTUFBVixJQUFxQjJILE9BQU8sR0FBR3pFLENBQUMsSUFBSSxJQUFMLEdBQVksSUFBWixHQUFtQkEsQ0FBOUIsRUFBa0NzeUIsSUFBdEQsSUFBOEQ3dEIsT0FBckU7QUFDRCxHQUZEOztBQUlBLFNBQU82dEIsSUFBUDtBQUNEOztBQUVELFNBQVNnc0MsZUFBVCxDQUF5Qjc1RCxPQUF6QixFQUFrQ3ZGLEVBQWxDLEVBQXNDdXlCLEVBQXRDLEVBQTBDdHlCLEVBQTFDLEVBQThDdXlCLEVBQTlDLEVBQWtEO0FBQ2hEanRCLFNBQU8sQ0FBQ3NNLE1BQVIsQ0FBZTdSLEVBQWYsRUFBbUJ1eUIsRUFBbkI7QUFDQWh0QixTQUFPLENBQUN5NkMsYUFBUixDQUFzQmhnRCxFQUFFLEdBQUcsQ0FBQ0EsRUFBRSxHQUFHQyxFQUFOLElBQVksQ0FBdkMsRUFBMENzeUIsRUFBMUMsRUFBOEN2eUIsRUFBOUMsRUFBa0R3eUIsRUFBbEQsRUFBc0R2eUIsRUFBdEQsRUFBMER1eUIsRUFBMUQ7QUFDRDs7QUFFRCxTQUFTNnNDLGFBQVQsQ0FBdUI5NUQsT0FBdkIsRUFBZ0N2RixFQUFoQyxFQUFvQ3V5QixFQUFwQyxFQUF3Q3R5QixFQUF4QyxFQUE0Q3V5QixFQUE1QyxFQUFnRDtBQUM5Q2p0QixTQUFPLENBQUNzTSxNQUFSLENBQWU3UixFQUFmLEVBQW1CdXlCLEVBQW5CO0FBQ0FodEIsU0FBTyxDQUFDeTZDLGFBQVIsQ0FBc0JoZ0QsRUFBdEIsRUFBMEJ1eUIsRUFBRSxHQUFHLENBQUNBLEVBQUUsR0FBR0MsRUFBTixJQUFZLENBQTNDLEVBQThDdnlCLEVBQTlDLEVBQWtEc3lCLEVBQWxELEVBQXNEdHlCLEVBQXRELEVBQTBEdXlCLEVBQTFEO0FBQ0Q7O0FBRUQsU0FBU2dwQyxXQUFULENBQXFCajJELE9BQXJCLEVBQThCdkYsRUFBOUIsRUFBa0N1eUIsRUFBbEMsRUFBc0N0eUIsRUFBdEMsRUFBMEN1eUIsRUFBMUMsRUFBOEM7QUFDNUMsTUFBSXBLLEVBQUUsR0FBR2szQyw0REFBVyxDQUFDdC9ELEVBQUQsRUFBS3V5QixFQUFMLENBQXBCO0FBQUEsTUFDSThSLEVBQUUsR0FBR2k3Qiw0REFBVyxDQUFDdC9ELEVBQUQsRUFBS3V5QixFQUFFLEdBQUcsQ0FBQ0EsRUFBRSxHQUFHQyxFQUFOLElBQVksQ0FBdEIsQ0FEcEI7QUFBQSxNQUVJK3NDLEVBQUUsR0FBR0QsNERBQVcsQ0FBQ3IvRCxFQUFELEVBQUtzeUIsRUFBTCxDQUZwQjtBQUFBLE1BR0lpdEMsRUFBRSxHQUFHRiw0REFBVyxDQUFDci9ELEVBQUQsRUFBS3V5QixFQUFMLENBSHBCO0FBSUFqdEIsU0FBTyxDQUFDc00sTUFBUixDQUFldVcsRUFBRSxDQUFDLENBQUQsQ0FBakIsRUFBc0JBLEVBQUUsQ0FBQyxDQUFELENBQXhCO0FBQ0E3aUIsU0FBTyxDQUFDeTZDLGFBQVIsQ0FBc0IzYixFQUFFLENBQUMsQ0FBRCxDQUF4QixFQUE2QkEsRUFBRSxDQUFDLENBQUQsQ0FBL0IsRUFBb0NrN0IsRUFBRSxDQUFDLENBQUQsQ0FBdEMsRUFBMkNBLEVBQUUsQ0FBQyxDQUFELENBQTdDLEVBQWtEQyxFQUFFLENBQUMsQ0FBRCxDQUFwRCxFQUF5REEsRUFBRSxDQUFDLENBQUQsQ0FBM0Q7QUFDRDs7QUFFTSxTQUFTQyxjQUFULEdBQTBCO0FBQy9CLFNBQU9yc0MsSUFBSSxDQUFDZ3NDLGVBQUQsQ0FBWDtBQUNEO0FBRU0sU0FBU00sWUFBVCxHQUF3QjtBQUM3QixTQUFPdHNDLElBQUksQ0FBQ2lzQyxhQUFELENBQVg7QUFDRDtBQUVNLFNBQVNNLFVBQVQsR0FBc0I7QUFDM0IsTUFBSWxnRCxDQUFDLEdBQUcyVCxJQUFJLENBQUNvb0MsV0FBRCxDQUFaO0FBQ0EvN0MsR0FBQyxDQUFDdVYsS0FBRixHQUFVdlYsQ0FBQyxDQUFDM2hCLENBQVosRUFBZSxPQUFPMmhCLENBQUMsQ0FBQzNoQixDQUF4QjtBQUNBMmhCLEdBQUMsQ0FBQzFPLE1BQUYsR0FBVzBPLENBQUMsQ0FBQ3BiLENBQWIsRUFBZ0IsT0FBT29iLENBQUMsQ0FBQ3BiLENBQXpCO0FBQ0EsU0FBT29iLENBQVA7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUNuRkQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFPLElBQUloYyxHQUFHLEdBQUd4RSxJQUFJLENBQUN3RSxHQUFmO0FBQ0EsSUFBSWlkLEtBQUssR0FBR3poQixJQUFJLENBQUN5aEIsS0FBakI7QUFDQSxJQUFJblEsR0FBRyxHQUFHdFIsSUFBSSxDQUFDc1IsR0FBZjtBQUNBLElBQUloUixHQUFHLEdBQUdOLElBQUksQ0FBQ00sR0FBZjtBQUNBLElBQUlELEdBQUcsR0FBR0wsSUFBSSxDQUFDSyxHQUFmO0FBQ0EsSUFBSWtSLEdBQUcsR0FBR3ZSLElBQUksQ0FBQ3VSLEdBQWY7QUFDQSxJQUFJdFIsSUFBSSxHQUFHRCxJQUFJLENBQUNDLElBQWhCO0FBRUEsSUFBSWdGLE9BQU8sR0FBRyxLQUFkO0FBQ0EsSUFBSXVNLEVBQUUsR0FBR3hSLElBQUksQ0FBQ3lSLEVBQWQ7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLEVBQUUsR0FBRyxDQUFsQjtBQUNBLElBQUlYLEdBQUcsR0FBRyxJQUFJVyxFQUFkO0FBRUEsU0FBU2d1QixJQUFULENBQWMzZ0MsQ0FBZCxFQUFpQjtBQUN0QixTQUFPQSxDQUFDLEdBQUcsQ0FBSixHQUFRLENBQVIsR0FBWUEsQ0FBQyxHQUFHLENBQUMsQ0FBTCxHQUFTMlMsRUFBVCxHQUFjeFIsSUFBSSxDQUFDdy9CLElBQUwsQ0FBVTNnQyxDQUFWLENBQWpDO0FBQ0Q7QUFFTSxTQUFTMHdCLElBQVQsQ0FBYzF3QixDQUFkLEVBQWlCO0FBQ3RCLFNBQU9BLENBQUMsSUFBSSxDQUFMLEdBQVM2UyxNQUFULEdBQWtCN1MsQ0FBQyxJQUFJLENBQUMsQ0FBTixHQUFVLENBQUM2UyxNQUFYLEdBQW9CMVIsSUFBSSxDQUFDdXZCLElBQUwsQ0FBVTF3QixDQUFWLENBQTdDO0FBQ0QsQzs7Ozs7Ozs7Ozs7O0FDbkJEO0FBQWUsMkVBQVcsQ0FBRSxDOzs7Ozs7Ozs7Ozs7QUNBNUI7QUFBZSx5RUFBUzhoRSxNQUFULEVBQWlCejVELEtBQWpCLEVBQXdCO0FBQ3JDLE1BQUksRUFBRSxDQUFDL0csQ0FBQyxHQUFHd2dFLE1BQU0sQ0FBQ2hpRSxNQUFaLElBQXNCLENBQXhCLENBQUosRUFBZ0M7O0FBQ2hDLE9BQUssSUFBSWdCLENBQUosRUFBTzhDLENBQUMsR0FBRyxDQUFYLEVBQWN2RCxDQUFkLEVBQWlCc1AsRUFBakIsRUFBcUI0MEMsRUFBckIsRUFBeUJ3ZCxFQUF6QixFQUE2QnpnRSxDQUE3QixFQUFnQ21CLENBQUMsR0FBR3EvRCxNQUFNLENBQUN6NUQsS0FBSyxDQUFDLENBQUQsQ0FBTixDQUFOLENBQWlCdkksTUFBMUQsRUFBa0U4RCxDQUFDLEdBQUduQixDQUF0RSxFQUF5RSxFQUFFbUIsQ0FBM0UsRUFBOEU7QUFDNUUsU0FBSzJnRCxFQUFFLEdBQUd3ZCxFQUFFLEdBQUcsQ0FBVixFQUFhamhFLENBQUMsR0FBRyxDQUF0QixFQUF5QkEsQ0FBQyxHQUFHUSxDQUE3QixFQUFnQyxFQUFFUixDQUFsQyxFQUFxQztBQUNuQyxVQUFJLENBQUM2TyxFQUFFLEdBQUcsQ0FBQ3RQLENBQUMsR0FBR3loRSxNQUFNLENBQUN6NUQsS0FBSyxDQUFDdkgsQ0FBRCxDQUFOLENBQU4sQ0FBaUI4QyxDQUFqQixDQUFMLEVBQTBCLENBQTFCLElBQStCdkQsQ0FBQyxDQUFDLENBQUQsQ0FBdEMsS0FBOEMsQ0FBbEQsRUFBcUQ7QUFDbkRBLFNBQUMsQ0FBQyxDQUFELENBQUQsR0FBT2trRCxFQUFQLEVBQVdsa0QsQ0FBQyxDQUFDLENBQUQsQ0FBRCxHQUFPa2tELEVBQUUsSUFBSTUwQyxFQUF4QjtBQUNELE9BRkQsTUFFTyxJQUFJQSxFQUFFLEdBQUcsQ0FBVCxFQUFZO0FBQ2pCdFAsU0FBQyxDQUFDLENBQUQsQ0FBRCxHQUFPMGhFLEVBQVAsRUFBVzFoRSxDQUFDLENBQUMsQ0FBRCxDQUFELEdBQU8waEUsRUFBRSxJQUFJcHlELEVBQXhCO0FBQ0QsT0FGTSxNQUVBO0FBQ0x0UCxTQUFDLENBQUMsQ0FBRCxDQUFELEdBQU9ra0QsRUFBUDtBQUNEO0FBQ0Y7QUFDRjtBQUNGLEM7Ozs7Ozs7Ozs7OztBQ2JEO0FBQUE7QUFBQTtBQUVlLHlFQUFTdWQsTUFBVCxFQUFpQno1RCxLQUFqQixFQUF3QjtBQUNyQyxNQUFJLEVBQUUsQ0FBQy9HLENBQUMsR0FBR3dnRSxNQUFNLENBQUNoaUUsTUFBWixJQUFzQixDQUF4QixDQUFKLEVBQWdDOztBQUNoQyxPQUFLLElBQUlnQixDQUFKLEVBQU9RLENBQVAsRUFBVXNDLENBQUMsR0FBRyxDQUFkLEVBQWlCbkIsQ0FBQyxHQUFHcS9ELE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVWhpRSxNQUEvQixFQUF1Q3lHLENBQTVDLEVBQStDM0MsQ0FBQyxHQUFHbkIsQ0FBbkQsRUFBc0QsRUFBRW1CLENBQXhELEVBQTJEO0FBQ3pELFNBQUsyQyxDQUFDLEdBQUd6RixDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHUSxDQUFwQixFQUF1QixFQUFFUixDQUF6QjtBQUE0QnlGLE9BQUMsSUFBSXU3RCxNQUFNLENBQUNoaEUsQ0FBRCxDQUFOLENBQVU4QyxDQUFWLEVBQWEsQ0FBYixLQUFtQixDQUF4QjtBQUE1Qjs7QUFDQSxRQUFJMkMsQ0FBSixFQUFPLEtBQUt6RixDQUFDLEdBQUcsQ0FBVCxFQUFZQSxDQUFDLEdBQUdRLENBQWhCLEVBQW1CLEVBQUVSLENBQXJCO0FBQXdCZ2hFLFlBQU0sQ0FBQ2hoRSxDQUFELENBQU4sQ0FBVThDLENBQVYsRUFBYSxDQUFiLEtBQW1CMkMsQ0FBbkI7QUFBeEI7QUFDUjs7QUFDRHd6RCx1REFBSSxDQUFDK0gsTUFBRCxFQUFTejVELEtBQVQsQ0FBSjtBQUNELEM7Ozs7Ozs7Ozs7OztBQ1REO0FBQWUseUVBQVN5NUQsTUFBVCxFQUFpQno1RCxLQUFqQixFQUF3QjtBQUNyQyxNQUFJLEVBQUUsQ0FBQy9HLENBQUMsR0FBR3dnRSxNQUFNLENBQUNoaUUsTUFBWixJQUFzQixDQUF4QixDQUFKLEVBQWdDOztBQUNoQyxPQUFLLElBQUlnQixDQUFDLEdBQUcsQ0FBUixFQUFXOEMsQ0FBWCxFQUFjNEwsRUFBZCxFQUFrQkMsRUFBRSxHQUFHcXlELE1BQU0sQ0FBQ3o1RCxLQUFLLENBQUMsQ0FBRCxDQUFOLENBQTdCLEVBQXlDL0csQ0FBekMsRUFBNENtQixDQUFDLEdBQUdnTixFQUFFLENBQUMzUCxNQUF4RCxFQUFnRWdCLENBQUMsR0FBR1EsQ0FBcEUsRUFBdUUsRUFBRVIsQ0FBekUsRUFBNEU7QUFDMUUwTyxNQUFFLEdBQUdDLEVBQUwsRUFBU0EsRUFBRSxHQUFHcXlELE1BQU0sQ0FBQ3o1RCxLQUFLLENBQUN2SCxDQUFELENBQU4sQ0FBcEI7O0FBQ0EsU0FBSzhDLENBQUMsR0FBRyxDQUFULEVBQVlBLENBQUMsR0FBR25CLENBQWhCLEVBQW1CLEVBQUVtQixDQUFyQixFQUF3QjtBQUN0QjZMLFFBQUUsQ0FBQzdMLENBQUQsQ0FBRixDQUFNLENBQU4sS0FBWTZMLEVBQUUsQ0FBQzdMLENBQUQsQ0FBRixDQUFNLENBQU4sSUFBV04sS0FBSyxDQUFDa00sRUFBRSxDQUFDNUwsQ0FBRCxDQUFGLENBQU0sQ0FBTixDQUFELENBQUwsR0FBa0I0TCxFQUFFLENBQUM1TCxDQUFELENBQUYsQ0FBTSxDQUFOLENBQWxCLEdBQTZCNEwsRUFBRSxDQUFDNUwsQ0FBRCxDQUFGLENBQU0sQ0FBTixDQUFwRDtBQUNEO0FBQ0Y7QUFDRixDOzs7Ozs7Ozs7Ozs7QUNSRDtBQUFBO0FBQUE7QUFFZSx5RUFBU2srRCxNQUFULEVBQWlCejVELEtBQWpCLEVBQXdCO0FBQ3JDLE1BQUksRUFBRSxDQUFDL0csQ0FBQyxHQUFHd2dFLE1BQU0sQ0FBQ2hpRSxNQUFaLElBQXNCLENBQXhCLENBQUosRUFBZ0M7O0FBQ2hDLE9BQUssSUFBSThELENBQUMsR0FBRyxDQUFSLEVBQVc0TCxFQUFFLEdBQUdzeUQsTUFBTSxDQUFDejVELEtBQUssQ0FBQyxDQUFELENBQU4sQ0FBdEIsRUFBa0MvRyxDQUFsQyxFQUFxQ21CLENBQUMsR0FBRytNLEVBQUUsQ0FBQzFQLE1BQWpELEVBQXlEOEQsQ0FBQyxHQUFHbkIsQ0FBN0QsRUFBZ0UsRUFBRW1CLENBQWxFLEVBQXFFO0FBQ25FLFNBQUssSUFBSTlDLENBQUMsR0FBRyxDQUFSLEVBQVd5RixDQUFDLEdBQUcsQ0FBcEIsRUFBdUJ6RixDQUFDLEdBQUdRLENBQTNCLEVBQThCLEVBQUVSLENBQWhDO0FBQW1DeUYsT0FBQyxJQUFJdTdELE1BQU0sQ0FBQ2hoRSxDQUFELENBQU4sQ0FBVThDLENBQVYsRUFBYSxDQUFiLEtBQW1CLENBQXhCO0FBQW5DOztBQUNBNEwsTUFBRSxDQUFDNUwsQ0FBRCxDQUFGLENBQU0sQ0FBTixLQUFZNEwsRUFBRSxDQUFDNUwsQ0FBRCxDQUFGLENBQU0sQ0FBTixJQUFXLENBQUMyQyxDQUFELEdBQUssQ0FBNUI7QUFDRDs7QUFDRHd6RCx1REFBSSxDQUFDK0gsTUFBRCxFQUFTejVELEtBQVQsQ0FBSjtBQUNELEM7Ozs7Ozs7Ozs7OztBQ1REO0FBQUE7QUFBQTtBQUVlLHlFQUFTeTVELE1BQVQsRUFBaUJ6NUQsS0FBakIsRUFBd0I7QUFDckMsTUFBSSxFQUFFLENBQUMvRyxDQUFDLEdBQUd3Z0UsTUFBTSxDQUFDaGlFLE1BQVosSUFBc0IsQ0FBeEIsS0FBOEIsRUFBRSxDQUFDMkMsQ0FBQyxHQUFHLENBQUMrTSxFQUFFLEdBQUdzeUQsTUFBTSxDQUFDejVELEtBQUssQ0FBQyxDQUFELENBQU4sQ0FBWixFQUF3QnZJLE1BQTdCLElBQXVDLENBQXpDLENBQWxDLEVBQStFOztBQUMvRSxPQUFLLElBQUl5RyxDQUFDLEdBQUcsQ0FBUixFQUFXM0MsQ0FBQyxHQUFHLENBQWYsRUFBa0I0TCxFQUFsQixFQUFzQi9NLENBQXRCLEVBQXlCbkIsQ0FBOUIsRUFBaUNzQyxDQUFDLEdBQUduQixDQUFyQyxFQUF3QyxFQUFFbUIsQ0FBMUMsRUFBNkM7QUFDM0MsU0FBSyxJQUFJOUMsQ0FBQyxHQUFHLENBQVIsRUFBVzJPLEVBQUUsR0FBRyxDQUFoQixFQUFtQnV5RCxFQUFFLEdBQUcsQ0FBN0IsRUFBZ0NsaEUsQ0FBQyxHQUFHUSxDQUFwQyxFQUF1QyxFQUFFUixDQUF6QyxFQUE0QztBQUMxQyxVQUFJbWhFLEVBQUUsR0FBR0gsTUFBTSxDQUFDejVELEtBQUssQ0FBQ3ZILENBQUQsQ0FBTixDQUFmO0FBQUEsVUFDSW9oRSxJQUFJLEdBQUdELEVBQUUsQ0FBQ3IrRCxDQUFELENBQUYsQ0FBTSxDQUFOLEtBQVksQ0FEdkI7QUFBQSxVQUVJdStELElBQUksR0FBR0YsRUFBRSxDQUFDcitELENBQUMsR0FBRyxDQUFMLENBQUYsQ0FBVSxDQUFWLEtBQWdCLENBRjNCO0FBQUEsVUFHSXcrRCxFQUFFLEdBQUcsQ0FBQ0YsSUFBSSxHQUFHQyxJQUFSLElBQWdCLENBSHpCOztBQUlBLFdBQUssSUFBSTU2RCxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHekcsQ0FBcEIsRUFBdUIsRUFBRXlHLENBQXpCLEVBQTRCO0FBQzFCLFlBQUl1eEMsRUFBRSxHQUFHZ3BCLE1BQU0sQ0FBQ3o1RCxLQUFLLENBQUNkLENBQUQsQ0FBTixDQUFmO0FBQUEsWUFDSTg2RCxJQUFJLEdBQUd2cEIsRUFBRSxDQUFDbDFDLENBQUQsQ0FBRixDQUFNLENBQU4sS0FBWSxDQUR2QjtBQUFBLFlBRUkwK0QsSUFBSSxHQUFHeHBCLEVBQUUsQ0FBQ2wxQyxDQUFDLEdBQUcsQ0FBTCxDQUFGLENBQVUsQ0FBVixLQUFnQixDQUYzQjtBQUdBdytELFVBQUUsSUFBSUMsSUFBSSxHQUFHQyxJQUFiO0FBQ0Q7O0FBQ0Q3eUQsUUFBRSxJQUFJeXlELElBQU4sRUFBWUYsRUFBRSxJQUFJSSxFQUFFLEdBQUdGLElBQXZCO0FBQ0Q7O0FBQ0QxeUQsTUFBRSxDQUFDNUwsQ0FBQyxHQUFHLENBQUwsQ0FBRixDQUFVLENBQVYsS0FBZ0I0TCxFQUFFLENBQUM1TCxDQUFDLEdBQUcsQ0FBTCxDQUFGLENBQVUsQ0FBVixJQUFlMkMsQ0FBL0I7QUFDQSxRQUFJa0osRUFBSixFQUFRbEosQ0FBQyxJQUFJeTdELEVBQUUsR0FBR3Z5RCxFQUFWO0FBQ1Q7O0FBQ0RELElBQUUsQ0FBQzVMLENBQUMsR0FBRyxDQUFMLENBQUYsQ0FBVSxDQUFWLEtBQWdCNEwsRUFBRSxDQUFDNUwsQ0FBQyxHQUFHLENBQUwsQ0FBRixDQUFVLENBQVYsSUFBZTJDLENBQS9CO0FBQ0F3ekQsdURBQUksQ0FBQytILE1BQUQsRUFBU3o1RCxLQUFULENBQUo7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUN2QkQ7QUFBQTtBQUFBO0FBRWUseUVBQVN5NUQsTUFBVCxFQUFpQjtBQUM5QixNQUFJUyxLQUFLLEdBQUdULE1BQU0sQ0FBQzVpRSxHQUFQLENBQVdzakUsSUFBWCxDQUFaO0FBQ0EsU0FBT3pJLHFEQUFJLENBQUMrSCxNQUFELENBQUosQ0FBYXArRCxJQUFiLENBQWtCLFVBQVN2RSxDQUFULEVBQVlDLENBQVosRUFBZTtBQUFFLFdBQU9takUsS0FBSyxDQUFDcGpFLENBQUQsQ0FBTCxHQUFXb2pFLEtBQUssQ0FBQ25qRSxDQUFELENBQXZCO0FBQTZCLEdBQWhFLENBQVA7QUFDRDs7QUFFRCxTQUFTb2pFLElBQVQsQ0FBY1YsTUFBZCxFQUFzQjtBQUNwQixNQUFJaGhFLENBQUMsR0FBRyxDQUFDLENBQVQ7QUFBQSxNQUFZOEMsQ0FBQyxHQUFHLENBQWhCO0FBQUEsTUFBbUJ0QyxDQUFDLEdBQUd3Z0UsTUFBTSxDQUFDaGlFLE1BQTlCO0FBQUEsTUFBc0MyaUUsRUFBdEM7QUFBQSxNQUEwQ0MsRUFBRSxHQUFHLENBQUM5c0MsUUFBaEQ7O0FBQ0EsU0FBTyxFQUFFOTBCLENBQUYsR0FBTVEsQ0FBYjtBQUFnQixRQUFJLENBQUNtaEUsRUFBRSxHQUFHLENBQUNYLE1BQU0sQ0FBQ2hoRSxDQUFELENBQU4sQ0FBVSxDQUFWLENBQVAsSUFBdUI0aEUsRUFBM0IsRUFBK0JBLEVBQUUsR0FBR0QsRUFBTCxFQUFTNytELENBQUMsR0FBRzlDLENBQWI7QUFBL0M7O0FBQ0EsU0FBTzhDLENBQVA7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUNYRDtBQUFBO0FBQUE7QUFBQTtBQUVlLHlFQUFTaytELE1BQVQsRUFBaUI7QUFDOUIsTUFBSXptQixJQUFJLEdBQUd5bUIsTUFBTSxDQUFDNWlFLEdBQVAsQ0FBV21FLEdBQVgsQ0FBWDtBQUNBLFNBQU8wMkQscURBQUksQ0FBQytILE1BQUQsQ0FBSixDQUFhcCtELElBQWIsQ0FBa0IsVUFBU3ZFLENBQVQsRUFBWUMsQ0FBWixFQUFlO0FBQUUsV0FBT2k4QyxJQUFJLENBQUNsOEMsQ0FBRCxDQUFKLEdBQVVrOEMsSUFBSSxDQUFDajhDLENBQUQsQ0FBckI7QUFBMkIsR0FBOUQsQ0FBUDtBQUNEO0FBRU0sU0FBU2lFLEdBQVQsQ0FBYXkrRCxNQUFiLEVBQXFCO0FBQzFCLE1BQUlsM0QsQ0FBQyxHQUFHLENBQVI7QUFBQSxNQUFXOUosQ0FBQyxHQUFHLENBQUMsQ0FBaEI7QUFBQSxNQUFtQlEsQ0FBQyxHQUFHd2dFLE1BQU0sQ0FBQ2hpRSxNQUE5QjtBQUFBLE1BQXNDbUIsQ0FBdEM7O0FBQ0EsU0FBTyxFQUFFSCxDQUFGLEdBQU1RLENBQWI7QUFBZ0IsUUFBSUwsQ0FBQyxHQUFHLENBQUM2Z0UsTUFBTSxDQUFDaGhFLENBQUQsQ0FBTixDQUFVLENBQVYsQ0FBVCxFQUF1QjhKLENBQUMsSUFBSTNKLENBQUw7QUFBdkM7O0FBQ0EsU0FBTzJKLENBQVA7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUNYRDtBQUFBO0FBQUE7QUFFZSx5RUFBU2szRCxNQUFULEVBQWlCO0FBQzlCLFNBQU90aUUsMERBQVMsQ0FBQ3NpRSxNQUFELENBQVQsQ0FBa0IzOEQsT0FBbEIsRUFBUDtBQUNELEM7Ozs7Ozs7Ozs7OztBQ0pEO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFZSx5RUFBUzI4RCxNQUFULEVBQWlCO0FBQzlCLE1BQUl4Z0UsQ0FBQyxHQUFHd2dFLE1BQU0sQ0FBQ2hpRSxNQUFmO0FBQUEsTUFDSWdCLENBREo7QUFBQSxNQUVJOEMsQ0FGSjtBQUFBLE1BR0l5M0MsSUFBSSxHQUFHeW1CLE1BQU0sQ0FBQzVpRSxHQUFQLENBQVdtRSw4Q0FBWCxDQUhYO0FBQUEsTUFJSWdGLEtBQUssR0FBR3M2RCwyREFBVSxDQUFDYixNQUFELENBSnRCO0FBQUEsTUFLSTU3RCxHQUFHLEdBQUcsQ0FMVjtBQUFBLE1BTUlDLE1BQU0sR0FBRyxDQU5iO0FBQUEsTUFPSXk4RCxJQUFJLEdBQUcsRUFQWDtBQUFBLE1BUUlDLE9BQU8sR0FBRyxFQVJkOztBQVVBLE9BQUsvaEUsQ0FBQyxHQUFHLENBQVQsRUFBWUEsQ0FBQyxHQUFHUSxDQUFoQixFQUFtQixFQUFFUixDQUFyQixFQUF3QjtBQUN0QjhDLEtBQUMsR0FBR3lFLEtBQUssQ0FBQ3ZILENBQUQsQ0FBVDs7QUFDQSxRQUFJb0YsR0FBRyxHQUFHQyxNQUFWLEVBQWtCO0FBQ2hCRCxTQUFHLElBQUltMUMsSUFBSSxDQUFDejNDLENBQUQsQ0FBWDtBQUNBZy9ELFVBQUksQ0FBQzcvRCxJQUFMLENBQVVhLENBQVY7QUFDRCxLQUhELE1BR087QUFDTHVDLFlBQU0sSUFBSWsxQyxJQUFJLENBQUN6M0MsQ0FBRCxDQUFkO0FBQ0FpL0QsYUFBTyxDQUFDOS9ELElBQVIsQ0FBYWEsQ0FBYjtBQUNEO0FBQ0Y7O0FBRUQsU0FBT2kvRCxPQUFPLENBQUMxOUQsT0FBUixHQUFrQndoQixNQUFsQixDQUF5Qmk4QyxJQUF6QixDQUFQO0FBQ0QsQzs7Ozs7Ozs7Ozs7O0FDMUJEO0FBQWUseUVBQVNkLE1BQVQsRUFBaUI7QUFDOUIsTUFBSXhnRSxDQUFDLEdBQUd3Z0UsTUFBTSxDQUFDaGlFLE1BQWY7QUFBQSxNQUF1QmlWLENBQUMsR0FBRyxJQUFJaFcsS0FBSixDQUFVdUMsQ0FBVixDQUEzQjs7QUFDQSxTQUFPLEVBQUVBLENBQUYsSUFBTyxDQUFkO0FBQWlCeVQsS0FBQyxDQUFDelQsQ0FBRCxDQUFELEdBQU9BLENBQVA7QUFBakI7O0FBQ0EsU0FBT3lULENBQVA7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUNKRDtBQUFBO0FBQUE7QUFFZSx5RUFBUytzRCxNQUFULEVBQWlCO0FBQzlCLFNBQU8vSCxxREFBSSxDQUFDK0gsTUFBRCxDQUFKLENBQWEzOEQsT0FBYixFQUFQO0FBQ0QsQzs7Ozs7Ozs7Ozs7O0FDSkQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRWUsMkVBQVc7QUFDeEIsTUFBSTVELEtBQUssR0FBR0csaURBQVo7QUFBQSxNQUNJdVQsVUFBVSxHQUFHNnRELG1EQURqQjtBQUFBLE1BRUlwL0QsSUFBSSxHQUFHLElBRlg7QUFBQSxNQUdJNk8sVUFBVSxHQUFHclAseURBQVEsQ0FBQyxDQUFELENBSHpCO0FBQUEsTUFJSXNQLFFBQVEsR0FBR3RQLHlEQUFRLENBQUM4Tyx5Q0FBRCxDQUp2QjtBQUFBLE1BS0laLFFBQVEsR0FBR2xPLHlEQUFRLENBQUMsQ0FBRCxDQUx2Qjs7QUFPQSxXQUFTNi9ELEdBQVQsQ0FBYS9nRSxJQUFiLEVBQW1CO0FBQ2pCLFFBQUlsQixDQUFKO0FBQUEsUUFDSVEsQ0FBQyxHQUFHVSxJQUFJLENBQUNsQyxNQURiO0FBQUEsUUFFSThELENBRko7QUFBQSxRQUdJMkQsQ0FISjtBQUFBLFFBSUlsRSxHQUFHLEdBQUcsQ0FKVjtBQUFBLFFBS0lnUCxLQUFLLEdBQUcsSUFBSXRULEtBQUosQ0FBVXVDLENBQVYsQ0FMWjtBQUFBLFFBTUkwaEUsSUFBSSxHQUFHLElBQUlqa0UsS0FBSixDQUFVdUMsQ0FBVixDQU5YO0FBQUEsUUFPSTZRLEVBQUUsR0FBRyxDQUFDSSxVQUFVLENBQUM3SyxLQUFYLENBQWlCLElBQWpCLEVBQXVCekUsU0FBdkIsQ0FQVjtBQUFBLFFBUUlnZ0QsRUFBRSxHQUFHOWhELElBQUksQ0FBQ0ssR0FBTCxDQUFTd1EseUNBQVQsRUFBYzdRLElBQUksQ0FBQ00sR0FBTCxDQUFTLENBQUN1USx5Q0FBVixFQUFlUSxRQUFRLENBQUM5SyxLQUFULENBQWUsSUFBZixFQUFxQnpFLFNBQXJCLElBQWtDa1AsRUFBakQsQ0FBZCxDQVJUO0FBQUEsUUFTSUMsRUFUSjtBQUFBLFFBVUl0TyxDQUFDLEdBQUczQyxJQUFJLENBQUNLLEdBQUwsQ0FBU0wsSUFBSSxDQUFDd0UsR0FBTCxDQUFTczlDLEVBQVQsSUFBZTNoRCxDQUF4QixFQUEyQjhQLFFBQVEsQ0FBQzFKLEtBQVQsQ0FBZSxJQUFmLEVBQXFCekUsU0FBckIsQ0FBM0IsQ0FWUjtBQUFBLFFBV0l5L0IsRUFBRSxHQUFHNStCLENBQUMsSUFBSW0vQyxFQUFFLEdBQUcsQ0FBTCxHQUFTLENBQUMsQ0FBVixHQUFjLENBQWxCLENBWFY7QUFBQSxRQVlJaGlELENBWko7O0FBY0EsU0FBS0gsQ0FBQyxHQUFHLENBQVQsRUFBWUEsQ0FBQyxHQUFHUSxDQUFoQixFQUFtQixFQUFFUixDQUFyQixFQUF3QjtBQUN0QixVQUFJLENBQUNHLENBQUMsR0FBRytoRSxJQUFJLENBQUMzd0QsS0FBSyxDQUFDdlIsQ0FBRCxDQUFMLEdBQVdBLENBQVosQ0FBSixHQUFxQixDQUFDUyxLQUFLLENBQUNTLElBQUksQ0FBQ2xCLENBQUQsQ0FBTCxFQUFVQSxDQUFWLEVBQWFrQixJQUFiLENBQWhDLElBQXNELENBQTFELEVBQTZEO0FBQzNEcUIsV0FBRyxJQUFJcEMsQ0FBUDtBQUNEO0FBQ0YsS0FuQmdCLENBcUJqQjs7O0FBQ0EsUUFBSWdVLFVBQVUsSUFBSSxJQUFsQixFQUF3QjVDLEtBQUssQ0FBQzNPLElBQU4sQ0FBVyxVQUFTNUMsQ0FBVCxFQUFZOEMsQ0FBWixFQUFlO0FBQUUsYUFBT3FSLFVBQVUsQ0FBQyt0RCxJQUFJLENBQUNsaUUsQ0FBRCxDQUFMLEVBQVVraUUsSUFBSSxDQUFDcC9ELENBQUQsQ0FBZCxDQUFqQjtBQUFzQyxLQUFsRSxFQUF4QixLQUNLLElBQUlGLElBQUksSUFBSSxJQUFaLEVBQWtCMk8sS0FBSyxDQUFDM08sSUFBTixDQUFXLFVBQVM1QyxDQUFULEVBQVk4QyxDQUFaLEVBQWU7QUFBRSxhQUFPRixJQUFJLENBQUMxQixJQUFJLENBQUNsQixDQUFELENBQUwsRUFBVWtCLElBQUksQ0FBQzRCLENBQUQsQ0FBZCxDQUFYO0FBQWdDLEtBQTVELEVBdkJOLENBeUJqQjs7QUFDQSxTQUFLOUMsQ0FBQyxHQUFHLENBQUosRUFBT3lHLENBQUMsR0FBR2xFLEdBQUcsR0FBRyxDQUFDNC9DLEVBQUUsR0FBRzNoRCxDQUFDLEdBQUdvaEMsRUFBVixJQUFnQnIvQixHQUFuQixHQUF5QixDQUE1QyxFQUErQ3ZDLENBQUMsR0FBR1EsQ0FBbkQsRUFBc0QsRUFBRVIsQ0FBRixFQUFLcVIsRUFBRSxHQUFHQyxFQUFoRSxFQUFvRTtBQUNsRXhPLE9BQUMsR0FBR3lPLEtBQUssQ0FBQ3ZSLENBQUQsQ0FBVCxFQUFjRyxDQUFDLEdBQUcraEUsSUFBSSxDQUFDcC9ELENBQUQsQ0FBdEIsRUFBMkJ3TyxFQUFFLEdBQUdELEVBQUUsSUFBSWxSLENBQUMsR0FBRyxDQUFKLEdBQVFBLENBQUMsR0FBR3NHLENBQVosR0FBZ0IsQ0FBcEIsQ0FBRixHQUEyQm03QixFQUEzRCxFQUErRHNnQyxJQUFJLENBQUNwL0QsQ0FBRCxDQUFKLEdBQVU7QUFDdkU1QixZQUFJLEVBQUVBLElBQUksQ0FBQzRCLENBQUQsQ0FENkQ7QUFFdkV5TyxhQUFLLEVBQUV2UixDQUZnRTtBQUd2RVMsYUFBSyxFQUFFTixDQUhnRTtBQUl2RXNSLGtCQUFVLEVBQUVKLEVBSjJEO0FBS3ZFSyxnQkFBUSxFQUFFSixFQUw2RDtBQU12RWhCLGdCQUFRLEVBQUV0TjtBQU42RCxPQUF6RTtBQVFEOztBQUVELFdBQU9rL0QsSUFBUDtBQUNEOztBQUVERCxLQUFHLENBQUN4aEUsS0FBSixHQUFZLFVBQVN5QixDQUFULEVBQVk7QUFDdEIsV0FBT0MsU0FBUyxDQUFDbkQsTUFBVixJQUFvQnlCLEtBQUssR0FBRyxPQUFPeUIsQ0FBUCxLQUFhLFVBQWIsR0FBMEJBLENBQTFCLEdBQThCRSx5REFBUSxDQUFDLENBQUNGLENBQUYsQ0FBOUMsRUFBb0QrL0QsR0FBeEUsSUFBK0V4aEUsS0FBdEY7QUFDRCxHQUZEOztBQUlBd2hFLEtBQUcsQ0FBQzl0RCxVQUFKLEdBQWlCLFVBQVNqUyxDQUFULEVBQVk7QUFDM0IsV0FBT0MsU0FBUyxDQUFDbkQsTUFBVixJQUFvQm1WLFVBQVUsR0FBR2pTLENBQWIsRUFBZ0JVLElBQUksR0FBRyxJQUF2QixFQUE2QnEvRCxHQUFqRCxJQUF3RDl0RCxVQUEvRDtBQUNELEdBRkQ7O0FBSUE4dEQsS0FBRyxDQUFDci9ELElBQUosR0FBVyxVQUFTVixDQUFULEVBQVk7QUFDckIsV0FBT0MsU0FBUyxDQUFDbkQsTUFBVixJQUFvQjRELElBQUksR0FBR1YsQ0FBUCxFQUFVaVMsVUFBVSxHQUFHLElBQXZCLEVBQTZCOHRELEdBQWpELElBQXdEci9ELElBQS9EO0FBQ0QsR0FGRDs7QUFJQXEvRCxLQUFHLENBQUN4d0QsVUFBSixHQUFpQixVQUFTdlAsQ0FBVCxFQUFZO0FBQzNCLFdBQU9DLFNBQVMsQ0FBQ25ELE1BQVYsSUFBb0J5UyxVQUFVLEdBQUcsT0FBT3ZQLENBQVAsS0FBYSxVQUFiLEdBQTBCQSxDQUExQixHQUE4QkUseURBQVEsQ0FBQyxDQUFDRixDQUFGLENBQW5ELEVBQXlEKy9ELEdBQTdFLElBQW9GeHdELFVBQTNGO0FBQ0QsR0FGRDs7QUFJQXd3RCxLQUFHLENBQUN2d0QsUUFBSixHQUFlLFVBQVN4UCxDQUFULEVBQVk7QUFDekIsV0FBT0MsU0FBUyxDQUFDbkQsTUFBVixJQUFvQjBTLFFBQVEsR0FBRyxPQUFPeFAsQ0FBUCxLQUFhLFVBQWIsR0FBMEJBLENBQTFCLEdBQThCRSx5REFBUSxDQUFDLENBQUNGLENBQUYsQ0FBakQsRUFBdUQrL0QsR0FBM0UsSUFBa0Z2d0QsUUFBekY7QUFDRCxHQUZEOztBQUlBdXdELEtBQUcsQ0FBQzN4RCxRQUFKLEdBQWUsVUFBU3BPLENBQVQsRUFBWTtBQUN6QixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9Cc1IsUUFBUSxHQUFHLE9BQU9wTyxDQUFQLEtBQWEsVUFBYixHQUEwQkEsQ0FBMUIsR0FBOEJFLHlEQUFRLENBQUMsQ0FBQ0YsQ0FBRixDQUFqRCxFQUF1RCsvRCxHQUEzRSxJQUFrRjN4RCxRQUF6RjtBQUNELEdBRkQ7O0FBSUEsU0FBTzJ4RCxHQUFQO0FBQ0QsQzs7Ozs7Ozs7Ozs7O0FDOUVEO0FBQUE7QUFBQTtBQUFPLFNBQVMvaUUsQ0FBVCxDQUFXOEQsQ0FBWCxFQUFjO0FBQ25CLFNBQU9BLENBQUMsQ0FBQyxDQUFELENBQVI7QUFDRDtBQUVNLFNBQVN5QyxDQUFULENBQVd6QyxDQUFYLEVBQWM7QUFDbkIsU0FBT0EsQ0FBQyxDQUFDLENBQUQsQ0FBUjtBQUNELEM7Ozs7Ozs7Ozs7OztBQ05EO0FBQWUseUVBQVM5RCxDQUFULEVBQVl1RyxDQUFaLEVBQWU7QUFDNUIsU0FBTyxDQUFDLENBQUNBLENBQUMsR0FBRyxDQUFDQSxDQUFOLElBQVdwRixJQUFJLENBQUNzUixHQUFMLENBQVN6UyxDQUFDLElBQUltQixJQUFJLENBQUN5UixFQUFMLEdBQVUsQ0FBeEIsQ0FBWixFQUF3Q3JNLENBQUMsR0FBR3BGLElBQUksQ0FBQ3VSLEdBQUwsQ0FBUzFTLENBQVQsQ0FBNUMsQ0FBUDtBQUNELEM7Ozs7Ozs7Ozs7OztBQ0ZEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTaWpFLFVBQVQsQ0FBb0I1aUUsQ0FBcEIsRUFBdUIrVCxHQUF2QixFQUE0QjtBQUMxQixTQUFPL1QsQ0FBQyxDQUFDK1QsR0FBRCxDQUFSO0FBQ0Q7O0FBRWMsMkVBQVc7QUFDeEIsTUFBSUMsSUFBSSxHQUFHblIseURBQVEsQ0FBQyxFQUFELENBQW5CO0FBQUEsTUFDSW1GLEtBQUssR0FBRzY2RCxtREFEWjtBQUFBLE1BRUl4OEQsTUFBTSxHQUFHeThELG9EQUZiO0FBQUEsTUFHSTVoRSxLQUFLLEdBQUcwaEUsVUFIWjs7QUFLQSxXQUFTRyxLQUFULENBQWVwaEUsSUFBZixFQUFxQjtBQUNuQixRQUFJcWhFLEVBQUUsR0FBR2h2RCxJQUFJLENBQUMzTSxLQUFMLENBQVcsSUFBWCxFQUFpQnpFLFNBQWpCLENBQVQ7QUFBQSxRQUNJbkMsQ0FESjtBQUFBLFFBRUkyQixDQUFDLEdBQUdULElBQUksQ0FBQ2xDLE1BRmI7QUFBQSxRQUdJd0IsQ0FBQyxHQUFHK2hFLEVBQUUsQ0FBQ3ZqRSxNQUhYO0FBQUEsUUFJSXdqRSxFQUFFLEdBQUcsSUFBSXZrRSxLQUFKLENBQVV1QyxDQUFWLENBSlQ7QUFBQSxRQUtJaWlFLEVBTEo7O0FBT0EsU0FBS3ppRSxDQUFDLEdBQUcsQ0FBVCxFQUFZQSxDQUFDLEdBQUdRLENBQWhCLEVBQW1CLEVBQUVSLENBQXJCLEVBQXdCO0FBQ3RCLFdBQUssSUFBSTBpRSxFQUFFLEdBQUdILEVBQUUsQ0FBQ3ZpRSxDQUFELENBQVgsRUFBZ0JtaEUsRUFBRSxHQUFHcUIsRUFBRSxDQUFDeGlFLENBQUQsQ0FBRixHQUFRLElBQUkvQixLQUFKLENBQVUwRCxDQUFWLENBQTdCLEVBQTJDbUIsQ0FBQyxHQUFHLENBQS9DLEVBQWtENi9ELEdBQXZELEVBQTRENy9ELENBQUMsR0FBR25CLENBQWhFLEVBQW1FLEVBQUVtQixDQUFyRSxFQUF3RTtBQUN0RXErRCxVQUFFLENBQUNyK0QsQ0FBRCxDQUFGLEdBQVE2L0QsR0FBRyxHQUFHLENBQUMsQ0FBRCxFQUFJLENBQUNsaUUsS0FBSyxDQUFDUyxJQUFJLENBQUM0QixDQUFELENBQUwsRUFBVTQvRCxFQUFWLEVBQWM1L0QsQ0FBZCxFQUFpQjVCLElBQWpCLENBQVYsQ0FBZDtBQUNBeWhFLFdBQUcsQ0FBQ3poRSxJQUFKLEdBQVdBLElBQUksQ0FBQzRCLENBQUQsQ0FBZjtBQUNEOztBQUNEcStELFFBQUUsQ0FBQzd0RCxHQUFILEdBQVNvdkQsRUFBVDtBQUNEOztBQUVELFNBQUsxaUUsQ0FBQyxHQUFHLENBQUosRUFBT3lpRSxFQUFFLEdBQUdsN0QsS0FBSyxDQUFDaTdELEVBQUQsQ0FBdEIsRUFBNEJ4aUUsQ0FBQyxHQUFHUSxDQUFoQyxFQUFtQyxFQUFFUixDQUFyQyxFQUF3QztBQUN0Q3dpRSxRQUFFLENBQUNDLEVBQUUsQ0FBQ3ppRSxDQUFELENBQUgsQ0FBRixDQUFVdVIsS0FBVixHQUFrQnZSLENBQWxCO0FBQ0Q7O0FBRUQ0RixVQUFNLENBQUM0OEQsRUFBRCxFQUFLQyxFQUFMLENBQU47QUFDQSxXQUFPRCxFQUFQO0FBQ0Q7O0FBRURGLE9BQUssQ0FBQy91RCxJQUFOLEdBQWEsVUFBU3JSLENBQVQsRUFBWTtBQUN2QixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9CdVUsSUFBSSxHQUFHLE9BQU9yUixDQUFQLEtBQWEsVUFBYixHQUEwQkEsQ0FBMUIsR0FBOEJFLHlEQUFRLENBQUNqRSw0Q0FBSyxDQUFDbUUsSUFBTixDQUFXSixDQUFYLENBQUQsQ0FBN0MsRUFBOERvZ0UsS0FBbEYsSUFBMkYvdUQsSUFBbEc7QUFDRCxHQUZEOztBQUlBK3VELE9BQUssQ0FBQzdoRSxLQUFOLEdBQWMsVUFBU3lCLENBQVQsRUFBWTtBQUN4QixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9CeUIsS0FBSyxHQUFHLE9BQU95QixDQUFQLEtBQWEsVUFBYixHQUEwQkEsQ0FBMUIsR0FBOEJFLHlEQUFRLENBQUMsQ0FBQ0YsQ0FBRixDQUE5QyxFQUFvRG9nRSxLQUF4RSxJQUFpRjdoRSxLQUF4RjtBQUNELEdBRkQ7O0FBSUE2aEUsT0FBSyxDQUFDLzZELEtBQU4sR0FBYyxVQUFTckYsQ0FBVCxFQUFZO0FBQ3hCLFdBQU9DLFNBQVMsQ0FBQ25ELE1BQVYsSUFBb0J1SSxLQUFLLEdBQUdyRixDQUFDLElBQUksSUFBTCxHQUFZa2dFLG1EQUFaLEdBQXdCLE9BQU9sZ0UsQ0FBUCxLQUFhLFVBQWIsR0FBMEJBLENBQTFCLEdBQThCRSx5REFBUSxDQUFDakUsNENBQUssQ0FBQ21FLElBQU4sQ0FBV0osQ0FBWCxDQUFELENBQXRFLEVBQXVGb2dFLEtBQTNHLElBQW9ILzZELEtBQTNIO0FBQ0QsR0FGRDs7QUFJQSs2RCxPQUFLLENBQUMxOEQsTUFBTixHQUFlLFVBQVMxRCxDQUFULEVBQVk7QUFDekIsV0FBT0MsU0FBUyxDQUFDbkQsTUFBVixJQUFvQjRHLE1BQU0sR0FBRzFELENBQUMsSUFBSSxJQUFMLEdBQVltZ0Usb0RBQVosR0FBeUJuZ0UsQ0FBbEMsRUFBcUNvZ0UsS0FBekQsSUFBa0UxOEQsTUFBekU7QUFDRCxHQUZEOztBQUlBLFNBQU8wOEQsS0FBUDtBQUNELEM7Ozs7Ozs7Ozs7OztBQ3hERDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRU8sSUFBSU0sT0FBTyxHQUFHLENBQ25CN2lDLHNEQURtQixFQUVuQnlpQixxREFGbUIsRUFHbkJxZ0IsdURBSG1CLEVBSW5CQyxzREFKbUIsRUFLbkJDLG9EQUxtQixFQU1uQkMsd0RBTm1CLEVBT25CQyxtREFQbUIsQ0FBZDtBQVVRLDJFQUFXO0FBQ3hCLE1BQUk1NUQsSUFBSSxHQUFHakgseURBQVEsQ0FBQzI5QixzREFBRCxDQUFuQjtBQUFBLE1BQ0loc0IsSUFBSSxHQUFHM1IseURBQVEsQ0FBQyxFQUFELENBRG5CO0FBQUEsTUFFSXVFLE9BQU8sR0FBRyxJQUZkOztBQUlBLFdBQVNxeEIsTUFBVCxHQUFrQjtBQUNoQixRQUFJemxCLE1BQUo7QUFDQSxRQUFJLENBQUM1TCxPQUFMLEVBQWNBLE9BQU8sR0FBRzRMLE1BQU0sR0FBR25MLG9EQUFJLEVBQXZCO0FBQ2RpQyxRQUFJLENBQUN6QyxLQUFMLENBQVcsSUFBWCxFQUFpQnpFLFNBQWpCLEVBQTRCK2dFLElBQTVCLENBQWlDdjhELE9BQWpDLEVBQTBDLENBQUNvTixJQUFJLENBQUNuTixLQUFMLENBQVcsSUFBWCxFQUFpQnpFLFNBQWpCLENBQTNDO0FBQ0EsUUFBSW9RLE1BQUosRUFBWSxPQUFPNUwsT0FBTyxHQUFHLElBQVYsRUFBZ0I0TCxNQUFNLEdBQUcsRUFBVCxJQUFlLElBQXRDO0FBQ2I7O0FBRUR5bEIsUUFBTSxDQUFDM3VCLElBQVAsR0FBYyxVQUFTbkgsQ0FBVCxFQUFZO0FBQ3hCLFdBQU9DLFNBQVMsQ0FBQ25ELE1BQVYsSUFBb0JxSyxJQUFJLEdBQUcsT0FBT25ILENBQVAsS0FBYSxVQUFiLEdBQTBCQSxDQUExQixHQUE4QkUseURBQVEsQ0FBQ0YsQ0FBRCxDQUE3QyxFQUFrRDgxQixNQUF0RSxJQUFnRjN1QixJQUF2RjtBQUNELEdBRkQ7O0FBSUEydUIsUUFBTSxDQUFDamtCLElBQVAsR0FBYyxVQUFTN1IsQ0FBVCxFQUFZO0FBQ3hCLFdBQU9DLFNBQVMsQ0FBQ25ELE1BQVYsSUFBb0IrVSxJQUFJLEdBQUcsT0FBTzdSLENBQVAsS0FBYSxVQUFiLEdBQTBCQSxDQUExQixHQUE4QkUseURBQVEsQ0FBQyxDQUFDRixDQUFGLENBQTdDLEVBQW1EODFCLE1BQXZFLElBQWlGamtCLElBQXhGO0FBQ0QsR0FGRDs7QUFJQWlrQixRQUFNLENBQUNyeEIsT0FBUCxHQUFpQixVQUFTekUsQ0FBVCxFQUFZO0FBQzNCLFdBQU9DLFNBQVMsQ0FBQ25ELE1BQVYsSUFBb0IySCxPQUFPLEdBQUd6RSxDQUFDLElBQUksSUFBTCxHQUFZLElBQVosR0FBbUJBLENBQTdCLEVBQWdDODFCLE1BQXBELElBQThEcnhCLE9BQXJFO0FBQ0QsR0FGRDs7QUFJQSxTQUFPcXhCLE1BQVA7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUM3Q0Q7QUFBQTtBQUFBO0FBRWU7QUFDYmtyQyxNQUFJLEVBQUUsY0FBU3Y4RCxPQUFULEVBQWtCb04sSUFBbEIsRUFBd0I7QUFDNUIsUUFBSXdNLENBQUMsR0FBR2xnQixJQUFJLENBQUNDLElBQUwsQ0FBVXlULElBQUksR0FBR2xDLHdDQUFqQixDQUFSO0FBQ0FsTCxXQUFPLENBQUNzTSxNQUFSLENBQWVzTixDQUFmLEVBQWtCLENBQWxCO0FBQ0E1WixXQUFPLENBQUN1TSxHQUFSLENBQVksQ0FBWixFQUFlLENBQWYsRUFBa0JxTixDQUFsQixFQUFxQixDQUFyQixFQUF3QnJQLHlDQUF4QjtBQUNEO0FBTFksQ0FBZixFOzs7Ozs7Ozs7Ozs7QUNGQTtBQUFlO0FBQ2JneUQsTUFBSSxFQUFFLGNBQVN2OEQsT0FBVCxFQUFrQm9OLElBQWxCLEVBQXdCO0FBQzVCLFFBQUl3TSxDQUFDLEdBQUdsZ0IsSUFBSSxDQUFDQyxJQUFMLENBQVV5VCxJQUFJLEdBQUcsQ0FBakIsSUFBc0IsQ0FBOUI7QUFDQXBOLFdBQU8sQ0FBQ3NNLE1BQVIsQ0FBZSxDQUFDLENBQUQsR0FBS3NOLENBQXBCLEVBQXVCLENBQUNBLENBQXhCO0FBQ0E1WixXQUFPLENBQUNtakMsTUFBUixDQUFlLENBQUN2cEIsQ0FBaEIsRUFBbUIsQ0FBQ0EsQ0FBcEI7QUFDQTVaLFdBQU8sQ0FBQ21qQyxNQUFSLENBQWUsQ0FBQ3ZwQixDQUFoQixFQUFtQixDQUFDLENBQUQsR0FBS0EsQ0FBeEI7QUFDQTVaLFdBQU8sQ0FBQ21qQyxNQUFSLENBQWV2cEIsQ0FBZixFQUFrQixDQUFDLENBQUQsR0FBS0EsQ0FBdkI7QUFDQTVaLFdBQU8sQ0FBQ21qQyxNQUFSLENBQWV2cEIsQ0FBZixFQUFrQixDQUFDQSxDQUFuQjtBQUNBNVosV0FBTyxDQUFDbWpDLE1BQVIsQ0FBZSxJQUFJdnBCLENBQW5CLEVBQXNCLENBQUNBLENBQXZCO0FBQ0E1WixXQUFPLENBQUNtakMsTUFBUixDQUFlLElBQUl2cEIsQ0FBbkIsRUFBc0JBLENBQXRCO0FBQ0E1WixXQUFPLENBQUNtakMsTUFBUixDQUFldnBCLENBQWYsRUFBa0JBLENBQWxCO0FBQ0E1WixXQUFPLENBQUNtakMsTUFBUixDQUFldnBCLENBQWYsRUFBa0IsSUFBSUEsQ0FBdEI7QUFDQTVaLFdBQU8sQ0FBQ21qQyxNQUFSLENBQWUsQ0FBQ3ZwQixDQUFoQixFQUFtQixJQUFJQSxDQUF2QjtBQUNBNVosV0FBTyxDQUFDbWpDLE1BQVIsQ0FBZSxDQUFDdnBCLENBQWhCLEVBQW1CQSxDQUFuQjtBQUNBNVosV0FBTyxDQUFDbWpDLE1BQVIsQ0FBZSxDQUFDLENBQUQsR0FBS3ZwQixDQUFwQixFQUF1QkEsQ0FBdkI7QUFDQTVaLFdBQU8sQ0FBQ3lNLFNBQVI7QUFDRDtBQWhCWSxDQUFmLEU7Ozs7Ozs7Ozs7OztBQ0FBO0FBQUEsSUFBSSt2RCxLQUFLLEdBQUc5aUUsSUFBSSxDQUFDQyxJQUFMLENBQVUsSUFBSSxDQUFkLENBQVo7QUFBQSxJQUNJOGlFLE9BQU8sR0FBR0QsS0FBSyxHQUFHLENBRHRCO0FBR2U7QUFDYkQsTUFBSSxFQUFFLGNBQVN2OEQsT0FBVCxFQUFrQm9OLElBQWxCLEVBQXdCO0FBQzVCLFFBQUl0TyxDQUFDLEdBQUdwRixJQUFJLENBQUNDLElBQUwsQ0FBVXlULElBQUksR0FBR3F2RCxPQUFqQixDQUFSO0FBQUEsUUFDSWxrRSxDQUFDLEdBQUd1RyxDQUFDLEdBQUcwOUQsS0FEWjtBQUVBeDhELFdBQU8sQ0FBQ3NNLE1BQVIsQ0FBZSxDQUFmLEVBQWtCLENBQUN4TixDQUFuQjtBQUNBa0IsV0FBTyxDQUFDbWpDLE1BQVIsQ0FBZTVxQyxDQUFmLEVBQWtCLENBQWxCO0FBQ0F5SCxXQUFPLENBQUNtakMsTUFBUixDQUFlLENBQWYsRUFBa0Jya0MsQ0FBbEI7QUFDQWtCLFdBQU8sQ0FBQ21qQyxNQUFSLENBQWUsQ0FBQzVxQyxDQUFoQixFQUFtQixDQUFuQjtBQUNBeUgsV0FBTyxDQUFDeU0sU0FBUjtBQUNEO0FBVFksQ0FBZixFOzs7Ozs7Ozs7Ozs7QUNIQTtBQUFlO0FBQ2I4dkQsTUFBSSxFQUFFLGNBQVN2OEQsT0FBVCxFQUFrQm9OLElBQWxCLEVBQXdCO0FBQzVCLFFBQUloSyxDQUFDLEdBQUcxSixJQUFJLENBQUNDLElBQUwsQ0FBVXlULElBQVYsQ0FBUjtBQUFBLFFBQ0k3VSxDQUFDLEdBQUcsQ0FBQzZLLENBQUQsR0FBSyxDQURiO0FBRUFwRCxXQUFPLENBQUN5N0MsSUFBUixDQUFhbGpELENBQWIsRUFBZ0JBLENBQWhCLEVBQW1CNkssQ0FBbkIsRUFBc0JBLENBQXRCO0FBQ0Q7QUFMWSxDQUFmLEU7Ozs7Ozs7Ozs7OztBQ0FBO0FBQUE7QUFBQTtBQUVBLElBQUlzNUQsRUFBRSxHQUFHLHNCQUFUO0FBQUEsSUFDSUMsRUFBRSxHQUFHampFLElBQUksQ0FBQ3VSLEdBQUwsQ0FBU0Msd0NBQUUsR0FBRyxFQUFkLElBQW9CeFIsSUFBSSxDQUFDdVIsR0FBTCxDQUFTLElBQUlDLHdDQUFKLEdBQVMsRUFBbEIsQ0FEN0I7QUFBQSxJQUVJMjhCLEVBQUUsR0FBR251QyxJQUFJLENBQUN1UixHQUFMLENBQVNWLHlDQUFHLEdBQUcsRUFBZixJQUFxQm95RCxFQUY5QjtBQUFBLElBR0k3MEIsRUFBRSxHQUFHLENBQUNwdUMsSUFBSSxDQUFDc1IsR0FBTCxDQUFTVCx5Q0FBRyxHQUFHLEVBQWYsQ0FBRCxHQUFzQm95RCxFQUgvQjtBQUtlO0FBQ2JKLE1BQUksRUFBRSxjQUFTdjhELE9BQVQsRUFBa0JvTixJQUFsQixFQUF3QjtBQUM1QixRQUFJd00sQ0FBQyxHQUFHbGdCLElBQUksQ0FBQ0MsSUFBTCxDQUFVeVQsSUFBSSxHQUFHc3ZELEVBQWpCLENBQVI7QUFBQSxRQUNJbmtFLENBQUMsR0FBR3N2QyxFQUFFLEdBQUdqdUIsQ0FEYjtBQUFBLFFBRUk5YSxDQUFDLEdBQUdncEMsRUFBRSxHQUFHbHVCLENBRmI7QUFHQTVaLFdBQU8sQ0FBQ3NNLE1BQVIsQ0FBZSxDQUFmLEVBQWtCLENBQUNzTixDQUFuQjtBQUNBNVosV0FBTyxDQUFDbWpDLE1BQVIsQ0FBZTVxQyxDQUFmLEVBQWtCdUcsQ0FBbEI7O0FBQ0EsU0FBSyxJQUFJekYsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxDQUFwQixFQUF1QixFQUFFQSxDQUF6QixFQUE0QjtBQUMxQixVQUFJM0IsQ0FBQyxHQUFHNlMseUNBQUcsR0FBR2xSLENBQU4sR0FBVSxDQUFsQjtBQUFBLFVBQ0lvakIsQ0FBQyxHQUFHL2lCLElBQUksQ0FBQ3NSLEdBQUwsQ0FBU3RULENBQVQsQ0FEUjtBQUFBLFVBRUl5TCxDQUFDLEdBQUd6SixJQUFJLENBQUN1UixHQUFMLENBQVN2VCxDQUFULENBRlI7QUFHQXNJLGFBQU8sQ0FBQ21qQyxNQUFSLENBQWVoZ0MsQ0FBQyxHQUFHeVcsQ0FBbkIsRUFBc0IsQ0FBQzZDLENBQUQsR0FBSzdDLENBQTNCO0FBQ0E1WixhQUFPLENBQUNtakMsTUFBUixDQUFlMW1CLENBQUMsR0FBR2xrQixDQUFKLEdBQVE0SyxDQUFDLEdBQUdyRSxDQUEzQixFQUE4QnFFLENBQUMsR0FBRzVLLENBQUosR0FBUWtrQixDQUFDLEdBQUczZCxDQUExQztBQUNEOztBQUNEa0IsV0FBTyxDQUFDeU0sU0FBUjtBQUNEO0FBZlksQ0FBZixFOzs7Ozs7Ozs7Ozs7QUNQQTtBQUFBLElBQUltd0QsS0FBSyxHQUFHbGpFLElBQUksQ0FBQ0MsSUFBTCxDQUFVLENBQVYsQ0FBWjtBQUVlO0FBQ2I0aUUsTUFBSSxFQUFFLGNBQVN2OEQsT0FBVCxFQUFrQm9OLElBQWxCLEVBQXdCO0FBQzVCLFFBQUl0TyxDQUFDLEdBQUcsQ0FBQ3BGLElBQUksQ0FBQ0MsSUFBTCxDQUFVeVQsSUFBSSxJQUFJd3ZELEtBQUssR0FBRyxDQUFaLENBQWQsQ0FBVDtBQUNBNThELFdBQU8sQ0FBQ3NNLE1BQVIsQ0FBZSxDQUFmLEVBQWtCeE4sQ0FBQyxHQUFHLENBQXRCO0FBQ0FrQixXQUFPLENBQUNtakMsTUFBUixDQUFlLENBQUN5NUIsS0FBRCxHQUFTOTlELENBQXhCLEVBQTJCLENBQUNBLENBQTVCO0FBQ0FrQixXQUFPLENBQUNtakMsTUFBUixDQUFleTVCLEtBQUssR0FBRzk5RCxDQUF2QixFQUEwQixDQUFDQSxDQUEzQjtBQUNBa0IsV0FBTyxDQUFDeU0sU0FBUjtBQUNEO0FBUFksQ0FBZixFOzs7Ozs7Ozs7Ozs7QUNGQTtBQUFBLElBQUlnUSxDQUFDLEdBQUcsQ0FBQyxHQUFUO0FBQUEsSUFDSXRaLENBQUMsR0FBR3pKLElBQUksQ0FBQ0MsSUFBTCxDQUFVLENBQVYsSUFBZSxDQUR2QjtBQUFBLElBRUltRyxDQUFDLEdBQUcsSUFBSXBHLElBQUksQ0FBQ0MsSUFBTCxDQUFVLEVBQVYsQ0FGWjtBQUFBLElBR0lqQyxDQUFDLEdBQUcsQ0FBQ29JLENBQUMsR0FBRyxDQUFKLEdBQVEsQ0FBVCxJQUFjLENBSHRCO0FBS2U7QUFDYnk4RCxNQUFJLEVBQUUsY0FBU3Y4RCxPQUFULEVBQWtCb04sSUFBbEIsRUFBd0I7QUFDNUIsUUFBSXdNLENBQUMsR0FBR2xnQixJQUFJLENBQUNDLElBQUwsQ0FBVXlULElBQUksR0FBRzFWLENBQWpCLENBQVI7QUFBQSxRQUNJK0MsRUFBRSxHQUFHbWYsQ0FBQyxHQUFHLENBRGI7QUFBQSxRQUVJb1QsRUFBRSxHQUFHcFQsQ0FBQyxHQUFHOVosQ0FGYjtBQUFBLFFBR0lwRixFQUFFLEdBQUdELEVBSFQ7QUFBQSxRQUlJd3lCLEVBQUUsR0FBR3JULENBQUMsR0FBRzlaLENBQUosR0FBUThaLENBSmpCO0FBQUEsUUFLSTJVLEVBQUUsR0FBRyxDQUFDN3pCLEVBTFY7QUFBQSxRQU1JMnZDLEVBQUUsR0FBR3BkLEVBTlQ7QUFPQWp0QixXQUFPLENBQUNzTSxNQUFSLENBQWU3UixFQUFmLEVBQW1CdXlCLEVBQW5CO0FBQ0FodEIsV0FBTyxDQUFDbWpDLE1BQVIsQ0FBZXpvQyxFQUFmLEVBQW1CdXlCLEVBQW5CO0FBQ0FqdEIsV0FBTyxDQUFDbWpDLE1BQVIsQ0FBZTVVLEVBQWYsRUFBbUI4YixFQUFuQjtBQUNBcnFDLFdBQU8sQ0FBQ21qQyxNQUFSLENBQWUxbUIsQ0FBQyxHQUFHaGlCLEVBQUosR0FBUzBJLENBQUMsR0FBRzZwQixFQUE1QixFQUFnQzdwQixDQUFDLEdBQUcxSSxFQUFKLEdBQVNnaUIsQ0FBQyxHQUFHdVEsRUFBN0M7QUFDQWh0QixXQUFPLENBQUNtakMsTUFBUixDQUFlMW1CLENBQUMsR0FBRy9oQixFQUFKLEdBQVN5SSxDQUFDLEdBQUc4cEIsRUFBNUIsRUFBZ0M5cEIsQ0FBQyxHQUFHekksRUFBSixHQUFTK2hCLENBQUMsR0FBR3dRLEVBQTdDO0FBQ0FqdEIsV0FBTyxDQUFDbWpDLE1BQVIsQ0FBZTFtQixDQUFDLEdBQUc4UixFQUFKLEdBQVNwckIsQ0FBQyxHQUFHa25DLEVBQTVCLEVBQWdDbG5DLENBQUMsR0FBR29yQixFQUFKLEdBQVM5UixDQUFDLEdBQUc0dEIsRUFBN0M7QUFDQXJxQyxXQUFPLENBQUNtakMsTUFBUixDQUFlMW1CLENBQUMsR0FBR2hpQixFQUFKLEdBQVMwSSxDQUFDLEdBQUc2cEIsRUFBNUIsRUFBZ0N2USxDQUFDLEdBQUd1USxFQUFKLEdBQVM3cEIsQ0FBQyxHQUFHMUksRUFBN0M7QUFDQXVGLFdBQU8sQ0FBQ21qQyxNQUFSLENBQWUxbUIsQ0FBQyxHQUFHL2hCLEVBQUosR0FBU3lJLENBQUMsR0FBRzhwQixFQUE1QixFQUFnQ3hRLENBQUMsR0FBR3dRLEVBQUosR0FBUzlwQixDQUFDLEdBQUd6SSxFQUE3QztBQUNBc0YsV0FBTyxDQUFDbWpDLE1BQVIsQ0FBZTFtQixDQUFDLEdBQUc4UixFQUFKLEdBQVNwckIsQ0FBQyxHQUFHa25DLEVBQTVCLEVBQWdDNXRCLENBQUMsR0FBRzR0QixFQUFKLEdBQVNsbkMsQ0FBQyxHQUFHb3JCLEVBQTdDO0FBQ0F2dUIsV0FBTyxDQUFDeU0sU0FBUjtBQUNEO0FBbkJZLENBQWYsRTs7Ozs7Ozs7Ozs7O0FDTEE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBLElBQUlzakIsTUFBSjtBQUNPLElBQUl1MkIsVUFBSjtBQUNBLElBQUl1VyxTQUFKO0FBQ0EsSUFBSTlWLFNBQUo7QUFDQSxJQUFJK1YsUUFBSjtBQUVQN3NDLGFBQWEsQ0FBQztBQUNaOHNDLFVBQVEsRUFBRSxRQURFO0FBRVp4M0MsTUFBSSxFQUFFLFlBRk07QUFHWnkzQyxNQUFJLEVBQUUsY0FITTtBQUlaQyxTQUFPLEVBQUUsQ0FBQyxJQUFELEVBQU8sSUFBUCxDQUpHO0FBS1pDLE1BQUksRUFBRSxDQUFDLFFBQUQsRUFBVyxRQUFYLEVBQXFCLFNBQXJCLEVBQWdDLFdBQWhDLEVBQTZDLFVBQTdDLEVBQXlELFFBQXpELEVBQW1FLFVBQW5FLENBTE07QUFNWkMsV0FBUyxFQUFFLENBQUMsS0FBRCxFQUFRLEtBQVIsRUFBZSxLQUFmLEVBQXNCLEtBQXRCLEVBQTZCLEtBQTdCLEVBQW9DLEtBQXBDLEVBQTJDLEtBQTNDLENBTkM7QUFPWkMsUUFBTSxFQUFFLENBQUMsU0FBRCxFQUFZLFVBQVosRUFBd0IsT0FBeEIsRUFBaUMsT0FBakMsRUFBMEMsS0FBMUMsRUFBaUQsTUFBakQsRUFBeUQsTUFBekQsRUFBaUUsUUFBakUsRUFBMkUsV0FBM0UsRUFBd0YsU0FBeEYsRUFBbUcsVUFBbkcsRUFBK0csVUFBL0csQ0FQSTtBQVFaQyxhQUFXLEVBQUUsQ0FBQyxLQUFELEVBQVEsS0FBUixFQUFlLEtBQWYsRUFBc0IsS0FBdEIsRUFBNkIsS0FBN0IsRUFBb0MsS0FBcEMsRUFBMkMsS0FBM0MsRUFBa0QsS0FBbEQsRUFBeUQsS0FBekQsRUFBZ0UsS0FBaEUsRUFBdUUsS0FBdkUsRUFBOEUsS0FBOUU7QUFSRCxDQUFELENBQWI7QUFXZSxTQUFTcHRDLGFBQVQsQ0FBdUJ0VSxVQUF2QixFQUFtQztBQUNoRG9VLFFBQU0sR0FBR08sdURBQVksQ0FBQzNVLFVBQUQsQ0FBckI7QUFDQTJxQyxZQUFVLEdBQUd2MkIsTUFBTSxDQUFDN3ZCLE1BQXBCO0FBQ0EyOEQsV0FBUyxHQUFHOXNDLE1BQU0sQ0FBQ3BNLEtBQW5CO0FBQ0FvakMsV0FBUyxHQUFHaDNCLE1BQU0sQ0FBQ2czQixTQUFuQjtBQUNBK1YsVUFBUSxHQUFHL3NDLE1BQU0sQ0FBQytzQyxRQUFsQjtBQUNBLFNBQU8vc0MsTUFBUDtBQUNELEM7Ozs7Ozs7Ozs7OztBQzFCRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7QUNGQTtBQUFBO0FBQUE7QUFBQTtBQUVPLElBQUl1dEMsWUFBWSxHQUFHLHVCQUFuQjs7QUFFUCxTQUFTQyxlQUFULENBQXlCaDRDLElBQXpCLEVBQStCO0FBQzdCLFNBQU9BLElBQUksQ0FBQ2k0QyxXQUFMLEVBQVA7QUFDRDs7QUFFRCxJQUFJQyxTQUFTLEdBQUdsNkMsSUFBSSxDQUFDaHNCLFNBQUwsQ0FBZWltRSxXQUFmLEdBQ1ZELGVBRFUsR0FFVnhXLGdFQUFTLENBQUN1VyxZQUFELENBRmY7QUFJZUcsd0VBQWYsRTs7Ozs7Ozs7Ozs7O0FDWkE7QUFBQTtBQUFBO0FBQUE7QUFDQTs7QUFFQSxTQUFTQyxjQUFULENBQXdCbmtCLE1BQXhCLEVBQWdDO0FBQzlCLE1BQUloMEIsSUFBSSxHQUFHLElBQUloQyxJQUFKLENBQVNnMkIsTUFBVCxDQUFYO0FBQ0EsU0FBTzE5QyxLQUFLLENBQUMwcEIsSUFBRCxDQUFMLEdBQWMsSUFBZCxHQUFxQkEsSUFBNUI7QUFDRDs7QUFFRCxJQUFJbzRDLFFBQVEsR0FBRyxDQUFDLElBQUlwNkMsSUFBSixDQUFTLDBCQUFULENBQUQsR0FDVG02QyxjQURTLEdBRVRaLCtEQUFRLENBQUNRLHVEQUFELENBRmQ7QUFJZUssdUVBQWYsRTs7Ozs7Ozs7Ozs7O0FDWkE7QUFBQTtBQUFBO0FBQUE7O0FBYUEsU0FBU0MsU0FBVCxDQUFtQmhsRSxDQUFuQixFQUFzQjtBQUNwQixNQUFJLEtBQUtBLENBQUMsQ0FBQ2tHLENBQVAsSUFBWWxHLENBQUMsQ0FBQ2tHLENBQUYsR0FBTSxHQUF0QixFQUEyQjtBQUN6QixRQUFJeW1CLElBQUksR0FBRyxJQUFJaEMsSUFBSixDQUFTLENBQUMsQ0FBVixFQUFhM3FCLENBQUMsQ0FBQ29DLENBQWYsRUFBa0JwQyxDQUFDLENBQUNBLENBQXBCLEVBQXVCQSxDQUFDLENBQUNpbEUsQ0FBekIsRUFBNEJqbEUsQ0FBQyxDQUFDdXVDLENBQTlCLEVBQWlDdnVDLENBQUMsQ0FBQ2tQLENBQW5DLEVBQXNDbFAsQ0FBQyxDQUFDa2xFLENBQXhDLENBQVg7QUFDQXY0QyxRQUFJLENBQUN3NEMsV0FBTCxDQUFpQm5sRSxDQUFDLENBQUNrRyxDQUFuQjtBQUNBLFdBQU95bUIsSUFBUDtBQUNEOztBQUNELFNBQU8sSUFBSWhDLElBQUosQ0FBUzNxQixDQUFDLENBQUNrRyxDQUFYLEVBQWNsRyxDQUFDLENBQUNvQyxDQUFoQixFQUFtQnBDLENBQUMsQ0FBQ0EsQ0FBckIsRUFBd0JBLENBQUMsQ0FBQ2lsRSxDQUExQixFQUE2QmpsRSxDQUFDLENBQUN1dUMsQ0FBL0IsRUFBa0N2dUMsQ0FBQyxDQUFDa1AsQ0FBcEMsRUFBdUNsUCxDQUFDLENBQUNrbEUsQ0FBekMsQ0FBUDtBQUNEOztBQUVELFNBQVNFLE9BQVQsQ0FBaUJwbEUsQ0FBakIsRUFBb0I7QUFDbEIsTUFBSSxLQUFLQSxDQUFDLENBQUNrRyxDQUFQLElBQVlsRyxDQUFDLENBQUNrRyxDQUFGLEdBQU0sR0FBdEIsRUFBMkI7QUFDekIsUUFBSXltQixJQUFJLEdBQUcsSUFBSWhDLElBQUosQ0FBU0EsSUFBSSxDQUFDeWpDLEdBQUwsQ0FBUyxDQUFDLENBQVYsRUFBYXB1RCxDQUFDLENBQUNvQyxDQUFmLEVBQWtCcEMsQ0FBQyxDQUFDQSxDQUFwQixFQUF1QkEsQ0FBQyxDQUFDaWxFLENBQXpCLEVBQTRCamxFLENBQUMsQ0FBQ3V1QyxDQUE5QixFQUFpQ3Z1QyxDQUFDLENBQUNrUCxDQUFuQyxFQUFzQ2xQLENBQUMsQ0FBQ2tsRSxDQUF4QyxDQUFULENBQVg7QUFDQXY0QyxRQUFJLENBQUMwNEMsY0FBTCxDQUFvQnJsRSxDQUFDLENBQUNrRyxDQUF0QjtBQUNBLFdBQU95bUIsSUFBUDtBQUNEOztBQUNELFNBQU8sSUFBSWhDLElBQUosQ0FBU0EsSUFBSSxDQUFDeWpDLEdBQUwsQ0FBU3B1RCxDQUFDLENBQUNrRyxDQUFYLEVBQWNsRyxDQUFDLENBQUNvQyxDQUFoQixFQUFtQnBDLENBQUMsQ0FBQ0EsQ0FBckIsRUFBd0JBLENBQUMsQ0FBQ2lsRSxDQUExQixFQUE2QmpsRSxDQUFDLENBQUN1dUMsQ0FBL0IsRUFBa0N2dUMsQ0FBQyxDQUFDa1AsQ0FBcEMsRUFBdUNsUCxDQUFDLENBQUNrbEUsQ0FBekMsQ0FBVCxDQUFQO0FBQ0Q7O0FBRUQsU0FBU0ksT0FBVCxDQUFpQnAvRCxDQUFqQixFQUFvQjtBQUNsQixTQUFPO0FBQUNBLEtBQUMsRUFBRUEsQ0FBSjtBQUFPOUQsS0FBQyxFQUFFLENBQVY7QUFBYXBDLEtBQUMsRUFBRSxDQUFoQjtBQUFtQmlsRSxLQUFDLEVBQUUsQ0FBdEI7QUFBeUIxMkIsS0FBQyxFQUFFLENBQTVCO0FBQStCci9CLEtBQUMsRUFBRSxDQUFsQztBQUFxQ2cyRCxLQUFDLEVBQUU7QUFBeEMsR0FBUDtBQUNEOztBQUVjLFNBQVN4dEMsWUFBVCxDQUFzQlAsTUFBdEIsRUFBOEI7QUFDM0MsTUFBSW91QyxlQUFlLEdBQUdwdUMsTUFBTSxDQUFDZ3RDLFFBQTdCO0FBQUEsTUFDSXFCLFdBQVcsR0FBR3J1QyxNQUFNLENBQUN4SyxJQUR6QjtBQUFBLE1BRUk4NEMsV0FBVyxHQUFHdHVDLE1BQU0sQ0FBQ2l0QyxJQUZ6QjtBQUFBLE1BR0lzQixjQUFjLEdBQUd2dUMsTUFBTSxDQUFDa3RDLE9BSDVCO0FBQUEsTUFJSXNCLGVBQWUsR0FBR3h1QyxNQUFNLENBQUNtdEMsSUFKN0I7QUFBQSxNQUtJc0Isb0JBQW9CLEdBQUd6dUMsTUFBTSxDQUFDb3RDLFNBTGxDO0FBQUEsTUFNSXNCLGFBQWEsR0FBRzF1QyxNQUFNLENBQUNxdEMsTUFOM0I7QUFBQSxNQU9Jc0Isa0JBQWtCLEdBQUczdUMsTUFBTSxDQUFDc3RDLFdBUGhDO0FBU0EsTUFBSXNCLFFBQVEsR0FBR0MsUUFBUSxDQUFDTixjQUFELENBQXZCO0FBQUEsTUFDSU8sWUFBWSxHQUFHQyxZQUFZLENBQUNSLGNBQUQsQ0FEL0I7QUFBQSxNQUVJUyxTQUFTLEdBQUdILFFBQVEsQ0FBQ0wsZUFBRCxDQUZ4QjtBQUFBLE1BR0lTLGFBQWEsR0FBR0YsWUFBWSxDQUFDUCxlQUFELENBSGhDO0FBQUEsTUFJSVUsY0FBYyxHQUFHTCxRQUFRLENBQUNKLG9CQUFELENBSjdCO0FBQUEsTUFLSVUsa0JBQWtCLEdBQUdKLFlBQVksQ0FBQ04sb0JBQUQsQ0FMckM7QUFBQSxNQU1JVyxPQUFPLEdBQUdQLFFBQVEsQ0FBQ0gsYUFBRCxDQU50QjtBQUFBLE1BT0lXLFdBQVcsR0FBR04sWUFBWSxDQUFDTCxhQUFELENBUDlCO0FBQUEsTUFRSVksWUFBWSxHQUFHVCxRQUFRLENBQUNGLGtCQUFELENBUjNCO0FBQUEsTUFTSVksZ0JBQWdCLEdBQUdSLFlBQVksQ0FBQ0osa0JBQUQsQ0FUbkM7QUFXQSxNQUFJYSxPQUFPLEdBQUc7QUFDWixTQUFLQyxrQkFETztBQUVaLFNBQUtDLGFBRk87QUFHWixTQUFLQyxnQkFITztBQUlaLFNBQUtoYSxXQUpPO0FBS1osU0FBSyxJQUxPO0FBTVosU0FBS2lhLGdCQU5PO0FBT1osU0FBS0EsZ0JBUE87QUFRWixTQUFLQyxrQkFSTztBQVNaLFNBQUtDLFlBVE87QUFVWixTQUFLQyxZQVZPO0FBV1osU0FBS0MsZUFYTztBQVlaLFNBQUtDLGtCQVpPO0FBYVosU0FBS0MsaUJBYk87QUFjWixTQUFLQyxhQWRPO0FBZVosU0FBS0MsWUFmTztBQWdCWixTQUFLQyxtQkFoQk87QUFpQlosU0FBS0MsMEJBakJPO0FBa0JaLFNBQUtDLGFBbEJPO0FBbUJaLFNBQUtDLHlCQW5CTztBQW9CWixTQUFLQyxzQkFwQk87QUFxQlosU0FBS0MsbUJBckJPO0FBc0JaLFNBQUtDLHlCQXRCTztBQXVCWixTQUFLQyxzQkF2Qk87QUF3QlosU0FBSyxJQXhCTztBQXlCWixTQUFLLElBekJPO0FBMEJaLFNBQUt2N0MsVUExQk87QUEyQlosU0FBS3c3QyxjQTNCTztBQTRCWixTQUFLQyxVQTVCTztBQTZCWixTQUFLQztBQTdCTyxHQUFkO0FBZ0NBLE1BQUlDLFVBQVUsR0FBRztBQUNmLFNBQUtDLHFCQURVO0FBRWYsU0FBS0MsZ0JBRlU7QUFHZixTQUFLQyxtQkFIVTtBQUlmLFNBQUtDLGNBSlU7QUFLZixTQUFLLElBTFU7QUFNZixTQUFLQyxtQkFOVTtBQU9mLFNBQUtBLG1CQVBVO0FBUWYsU0FBS0MscUJBUlU7QUFTZixTQUFLQyxlQVRVO0FBVWYsU0FBS0MsZUFWVTtBQVdmLFNBQUtDLGtCQVhVO0FBWWYsU0FBS0MscUJBWlU7QUFhZixTQUFLQyxvQkFiVTtBQWNmLFNBQUtDLGdCQWRVO0FBZWYsU0FBS0MsZUFmVTtBQWdCZixTQUFLeEIsbUJBaEJVO0FBaUJmLFNBQUtDLDBCQWpCVTtBQWtCZixTQUFLd0IsZ0JBbEJVO0FBbUJmLFNBQUtDLDRCQW5CVTtBQW9CZixTQUFLQyx5QkFwQlU7QUFxQmYsU0FBS0Msc0JBckJVO0FBc0JmLFNBQUtDLDRCQXRCVTtBQXVCZixTQUFLQyx5QkF2QlU7QUF3QmYsU0FBSyxJQXhCVTtBQXlCZixTQUFLLElBekJVO0FBMEJmLFNBQUtDLGFBMUJVO0FBMkJmLFNBQUtDLGlCQTNCVTtBQTRCZixTQUFLQyxhQTVCVTtBQTZCZixTQUFLdkI7QUE3QlUsR0FBakI7QUFnQ0EsTUFBSXdCLE1BQU0sR0FBRztBQUNYLFNBQUtDLGlCQURNO0FBRVgsU0FBS0MsWUFGTTtBQUdYLFNBQUtDLGVBSE07QUFJWCxTQUFLQyxVQUpNO0FBS1gsU0FBS0MsbUJBTE07QUFNWCxTQUFLQyxlQU5NO0FBT1gsU0FBS0EsZUFQTTtBQVFYLFNBQUtDLGlCQVJNO0FBU1gsU0FBS0MsV0FUTTtBQVVYLFNBQUtBLFdBVk07QUFXWCxTQUFLQyxjQVhNO0FBWVgsU0FBS0MsaUJBWk07QUFhWCxTQUFLQyxnQkFiTTtBQWNYLFNBQUtDLFlBZE07QUFlWCxTQUFLQyxXQWZNO0FBZ0JYLFNBQUtDLGtCQWhCTTtBQWlCWCxTQUFLQyx5QkFqQk07QUFrQlgsU0FBS0MsWUFsQk07QUFtQlgsU0FBS0Msd0JBbkJNO0FBb0JYLFNBQUtDLHFCQXBCTTtBQXFCWCxTQUFLQyxrQkFyQk07QUFzQlgsU0FBS0Msd0JBdEJNO0FBdUJYLFNBQUtDLHFCQXZCTTtBQXdCWCxTQUFLQyxlQXhCTTtBQXlCWCxTQUFLQyxlQXpCTTtBQTBCWCxTQUFLQyxTQTFCTTtBQTJCWCxTQUFLQyxhQTNCTTtBQTRCWCxTQUFLQyxTQTVCTTtBQTZCWCxTQUFLQztBQTdCTSxHQUFiLENBckYyQyxDQXFIM0M7O0FBQ0ExRSxTQUFPLENBQUNobkUsQ0FBUixHQUFZNDVCLFNBQVMsQ0FBQ2lzQyxXQUFELEVBQWNtQixPQUFkLENBQXJCO0FBQ0FBLFNBQU8sQ0FBQy84RCxDQUFSLEdBQVkydkIsU0FBUyxDQUFDa3NDLFdBQUQsRUFBY2tCLE9BQWQsQ0FBckI7QUFDQUEsU0FBTyxDQUFDOWlELENBQVIsR0FBWTBWLFNBQVMsQ0FBQ2dzQyxlQUFELEVBQWtCb0IsT0FBbEIsQ0FBckI7QUFDQXdCLFlBQVUsQ0FBQ3hvRSxDQUFYLEdBQWU0NUIsU0FBUyxDQUFDaXNDLFdBQUQsRUFBYzJDLFVBQWQsQ0FBeEI7QUFDQUEsWUFBVSxDQUFDditELENBQVgsR0FBZTJ2QixTQUFTLENBQUNrc0MsV0FBRCxFQUFjMEMsVUFBZCxDQUF4QjtBQUNBQSxZQUFVLENBQUN0a0QsQ0FBWCxHQUFlMFYsU0FBUyxDQUFDZ3NDLGVBQUQsRUFBa0I0QyxVQUFsQixDQUF4Qjs7QUFFQSxXQUFTNXVDLFNBQVQsQ0FBbUJwQixTQUFuQixFQUE4Qnd1QyxPQUE5QixFQUF1QztBQUNyQyxXQUFPLFVBQVNoNkMsSUFBVCxFQUFlO0FBQ3BCLFVBQUlnMEIsTUFBTSxHQUFHLEVBQWI7QUFBQSxVQUNJbGdELENBQUMsR0FBRyxDQUFDLENBRFQ7QUFBQSxVQUVJOEMsQ0FBQyxHQUFHLENBRlI7QUFBQSxVQUdJdEMsQ0FBQyxHQUFHazNCLFNBQVMsQ0FBQzE0QixNQUhsQjtBQUFBLFVBSUlva0IsQ0FKSjtBQUFBLFVBS0kwSSxHQUxKO0FBQUEsVUFNSWpsQixNQU5KO0FBUUEsVUFBSSxFQUFFcWxCLElBQUksWUFBWWhDLElBQWxCLENBQUosRUFBNkJnQyxJQUFJLEdBQUcsSUFBSWhDLElBQUosQ0FBUyxDQUFDZ0MsSUFBVixDQUFQOztBQUU3QixhQUFPLEVBQUVsc0IsQ0FBRixHQUFNUSxDQUFiLEVBQWdCO0FBQ2QsWUFBSWszQixTQUFTLENBQUN6SyxVQUFWLENBQXFCanRCLENBQXJCLE1BQTRCLEVBQWhDLEVBQW9DO0FBQ2xDa2dELGdCQUFNLENBQUNqK0MsSUFBUCxDQUFZeTFCLFNBQVMsQ0FBQ3Y1QixLQUFWLENBQWdCMkUsQ0FBaEIsRUFBbUI5QyxDQUFuQixDQUFaO0FBQ0EsY0FBSSxDQUFDOHJCLEdBQUcsR0FBRysrQyxJQUFJLENBQUN6bkQsQ0FBQyxHQUFHc1UsU0FBUyxDQUFDb3pDLE1BQVYsQ0FBaUIsRUFBRTlxRSxDQUFuQixDQUFMLENBQVgsS0FBMkMsSUFBL0MsRUFBcURvakIsQ0FBQyxHQUFHc1UsU0FBUyxDQUFDb3pDLE1BQVYsQ0FBaUIsRUFBRTlxRSxDQUFuQixDQUFKLENBQXJELEtBQ0s4ckIsR0FBRyxHQUFHMUksQ0FBQyxLQUFLLEdBQU4sR0FBWSxHQUFaLEdBQWtCLEdBQXhCO0FBQ0wsY0FBSXZjLE1BQU0sR0FBR3EvRCxPQUFPLENBQUM5aUQsQ0FBRCxDQUFwQixFQUF5QkEsQ0FBQyxHQUFHdmMsTUFBTSxDQUFDcWxCLElBQUQsRUFBT0osR0FBUCxDQUFWO0FBQ3pCbzBCLGdCQUFNLENBQUNqK0MsSUFBUCxDQUFZbWhCLENBQVo7QUFDQXRnQixXQUFDLEdBQUc5QyxDQUFDLEdBQUcsQ0FBUjtBQUNEO0FBQ0Y7O0FBRURrZ0QsWUFBTSxDQUFDaitDLElBQVAsQ0FBWXkxQixTQUFTLENBQUN2NUIsS0FBVixDQUFnQjJFLENBQWhCLEVBQW1COUMsQ0FBbkIsQ0FBWjtBQUNBLGFBQU9rZ0QsTUFBTSxDQUFDMTBCLElBQVAsQ0FBWSxFQUFaLENBQVA7QUFDRCxLQXhCRDtBQXlCRDs7QUFFRCxXQUFTdS9DLFFBQVQsQ0FBa0JyekMsU0FBbEIsRUFBNkJzekMsT0FBN0IsRUFBc0M7QUFDcEMsV0FBTyxVQUFTOXFCLE1BQVQsRUFBaUI7QUFDdEIsVUFBSTNnRCxDQUFDLEdBQUdzbEUsT0FBTyxDQUFDLElBQUQsQ0FBZjtBQUFBLFVBQ0k3a0UsQ0FBQyxHQUFHaXJFLGNBQWMsQ0FBQzFyRSxDQUFELEVBQUltNEIsU0FBSixFQUFld29CLE1BQU0sSUFBSSxFQUF6QixFQUE2QixDQUE3QixDQUR0QjtBQUFBLFVBRUl1TCxJQUZKO0FBQUEsVUFFVUMsR0FGVjtBQUdBLFVBQUkxckQsQ0FBQyxJQUFJa2dELE1BQU0sQ0FBQ2xoRCxNQUFoQixFQUF3QixPQUFPLElBQVAsQ0FKRixDQU10Qjs7QUFDQSxVQUFJLE9BQU9PLENBQVgsRUFBYyxPQUFPLElBQUkycUIsSUFBSixDQUFTM3FCLENBQUMsQ0FBQzJyRSxDQUFYLENBQVAsQ0FQUSxDQVN0Qjs7QUFDQSxVQUFJLE9BQU8zckUsQ0FBWCxFQUFjQSxDQUFDLENBQUNpbEUsQ0FBRixHQUFNamxFLENBQUMsQ0FBQ2lsRSxDQUFGLEdBQU0sRUFBTixHQUFXamxFLENBQUMsQ0FBQ3lELENBQUYsR0FBTSxFQUF2QixDQVZRLENBWXRCOztBQUNBLFVBQUksT0FBT3pELENBQVgsRUFBYztBQUNaLFlBQUlBLENBQUMsQ0FBQzRyRSxDQUFGLEdBQU0sQ0FBTixJQUFXNXJFLENBQUMsQ0FBQzRyRSxDQUFGLEdBQU0sRUFBckIsRUFBeUIsT0FBTyxJQUFQO0FBQ3pCLFlBQUksRUFBRSxPQUFPNXJFLENBQVQsQ0FBSixFQUFpQkEsQ0FBQyxDQUFDd0ssQ0FBRixHQUFNLENBQU47O0FBQ2pCLFlBQUksT0FBT3hLLENBQVgsRUFBYztBQUNaa3NELGNBQUksR0FBR2taLE9BQU8sQ0FBQ0UsT0FBTyxDQUFDdGxFLENBQUMsQ0FBQ2tHLENBQUgsQ0FBUixDQUFkLEVBQThCaW1ELEdBQUcsR0FBR0QsSUFBSSxDQUFDMmYsU0FBTCxFQUFwQztBQUNBM2YsY0FBSSxHQUFHQyxHQUFHLEdBQUcsQ0FBTixJQUFXQSxHQUFHLEtBQUssQ0FBbkIsR0FBdUIyZixpREFBUyxDQUFDM3BFLElBQVYsQ0FBZStwRCxJQUFmLENBQXZCLEdBQThDNGYseURBQVMsQ0FBQzVmLElBQUQsQ0FBOUQ7QUFDQUEsY0FBSSxHQUFHNEIsOENBQU0sQ0FBQ3puRCxNQUFQLENBQWM2bEQsSUFBZCxFQUFvQixDQUFDbHNELENBQUMsQ0FBQzRyRSxDQUFGLEdBQU0sQ0FBUCxJQUFZLENBQWhDLENBQVA7QUFDQTVyRSxXQUFDLENBQUNrRyxDQUFGLEdBQU1nbUQsSUFBSSxDQUFDOStCLGNBQUwsRUFBTjtBQUNBcHRCLFdBQUMsQ0FBQ29DLENBQUYsR0FBTThwRCxJQUFJLENBQUM3K0IsV0FBTCxFQUFOO0FBQ0FydEIsV0FBQyxDQUFDQSxDQUFGLEdBQU1rc0QsSUFBSSxDQUFDNStCLFVBQUwsS0FBb0IsQ0FBQ3R0QixDQUFDLENBQUN3SyxDQUFGLEdBQU0sQ0FBUCxJQUFZLENBQXRDO0FBQ0QsU0FQRCxNQU9PO0FBQ0wwaEQsY0FBSSxHQUFHdWYsT0FBTyxDQUFDbkcsT0FBTyxDQUFDdGxFLENBQUMsQ0FBQ2tHLENBQUgsQ0FBUixDQUFkLEVBQThCaW1ELEdBQUcsR0FBR0QsSUFBSSxDQUFDNmYsTUFBTCxFQUFwQztBQUNBN2YsY0FBSSxHQUFHQyxHQUFHLEdBQUcsQ0FBTixJQUFXQSxHQUFHLEtBQUssQ0FBbkIsR0FBdUI2ZixrREFBVSxDQUFDN3BFLElBQVgsQ0FBZ0IrcEQsSUFBaEIsQ0FBdkIsR0FBK0M4ZiwwREFBVSxDQUFDOWYsSUFBRCxDQUFoRTtBQUNBQSxjQUFJLEdBQUdtQiwrQ0FBTyxDQUFDaG5ELE1BQVIsQ0FBZTZsRCxJQUFmLEVBQXFCLENBQUNsc0QsQ0FBQyxDQUFDNHJFLENBQUYsR0FBTSxDQUFQLElBQVksQ0FBakMsQ0FBUDtBQUNBNXJFLFdBQUMsQ0FBQ2tHLENBQUYsR0FBTWdtRCxJQUFJLENBQUMrZixXQUFMLEVBQU47QUFDQWpzRSxXQUFDLENBQUNvQyxDQUFGLEdBQU04cEQsSUFBSSxDQUFDZ2dCLFFBQUwsRUFBTjtBQUNBbHNFLFdBQUMsQ0FBQ0EsQ0FBRixHQUFNa3NELElBQUksQ0FBQ2lnQixPQUFMLEtBQWlCLENBQUNuc0UsQ0FBQyxDQUFDd0ssQ0FBRixHQUFNLENBQVAsSUFBWSxDQUFuQztBQUNEO0FBQ0YsT0FsQkQsTUFrQk8sSUFBSSxPQUFPeEssQ0FBUCxJQUFZLE9BQU9BLENBQXZCLEVBQTBCO0FBQy9CLFlBQUksRUFBRSxPQUFPQSxDQUFULENBQUosRUFBaUJBLENBQUMsQ0FBQ3dLLENBQUYsR0FBTSxPQUFPeEssQ0FBUCxHQUFXQSxDQUFDLENBQUNtOEIsQ0FBRixHQUFNLENBQWpCLEdBQXFCLE9BQU9uOEIsQ0FBUCxHQUFXLENBQVgsR0FBZSxDQUExQztBQUNqQm1zRCxXQUFHLEdBQUcsT0FBT25zRCxDQUFQLEdBQVdvbEUsT0FBTyxDQUFDRSxPQUFPLENBQUN0bEUsQ0FBQyxDQUFDa0csQ0FBSCxDQUFSLENBQVAsQ0FBc0IybEUsU0FBdEIsRUFBWCxHQUErQ0osT0FBTyxDQUFDbkcsT0FBTyxDQUFDdGxFLENBQUMsQ0FBQ2tHLENBQUgsQ0FBUixDQUFQLENBQXNCNmxFLE1BQXRCLEVBQXJEO0FBQ0EvckUsU0FBQyxDQUFDb0MsQ0FBRixHQUFNLENBQU47QUFDQXBDLFNBQUMsQ0FBQ0EsQ0FBRixHQUFNLE9BQU9BLENBQVAsR0FBVyxDQUFDQSxDQUFDLENBQUN3SyxDQUFGLEdBQU0sQ0FBUCxJQUFZLENBQVosR0FBZ0J4SyxDQUFDLENBQUMyTyxDQUFGLEdBQU0sQ0FBdEIsR0FBMEIsQ0FBQ3c5QyxHQUFHLEdBQUcsQ0FBUCxJQUFZLENBQWpELEdBQXFEbnNELENBQUMsQ0FBQ3dLLENBQUYsR0FBTXhLLENBQUMsQ0FBQ29zRSxDQUFGLEdBQU0sQ0FBWixHQUFnQixDQUFDamdCLEdBQUcsR0FBRyxDQUFQLElBQVksQ0FBdkY7QUFDRCxPQXBDcUIsQ0FzQ3RCO0FBQ0E7OztBQUNBLFVBQUksT0FBT25zRCxDQUFYLEVBQWM7QUFDWkEsU0FBQyxDQUFDaWxFLENBQUYsSUFBT2psRSxDQUFDLENBQUNxc0UsQ0FBRixHQUFNLEdBQU4sR0FBWSxDQUFuQjtBQUNBcnNFLFNBQUMsQ0FBQ3V1QyxDQUFGLElBQU92dUMsQ0FBQyxDQUFDcXNFLENBQUYsR0FBTSxHQUFiO0FBQ0EsZUFBT2pILE9BQU8sQ0FBQ3BsRSxDQUFELENBQWQ7QUFDRCxPQTVDcUIsQ0E4Q3RCOzs7QUFDQSxhQUFPeXJFLE9BQU8sQ0FBQ3pyRSxDQUFELENBQWQ7QUFDRCxLQWhERDtBQWlERDs7QUFFRCxXQUFTMHJFLGNBQVQsQ0FBd0IxckUsQ0FBeEIsRUFBMkJtNEIsU0FBM0IsRUFBc0N3b0IsTUFBdEMsRUFBOENwOUMsQ0FBOUMsRUFBaUQ7QUFDL0MsUUFBSTlDLENBQUMsR0FBRyxDQUFSO0FBQUEsUUFDSVEsQ0FBQyxHQUFHazNCLFNBQVMsQ0FBQzE0QixNQURsQjtBQUFBLFFBRUkyQyxDQUFDLEdBQUd1K0MsTUFBTSxDQUFDbGhELE1BRmY7QUFBQSxRQUdJb2tCLENBSEo7QUFBQSxRQUlJa0gsS0FKSjs7QUFNQSxXQUFPdHFCLENBQUMsR0FBR1EsQ0FBWCxFQUFjO0FBQ1osVUFBSXNDLENBQUMsSUFBSW5CLENBQVQsRUFBWSxPQUFPLENBQUMsQ0FBUjtBQUNaeWhCLE9BQUMsR0FBR3NVLFNBQVMsQ0FBQ3pLLFVBQVYsQ0FBcUJqdEIsQ0FBQyxFQUF0QixDQUFKOztBQUNBLFVBQUlvakIsQ0FBQyxLQUFLLEVBQVYsRUFBYztBQUNaQSxTQUFDLEdBQUdzVSxTQUFTLENBQUNvekMsTUFBVixDQUFpQjlxRSxDQUFDLEVBQWxCLENBQUo7QUFDQXNxQixhQUFLLEdBQUcyK0MsTUFBTSxDQUFDN2xELENBQUMsSUFBSXluRCxJQUFMLEdBQVluekMsU0FBUyxDQUFDb3pDLE1BQVYsQ0FBaUI5cUUsQ0FBQyxFQUFsQixDQUFaLEdBQW9Db2pCLENBQXJDLENBQWQ7QUFDQSxZQUFJLENBQUNrSCxLQUFELElBQVcsQ0FBQ3huQixDQUFDLEdBQUd3bkIsS0FBSyxDQUFDL3FCLENBQUQsRUFBSTJnRCxNQUFKLEVBQVlwOUMsQ0FBWixDQUFWLElBQTRCLENBQTNDLEVBQStDLE9BQU8sQ0FBQyxDQUFSO0FBQ2hELE9BSkQsTUFJTyxJQUFJc2dCLENBQUMsSUFBSTg4QixNQUFNLENBQUNqekIsVUFBUCxDQUFrQm5xQixDQUFDLEVBQW5CLENBQVQsRUFBaUM7QUFDdEMsZUFBTyxDQUFDLENBQVI7QUFDRDtBQUNGOztBQUVELFdBQU9BLENBQVA7QUFDRDs7QUFFRCxXQUFTZ25FLFdBQVQsQ0FBcUJ2cUUsQ0FBckIsRUFBd0IyZ0QsTUFBeEIsRUFBZ0NsZ0QsQ0FBaEMsRUFBbUM7QUFDakMsUUFBSVEsQ0FBQyxHQUFHOGtFLFFBQVEsQ0FBQ3RsRCxJQUFULENBQWNrZ0MsTUFBTSxDQUFDL2hELEtBQVAsQ0FBYTZCLENBQWIsQ0FBZCxDQUFSO0FBQ0EsV0FBT1EsQ0FBQyxJQUFJakIsQ0FBQyxDQUFDeUQsQ0FBRixHQUFNd2lFLFlBQVksQ0FBQ2hsRSxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUt1ZixXQUFMLEVBQUQsQ0FBbEIsRUFBd0MvZixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQXJELElBQStELENBQUMsQ0FBeEU7QUFDRDs7QUFFRCxXQUFTa3FFLGlCQUFULENBQTJCM3BFLENBQTNCLEVBQThCMmdELE1BQTlCLEVBQXNDbGdELENBQXRDLEVBQXlDO0FBQ3ZDLFFBQUlRLENBQUMsR0FBR29sRSxjQUFjLENBQUM1bEQsSUFBZixDQUFvQmtnQyxNQUFNLENBQUMvaEQsS0FBUCxDQUFhNkIsQ0FBYixDQUFwQixDQUFSO0FBQ0EsV0FBT1EsQ0FBQyxJQUFJakIsQ0FBQyxDQUFDd0ssQ0FBRixHQUFNODdELGtCQUFrQixDQUFDcmxFLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3VmLFdBQUwsRUFBRCxDQUF4QixFQUE4Qy9mLENBQUMsR0FBR1EsQ0FBQyxDQUFDLENBQUQsQ0FBRCxDQUFLeEIsTUFBM0QsSUFBcUUsQ0FBQyxDQUE5RTtBQUNEOztBQUVELFdBQVNtcUUsWUFBVCxDQUFzQjVwRSxDQUF0QixFQUF5QjJnRCxNQUF6QixFQUFpQ2xnRCxDQUFqQyxFQUFvQztBQUNsQyxRQUFJUSxDQUFDLEdBQUdrbEUsU0FBUyxDQUFDMWxELElBQVYsQ0FBZWtnQyxNQUFNLENBQUMvaEQsS0FBUCxDQUFhNkIsQ0FBYixDQUFmLENBQVI7QUFDQSxXQUFPUSxDQUFDLElBQUlqQixDQUFDLENBQUN3SyxDQUFGLEdBQU00N0QsYUFBYSxDQUFDbmxFLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3VmLFdBQUwsRUFBRCxDQUFuQixFQUF5Qy9mLENBQUMsR0FBR1EsQ0FBQyxDQUFDLENBQUQsQ0FBRCxDQUFLeEIsTUFBdEQsSUFBZ0UsQ0FBQyxDQUF6RTtBQUNEOztBQUVELFdBQVNvcUUsZUFBVCxDQUF5QjdwRSxDQUF6QixFQUE0QjJnRCxNQUE1QixFQUFvQ2xnRCxDQUFwQyxFQUF1QztBQUNyQyxRQUFJUSxDQUFDLEdBQUd3bEUsWUFBWSxDQUFDaG1ELElBQWIsQ0FBa0JrZ0MsTUFBTSxDQUFDL2hELEtBQVAsQ0FBYTZCLENBQWIsQ0FBbEIsQ0FBUjtBQUNBLFdBQU9RLENBQUMsSUFBSWpCLENBQUMsQ0FBQ29DLENBQUYsR0FBTXNrRSxnQkFBZ0IsQ0FBQ3psRSxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUt1ZixXQUFMLEVBQUQsQ0FBdEIsRUFBNEMvZixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQXpELElBQW1FLENBQUMsQ0FBNUU7QUFDRDs7QUFFRCxXQUFTcXFFLFVBQVQsQ0FBb0I5cEUsQ0FBcEIsRUFBdUIyZ0QsTUFBdkIsRUFBK0JsZ0QsQ0FBL0IsRUFBa0M7QUFDaEMsUUFBSVEsQ0FBQyxHQUFHc2xFLE9BQU8sQ0FBQzlsRCxJQUFSLENBQWFrZ0MsTUFBTSxDQUFDL2hELEtBQVAsQ0FBYTZCLENBQWIsQ0FBYixDQUFSO0FBQ0EsV0FBT1EsQ0FBQyxJQUFJakIsQ0FBQyxDQUFDb0MsQ0FBRixHQUFNb2tFLFdBQVcsQ0FBQ3ZsRSxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUt1ZixXQUFMLEVBQUQsQ0FBakIsRUFBdUMvZixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQXBELElBQThELENBQUMsQ0FBdkU7QUFDRDs7QUFFRCxXQUFTc3FFLG1CQUFULENBQTZCL3BFLENBQTdCLEVBQWdDMmdELE1BQWhDLEVBQXdDbGdELENBQXhDLEVBQTJDO0FBQ3pDLFdBQU9pckUsY0FBYyxDQUFDMXJFLENBQUQsRUFBSXVsRSxlQUFKLEVBQXFCNWtCLE1BQXJCLEVBQTZCbGdELENBQTdCLENBQXJCO0FBQ0Q7O0FBRUQsV0FBU3VxRSxlQUFULENBQXlCaHJFLENBQXpCLEVBQTRCMmdELE1BQTVCLEVBQW9DbGdELENBQXBDLEVBQXVDO0FBQ3JDLFdBQU9pckUsY0FBYyxDQUFDMXJFLENBQUQsRUFBSXdsRSxXQUFKLEVBQWlCN2tCLE1BQWpCLEVBQXlCbGdELENBQXpCLENBQXJCO0FBQ0Q7O0FBRUQsV0FBU3dxRSxlQUFULENBQXlCanJFLENBQXpCLEVBQTRCMmdELE1BQTVCLEVBQW9DbGdELENBQXBDLEVBQXVDO0FBQ3JDLFdBQU9pckUsY0FBYyxDQUFDMXJFLENBQUQsRUFBSXlsRSxXQUFKLEVBQWlCOWtCLE1BQWpCLEVBQXlCbGdELENBQXpCLENBQXJCO0FBQ0Q7O0FBRUQsV0FBU21tRSxrQkFBVCxDQUE0QjVtRSxDQUE1QixFQUErQjtBQUM3QixXQUFPNGxFLG9CQUFvQixDQUFDNWxFLENBQUMsQ0FBQytyRSxNQUFGLEVBQUQsQ0FBM0I7QUFDRDs7QUFFRCxXQUFTbEYsYUFBVCxDQUF1QjdtRSxDQUF2QixFQUEwQjtBQUN4QixXQUFPMmxFLGVBQWUsQ0FBQzNsRSxDQUFDLENBQUMrckUsTUFBRixFQUFELENBQXRCO0FBQ0Q7O0FBRUQsV0FBU2pGLGdCQUFULENBQTBCOW1FLENBQTFCLEVBQTZCO0FBQzNCLFdBQU84bEUsa0JBQWtCLENBQUM5bEUsQ0FBQyxDQUFDa3NFLFFBQUYsRUFBRCxDQUF6QjtBQUNEOztBQUVELFdBQVNwZixXQUFULENBQXFCOXNELENBQXJCLEVBQXdCO0FBQ3RCLFdBQU82bEUsYUFBYSxDQUFDN2xFLENBQUMsQ0FBQ2tzRSxRQUFGLEVBQUQsQ0FBcEI7QUFDRDs7QUFFRCxXQUFTM0UsWUFBVCxDQUFzQnZuRSxDQUF0QixFQUF5QjtBQUN2QixXQUFPMGxFLGNBQWMsQ0FBQyxFQUFFMWxFLENBQUMsQ0FBQ3NzRSxRQUFGLE1BQWdCLEVBQWxCLENBQUQsQ0FBckI7QUFDRDs7QUFFRCxXQUFTbEUscUJBQVQsQ0FBK0Jwb0UsQ0FBL0IsRUFBa0M7QUFDaEMsV0FBTzRsRSxvQkFBb0IsQ0FBQzVsRSxDQUFDLENBQUM2ckUsU0FBRixFQUFELENBQTNCO0FBQ0Q7O0FBRUQsV0FBU3hELGdCQUFULENBQTBCcm9FLENBQTFCLEVBQTZCO0FBQzNCLFdBQU8ybEUsZUFBZSxDQUFDM2xFLENBQUMsQ0FBQzZyRSxTQUFGLEVBQUQsQ0FBdEI7QUFDRDs7QUFFRCxXQUFTdkQsbUJBQVQsQ0FBNkJ0b0UsQ0FBN0IsRUFBZ0M7QUFDOUIsV0FBTzhsRSxrQkFBa0IsQ0FBQzlsRSxDQUFDLENBQUNxdEIsV0FBRixFQUFELENBQXpCO0FBQ0Q7O0FBRUQsV0FBU2s3QyxjQUFULENBQXdCdm9FLENBQXhCLEVBQTJCO0FBQ3pCLFdBQU82bEUsYUFBYSxDQUFDN2xFLENBQUMsQ0FBQ3F0QixXQUFGLEVBQUQsQ0FBcEI7QUFDRDs7QUFFRCxXQUFTMjdDLGVBQVQsQ0FBeUJocEUsQ0FBekIsRUFBNEI7QUFDMUIsV0FBTzBsRSxjQUFjLENBQUMsRUFBRTFsRSxDQUFDLENBQUM2c0IsV0FBRixNQUFtQixFQUFyQixDQUFELENBQXJCO0FBQ0Q7O0FBRUQsU0FBTztBQUNMdmxCLFVBQU0sRUFBRSxnQkFBUzZ3QixTQUFULEVBQW9CO0FBQzFCLFVBQUlwNEIsQ0FBQyxHQUFHdzVCLFNBQVMsQ0FBQ3BCLFNBQVMsSUFBSSxFQUFkLEVBQWtCd3VDLE9BQWxCLENBQWpCOztBQUNBNW1FLE9BQUMsQ0FBQ3VnQixRQUFGLEdBQWEsWUFBVztBQUFFLGVBQU82WCxTQUFQO0FBQW1CLE9BQTdDOztBQUNBLGFBQU9wNEIsQ0FBUDtBQUNELEtBTEk7QUFNTGdyQixTQUFLLEVBQUUsZUFBU29OLFNBQVQsRUFBb0I7QUFDekIsVUFBSTEwQixDQUFDLEdBQUcrbkUsUUFBUSxDQUFDcnpDLFNBQVMsSUFBSSxFQUFkLEVBQWtCNnNDLFNBQWxCLENBQWhCOztBQUNBdmhFLE9BQUMsQ0FBQzZjLFFBQUYsR0FBYSxZQUFXO0FBQUUsZUFBTzZYLFNBQVA7QUFBbUIsT0FBN0M7O0FBQ0EsYUFBTzEwQixDQUFQO0FBQ0QsS0FWSTtBQVdMMHFELGFBQVMsRUFBRSxtQkFBU2gyQixTQUFULEVBQW9CO0FBQzdCLFVBQUlwNEIsQ0FBQyxHQUFHdzVCLFNBQVMsQ0FBQ3BCLFNBQVMsSUFBSSxFQUFkLEVBQWtCZ3dDLFVBQWxCLENBQWpCOztBQUNBcG9FLE9BQUMsQ0FBQ3VnQixRQUFGLEdBQWEsWUFBVztBQUFFLGVBQU82WCxTQUFQO0FBQW1CLE9BQTdDOztBQUNBLGFBQU9wNEIsQ0FBUDtBQUNELEtBZkk7QUFnQkxta0UsWUFBUSxFQUFFLGtCQUFTL3JDLFNBQVQsRUFBb0I7QUFDNUIsVUFBSTEwQixDQUFDLEdBQUcrbkUsUUFBUSxDQUFDcnpDLFNBQUQsRUFBWWl0QyxPQUFaLENBQWhCOztBQUNBM2hFLE9BQUMsQ0FBQzZjLFFBQUYsR0FBYSxZQUFXO0FBQUUsZUFBTzZYLFNBQVA7QUFBbUIsT0FBN0M7O0FBQ0EsYUFBTzEwQixDQUFQO0FBQ0Q7QUFwQkksR0FBUDtBQXNCRDtBQUVELElBQUk2bkUsSUFBSSxHQUFHO0FBQUMsT0FBSyxFQUFOO0FBQVUsT0FBSyxHQUFmO0FBQW9CLE9BQUs7QUFBekIsQ0FBWDtBQUFBLElBQ0lpQixRQUFRLEdBQUcsU0FEZjtBQUFBLElBQzBCO0FBQ3RCQyxTQUFTLEdBQUcsSUFGaEI7QUFBQSxJQUdJQyxTQUFTLEdBQUcscUJBSGhCOztBQUtBLFNBQVNsZ0QsR0FBVCxDQUFhcnJCLEtBQWIsRUFBb0JvM0IsSUFBcEIsRUFBMEIvc0IsS0FBMUIsRUFBaUM7QUFDL0IsTUFBSWl0QixJQUFJLEdBQUd0M0IsS0FBSyxHQUFHLENBQVIsR0FBWSxHQUFaLEdBQWtCLEVBQTdCO0FBQUEsTUFDSXkvQyxNQUFNLEdBQUcsQ0FBQ25vQixJQUFJLEdBQUcsQ0FBQ3QzQixLQUFKLEdBQVlBLEtBQWpCLElBQTBCLEVBRHZDO0FBQUEsTUFFSXpCLE1BQU0sR0FBR2toRCxNQUFNLENBQUNsaEQsTUFGcEI7QUFHQSxTQUFPKzRCLElBQUksSUFBSS80QixNQUFNLEdBQUc4TCxLQUFULEdBQWlCLElBQUk3TSxLQUFKLENBQVU2TSxLQUFLLEdBQUc5TCxNQUFSLEdBQWlCLENBQTNCLEVBQThCd3NCLElBQTlCLENBQW1DcU0sSUFBbkMsSUFBMkNxb0IsTUFBNUQsR0FBcUVBLE1BQXpFLENBQVg7QUFDRDs7QUFFRCxTQUFTK3JCLE9BQVQsQ0FBaUJuaUUsQ0FBakIsRUFBb0I7QUFDbEIsU0FBT0EsQ0FBQyxDQUFDeWpCLE9BQUYsQ0FBVXkrQyxTQUFWLEVBQXFCLE1BQXJCLENBQVA7QUFDRDs7QUFFRCxTQUFTekcsUUFBVCxDQUFrQjlVLEtBQWxCLEVBQXlCO0FBQ3ZCLFNBQU8sSUFBSTU2QyxNQUFKLENBQVcsU0FBUzQ2QyxLQUFLLENBQUNyeUQsR0FBTixDQUFVNnRFLE9BQVYsRUFBbUJ6Z0QsSUFBbkIsQ0FBd0IsR0FBeEIsQ0FBVCxHQUF3QyxHQUFuRCxFQUF3RCxHQUF4RCxDQUFQO0FBQ0Q7O0FBRUQsU0FBU2k2QyxZQUFULENBQXNCaFYsS0FBdEIsRUFBNkI7QUFDM0IsTUFBSXJ5RCxHQUFHLEdBQUcsRUFBVjtBQUFBLE1BQWM0QixDQUFDLEdBQUcsQ0FBQyxDQUFuQjtBQUFBLE1BQXNCUSxDQUFDLEdBQUdpd0QsS0FBSyxDQUFDenhELE1BQWhDOztBQUNBLFNBQU8sRUFBRWdCLENBQUYsR0FBTVEsQ0FBYjtBQUFnQnBDLE9BQUcsQ0FBQ3F5RCxLQUFLLENBQUN6d0QsQ0FBRCxDQUFMLENBQVMrZixXQUFULEVBQUQsQ0FBSCxHQUE4Qi9mLENBQTlCO0FBQWhCOztBQUNBLFNBQU81QixHQUFQO0FBQ0Q7O0FBRUQsU0FBU2lzRSx3QkFBVCxDQUFrQzlxRSxDQUFsQyxFQUFxQzJnRCxNQUFyQyxFQUE2Q2xnRCxDQUE3QyxFQUFnRDtBQUM5QyxNQUFJUSxDQUFDLEdBQUdzckUsUUFBUSxDQUFDOXJELElBQVQsQ0FBY2tnQyxNQUFNLENBQUMvaEQsS0FBUCxDQUFhNkIsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLENBQXBCLENBQWQsQ0FBUjtBQUNBLFNBQU9RLENBQUMsSUFBSWpCLENBQUMsQ0FBQ3dLLENBQUYsR0FBTSxDQUFDdkosQ0FBQyxDQUFDLENBQUQsQ0FBUixFQUFhUixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQTFCLElBQW9DLENBQUMsQ0FBN0M7QUFDRDs7QUFFRCxTQUFTa3JFLHdCQUFULENBQWtDM3FFLENBQWxDLEVBQXFDMmdELE1BQXJDLEVBQTZDbGdELENBQTdDLEVBQWdEO0FBQzlDLE1BQUlRLENBQUMsR0FBR3NyRSxRQUFRLENBQUM5ckQsSUFBVCxDQUFja2dDLE1BQU0sQ0FBQy9oRCxLQUFQLENBQWE2QixDQUFiLEVBQWdCQSxDQUFDLEdBQUcsQ0FBcEIsQ0FBZCxDQUFSO0FBQ0EsU0FBT1EsQ0FBQyxJQUFJakIsQ0FBQyxDQUFDbThCLENBQUYsR0FBTSxDQUFDbDdCLENBQUMsQ0FBQyxDQUFELENBQVIsRUFBYVIsQ0FBQyxHQUFHUSxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUt4QixNQUExQixJQUFvQyxDQUFDLENBQTdDO0FBQ0Q7O0FBRUQsU0FBU21yRSxxQkFBVCxDQUErQjVxRSxDQUEvQixFQUFrQzJnRCxNQUFsQyxFQUEwQ2xnRCxDQUExQyxFQUE2QztBQUMzQyxNQUFJUSxDQUFDLEdBQUdzckUsUUFBUSxDQUFDOXJELElBQVQsQ0FBY2tnQyxNQUFNLENBQUMvaEQsS0FBUCxDQUFhNkIsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLENBQXBCLENBQWQsQ0FBUjtBQUNBLFNBQU9RLENBQUMsSUFBSWpCLENBQUMsQ0FBQ29zRSxDQUFGLEdBQU0sQ0FBQ25yRSxDQUFDLENBQUMsQ0FBRCxDQUFSLEVBQWFSLENBQUMsR0FBR1EsQ0FBQyxDQUFDLENBQUQsQ0FBRCxDQUFLeEIsTUFBMUIsSUFBb0MsQ0FBQyxDQUE3QztBQUNEOztBQUVELFNBQVNvckUsa0JBQVQsQ0FBNEI3cUUsQ0FBNUIsRUFBK0IyZ0QsTUFBL0IsRUFBdUNsZ0QsQ0FBdkMsRUFBMEM7QUFDeEMsTUFBSVEsQ0FBQyxHQUFHc3JFLFFBQVEsQ0FBQzlyRCxJQUFULENBQWNrZ0MsTUFBTSxDQUFDL2hELEtBQVAsQ0FBYTZCLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxDQUFwQixDQUFkLENBQVI7QUFDQSxTQUFPUSxDQUFDLElBQUlqQixDQUFDLENBQUM0ckUsQ0FBRixHQUFNLENBQUMzcUUsQ0FBQyxDQUFDLENBQUQsQ0FBUixFQUFhUixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQTFCLElBQW9DLENBQUMsQ0FBN0M7QUFDRDs7QUFFRCxTQUFTc3JFLHFCQUFULENBQStCL3FFLENBQS9CLEVBQWtDMmdELE1BQWxDLEVBQTBDbGdELENBQTFDLEVBQTZDO0FBQzNDLE1BQUlRLENBQUMsR0FBR3NyRSxRQUFRLENBQUM5ckQsSUFBVCxDQUFja2dDLE1BQU0sQ0FBQy9oRCxLQUFQLENBQWE2QixDQUFiLEVBQWdCQSxDQUFDLEdBQUcsQ0FBcEIsQ0FBZCxDQUFSO0FBQ0EsU0FBT1EsQ0FBQyxJQUFJakIsQ0FBQyxDQUFDMk8sQ0FBRixHQUFNLENBQUMxTixDQUFDLENBQUMsQ0FBRCxDQUFSLEVBQWFSLENBQUMsR0FBR1EsQ0FBQyxDQUFDLENBQUQsQ0FBRCxDQUFLeEIsTUFBMUIsSUFBb0MsQ0FBQyxDQUE3QztBQUNEOztBQUVELFNBQVMwckUsYUFBVCxDQUF1Qm5yRSxDQUF2QixFQUEwQjJnRCxNQUExQixFQUFrQ2xnRCxDQUFsQyxFQUFxQztBQUNuQyxNQUFJUSxDQUFDLEdBQUdzckUsUUFBUSxDQUFDOXJELElBQVQsQ0FBY2tnQyxNQUFNLENBQUMvaEQsS0FBUCxDQUFhNkIsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLENBQXBCLENBQWQsQ0FBUjtBQUNBLFNBQU9RLENBQUMsSUFBSWpCLENBQUMsQ0FBQ2tHLENBQUYsR0FBTSxDQUFDakYsQ0FBQyxDQUFDLENBQUQsQ0FBUixFQUFhUixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQTFCLElBQW9DLENBQUMsQ0FBN0M7QUFDRDs7QUFFRCxTQUFTeXJFLFNBQVQsQ0FBbUJsckUsQ0FBbkIsRUFBc0IyZ0QsTUFBdEIsRUFBOEJsZ0QsQ0FBOUIsRUFBaUM7QUFDL0IsTUFBSVEsQ0FBQyxHQUFHc3JFLFFBQVEsQ0FBQzlyRCxJQUFULENBQWNrZ0MsTUFBTSxDQUFDL2hELEtBQVAsQ0FBYTZCLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxDQUFwQixDQUFkLENBQVI7QUFDQSxTQUFPUSxDQUFDLElBQUlqQixDQUFDLENBQUNrRyxDQUFGLEdBQU0sQ0FBQ2pGLENBQUMsQ0FBQyxDQUFELENBQUYsSUFBUyxDQUFDQSxDQUFDLENBQUMsQ0FBRCxDQUFGLEdBQVEsRUFBUixHQUFhLElBQWIsR0FBb0IsSUFBN0IsQ0FBTixFQUEwQ1IsQ0FBQyxHQUFHUSxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUt4QixNQUF2RCxJQUFpRSxDQUFDLENBQTFFO0FBQ0Q7O0FBRUQsU0FBUzJyRSxTQUFULENBQW1CcHJFLENBQW5CLEVBQXNCMmdELE1BQXRCLEVBQThCbGdELENBQTlCLEVBQWlDO0FBQy9CLE1BQUlRLENBQUMsR0FBRywrQkFBK0J3ZixJQUEvQixDQUFvQ2tnQyxNQUFNLENBQUMvaEQsS0FBUCxDQUFhNkIsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLENBQXBCLENBQXBDLENBQVI7QUFDQSxTQUFPUSxDQUFDLElBQUlqQixDQUFDLENBQUNxc0UsQ0FBRixHQUFNcHJFLENBQUMsQ0FBQyxDQUFELENBQUQsR0FBTyxDQUFQLEdBQVcsRUFBRUEsQ0FBQyxDQUFDLENBQUQsQ0FBRCxJQUFRQSxDQUFDLENBQUMsQ0FBRCxDQUFELElBQVEsSUFBaEIsQ0FBRixDQUFqQixFQUEyQ1IsQ0FBQyxHQUFHUSxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUt4QixNQUF4RCxJQUFrRSxDQUFDLENBQTNFO0FBQ0Q7O0FBRUQsU0FBUzRxRSxnQkFBVCxDQUEwQnJxRSxDQUExQixFQUE2QjJnRCxNQUE3QixFQUFxQ2xnRCxDQUFyQyxFQUF3QztBQUN0QyxNQUFJUSxDQUFDLEdBQUdzckUsUUFBUSxDQUFDOXJELElBQVQsQ0FBY2tnQyxNQUFNLENBQUMvaEQsS0FBUCxDQUFhNkIsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLENBQXBCLENBQWQsQ0FBUjtBQUNBLFNBQU9RLENBQUMsSUFBSWpCLENBQUMsQ0FBQ29DLENBQUYsR0FBTW5CLENBQUMsQ0FBQyxDQUFELENBQUQsR0FBTyxDQUFiLEVBQWdCUixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQTdCLElBQXVDLENBQUMsQ0FBaEQ7QUFDRDs7QUFFRCxTQUFTdXFFLGVBQVQsQ0FBeUJocUUsQ0FBekIsRUFBNEIyZ0QsTUFBNUIsRUFBb0NsZ0QsQ0FBcEMsRUFBdUM7QUFDckMsTUFBSVEsQ0FBQyxHQUFHc3JFLFFBQVEsQ0FBQzlyRCxJQUFULENBQWNrZ0MsTUFBTSxDQUFDL2hELEtBQVAsQ0FBYTZCLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxDQUFwQixDQUFkLENBQVI7QUFDQSxTQUFPUSxDQUFDLElBQUlqQixDQUFDLENBQUNBLENBQUYsR0FBTSxDQUFDaUIsQ0FBQyxDQUFDLENBQUQsQ0FBUixFQUFhUixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQTFCLElBQW9DLENBQUMsQ0FBN0M7QUFDRDs7QUFFRCxTQUFTMHFFLGNBQVQsQ0FBd0JucUUsQ0FBeEIsRUFBMkIyZ0QsTUFBM0IsRUFBbUNsZ0QsQ0FBbkMsRUFBc0M7QUFDcEMsTUFBSVEsQ0FBQyxHQUFHc3JFLFFBQVEsQ0FBQzlyRCxJQUFULENBQWNrZ0MsTUFBTSxDQUFDL2hELEtBQVAsQ0FBYTZCLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxDQUFwQixDQUFkLENBQVI7QUFDQSxTQUFPUSxDQUFDLElBQUlqQixDQUFDLENBQUNvQyxDQUFGLEdBQU0sQ0FBTixFQUFTcEMsQ0FBQyxDQUFDQSxDQUFGLEdBQU0sQ0FBQ2lCLENBQUMsQ0FBQyxDQUFELENBQWpCLEVBQXNCUixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQW5DLElBQTZDLENBQUMsQ0FBdEQ7QUFDRDs7QUFFRCxTQUFTeXFFLFdBQVQsQ0FBcUJscUUsQ0FBckIsRUFBd0IyZ0QsTUFBeEIsRUFBZ0NsZ0QsQ0FBaEMsRUFBbUM7QUFDakMsTUFBSVEsQ0FBQyxHQUFHc3JFLFFBQVEsQ0FBQzlyRCxJQUFULENBQWNrZ0MsTUFBTSxDQUFDL2hELEtBQVAsQ0FBYTZCLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxDQUFwQixDQUFkLENBQVI7QUFDQSxTQUFPUSxDQUFDLElBQUlqQixDQUFDLENBQUNpbEUsQ0FBRixHQUFNLENBQUNoa0UsQ0FBQyxDQUFDLENBQUQsQ0FBUixFQUFhUixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQTFCLElBQW9DLENBQUMsQ0FBN0M7QUFDRDs7QUFFRCxTQUFTNnFFLFlBQVQsQ0FBc0J0cUUsQ0FBdEIsRUFBeUIyZ0QsTUFBekIsRUFBaUNsZ0QsQ0FBakMsRUFBb0M7QUFDbEMsTUFBSVEsQ0FBQyxHQUFHc3JFLFFBQVEsQ0FBQzlyRCxJQUFULENBQWNrZ0MsTUFBTSxDQUFDL2hELEtBQVAsQ0FBYTZCLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxDQUFwQixDQUFkLENBQVI7QUFDQSxTQUFPUSxDQUFDLElBQUlqQixDQUFDLENBQUN1dUMsQ0FBRixHQUFNLENBQUN0dEMsQ0FBQyxDQUFDLENBQUQsQ0FBUixFQUFhUixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQTFCLElBQW9DLENBQUMsQ0FBN0M7QUFDRDs7QUFFRCxTQUFTaXJFLFlBQVQsQ0FBc0IxcUUsQ0FBdEIsRUFBeUIyZ0QsTUFBekIsRUFBaUNsZ0QsQ0FBakMsRUFBb0M7QUFDbEMsTUFBSVEsQ0FBQyxHQUFHc3JFLFFBQVEsQ0FBQzlyRCxJQUFULENBQWNrZ0MsTUFBTSxDQUFDL2hELEtBQVAsQ0FBYTZCLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxDQUFwQixDQUFkLENBQVI7QUFDQSxTQUFPUSxDQUFDLElBQUlqQixDQUFDLENBQUNrUCxDQUFGLEdBQU0sQ0FBQ2pPLENBQUMsQ0FBQyxDQUFELENBQVIsRUFBYVIsQ0FBQyxHQUFHUSxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUt4QixNQUExQixJQUFvQyxDQUFDLENBQTdDO0FBQ0Q7O0FBRUQsU0FBUzJxRSxpQkFBVCxDQUEyQnBxRSxDQUEzQixFQUE4QjJnRCxNQUE5QixFQUFzQ2xnRCxDQUF0QyxFQUF5QztBQUN2QyxNQUFJUSxDQUFDLEdBQUdzckUsUUFBUSxDQUFDOXJELElBQVQsQ0FBY2tnQyxNQUFNLENBQUMvaEQsS0FBUCxDQUFhNkIsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLENBQXBCLENBQWQsQ0FBUjtBQUNBLFNBQU9RLENBQUMsSUFBSWpCLENBQUMsQ0FBQ2tsRSxDQUFGLEdBQU0sQ0FBQ2prRSxDQUFDLENBQUMsQ0FBRCxDQUFSLEVBQWFSLENBQUMsR0FBR1EsQ0FBQyxDQUFDLENBQUQsQ0FBRCxDQUFLeEIsTUFBMUIsSUFBb0MsQ0FBQyxDQUE3QztBQUNEOztBQUVELFNBQVN3cUUsaUJBQVQsQ0FBMkJqcUUsQ0FBM0IsRUFBOEIyZ0QsTUFBOUIsRUFBc0NsZ0QsQ0FBdEMsRUFBeUM7QUFDdkMsTUFBSVEsQ0FBQyxHQUFHc3JFLFFBQVEsQ0FBQzlyRCxJQUFULENBQWNrZ0MsTUFBTSxDQUFDL2hELEtBQVAsQ0FBYTZCLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxDQUFwQixDQUFkLENBQVI7QUFDQSxTQUFPUSxDQUFDLElBQUlqQixDQUFDLENBQUNrbEUsQ0FBRixHQUFNcGtFLElBQUksQ0FBQytDLEtBQUwsQ0FBVzVDLENBQUMsQ0FBQyxDQUFELENBQUQsR0FBTyxJQUFsQixDQUFOLEVBQStCUixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQTVDLElBQXNELENBQUMsQ0FBL0Q7QUFDRDs7QUFFRCxTQUFTNHJFLG1CQUFULENBQTZCcnJFLENBQTdCLEVBQWdDMmdELE1BQWhDLEVBQXdDbGdELENBQXhDLEVBQTJDO0FBQ3pDLE1BQUlRLENBQUMsR0FBR3VyRSxTQUFTLENBQUMvckQsSUFBVixDQUFla2dDLE1BQU0sQ0FBQy9oRCxLQUFQLENBQWE2QixDQUFiLEVBQWdCQSxDQUFDLEdBQUcsQ0FBcEIsQ0FBZixDQUFSO0FBQ0EsU0FBT1EsQ0FBQyxHQUFHUixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQVosR0FBcUIsQ0FBQyxDQUE5QjtBQUNEOztBQUVELFNBQVMrcUUsa0JBQVQsQ0FBNEJ4cUUsQ0FBNUIsRUFBK0IyZ0QsTUFBL0IsRUFBdUNsZ0QsQ0FBdkMsRUFBMEM7QUFDeEMsTUFBSVEsQ0FBQyxHQUFHc3JFLFFBQVEsQ0FBQzlyRCxJQUFULENBQWNrZ0MsTUFBTSxDQUFDL2hELEtBQVAsQ0FBYTZCLENBQWIsQ0FBZCxDQUFSO0FBQ0EsU0FBT1EsQ0FBQyxJQUFJakIsQ0FBQyxDQUFDMnJFLENBQUYsR0FBTSxDQUFDMXFFLENBQUMsQ0FBQyxDQUFELENBQVIsRUFBYVIsQ0FBQyxHQUFHUSxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUt4QixNQUExQixJQUFvQyxDQUFDLENBQTdDO0FBQ0Q7O0FBRUQsU0FBU2dyRSx5QkFBVCxDQUFtQ3pxRSxDQUFuQyxFQUFzQzJnRCxNQUF0QyxFQUE4Q2xnRCxDQUE5QyxFQUFpRDtBQUMvQyxNQUFJUSxDQUFDLEdBQUdzckUsUUFBUSxDQUFDOXJELElBQVQsQ0FBY2tnQyxNQUFNLENBQUMvaEQsS0FBUCxDQUFhNkIsQ0FBYixDQUFkLENBQVI7QUFDQSxTQUFPUSxDQUFDLElBQUlqQixDQUFDLENBQUMyckUsQ0FBRixHQUFPLENBQUMxcUUsQ0FBQyxDQUFDLENBQUQsQ0FBSCxHQUFVLElBQWhCLEVBQXNCUixDQUFDLEdBQUdRLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS3hCLE1BQW5DLElBQTZDLENBQUMsQ0FBdEQ7QUFDRDs7QUFFRCxTQUFTc25FLGdCQUFULENBQTBCL21FLENBQTFCLEVBQTZCeUQsQ0FBN0IsRUFBZ0M7QUFDOUIsU0FBTzhvQixHQUFHLENBQUN2c0IsQ0FBQyxDQUFDbXNFLE9BQUYsRUFBRCxFQUFjMW9FLENBQWQsRUFBaUIsQ0FBakIsQ0FBVjtBQUNEOztBQUVELFNBQVN3akUsWUFBVCxDQUFzQmpuRSxDQUF0QixFQUF5QnlELENBQXpCLEVBQTRCO0FBQzFCLFNBQU84b0IsR0FBRyxDQUFDdnNCLENBQUMsQ0FBQ3NzRSxRQUFGLEVBQUQsRUFBZTdvRSxDQUFmLEVBQWtCLENBQWxCLENBQVY7QUFDRDs7QUFFRCxTQUFTeWpFLFlBQVQsQ0FBc0JsbkUsQ0FBdEIsRUFBeUJ5RCxDQUF6QixFQUE0QjtBQUMxQixTQUFPOG9CLEdBQUcsQ0FBQ3ZzQixDQUFDLENBQUNzc0UsUUFBRixLQUFlLEVBQWYsSUFBcUIsRUFBdEIsRUFBMEI3b0UsQ0FBMUIsRUFBNkIsQ0FBN0IsQ0FBVjtBQUNEOztBQUVELFNBQVMwakUsZUFBVCxDQUF5Qm5uRSxDQUF6QixFQUE0QnlELENBQTVCLEVBQStCO0FBQzdCLFNBQU84b0IsR0FBRyxDQUFDLElBQUk4Z0MsK0NBQU8sQ0FBQ3hvRCxLQUFSLENBQWNxb0Qsd0RBQVEsQ0FBQ2x0RCxDQUFELENBQXRCLEVBQTJCQSxDQUEzQixDQUFMLEVBQW9DeUQsQ0FBcEMsRUFBdUMsQ0FBdkMsQ0FBVjtBQUNEOztBQUVELFNBQVMyakUsa0JBQVQsQ0FBNEJwbkUsQ0FBNUIsRUFBK0J5RCxDQUEvQixFQUFrQztBQUNoQyxTQUFPOG9CLEdBQUcsQ0FBQ3ZzQixDQUFDLENBQUMyc0UsZUFBRixFQUFELEVBQXNCbHBFLENBQXRCLEVBQXlCLENBQXpCLENBQVY7QUFDRDs7QUFFRCxTQUFTdWpFLGtCQUFULENBQTRCaG5FLENBQTVCLEVBQStCeUQsQ0FBL0IsRUFBa0M7QUFDaEMsU0FBTzJqRSxrQkFBa0IsQ0FBQ3BuRSxDQUFELEVBQUl5RCxDQUFKLENBQWxCLEdBQTJCLEtBQWxDO0FBQ0Q7O0FBRUQsU0FBUzRqRSxpQkFBVCxDQUEyQnJuRSxDQUEzQixFQUE4QnlELENBQTlCLEVBQWlDO0FBQy9CLFNBQU84b0IsR0FBRyxDQUFDdnNCLENBQUMsQ0FBQ2tzRSxRQUFGLEtBQWUsQ0FBaEIsRUFBbUJ6b0UsQ0FBbkIsRUFBc0IsQ0FBdEIsQ0FBVjtBQUNEOztBQUVELFNBQVM2akUsYUFBVCxDQUF1QnRuRSxDQUF2QixFQUEwQnlELENBQTFCLEVBQTZCO0FBQzNCLFNBQU84b0IsR0FBRyxDQUFDdnNCLENBQUMsQ0FBQzRzRSxVQUFGLEVBQUQsRUFBaUJucEUsQ0FBakIsRUFBb0IsQ0FBcEIsQ0FBVjtBQUNEOztBQUVELFNBQVNpa0UsYUFBVCxDQUF1QjFuRSxDQUF2QixFQUEwQnlELENBQTFCLEVBQTZCO0FBQzNCLFNBQU84b0IsR0FBRyxDQUFDdnNCLENBQUMsQ0FBQzZzRSxVQUFGLEVBQUQsRUFBaUJwcEUsQ0FBakIsRUFBb0IsQ0FBcEIsQ0FBVjtBQUNEOztBQUVELFNBQVNra0UseUJBQVQsQ0FBbUMzbkUsQ0FBbkMsRUFBc0M7QUFDcEMsTUFBSW1zRCxHQUFHLEdBQUduc0QsQ0FBQyxDQUFDK3JFLE1BQUYsRUFBVjtBQUNBLFNBQU81ZixHQUFHLEtBQUssQ0FBUixHQUFZLENBQVosR0FBZ0JBLEdBQXZCO0FBQ0Q7O0FBRUQsU0FBU3liLHNCQUFULENBQWdDNW5FLENBQWhDLEVBQW1DeUQsQ0FBbkMsRUFBc0M7QUFDcEMsU0FBTzhvQixHQUFHLENBQUN1Z0Qsa0RBQVUsQ0FBQ2pvRSxLQUFYLENBQWlCcW9ELHdEQUFRLENBQUNsdEQsQ0FBRCxDQUF6QixFQUE4QkEsQ0FBOUIsQ0FBRCxFQUFtQ3lELENBQW5DLEVBQXNDLENBQXRDLENBQVY7QUFDRDs7QUFFRCxTQUFTb2tFLG1CQUFULENBQTZCN25FLENBQTdCLEVBQWdDeUQsQ0FBaEMsRUFBbUM7QUFDakMsTUFBSTBvRCxHQUFHLEdBQUduc0QsQ0FBQyxDQUFDK3JFLE1BQUYsRUFBVjtBQUNBL3JFLEdBQUMsR0FBSW1zRCxHQUFHLElBQUksQ0FBUCxJQUFZQSxHQUFHLEtBQUssQ0FBckIsR0FBMEI0Z0IsNERBQVksQ0FBQy9zRSxDQUFELENBQXRDLEdBQTRDK3NFLG9EQUFZLENBQUM1cUUsSUFBYixDQUFrQm5DLENBQWxCLENBQWhEO0FBQ0EsU0FBT3VzQixHQUFHLENBQUN3Z0Qsb0RBQVksQ0FBQ2xvRSxLQUFiLENBQW1CcW9ELHdEQUFRLENBQUNsdEQsQ0FBRCxDQUEzQixFQUFnQ0EsQ0FBaEMsS0FBc0NrdEQsd0RBQVEsQ0FBQ2x0RCxDQUFELENBQVIsQ0FBWStyRSxNQUFaLE9BQXlCLENBQS9ELENBQUQsRUFBb0V0b0UsQ0FBcEUsRUFBdUUsQ0FBdkUsQ0FBVjtBQUNEOztBQUVELFNBQVNxa0UseUJBQVQsQ0FBbUM5bkUsQ0FBbkMsRUFBc0M7QUFDcEMsU0FBT0EsQ0FBQyxDQUFDK3JFLE1BQUYsRUFBUDtBQUNEOztBQUVELFNBQVNoRSxzQkFBVCxDQUFnQy9uRSxDQUFoQyxFQUFtQ3lELENBQW5DLEVBQXNDO0FBQ3BDLFNBQU84b0IsR0FBRyxDQUFDeS9DLGtEQUFVLENBQUNubkUsS0FBWCxDQUFpQnFvRCx3REFBUSxDQUFDbHRELENBQUQsQ0FBekIsRUFBOEJBLENBQTlCLENBQUQsRUFBbUN5RCxDQUFuQyxFQUFzQyxDQUF0QyxDQUFWO0FBQ0Q7O0FBRUQsU0FBUytvQixVQUFULENBQW9CeHNCLENBQXBCLEVBQXVCeUQsQ0FBdkIsRUFBMEI7QUFDeEIsU0FBTzhvQixHQUFHLENBQUN2c0IsQ0FBQyxDQUFDaXNFLFdBQUYsS0FBa0IsR0FBbkIsRUFBd0J4b0UsQ0FBeEIsRUFBMkIsQ0FBM0IsQ0FBVjtBQUNEOztBQUVELFNBQVN1a0UsY0FBVCxDQUF3QmhvRSxDQUF4QixFQUEyQnlELENBQTNCLEVBQThCO0FBQzVCLFNBQU84b0IsR0FBRyxDQUFDdnNCLENBQUMsQ0FBQ2lzRSxXQUFGLEtBQWtCLEtBQW5CLEVBQTBCeG9FLENBQTFCLEVBQTZCLENBQTdCLENBQVY7QUFDRDs7QUFFRCxTQUFTd2tFLFVBQVQsQ0FBb0Jqb0UsQ0FBcEIsRUFBdUI7QUFDckIsTUFBSWdrQixDQUFDLEdBQUdoa0IsQ0FBQyxDQUFDZ3RFLGlCQUFGLEVBQVI7QUFDQSxTQUFPLENBQUNocEQsQ0FBQyxHQUFHLENBQUosR0FBUSxHQUFSLElBQWVBLENBQUMsSUFBSSxDQUFDLENBQU4sRUFBUyxHQUF4QixDQUFELElBQ0R1SSxHQUFHLENBQUN2SSxDQUFDLEdBQUcsRUFBSixHQUFTLENBQVYsRUFBYSxHQUFiLEVBQWtCLENBQWxCLENBREYsR0FFRHVJLEdBQUcsQ0FBQ3ZJLENBQUMsR0FBRyxFQUFMLEVBQVMsR0FBVCxFQUFjLENBQWQsQ0FGVDtBQUdEOztBQUVELFNBQVN3a0QsbUJBQVQsQ0FBNkJ4b0UsQ0FBN0IsRUFBZ0N5RCxDQUFoQyxFQUFtQztBQUNqQyxTQUFPOG9CLEdBQUcsQ0FBQ3ZzQixDQUFDLENBQUNzdEIsVUFBRixFQUFELEVBQWlCN3BCLENBQWpCLEVBQW9CLENBQXBCLENBQVY7QUFDRDs7QUFFRCxTQUFTaWxFLGVBQVQsQ0FBeUIxb0UsQ0FBekIsRUFBNEJ5RCxDQUE1QixFQUErQjtBQUM3QixTQUFPOG9CLEdBQUcsQ0FBQ3ZzQixDQUFDLENBQUM2c0IsV0FBRixFQUFELEVBQWtCcHBCLENBQWxCLEVBQXFCLENBQXJCLENBQVY7QUFDRDs7QUFFRCxTQUFTa2xFLGVBQVQsQ0FBeUIzb0UsQ0FBekIsRUFBNEJ5RCxDQUE1QixFQUErQjtBQUM3QixTQUFPOG9CLEdBQUcsQ0FBQ3ZzQixDQUFDLENBQUM2c0IsV0FBRixLQUFrQixFQUFsQixJQUF3QixFQUF6QixFQUE2QnBwQixDQUE3QixFQUFnQyxDQUFoQyxDQUFWO0FBQ0Q7O0FBRUQsU0FBU21sRSxrQkFBVCxDQUE0QjVvRSxDQUE1QixFQUErQnlELENBQS9CLEVBQWtDO0FBQ2hDLFNBQU84b0IsR0FBRyxDQUFDLElBQUl1aEMsOENBQU0sQ0FBQ2pwRCxLQUFQLENBQWE4b0QsdURBQU8sQ0FBQzN0RCxDQUFELENBQXBCLEVBQXlCQSxDQUF6QixDQUFMLEVBQWtDeUQsQ0FBbEMsRUFBcUMsQ0FBckMsQ0FBVjtBQUNEOztBQUVELFNBQVNvbEUscUJBQVQsQ0FBK0I3b0UsQ0FBL0IsRUFBa0N5RCxDQUFsQyxFQUFxQztBQUNuQyxTQUFPOG9CLEdBQUcsQ0FBQ3ZzQixDQUFDLENBQUNtdEIsa0JBQUYsRUFBRCxFQUF5QjFwQixDQUF6QixFQUE0QixDQUE1QixDQUFWO0FBQ0Q7O0FBRUQsU0FBU2dsRSxxQkFBVCxDQUErQnpvRSxDQUEvQixFQUFrQ3lELENBQWxDLEVBQXFDO0FBQ25DLFNBQU9vbEUscUJBQXFCLENBQUM3b0UsQ0FBRCxFQUFJeUQsQ0FBSixDQUFyQixHQUE4QixLQUFyQztBQUNEOztBQUVELFNBQVNxbEUsb0JBQVQsQ0FBOEI5b0UsQ0FBOUIsRUFBaUN5RCxDQUFqQyxFQUFvQztBQUNsQyxTQUFPOG9CLEdBQUcsQ0FBQ3ZzQixDQUFDLENBQUNxdEIsV0FBRixLQUFrQixDQUFuQixFQUFzQjVwQixDQUF0QixFQUF5QixDQUF6QixDQUFWO0FBQ0Q7O0FBRUQsU0FBU3NsRSxnQkFBVCxDQUEwQi9vRSxDQUExQixFQUE2QnlELENBQTdCLEVBQWdDO0FBQzlCLFNBQU84b0IsR0FBRyxDQUFDdnNCLENBQUMsQ0FBQytzQixhQUFGLEVBQUQsRUFBb0J0cEIsQ0FBcEIsRUFBdUIsQ0FBdkIsQ0FBVjtBQUNEOztBQUVELFNBQVN3bEUsZ0JBQVQsQ0FBMEJqcEUsQ0FBMUIsRUFBNkJ5RCxDQUE3QixFQUFnQztBQUM5QixTQUFPOG9CLEdBQUcsQ0FBQ3ZzQixDQUFDLENBQUNpdEIsYUFBRixFQUFELEVBQW9CeHBCLENBQXBCLEVBQXVCLENBQXZCLENBQVY7QUFDRDs7QUFFRCxTQUFTeWxFLDRCQUFULENBQXNDbHBFLENBQXRDLEVBQXlDO0FBQ3ZDLE1BQUlpdEUsR0FBRyxHQUFHanRFLENBQUMsQ0FBQzZyRSxTQUFGLEVBQVY7QUFDQSxTQUFPb0IsR0FBRyxLQUFLLENBQVIsR0FBWSxDQUFaLEdBQWdCQSxHQUF2QjtBQUNEOztBQUVELFNBQVM5RCx5QkFBVCxDQUFtQ25wRSxDQUFuQyxFQUFzQ3lELENBQXRDLEVBQXlDO0FBQ3ZDLFNBQU84b0IsR0FBRyxDQUFDMmdELGlEQUFTLENBQUNyb0UsS0FBVixDQUFnQjhvRCx1REFBTyxDQUFDM3RELENBQUQsQ0FBdkIsRUFBNEJBLENBQTVCLENBQUQsRUFBaUN5RCxDQUFqQyxFQUFvQyxDQUFwQyxDQUFWO0FBQ0Q7O0FBRUQsU0FBUzJsRSxzQkFBVCxDQUFnQ3BwRSxDQUFoQyxFQUFtQ3lELENBQW5DLEVBQXNDO0FBQ3BDLE1BQUkwb0QsR0FBRyxHQUFHbnNELENBQUMsQ0FBQzZyRSxTQUFGLEVBQVY7QUFDQTdyRSxHQUFDLEdBQUltc0QsR0FBRyxJQUFJLENBQVAsSUFBWUEsR0FBRyxLQUFLLENBQXJCLEdBQTBCZ2hCLDJEQUFXLENBQUNudEUsQ0FBRCxDQUFyQyxHQUEyQ210RSxtREFBVyxDQUFDaHJFLElBQVosQ0FBaUJuQyxDQUFqQixDQUEvQztBQUNBLFNBQU91c0IsR0FBRyxDQUFDNGdELG1EQUFXLENBQUN0b0UsS0FBWixDQUFrQjhvRCx1REFBTyxDQUFDM3RELENBQUQsQ0FBekIsRUFBOEJBLENBQTlCLEtBQW9DMnRELHVEQUFPLENBQUMzdEQsQ0FBRCxDQUFQLENBQVc2ckUsU0FBWCxPQUEyQixDQUEvRCxDQUFELEVBQW9FcG9FLENBQXBFLEVBQXVFLENBQXZFLENBQVY7QUFDRDs7QUFFRCxTQUFTNGxFLDRCQUFULENBQXNDcnBFLENBQXRDLEVBQXlDO0FBQ3ZDLFNBQU9BLENBQUMsQ0FBQzZyRSxTQUFGLEVBQVA7QUFDRDs7QUFFRCxTQUFTdkMseUJBQVQsQ0FBbUN0cEUsQ0FBbkMsRUFBc0N5RCxDQUF0QyxFQUF5QztBQUN2QyxTQUFPOG9CLEdBQUcsQ0FBQ3UvQyxpREFBUyxDQUFDam5FLEtBQVYsQ0FBZ0I4b0QsdURBQU8sQ0FBQzN0RCxDQUFELENBQXZCLEVBQTRCQSxDQUE1QixDQUFELEVBQWlDeUQsQ0FBakMsRUFBb0MsQ0FBcEMsQ0FBVjtBQUNEOztBQUVELFNBQVM4bEUsYUFBVCxDQUF1QnZwRSxDQUF2QixFQUEwQnlELENBQTFCLEVBQTZCO0FBQzNCLFNBQU84b0IsR0FBRyxDQUFDdnNCLENBQUMsQ0FBQ290QixjQUFGLEtBQXFCLEdBQXRCLEVBQTJCM3BCLENBQTNCLEVBQThCLENBQTlCLENBQVY7QUFDRDs7QUFFRCxTQUFTK2xFLGlCQUFULENBQTJCeHBFLENBQTNCLEVBQThCeUQsQ0FBOUIsRUFBaUM7QUFDL0IsU0FBTzhvQixHQUFHLENBQUN2c0IsQ0FBQyxDQUFDb3RCLGNBQUYsS0FBcUIsS0FBdEIsRUFBNkIzcEIsQ0FBN0IsRUFBZ0MsQ0FBaEMsQ0FBVjtBQUNEOztBQUVELFNBQVNnbUUsYUFBVCxHQUF5QjtBQUN2QixTQUFPLE9BQVA7QUFDRDs7QUFFRCxTQUFTdkIsb0JBQVQsR0FBZ0M7QUFDOUIsU0FBTyxHQUFQO0FBQ0Q7O0FBRUQsU0FBU1YsbUJBQVQsQ0FBNkJ4bkUsQ0FBN0IsRUFBZ0M7QUFDOUIsU0FBTyxDQUFDQSxDQUFSO0FBQ0Q7O0FBRUQsU0FBU3luRSwwQkFBVCxDQUFvQ3puRSxDQUFwQyxFQUF1QztBQUNyQyxTQUFPYyxJQUFJLENBQUMrQyxLQUFMLENBQVcsQ0FBQzdELENBQUQsR0FBSyxJQUFoQixDQUFQO0FBQ0QsQzs7Ozs7Ozs7Ozs7O0FDL25CRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQSxJQUFJbXNELEdBQUcsR0FBR2hDLHlEQUFRLENBQUMsVUFBU3g5QixJQUFULEVBQWU7QUFDaENBLE1BQUksQ0FBQ3lnRCxRQUFMLENBQWMsQ0FBZCxFQUFpQixDQUFqQixFQUFvQixDQUFwQixFQUF1QixDQUF2QjtBQUNELENBRmlCLEVBRWYsVUFBU3pnRCxJQUFULEVBQWUxb0IsSUFBZixFQUFxQjtBQUN0QjBvQixNQUFJLENBQUMwZ0QsT0FBTCxDQUFhMWdELElBQUksQ0FBQ3cvQyxPQUFMLEtBQWlCbG9FLElBQTlCO0FBQ0QsQ0FKaUIsRUFJZixVQUFTRixLQUFULEVBQWdCb0osR0FBaEIsRUFBcUI7QUFDdEIsU0FBTyxDQUFDQSxHQUFHLEdBQUdwSixLQUFOLEdBQWMsQ0FBQ29KLEdBQUcsQ0FBQzYvRCxpQkFBSixLQUEwQmpwRSxLQUFLLENBQUNpcEUsaUJBQU4sRUFBM0IsSUFBd0R0aEIsd0RBQXZFLElBQXlGRSxxREFBaEc7QUFDRCxDQU5pQixFQU1mLFVBQVNqL0IsSUFBVCxFQUFlO0FBQ2hCLFNBQU9BLElBQUksQ0FBQ3cvQyxPQUFMLEtBQWlCLENBQXhCO0FBQ0QsQ0FSaUIsQ0FBbEI7QUFVZWhnQixrRUFBZjtBQUNPLElBQUltWSxJQUFJLEdBQUduWSxHQUFHLENBQUNqcUQsS0FBZixDOzs7Ozs7Ozs7Ozs7QUNkUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBTyxJQUFJdXBELGNBQWMsR0FBRyxHQUFyQjtBQUNBLElBQUlDLGNBQWMsR0FBRyxHQUFyQjtBQUNBLElBQUlDLFlBQVksR0FBRyxJQUFuQjtBQUNBLElBQUlDLFdBQVcsR0FBRyxLQUFsQjtBQUNBLElBQUlDLFlBQVksR0FBRyxNQUFuQixDOzs7Ozs7Ozs7Ozs7QUNKUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQSxJQUFJTyxJQUFJLEdBQUdqQyx5REFBUSxDQUFDLFVBQVN4OUIsSUFBVCxFQUFlO0FBQ2pDQSxNQUFJLENBQUMrd0IsT0FBTCxDQUFhL3dCLElBQUksR0FBR0EsSUFBSSxDQUFDZ2dELGVBQUwsRUFBUCxHQUFnQ2hnRCxJQUFJLENBQUNrZ0QsVUFBTCxLQUFvQnBoQix3REFBcEQsR0FBcUU5K0IsSUFBSSxDQUFDaWdELFVBQUwsS0FBb0JsaEIsd0RBQXRHO0FBQ0QsQ0FGa0IsRUFFaEIsVUFBUy8rQixJQUFULEVBQWUxb0IsSUFBZixFQUFxQjtBQUN0QjBvQixNQUFJLENBQUMrd0IsT0FBTCxDQUFhLENBQUMvd0IsSUFBRCxHQUFRMW9CLElBQUksR0FBRzBuRCxzREFBNUI7QUFDRCxDQUprQixFQUloQixVQUFTNW5ELEtBQVQsRUFBZ0JvSixHQUFoQixFQUFxQjtBQUN0QixTQUFPLENBQUNBLEdBQUcsR0FBR3BKLEtBQVAsSUFBZ0I0bkQsc0RBQXZCO0FBQ0QsQ0FOa0IsRUFNaEIsVUFBU2gvQixJQUFULEVBQWU7QUFDaEIsU0FBT0EsSUFBSSxDQUFDMi9DLFFBQUwsRUFBUDtBQUNELENBUmtCLENBQW5CO0FBVWVsZ0IsbUVBQWY7QUFDTyxJQUFJeC9CLEtBQUssR0FBR3cvQixJQUFJLENBQUNscUQsS0FBakIsQzs7Ozs7Ozs7Ozs7O0FDZFA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFJQTtBQU9BO0FBT0E7QUFLQTtBQUtBO0FBS0E7QUFtQkE7QUFLQTtBQUtBO0FBS0E7QUFLQTtBQUtBO0FBbUJBOzs7Ozs7Ozs7Ozs7O0FDaEdBO0FBQUE7QUFBQSxJQUFJb2hCLEVBQUUsR0FBRyxJQUFJcUgsSUFBSixFQUFUO0FBQUEsSUFDSXBILEVBQUUsR0FBRyxJQUFJb0gsSUFBSixFQURUO0FBR2UsU0FBUzJpRCxXQUFULENBQXFCQyxNQUFyQixFQUE2QkMsT0FBN0IsRUFBc0Mzb0UsS0FBdEMsRUFBNkM0b0UsS0FBN0MsRUFBb0Q7QUFFakUsV0FBU3RqQixRQUFULENBQWtCeDlCLElBQWxCLEVBQXdCO0FBQ3RCLFdBQU80Z0QsTUFBTSxDQUFDNWdELElBQUksR0FBRyxJQUFJaEMsSUFBSixDQUFTLENBQUNnQyxJQUFWLENBQVIsQ0FBTixFQUFnQ0EsSUFBdkM7QUFDRDs7QUFFRHc5QixVQUFRLENBQUN0bUQsS0FBVCxHQUFpQnNtRCxRQUFqQjs7QUFFQUEsVUFBUSxDQUFDaG9ELElBQVQsR0FBZ0IsVUFBU3dxQixJQUFULEVBQWU7QUFDN0IsV0FBTzRnRCxNQUFNLENBQUM1Z0QsSUFBSSxHQUFHLElBQUloQyxJQUFKLENBQVNnQyxJQUFJLEdBQUcsQ0FBaEIsQ0FBUixDQUFOLEVBQW1DNmdELE9BQU8sQ0FBQzdnRCxJQUFELEVBQU8sQ0FBUCxDQUExQyxFQUFxRDRnRCxNQUFNLENBQUM1Z0QsSUFBRCxDQUEzRCxFQUFtRUEsSUFBMUU7QUFDRCxHQUZEOztBQUlBdzlCLFVBQVEsQ0FBQzVqRCxLQUFULEdBQWlCLFVBQVNvbUIsSUFBVCxFQUFlO0FBQzlCLFFBQUlzN0IsRUFBRSxHQUFHa0MsUUFBUSxDQUFDeDlCLElBQUQsQ0FBakI7QUFBQSxRQUNJNnFCLEVBQUUsR0FBRzJTLFFBQVEsQ0FBQ2hvRCxJQUFULENBQWN3cUIsSUFBZCxDQURUO0FBRUEsV0FBT0EsSUFBSSxHQUFHczdCLEVBQVAsR0FBWXpRLEVBQUUsR0FBRzdxQixJQUFqQixHQUF3QnM3QixFQUF4QixHQUE2QnpRLEVBQXBDO0FBQ0QsR0FKRDs7QUFNQTJTLFVBQVEsQ0FBQzlqRCxNQUFULEdBQWtCLFVBQVNzbUIsSUFBVCxFQUFlMW9CLElBQWYsRUFBcUI7QUFDckMsV0FBT3VwRSxPQUFPLENBQUM3Z0QsSUFBSSxHQUFHLElBQUloQyxJQUFKLENBQVMsQ0FBQ2dDLElBQVYsQ0FBUixFQUF5QjFvQixJQUFJLElBQUksSUFBUixHQUFlLENBQWYsR0FBbUJuRCxJQUFJLENBQUMrQyxLQUFMLENBQVdJLElBQVgsQ0FBNUMsQ0FBUCxFQUFzRTBvQixJQUE3RTtBQUNELEdBRkQ7O0FBSUF3OUIsVUFBUSxDQUFDam9ELEtBQVQsR0FBaUIsVUFBUzZCLEtBQVQsRUFBZ0JDLElBQWhCLEVBQXNCQyxJQUF0QixFQUE0QjtBQUMzQyxRQUFJL0IsS0FBSyxHQUFHLEVBQVo7QUFBQSxRQUFnQm8yQyxRQUFoQjtBQUNBdjBDLFNBQUssR0FBR29tRCxRQUFRLENBQUNob0QsSUFBVCxDQUFjNEIsS0FBZCxDQUFSO0FBQ0FFLFFBQUksR0FBR0EsSUFBSSxJQUFJLElBQVIsR0FBZSxDQUFmLEdBQW1CbkQsSUFBSSxDQUFDK0MsS0FBTCxDQUFXSSxJQUFYLENBQTFCO0FBQ0EsUUFBSSxFQUFFRixLQUFLLEdBQUdDLElBQVYsS0FBbUIsRUFBRUMsSUFBSSxHQUFHLENBQVQsQ0FBdkIsRUFBb0MsT0FBTy9CLEtBQVAsQ0FKTyxDQUlPOztBQUNsRDtBQUFHQSxXQUFLLENBQUNRLElBQU4sQ0FBVzQxQyxRQUFRLEdBQUcsSUFBSTN0QixJQUFKLENBQVMsQ0FBQzVtQixLQUFWLENBQXRCLEdBQXlDeXBFLE9BQU8sQ0FBQ3pwRSxLQUFELEVBQVFFLElBQVIsQ0FBaEQsRUFBK0RzcEUsTUFBTSxDQUFDeHBFLEtBQUQsQ0FBckU7QUFBSCxhQUNPdTBDLFFBQVEsR0FBR3YwQyxLQUFYLElBQW9CQSxLQUFLLEdBQUdDLElBRG5DOztBQUVBLFdBQU85QixLQUFQO0FBQ0QsR0FSRDs7QUFVQWlvRCxVQUFRLENBQUNuaEQsTUFBVCxHQUFrQixVQUFTMGhCLElBQVQsRUFBZTtBQUMvQixXQUFPNGlELFdBQVcsQ0FBQyxVQUFTM2dELElBQVQsRUFBZTtBQUNoQyxVQUFJQSxJQUFJLElBQUlBLElBQVosRUFBa0IsT0FBTzRnRCxNQUFNLENBQUM1Z0QsSUFBRCxDQUFOLEVBQWMsQ0FBQ2pDLElBQUksQ0FBQ2lDLElBQUQsQ0FBMUI7QUFBa0NBLFlBQUksQ0FBQyt3QixPQUFMLENBQWEvd0IsSUFBSSxHQUFHLENBQXBCO0FBQWxDO0FBQ25CLEtBRmlCLEVBRWYsVUFBU0EsSUFBVCxFQUFlMW9CLElBQWYsRUFBcUI7QUFDdEIsVUFBSTBvQixJQUFJLElBQUlBLElBQVosRUFBa0I7QUFDaEIsWUFBSTFvQixJQUFJLEdBQUcsQ0FBWCxFQUFjLE9BQU8sRUFBRUEsSUFBRixJQUFVLENBQWpCLEVBQW9CO0FBQ2hDLGlCQUFPdXBFLE9BQU8sQ0FBQzdnRCxJQUFELEVBQU8sQ0FBQyxDQUFSLENBQVAsRUFBbUIsQ0FBQ2pDLElBQUksQ0FBQ2lDLElBQUQsQ0FBL0IsRUFBdUMsQ0FBRSxDQURULENBQ1U7O0FBQzNDLFNBRkQsTUFFTyxPQUFPLEVBQUUxb0IsSUFBRixJQUFVLENBQWpCLEVBQW9CO0FBQ3pCLGlCQUFPdXBFLE9BQU8sQ0FBQzdnRCxJQUFELEVBQU8sQ0FBQyxDQUFSLENBQVAsRUFBbUIsQ0FBQ2pDLElBQUksQ0FBQ2lDLElBQUQsQ0FBL0IsRUFBdUMsQ0FBRSxDQURoQixDQUNpQjs7QUFDM0M7QUFDRjtBQUNGLEtBVmlCLENBQWxCO0FBV0QsR0FaRDs7QUFjQSxNQUFJOW5CLEtBQUosRUFBVztBQUNUc2xELFlBQVEsQ0FBQ3RsRCxLQUFULEdBQWlCLFVBQVNkLEtBQVQsRUFBZ0JvSixHQUFoQixFQUFxQjtBQUNwQ21XLFFBQUUsQ0FBQ282QixPQUFILENBQVcsQ0FBQzM1QyxLQUFaLEdBQW9Cd2YsRUFBRSxDQUFDbTZCLE9BQUgsQ0FBVyxDQUFDdndDLEdBQVosQ0FBcEI7QUFDQW9nRSxZQUFNLENBQUNqcUQsRUFBRCxDQUFOLEVBQVlpcUQsTUFBTSxDQUFDaHFELEVBQUQsQ0FBbEI7QUFDQSxhQUFPemlCLElBQUksQ0FBQytDLEtBQUwsQ0FBV2dCLEtBQUssQ0FBQ3llLEVBQUQsRUFBS0MsRUFBTCxDQUFoQixDQUFQO0FBQ0QsS0FKRDs7QUFNQTRtQyxZQUFRLENBQUM4QyxLQUFULEdBQWlCLFVBQVNocEQsSUFBVCxFQUFlO0FBQzlCQSxVQUFJLEdBQUduRCxJQUFJLENBQUMrQyxLQUFMLENBQVdJLElBQVgsQ0FBUDtBQUNBLGFBQU8sQ0FBQ2dCLFFBQVEsQ0FBQ2hCLElBQUQsQ0FBVCxJQUFtQixFQUFFQSxJQUFJLEdBQUcsQ0FBVCxDQUFuQixHQUFpQyxJQUFqQyxHQUNELEVBQUVBLElBQUksR0FBRyxDQUFULElBQWNrbUQsUUFBZCxHQUNBQSxRQUFRLENBQUNuaEQsTUFBVCxDQUFnQnlrRSxLQUFLLEdBQ2pCLFVBQVN6dEUsQ0FBVCxFQUFZO0FBQUUsZUFBT3l0RSxLQUFLLENBQUN6dEUsQ0FBRCxDQUFMLEdBQVdpRSxJQUFYLEtBQW9CLENBQTNCO0FBQStCLE9BRDVCLEdBRWpCLFVBQVNqRSxDQUFULEVBQVk7QUFBRSxlQUFPbXFELFFBQVEsQ0FBQ3RsRCxLQUFULENBQWUsQ0FBZixFQUFrQjdFLENBQWxCLElBQXVCaUUsSUFBdkIsS0FBZ0MsQ0FBdkM7QUFBMkMsT0FGN0QsQ0FGTjtBQUtELEtBUEQ7QUFRRDs7QUFFRCxTQUFPa21ELFFBQVA7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUNuRUQ7QUFBQTtBQUFBO0FBQUE7QUFFQSxJQUFJb0MsV0FBVyxHQUFHcEMseURBQVEsQ0FBQyxZQUFXLENBQ3BDO0FBQ0QsQ0FGeUIsRUFFdkIsVUFBU3g5QixJQUFULEVBQWUxb0IsSUFBZixFQUFxQjtBQUN0QjBvQixNQUFJLENBQUMrd0IsT0FBTCxDQUFhLENBQUMvd0IsSUFBRCxHQUFRMW9CLElBQXJCO0FBQ0QsQ0FKeUIsRUFJdkIsVUFBU0YsS0FBVCxFQUFnQm9KLEdBQWhCLEVBQXFCO0FBQ3RCLFNBQU9BLEdBQUcsR0FBR3BKLEtBQWI7QUFDRCxDQU55QixDQUExQixDLENBUUE7O0FBQ0F3b0QsV0FBVyxDQUFDVSxLQUFaLEdBQW9CLFVBQVMvbEQsQ0FBVCxFQUFZO0FBQzlCQSxHQUFDLEdBQUdwRyxJQUFJLENBQUMrQyxLQUFMLENBQVdxRCxDQUFYLENBQUo7QUFDQSxNQUFJLENBQUNqQyxRQUFRLENBQUNpQyxDQUFELENBQVQsSUFBZ0IsRUFBRUEsQ0FBQyxHQUFHLENBQU4sQ0FBcEIsRUFBOEIsT0FBTyxJQUFQO0FBQzlCLE1BQUksRUFBRUEsQ0FBQyxHQUFHLENBQU4sQ0FBSixFQUFjLE9BQU9xbEQsV0FBUDtBQUNkLFNBQU9wQyx5REFBUSxDQUFDLFVBQVN4OUIsSUFBVCxFQUFlO0FBQzdCQSxRQUFJLENBQUMrd0IsT0FBTCxDQUFhNThDLElBQUksQ0FBQytDLEtBQUwsQ0FBVzhvQixJQUFJLEdBQUd6bEIsQ0FBbEIsSUFBdUJBLENBQXBDO0FBQ0QsR0FGYyxFQUVaLFVBQVN5bEIsSUFBVCxFQUFlMW9CLElBQWYsRUFBcUI7QUFDdEIwb0IsUUFBSSxDQUFDK3dCLE9BQUwsQ0FBYSxDQUFDL3dCLElBQUQsR0FBUTFvQixJQUFJLEdBQUdpRCxDQUE1QjtBQUNELEdBSmMsRUFJWixVQUFTbkQsS0FBVCxFQUFnQm9KLEdBQWhCLEVBQXFCO0FBQ3RCLFdBQU8sQ0FBQ0EsR0FBRyxHQUFHcEosS0FBUCxJQUFnQm1ELENBQXZCO0FBQ0QsR0FOYyxDQUFmO0FBT0QsQ0FYRDs7QUFhZXFsRCwwRUFBZjtBQUNPLElBQUlyL0IsWUFBWSxHQUFHcS9CLFdBQVcsQ0FBQ3JxRCxLQUEvQixDOzs7Ozs7Ozs7Ozs7QUN6QlA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUEsSUFBSW1xRCxNQUFNLEdBQUdsQyx5REFBUSxDQUFDLFVBQVN4OUIsSUFBVCxFQUFlO0FBQ25DQSxNQUFJLENBQUMrd0IsT0FBTCxDQUFhL3dCLElBQUksR0FBR0EsSUFBSSxDQUFDZ2dELGVBQUwsRUFBUCxHQUFnQ2hnRCxJQUFJLENBQUNrZ0QsVUFBTCxLQUFvQnBoQix3REFBakU7QUFDRCxDQUZvQixFQUVsQixVQUFTOStCLElBQVQsRUFBZTFvQixJQUFmLEVBQXFCO0FBQ3RCMG9CLE1BQUksQ0FBQyt3QixPQUFMLENBQWEsQ0FBQy93QixJQUFELEdBQVExb0IsSUFBSSxHQUFHeW5ELHdEQUE1QjtBQUNELENBSm9CLEVBSWxCLFVBQVMzbkQsS0FBVCxFQUFnQm9KLEdBQWhCLEVBQXFCO0FBQ3RCLFNBQU8sQ0FBQ0EsR0FBRyxHQUFHcEosS0FBUCxJQUFnQjJuRCx3REFBdkI7QUFDRCxDQU5vQixFQU1sQixVQUFTLytCLElBQVQsRUFBZTtBQUNoQixTQUFPQSxJQUFJLENBQUNpZ0QsVUFBTCxFQUFQO0FBQ0QsQ0FSb0IsQ0FBckI7QUFVZXZnQixxRUFBZjtBQUNPLElBQUl2L0IsT0FBTyxHQUFHdS9CLE1BQU0sQ0FBQ25xRCxLQUFyQixDOzs7Ozs7Ozs7Ozs7QUNkUDtBQUFBO0FBQUE7QUFBQTtBQUVBLElBQUkrcEQsS0FBSyxHQUFHOUIseURBQVEsQ0FBQyxVQUFTeDlCLElBQVQsRUFBZTtBQUNsQ0EsTUFBSSxDQUFDMGdELE9BQUwsQ0FBYSxDQUFiO0FBQ0ExZ0QsTUFBSSxDQUFDeWdELFFBQUwsQ0FBYyxDQUFkLEVBQWlCLENBQWpCLEVBQW9CLENBQXBCLEVBQXVCLENBQXZCO0FBQ0QsQ0FIbUIsRUFHakIsVUFBU3pnRCxJQUFULEVBQWUxb0IsSUFBZixFQUFxQjtBQUN0QjBvQixNQUFJLENBQUMrZ0QsUUFBTCxDQUFjL2dELElBQUksQ0FBQ3UvQyxRQUFMLEtBQWtCam9FLElBQWhDO0FBQ0QsQ0FMbUIsRUFLakIsVUFBU0YsS0FBVCxFQUFnQm9KLEdBQWhCLEVBQXFCO0FBQ3RCLFNBQU9BLEdBQUcsQ0FBQysrRCxRQUFKLEtBQWlCbm9FLEtBQUssQ0FBQ21vRSxRQUFOLEVBQWpCLEdBQW9DLENBQUMvK0QsR0FBRyxDQUFDOCtELFdBQUosS0FBb0Jsb0UsS0FBSyxDQUFDa29FLFdBQU4sRUFBckIsSUFBNEMsRUFBdkY7QUFDRCxDQVBtQixFQU9qQixVQUFTdC9DLElBQVQsRUFBZTtBQUNoQixTQUFPQSxJQUFJLENBQUN1L0MsUUFBTCxFQUFQO0FBQ0QsQ0FUbUIsQ0FBcEI7QUFXZWpnQixvRUFBZjtBQUNPLElBQUl1WSxNQUFNLEdBQUd2WSxLQUFLLENBQUMvcEQsS0FBbkIsQzs7Ozs7Ozs7Ozs7O0FDZFA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUEsSUFBSW9xRCxNQUFNLEdBQUduQyx5REFBUSxDQUFDLFVBQVN4OUIsSUFBVCxFQUFlO0FBQ25DQSxNQUFJLENBQUMrd0IsT0FBTCxDQUFhL3dCLElBQUksR0FBR0EsSUFBSSxDQUFDZ2dELGVBQUwsRUFBcEI7QUFDRCxDQUZvQixFQUVsQixVQUFTaGdELElBQVQsRUFBZTFvQixJQUFmLEVBQXFCO0FBQ3RCMG9CLE1BQUksQ0FBQyt3QixPQUFMLENBQWEsQ0FBQy93QixJQUFELEdBQVExb0IsSUFBSSxHQUFHd25ELHdEQUE1QjtBQUNELENBSm9CLEVBSWxCLFVBQVMxbkQsS0FBVCxFQUFnQm9KLEdBQWhCLEVBQXFCO0FBQ3RCLFNBQU8sQ0FBQ0EsR0FBRyxHQUFHcEosS0FBUCxJQUFnQjBuRCx3REFBdkI7QUFDRCxDQU5vQixFQU1sQixVQUFTOStCLElBQVQsRUFBZTtBQUNoQixTQUFPQSxJQUFJLENBQUNNLGFBQUwsRUFBUDtBQUNELENBUm9CLENBQXJCO0FBVWVxL0IscUVBQWY7QUFDTyxJQUFJdC9CLE9BQU8sR0FBR3MvQixNQUFNLENBQUNwcUQsS0FBckIsQzs7Ozs7Ozs7Ozs7O0FDZFA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUEsSUFBSTRyRCxNQUFNLEdBQUczRCx5REFBUSxDQUFDLFVBQVN4OUIsSUFBVCxFQUFlO0FBQ25DQSxNQUFJLENBQUNnaEQsV0FBTCxDQUFpQixDQUFqQixFQUFvQixDQUFwQixFQUF1QixDQUF2QixFQUEwQixDQUExQjtBQUNELENBRm9CLEVBRWxCLFVBQVNoaEQsSUFBVCxFQUFlMW9CLElBQWYsRUFBcUI7QUFDdEIwb0IsTUFBSSxDQUFDaWhELFVBQUwsQ0FBZ0JqaEQsSUFBSSxDQUFDVyxVQUFMLEtBQW9CcnBCLElBQXBDO0FBQ0QsQ0FKb0IsRUFJbEIsVUFBU0YsS0FBVCxFQUFnQm9KLEdBQWhCLEVBQXFCO0FBQ3RCLFNBQU8sQ0FBQ0EsR0FBRyxHQUFHcEosS0FBUCxJQUFnQjZuRCxxREFBdkI7QUFDRCxDQU5vQixFQU1sQixVQUFTai9CLElBQVQsRUFBZTtBQUNoQixTQUFPQSxJQUFJLENBQUNXLFVBQUwsS0FBb0IsQ0FBM0I7QUFDRCxDQVJvQixDQUFyQjtBQVVld2dDLHFFQUFmO0FBQ08sSUFBSStmLE9BQU8sR0FBRy9mLE1BQU0sQ0FBQzVyRCxLQUFyQixDOzs7Ozs7Ozs7Ozs7QUNkUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQSxJQUFJNnJELE9BQU8sR0FBRzVELHlEQUFRLENBQUMsVUFBU3g5QixJQUFULEVBQWU7QUFDcENBLE1BQUksQ0FBQ21oRCxhQUFMLENBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCO0FBQ0QsQ0FGcUIsRUFFbkIsVUFBU25oRCxJQUFULEVBQWUxb0IsSUFBZixFQUFxQjtBQUN0QjBvQixNQUFJLENBQUMrd0IsT0FBTCxDQUFhLENBQUMvd0IsSUFBRCxHQUFRMW9CLElBQUksR0FBRzBuRCxzREFBNUI7QUFDRCxDQUpxQixFQUluQixVQUFTNW5ELEtBQVQsRUFBZ0JvSixHQUFoQixFQUFxQjtBQUN0QixTQUFPLENBQUNBLEdBQUcsR0FBR3BKLEtBQVAsSUFBZ0I0bkQsc0RBQXZCO0FBQ0QsQ0FOcUIsRUFNbkIsVUFBU2gvQixJQUFULEVBQWU7QUFDaEIsU0FBT0EsSUFBSSxDQUFDRSxXQUFMLEVBQVA7QUFDRCxDQVJxQixDQUF0QjtBQVVla2hDLHNFQUFmO0FBQ08sSUFBSWdnQixRQUFRLEdBQUdoZ0IsT0FBTyxDQUFDN3JELEtBQXZCLEM7Ozs7Ozs7Ozs7OztBQ2RQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBLElBQUk4ckQsU0FBUyxHQUFHN0QseURBQVEsQ0FBQyxVQUFTeDlCLElBQVQsRUFBZTtBQUN0Q0EsTUFBSSxDQUFDcWhELGFBQUwsQ0FBbUIsQ0FBbkIsRUFBc0IsQ0FBdEI7QUFDRCxDQUZ1QixFQUVyQixVQUFTcmhELElBQVQsRUFBZTFvQixJQUFmLEVBQXFCO0FBQ3RCMG9CLE1BQUksQ0FBQyt3QixPQUFMLENBQWEsQ0FBQy93QixJQUFELEdBQVExb0IsSUFBSSxHQUFHeW5ELHdEQUE1QjtBQUNELENBSnVCLEVBSXJCLFVBQVMzbkQsS0FBVCxFQUFnQm9KLEdBQWhCLEVBQXFCO0FBQ3RCLFNBQU8sQ0FBQ0EsR0FBRyxHQUFHcEosS0FBUCxJQUFnQjJuRCx3REFBdkI7QUFDRCxDQU51QixFQU1yQixVQUFTLytCLElBQVQsRUFBZTtBQUNoQixTQUFPQSxJQUFJLENBQUNJLGFBQUwsRUFBUDtBQUNELENBUnVCLENBQXhCO0FBVWVpaEMsd0VBQWY7QUFDTyxJQUFJaWdCLFVBQVUsR0FBR2pnQixTQUFTLENBQUM5ckQsS0FBM0IsQzs7Ozs7Ozs7Ozs7O0FDZFA7QUFBQTtBQUFBO0FBQUE7QUFFQSxJQUFJMHJELFFBQVEsR0FBR3pELHlEQUFRLENBQUMsVUFBU3g5QixJQUFULEVBQWU7QUFDckNBLE1BQUksQ0FBQ2loRCxVQUFMLENBQWdCLENBQWhCO0FBQ0FqaEQsTUFBSSxDQUFDZ2hELFdBQUwsQ0FBaUIsQ0FBakIsRUFBb0IsQ0FBcEIsRUFBdUIsQ0FBdkIsRUFBMEIsQ0FBMUI7QUFDRCxDQUhzQixFQUdwQixVQUFTaGhELElBQVQsRUFBZTFvQixJQUFmLEVBQXFCO0FBQ3RCMG9CLE1BQUksQ0FBQ3VoRCxXQUFMLENBQWlCdmhELElBQUksQ0FBQ1UsV0FBTCxLQUFxQnBwQixJQUF0QztBQUNELENBTHNCLEVBS3BCLFVBQVNGLEtBQVQsRUFBZ0JvSixHQUFoQixFQUFxQjtBQUN0QixTQUFPQSxHQUFHLENBQUNrZ0IsV0FBSixLQUFvQnRwQixLQUFLLENBQUNzcEIsV0FBTixFQUFwQixHQUEwQyxDQUFDbGdCLEdBQUcsQ0FBQ2lnQixjQUFKLEtBQXVCcnBCLEtBQUssQ0FBQ3FwQixjQUFOLEVBQXhCLElBQWtELEVBQW5HO0FBQ0QsQ0FQc0IsRUFPcEIsVUFBU1QsSUFBVCxFQUFlO0FBQ2hCLFNBQU9BLElBQUksQ0FBQ1UsV0FBTCxFQUFQO0FBQ0QsQ0FUc0IsQ0FBdkI7QUFXZXVnQyx1RUFBZjtBQUNPLElBQUl1Z0IsU0FBUyxHQUFHdmdCLFFBQVEsQ0FBQzFyRCxLQUF6QixDOzs7Ozs7Ozs7Ozs7QUNkUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTs7QUFFQSxTQUFTa3NFLFVBQVQsQ0FBb0IzdEUsQ0FBcEIsRUFBdUI7QUFDckIsU0FBTzBwRCx5REFBUSxDQUFDLFVBQVN4OUIsSUFBVCxFQUFlO0FBQzdCQSxRQUFJLENBQUNpaEQsVUFBTCxDQUFnQmpoRCxJQUFJLENBQUNXLFVBQUwsS0FBb0IsQ0FBQ1gsSUFBSSxDQUFDay9DLFNBQUwsS0FBbUIsQ0FBbkIsR0FBdUJwckUsQ0FBeEIsSUFBNkIsQ0FBakU7QUFDQWtzQixRQUFJLENBQUNnaEQsV0FBTCxDQUFpQixDQUFqQixFQUFvQixDQUFwQixFQUF1QixDQUF2QixFQUEwQixDQUExQjtBQUNELEdBSGMsRUFHWixVQUFTaGhELElBQVQsRUFBZTFvQixJQUFmLEVBQXFCO0FBQ3RCMG9CLFFBQUksQ0FBQ2loRCxVQUFMLENBQWdCamhELElBQUksQ0FBQ1csVUFBTCxLQUFvQnJwQixJQUFJLEdBQUcsQ0FBM0M7QUFDRCxHQUxjLEVBS1osVUFBU0YsS0FBVCxFQUFnQm9KLEdBQWhCLEVBQXFCO0FBQ3RCLFdBQU8sQ0FBQ0EsR0FBRyxHQUFHcEosS0FBUCxJQUFnQjhuRCxzREFBdkI7QUFDRCxHQVBjLENBQWY7QUFRRDs7QUFFTSxJQUFJcWhCLFNBQVMsR0FBR2tCLFVBQVUsQ0FBQyxDQUFELENBQTFCO0FBQ0EsSUFBSXRDLFNBQVMsR0FBR3NDLFVBQVUsQ0FBQyxDQUFELENBQTFCO0FBQ0EsSUFBSUMsVUFBVSxHQUFHRCxVQUFVLENBQUMsQ0FBRCxDQUEzQjtBQUNBLElBQUlFLFlBQVksR0FBR0YsVUFBVSxDQUFDLENBQUQsQ0FBN0I7QUFDQSxJQUFJakIsV0FBVyxHQUFHaUIsVUFBVSxDQUFDLENBQUQsQ0FBNUI7QUFDQSxJQUFJRyxTQUFTLEdBQUdILFVBQVUsQ0FBQyxDQUFELENBQTFCO0FBQ0EsSUFBSUksV0FBVyxHQUFHSixVQUFVLENBQUMsQ0FBRCxDQUE1QjtBQUVBLElBQUlLLFVBQVUsR0FBR3ZCLFNBQVMsQ0FBQ2hyRSxLQUEzQjtBQUNBLElBQUl3c0UsVUFBVSxHQUFHNUMsU0FBUyxDQUFDNXBFLEtBQTNCO0FBQ0EsSUFBSXlzRSxXQUFXLEdBQUdOLFVBQVUsQ0FBQ25zRSxLQUE3QjtBQUNBLElBQUkwc0UsYUFBYSxHQUFHTixZQUFZLENBQUNwc0UsS0FBakM7QUFDQSxJQUFJMnNFLFlBQVksR0FBRzFCLFdBQVcsQ0FBQ2pyRSxLQUEvQjtBQUNBLElBQUk0c0UsVUFBVSxHQUFHUCxTQUFTLENBQUNyc0UsS0FBM0I7QUFDQSxJQUFJNnNFLFlBQVksR0FBR1AsV0FBVyxDQUFDdHNFLEtBQS9CLEM7Ozs7Ozs7Ozs7OztBQzVCUDtBQUFBO0FBQUE7QUFBQTtBQUVBLElBQUl5ckQsT0FBTyxHQUFHeEQseURBQVEsQ0FBQyxVQUFTeDlCLElBQVQsRUFBZTtBQUNwQ0EsTUFBSSxDQUFDdWhELFdBQUwsQ0FBaUIsQ0FBakIsRUFBb0IsQ0FBcEI7QUFDQXZoRCxNQUFJLENBQUNnaEQsV0FBTCxDQUFpQixDQUFqQixFQUFvQixDQUFwQixFQUF1QixDQUF2QixFQUEwQixDQUExQjtBQUNELENBSHFCLEVBR25CLFVBQVNoaEQsSUFBVCxFQUFlMW9CLElBQWYsRUFBcUI7QUFDdEIwb0IsTUFBSSxDQUFDMDRDLGNBQUwsQ0FBb0IxNEMsSUFBSSxDQUFDUyxjQUFMLEtBQXdCbnBCLElBQTVDO0FBQ0QsQ0FMcUIsRUFLbkIsVUFBU0YsS0FBVCxFQUFnQm9KLEdBQWhCLEVBQXFCO0FBQ3RCLFNBQU9BLEdBQUcsQ0FBQ2lnQixjQUFKLEtBQXVCcnBCLEtBQUssQ0FBQ3FwQixjQUFOLEVBQTlCO0FBQ0QsQ0FQcUIsRUFPbkIsVUFBU1QsSUFBVCxFQUFlO0FBQ2hCLFNBQU9BLElBQUksQ0FBQ1MsY0FBTCxFQUFQO0FBQ0QsQ0FUcUIsQ0FBdEIsQyxDQVdBOztBQUNBdWdDLE9BQU8sQ0FBQ1YsS0FBUixHQUFnQixVQUFTL2xELENBQVQsRUFBWTtBQUMxQixTQUFPLENBQUNqQyxRQUFRLENBQUNpQyxDQUFDLEdBQUdwRyxJQUFJLENBQUMrQyxLQUFMLENBQVdxRCxDQUFYLENBQUwsQ0FBVCxJQUFnQyxFQUFFQSxDQUFDLEdBQUcsQ0FBTixDQUFoQyxHQUEyQyxJQUEzQyxHQUFrRGlqRCx5REFBUSxDQUFDLFVBQVN4OUIsSUFBVCxFQUFlO0FBQy9FQSxRQUFJLENBQUMwNEMsY0FBTCxDQUFvQnZrRSxJQUFJLENBQUMrQyxLQUFMLENBQVc4b0IsSUFBSSxDQUFDUyxjQUFMLEtBQXdCbG1CLENBQW5DLElBQXdDQSxDQUE1RDtBQUNBeWxCLFFBQUksQ0FBQ3VoRCxXQUFMLENBQWlCLENBQWpCLEVBQW9CLENBQXBCO0FBQ0F2aEQsUUFBSSxDQUFDZ2hELFdBQUwsQ0FBaUIsQ0FBakIsRUFBb0IsQ0FBcEIsRUFBdUIsQ0FBdkIsRUFBMEIsQ0FBMUI7QUFDRCxHQUpnRSxFQUk5RCxVQUFTaGhELElBQVQsRUFBZTFvQixJQUFmLEVBQXFCO0FBQ3RCMG9CLFFBQUksQ0FBQzA0QyxjQUFMLENBQW9CMTRDLElBQUksQ0FBQ1MsY0FBTCxLQUF3Qm5wQixJQUFJLEdBQUdpRCxDQUFuRDtBQUNELEdBTmdFLENBQWpFO0FBT0QsQ0FSRDs7QUFVZXltRCxzRUFBZjtBQUNPLElBQUlxaEIsUUFBUSxHQUFHcmhCLE9BQU8sQ0FBQ3pyRCxLQUF2QixDOzs7Ozs7Ozs7Ozs7QUN6QlA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7O0FBRUEsU0FBUytzRSxPQUFULENBQWlCeHVFLENBQWpCLEVBQW9CO0FBQ2xCLFNBQU8wcEQseURBQVEsQ0FBQyxVQUFTeDlCLElBQVQsRUFBZTtBQUM3QkEsUUFBSSxDQUFDMGdELE9BQUwsQ0FBYTFnRCxJQUFJLENBQUN3L0MsT0FBTCxLQUFpQixDQUFDeC9DLElBQUksQ0FBQ28vQyxNQUFMLEtBQWdCLENBQWhCLEdBQW9CdHJFLENBQXJCLElBQTBCLENBQXhEO0FBQ0Frc0IsUUFBSSxDQUFDeWdELFFBQUwsQ0FBYyxDQUFkLEVBQWlCLENBQWpCLEVBQW9CLENBQXBCLEVBQXVCLENBQXZCO0FBQ0QsR0FIYyxFQUdaLFVBQVN6Z0QsSUFBVCxFQUFlMW9CLElBQWYsRUFBcUI7QUFDdEIwb0IsUUFBSSxDQUFDMGdELE9BQUwsQ0FBYTFnRCxJQUFJLENBQUN3L0MsT0FBTCxLQUFpQmxvRSxJQUFJLEdBQUcsQ0FBckM7QUFDRCxHQUxjLEVBS1osVUFBU0YsS0FBVCxFQUFnQm9KLEdBQWhCLEVBQXFCO0FBQ3RCLFdBQU8sQ0FBQ0EsR0FBRyxHQUFHcEosS0FBTixHQUFjLENBQUNvSixHQUFHLENBQUM2L0QsaUJBQUosS0FBMEJqcEUsS0FBSyxDQUFDaXBFLGlCQUFOLEVBQTNCLElBQXdEdGhCLHdEQUF2RSxJQUF5Rkcsc0RBQWhHO0FBQ0QsR0FQYyxDQUFmO0FBUUQ7O0FBRU0sSUFBSXFqQixNQUFNLEdBQUdELE9BQU8sQ0FBQyxDQUFELENBQXBCO0FBQ0EsSUFBSUUsTUFBTSxHQUFHRixPQUFPLENBQUMsQ0FBRCxDQUFwQjtBQUNBLElBQUlHLE9BQU8sR0FBR0gsT0FBTyxDQUFDLENBQUQsQ0FBckI7QUFDQSxJQUFJSSxTQUFTLEdBQUdKLE9BQU8sQ0FBQyxDQUFELENBQXZCO0FBQ0EsSUFBSUssUUFBUSxHQUFHTCxPQUFPLENBQUMsQ0FBRCxDQUF0QjtBQUNBLElBQUlNLE1BQU0sR0FBR04sT0FBTyxDQUFDLENBQUQsQ0FBcEI7QUFDQSxJQUFJTyxRQUFRLEdBQUdQLE9BQU8sQ0FBQyxDQUFELENBQXRCO0FBRUEsSUFBSVEsT0FBTyxHQUFHUCxNQUFNLENBQUNodEUsS0FBckI7QUFDQSxJQUFJd3RFLE9BQU8sR0FBR1AsTUFBTSxDQUFDanRFLEtBQXJCO0FBQ0EsSUFBSXl0RSxRQUFRLEdBQUdQLE9BQU8sQ0FBQ2x0RSxLQUF2QjtBQUNBLElBQUkwdEUsVUFBVSxHQUFHUCxTQUFTLENBQUNudEUsS0FBM0I7QUFDQSxJQUFJMnRFLFNBQVMsR0FBR1AsUUFBUSxDQUFDcHRFLEtBQXpCO0FBQ0EsSUFBSTR0RSxPQUFPLEdBQUdQLE1BQU0sQ0FBQ3J0RSxLQUFyQjtBQUNBLElBQUk2dEUsU0FBUyxHQUFHUCxRQUFRLENBQUN0dEUsS0FBekIsQzs7Ozs7Ozs7Ozs7O0FDNUJQO0FBQUE7QUFBQTtBQUFBO0FBRUEsSUFBSXVxQixJQUFJLEdBQUcwOUIseURBQVEsQ0FBQyxVQUFTeDlCLElBQVQsRUFBZTtBQUNqQ0EsTUFBSSxDQUFDK2dELFFBQUwsQ0FBYyxDQUFkLEVBQWlCLENBQWpCO0FBQ0EvZ0QsTUFBSSxDQUFDeWdELFFBQUwsQ0FBYyxDQUFkLEVBQWlCLENBQWpCLEVBQW9CLENBQXBCLEVBQXVCLENBQXZCO0FBQ0QsQ0FIa0IsRUFHaEIsVUFBU3pnRCxJQUFULEVBQWUxb0IsSUFBZixFQUFxQjtBQUN0QjBvQixNQUFJLENBQUN3NEMsV0FBTCxDQUFpQng0QyxJQUFJLENBQUNzL0MsV0FBTCxLQUFxQmhvRSxJQUF0QztBQUNELENBTGtCLEVBS2hCLFVBQVNGLEtBQVQsRUFBZ0JvSixHQUFoQixFQUFxQjtBQUN0QixTQUFPQSxHQUFHLENBQUM4K0QsV0FBSixLQUFvQmxvRSxLQUFLLENBQUNrb0UsV0FBTixFQUEzQjtBQUNELENBUGtCLEVBT2hCLFVBQVN0L0MsSUFBVCxFQUFlO0FBQ2hCLFNBQU9BLElBQUksQ0FBQ3MvQyxXQUFMLEVBQVA7QUFDRCxDQVRrQixDQUFuQixDLENBV0E7O0FBQ0F4L0MsSUFBSSxDQUFDd2dDLEtBQUwsR0FBYSxVQUFTL2xELENBQVQsRUFBWTtBQUN2QixTQUFPLENBQUNqQyxRQUFRLENBQUNpQyxDQUFDLEdBQUdwRyxJQUFJLENBQUMrQyxLQUFMLENBQVdxRCxDQUFYLENBQUwsQ0FBVCxJQUFnQyxFQUFFQSxDQUFDLEdBQUcsQ0FBTixDQUFoQyxHQUEyQyxJQUEzQyxHQUFrRGlqRCx5REFBUSxDQUFDLFVBQVN4OUIsSUFBVCxFQUFlO0FBQy9FQSxRQUFJLENBQUN3NEMsV0FBTCxDQUFpQnJrRSxJQUFJLENBQUMrQyxLQUFMLENBQVc4b0IsSUFBSSxDQUFDcy9DLFdBQUwsS0FBcUIva0UsQ0FBaEMsSUFBcUNBLENBQXREO0FBQ0F5bEIsUUFBSSxDQUFDK2dELFFBQUwsQ0FBYyxDQUFkLEVBQWlCLENBQWpCO0FBQ0EvZ0QsUUFBSSxDQUFDeWdELFFBQUwsQ0FBYyxDQUFkLEVBQWlCLENBQWpCLEVBQW9CLENBQXBCLEVBQXVCLENBQXZCO0FBQ0QsR0FKZ0UsRUFJOUQsVUFBU3pnRCxJQUFULEVBQWUxb0IsSUFBZixFQUFxQjtBQUN0QjBvQixRQUFJLENBQUN3NEMsV0FBTCxDQUFpQng0QyxJQUFJLENBQUNzL0MsV0FBTCxLQUFxQmhvRSxJQUFJLEdBQUdpRCxDQUE3QztBQUNELEdBTmdFLENBQWpFO0FBT0QsQ0FSRDs7QUFVZXVsQixtRUFBZjtBQUNPLElBQUl1akQsS0FBSyxHQUFHdmpELElBQUksQ0FBQ3ZxQixLQUFqQixDOzs7Ozs7Ozs7Ozs7QUN6QlA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBTUE7Ozs7Ozs7Ozs7Ozs7QUNOQTtBQUFBO0FBQUE7QUFFZSx5RUFBUzhqQixRQUFULEVBQW1CaXFELEtBQW5CLEVBQTBCN0wsSUFBMUIsRUFBZ0M7QUFDN0MsTUFBSWhnRSxDQUFDLEdBQUcsSUFBSThyRSw0Q0FBSixFQUFSO0FBQUEsTUFBbUJDLEtBQUssR0FBR0YsS0FBM0I7QUFDQSxNQUFJQSxLQUFLLElBQUksSUFBYixFQUFtQixPQUFPN3JFLENBQUMsQ0FBQzJ5QixPQUFGLENBQVUvUSxRQUFWLEVBQW9CaXFELEtBQXBCLEVBQTJCN0wsSUFBM0IsR0FBa0NoZ0UsQ0FBekM7QUFDbkI2ckUsT0FBSyxHQUFHLENBQUNBLEtBQVQsRUFBZ0I3TCxJQUFJLEdBQUdBLElBQUksSUFBSSxJQUFSLEdBQWVnTSxrREFBRyxFQUFsQixHQUF1QixDQUFDaE0sSUFBL0M7QUFDQWhnRSxHQUFDLENBQUMyeUIsT0FBRixDQUFVLFNBQVNodkIsSUFBVCxDQUFjc29FLE9BQWQsRUFBdUI7QUFDL0JBLFdBQU8sSUFBSUYsS0FBWDtBQUNBL3JFLEtBQUMsQ0FBQzJ5QixPQUFGLENBQVVodkIsSUFBVixFQUFnQm9vRSxLQUFLLElBQUlGLEtBQXpCLEVBQWdDN0wsSUFBaEM7QUFDQXArQyxZQUFRLENBQUNxcUQsT0FBRCxDQUFSO0FBQ0QsR0FKRCxFQUlHSixLQUpILEVBSVU3TCxJQUpWO0FBS0EsU0FBT2hnRSxDQUFQO0FBQ0QsQzs7Ozs7Ozs7Ozs7O0FDWkQ7QUFBQTtBQUFBO0FBRWUseUVBQVM0aEIsUUFBVCxFQUFtQmlxRCxLQUFuQixFQUEwQjdMLElBQTFCLEVBQWdDO0FBQzdDLE1BQUloZ0UsQ0FBQyxHQUFHLElBQUk4ckUsNENBQUosRUFBUjtBQUNBRCxPQUFLLEdBQUdBLEtBQUssSUFBSSxJQUFULEdBQWdCLENBQWhCLEdBQW9CLENBQUNBLEtBQTdCO0FBQ0E3ckUsR0FBQyxDQUFDMnlCLE9BQUYsQ0FBVSxVQUFTczVDLE9BQVQsRUFBa0I7QUFDMUJqc0UsS0FBQyxDQUFDSixJQUFGO0FBQ0FnaUIsWUFBUSxDQUFDcXFELE9BQU8sR0FBR0osS0FBWCxDQUFSO0FBQ0QsR0FIRCxFQUdHQSxLQUhILEVBR1U3TCxJQUhWO0FBSUEsU0FBT2hnRSxDQUFQO0FBQ0QsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ1ZELElBQUlrc0UsS0FBSyxHQUFHLENBQVo7QUFBQSxJQUFlO0FBQ1hDLE9BQU8sR0FBRyxDQURkO0FBQUEsSUFDaUI7QUFDYnBtQixRQUFRLEdBQUcsQ0FGZjtBQUFBLElBRWtCO0FBQ2RxbUIsU0FBUyxHQUFHLElBSGhCO0FBQUEsSUFHc0I7QUFDbEJDLFFBSko7QUFBQSxJQUtJQyxRQUxKO0FBQUEsSUFNSUMsU0FBUyxHQUFHLENBTmhCO0FBQUEsSUFPSUMsUUFBUSxHQUFHLENBUGY7QUFBQSxJQVFJQyxTQUFTLEdBQUcsQ0FSaEI7QUFBQSxJQVNJQyxLQUFLLEdBQUcsUUFBT0MsV0FBUCx5Q0FBT0EsV0FBUCxPQUF1QixRQUF2QixJQUFtQ0EsV0FBVyxDQUFDWCxHQUEvQyxHQUFxRFcsV0FBckQsR0FBbUVwbUQsSUFUL0U7QUFBQSxJQVVJcW1ELFFBQVEsR0FBRyxRQUFPOWQsTUFBUCx5Q0FBT0EsTUFBUCxPQUFrQixRQUFsQixJQUE4QkEsTUFBTSxDQUFDK2QscUJBQXJDLEdBQTZEL2QsTUFBTSxDQUFDK2QscUJBQVAsQ0FBNkIzZSxJQUE3QixDQUFrQ1ksTUFBbEMsQ0FBN0QsR0FBeUcsVUFBU256RCxDQUFULEVBQVk7QUFBRXlRLFlBQVUsQ0FBQ3pRLENBQUQsRUFBSSxFQUFKLENBQVY7QUFBb0IsQ0FWMUo7QUFZTyxTQUFTcXdFLEdBQVQsR0FBZTtBQUNwQixTQUFPUSxRQUFRLEtBQUtJLFFBQVEsQ0FBQ0UsUUFBRCxDQUFSLEVBQW9CTixRQUFRLEdBQUdFLEtBQUssQ0FBQ1YsR0FBTixLQUFjUyxTQUFsRCxDQUFmO0FBQ0Q7O0FBRUQsU0FBU0ssUUFBVCxHQUFvQjtBQUNsQk4sVUFBUSxHQUFHLENBQVg7QUFDRDs7QUFFTSxTQUFTVixLQUFULEdBQWlCO0FBQ3RCLE9BQUtpQixLQUFMLEdBQ0EsS0FBS0MsS0FBTCxHQUNBLEtBQUt2ZSxLQUFMLEdBQWEsSUFGYjtBQUdEO0FBRURxZCxLQUFLLENBQUN2eEUsU0FBTixHQUFrQjgzQixLQUFLLENBQUM5M0IsU0FBTixHQUFrQjtBQUNsQ3dWLGFBQVcsRUFBRSs3RCxLQURxQjtBQUVsQ241QyxTQUFPLEVBQUUsaUJBQVMvUSxRQUFULEVBQW1CaXFELEtBQW5CLEVBQTBCN0wsSUFBMUIsRUFBZ0M7QUFDdkMsUUFBSSxPQUFPcCtDLFFBQVAsS0FBb0IsVUFBeEIsRUFBb0MsTUFBTSxJQUFJcXJELFNBQUosQ0FBYyw0QkFBZCxDQUFOO0FBQ3BDak4sUUFBSSxHQUFHLENBQUNBLElBQUksSUFBSSxJQUFSLEdBQWVnTSxHQUFHLEVBQWxCLEdBQXVCLENBQUNoTSxJQUF6QixLQUFrQzZMLEtBQUssSUFBSSxJQUFULEdBQWdCLENBQWhCLEdBQW9CLENBQUNBLEtBQXZELENBQVA7O0FBQ0EsUUFBSSxDQUFDLEtBQUtwZCxLQUFOLElBQWU2ZCxRQUFRLEtBQUssSUFBaEMsRUFBc0M7QUFDcEMsVUFBSUEsUUFBSixFQUFjQSxRQUFRLENBQUM3ZCxLQUFULEdBQWlCLElBQWpCLENBQWQsS0FDSzRkLFFBQVEsR0FBRyxJQUFYO0FBQ0xDLGNBQVEsR0FBRyxJQUFYO0FBQ0Q7O0FBQ0QsU0FBS1MsS0FBTCxHQUFhbnJELFFBQWI7QUFDQSxTQUFLb3JELEtBQUwsR0FBYWhOLElBQWI7QUFDQWtOLFNBQUs7QUFDTixHQWJpQztBQWNsQ3R0RSxNQUFJLEVBQUUsZ0JBQVc7QUFDZixRQUFJLEtBQUttdEUsS0FBVCxFQUFnQjtBQUNkLFdBQUtBLEtBQUwsR0FBYSxJQUFiO0FBQ0EsV0FBS0MsS0FBTCxHQUFhNzdDLFFBQWI7QUFDQSs3QyxXQUFLO0FBQ047QUFDRjtBQXBCaUMsQ0FBcEM7QUF1Qk8sU0FBUzc2QyxLQUFULENBQWV6USxRQUFmLEVBQXlCaXFELEtBQXpCLEVBQWdDN0wsSUFBaEMsRUFBc0M7QUFDM0MsTUFBSWhnRSxDQUFDLEdBQUcsSUFBSThyRSxLQUFKLEVBQVI7QUFDQTlyRSxHQUFDLENBQUMyeUIsT0FBRixDQUFVL1EsUUFBVixFQUFvQmlxRCxLQUFwQixFQUEyQjdMLElBQTNCO0FBQ0EsU0FBT2hnRSxDQUFQO0FBQ0Q7QUFFTSxTQUFTbXRFLFVBQVQsR0FBc0I7QUFDM0JuQixLQUFHLEdBRHdCLENBQ3BCOztBQUNQLElBQUVFLEtBQUYsQ0FGMkIsQ0FFbEI7O0FBQ1QsTUFBSWxzRSxDQUFDLEdBQUdxc0UsUUFBUjtBQUFBLE1BQWtCem1FLENBQWxCOztBQUNBLFNBQU81RixDQUFQLEVBQVU7QUFDUixRQUFJLENBQUM0RixDQUFDLEdBQUc0bUUsUUFBUSxHQUFHeHNFLENBQUMsQ0FBQ2d0RSxLQUFsQixLQUE0QixDQUFoQyxFQUFtQ2h0RSxDQUFDLENBQUMrc0UsS0FBRixDQUFRcHVFLElBQVIsQ0FBYSxJQUFiLEVBQW1CaUgsQ0FBbkI7QUFDbkM1RixLQUFDLEdBQUdBLENBQUMsQ0FBQ3l1RCxLQUFOO0FBQ0Q7O0FBQ0QsSUFBRXlkLEtBQUY7QUFDRDs7QUFFRCxTQUFTa0IsSUFBVCxHQUFnQjtBQUNkWixVQUFRLEdBQUcsQ0FBQ0QsU0FBUyxHQUFHRyxLQUFLLENBQUNWLEdBQU4sRUFBYixJQUE0QlMsU0FBdkM7QUFDQVAsT0FBSyxHQUFHQyxPQUFPLEdBQUcsQ0FBbEI7O0FBQ0EsTUFBSTtBQUNGZ0IsY0FBVTtBQUNYLEdBRkQsU0FFVTtBQUNSakIsU0FBSyxHQUFHLENBQVI7QUFDQW1CLE9BQUc7QUFDSGIsWUFBUSxHQUFHLENBQVg7QUFDRDtBQUNGOztBQUVELFNBQVNjLElBQVQsR0FBZ0I7QUFDZCxNQUFJdEIsR0FBRyxHQUFHVSxLQUFLLENBQUNWLEdBQU4sRUFBVjtBQUFBLE1BQXVCSCxLQUFLLEdBQUdHLEdBQUcsR0FBR08sU0FBckM7QUFDQSxNQUFJVixLQUFLLEdBQUdPLFNBQVosRUFBdUJLLFNBQVMsSUFBSVosS0FBYixFQUFvQlUsU0FBUyxHQUFHUCxHQUFoQztBQUN4Qjs7QUFFRCxTQUFTcUIsR0FBVCxHQUFlO0FBQ2IsTUFBSW51RCxFQUFKO0FBQUEsTUFBUUMsRUFBRSxHQUFHa3RELFFBQWI7QUFBQSxNQUF1Qmp0RCxFQUF2QjtBQUFBLE1BQTJCNGdELElBQUksR0FBRzd1QyxRQUFsQzs7QUFDQSxTQUFPaFMsRUFBUCxFQUFXO0FBQ1QsUUFBSUEsRUFBRSxDQUFDNHRELEtBQVAsRUFBYztBQUNaLFVBQUkvTSxJQUFJLEdBQUc3Z0QsRUFBRSxDQUFDNnRELEtBQWQsRUFBcUJoTixJQUFJLEdBQUc3Z0QsRUFBRSxDQUFDNnRELEtBQVY7QUFDckI5dEQsUUFBRSxHQUFHQyxFQUFMLEVBQVNBLEVBQUUsR0FBR0EsRUFBRSxDQUFDc3ZDLEtBQWpCO0FBQ0QsS0FIRCxNQUdPO0FBQ0xydkMsUUFBRSxHQUFHRCxFQUFFLENBQUNzdkMsS0FBUixFQUFldHZDLEVBQUUsQ0FBQ3N2QyxLQUFILEdBQVcsSUFBMUI7QUFDQXR2QyxRQUFFLEdBQUdELEVBQUUsR0FBR0EsRUFBRSxDQUFDdXZDLEtBQUgsR0FBV3J2QyxFQUFkLEdBQW1CaXRELFFBQVEsR0FBR2p0RCxFQUFyQztBQUNEO0FBQ0Y7O0FBQ0RrdEQsVUFBUSxHQUFHcHRELEVBQVg7QUFDQWd1RCxPQUFLLENBQUNsTixJQUFELENBQUw7QUFDRDs7QUFFRCxTQUFTa04sS0FBVCxDQUFlbE4sSUFBZixFQUFxQjtBQUNuQixNQUFJa00sS0FBSixFQUFXLE9BRFEsQ0FDQTs7QUFDbkIsTUFBSUMsT0FBSixFQUFhQSxPQUFPLEdBQUdoZ0UsWUFBWSxDQUFDZ2dFLE9BQUQsQ0FBdEI7QUFDYixNQUFJTixLQUFLLEdBQUc3TCxJQUFJLEdBQUd3TSxRQUFuQixDQUhtQixDQUdVOztBQUM3QixNQUFJWCxLQUFLLEdBQUcsRUFBWixFQUFnQjtBQUNkLFFBQUk3TCxJQUFJLEdBQUc3dUMsUUFBWCxFQUFxQmc3QyxPQUFPLEdBQUcvL0QsVUFBVSxDQUFDZ2hFLElBQUQsRUFBT3BOLElBQUksR0FBRzBNLEtBQUssQ0FBQ1YsR0FBTixFQUFQLEdBQXFCUyxTQUE1QixDQUFwQjtBQUNyQixRQUFJMW1CLFFBQUosRUFBY0EsUUFBUSxHQUFHd25CLGFBQWEsQ0FBQ3huQixRQUFELENBQXhCO0FBQ2YsR0FIRCxNQUdPO0FBQ0wsUUFBSSxDQUFDQSxRQUFMLEVBQWV3bUIsU0FBUyxHQUFHRyxLQUFLLENBQUNWLEdBQU4sRUFBWixFQUF5QmptQixRQUFRLEdBQUd5bkIsV0FBVyxDQUFDRixJQUFELEVBQU9sQixTQUFQLENBQS9DO0FBQ2ZGLFNBQUssR0FBRyxDQUFSLEVBQVdVLFFBQVEsQ0FBQ1EsSUFBRCxDQUFuQjtBQUNEO0FBQ0YsQzs7Ozs7Ozs7Ozs7O0FDN0dEO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQSxJQUFJcm5ELElBQUksR0FBRyxDQUFDLElBQUQsQ0FBWDtBQUVlLHlFQUFTeGUsSUFBVCxFQUFlbkMsSUFBZixFQUFxQjtBQUNsQyxNQUFJcW9FLFNBQVMsR0FBR2xtRSxJQUFJLENBQUNtbUUsWUFBckI7QUFBQSxNQUNJQyxRQURKO0FBQUEsTUFFSXR4RSxDQUZKOztBQUlBLE1BQUlveEUsU0FBSixFQUFlO0FBQ2Jyb0UsUUFBSSxHQUFHQSxJQUFJLElBQUksSUFBUixHQUFlLElBQWYsR0FBc0JBLElBQUksR0FBRyxFQUFwQzs7QUFDQSxTQUFLL0ksQ0FBTCxJQUFVb3hFLFNBQVYsRUFBcUI7QUFDbkIsVUFBSSxDQUFDRSxRQUFRLEdBQUdGLFNBQVMsQ0FBQ3B4RSxDQUFELENBQXJCLEVBQTBCc0wsS0FBMUIsR0FBa0NpbUUsOERBQWxDLElBQStDRCxRQUFRLENBQUN2b0UsSUFBVCxLQUFrQkEsSUFBckUsRUFBMkU7QUFDekUsZUFBTyxJQUFJeW9FLDREQUFKLENBQWUsQ0FBQyxDQUFDdG1FLElBQUQsQ0FBRCxDQUFmLEVBQXlCd2UsSUFBekIsRUFBK0IzZ0IsSUFBL0IsRUFBcUMsQ0FBQy9JLENBQXRDLENBQVA7QUFDRDtBQUNGO0FBQ0Y7O0FBRUQsU0FBTyxJQUFQO0FBQ0QsQzs7Ozs7Ozs7Ozs7O0FDcEJEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7QUNGQTtBQUFBO0FBQUE7QUFFZSx5RUFBU2tMLElBQVQsRUFBZW5DLElBQWYsRUFBcUI7QUFDbEMsTUFBSXFvRSxTQUFTLEdBQUdsbUUsSUFBSSxDQUFDbW1FLFlBQXJCO0FBQUEsTUFDSUMsUUFESjtBQUFBLE1BRUlsa0UsTUFGSjtBQUFBLE1BR0loQyxLQUFLLEdBQUcsSUFIWjtBQUFBLE1BSUlwTCxDQUpKO0FBTUEsTUFBSSxDQUFDb3hFLFNBQUwsRUFBZ0I7QUFFaEJyb0UsTUFBSSxHQUFHQSxJQUFJLElBQUksSUFBUixHQUFlLElBQWYsR0FBc0JBLElBQUksR0FBRyxFQUFwQzs7QUFFQSxPQUFLL0ksQ0FBTCxJQUFVb3hFLFNBQVYsRUFBcUI7QUFDbkIsUUFBSSxDQUFDRSxRQUFRLEdBQUdGLFNBQVMsQ0FBQ3B4RSxDQUFELENBQXJCLEVBQTBCK0ksSUFBMUIsS0FBbUNBLElBQXZDLEVBQTZDO0FBQUVxQyxXQUFLLEdBQUcsS0FBUjtBQUFlO0FBQVc7O0FBQ3pFZ0MsVUFBTSxHQUFHa2tFLFFBQVEsQ0FBQ2htRSxLQUFULEdBQWlCbW1FLDZEQUFqQixJQUE2QkgsUUFBUSxDQUFDaG1FLEtBQVQsR0FBaUJvbUUsMkRBQXZEO0FBQ0FKLFlBQVEsQ0FBQ2htRSxLQUFULEdBQWlCcW1FLDBEQUFqQjtBQUNBTCxZQUFRLENBQUN0N0MsS0FBVCxDQUFlenlCLElBQWY7QUFDQSt0RSxZQUFRLENBQUNqbEUsRUFBVCxDQUFZL0osSUFBWixDQUFpQjhLLE1BQU0sR0FBRyxXQUFILEdBQWlCLFFBQXhDLEVBQWtEbEMsSUFBbEQsRUFBd0RBLElBQUksQ0FBQzBDLFFBQTdELEVBQXVFMGpFLFFBQVEsQ0FBQy8vRCxLQUFoRixFQUF1RisvRCxRQUFRLENBQUN2bEUsS0FBaEc7QUFDQSxXQUFPcWxFLFNBQVMsQ0FBQ3B4RSxDQUFELENBQWhCO0FBQ0Q7O0FBRUQsTUFBSW9MLEtBQUosRUFBVyxPQUFPRixJQUFJLENBQUNtbUUsWUFBWjtBQUNaLEM7Ozs7Ozs7Ozs7OztBQ3ZCRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUVBbHFFLHNEQUFTLENBQUNqSixTQUFWLENBQW9CZ1AsU0FBcEIsR0FBZ0Mwa0Usa0RBQWhDO0FBQ0F6cUUsc0RBQVMsQ0FBQ2pKLFNBQVYsQ0FBb0JpSyxVQUFwQixHQUFpQzBwRSxtREFBakMsQzs7Ozs7Ozs7Ozs7O0FDTEE7QUFBQTtBQUFBO0FBRWUseUVBQVM5b0UsSUFBVCxFQUFlO0FBQzVCLFNBQU8sS0FBS1AsSUFBTCxDQUFVLFlBQVc7QUFDMUIwRSw4REFBUyxDQUFDLElBQUQsRUFBT25FLElBQVAsQ0FBVDtBQUNELEdBRk0sQ0FBUDtBQUdELEM7Ozs7Ozs7Ozs7OztBQ05EO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLElBQUkrb0UsYUFBYSxHQUFHO0FBQ2xCbk8sTUFBSSxFQUFFLElBRFk7QUFDTjtBQUNaNkwsT0FBSyxFQUFFLENBRlc7QUFHbEIzdUIsVUFBUSxFQUFFLEdBSFE7QUFJbEJreEIsTUFBSSxFQUFFQyxzREFBY0E7QUFKRixDQUFwQjs7QUFPQSxTQUFTQyxPQUFULENBQWlCL21FLElBQWpCLEVBQXVCbWUsRUFBdkIsRUFBMkI7QUFDekIsTUFBSTZvRCxNQUFKOztBQUNBLFNBQU8sRUFBRUEsTUFBTSxHQUFHaG5FLElBQUksQ0FBQ21tRSxZQUFoQixLQUFpQyxFQUFFYSxNQUFNLEdBQUdBLE1BQU0sQ0FBQzdvRCxFQUFELENBQWpCLENBQXhDLEVBQWdFO0FBQzlELFFBQUksRUFBRW5lLElBQUksR0FBR0EsSUFBSSxDQUFDN0MsVUFBZCxDQUFKLEVBQStCO0FBQzdCLGFBQU95cEUsYUFBYSxDQUFDbk8sSUFBZCxHQUFxQmdNLG9EQUFHLEVBQXhCLEVBQTRCbUMsYUFBbkM7QUFDRDtBQUNGOztBQUNELFNBQU9JLE1BQVA7QUFDRDs7QUFFYyx5RUFBU25wRSxJQUFULEVBQWU7QUFDNUIsTUFBSXNnQixFQUFKLEVBQ0k2b0QsTUFESjs7QUFHQSxNQUFJbnBFLElBQUksWUFBWXlvRSw0REFBcEIsRUFBZ0M7QUFDOUJub0QsTUFBRSxHQUFHdGdCLElBQUksQ0FBQ29wRSxHQUFWLEVBQWVwcEUsSUFBSSxHQUFHQSxJQUFJLENBQUNxcEUsS0FBM0I7QUFDRCxHQUZELE1BRU87QUFDTC9vRCxNQUFFLEdBQUdncEQsK0RBQUssRUFBVixFQUFjLENBQUNILE1BQU0sR0FBR0osYUFBVixFQUF5Qm5PLElBQXpCLEdBQWdDZ00sb0RBQUcsRUFBakQsRUFBcUQ1bUUsSUFBSSxHQUFHQSxJQUFJLElBQUksSUFBUixHQUFlLElBQWYsR0FBc0JBLElBQUksR0FBRyxFQUF6RjtBQUNEOztBQUVELE9BQUssSUFBSWdJLE1BQU0sR0FBRyxLQUFLaWhELE9BQWxCLEVBQTJCcndELENBQUMsR0FBR29QLE1BQU0sQ0FBQy9SLE1BQXRDLEVBQThDOEQsQ0FBQyxHQUFHLENBQXZELEVBQTBEQSxDQUFDLEdBQUduQixDQUE5RCxFQUFpRSxFQUFFbUIsQ0FBbkUsRUFBc0U7QUFDcEUsU0FBSyxJQUFJaUosS0FBSyxHQUFHZ0YsTUFBTSxDQUFDak8sQ0FBRCxDQUFsQixFQUF1QnRDLENBQUMsR0FBR3VMLEtBQUssQ0FBQy9NLE1BQWpDLEVBQXlDa00sSUFBekMsRUFBK0NsTCxDQUFDLEdBQUcsQ0FBeEQsRUFBMkRBLENBQUMsR0FBR1EsQ0FBL0QsRUFBa0UsRUFBRVIsQ0FBcEUsRUFBdUU7QUFDckUsVUFBSWtMLElBQUksR0FBR2EsS0FBSyxDQUFDL0wsQ0FBRCxDQUFoQixFQUFxQjtBQUNuQnN4RSw0RUFBUSxDQUFDcG1FLElBQUQsRUFBT25DLElBQVAsRUFBYXNnQixFQUFiLEVBQWlCcnBCLENBQWpCLEVBQW9CK0wsS0FBcEIsRUFBMkJtbUUsTUFBTSxJQUFJRCxPQUFPLENBQUMvbUUsSUFBRCxFQUFPbWUsRUFBUCxDQUE1QyxDQUFSO0FBQ0Q7QUFDRjtBQUNGOztBQUVELFNBQU8sSUFBSW1vRCw0REFBSixDQUFlemdFLE1BQWYsRUFBdUIsS0FBS2doRCxRQUE1QixFQUFzQ2hwRCxJQUF0QyxFQUE0Q3NnQixFQUE1QyxDQUFQO0FBQ0QsQzs7Ozs7Ozs7Ozs7O0FDekNEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTb21DLFVBQVQsQ0FBb0IxbUQsSUFBcEIsRUFBMEI7QUFDeEIsU0FBTyxZQUFXO0FBQ2hCLFNBQUsybUQsZUFBTCxDQUFxQjNtRCxJQUFyQjtBQUNELEdBRkQ7QUFHRDs7QUFFRCxTQUFTNG1ELFlBQVQsQ0FBc0J4QixRQUF0QixFQUFnQztBQUM5QixTQUFPLFlBQVc7QUFDaEIsU0FBS3lCLGlCQUFMLENBQXVCekIsUUFBUSxDQUFDQyxLQUFoQyxFQUF1Q0QsUUFBUSxDQUFDbGpELEtBQWhEO0FBQ0QsR0FGRDtBQUdEOztBQUVELFNBQVM0a0QsWUFBVCxDQUFzQjltRCxJQUF0QixFQUE0QmlFLFdBQTVCLEVBQXlDM0osTUFBekMsRUFBaUQ7QUFDL0MsTUFBSWl2RSxRQUFKO0FBQUEsTUFDSUMsT0FBTyxHQUFHbHZFLE1BQU0sR0FBRyxFQUR2QjtBQUFBLE1BRUltdkUsWUFGSjtBQUdBLFNBQU8sWUFBVztBQUNoQixRQUFJQyxPQUFPLEdBQUcsS0FBS3JxRSxZQUFMLENBQWtCVyxJQUFsQixDQUFkO0FBQ0EsV0FBTzBwRSxPQUFPLEtBQUtGLE9BQVosR0FBc0IsSUFBdEIsR0FDREUsT0FBTyxLQUFLSCxRQUFaLEdBQXVCRSxZQUF2QixHQUNBQSxZQUFZLEdBQUd4bEUsV0FBVyxDQUFDc2xFLFFBQVEsR0FBR0csT0FBWixFQUFxQnB2RSxNQUFyQixDQUZoQztBQUdELEdBTEQ7QUFNRDs7QUFFRCxTQUFTeXNELGNBQVQsQ0FBd0IzQixRQUF4QixFQUFrQ25oRCxXQUFsQyxFQUErQzNKLE1BQS9DLEVBQXVEO0FBQ3JELE1BQUlpdkUsUUFBSjtBQUFBLE1BQ0lDLE9BQU8sR0FBR2x2RSxNQUFNLEdBQUcsRUFEdkI7QUFBQSxNQUVJbXZFLFlBRko7QUFHQSxTQUFPLFlBQVc7QUFDaEIsUUFBSUMsT0FBTyxHQUFHLEtBQUt2aUIsY0FBTCxDQUFvQi9CLFFBQVEsQ0FBQ0MsS0FBN0IsRUFBb0NELFFBQVEsQ0FBQ2xqRCxLQUE3QyxDQUFkO0FBQ0EsV0FBT3duRSxPQUFPLEtBQUtGLE9BQVosR0FBc0IsSUFBdEIsR0FDREUsT0FBTyxLQUFLSCxRQUFaLEdBQXVCRSxZQUF2QixHQUNBQSxZQUFZLEdBQUd4bEUsV0FBVyxDQUFDc2xFLFFBQVEsR0FBR0csT0FBWixFQUFxQnB2RSxNQUFyQixDQUZoQztBQUdELEdBTEQ7QUFNRDs7QUFFRCxTQUFTMnNELFlBQVQsQ0FBc0JqbkQsSUFBdEIsRUFBNEJpRSxXQUE1QixFQUF5Q3ZNLEtBQXpDLEVBQWdEO0FBQzlDLE1BQUk2eEUsUUFBSixFQUNJSSxRQURKLEVBRUlGLFlBRko7QUFHQSxTQUFPLFlBQVc7QUFDaEIsUUFBSUMsT0FBSjtBQUFBLFFBQWFwdkUsTUFBTSxHQUFHNUMsS0FBSyxDQUFDLElBQUQsQ0FBM0I7QUFBQSxRQUFtQzh4RSxPQUFuQztBQUNBLFFBQUlsdkUsTUFBTSxJQUFJLElBQWQsRUFBb0IsT0FBTyxLQUFLLEtBQUtxc0QsZUFBTCxDQUFxQjNtRCxJQUFyQixDQUFaO0FBQ3BCMHBFLFdBQU8sR0FBRyxLQUFLcnFFLFlBQUwsQ0FBa0JXLElBQWxCLENBQVY7QUFDQXdwRSxXQUFPLEdBQUdsdkUsTUFBTSxHQUFHLEVBQW5CO0FBQ0EsV0FBT292RSxPQUFPLEtBQUtGLE9BQVosR0FBc0IsSUFBdEIsR0FDREUsT0FBTyxLQUFLSCxRQUFaLElBQXdCQyxPQUFPLEtBQUtHLFFBQXBDLEdBQStDRixZQUEvQyxJQUNDRSxRQUFRLEdBQUdILE9BQVgsRUFBb0JDLFlBQVksR0FBR3hsRSxXQUFXLENBQUNzbEUsUUFBUSxHQUFHRyxPQUFaLEVBQXFCcHZFLE1BQXJCLENBRC9DLENBRE47QUFHRCxHQVJEO0FBU0Q7O0FBRUQsU0FBUzRzRCxjQUFULENBQXdCOUIsUUFBeEIsRUFBa0NuaEQsV0FBbEMsRUFBK0N2TSxLQUEvQyxFQUFzRDtBQUNwRCxNQUFJNnhFLFFBQUosRUFDSUksUUFESixFQUVJRixZQUZKO0FBR0EsU0FBTyxZQUFXO0FBQ2hCLFFBQUlDLE9BQUo7QUFBQSxRQUFhcHZFLE1BQU0sR0FBRzVDLEtBQUssQ0FBQyxJQUFELENBQTNCO0FBQUEsUUFBbUM4eEUsT0FBbkM7QUFDQSxRQUFJbHZFLE1BQU0sSUFBSSxJQUFkLEVBQW9CLE9BQU8sS0FBSyxLQUFLdXNELGlCQUFMLENBQXVCekIsUUFBUSxDQUFDQyxLQUFoQyxFQUF1Q0QsUUFBUSxDQUFDbGpELEtBQWhELENBQVo7QUFDcEJ3bkUsV0FBTyxHQUFHLEtBQUt2aUIsY0FBTCxDQUFvQi9CLFFBQVEsQ0FBQ0MsS0FBN0IsRUFBb0NELFFBQVEsQ0FBQ2xqRCxLQUE3QyxDQUFWO0FBQ0FzbkUsV0FBTyxHQUFHbHZFLE1BQU0sR0FBRyxFQUFuQjtBQUNBLFdBQU9vdkUsT0FBTyxLQUFLRixPQUFaLEdBQXNCLElBQXRCLEdBQ0RFLE9BQU8sS0FBS0gsUUFBWixJQUF3QkMsT0FBTyxLQUFLRyxRQUFwQyxHQUErQ0YsWUFBL0MsSUFDQ0UsUUFBUSxHQUFHSCxPQUFYLEVBQW9CQyxZQUFZLEdBQUd4bEUsV0FBVyxDQUFDc2xFLFFBQVEsR0FBR0csT0FBWixFQUFxQnB2RSxNQUFyQixDQUQvQyxDQUROO0FBR0QsR0FSRDtBQVNEOztBQUVjLHlFQUFTMEYsSUFBVCxFQUFldEksS0FBZixFQUFzQjtBQUNuQyxNQUFJMHRELFFBQVEsR0FBR0UsOERBQVMsQ0FBQ3RsRCxJQUFELENBQXhCO0FBQUEsTUFBZ0MvSSxDQUFDLEdBQUdtdUQsUUFBUSxLQUFLLFdBQWIsR0FBMkJ2UCxzRUFBM0IsR0FBa0Q1eEMsb0RBQXRGO0FBQ0EsU0FBTyxLQUFLMmxFLFNBQUwsQ0FBZTVwRSxJQUFmLEVBQXFCLE9BQU90SSxLQUFQLEtBQWlCLFVBQWpCLEdBQ3RCLENBQUMwdEQsUUFBUSxDQUFDbGpELEtBQVQsR0FBaUJnbEQsY0FBakIsR0FBa0NELFlBQW5DLEVBQWlEN0IsUUFBakQsRUFBMkRudUQsQ0FBM0QsRUFBOEQ0eUUseURBQVUsQ0FBQyxJQUFELEVBQU8sVUFBVTdwRSxJQUFqQixFQUF1QnRJLEtBQXZCLENBQXhFLENBRHNCLEdBRXRCQSxLQUFLLElBQUksSUFBVCxHQUFnQixDQUFDMHRELFFBQVEsQ0FBQ2xqRCxLQUFULEdBQWlCMGtELFlBQWpCLEdBQWdDRixVQUFqQyxFQUE2Q3RCLFFBQTdDLENBQWhCLEdBQ0EsQ0FBQ0EsUUFBUSxDQUFDbGpELEtBQVQsR0FBaUI2a0QsY0FBakIsR0FBa0NELFlBQW5DLEVBQWlEMUIsUUFBakQsRUFBMkRudUQsQ0FBM0QsRUFBOERTLEtBQTlELENBSEMsQ0FBUDtBQUlELEM7Ozs7Ozs7Ozs7OztBQzdFRDtBQUFBO0FBQUE7O0FBRUEsU0FBU295RSxlQUFULENBQXlCOXBFLElBQXpCLEVBQStCL0ksQ0FBL0IsRUFBa0M7QUFDaEMsU0FBTyxVQUFTMkQsQ0FBVCxFQUFZO0FBQ2pCLFNBQUtxOEMsWUFBTCxDQUFrQmozQyxJQUFsQixFQUF3Qi9JLENBQUMsQ0FBQzJELENBQUQsQ0FBekI7QUFDRCxHQUZEO0FBR0Q7O0FBRUQsU0FBU212RSxpQkFBVCxDQUEyQjNrQixRQUEzQixFQUFxQ251RCxDQUFyQyxFQUF3QztBQUN0QyxTQUFPLFVBQVMyRCxDQUFULEVBQVk7QUFDakIsU0FBS29zRCxjQUFMLENBQW9CNUIsUUFBUSxDQUFDQyxLQUE3QixFQUFvQ0QsUUFBUSxDQUFDbGpELEtBQTdDLEVBQW9EakwsQ0FBQyxDQUFDMkQsQ0FBRCxDQUFyRDtBQUNELEdBRkQ7QUFHRDs7QUFFRCxTQUFTb3ZFLFdBQVQsQ0FBcUI1a0IsUUFBckIsRUFBK0IxdEQsS0FBL0IsRUFBc0M7QUFDcEMsTUFBSW9pQixFQUFKLEVBQVEvaUIsRUFBUjs7QUFDQSxXQUFTNk0sS0FBVCxHQUFpQjtBQUNmLFFBQUkzTSxDQUFDLEdBQUdTLEtBQUssQ0FBQ21HLEtBQU4sQ0FBWSxJQUFaLEVBQWtCekUsU0FBbEIsQ0FBUjtBQUNBLFFBQUluQyxDQUFDLEtBQUtGLEVBQVYsRUFBYytpQixFQUFFLEdBQUcsQ0FBQy9pQixFQUFFLEdBQUdFLENBQU4sS0FBWTh5RSxpQkFBaUIsQ0FBQzNrQixRQUFELEVBQVdudUQsQ0FBWCxDQUFsQztBQUNkLFdBQU82aUIsRUFBUDtBQUNEOztBQUNEbFcsT0FBSyxDQUFDcW1FLE1BQU4sR0FBZXZ5RSxLQUFmO0FBQ0EsU0FBT2tNLEtBQVA7QUFDRDs7QUFFRCxTQUFTZ21FLFNBQVQsQ0FBbUI1cEUsSUFBbkIsRUFBeUJ0SSxLQUF6QixFQUFnQztBQUM5QixNQUFJb2lCLEVBQUosRUFBUS9pQixFQUFSOztBQUNBLFdBQVM2TSxLQUFULEdBQWlCO0FBQ2YsUUFBSTNNLENBQUMsR0FBR1MsS0FBSyxDQUFDbUcsS0FBTixDQUFZLElBQVosRUFBa0J6RSxTQUFsQixDQUFSO0FBQ0EsUUFBSW5DLENBQUMsS0FBS0YsRUFBVixFQUFjK2lCLEVBQUUsR0FBRyxDQUFDL2lCLEVBQUUsR0FBR0UsQ0FBTixLQUFZNnlFLGVBQWUsQ0FBQzlwRSxJQUFELEVBQU8vSSxDQUFQLENBQWhDO0FBQ2QsV0FBTzZpQixFQUFQO0FBQ0Q7O0FBQ0RsVyxPQUFLLENBQUNxbUUsTUFBTixHQUFldnlFLEtBQWY7QUFDQSxTQUFPa00sS0FBUDtBQUNEOztBQUVjLHlFQUFTNUQsSUFBVCxFQUFldEksS0FBZixFQUFzQjtBQUNuQyxNQUFJNlMsR0FBRyxHQUFHLFVBQVV2SyxJQUFwQjtBQUNBLE1BQUk1RyxTQUFTLENBQUNuRCxNQUFWLEdBQW1CLENBQXZCLEVBQTBCLE9BQU8sQ0FBQ3NVLEdBQUcsR0FBRyxLQUFLM0csS0FBTCxDQUFXMkcsR0FBWCxDQUFQLEtBQTJCQSxHQUFHLENBQUMwL0QsTUFBdEM7QUFDMUIsTUFBSXZ5RSxLQUFLLElBQUksSUFBYixFQUFtQixPQUFPLEtBQUtrTSxLQUFMLENBQVcyRyxHQUFYLEVBQWdCLElBQWhCLENBQVA7QUFDbkIsTUFBSSxPQUFPN1MsS0FBUCxLQUFpQixVQUFyQixFQUFpQyxNQUFNLElBQUk0bEIsS0FBSixFQUFOO0FBQ2pDLE1BQUk4bkMsUUFBUSxHQUFHRSw4REFBUyxDQUFDdGxELElBQUQsQ0FBeEI7QUFDQSxTQUFPLEtBQUs0RCxLQUFMLENBQVcyRyxHQUFYLEVBQWdCLENBQUM2NkMsUUFBUSxDQUFDbGpELEtBQVQsR0FBaUI4bkUsV0FBakIsR0FBK0JKLFNBQWhDLEVBQTJDeGtCLFFBQTNDLEVBQXFEMXRELEtBQXJELENBQWhCLENBQVA7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUMzQ0Q7QUFBQTtBQUFBOztBQUVBLFNBQVN3eUUsYUFBVCxDQUF1QjVwRCxFQUF2QixFQUEyQjVvQixLQUEzQixFQUFrQztBQUNoQyxTQUFPLFlBQVc7QUFDaEIwd0IsMERBQUksQ0FBQyxJQUFELEVBQU85SCxFQUFQLENBQUosQ0FBZW1tRCxLQUFmLEdBQXVCLENBQUMvdUUsS0FBSyxDQUFDbUcsS0FBTixDQUFZLElBQVosRUFBa0J6RSxTQUFsQixDQUF4QjtBQUNELEdBRkQ7QUFHRDs7QUFFRCxTQUFTK3dFLGFBQVQsQ0FBdUI3cEQsRUFBdkIsRUFBMkI1b0IsS0FBM0IsRUFBa0M7QUFDaEMsU0FBT0EsS0FBSyxHQUFHLENBQUNBLEtBQVQsRUFBZ0IsWUFBVztBQUNoQzB3QiwwREFBSSxDQUFDLElBQUQsRUFBTzlILEVBQVAsQ0FBSixDQUFlbW1ELEtBQWYsR0FBdUIvdUUsS0FBdkI7QUFDRCxHQUZEO0FBR0Q7O0FBRWMseUVBQVNBLEtBQVQsRUFBZ0I7QUFDN0IsTUFBSTRvQixFQUFFLEdBQUcsS0FBSzhvRCxHQUFkO0FBRUEsU0FBT2h3RSxTQUFTLENBQUNuRCxNQUFWLEdBQ0QsS0FBS3dKLElBQUwsQ0FBVSxDQUFDLE9BQU8vSCxLQUFQLEtBQWlCLFVBQWpCLEdBQ1B3eUUsYUFETyxHQUVQQyxhQUZNLEVBRVM3cEQsRUFGVCxFQUVhNW9CLEtBRmIsQ0FBVixDQURDLEdBSURtVCxxREFBRyxDQUFDLEtBQUsxSSxJQUFMLEVBQUQsRUFBY21lLEVBQWQsQ0FBSCxDQUFxQm1tRCxLQUozQjtBQUtELEM7Ozs7Ozs7Ozs7OztBQ3RCRDtBQUFBO0FBQUE7O0FBRUEsU0FBUzJELGdCQUFULENBQTBCOXBELEVBQTFCLEVBQThCNW9CLEtBQTlCLEVBQXFDO0FBQ25DLFNBQU8sWUFBVztBQUNoQm9ULHlEQUFHLENBQUMsSUFBRCxFQUFPd1YsRUFBUCxDQUFILENBQWN3M0IsUUFBZCxHQUF5QixDQUFDcGdELEtBQUssQ0FBQ21HLEtBQU4sQ0FBWSxJQUFaLEVBQWtCekUsU0FBbEIsQ0FBMUI7QUFDRCxHQUZEO0FBR0Q7O0FBRUQsU0FBU2l4RSxnQkFBVCxDQUEwQi9wRCxFQUExQixFQUE4QjVvQixLQUE5QixFQUFxQztBQUNuQyxTQUFPQSxLQUFLLEdBQUcsQ0FBQ0EsS0FBVCxFQUFnQixZQUFXO0FBQ2hDb1QseURBQUcsQ0FBQyxJQUFELEVBQU93VixFQUFQLENBQUgsQ0FBY3czQixRQUFkLEdBQXlCcGdELEtBQXpCO0FBQ0QsR0FGRDtBQUdEOztBQUVjLHlFQUFTQSxLQUFULEVBQWdCO0FBQzdCLE1BQUk0b0IsRUFBRSxHQUFHLEtBQUs4b0QsR0FBZDtBQUVBLFNBQU9od0UsU0FBUyxDQUFDbkQsTUFBVixHQUNELEtBQUt3SixJQUFMLENBQVUsQ0FBQyxPQUFPL0gsS0FBUCxLQUFpQixVQUFqQixHQUNQMHlFLGdCQURPLEdBRVBDLGdCQUZNLEVBRVkvcEQsRUFGWixFQUVnQjVvQixLQUZoQixDQUFWLENBREMsR0FJRG1ULHFEQUFHLENBQUMsS0FBSzFJLElBQUwsRUFBRCxFQUFjbWUsRUFBZCxDQUFILENBQXFCdzNCLFFBSjNCO0FBS0QsQzs7Ozs7Ozs7Ozs7O0FDdEJEO0FBQUE7QUFBQTs7QUFFQSxTQUFTd3lCLFlBQVQsQ0FBc0JocUQsRUFBdEIsRUFBMEI1b0IsS0FBMUIsRUFBaUM7QUFDL0IsTUFBSSxPQUFPQSxLQUFQLEtBQWlCLFVBQXJCLEVBQWlDLE1BQU0sSUFBSTRsQixLQUFKLEVBQU47QUFDakMsU0FBTyxZQUFXO0FBQ2hCeFMseURBQUcsQ0FBQyxJQUFELEVBQU93VixFQUFQLENBQUgsQ0FBYzBvRCxJQUFkLEdBQXFCdHhFLEtBQXJCO0FBQ0QsR0FGRDtBQUdEOztBQUVjLHlFQUFTQSxLQUFULEVBQWdCO0FBQzdCLE1BQUk0b0IsRUFBRSxHQUFHLEtBQUs4b0QsR0FBZDtBQUVBLFNBQU9od0UsU0FBUyxDQUFDbkQsTUFBVixHQUNELEtBQUt3SixJQUFMLENBQVU2cUUsWUFBWSxDQUFDaHFELEVBQUQsRUFBSzVvQixLQUFMLENBQXRCLENBREMsR0FFRG1ULHFEQUFHLENBQUMsS0FBSzFJLElBQUwsRUFBRCxFQUFjbWUsRUFBZCxDQUFILENBQXFCMG9ELElBRjNCO0FBR0QsQzs7Ozs7Ozs7Ozs7O0FDZkQ7QUFBQTtBQUFBO0FBRWUsMkVBQVc7QUFDeEIsTUFBSXVCLEdBQUo7QUFBQSxNQUFTQyxHQUFUO0FBQUEsTUFBYzNtRSxJQUFJLEdBQUcsSUFBckI7QUFBQSxNQUEyQnljLEVBQUUsR0FBR3pjLElBQUksQ0FBQ3VsRSxHQUFyQztBQUFBLE1BQTBDcCtELElBQUksR0FBR25ILElBQUksQ0FBQ21ILElBQUwsRUFBakQ7QUFDQSxTQUFPLElBQUk0ZCxPQUFKLENBQVksVUFBU0MsT0FBVCxFQUFrQkMsTUFBbEIsRUFBMEI7QUFDM0MsUUFBSTJoRCxNQUFNLEdBQUc7QUFBQy95RSxXQUFLLEVBQUVveEI7QUFBUixLQUFiO0FBQUEsUUFDSW5sQixHQUFHLEdBQUc7QUFBQ2pNLFdBQUssRUFBRSxpQkFBVztBQUFFLFlBQUksRUFBRXNULElBQUYsS0FBVyxDQUFmLEVBQWtCNmQsT0FBTztBQUFLO0FBQW5ELEtBRFY7QUFHQWhsQixRQUFJLENBQUNwRSxJQUFMLENBQVUsWUFBVztBQUNuQixVQUFJOG9FLFFBQVEsR0FBR3o5RCxxREFBRyxDQUFDLElBQUQsRUFBT3dWLEVBQVAsQ0FBbEI7QUFBQSxVQUNJaGQsRUFBRSxHQUFHaWxFLFFBQVEsQ0FBQ2psRSxFQURsQixDQURtQixDQUluQjtBQUNBO0FBQ0E7O0FBQ0EsVUFBSUEsRUFBRSxLQUFLaW5FLEdBQVgsRUFBZ0I7QUFDZEMsV0FBRyxHQUFHLENBQUNELEdBQUcsR0FBR2puRSxFQUFQLEVBQVduRixJQUFYLEVBQU47O0FBQ0Fxc0UsV0FBRyxDQUFDcnhFLENBQUosQ0FBTXN4RSxNQUFOLENBQWF2eEUsSUFBYixDQUFrQnV4RSxNQUFsQjs7QUFDQUQsV0FBRyxDQUFDcnhFLENBQUosQ0FBTWdMLFNBQU4sQ0FBZ0JqTCxJQUFoQixDQUFxQnV4RSxNQUFyQjs7QUFDQUQsV0FBRyxDQUFDcnhFLENBQUosQ0FBTXdLLEdBQU4sQ0FBVXpLLElBQVYsQ0FBZXlLLEdBQWY7QUFDRDs7QUFFRDRrRSxjQUFRLENBQUNqbEUsRUFBVCxHQUFja25FLEdBQWQ7QUFDRCxLQWZEO0FBZ0JELEdBcEJNLENBQVA7QUFxQkQsQzs7Ozs7Ozs7Ozs7O0FDekJEO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFZSx5RUFBUzM3QyxLQUFULEVBQWdCO0FBQzdCLE1BQUksT0FBT0EsS0FBUCxLQUFpQixVQUFyQixFQUFpQ0EsS0FBSyxHQUFHeTdCLDREQUFPLENBQUN6N0IsS0FBRCxDQUFmOztBQUVqQyxPQUFLLElBQUk3bUIsTUFBTSxHQUFHLEtBQUtpaEQsT0FBbEIsRUFBMkJyd0QsQ0FBQyxHQUFHb1AsTUFBTSxDQUFDL1IsTUFBdEMsRUFBOENnUyxTQUFTLEdBQUcsSUFBSS9TLEtBQUosQ0FBVTBELENBQVYsQ0FBMUQsRUFBd0VtQixDQUFDLEdBQUcsQ0FBakYsRUFBb0ZBLENBQUMsR0FBR25CLENBQXhGLEVBQTJGLEVBQUVtQixDQUE3RixFQUFnRztBQUM5RixTQUFLLElBQUlpSixLQUFLLEdBQUdnRixNQUFNLENBQUNqTyxDQUFELENBQWxCLEVBQXVCdEMsQ0FBQyxHQUFHdUwsS0FBSyxDQUFDL00sTUFBakMsRUFBeUNzMEQsUUFBUSxHQUFHdGlELFNBQVMsQ0FBQ2xPLENBQUQsQ0FBVCxHQUFlLEVBQW5FLEVBQXVFb0ksSUFBdkUsRUFBNkVsTCxDQUFDLEdBQUcsQ0FBdEYsRUFBeUZBLENBQUMsR0FBR1EsQ0FBN0YsRUFBZ0csRUFBRVIsQ0FBbEcsRUFBcUc7QUFDbkcsVUFBSSxDQUFDa0wsSUFBSSxHQUFHYSxLQUFLLENBQUMvTCxDQUFELENBQWIsS0FBcUI0M0IsS0FBSyxDQUFDdDFCLElBQU4sQ0FBVzRJLElBQVgsRUFBaUJBLElBQUksQ0FBQzBDLFFBQXRCLEVBQWdDNU4sQ0FBaEMsRUFBbUMrTCxLQUFuQyxDQUF6QixFQUFvRTtBQUNsRXVuRCxnQkFBUSxDQUFDcnhELElBQVQsQ0FBY2lKLElBQWQ7QUFDRDtBQUNGO0FBQ0Y7O0FBRUQsU0FBTyxJQUFJc21FLGlEQUFKLENBQWV4Z0UsU0FBZixFQUEwQixLQUFLK2dELFFBQS9CLEVBQXlDLEtBQUtxZ0IsS0FBOUMsRUFBcUQsS0FBS0QsR0FBMUQsQ0FBUDtBQUNELEM7Ozs7Ozs7Ozs7OztBQ2ZEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLElBQUk5b0QsRUFBRSxHQUFHLENBQVQ7QUFFTyxTQUFTbW9ELFVBQVQsQ0FBb0J6Z0UsTUFBcEIsRUFBNEIrZ0QsT0FBNUIsRUFBcUMvb0QsSUFBckMsRUFBMkNzZ0IsRUFBM0MsRUFBK0M7QUFDcEQsT0FBSzJvQyxPQUFMLEdBQWVqaEQsTUFBZjtBQUNBLE9BQUtnaEQsUUFBTCxHQUFnQkQsT0FBaEI7QUFDQSxPQUFLc2dCLEtBQUwsR0FBYXJwRSxJQUFiO0FBQ0EsT0FBS29wRSxHQUFMLEdBQVc5b0QsRUFBWDtBQUNEO0FBRWMsU0FBU2xoQixVQUFULENBQW9CWSxJQUFwQixFQUEwQjtBQUN2QyxTQUFPNUIsOERBQVMsR0FBR2dCLFVBQVosQ0FBdUJZLElBQXZCLENBQVA7QUFDRDtBQUVNLFNBQVNzcEUsS0FBVCxHQUFpQjtBQUN0QixTQUFPLEVBQUVocEQsRUFBVDtBQUNEO0FBRUQsSUFBSW9xRCxtQkFBbUIsR0FBR3RzRSxzREFBUyxDQUFDakosU0FBcEM7QUFFQXN6RSxVQUFVLENBQUN0ekUsU0FBWCxHQUF1QmlLLFVBQVUsQ0FBQ2pLLFNBQVgsR0FBdUI7QUFDNUN3VixhQUFXLEVBQUU4OUQsVUFEK0I7QUFFNUN6cEUsUUFBTSxFQUFFMnJFLGdEQUZvQztBQUc1Q3JzRSxXQUFTLEVBQUVzc0UsbURBSGlDO0FBSTVDcHJFLFFBQU0sRUFBRXFyRSwrQ0FKb0M7QUFLNUMzckUsT0FBSyxFQUFFNHJFLDhDQUxxQztBQU01QzFzRSxXQUFTLEVBQUUyc0UsbURBTmlDO0FBTzVDM3JFLFlBQVUsRUFBRTRyRSxvREFQZ0M7QUFRNUN6eEUsTUFBSSxFQUFFbXhFLG1CQUFtQixDQUFDbnhFLElBUmtCO0FBUzVDb3dCLE9BQUssRUFBRStnRCxtQkFBbUIsQ0FBQy9nRCxLQVRpQjtBQVU1Q3huQixNQUFJLEVBQUV1b0UsbUJBQW1CLENBQUN2b0UsSUFWa0I7QUFXNUM2SSxNQUFJLEVBQUUwL0QsbUJBQW1CLENBQUMxL0QsSUFYa0I7QUFZNUMzSSxPQUFLLEVBQUVxb0UsbUJBQW1CLENBQUNyb0UsS0FaaUI7QUFhNUM1QyxNQUFJLEVBQUVpckUsbUJBQW1CLENBQUNqckUsSUFia0I7QUFjNUM2RCxJQUFFLEVBQUUybkUsMkNBZHdDO0FBZTVDbnNFLE1BQUksRUFBRW9zRSw2Q0Fmc0M7QUFnQjVDdEIsV0FBUyxFQUFFdUIsa0RBaEJpQztBQWlCNUM5bkUsT0FBSyxFQUFFK25FLCtDQWpCcUM7QUFrQjVDQyxZQUFVLEVBQUVDLG9EQWxCZ0M7QUFtQjVDcnNFLE1BQUksRUFBRXNzRSw4Q0FuQnNDO0FBb0I1Q2hzRSxRQUFNLEVBQUVpc0UsK0NBcEJvQztBQXFCNUM1bkUsT0FBSyxFQUFFNm5FLCtDQXJCcUM7QUFzQjVDaEYsT0FBSyxFQUFFaUYsOENBdEJxQztBQXVCNUM1ekIsVUFBUSxFQUFFNnpCLGlEQXZCa0M7QUF3QjVDM0MsTUFBSSxFQUFFNEMsNkNBeEJzQztBQXlCNUNqb0UsS0FBRyxFQUFFa29FLDZDQUFjQTtBQXpCeUIsQ0FBOUMsQzs7Ozs7Ozs7Ozs7O0FDdkNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFZSx5RUFBU3YyRSxDQUFULEVBQVlDLENBQVosRUFBZTtBQUM1QixNQUFJOGtCLENBQUo7QUFDQSxTQUFPLENBQUMsT0FBTzlrQixDQUFQLEtBQWEsUUFBYixHQUF3QnVwRCxnRUFBeEIsR0FDRnZwRCxDQUFDLFlBQVltaEIsOENBQWIsR0FBcUJvMUQsNkRBQXJCLEdBQ0EsQ0FBQ3p4RCxDQUFDLEdBQUczRCxzREFBSyxDQUFDbmhCLENBQUQsQ0FBVixLQUFrQkEsQ0FBQyxHQUFHOGtCLENBQUosRUFBT3l4RCw2REFBekIsSUFDQUMsZ0VBSEMsRUFHa0J6MkUsQ0FIbEIsRUFHcUJDLENBSHJCLENBQVA7QUFJRCxDOzs7Ozs7Ozs7Ozs7QUNURDtBQUFBO0FBQUE7QUFFZSx5RUFBUzZKLFVBQVQsRUFBcUI7QUFDbEMsTUFBSUEsVUFBVSxDQUFDZ3FFLEdBQVgsS0FBbUIsS0FBS0EsR0FBNUIsRUFBaUMsTUFBTSxJQUFJOXJELEtBQUosRUFBTjs7QUFFakMsT0FBSyxJQUFJZ3dDLE9BQU8sR0FBRyxLQUFLckUsT0FBbkIsRUFBNEJzRSxPQUFPLEdBQUdudUQsVUFBVSxDQUFDNnBELE9BQWpELEVBQTBEdUUsRUFBRSxHQUFHRixPQUFPLENBQUNyM0QsTUFBdkUsRUFBK0VraUIsRUFBRSxHQUFHbzFDLE9BQU8sQ0FBQ3QzRCxNQUE1RixFQUFvRzJDLENBQUMsR0FBR3RCLElBQUksQ0FBQ0ssR0FBTCxDQUFTNjFELEVBQVQsRUFBYXIxQyxFQUFiLENBQXhHLEVBQTBIczFDLE1BQU0sR0FBRyxJQUFJdjRELEtBQUosQ0FBVXM0RCxFQUFWLENBQW5JLEVBQWtKenpELENBQUMsR0FBRyxDQUEzSixFQUE4SkEsQ0FBQyxHQUFHbkIsQ0FBbEssRUFBcUssRUFBRW1CLENBQXZLLEVBQTBLO0FBQ3hLLFNBQUssSUFBSTJ6RCxNQUFNLEdBQUdKLE9BQU8sQ0FBQ3Z6RCxDQUFELENBQXBCLEVBQXlCNHpELE1BQU0sR0FBR0osT0FBTyxDQUFDeHpELENBQUQsQ0FBekMsRUFBOEN0QyxDQUFDLEdBQUdpMkQsTUFBTSxDQUFDejNELE1BQXpELEVBQWlFaUosS0FBSyxHQUFHdXVELE1BQU0sQ0FBQzF6RCxDQUFELENBQU4sR0FBWSxJQUFJN0UsS0FBSixDQUFVdUMsQ0FBVixDQUFyRixFQUFtRzBLLElBQW5HLEVBQXlHbEwsQ0FBQyxHQUFHLENBQWxILEVBQXFIQSxDQUFDLEdBQUdRLENBQXpILEVBQTRILEVBQUVSLENBQTlILEVBQWlJO0FBQy9ILFVBQUlrTCxJQUFJLEdBQUd1ckQsTUFBTSxDQUFDejJELENBQUQsQ0FBTixJQUFhMDJELE1BQU0sQ0FBQzEyRCxDQUFELENBQTlCLEVBQW1DO0FBQ2pDaUksYUFBSyxDQUFDakksQ0FBRCxDQUFMLEdBQVdrTCxJQUFYO0FBQ0Q7QUFDRjtBQUNGOztBQUVELFNBQU9wSSxDQUFDLEdBQUd5ekQsRUFBWCxFQUFlLEVBQUV6ekQsQ0FBakIsRUFBb0I7QUFDbEIwekQsVUFBTSxDQUFDMXpELENBQUQsQ0FBTixHQUFZdXpELE9BQU8sQ0FBQ3Z6RCxDQUFELENBQW5CO0FBQ0Q7O0FBRUQsU0FBTyxJQUFJMHVFLGlEQUFKLENBQWVoYixNQUFmLEVBQXVCLEtBQUt6RSxRQUE1QixFQUFzQyxLQUFLcWdCLEtBQTNDLEVBQWtELEtBQUtELEdBQXZELENBQVA7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUNsQkQ7QUFBQTtBQUFBOztBQUVBLFNBQVM3dUUsS0FBVCxDQUFleUYsSUFBZixFQUFxQjtBQUNuQixTQUFPLENBQUNBLElBQUksR0FBRyxFQUFSLEVBQVkrVyxJQUFaLEdBQW1CMEgsS0FBbkIsQ0FBeUIsT0FBekIsRUFBa0NnbEMsS0FBbEMsQ0FBd0MsVUFBUzdvRCxDQUFULEVBQVk7QUFDekQsUUFBSTNELENBQUMsR0FBRzJELENBQUMsQ0FBQzhqQixPQUFGLENBQVUsR0FBVixDQUFSO0FBQ0EsUUFBSXpuQixDQUFDLElBQUksQ0FBVCxFQUFZMkQsQ0FBQyxHQUFHQSxDQUFDLENBQUN4RixLQUFGLENBQVEsQ0FBUixFQUFXNkIsQ0FBWCxDQUFKO0FBQ1osV0FBTyxDQUFDMkQsQ0FBRCxJQUFNQSxDQUFDLEtBQUssT0FBbkI7QUFDRCxHQUpNLENBQVA7QUFLRDs7QUFFRCxTQUFTb3hFLFVBQVQsQ0FBb0IxckQsRUFBcEIsRUFBd0J0Z0IsSUFBeEIsRUFBOEJpdUQsUUFBOUIsRUFBd0M7QUFDdEMsTUFBSXNjLEdBQUo7QUFBQSxNQUFTQyxHQUFUO0FBQUEsTUFBY3lCLEdBQUcsR0FBRzF4RSxLQUFLLENBQUN5RixJQUFELENBQUwsR0FBY29vQiw4Q0FBZCxHQUFxQnRkLDZDQUF6QztBQUNBLFNBQU8sWUFBVztBQUNoQixRQUFJeTlELFFBQVEsR0FBRzBELEdBQUcsQ0FBQyxJQUFELEVBQU8zckQsRUFBUCxDQUFsQjtBQUFBLFFBQ0loZCxFQUFFLEdBQUdpbEUsUUFBUSxDQUFDamxFLEVBRGxCLENBRGdCLENBSWhCO0FBQ0E7QUFDQTs7QUFDQSxRQUFJQSxFQUFFLEtBQUtpbkUsR0FBWCxFQUFnQixDQUFDQyxHQUFHLEdBQUcsQ0FBQ0QsR0FBRyxHQUFHam5FLEVBQVAsRUFBV25GLElBQVgsRUFBUCxFQUEwQm1GLEVBQTFCLENBQTZCdEQsSUFBN0IsRUFBbUNpdUQsUUFBbkM7QUFFaEJzYSxZQUFRLENBQUNqbEUsRUFBVCxHQUFja25FLEdBQWQ7QUFDRCxHQVZEO0FBV0Q7O0FBRWMseUVBQVN4cUUsSUFBVCxFQUFlaXVELFFBQWYsRUFBeUI7QUFDdEMsTUFBSTN0QyxFQUFFLEdBQUcsS0FBSzhvRCxHQUFkO0FBRUEsU0FBT2h3RSxTQUFTLENBQUNuRCxNQUFWLEdBQW1CLENBQW5CLEdBQ0Q0VSxxREFBRyxDQUFDLEtBQUsxSSxJQUFMLEVBQUQsRUFBY21lLEVBQWQsQ0FBSCxDQUFxQmhkLEVBQXJCLENBQXdCQSxFQUF4QixDQUEyQnRELElBQTNCLENBREMsR0FFRCxLQUFLUCxJQUFMLENBQVV1c0UsVUFBVSxDQUFDMXJELEVBQUQsRUFBS3RnQixJQUFMLEVBQVdpdUQsUUFBWCxDQUFwQixDQUZOO0FBR0QsQzs7Ozs7Ozs7Ozs7O0FDL0JEO0FBQUEsU0FBU2llLGNBQVQsQ0FBd0I1ckQsRUFBeEIsRUFBNEI7QUFDMUIsU0FBTyxZQUFXO0FBQ2hCLFFBQUloSCxNQUFNLEdBQUcsS0FBS2hhLFVBQWxCOztBQUNBLFNBQUssSUFBSXJJLENBQVQsSUFBYyxLQUFLcXhFLFlBQW5CO0FBQWlDLFVBQUksQ0FBQ3J4RSxDQUFELEtBQU9xcEIsRUFBWCxFQUFlO0FBQWhEOztBQUNBLFFBQUloSCxNQUFKLEVBQVlBLE1BQU0sQ0FBQ3c5QixXQUFQLENBQW1CLElBQW5CO0FBQ2IsR0FKRDtBQUtEOztBQUVjLDJFQUFXO0FBQ3hCLFNBQU8sS0FBS3h6QyxFQUFMLENBQVEsWUFBUixFQUFzQjRvRSxjQUFjLENBQUMsS0FBSzlDLEdBQU4sQ0FBcEMsQ0FBUDtBQUNELEM7Ozs7Ozs7Ozs7OztBQ1ZEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBLElBQUkrQyxPQUFPLEdBQUd0cEUsNERBQVEsQ0FBQyxPQUFELEVBQVUsS0FBVixFQUFpQixRQUFqQixFQUEyQixXQUEzQixDQUF0QjtBQUNBLElBQUl1cEUsVUFBVSxHQUFHLEVBQWpCO0FBRU8sSUFBSUMsT0FBTyxHQUFHLENBQWQ7QUFDQSxJQUFJN0QsU0FBUyxHQUFHLENBQWhCO0FBQ0EsSUFBSUUsUUFBUSxHQUFHLENBQWY7QUFDQSxJQUFJNEQsT0FBTyxHQUFHLENBQWQ7QUFDQSxJQUFJQyxPQUFPLEdBQUcsQ0FBZDtBQUNBLElBQUk1RCxNQUFNLEdBQUcsQ0FBYjtBQUNBLElBQUlDLEtBQUssR0FBRyxDQUFaO0FBRVEseUVBQVN6bUUsSUFBVCxFQUFlbkMsSUFBZixFQUFxQnNnQixFQUFyQixFQUF5QjlYLEtBQXpCLEVBQWdDeEYsS0FBaEMsRUFBdUNtbUUsTUFBdkMsRUFBK0M7QUFDNUQsTUFBSWQsU0FBUyxHQUFHbG1FLElBQUksQ0FBQ21tRSxZQUFyQjtBQUNBLE1BQUksQ0FBQ0QsU0FBTCxFQUFnQmxtRSxJQUFJLENBQUNtbUUsWUFBTCxHQUFvQixFQUFwQixDQUFoQixLQUNLLElBQUlob0QsRUFBRSxJQUFJK25ELFNBQVYsRUFBcUI7QUFDMUI1dUQsUUFBTSxDQUFDdFgsSUFBRCxFQUFPbWUsRUFBUCxFQUFXO0FBQ2Z0Z0IsUUFBSSxFQUFFQSxJQURTO0FBRWZ3SSxTQUFLLEVBQUVBLEtBRlE7QUFFRDtBQUNkeEYsU0FBSyxFQUFFQSxLQUhRO0FBR0Q7QUFDZE0sTUFBRSxFQUFFNm9FLE9BSlc7QUFLZnZvRSxTQUFLLEVBQUV3b0UsVUFMUTtBQU1meFIsUUFBSSxFQUFFdU8sTUFBTSxDQUFDdk8sSUFORTtBQU9mNkwsU0FBSyxFQUFFMEMsTUFBTSxDQUFDMUMsS0FQQztBQVFmM3VCLFlBQVEsRUFBRXF4QixNQUFNLENBQUNyeEIsUUFSRjtBQVNma3hCLFFBQUksRUFBRUcsTUFBTSxDQUFDSCxJQVRFO0FBVWYvN0MsU0FBSyxFQUFFLElBVlE7QUFXZjFxQixTQUFLLEVBQUU4cEU7QUFYUSxHQUFYLENBQU47QUFhRDtBQUVNLFNBQVNqa0QsSUFBVCxDQUFjam1CLElBQWQsRUFBb0JtZSxFQUFwQixFQUF3QjtBQUM3QixNQUFJaW9ELFFBQVEsR0FBRzE5RCxHQUFHLENBQUMxSSxJQUFELEVBQU9tZSxFQUFQLENBQWxCO0FBQ0EsTUFBSWlvRCxRQUFRLENBQUNobUUsS0FBVCxHQUFpQjhwRSxPQUFyQixFQUE4QixNQUFNLElBQUkvdUQsS0FBSixDQUFVLDZCQUFWLENBQU47QUFDOUIsU0FBT2lyRCxRQUFQO0FBQ0Q7QUFFTSxTQUFTejlELEdBQVQsQ0FBYTNJLElBQWIsRUFBbUJtZSxFQUFuQixFQUF1QjtBQUM1QixNQUFJaW9ELFFBQVEsR0FBRzE5RCxHQUFHLENBQUMxSSxJQUFELEVBQU9tZSxFQUFQLENBQWxCO0FBQ0EsTUFBSWlvRCxRQUFRLENBQUNobUUsS0FBVCxHQUFpQitwRSxPQUFyQixFQUE4QixNQUFNLElBQUlodkQsS0FBSixDQUFVLDJCQUFWLENBQU47QUFDOUIsU0FBT2lyRCxRQUFQO0FBQ0Q7QUFFTSxTQUFTMTlELEdBQVQsQ0FBYTFJLElBQWIsRUFBbUJtZSxFQUFuQixFQUF1QjtBQUM1QixNQUFJaW9ELFFBQVEsR0FBR3BtRSxJQUFJLENBQUNtbUUsWUFBcEI7QUFDQSxNQUFJLENBQUNDLFFBQUQsSUFBYSxFQUFFQSxRQUFRLEdBQUdBLFFBQVEsQ0FBQ2pvRCxFQUFELENBQXJCLENBQWpCLEVBQTZDLE1BQU0sSUFBSWhELEtBQUosQ0FBVSxzQkFBVixDQUFOO0FBQzdDLFNBQU9pckQsUUFBUDtBQUNEOztBQUVELFNBQVM5dUQsTUFBVCxDQUFnQnRYLElBQWhCLEVBQXNCbWUsRUFBdEIsRUFBMEJrc0QsSUFBMUIsRUFBZ0M7QUFDOUIsTUFBSW5FLFNBQVMsR0FBR2xtRSxJQUFJLENBQUNtbUUsWUFBckI7QUFBQSxNQUNJMWtFLEtBREosQ0FEOEIsQ0FJOUI7QUFDQTs7QUFDQXlrRSxXQUFTLENBQUMvbkQsRUFBRCxDQUFULEdBQWdCa3NELElBQWhCO0FBQ0FBLE1BQUksQ0FBQ3YvQyxLQUFMLEdBQWFBLHNEQUFLLENBQUNzN0MsUUFBRCxFQUFXLENBQVgsRUFBY2lFLElBQUksQ0FBQzVSLElBQW5CLENBQWxCOztBQUVBLFdBQVMyTixRQUFULENBQWtCMUIsT0FBbEIsRUFBMkI7QUFDekIyRixRQUFJLENBQUNqcUUsS0FBTCxHQUFhaW1FLFNBQWI7QUFDQWdFLFFBQUksQ0FBQ3YvQyxLQUFMLENBQVdNLE9BQVgsQ0FBbUJoekIsS0FBbkIsRUFBMEJpeUUsSUFBSSxDQUFDL0YsS0FBL0IsRUFBc0MrRixJQUFJLENBQUM1UixJQUEzQyxFQUZ5QixDQUl6Qjs7QUFDQSxRQUFJNFIsSUFBSSxDQUFDL0YsS0FBTCxJQUFjSSxPQUFsQixFQUEyQnRzRSxLQUFLLENBQUNzc0UsT0FBTyxHQUFHMkYsSUFBSSxDQUFDL0YsS0FBaEIsQ0FBTDtBQUM1Qjs7QUFFRCxXQUFTbHNFLEtBQVQsQ0FBZXNzRSxPQUFmLEVBQXdCO0FBQ3RCLFFBQUk1dkUsQ0FBSixFQUFPOEMsQ0FBUCxFQUFVdEMsQ0FBVixFQUFheVQsQ0FBYixDQURzQixDQUd0Qjs7QUFDQSxRQUFJc2hFLElBQUksQ0FBQ2pxRSxLQUFMLEtBQWVpbUUsU0FBbkIsRUFBOEIsT0FBT2h1RSxJQUFJLEVBQVg7O0FBRTlCLFNBQUt2RCxDQUFMLElBQVVveEUsU0FBVixFQUFxQjtBQUNuQm45RCxPQUFDLEdBQUdtOUQsU0FBUyxDQUFDcHhFLENBQUQsQ0FBYjtBQUNBLFVBQUlpVSxDQUFDLENBQUNsTCxJQUFGLEtBQVd3c0UsSUFBSSxDQUFDeHNFLElBQXBCLEVBQTBCLFNBRlAsQ0FJbkI7QUFDQTtBQUNBOztBQUNBLFVBQUlrTCxDQUFDLENBQUMzSSxLQUFGLEtBQVkrcEUsT0FBaEIsRUFBeUIsT0FBT3ZGLHdEQUFPLENBQUN4c0UsS0FBRCxDQUFkLENBUE4sQ0FTbkI7O0FBQ0EsVUFBSTJRLENBQUMsQ0FBQzNJLEtBQUYsS0FBWWdxRSxPQUFoQixFQUF5QjtBQUN2QnJoRSxTQUFDLENBQUMzSSxLQUFGLEdBQVVxbUUsS0FBVjtBQUNBMTlELFNBQUMsQ0FBQytoQixLQUFGLENBQVF6eUIsSUFBUjtBQUNBMFEsU0FBQyxDQUFDNUgsRUFBRixDQUFLL0osSUFBTCxDQUFVLFdBQVYsRUFBdUI0SSxJQUF2QixFQUE2QkEsSUFBSSxDQUFDMEMsUUFBbEMsRUFBNENxRyxDQUFDLENBQUMxQyxLQUE5QyxFQUFxRDBDLENBQUMsQ0FBQ2xJLEtBQXZEO0FBQ0EsZUFBT3FsRSxTQUFTLENBQUNweEUsQ0FBRCxDQUFoQjtBQUNELE9BTEQsQ0FPQTtBQVBBLFdBUUssSUFBSSxDQUFDQSxDQUFELEdBQUtxcEIsRUFBVCxFQUFhO0FBQ2hCcFYsV0FBQyxDQUFDM0ksS0FBRixHQUFVcW1FLEtBQVY7QUFDQTE5RCxXQUFDLENBQUMraEIsS0FBRixDQUFRenlCLElBQVI7QUFDQTBRLFdBQUMsQ0FBQzVILEVBQUYsQ0FBSy9KLElBQUwsQ0FBVSxRQUFWLEVBQW9CNEksSUFBcEIsRUFBMEJBLElBQUksQ0FBQzBDLFFBQS9CLEVBQXlDcUcsQ0FBQyxDQUFDMUMsS0FBM0MsRUFBa0QwQyxDQUFDLENBQUNsSSxLQUFwRDtBQUNBLGlCQUFPcWxFLFNBQVMsQ0FBQ3B4RSxDQUFELENBQWhCO0FBQ0Q7QUFDRixLQTlCcUIsQ0FnQ3RCO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTh2RSw0REFBTyxDQUFDLFlBQVc7QUFDakIsVUFBSXlGLElBQUksQ0FBQ2pxRSxLQUFMLEtBQWUrcEUsT0FBbkIsRUFBNEI7QUFDMUJFLFlBQUksQ0FBQ2pxRSxLQUFMLEdBQWFncUUsT0FBYjtBQUNBQyxZQUFJLENBQUN2L0MsS0FBTCxDQUFXTSxPQUFYLENBQW1CaHZCLElBQW5CLEVBQXlCaXVFLElBQUksQ0FBQy9GLEtBQTlCLEVBQXFDK0YsSUFBSSxDQUFDNVIsSUFBMUM7QUFDQXI4RCxZQUFJLENBQUNzb0UsT0FBRCxDQUFKO0FBQ0Q7QUFDRixLQU5NLENBQVAsQ0FwQ3NCLENBNEN0QjtBQUNBOztBQUNBMkYsUUFBSSxDQUFDanFFLEtBQUwsR0FBYW1tRSxRQUFiO0FBQ0E4RCxRQUFJLENBQUNscEUsRUFBTCxDQUFRL0osSUFBUixDQUFhLE9BQWIsRUFBc0I0SSxJQUF0QixFQUE0QkEsSUFBSSxDQUFDMEMsUUFBakMsRUFBMkMybkUsSUFBSSxDQUFDaGtFLEtBQWhELEVBQXVEZ2tFLElBQUksQ0FBQ3hwRSxLQUE1RDtBQUNBLFFBQUl3cEUsSUFBSSxDQUFDanFFLEtBQUwsS0FBZW1tRSxRQUFuQixFQUE2QixPQWhEUCxDQWdEZTs7QUFDckM4RCxRQUFJLENBQUNqcUUsS0FBTCxHQUFhK3BFLE9BQWIsQ0FqRHNCLENBbUR0Qjs7QUFDQTFvRSxTQUFLLEdBQUcsSUFBSTFPLEtBQUosQ0FBVXVDLENBQUMsR0FBRyswRSxJQUFJLENBQUM1b0UsS0FBTCxDQUFXM04sTUFBekIsQ0FBUjs7QUFDQSxTQUFLZ0IsQ0FBQyxHQUFHLENBQUosRUFBTzhDLENBQUMsR0FBRyxDQUFDLENBQWpCLEVBQW9COUMsQ0FBQyxHQUFHUSxDQUF4QixFQUEyQixFQUFFUixDQUE3QixFQUFnQztBQUM5QixVQUFJaVUsQ0FBQyxHQUFHc2hFLElBQUksQ0FBQzVvRSxLQUFMLENBQVczTSxDQUFYLEVBQWNTLEtBQWQsQ0FBb0I2QixJQUFwQixDQUF5QjRJLElBQXpCLEVBQStCQSxJQUFJLENBQUMwQyxRQUFwQyxFQUE4QzJuRSxJQUFJLENBQUNoa0UsS0FBbkQsRUFBMERna0UsSUFBSSxDQUFDeHBFLEtBQS9ELENBQVIsRUFBK0U7QUFDN0VZLGFBQUssQ0FBQyxFQUFFN0osQ0FBSCxDQUFMLEdBQWFtUixDQUFiO0FBQ0Q7QUFDRjs7QUFDRHRILFNBQUssQ0FBQzNOLE1BQU4sR0FBZThELENBQUMsR0FBRyxDQUFuQjtBQUNEOztBQUVELFdBQVN3RSxJQUFULENBQWNzb0UsT0FBZCxFQUF1QjtBQUNyQixRQUFJanNFLENBQUMsR0FBR2lzRSxPQUFPLEdBQUcyRixJQUFJLENBQUMxMEIsUUFBZixHQUEwQjAwQixJQUFJLENBQUN4RCxJQUFMLENBQVV6dkUsSUFBVixDQUFlLElBQWYsRUFBcUJzdEUsT0FBTyxHQUFHMkYsSUFBSSxDQUFDMTBCLFFBQXBDLENBQTFCLElBQTJFMDBCLElBQUksQ0FBQ3YvQyxLQUFMLENBQVdNLE9BQVgsQ0FBbUIveUIsSUFBbkIsR0FBMEJneUUsSUFBSSxDQUFDanFFLEtBQUwsR0FBYW9tRSxNQUF2QyxFQUErQyxDQUExSCxDQUFSO0FBQUEsUUFDSTF4RSxDQUFDLEdBQUcsQ0FBQyxDQURUO0FBQUEsUUFFSVEsQ0FBQyxHQUFHbU0sS0FBSyxDQUFDM04sTUFGZDs7QUFJQSxXQUFPLEVBQUVnQixDQUFGLEdBQU1RLENBQWIsRUFBZ0I7QUFDZG1NLFdBQUssQ0FBQzNNLENBQUQsQ0FBTCxDQUFTc0MsSUFBVCxDQUFjNEksSUFBZCxFQUFvQnZILENBQXBCO0FBQ0QsS0FQb0IsQ0FTckI7OztBQUNBLFFBQUk0eEUsSUFBSSxDQUFDanFFLEtBQUwsS0FBZW9tRSxNQUFuQixFQUEyQjtBQUN6QjZELFVBQUksQ0FBQ2xwRSxFQUFMLENBQVEvSixJQUFSLENBQWEsS0FBYixFQUFvQjRJLElBQXBCLEVBQTBCQSxJQUFJLENBQUMwQyxRQUEvQixFQUF5QzJuRSxJQUFJLENBQUNoa0UsS0FBOUMsRUFBcURna0UsSUFBSSxDQUFDeHBFLEtBQTFEO0FBQ0F4SSxVQUFJO0FBQ0w7QUFDRjs7QUFFRCxXQUFTQSxJQUFULEdBQWdCO0FBQ2RneUUsUUFBSSxDQUFDanFFLEtBQUwsR0FBYXFtRSxLQUFiO0FBQ0E0RCxRQUFJLENBQUN2L0MsS0FBTCxDQUFXenlCLElBQVg7QUFDQSxXQUFPNnRFLFNBQVMsQ0FBQy9uRCxFQUFELENBQWhCOztBQUNBLFNBQUssSUFBSXJwQixDQUFULElBQWNveEUsU0FBZDtBQUF5QjtBQUF6QixLQUpjLENBSW1COzs7QUFDakMsV0FBT2xtRSxJQUFJLENBQUNtbUUsWUFBWjtBQUNEO0FBQ0YsQzs7Ozs7Ozs7Ozs7O0FDeEpEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRWUseUVBQVN0cEUsTUFBVCxFQUFpQjtBQUM5QixNQUFJZ0IsSUFBSSxHQUFHLEtBQUtxcEUsS0FBaEI7QUFBQSxNQUNJL29ELEVBQUUsR0FBRyxLQUFLOG9ELEdBRGQ7QUFHQSxNQUFJLE9BQU9wcUUsTUFBUCxLQUFrQixVQUF0QixFQUFrQ0EsTUFBTSxHQUFHeW1ELDZEQUFRLENBQUN6bUQsTUFBRCxDQUFqQjs7QUFFbEMsT0FBSyxJQUFJZ0osTUFBTSxHQUFHLEtBQUtpaEQsT0FBbEIsRUFBMkJyd0QsQ0FBQyxHQUFHb1AsTUFBTSxDQUFDL1IsTUFBdEMsRUFBOENnUyxTQUFTLEdBQUcsSUFBSS9TLEtBQUosQ0FBVTBELENBQVYsQ0FBMUQsRUFBd0VtQixDQUFDLEdBQUcsQ0FBakYsRUFBb0ZBLENBQUMsR0FBR25CLENBQXhGLEVBQTJGLEVBQUVtQixDQUE3RixFQUFnRztBQUM5RixTQUFLLElBQUlpSixLQUFLLEdBQUdnRixNQUFNLENBQUNqTyxDQUFELENBQWxCLEVBQXVCdEMsQ0FBQyxHQUFHdUwsS0FBSyxDQUFDL00sTUFBakMsRUFBeUNzMEQsUUFBUSxHQUFHdGlELFNBQVMsQ0FBQ2xPLENBQUQsQ0FBVCxHQUFlLElBQUk3RSxLQUFKLENBQVV1QyxDQUFWLENBQW5FLEVBQWlGMEssSUFBakYsRUFBdUYrc0QsT0FBdkYsRUFBZ0dqNEQsQ0FBQyxHQUFHLENBQXpHLEVBQTRHQSxDQUFDLEdBQUdRLENBQWhILEVBQW1ILEVBQUVSLENBQXJILEVBQXdIO0FBQ3RILFVBQUksQ0FBQ2tMLElBQUksR0FBR2EsS0FBSyxDQUFDL0wsQ0FBRCxDQUFiLE1BQXNCaTRELE9BQU8sR0FBR2x3RCxNQUFNLENBQUN6RixJQUFQLENBQVk0SSxJQUFaLEVBQWtCQSxJQUFJLENBQUMwQyxRQUF2QixFQUFpQzVOLENBQWpDLEVBQW9DK0wsS0FBcEMsQ0FBaEMsQ0FBSixFQUFpRjtBQUMvRSxZQUFJLGNBQWNiLElBQWxCLEVBQXdCK3NELE9BQU8sQ0FBQ3JxRCxRQUFSLEdBQW1CMUMsSUFBSSxDQUFDMEMsUUFBeEI7QUFDeEIwbEQsZ0JBQVEsQ0FBQ3R6RCxDQUFELENBQVIsR0FBY2k0RCxPQUFkO0FBQ0FxWixpRUFBUSxDQUFDaGUsUUFBUSxDQUFDdHpELENBQUQsQ0FBVCxFQUFjK0ksSUFBZCxFQUFvQnNnQixFQUFwQixFQUF3QnJwQixDQUF4QixFQUEyQnN6RCxRQUEzQixFQUFxQzEvQyxxREFBRyxDQUFDMUksSUFBRCxFQUFPbWUsRUFBUCxDQUF4QyxDQUFSO0FBQ0Q7QUFDRjtBQUNGOztBQUVELFNBQU8sSUFBSW1vRCxpREFBSixDQUFleGdFLFNBQWYsRUFBMEIsS0FBSytnRCxRQUEvQixFQUF5Q2hwRCxJQUF6QyxFQUErQ3NnQixFQUEvQyxDQUFQO0FBQ0QsQzs7Ozs7Ozs7Ozs7O0FDckJEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRWUseUVBQVN0aEIsTUFBVCxFQUFpQjtBQUM5QixNQUFJZ0IsSUFBSSxHQUFHLEtBQUtxcEUsS0FBaEI7QUFBQSxNQUNJL29ELEVBQUUsR0FBRyxLQUFLOG9ELEdBRGQ7QUFHQSxNQUFJLE9BQU9wcUUsTUFBUCxLQUFrQixVQUF0QixFQUFrQ0EsTUFBTSxHQUFHbXdELGdFQUFXLENBQUNud0QsTUFBRCxDQUFwQjs7QUFFbEMsT0FBSyxJQUFJZ0osTUFBTSxHQUFHLEtBQUtpaEQsT0FBbEIsRUFBMkJyd0QsQ0FBQyxHQUFHb1AsTUFBTSxDQUFDL1IsTUFBdEMsRUFBOENnUyxTQUFTLEdBQUcsRUFBMUQsRUFBOEQ4Z0QsT0FBTyxHQUFHLEVBQXhFLEVBQTRFaHZELENBQUMsR0FBRyxDQUFyRixFQUF3RkEsQ0FBQyxHQUFHbkIsQ0FBNUYsRUFBK0YsRUFBRW1CLENBQWpHLEVBQW9HO0FBQ2xHLFNBQUssSUFBSWlKLEtBQUssR0FBR2dGLE1BQU0sQ0FBQ2pPLENBQUQsQ0FBbEIsRUFBdUJ0QyxDQUFDLEdBQUd1TCxLQUFLLENBQUMvTSxNQUFqQyxFQUF5Q2tNLElBQXpDLEVBQStDbEwsQ0FBQyxHQUFHLENBQXhELEVBQTJEQSxDQUFDLEdBQUdRLENBQS9ELEVBQWtFLEVBQUVSLENBQXBFLEVBQXVFO0FBQ3JFLFVBQUlrTCxJQUFJLEdBQUdhLEtBQUssQ0FBQy9MLENBQUQsQ0FBaEIsRUFBcUI7QUFDbkIsYUFBSyxJQUFJaXpDLFFBQVEsR0FBR2xyQyxNQUFNLENBQUN6RixJQUFQLENBQVk0SSxJQUFaLEVBQWtCQSxJQUFJLENBQUMwQyxRQUF2QixFQUFpQzVOLENBQWpDLEVBQW9DK0wsS0FBcEMsQ0FBZixFQUEyRGlvQyxLQUEzRCxFQUFrRWkrQixPQUFPLEdBQUdyK0QscURBQUcsQ0FBQzFJLElBQUQsRUFBT21lLEVBQVAsQ0FBL0UsRUFBMkY1aUIsQ0FBQyxHQUFHLENBQS9GLEVBQWtHb2EsQ0FBQyxHQUFHb3lCLFFBQVEsQ0FBQ2owQyxNQUFwSCxFQUE0SHlILENBQUMsR0FBR29hLENBQWhJLEVBQW1JLEVBQUVwYSxDQUFySSxFQUF3STtBQUN0SSxjQUFJdXRDLEtBQUssR0FBR2YsUUFBUSxDQUFDeHNDLENBQUQsQ0FBcEIsRUFBeUI7QUFDdkI2cUUscUVBQVEsQ0FBQ3Q5QixLQUFELEVBQVFqckMsSUFBUixFQUFjc2dCLEVBQWQsRUFBa0I1aUIsQ0FBbEIsRUFBcUJ3c0MsUUFBckIsRUFBK0JnL0IsT0FBL0IsQ0FBUjtBQUNEO0FBQ0Y7O0FBQ0RqaEUsaUJBQVMsQ0FBQy9PLElBQVYsQ0FBZWd4QyxRQUFmO0FBQ0E2ZSxlQUFPLENBQUM3dkQsSUFBUixDQUFhaUosSUFBYjtBQUNEO0FBQ0Y7QUFDRjs7QUFFRCxTQUFPLElBQUlzbUUsaURBQUosQ0FBZXhnRSxTQUFmLEVBQTBCOGdELE9BQTFCLEVBQW1DL29ELElBQW5DLEVBQXlDc2dCLEVBQXpDLENBQVA7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUN6QkQ7QUFBQTtBQUFBO0FBRUEsSUFBSWltQyxTQUFTLEdBQUdub0Qsc0RBQVMsQ0FBQ2pKLFNBQVYsQ0FBb0J3VixXQUFwQztBQUVlLDJFQUFXO0FBQ3hCLFNBQU8sSUFBSTQ3QyxTQUFKLENBQWMsS0FBSzBDLE9BQW5CLEVBQTRCLEtBQUtELFFBQWpDLENBQVA7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUNORDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVN5akIsU0FBVCxDQUFtQnpzRSxJQUFuQixFQUF5QmlFLFdBQXpCLEVBQXNDO0FBQ3BDLE1BQUlzbEUsUUFBSixFQUNJSSxRQURKLEVBRUlGLFlBRko7QUFHQSxTQUFPLFlBQVc7QUFDaEIsUUFBSUMsT0FBTyxHQUFHcm1FLDBEQUFLLENBQUMsSUFBRCxFQUFPckQsSUFBUCxDQUFuQjtBQUFBLFFBQ0l3cEUsT0FBTyxJQUFJLEtBQUtubUUsS0FBTCxDQUFXbXNELGNBQVgsQ0FBMEJ4dkQsSUFBMUIsR0FBaUNxRCwwREFBSyxDQUFDLElBQUQsRUFBT3JELElBQVAsQ0FBMUMsQ0FEWDtBQUVBLFdBQU8wcEUsT0FBTyxLQUFLRixPQUFaLEdBQXNCLElBQXRCLEdBQ0RFLE9BQU8sS0FBS0gsUUFBWixJQUF3QkMsT0FBTyxLQUFLRyxRQUFwQyxHQUErQ0YsWUFBL0MsR0FDQUEsWUFBWSxHQUFHeGxFLFdBQVcsQ0FBQ3NsRSxRQUFRLEdBQUdHLE9BQVosRUFBcUJDLFFBQVEsR0FBR0gsT0FBaEMsQ0FGaEM7QUFHRCxHQU5EO0FBT0Q7O0FBRUQsU0FBU2phLFdBQVQsQ0FBcUJ2dkQsSUFBckIsRUFBMkI7QUFDekIsU0FBTyxZQUFXO0FBQ2hCLFNBQUtxRCxLQUFMLENBQVdtc0QsY0FBWCxDQUEwQnh2RCxJQUExQjtBQUNELEdBRkQ7QUFHRDs7QUFFRCxTQUFTeXZELGFBQVQsQ0FBdUJ6dkQsSUFBdkIsRUFBNkJpRSxXQUE3QixFQUEwQzNKLE1BQTFDLEVBQWtEO0FBQ2hELE1BQUlpdkUsUUFBSjtBQUFBLE1BQ0lDLE9BQU8sR0FBR2x2RSxNQUFNLEdBQUcsRUFEdkI7QUFBQSxNQUVJbXZFLFlBRko7QUFHQSxTQUFPLFlBQVc7QUFDaEIsUUFBSUMsT0FBTyxHQUFHcm1FLDBEQUFLLENBQUMsSUFBRCxFQUFPckQsSUFBUCxDQUFuQjtBQUNBLFdBQU8wcEUsT0FBTyxLQUFLRixPQUFaLEdBQXNCLElBQXRCLEdBQ0RFLE9BQU8sS0FBS0gsUUFBWixHQUF1QkUsWUFBdkIsR0FDQUEsWUFBWSxHQUFHeGxFLFdBQVcsQ0FBQ3NsRSxRQUFRLEdBQUdHLE9BQVosRUFBcUJwdkUsTUFBckIsQ0FGaEM7QUFHRCxHQUxEO0FBTUQ7O0FBRUQsU0FBU3MxRCxhQUFULENBQXVCNXZELElBQXZCLEVBQTZCaUUsV0FBN0IsRUFBMEN2TSxLQUExQyxFQUFpRDtBQUMvQyxNQUFJNnhFLFFBQUosRUFDSUksUUFESixFQUVJRixZQUZKO0FBR0EsU0FBTyxZQUFXO0FBQ2hCLFFBQUlDLE9BQU8sR0FBR3JtRSwwREFBSyxDQUFDLElBQUQsRUFBT3JELElBQVAsQ0FBbkI7QUFBQSxRQUNJMUYsTUFBTSxHQUFHNUMsS0FBSyxDQUFDLElBQUQsQ0FEbEI7QUFBQSxRQUVJOHhFLE9BQU8sR0FBR2x2RSxNQUFNLEdBQUcsRUFGdkI7QUFHQSxRQUFJQSxNQUFNLElBQUksSUFBZCxFQUFvQmt2RSxPQUFPLEdBQUdsdkUsTUFBTSxJQUFJLEtBQUsrSSxLQUFMLENBQVdtc0QsY0FBWCxDQUEwQnh2RCxJQUExQixHQUFpQ3FELDBEQUFLLENBQUMsSUFBRCxFQUFPckQsSUFBUCxDQUExQyxDQUFoQjtBQUNwQixXQUFPMHBFLE9BQU8sS0FBS0YsT0FBWixHQUFzQixJQUF0QixHQUNERSxPQUFPLEtBQUtILFFBQVosSUFBd0JDLE9BQU8sS0FBS0csUUFBcEMsR0FBK0NGLFlBQS9DLElBQ0NFLFFBQVEsR0FBR0gsT0FBWCxFQUFvQkMsWUFBWSxHQUFHeGxFLFdBQVcsQ0FBQ3NsRSxRQUFRLEdBQUdHLE9BQVosRUFBcUJwdkUsTUFBckIsQ0FEL0MsQ0FETjtBQUdELEdBUkQ7QUFTRDs7QUFFRCxTQUFTb3lFLGdCQUFULENBQTBCcHNELEVBQTFCLEVBQThCdGdCLElBQTlCLEVBQW9DO0FBQ2xDLE1BQUl1cUUsR0FBSjtBQUFBLE1BQVNDLEdBQVQ7QUFBQSxNQUFjbUMsU0FBZDtBQUFBLE1BQXlCcGlFLEdBQUcsR0FBRyxXQUFXdkssSUFBMUM7QUFBQSxNQUFnRDBCLEtBQUssR0FBRyxTQUFTNkksR0FBakU7QUFBQSxNQUFzRWhMLE1BQXRFO0FBQ0EsU0FBTyxZQUFXO0FBQ2hCLFFBQUlncEUsUUFBUSxHQUFHejlELHFEQUFHLENBQUMsSUFBRCxFQUFPd1YsRUFBUCxDQUFsQjtBQUFBLFFBQ0loZCxFQUFFLEdBQUdpbEUsUUFBUSxDQUFDamxFLEVBRGxCO0FBQUEsUUFFSTJxRCxRQUFRLEdBQUdzYSxRQUFRLENBQUM3d0UsS0FBVCxDQUFlNlMsR0FBZixLQUF1QixJQUF2QixHQUE4QmhMLE1BQU0sS0FBS0EsTUFBTSxHQUFHZ3dELFdBQVcsQ0FBQ3Z2RCxJQUFELENBQXpCLENBQXBDLEdBQXVFMG9CLFNBRnRGLENBRGdCLENBS2hCO0FBQ0E7QUFDQTs7QUFDQSxRQUFJcGxCLEVBQUUsS0FBS2luRSxHQUFQLElBQWNvQyxTQUFTLEtBQUsxZSxRQUFoQyxFQUEwQyxDQUFDdWMsR0FBRyxHQUFHLENBQUNELEdBQUcsR0FBR2puRSxFQUFQLEVBQVduRixJQUFYLEVBQVAsRUFBMEJtRixFQUExQixDQUE2QjVCLEtBQTdCLEVBQW9DaXJFLFNBQVMsR0FBRzFlLFFBQWhEO0FBRTFDc2EsWUFBUSxDQUFDamxFLEVBQVQsR0FBY2tuRSxHQUFkO0FBQ0QsR0FYRDtBQVlEOztBQUVjLHlFQUFTeHFFLElBQVQsRUFBZXRJLEtBQWYsRUFBc0JnNEQsUUFBdEIsRUFBZ0M7QUFDN0MsTUFBSXo0RCxDQUFDLEdBQUcsQ0FBQytJLElBQUksSUFBSSxFQUFULE1BQWlCLFdBQWpCLEdBQStCNjFDLHNFQUEvQixHQUFzRDV4QyxvREFBOUQ7QUFDQSxTQUFPdk0sS0FBSyxJQUFJLElBQVQsR0FBZ0IsS0FDbEIyekUsVUFEa0IsQ0FDUHJyRSxJQURPLEVBQ0R5c0UsU0FBUyxDQUFDenNFLElBQUQsRUFBTy9JLENBQVAsQ0FEUixFQUVsQnFNLEVBRmtCLENBRWYsZUFBZXRELElBRkEsRUFFTXV2RCxXQUFXLENBQUN2dkQsSUFBRCxDQUZqQixDQUFoQixHQUdILE9BQU90SSxLQUFQLEtBQWlCLFVBQWpCLEdBQThCLEtBQzdCMnpFLFVBRDZCLENBQ2xCcnJFLElBRGtCLEVBQ1o0dkQsYUFBYSxDQUFDNXZELElBQUQsRUFBTy9JLENBQVAsRUFBVTR5RSx5REFBVSxDQUFDLElBQUQsRUFBTyxXQUFXN3BFLElBQWxCLEVBQXdCdEksS0FBeEIsQ0FBcEIsQ0FERCxFQUU3QitILElBRjZCLENBRXhCaXRFLGdCQUFnQixDQUFDLEtBQUt0RCxHQUFOLEVBQVdwcEUsSUFBWCxDQUZRLENBQTlCLEdBR0EsS0FDQ3FyRSxVQURELENBQ1lyckUsSUFEWixFQUNrQnl2RCxhQUFhLENBQUN6dkQsSUFBRCxFQUFPL0ksQ0FBUCxFQUFVUyxLQUFWLENBRC9CLEVBQ2lEZzRELFFBRGpELEVBRUNwc0QsRUFGRCxDQUVJLGVBQWV0RCxJQUZuQixFQUV5QixJQUZ6QixDQU5KO0FBU0QsQzs7Ozs7Ozs7Ozs7O0FDL0VEO0FBQUEsU0FBUzRzRSxnQkFBVCxDQUEwQjVzRSxJQUExQixFQUFnQy9JLENBQWhDLEVBQW1DeTRELFFBQW5DLEVBQTZDO0FBQzNDLFNBQU8sVUFBUzkwRCxDQUFULEVBQVk7QUFDakIsU0FBS3lJLEtBQUwsQ0FBV3NzRCxXQUFYLENBQXVCM3ZELElBQXZCLEVBQTZCL0ksQ0FBQyxDQUFDMkQsQ0FBRCxDQUE5QixFQUFtQzgwRCxRQUFuQztBQUNELEdBRkQ7QUFHRDs7QUFFRCxTQUFTMmIsVUFBVCxDQUFvQnJyRSxJQUFwQixFQUEwQnRJLEtBQTFCLEVBQWlDZzRELFFBQWpDLEVBQTJDO0FBQ3pDLE1BQUk5MEQsQ0FBSixFQUFPN0QsRUFBUDs7QUFDQSxXQUFTNk0sS0FBVCxHQUFpQjtBQUNmLFFBQUkzTSxDQUFDLEdBQUdTLEtBQUssQ0FBQ21HLEtBQU4sQ0FBWSxJQUFaLEVBQWtCekUsU0FBbEIsQ0FBUjtBQUNBLFFBQUluQyxDQUFDLEtBQUtGLEVBQVYsRUFBYzZELENBQUMsR0FBRyxDQUFDN0QsRUFBRSxHQUFHRSxDQUFOLEtBQVkyMUUsZ0JBQWdCLENBQUM1c0UsSUFBRCxFQUFPL0ksQ0FBUCxFQUFVeTRELFFBQVYsQ0FBaEM7QUFDZCxXQUFPOTBELENBQVA7QUFDRDs7QUFDRGdKLE9BQUssQ0FBQ3FtRSxNQUFOLEdBQWV2eUUsS0FBZjtBQUNBLFNBQU9rTSxLQUFQO0FBQ0Q7O0FBRWMseUVBQVM1RCxJQUFULEVBQWV0SSxLQUFmLEVBQXNCZzRELFFBQXRCLEVBQWdDO0FBQzdDLE1BQUlubEQsR0FBRyxHQUFHLFlBQVl2SyxJQUFJLElBQUksRUFBcEIsQ0FBVjtBQUNBLE1BQUk1RyxTQUFTLENBQUNuRCxNQUFWLEdBQW1CLENBQXZCLEVBQTBCLE9BQU8sQ0FBQ3NVLEdBQUcsR0FBRyxLQUFLM0csS0FBTCxDQUFXMkcsR0FBWCxDQUFQLEtBQTJCQSxHQUFHLENBQUMwL0QsTUFBdEM7QUFDMUIsTUFBSXZ5RSxLQUFLLElBQUksSUFBYixFQUFtQixPQUFPLEtBQUtrTSxLQUFMLENBQVcyRyxHQUFYLEVBQWdCLElBQWhCLENBQVA7QUFDbkIsTUFBSSxPQUFPN1MsS0FBUCxLQUFpQixVQUFyQixFQUFpQyxNQUFNLElBQUk0bEIsS0FBSixFQUFOO0FBQ2pDLFNBQU8sS0FBSzFaLEtBQUwsQ0FBVzJHLEdBQVgsRUFBZ0I4Z0UsVUFBVSxDQUFDcnJFLElBQUQsRUFBT3RJLEtBQVAsRUFBY2c0RCxRQUFRLElBQUksSUFBWixHQUFtQixFQUFuQixHQUF3QkEsUUFBdEMsQ0FBMUIsQ0FBUDtBQUNELEM7Ozs7Ozs7Ozs7OztBQ3ZCRDtBQUFBO0FBQUE7O0FBRUEsU0FBU00sWUFBVCxDQUFzQnQ0RCxLQUF0QixFQUE2QjtBQUMzQixTQUFPLFlBQVc7QUFDaEIsU0FBS3E0RCxXQUFMLEdBQW1CcjRELEtBQW5CO0FBQ0QsR0FGRDtBQUdEOztBQUVELFNBQVN1NEQsWUFBVCxDQUFzQnY0RCxLQUF0QixFQUE2QjtBQUMzQixTQUFPLFlBQVc7QUFDaEIsUUFBSTRDLE1BQU0sR0FBRzVDLEtBQUssQ0FBQyxJQUFELENBQWxCO0FBQ0EsU0FBS3E0RCxXQUFMLEdBQW1CejFELE1BQU0sSUFBSSxJQUFWLEdBQWlCLEVBQWpCLEdBQXNCQSxNQUF6QztBQUNELEdBSEQ7QUFJRDs7QUFFYyx5RUFBUzVDLEtBQVQsRUFBZ0I7QUFDN0IsU0FBTyxLQUFLa00sS0FBTCxDQUFXLE1BQVgsRUFBbUIsT0FBT2xNLEtBQVAsS0FBaUIsVUFBakIsR0FDcEJ1NEQsWUFBWSxDQUFDNFoseURBQVUsQ0FBQyxJQUFELEVBQU8sTUFBUCxFQUFlbnlFLEtBQWYsQ0FBWCxDQURRLEdBRXBCczRELFlBQVksQ0FBQ3Q0RCxLQUFLLElBQUksSUFBVCxHQUFnQixFQUFoQixHQUFxQkEsS0FBSyxHQUFHLEVBQTlCLENBRlgsQ0FBUDtBQUdELEM7Ozs7Ozs7Ozs7OztBQ25CRDtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRWUsMkVBQVc7QUFDeEIsTUFBSXNJLElBQUksR0FBRyxLQUFLcXBFLEtBQWhCO0FBQUEsTUFDSXdELEdBQUcsR0FBRyxLQUFLekQsR0FEZjtBQUFBLE1BRUkwRCxHQUFHLEdBQUd4RCxvREFBSyxFQUZmOztBQUlBLE9BQUssSUFBSXRoRSxNQUFNLEdBQUcsS0FBS2loRCxPQUFsQixFQUEyQnJ3RCxDQUFDLEdBQUdvUCxNQUFNLENBQUMvUixNQUF0QyxFQUE4QzhELENBQUMsR0FBRyxDQUF2RCxFQUEwREEsQ0FBQyxHQUFHbkIsQ0FBOUQsRUFBaUUsRUFBRW1CLENBQW5FLEVBQXNFO0FBQ3BFLFNBQUssSUFBSWlKLEtBQUssR0FBR2dGLE1BQU0sQ0FBQ2pPLENBQUQsQ0FBbEIsRUFBdUJ0QyxDQUFDLEdBQUd1TCxLQUFLLENBQUMvTSxNQUFqQyxFQUF5Q2tNLElBQXpDLEVBQStDbEwsQ0FBQyxHQUFHLENBQXhELEVBQTJEQSxDQUFDLEdBQUdRLENBQS9ELEVBQWtFLEVBQUVSLENBQXBFLEVBQXVFO0FBQ3JFLFVBQUlrTCxJQUFJLEdBQUdhLEtBQUssQ0FBQy9MLENBQUQsQ0FBaEIsRUFBcUI7QUFDbkIsWUFBSWl5RSxPQUFPLEdBQUdyK0QscURBQUcsQ0FBQzFJLElBQUQsRUFBTzBxRSxHQUFQLENBQWpCO0FBQ0F0RSxpRUFBUSxDQUFDcG1FLElBQUQsRUFBT25DLElBQVAsRUFBYThzRSxHQUFiLEVBQWtCNzFFLENBQWxCLEVBQXFCK0wsS0FBckIsRUFBNEI7QUFDbEM0M0QsY0FBSSxFQUFFc08sT0FBTyxDQUFDdE8sSUFBUixHQUFlc08sT0FBTyxDQUFDekMsS0FBdkIsR0FBK0J5QyxPQUFPLENBQUNweEIsUUFEWDtBQUVsQzJ1QixlQUFLLEVBQUUsQ0FGMkI7QUFHbEMzdUIsa0JBQVEsRUFBRW94QixPQUFPLENBQUNweEIsUUFIZ0I7QUFJbENreEIsY0FBSSxFQUFFRSxPQUFPLENBQUNGO0FBSm9CLFNBQTVCLENBQVI7QUFNRDtBQUNGO0FBQ0Y7O0FBRUQsU0FBTyxJQUFJUCxpREFBSixDQUFlemdFLE1BQWYsRUFBdUIsS0FBS2doRCxRQUE1QixFQUFzQ2hwRCxJQUF0QyxFQUE0QzhzRSxHQUE1QyxDQUFQO0FBQ0QsQzs7Ozs7Ozs7Ozs7O0FDdkJEO0FBQUE7QUFBQTtBQUFBOztBQUVBLFNBQVNDLFdBQVQsQ0FBcUJ6c0QsRUFBckIsRUFBeUJ0Z0IsSUFBekIsRUFBK0I7QUFDN0IsTUFBSWd0RSxNQUFKLEVBQVlDLE1BQVo7QUFDQSxTQUFPLFlBQVc7QUFDaEIsUUFBSTFFLFFBQVEsR0FBR3o5RCxxREFBRyxDQUFDLElBQUQsRUFBT3dWLEVBQVAsQ0FBbEI7QUFBQSxRQUNJMWMsS0FBSyxHQUFHMmtFLFFBQVEsQ0FBQzNrRSxLQURyQixDQURnQixDQUloQjtBQUNBO0FBQ0E7O0FBQ0EsUUFBSUEsS0FBSyxLQUFLb3BFLE1BQWQsRUFBc0I7QUFDcEJDLFlBQU0sR0FBR0QsTUFBTSxHQUFHcHBFLEtBQWxCOztBQUNBLFdBQUssSUFBSTNNLENBQUMsR0FBRyxDQUFSLEVBQVdRLENBQUMsR0FBR3cxRSxNQUFNLENBQUNoM0UsTUFBM0IsRUFBbUNnQixDQUFDLEdBQUdRLENBQXZDLEVBQTBDLEVBQUVSLENBQTVDLEVBQStDO0FBQzdDLFlBQUlnMkUsTUFBTSxDQUFDaDJFLENBQUQsQ0FBTixDQUFVK0ksSUFBVixLQUFtQkEsSUFBdkIsRUFBNkI7QUFDM0JpdEUsZ0JBQU0sR0FBR0EsTUFBTSxDQUFDNzNFLEtBQVAsRUFBVDtBQUNBNjNFLGdCQUFNLENBQUN6Z0MsTUFBUCxDQUFjdjFDLENBQWQsRUFBaUIsQ0FBakI7QUFDQTtBQUNEO0FBQ0Y7QUFDRjs7QUFFRHN4RSxZQUFRLENBQUMza0UsS0FBVCxHQUFpQnFwRSxNQUFqQjtBQUNELEdBbkJEO0FBb0JEOztBQUVELFNBQVNDLGFBQVQsQ0FBdUI1c0QsRUFBdkIsRUFBMkJ0Z0IsSUFBM0IsRUFBaUN0SSxLQUFqQyxFQUF3QztBQUN0QyxNQUFJczFFLE1BQUosRUFBWUMsTUFBWjtBQUNBLE1BQUksT0FBT3YxRSxLQUFQLEtBQWlCLFVBQXJCLEVBQWlDLE1BQU0sSUFBSTRsQixLQUFKLEVBQU47QUFDakMsU0FBTyxZQUFXO0FBQ2hCLFFBQUlpckQsUUFBUSxHQUFHejlELHFEQUFHLENBQUMsSUFBRCxFQUFPd1YsRUFBUCxDQUFsQjtBQUFBLFFBQ0kxYyxLQUFLLEdBQUcya0UsUUFBUSxDQUFDM2tFLEtBRHJCLENBRGdCLENBSWhCO0FBQ0E7QUFDQTs7QUFDQSxRQUFJQSxLQUFLLEtBQUtvcEUsTUFBZCxFQUFzQjtBQUNwQkMsWUFBTSxHQUFHLENBQUNELE1BQU0sR0FBR3BwRSxLQUFWLEVBQWlCeE8sS0FBakIsRUFBVDs7QUFDQSxXQUFLLElBQUl3RixDQUFDLEdBQUc7QUFBQ29GLFlBQUksRUFBRUEsSUFBUDtBQUFhdEksYUFBSyxFQUFFQTtBQUFwQixPQUFSLEVBQW9DVCxDQUFDLEdBQUcsQ0FBeEMsRUFBMkNRLENBQUMsR0FBR3cxRSxNQUFNLENBQUNoM0UsTUFBM0QsRUFBbUVnQixDQUFDLEdBQUdRLENBQXZFLEVBQTBFLEVBQUVSLENBQTVFLEVBQStFO0FBQzdFLFlBQUlnMkUsTUFBTSxDQUFDaDJFLENBQUQsQ0FBTixDQUFVK0ksSUFBVixLQUFtQkEsSUFBdkIsRUFBNkI7QUFDM0JpdEUsZ0JBQU0sQ0FBQ2gyRSxDQUFELENBQU4sR0FBWTJELENBQVo7QUFDQTtBQUNEO0FBQ0Y7O0FBQ0QsVUFBSTNELENBQUMsS0FBS1EsQ0FBVixFQUFhdzFFLE1BQU0sQ0FBQy96RSxJQUFQLENBQVkwQixDQUFaO0FBQ2Q7O0FBRUQydEUsWUFBUSxDQUFDM2tFLEtBQVQsR0FBaUJxcEUsTUFBakI7QUFDRCxHQW5CRDtBQW9CRDs7QUFFYyx5RUFBU2p0RSxJQUFULEVBQWV0SSxLQUFmLEVBQXNCO0FBQ25DLE1BQUk0b0IsRUFBRSxHQUFHLEtBQUs4b0QsR0FBZDtBQUVBcHBFLE1BQUksSUFBSSxFQUFSOztBQUVBLE1BQUk1RyxTQUFTLENBQUNuRCxNQUFWLEdBQW1CLENBQXZCLEVBQTBCO0FBQ3hCLFFBQUkyTixLQUFLLEdBQUdpSCxxREFBRyxDQUFDLEtBQUsxSSxJQUFMLEVBQUQsRUFBY21lLEVBQWQsQ0FBSCxDQUFxQjFjLEtBQWpDOztBQUNBLFNBQUssSUFBSTNNLENBQUMsR0FBRyxDQUFSLEVBQVdRLENBQUMsR0FBR21NLEtBQUssQ0FBQzNOLE1BQXJCLEVBQTZCMkUsQ0FBbEMsRUFBcUMzRCxDQUFDLEdBQUdRLENBQXpDLEVBQTRDLEVBQUVSLENBQTlDLEVBQWlEO0FBQy9DLFVBQUksQ0FBQzJELENBQUMsR0FBR2dKLEtBQUssQ0FBQzNNLENBQUQsQ0FBVixFQUFlK0ksSUFBZixLQUF3QkEsSUFBNUIsRUFBa0M7QUFDaEMsZUFBT3BGLENBQUMsQ0FBQ2xELEtBQVQ7QUFDRDtBQUNGOztBQUNELFdBQU8sSUFBUDtBQUNEOztBQUVELFNBQU8sS0FBSytILElBQUwsQ0FBVSxDQUFDL0gsS0FBSyxJQUFJLElBQVQsR0FBZ0JxMUUsV0FBaEIsR0FBOEJHLGFBQS9CLEVBQThDNXNELEVBQTlDLEVBQWtEdGdCLElBQWxELEVBQXdEdEksS0FBeEQsQ0FBVixDQUFQO0FBQ0Q7QUFFTSxTQUFTbXlFLFVBQVQsQ0FBb0J6cUUsVUFBcEIsRUFBZ0NZLElBQWhDLEVBQXNDdEksS0FBdEMsRUFBNkM7QUFDbEQsTUFBSTRvQixFQUFFLEdBQUdsaEIsVUFBVSxDQUFDZ3FFLEdBQXBCO0FBRUFocUUsWUFBVSxDQUFDSyxJQUFYLENBQWdCLFlBQVc7QUFDekIsUUFBSThvRSxRQUFRLEdBQUd6OUQscURBQUcsQ0FBQyxJQUFELEVBQU93VixFQUFQLENBQWxCO0FBQ0EsS0FBQ2lvRCxRQUFRLENBQUM3d0UsS0FBVCxLQUFtQjZ3RSxRQUFRLENBQUM3d0UsS0FBVCxHQUFpQixFQUFwQyxDQUFELEVBQTBDc0ksSUFBMUMsSUFBa0R0SSxLQUFLLENBQUNtRyxLQUFOLENBQVksSUFBWixFQUFrQnpFLFNBQWxCLENBQWxEO0FBQ0QsR0FIRDtBQUtBLFNBQU8sVUFBUytJLElBQVQsRUFBZTtBQUNwQixXQUFPMEkscURBQUcsQ0FBQzFJLElBQUQsRUFBT21lLEVBQVAsQ0FBSCxDQUFjNW9CLEtBQWQsQ0FBb0JzSSxJQUFwQixDQUFQO0FBQ0QsR0FGRDtBQUdELEM7Ozs7Ozs7Ozs7OztBQ2hGRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLElBQUltdEUsU0FBUyxHQUFHLEVBQWhCOztBQUVBLFNBQVNDLEtBQVQsR0FBaUI7QUFDZkMsb0VBQVksQ0FBQyxJQUFELENBQVo7QUFDQSxPQUFLQyxJQUFMLEdBQ0EsS0FBS0MsSUFBTCxHQUNBLEtBQUt2MkMsTUFBTCxHQUFjLElBRmQ7QUFHRDs7QUFFRCxTQUFTdzJDLFdBQVQsQ0FBcUJELElBQXJCLEVBQTJCO0FBQ3pCLE1BQUlFLEtBQUssR0FBR04sU0FBUyxDQUFDcjBFLEdBQVYsTUFBbUIsSUFBSXMwRSxLQUFKLEVBQS9CO0FBQ0FLLE9BQUssQ0FBQ0YsSUFBTixHQUFhQSxJQUFiO0FBQ0EsU0FBT0UsS0FBUDtBQUNEOztBQUVELFNBQVNDLFdBQVQsQ0FBcUJELEtBQXJCLEVBQTRCO0FBQzFCRSw4REFBWSxDQUFDRixLQUFELENBQVo7QUFDQUcsa0RBQU8sQ0FBQ3J1RSxNQUFSLENBQWVrdUUsS0FBZjtBQUNBTixXQUFTLENBQUNqMEUsSUFBVixDQUFldTBFLEtBQWY7QUFDQUosb0VBQVksQ0FBQ0ksS0FBRCxDQUFaO0FBQ0Q7O0FBRU0sU0FBU0ksV0FBVCxDQUFxQkosS0FBckIsRUFBNEI7QUFDakMsTUFBSXoyQyxNQUFNLEdBQUd5MkMsS0FBSyxDQUFDejJDLE1BQW5CO0FBQUEsTUFDSTdnQyxDQUFDLEdBQUc2Z0MsTUFBTSxDQUFDN2dDLENBRGY7QUFBQSxNQUVJdUcsQ0FBQyxHQUFHczZCLE1BQU0sQ0FBQ1YsRUFGZjtBQUFBLE1BR0l3M0MsTUFBTSxHQUFHLENBQUMzM0UsQ0FBRCxFQUFJdUcsQ0FBSixDQUhiO0FBQUEsTUFJSW95QyxRQUFRLEdBQUcyK0IsS0FBSyxDQUFDTSxDQUpyQjtBQUFBLE1BS0k3aEQsSUFBSSxHQUFHdWhELEtBQUssQ0FBQ25vRSxDQUxqQjtBQUFBLE1BTUkwb0UsWUFBWSxHQUFHLENBQUNQLEtBQUQsQ0FObkI7QUFRQUMsYUFBVyxDQUFDRCxLQUFELENBQVg7QUFFQSxNQUFJUSxJQUFJLEdBQUduL0IsUUFBWDs7QUFDQSxTQUFPbS9CLElBQUksQ0FBQ2ozQyxNQUFMLElBQ0ExL0IsSUFBSSxDQUFDd0UsR0FBTCxDQUFTM0YsQ0FBQyxHQUFHODNFLElBQUksQ0FBQ2ozQyxNQUFMLENBQVk3Z0MsQ0FBekIsSUFBOEJvRyxnREFEOUIsSUFFQWpGLElBQUksQ0FBQ3dFLEdBQUwsQ0FBU1ksQ0FBQyxHQUFHdXhFLElBQUksQ0FBQ2ozQyxNQUFMLENBQVlWLEVBQXpCLElBQStCLzVCLGdEQUZ0QyxFQUUrQztBQUM3Q3V5QyxZQUFRLEdBQUdtL0IsSUFBSSxDQUFDRixDQUFoQjtBQUNBQyxnQkFBWSxDQUFDanhELE9BQWIsQ0FBcUJreEQsSUFBckI7QUFDQVAsZUFBVyxDQUFDTyxJQUFELENBQVg7QUFDQUEsUUFBSSxHQUFHbi9CLFFBQVA7QUFDRDs7QUFFRGsvQixjQUFZLENBQUNqeEQsT0FBYixDQUFxQmt4RCxJQUFyQjtBQUNBTiw4REFBWSxDQUFDTSxJQUFELENBQVo7QUFFQSxNQUFJQyxJQUFJLEdBQUdoaUQsSUFBWDs7QUFDQSxTQUFPZ2lELElBQUksQ0FBQ2wzQyxNQUFMLElBQ0ExL0IsSUFBSSxDQUFDd0UsR0FBTCxDQUFTM0YsQ0FBQyxHQUFHKzNFLElBQUksQ0FBQ2wzQyxNQUFMLENBQVk3Z0MsQ0FBekIsSUFBOEJvRyxnREFEOUIsSUFFQWpGLElBQUksQ0FBQ3dFLEdBQUwsQ0FBU1ksQ0FBQyxHQUFHd3hFLElBQUksQ0FBQ2wzQyxNQUFMLENBQVlWLEVBQXpCLElBQStCLzVCLGdEQUZ0QyxFQUUrQztBQUM3QzJ2QixRQUFJLEdBQUdnaUQsSUFBSSxDQUFDNW9FLENBQVo7QUFDQTBvRSxnQkFBWSxDQUFDOTBFLElBQWIsQ0FBa0JnMUUsSUFBbEI7QUFDQVIsZUFBVyxDQUFDUSxJQUFELENBQVg7QUFDQUEsUUFBSSxHQUFHaGlELElBQVA7QUFDRDs7QUFFRDhoRCxjQUFZLENBQUM5MEUsSUFBYixDQUFrQmcxRSxJQUFsQjtBQUNBUCw4REFBWSxDQUFDTyxJQUFELENBQVo7QUFFQSxNQUFJQyxLQUFLLEdBQUdILFlBQVksQ0FBQy8zRSxNQUF6QjtBQUFBLE1BQ0ltNEUsSUFESjs7QUFFQSxPQUFLQSxJQUFJLEdBQUcsQ0FBWixFQUFlQSxJQUFJLEdBQUdELEtBQXRCLEVBQTZCLEVBQUVDLElBQS9CLEVBQXFDO0FBQ25DRixRQUFJLEdBQUdGLFlBQVksQ0FBQ0ksSUFBRCxDQUFuQjtBQUNBSCxRQUFJLEdBQUdELFlBQVksQ0FBQ0ksSUFBSSxHQUFHLENBQVIsQ0FBbkI7QUFDQUMsNERBQVUsQ0FBQ0gsSUFBSSxDQUFDWixJQUFOLEVBQVlXLElBQUksQ0FBQ1YsSUFBakIsRUFBdUJXLElBQUksQ0FBQ1gsSUFBNUIsRUFBa0NPLE1BQWxDLENBQVY7QUFDRDs7QUFFREcsTUFBSSxHQUFHRCxZQUFZLENBQUMsQ0FBRCxDQUFuQjtBQUNBRSxNQUFJLEdBQUdGLFlBQVksQ0FBQ0csS0FBSyxHQUFHLENBQVQsQ0FBbkI7QUFDQUQsTUFBSSxDQUFDWixJQUFMLEdBQVlnQix3REFBVSxDQUFDTCxJQUFJLENBQUNWLElBQU4sRUFBWVcsSUFBSSxDQUFDWCxJQUFqQixFQUF1QixJQUF2QixFQUE2Qk8sTUFBN0IsQ0FBdEI7QUFFQVMsOERBQVksQ0FBQ04sSUFBRCxDQUFaO0FBQ0FNLDhEQUFZLENBQUNMLElBQUQsQ0FBWjtBQUNEO0FBRU0sU0FBU00sUUFBVCxDQUFrQmpCLElBQWxCLEVBQXdCO0FBQzdCLE1BQUlwM0UsQ0FBQyxHQUFHbzNFLElBQUksQ0FBQyxDQUFELENBQVo7QUFBQSxNQUNJa0IsU0FBUyxHQUFHbEIsSUFBSSxDQUFDLENBQUQsQ0FEcEI7QUFBQSxNQUVJVSxJQUZKO0FBQUEsTUFHSUMsSUFISjtBQUFBLE1BSUlRLEdBSko7QUFBQSxNQUtJQyxHQUxKO0FBQUEsTUFNSXhzRSxJQUFJLEdBQUd5ckUsZ0RBQU8sQ0FBQ3owRSxDQU5uQjs7QUFRQSxTQUFPZ0osSUFBUCxFQUFhO0FBQ1h1c0UsT0FBRyxHQUFHRSxjQUFjLENBQUN6c0UsSUFBRCxFQUFPc3NFLFNBQVAsQ0FBZCxHQUFrQ3Q0RSxDQUF4QztBQUNBLFFBQUl1NEUsR0FBRyxHQUFHbnlFLGdEQUFWLEVBQW1CNEYsSUFBSSxHQUFHQSxJQUFJLENBQUN1NUQsQ0FBWixDQUFuQixLQUF1QztBQUNyQ2lULFNBQUcsR0FBR3g0RSxDQUFDLEdBQUcwNEUsZUFBZSxDQUFDMXNFLElBQUQsRUFBT3NzRSxTQUFQLENBQXpCOztBQUNBLFVBQUlFLEdBQUcsR0FBR3B5RSxnREFBVixFQUFtQjtBQUNqQixZQUFJLENBQUM0RixJQUFJLENBQUMyc0UsQ0FBVixFQUFhO0FBQ1hiLGNBQUksR0FBRzlyRSxJQUFQO0FBQ0E7QUFDRDs7QUFDREEsWUFBSSxHQUFHQSxJQUFJLENBQUMyc0UsQ0FBWjtBQUNELE9BTkQsTUFNTztBQUNMLFlBQUlKLEdBQUcsR0FBRyxDQUFDbnlFLGdEQUFYLEVBQW9CO0FBQ2xCMHhFLGNBQUksR0FBRzlyRSxJQUFJLENBQUM0ckUsQ0FBWjtBQUNBRyxjQUFJLEdBQUcvckUsSUFBUDtBQUNELFNBSEQsTUFHTyxJQUFJd3NFLEdBQUcsR0FBRyxDQUFDcHlFLGdEQUFYLEVBQW9CO0FBQ3pCMHhFLGNBQUksR0FBRzlyRSxJQUFQO0FBQ0ErckUsY0FBSSxHQUFHL3JFLElBQUksQ0FBQ21ELENBQVo7QUFDRCxTQUhNLE1BR0E7QUFDTDJvRSxjQUFJLEdBQUdDLElBQUksR0FBRy9yRSxJQUFkO0FBQ0Q7O0FBQ0Q7QUFDRDtBQUNGO0FBQ0Y7O0FBRUQ0c0UsMERBQVUsQ0FBQ3hCLElBQUQsQ0FBVjtBQUNBLE1BQUl5QixNQUFNLEdBQUd4QixXQUFXLENBQUNELElBQUQsQ0FBeEI7QUFDQUssa0RBQU8sQ0FBQ3p1RSxNQUFSLENBQWU4dUUsSUFBZixFQUFxQmUsTUFBckI7QUFFQSxNQUFJLENBQUNmLElBQUQsSUFBUyxDQUFDQyxJQUFkLEVBQW9COztBQUVwQixNQUFJRCxJQUFJLEtBQUtDLElBQWIsRUFBbUI7QUFDakJQLGdFQUFZLENBQUNNLElBQUQsQ0FBWjtBQUNBQyxRQUFJLEdBQUdWLFdBQVcsQ0FBQ1MsSUFBSSxDQUFDVixJQUFOLENBQWxCO0FBQ0FLLG9EQUFPLENBQUN6dUUsTUFBUixDQUFlNnZFLE1BQWYsRUFBdUJkLElBQXZCO0FBQ0FjLFVBQU0sQ0FBQzFCLElBQVAsR0FBY1ksSUFBSSxDQUFDWixJQUFMLEdBQVlnQix3REFBVSxDQUFDTCxJQUFJLENBQUNWLElBQU4sRUFBWXlCLE1BQU0sQ0FBQ3pCLElBQW5CLENBQXBDO0FBQ0FnQixnRUFBWSxDQUFDTixJQUFELENBQVo7QUFDQU0sZ0VBQVksQ0FBQ0wsSUFBRCxDQUFaO0FBQ0E7QUFDRDs7QUFFRCxNQUFJLENBQUNBLElBQUwsRUFBVztBQUFFO0FBQ1hjLFVBQU0sQ0FBQzFCLElBQVAsR0FBY2dCLHdEQUFVLENBQUNMLElBQUksQ0FBQ1YsSUFBTixFQUFZeUIsTUFBTSxDQUFDekIsSUFBbkIsQ0FBeEI7QUFDQTtBQUNELEdBckQ0QixDQXVEN0I7OztBQUNBSSw4REFBWSxDQUFDTSxJQUFELENBQVo7QUFDQU4sOERBQVksQ0FBQ08sSUFBRCxDQUFaO0FBRUEsTUFBSWUsS0FBSyxHQUFHaEIsSUFBSSxDQUFDVixJQUFqQjtBQUFBLE1BQ0l4eUMsRUFBRSxHQUFHazBDLEtBQUssQ0FBQyxDQUFELENBRGQ7QUFBQSxNQUVJajBDLEVBQUUsR0FBR2kwQyxLQUFLLENBQUMsQ0FBRCxDQUZkO0FBQUEsTUFHSWgwQyxFQUFFLEdBQUdzeUMsSUFBSSxDQUFDLENBQUQsQ0FBSixHQUFVeHlDLEVBSG5CO0FBQUEsTUFJSUcsRUFBRSxHQUFHcXlDLElBQUksQ0FBQyxDQUFELENBQUosR0FBVXZ5QyxFQUpuQjtBQUFBLE1BS0lrMEMsS0FBSyxHQUFHaEIsSUFBSSxDQUFDWCxJQUxqQjtBQUFBLE1BTUlsM0MsRUFBRSxHQUFHNjRDLEtBQUssQ0FBQyxDQUFELENBQUwsR0FBV24wQyxFQU5wQjtBQUFBLE1BT0l6RSxFQUFFLEdBQUc0NEMsS0FBSyxDQUFDLENBQUQsQ0FBTCxHQUFXbDBDLEVBUHBCO0FBQUEsTUFRSXhrQyxDQUFDLEdBQUcsS0FBS3lrQyxFQUFFLEdBQUczRSxFQUFMLEdBQVU0RSxFQUFFLEdBQUc3RSxFQUFwQixDQVJSO0FBQUEsTUFTSTg0QyxFQUFFLEdBQUdsMEMsRUFBRSxHQUFHQSxFQUFMLEdBQVVDLEVBQUUsR0FBR0EsRUFUeEI7QUFBQSxNQVVJazBDLEVBQUUsR0FBRy80QyxFQUFFLEdBQUdBLEVBQUwsR0FBVUMsRUFBRSxHQUFHQSxFQVZ4QjtBQUFBLE1BV0l3M0MsTUFBTSxHQUFHLENBQUMsQ0FBQ3gzQyxFQUFFLEdBQUc2NEMsRUFBTCxHQUFVajBDLEVBQUUsR0FBR2swQyxFQUFoQixJQUFzQjU0RSxDQUF0QixHQUEwQnVrQyxFQUEzQixFQUErQixDQUFDRSxFQUFFLEdBQUdtMEMsRUFBTCxHQUFVLzRDLEVBQUUsR0FBRzg0QyxFQUFoQixJQUFzQjM0RSxDQUF0QixHQUEwQndrQyxFQUF6RCxDQVhiO0FBYUFxekMsMERBQVUsQ0FBQ0gsSUFBSSxDQUFDWixJQUFOLEVBQVkyQixLQUFaLEVBQW1CQyxLQUFuQixFQUEwQnBCLE1BQTFCLENBQVY7QUFDQWtCLFFBQU0sQ0FBQzFCLElBQVAsR0FBY2dCLHdEQUFVLENBQUNXLEtBQUQsRUFBUTFCLElBQVIsRUFBYyxJQUFkLEVBQW9CTyxNQUFwQixDQUF4QjtBQUNBSSxNQUFJLENBQUNaLElBQUwsR0FBWWdCLHdEQUFVLENBQUNmLElBQUQsRUFBTzJCLEtBQVAsRUFBYyxJQUFkLEVBQW9CcEIsTUFBcEIsQ0FBdEI7QUFDQVMsOERBQVksQ0FBQ04sSUFBRCxDQUFaO0FBQ0FNLDhEQUFZLENBQUNMLElBQUQsQ0FBWjtBQUNEOztBQUVELFNBQVNVLGNBQVQsQ0FBd0J6a0UsR0FBeEIsRUFBNkJza0UsU0FBN0IsRUFBd0M7QUFDdEMsTUFBSWxCLElBQUksR0FBR3BqRSxHQUFHLENBQUNvakUsSUFBZjtBQUFBLE1BQ0k4QixLQUFLLEdBQUc5QixJQUFJLENBQUMsQ0FBRCxDQURoQjtBQUFBLE1BRUkrQixLQUFLLEdBQUcvQixJQUFJLENBQUMsQ0FBRCxDQUZoQjtBQUFBLE1BR0lnQyxJQUFJLEdBQUdELEtBQUssR0FBR2IsU0FIbkI7QUFLQSxNQUFJLENBQUNjLElBQUwsRUFBVyxPQUFPRixLQUFQO0FBRVgsTUFBSXBCLElBQUksR0FBRzlqRSxHQUFHLENBQUM0akUsQ0FBZjtBQUNBLE1BQUksQ0FBQ0UsSUFBTCxFQUFXLE9BQU8sQ0FBQ2xpRCxRQUFSO0FBRVh3aEQsTUFBSSxHQUFHVSxJQUFJLENBQUNWLElBQVo7QUFDQSxNQUFJaUMsS0FBSyxHQUFHakMsSUFBSSxDQUFDLENBQUQsQ0FBaEI7QUFBQSxNQUNJa0MsS0FBSyxHQUFHbEMsSUFBSSxDQUFDLENBQUQsQ0FEaEI7QUFBQSxNQUVJbUMsS0FBSyxHQUFHRCxLQUFLLEdBQUdoQixTQUZwQjtBQUlBLE1BQUksQ0FBQ2lCLEtBQUwsRUFBWSxPQUFPRixLQUFQO0FBRVosTUFBSUcsRUFBRSxHQUFHSCxLQUFLLEdBQUdILEtBQWpCO0FBQUEsTUFDSU8sSUFBSSxHQUFHLElBQUlMLElBQUosR0FBVyxJQUFJRyxLQUQxQjtBQUFBLE1BRUluNkUsQ0FBQyxHQUFHbzZFLEVBQUUsR0FBR0QsS0FGYjtBQUlBLE1BQUlFLElBQUosRUFBVSxPQUFPLENBQUMsQ0FBQ3I2RSxDQUFELEdBQUsrQixJQUFJLENBQUNDLElBQUwsQ0FBVWhDLENBQUMsR0FBR0EsQ0FBSixHQUFRLElBQUlxNkUsSUFBSixJQUFZRCxFQUFFLEdBQUdBLEVBQUwsSUFBVyxDQUFDLENBQUQsR0FBS0QsS0FBaEIsSUFBeUJELEtBQXpCLEdBQWlDQyxLQUFLLEdBQUcsQ0FBekMsR0FBNkNKLEtBQTdDLEdBQXFEQyxJQUFJLEdBQUcsQ0FBeEUsQ0FBbEIsQ0FBTixJQUF1R0ssSUFBdkcsR0FBOEdQLEtBQXJIO0FBRVYsU0FBTyxDQUFDQSxLQUFLLEdBQUdHLEtBQVQsSUFBa0IsQ0FBekI7QUFDRDs7QUFFRCxTQUFTWCxlQUFULENBQXlCMWtFLEdBQXpCLEVBQThCc2tFLFNBQTlCLEVBQXlDO0FBQ3ZDLE1BQUlQLElBQUksR0FBRy9qRSxHQUFHLENBQUM3RSxDQUFmO0FBQ0EsTUFBSTRvRSxJQUFKLEVBQVUsT0FBT1UsY0FBYyxDQUFDVixJQUFELEVBQU9PLFNBQVAsQ0FBckI7QUFDVixNQUFJbEIsSUFBSSxHQUFHcGpFLEdBQUcsQ0FBQ29qRSxJQUFmO0FBQ0EsU0FBT0EsSUFBSSxDQUFDLENBQUQsQ0FBSixLQUFZa0IsU0FBWixHQUF3QmxCLElBQUksQ0FBQyxDQUFELENBQTVCLEdBQWtDeGhELFFBQXpDO0FBQ0QsQzs7Ozs7Ozs7Ozs7O0FDaE1EO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRU8sU0FBU2dqRCxVQUFULENBQW9CeEIsSUFBcEIsRUFBMEI7QUFDL0IsU0FBT3NDLDhDQUFLLENBQUN0QyxJQUFJLENBQUMva0UsS0FBTixDQUFMLEdBQW9CO0FBQ3pCK2tFLFFBQUksRUFBRUEsSUFEbUI7QUFFekJ1QyxhQUFTLEVBQUU7QUFGYyxHQUEzQjtBQUlEOztBQUVELFNBQVNDLGlCQUFULENBQTJCQyxJQUEzQixFQUFpQzFDLElBQWpDLEVBQXVDO0FBQ3JDLE1BQUlDLElBQUksR0FBR3lDLElBQUksQ0FBQ3pDLElBQWhCO0FBQUEsTUFDSTBDLEVBQUUsR0FBRzNDLElBQUksQ0FBQ3YzRSxJQURkO0FBQUEsTUFFSW02RSxFQUFFLEdBQUc1QyxJQUFJLENBQUN6M0UsS0FGZDtBQUdBLE1BQUkwM0UsSUFBSSxLQUFLMkMsRUFBYixFQUFpQkEsRUFBRSxHQUFHRCxFQUFMLEVBQVNBLEVBQUUsR0FBRzFDLElBQWQ7QUFDakIsTUFBSTJDLEVBQUosRUFBUSxPQUFPNTRFLElBQUksQ0FBQ3loQixLQUFMLENBQVdtM0QsRUFBRSxDQUFDLENBQUQsQ0FBRixHQUFRRCxFQUFFLENBQUMsQ0FBRCxDQUFyQixFQUEwQkMsRUFBRSxDQUFDLENBQUQsQ0FBRixHQUFRRCxFQUFFLENBQUMsQ0FBRCxDQUFwQyxDQUFQO0FBQ1IsTUFBSTFDLElBQUksS0FBSzBDLEVBQWIsRUFBaUJBLEVBQUUsR0FBRzNDLElBQUksQ0FBQyxDQUFELENBQVQsRUFBYzRDLEVBQUUsR0FBRzVDLElBQUksQ0FBQyxDQUFELENBQXZCLENBQWpCLEtBQ0syQyxFQUFFLEdBQUczQyxJQUFJLENBQUMsQ0FBRCxDQUFULEVBQWM0QyxFQUFFLEdBQUc1QyxJQUFJLENBQUMsQ0FBRCxDQUF2QjtBQUNMLFNBQU9oMkUsSUFBSSxDQUFDeWhCLEtBQUwsQ0FBV2szRCxFQUFFLENBQUMsQ0FBRCxDQUFGLEdBQVFDLEVBQUUsQ0FBQyxDQUFELENBQXJCLEVBQTBCQSxFQUFFLENBQUMsQ0FBRCxDQUFGLEdBQVFELEVBQUUsQ0FBQyxDQUFELENBQXBDLENBQVA7QUFDRDs7QUFFTSxTQUFTRSxpQkFBVCxDQUEyQkgsSUFBM0IsRUFBaUMxQyxJQUFqQyxFQUF1QztBQUM1QyxTQUFPQSxJQUFJLENBQUMsRUFBRUEsSUFBSSxDQUFDdjNFLElBQUwsS0FBY2k2RSxJQUFJLENBQUN6QyxJQUFyQixDQUFELENBQVg7QUFDRDtBQUVNLFNBQVM2QyxlQUFULENBQXlCSixJQUF6QixFQUErQjFDLElBQS9CLEVBQXFDO0FBQzFDLFNBQU9BLElBQUksQ0FBQyxFQUFFQSxJQUFJLENBQUN2M0UsSUFBTCxLQUFjaTZFLElBQUksQ0FBQ3pDLElBQXJCLENBQUQsQ0FBWDtBQUNEO0FBRU0sU0FBUzhDLGlCQUFULEdBQTZCO0FBQ2xDLE9BQUssSUFBSXA1RSxDQUFDLEdBQUcsQ0FBUixFQUFXUSxDQUFDLEdBQUdvNEUsOENBQUssQ0FBQzU1RSxNQUFyQixFQUE2Qis1RSxJQUE3QixFQUFtQ0YsU0FBbkMsRUFBOEMvMUUsQ0FBOUMsRUFBaURuQixDQUF0RCxFQUF5RDNCLENBQUMsR0FBR1EsQ0FBN0QsRUFBZ0UsRUFBRVIsQ0FBbEUsRUFBcUU7QUFDbkUsUUFBSSxDQUFDKzRFLElBQUksR0FBR0gsOENBQUssQ0FBQzU0RSxDQUFELENBQWIsTUFBc0IyQixDQUFDLEdBQUcsQ0FBQ2szRSxTQUFTLEdBQUdFLElBQUksQ0FBQ0YsU0FBbEIsRUFBNkI3NUUsTUFBdkQsQ0FBSixFQUFvRTtBQUNsRSxVQUFJdVMsS0FBSyxHQUFHLElBQUl0VCxLQUFKLENBQVUwRCxDQUFWLENBQVo7QUFBQSxVQUNJM0QsS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVTBELENBQVYsQ0FEWjs7QUFFQSxXQUFLbUIsQ0FBQyxHQUFHLENBQVQsRUFBWUEsQ0FBQyxHQUFHbkIsQ0FBaEIsRUFBbUIsRUFBRW1CLENBQXJCO0FBQXdCeU8sYUFBSyxDQUFDek8sQ0FBRCxDQUFMLEdBQVdBLENBQVgsRUFBYzlFLEtBQUssQ0FBQzhFLENBQUQsQ0FBTCxHQUFXZzJFLGlCQUFpQixDQUFDQyxJQUFELEVBQU9NLDhDQUFLLENBQUNSLFNBQVMsQ0FBQy8xRSxDQUFELENBQVYsQ0FBWixDQUExQztBQUF4Qjs7QUFDQXlPLFdBQUssQ0FBQzNPLElBQU4sQ0FBVyxVQUFTNUMsQ0FBVCxFQUFZOEMsQ0FBWixFQUFlO0FBQUUsZUFBTzlFLEtBQUssQ0FBQzhFLENBQUQsQ0FBTCxHQUFXOUUsS0FBSyxDQUFDZ0MsQ0FBRCxDQUF2QjtBQUE2QixPQUF6RDs7QUFDQSxXQUFLOEMsQ0FBQyxHQUFHLENBQVQsRUFBWUEsQ0FBQyxHQUFHbkIsQ0FBaEIsRUFBbUIsRUFBRW1CLENBQXJCO0FBQXdCOUUsYUFBSyxDQUFDOEUsQ0FBRCxDQUFMLEdBQVcrMUUsU0FBUyxDQUFDdG5FLEtBQUssQ0FBQ3pPLENBQUQsQ0FBTixDQUFwQjtBQUF4Qjs7QUFDQSxXQUFLQSxDQUFDLEdBQUcsQ0FBVCxFQUFZQSxDQUFDLEdBQUduQixDQUFoQixFQUFtQixFQUFFbUIsQ0FBckI7QUFBd0IrMUUsaUJBQVMsQ0FBQy8xRSxDQUFELENBQVQsR0FBZTlFLEtBQUssQ0FBQzhFLENBQUQsQ0FBcEI7QUFBeEI7QUFDRDtBQUNGO0FBQ0Y7QUFFTSxTQUFTdzJFLFNBQVQsQ0FBbUJsNEUsRUFBbkIsRUFBdUJ1eUIsRUFBdkIsRUFBMkJ0eUIsRUFBM0IsRUFBK0J1eUIsRUFBL0IsRUFBbUM7QUFDeEMsTUFBSTJsRCxNQUFNLEdBQUdYLDhDQUFLLENBQUM1NUUsTUFBbkI7QUFBQSxNQUNJdzZFLEtBREo7QUFBQSxNQUVJVCxJQUZKO0FBQUEsTUFHSXpDLElBSEo7QUFBQSxNQUlJbUQsU0FKSjtBQUFBLE1BS0laLFNBTEo7QUFBQSxNQU1JYSxVQU5KO0FBQUEsTUFPSXAyRSxLQVBKO0FBQUEsTUFRSXEyRSxNQVJKO0FBQUEsTUFTSUMsTUFUSjtBQUFBLE1BVUlsdEUsR0FWSjtBQUFBLE1BV0ltdEUsSUFYSjtBQUFBLE1BWUlDLElBWko7QUFBQSxNQWFJMzJCLEtBQUssR0FBRyxJQWJaOztBQWVBLE9BQUtxMkIsS0FBSyxHQUFHLENBQWIsRUFBZ0JBLEtBQUssR0FBR0QsTUFBeEIsRUFBZ0MsRUFBRUMsS0FBbEMsRUFBeUM7QUFDdkMsUUFBSVQsSUFBSSxHQUFHSCw4Q0FBSyxDQUFDWSxLQUFELENBQWhCLEVBQXlCO0FBQ3ZCbEQsVUFBSSxHQUFHeUMsSUFBSSxDQUFDekMsSUFBWjtBQUNBdUMsZUFBUyxHQUFHRSxJQUFJLENBQUNGLFNBQWpCO0FBQ0FZLGVBQVMsR0FBR1osU0FBUyxDQUFDNzVFLE1BQXRCLENBSHVCLENBS3ZCOztBQUNBLGFBQU95NkUsU0FBUyxFQUFoQixFQUFvQjtBQUNsQixZQUFJLENBQUNKLDhDQUFLLENBQUNSLFNBQVMsQ0FBQ1ksU0FBRCxDQUFWLENBQVYsRUFBa0M7QUFDaENaLG1CQUFTLENBQUN0akMsTUFBVixDQUFpQmtrQyxTQUFqQixFQUE0QixDQUE1QjtBQUNEO0FBQ0YsT0FWc0IsQ0FZdkI7OztBQUNBQSxlQUFTLEdBQUcsQ0FBWixFQUFlQyxVQUFVLEdBQUdiLFNBQVMsQ0FBQzc1RSxNQUF0Qzs7QUFDQSxhQUFPeTZFLFNBQVMsR0FBR0MsVUFBbkIsRUFBK0I7QUFDN0JodEUsV0FBRyxHQUFHeXNFLGVBQWUsQ0FBQ0osSUFBRCxFQUFPTSw4Q0FBSyxDQUFDUixTQUFTLENBQUNZLFNBQUQsQ0FBVixDQUFaLENBQXJCLEVBQTBESSxJQUFJLEdBQUdudEUsR0FBRyxDQUFDLENBQUQsQ0FBcEUsRUFBeUVvdEUsSUFBSSxHQUFHcHRFLEdBQUcsQ0FBQyxDQUFELENBQW5GO0FBQ0FwSixhQUFLLEdBQUc0MUUsaUJBQWlCLENBQUNILElBQUQsRUFBT00sOENBQUssQ0FBQ1IsU0FBUyxDQUFDLEVBQUVZLFNBQUYsR0FBY0MsVUFBZixDQUFWLENBQVosQ0FBekIsRUFBNkVDLE1BQU0sR0FBR3IyRSxLQUFLLENBQUMsQ0FBRCxDQUEzRixFQUFnR3MyRSxNQUFNLEdBQUd0MkUsS0FBSyxDQUFDLENBQUQsQ0FBOUc7O0FBQ0EsWUFBSWpELElBQUksQ0FBQ3dFLEdBQUwsQ0FBU2cxRSxJQUFJLEdBQUdGLE1BQWhCLElBQTBCcjBFLGdEQUExQixJQUFxQ2pGLElBQUksQ0FBQ3dFLEdBQUwsQ0FBU2kxRSxJQUFJLEdBQUdGLE1BQWhCLElBQTBCdDBFLGdEQUFuRSxFQUE0RTtBQUMxRXV6RSxtQkFBUyxDQUFDdGpDLE1BQVYsQ0FBaUJra0MsU0FBakIsRUFBNEIsQ0FBNUIsRUFBK0JKLDhDQUFLLENBQUNwM0UsSUFBTixDQUFXODNFLDhEQUFnQixDQUFDekQsSUFBRCxFQUFPNXBFLEdBQVAsRUFDdERyTSxJQUFJLENBQUN3RSxHQUFMLENBQVNnMUUsSUFBSSxHQUFHejRFLEVBQWhCLElBQXNCa0UsZ0RBQXRCLElBQWlDc3VCLEVBQUUsR0FBR2ttRCxJQUFMLEdBQVl4MEUsZ0RBQTdDLEdBQXVELENBQUNsRSxFQUFELEVBQUtmLElBQUksQ0FBQ3dFLEdBQUwsQ0FBUzgwRSxNQUFNLEdBQUd2NEUsRUFBbEIsSUFBd0JrRSxnREFBeEIsR0FBa0NzMEUsTUFBbEMsR0FBMkNobUQsRUFBaEQsQ0FBdkQsR0FDRXZ6QixJQUFJLENBQUN3RSxHQUFMLENBQVNpMUUsSUFBSSxHQUFHbG1ELEVBQWhCLElBQXNCdHVCLGdEQUF0QixJQUFpQ2pFLEVBQUUsR0FBR3c0RSxJQUFMLEdBQVl2MEUsZ0RBQTdDLEdBQXVELENBQUNqRixJQUFJLENBQUN3RSxHQUFMLENBQVMrMEUsTUFBTSxHQUFHaG1ELEVBQWxCLElBQXdCdHVCLGdEQUF4QixHQUFrQ3EwRSxNQUFsQyxHQUEyQ3Q0RSxFQUE1QyxFQUFnRHV5QixFQUFoRCxDQUF2RCxHQUNBdnpCLElBQUksQ0FBQ3dFLEdBQUwsQ0FBU2cxRSxJQUFJLEdBQUd4NEUsRUFBaEIsSUFBc0JpRSxnREFBdEIsSUFBaUN3MEUsSUFBSSxHQUFHbm1ELEVBQVAsR0FBWXJ1QixnREFBN0MsR0FBdUQsQ0FBQ2pFLEVBQUQsRUFBS2hCLElBQUksQ0FBQ3dFLEdBQUwsQ0FBUzgwRSxNQUFNLEdBQUd0NEUsRUFBbEIsSUFBd0JpRSxnREFBeEIsR0FBa0NzMEUsTUFBbEMsR0FBMkNqbUQsRUFBaEQsQ0FBdkQsR0FDQXR6QixJQUFJLENBQUN3RSxHQUFMLENBQVNpMUUsSUFBSSxHQUFHbm1ELEVBQWhCLElBQXNCcnVCLGdEQUF0QixJQUFpQ3UwRSxJQUFJLEdBQUd6NEUsRUFBUCxHQUFZa0UsZ0RBQTdDLEdBQXVELENBQUNqRixJQUFJLENBQUN3RSxHQUFMLENBQVMrMEUsTUFBTSxHQUFHam1ELEVBQWxCLElBQXdCcnVCLGdEQUF4QixHQUFrQ3EwRSxNQUFsQyxHQUEyQ3Y0RSxFQUE1QyxFQUFnRHV5QixFQUFoRCxDQUF2RCxHQUNBLElBTG9ELENBQTNCLElBS2hCLENBTGY7QUFNQSxZQUFFK2xELFVBQUY7QUFDRDtBQUNGOztBQUVELFVBQUlBLFVBQUosRUFBZ0J2MkIsS0FBSyxHQUFHLEtBQVI7QUFDakI7QUFDRixHQS9DdUMsQ0FpRHhDO0FBQ0E7OztBQUNBLE1BQUlBLEtBQUosRUFBVztBQUNULFFBQUl2MEMsRUFBSjtBQUFBLFFBQVFDLEVBQVI7QUFBQSxRQUFZMG5CLEVBQVo7QUFBQSxRQUFnQnlqRCxFQUFFLEdBQUdsbEQsUUFBckI7O0FBRUEsU0FBSzBrRCxLQUFLLEdBQUcsQ0FBUixFQUFXcjJCLEtBQUssR0FBRyxJQUF4QixFQUE4QnEyQixLQUFLLEdBQUdELE1BQXRDLEVBQThDLEVBQUVDLEtBQWhELEVBQXVEO0FBQ3JELFVBQUlULElBQUksR0FBR0gsOENBQUssQ0FBQ1ksS0FBRCxDQUFoQixFQUF5QjtBQUN2QmxELFlBQUksR0FBR3lDLElBQUksQ0FBQ3pDLElBQVo7QUFDQTFuRSxVQUFFLEdBQUcwbkUsSUFBSSxDQUFDLENBQUQsQ0FBSixHQUFVbDFFLEVBQWY7QUFDQXlOLFVBQUUsR0FBR3luRSxJQUFJLENBQUMsQ0FBRCxDQUFKLEdBQVUzaUQsRUFBZjtBQUNBNEMsVUFBRSxHQUFHM25CLEVBQUUsR0FBR0EsRUFBTCxHQUFVQyxFQUFFLEdBQUdBLEVBQXBCO0FBQ0EsWUFBSTBuQixFQUFFLEdBQUd5akQsRUFBVCxFQUFhQSxFQUFFLEdBQUd6akQsRUFBTCxFQUFTNHNCLEtBQUssR0FBRzQxQixJQUFqQjtBQUNkO0FBQ0Y7O0FBRUQsUUFBSTUxQixLQUFKLEVBQVc7QUFDVCxVQUFJN2hCLEdBQUcsR0FBRyxDQUFDbGdDLEVBQUQsRUFBS3V5QixFQUFMLENBQVY7QUFBQSxVQUFvQnNtRCxHQUFHLEdBQUcsQ0FBQzc0RSxFQUFELEVBQUt3eUIsRUFBTCxDQUExQjtBQUFBLFVBQW9Dc21ELEdBQUcsR0FBRyxDQUFDNzRFLEVBQUQsRUFBS3V5QixFQUFMLENBQTFDO0FBQUEsVUFBb0R1bUQsR0FBRyxHQUFHLENBQUM5NEUsRUFBRCxFQUFLc3lCLEVBQUwsQ0FBMUQ7QUFDQXd2QixXQUFLLENBQUMwMUIsU0FBTixDQUFnQjUyRSxJQUFoQixDQUNFbzNFLDhDQUFLLENBQUNwM0UsSUFBTixDQUFXODNFLDhEQUFnQixDQUFDekQsSUFBSSxHQUFHbnpCLEtBQUssQ0FBQ216QixJQUFkLEVBQW9CaDFDLEdBQXBCLEVBQXlCMjRDLEdBQXpCLENBQTNCLElBQTRELENBRDlELEVBRUVaLDhDQUFLLENBQUNwM0UsSUFBTixDQUFXODNFLDhEQUFnQixDQUFDekQsSUFBRCxFQUFPMkQsR0FBUCxFQUFZQyxHQUFaLENBQTNCLElBQStDLENBRmpELEVBR0ViLDhDQUFLLENBQUNwM0UsSUFBTixDQUFXODNFLDhEQUFnQixDQUFDekQsSUFBRCxFQUFPNEQsR0FBUCxFQUFZQyxHQUFaLENBQTNCLElBQStDLENBSGpELEVBSUVkLDhDQUFLLENBQUNwM0UsSUFBTixDQUFXODNFLDhEQUFnQixDQUFDekQsSUFBRCxFQUFPNkQsR0FBUCxFQUFZNzRDLEdBQVosQ0FBM0IsSUFBK0MsQ0FKakQ7QUFNRDtBQUNGLEdBekV1QyxDQTJFeEM7OztBQUNBLE9BQUtrNEMsS0FBSyxHQUFHLENBQWIsRUFBZ0JBLEtBQUssR0FBR0QsTUFBeEIsRUFBZ0MsRUFBRUMsS0FBbEMsRUFBeUM7QUFDdkMsUUFBSVQsSUFBSSxHQUFHSCw4Q0FBSyxDQUFDWSxLQUFELENBQWhCLEVBQXlCO0FBQ3ZCLFVBQUksQ0FBQ1QsSUFBSSxDQUFDRixTQUFMLENBQWU3NUUsTUFBcEIsRUFBNEI7QUFDMUIsZUFBTzQ1RSw4Q0FBSyxDQUFDWSxLQUFELENBQVo7QUFDRDtBQUNGO0FBQ0Y7QUFDRixDOzs7Ozs7Ozs7Ozs7QUM3SEQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBLElBQUlZLFVBQVUsR0FBRyxFQUFqQjtBQUVPLElBQUlDLFdBQUo7O0FBRVAsU0FBU0MsTUFBVCxHQUFrQjtBQUNoQmxFLG9FQUFZLENBQUMsSUFBRCxDQUFaO0FBQ0EsT0FBS2wzRSxDQUFMLEdBQ0EsS0FBS3VHLENBQUwsR0FDQSxLQUFLeU4sR0FBTCxHQUNBLEtBQUtvakUsSUFBTCxHQUNBLEtBQUtqM0MsRUFBTCxHQUFVLElBSlY7QUFLRDs7QUFFTSxTQUFTaTRDLFlBQVQsQ0FBc0Jwa0UsR0FBdEIsRUFBMkI7QUFDaEMsTUFBSThqRSxJQUFJLEdBQUc5akUsR0FBRyxDQUFDNGpFLENBQWY7QUFBQSxNQUNJRyxJQUFJLEdBQUcvakUsR0FBRyxDQUFDN0UsQ0FEZjtBQUdBLE1BQUksQ0FBQzJvRSxJQUFELElBQVMsQ0FBQ0MsSUFBZCxFQUFvQjtBQUVwQixNQUFJZSxLQUFLLEdBQUdoQixJQUFJLENBQUNWLElBQWpCO0FBQUEsTUFDSWlFLEtBQUssR0FBR3JuRSxHQUFHLENBQUNvakUsSUFEaEI7QUFBQSxNQUVJMkIsS0FBSyxHQUFHaEIsSUFBSSxDQUFDWCxJQUZqQjtBQUlBLE1BQUkwQixLQUFLLEtBQUtDLEtBQWQsRUFBcUI7QUFFckIsTUFBSWowQyxFQUFFLEdBQUd1MkMsS0FBSyxDQUFDLENBQUQsQ0FBZDtBQUFBLE1BQ0l0MkMsRUFBRSxHQUFHczJDLEtBQUssQ0FBQyxDQUFELENBRGQ7QUFBQSxNQUVJejJDLEVBQUUsR0FBR2swQyxLQUFLLENBQUMsQ0FBRCxDQUFMLEdBQVdoMEMsRUFGcEI7QUFBQSxNQUdJRCxFQUFFLEdBQUdpMEMsS0FBSyxDQUFDLENBQUQsQ0FBTCxHQUFXL3pDLEVBSHBCO0FBQUEsTUFJSTdFLEVBQUUsR0FBRzY0QyxLQUFLLENBQUMsQ0FBRCxDQUFMLEdBQVdqMEMsRUFKcEI7QUFBQSxNQUtJM0UsRUFBRSxHQUFHNDRDLEtBQUssQ0FBQyxDQUFELENBQUwsR0FBV2gwQyxFQUxwQjtBQU9BLE1BQUkxa0MsQ0FBQyxHQUFHLEtBQUt1a0MsRUFBRSxHQUFHekUsRUFBTCxHQUFVMEUsRUFBRSxHQUFHM0UsRUFBcEIsQ0FBUjtBQUNBLE1BQUk3L0IsQ0FBQyxJQUFJLENBQUNnZ0MsaURBQVYsRUFBb0I7QUFFcEIsTUFBSWk3QyxFQUFFLEdBQUcxMkMsRUFBRSxHQUFHQSxFQUFMLEdBQVVDLEVBQUUsR0FBR0EsRUFBeEI7QUFBQSxNQUNJbzBDLEVBQUUsR0FBRy80QyxFQUFFLEdBQUdBLEVBQUwsR0FBVUMsRUFBRSxHQUFHQSxFQUR4QjtBQUFBLE1BRUluZ0MsQ0FBQyxHQUFHLENBQUNtZ0MsRUFBRSxHQUFHbTdDLEVBQUwsR0FBVXoyQyxFQUFFLEdBQUdvMEMsRUFBaEIsSUFBc0I1NEUsQ0FGOUI7QUFBQSxNQUdJa0csQ0FBQyxHQUFHLENBQUNxK0IsRUFBRSxHQUFHcTBDLEVBQUwsR0FBVS80QyxFQUFFLEdBQUdvN0MsRUFBaEIsSUFBc0JqN0UsQ0FIOUI7QUFLQSxNQUFJd2dDLE1BQU0sR0FBR3E2QyxVQUFVLENBQUN2NEUsR0FBWCxNQUFvQixJQUFJeTRFLE1BQUosRUFBakM7QUFDQXY2QyxRQUFNLENBQUM3c0IsR0FBUCxHQUFhQSxHQUFiO0FBQ0E2c0IsUUFBTSxDQUFDdTJDLElBQVAsR0FBY2lFLEtBQWQ7QUFDQXg2QyxRQUFNLENBQUM3Z0MsQ0FBUCxHQUFXQSxDQUFDLEdBQUc4a0MsRUFBZjtBQUNBakUsUUFBTSxDQUFDdDZCLENBQVAsR0FBVyxDQUFDczZCLE1BQU0sQ0FBQ1YsRUFBUCxHQUFZNTVCLENBQUMsR0FBR3crQixFQUFqQixJQUF1QjVqQyxJQUFJLENBQUNDLElBQUwsQ0FBVXBCLENBQUMsR0FBR0EsQ0FBSixHQUFRdUcsQ0FBQyxHQUFHQSxDQUF0QixDQUFsQyxDQS9CZ0MsQ0ErQjRCOztBQUU1RHlOLEtBQUcsQ0FBQzZzQixNQUFKLEdBQWFBLE1BQWI7QUFFQSxNQUFJZzJCLE1BQU0sR0FBRyxJQUFiO0FBQUEsTUFDSTdxRCxJQUFJLEdBQUd3cUMsZ0RBQU8sQ0FBQ3h6QyxDQURuQjs7QUFHQSxTQUFPZ0osSUFBUCxFQUFhO0FBQ1gsUUFBSTYwQixNQUFNLENBQUN0NkIsQ0FBUCxHQUFXeUYsSUFBSSxDQUFDekYsQ0FBaEIsSUFBc0JzNkIsTUFBTSxDQUFDdDZCLENBQVAsS0FBYXlGLElBQUksQ0FBQ3pGLENBQWxCLElBQXVCczZCLE1BQU0sQ0FBQzdnQyxDQUFQLElBQVlnTSxJQUFJLENBQUNoTSxDQUFsRSxFQUFzRTtBQUNwRSxVQUFJZ00sSUFBSSxDQUFDdTVELENBQVQsRUFBWXY1RCxJQUFJLEdBQUdBLElBQUksQ0FBQ3U1RCxDQUFaLENBQVosS0FDSztBQUFFMU8sY0FBTSxHQUFHN3FELElBQUksQ0FBQzRyRSxDQUFkO0FBQWlCO0FBQVE7QUFDakMsS0FIRCxNQUdPO0FBQ0wsVUFBSTVyRSxJQUFJLENBQUMyc0UsQ0FBVCxFQUFZM3NFLElBQUksR0FBR0EsSUFBSSxDQUFDMnNFLENBQVosQ0FBWixLQUNLO0FBQUU5aEIsY0FBTSxHQUFHN3FELElBQVQ7QUFBZTtBQUFRO0FBQy9CO0FBQ0Y7O0FBRUR3cUMsa0RBQU8sQ0FBQ3h0QyxNQUFSLENBQWU2dEQsTUFBZixFQUF1QmgyQixNQUF2QjtBQUNBLE1BQUksQ0FBQ2cyQixNQUFMLEVBQWFza0IsV0FBVyxHQUFHdDZDLE1BQWQ7QUFDZDtBQUVNLFNBQVMyMkMsWUFBVCxDQUFzQnhqRSxHQUF0QixFQUEyQjtBQUNoQyxNQUFJNnNCLE1BQU0sR0FBRzdzQixHQUFHLENBQUM2c0IsTUFBakI7O0FBQ0EsTUFBSUEsTUFBSixFQUFZO0FBQ1YsUUFBSSxDQUFDQSxNQUFNLENBQUMrMkMsQ0FBWixFQUFldUQsV0FBVyxHQUFHdDZDLE1BQU0sQ0FBQzF4QixDQUFyQjtBQUNmcW5DLG9EQUFPLENBQUNwdEMsTUFBUixDQUFleTNCLE1BQWY7QUFDQXE2QyxjQUFVLENBQUNuNEUsSUFBWCxDQUFnQjg5QixNQUFoQjtBQUNBcTJDLHNFQUFZLENBQUNyMkMsTUFBRCxDQUFaO0FBQ0E3c0IsT0FBRyxDQUFDNnNCLE1BQUosR0FBYSxJQUFiO0FBQ0Q7QUFDRixDOzs7Ozs7Ozs7Ozs7QUM3RUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRU8sSUFBSXo2QixPQUFPLEdBQUcsSUFBZDtBQUNBLElBQUlpNkIsUUFBUSxHQUFHLEtBQWY7QUFDQSxJQUFJbzNDLE9BQUo7QUFDQSxJQUFJaUMsS0FBSjtBQUNBLElBQUlsakMsT0FBSjtBQUNBLElBQUkyakMsS0FBSjs7QUFFUCxTQUFTb0IsWUFBVCxDQUFzQnA4RSxDQUF0QixFQUF5QkMsQ0FBekIsRUFBNEI4a0IsQ0FBNUIsRUFBK0I7QUFDN0IsU0FBTyxDQUFDL2tCLENBQUMsQ0FBQyxDQUFELENBQUQsR0FBTytrQixDQUFDLENBQUMsQ0FBRCxDQUFULEtBQWlCOWtCLENBQUMsQ0FBQyxDQUFELENBQUQsR0FBT0QsQ0FBQyxDQUFDLENBQUQsQ0FBekIsSUFBZ0MsQ0FBQ0EsQ0FBQyxDQUFDLENBQUQsQ0FBRCxHQUFPQyxDQUFDLENBQUMsQ0FBRCxDQUFULEtBQWlCOGtCLENBQUMsQ0FBQyxDQUFELENBQUQsR0FBTy9rQixDQUFDLENBQUMsQ0FBRCxDQUF6QixDQUF2QztBQUNEOztBQUVELFNBQVNxOEUsYUFBVCxDQUF1QnI4RSxDQUF2QixFQUEwQkMsQ0FBMUIsRUFBNkI7QUFDM0IsU0FBT0EsQ0FBQyxDQUFDLENBQUQsQ0FBRCxHQUFPRCxDQUFDLENBQUMsQ0FBRCxDQUFSLElBQ0FDLENBQUMsQ0FBQyxDQUFELENBQUQsR0FBT0QsQ0FBQyxDQUFDLENBQUQsQ0FEZjtBQUVEOztBQUVjLFNBQVNzOEUsT0FBVCxDQUFpQkMsS0FBakIsRUFBd0I5NUUsTUFBeEIsRUFBZ0M7QUFDN0MsTUFBSXcxRSxJQUFJLEdBQUdzRSxLQUFLLENBQUNoNEUsSUFBTixDQUFXODNFLGFBQVgsRUFBMEI3NEUsR0FBMUIsRUFBWDtBQUFBLE1BQ0kzQyxDQURKO0FBQUEsTUFFSXVHLENBRko7QUFBQSxNQUdJczZCLE1BSEo7QUFLQXM1QyxPQUFLLEdBQUcsRUFBUjtBQUNBVCxPQUFLLEdBQUcsSUFBSTM2RSxLQUFKLENBQVUyOEUsS0FBSyxDQUFDNTdFLE1BQWhCLENBQVI7QUFDQTIzRSxTQUFPLEdBQUcsSUFBSWtFLHFEQUFKLEVBQVY7QUFDQW5sQyxTQUFPLEdBQUcsSUFBSW1sQyxxREFBSixFQUFWOztBQUVBLFNBQU8sSUFBUCxFQUFhO0FBQ1g5NkMsVUFBTSxHQUFHczZDLG1EQUFUOztBQUNBLFFBQUkvRCxJQUFJLEtBQUssQ0FBQ3YyQyxNQUFELElBQVd1MkMsSUFBSSxDQUFDLENBQUQsQ0FBSixHQUFVdjJDLE1BQU0sQ0FBQ3Q2QixDQUE1QixJQUFrQzZ3RSxJQUFJLENBQUMsQ0FBRCxDQUFKLEtBQVl2MkMsTUFBTSxDQUFDdDZCLENBQW5CLElBQXdCNndFLElBQUksQ0FBQyxDQUFELENBQUosR0FBVXYyQyxNQUFNLENBQUM3Z0MsQ0FBaEYsQ0FBUixFQUE2RjtBQUMzRixVQUFJbzNFLElBQUksQ0FBQyxDQUFELENBQUosS0FBWXAzRSxDQUFaLElBQWlCbzNFLElBQUksQ0FBQyxDQUFELENBQUosS0FBWTd3RSxDQUFqQyxFQUFvQztBQUNsQzh4RSwrREFBUSxDQUFDakIsSUFBRCxDQUFSO0FBQ0FwM0UsU0FBQyxHQUFHbzNFLElBQUksQ0FBQyxDQUFELENBQVIsRUFBYTd3RSxDQUFDLEdBQUc2d0UsSUFBSSxDQUFDLENBQUQsQ0FBckI7QUFDRDs7QUFDREEsVUFBSSxHQUFHc0UsS0FBSyxDQUFDLzRFLEdBQU4sRUFBUDtBQUNELEtBTkQsTUFNTyxJQUFJaytCLE1BQUosRUFBWTtBQUNqQjYyQyxnRUFBVyxDQUFDNzJDLE1BQU0sQ0FBQzdzQixHQUFSLENBQVg7QUFDRCxLQUZNLE1BRUE7QUFDTDtBQUNEO0FBQ0Y7O0FBRURrbUUsaUVBQWlCOztBQUVqQixNQUFJdDRFLE1BQUosRUFBWTtBQUNWLFFBQUlNLEVBQUUsR0FBRyxDQUFDTixNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsQ0FBVixDQUFWO0FBQUEsUUFDSTZ5QixFQUFFLEdBQUcsQ0FBQzd5QixNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsQ0FBVixDQURWO0FBQUEsUUFFSU8sRUFBRSxHQUFHLENBQUNQLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVSxDQUFWLENBRlY7QUFBQSxRQUdJOHlCLEVBQUUsR0FBRyxDQUFDOXlCLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVSxDQUFWLENBSFY7QUFJQWc2RSwyREFBUyxDQUFDMTVFLEVBQUQsRUFBS3V5QixFQUFMLEVBQVN0eUIsRUFBVCxFQUFhdXlCLEVBQWIsQ0FBVDtBQUNBMGxELDJEQUFTLENBQUNsNEUsRUFBRCxFQUFLdXlCLEVBQUwsRUFBU3R5QixFQUFULEVBQWF1eUIsRUFBYixDQUFUO0FBQ0Q7O0FBRUQsT0FBS3lsRCxLQUFMLEdBQWFBLEtBQWI7QUFDQSxPQUFLVCxLQUFMLEdBQWFBLEtBQWI7QUFFQWpDLFNBQU8sR0FDUGpoQyxPQUFPLEdBQ1AyakMsS0FBSyxHQUNMVCxLQUFLLEdBQUcsSUFIUjtBQUlEO0FBRUQrQixPQUFPLENBQUN6OEUsU0FBUixHQUFvQjtBQUNsQndWLGFBQVcsRUFBRWluRSxPQURLO0FBR2xCejFELFVBQVEsRUFBRSxvQkFBVztBQUNuQixRQUFJbTBELEtBQUssR0FBRyxLQUFLQSxLQUFqQjtBQUVBLFdBQU8sS0FBS1QsS0FBTCxDQUFXeDZFLEdBQVgsQ0FBZSxVQUFTMjZFLElBQVQsRUFBZTtBQUNuQyxVQUFJMXpELE9BQU8sR0FBRzB6RCxJQUFJLENBQUNGLFNBQUwsQ0FBZXo2RSxHQUFmLENBQW1CLFVBQVM0QixDQUFULEVBQVk7QUFBRSxlQUFPazVFLCtEQUFpQixDQUFDSCxJQUFELEVBQU9NLEtBQUssQ0FBQ3I1RSxDQUFELENBQVosQ0FBeEI7QUFBMkMsT0FBNUUsQ0FBZDtBQUNBcWxCLGFBQU8sQ0FBQ25rQixJQUFSLEdBQWU2M0UsSUFBSSxDQUFDekMsSUFBTCxDQUFVcDFFLElBQXpCO0FBQ0EsYUFBT21rQixPQUFQO0FBQ0QsS0FKTSxDQUFQO0FBS0QsR0FYaUI7QUFhbEIwMUQsV0FBUyxFQUFFLHFCQUFXO0FBQ3BCLFFBQUlBLFNBQVMsR0FBRyxFQUFoQjtBQUFBLFFBQ0kxQixLQUFLLEdBQUcsS0FBS0EsS0FEakI7QUFHQSxTQUFLVCxLQUFMLENBQVczbkUsT0FBWCxDQUFtQixVQUFTOG5FLElBQVQsRUFBZS80RSxDQUFmLEVBQWtCO0FBQ25DLFVBQUksRUFBRTJCLENBQUMsR0FBRyxDQUFDazNFLFNBQVMsR0FBR0UsSUFBSSxDQUFDRixTQUFsQixFQUE2Qjc1RSxNQUFuQyxDQUFKLEVBQWdEO0FBQ2hELFVBQUlzM0UsSUFBSSxHQUFHeUMsSUFBSSxDQUFDekMsSUFBaEI7QUFBQSxVQUNJdUMsU0FESjtBQUFBLFVBRUkvMUUsQ0FBQyxHQUFHLENBQUMsQ0FGVDtBQUFBLFVBR0luQixDQUhKO0FBQUEsVUFJSStNLEVBSko7QUFBQSxVQUtJRixFQUFFLEdBQUc2cUUsS0FBSyxDQUFDUixTQUFTLENBQUNsM0UsQ0FBQyxHQUFHLENBQUwsQ0FBVixDQUxkO0FBQUEsVUFNSWdOLEVBQUUsR0FBR0gsRUFBRSxDQUFDMVAsSUFBSCxLQUFZdzNFLElBQVosR0FBbUI5bkUsRUFBRSxDQUFDNVAsS0FBdEIsR0FBOEI0UCxFQUFFLENBQUMxUCxJQU4xQzs7QUFRQSxhQUFPLEVBQUVnRSxDQUFGLEdBQU1uQixDQUFiLEVBQWdCO0FBQ2QrTSxVQUFFLEdBQUdDLEVBQUw7QUFDQUgsVUFBRSxHQUFHNnFFLEtBQUssQ0FBQ1IsU0FBUyxDQUFDLzFFLENBQUQsQ0FBVixDQUFWO0FBQ0E2TCxVQUFFLEdBQUdILEVBQUUsQ0FBQzFQLElBQUgsS0FBWXczRSxJQUFaLEdBQW1COW5FLEVBQUUsQ0FBQzVQLEtBQXRCLEdBQThCNFAsRUFBRSxDQUFDMVAsSUFBdEM7O0FBQ0EsWUFBSTRQLEVBQUUsSUFBSUMsRUFBTixJQUFZM08sQ0FBQyxHQUFHME8sRUFBRSxDQUFDNkMsS0FBbkIsSUFBNEJ2UixDQUFDLEdBQUcyTyxFQUFFLENBQUM0QyxLQUFuQyxJQUE0Q2twRSxZQUFZLENBQUNuRSxJQUFELEVBQU81bkUsRUFBUCxFQUFXQyxFQUFYLENBQVosR0FBNkIsQ0FBN0UsRUFBZ0Y7QUFDOUVvc0UsbUJBQVMsQ0FBQzk0RSxJQUFWLENBQWUsQ0FBQ3EwRSxJQUFJLENBQUNwMUUsSUFBTixFQUFZd04sRUFBRSxDQUFDeE4sSUFBZixFQUFxQnlOLEVBQUUsQ0FBQ3pOLElBQXhCLENBQWY7QUFDRDtBQUNGO0FBQ0YsS0FsQkQ7QUFvQkEsV0FBTzY1RSxTQUFQO0FBQ0QsR0F0Q2lCO0FBd0NsQjdtRCxPQUFLLEVBQUUsaUJBQVc7QUFDaEIsV0FBTyxLQUFLbWxELEtBQUwsQ0FBVzl3RSxNQUFYLENBQWtCLFVBQVM4dEUsSUFBVCxFQUFlO0FBQ3RDLGFBQU9BLElBQUksQ0FBQ3ozRSxLQUFaO0FBQ0QsS0FGTSxFQUVKUixHQUZJLENBRUEsVUFBU2k0RSxJQUFULEVBQWU7QUFDcEIsYUFBTztBQUNMaG1FLGNBQU0sRUFBRWdtRSxJQUFJLENBQUN2M0UsSUFBTCxDQUFVb0MsSUFEYjtBQUVMeU0sY0FBTSxFQUFFMG9FLElBQUksQ0FBQ3ozRSxLQUFMLENBQVdzQztBQUZkLE9BQVA7QUFJRCxLQVBNLENBQVA7QUFRRCxHQWpEaUI7QUFtRGxCNnlCLE1BQUksRUFBRSxjQUFTNzBCLENBQVQsRUFBWXVHLENBQVosRUFBZTBNLE1BQWYsRUFBdUI7QUFDM0IsUUFBSXZGLElBQUksR0FBRyxJQUFYO0FBQUEsUUFBaUI5TSxFQUFqQjtBQUFBLFFBQXFCQyxFQUFFLEdBQUc2TSxJQUFJLENBQUNvdUUsTUFBTCxJQUFlLENBQXpDO0FBQUEsUUFBNEN4NkUsQ0FBQyxHQUFHb00sSUFBSSxDQUFDZ3NFLEtBQUwsQ0FBVzU1RSxNQUEzRDtBQUFBLFFBQW1FKzVFLElBQW5FLENBRDJCLENBRzNCOztBQUNBLFdBQU8sRUFBRUEsSUFBSSxHQUFHbnNFLElBQUksQ0FBQ2dzRSxLQUFMLENBQVc3NEUsRUFBWCxDQUFULENBQVA7QUFBaUMsVUFBSSxFQUFFQSxFQUFGLElBQVFTLENBQVosRUFBZSxPQUFPLElBQVA7QUFBaEQ7O0FBQ0EsUUFBSW9PLEVBQUUsR0FBRzFQLENBQUMsR0FBRzY1RSxJQUFJLENBQUN6QyxJQUFMLENBQVUsQ0FBVixDQUFiO0FBQUEsUUFBMkJ6bkUsRUFBRSxHQUFHcEosQ0FBQyxHQUFHc3pFLElBQUksQ0FBQ3pDLElBQUwsQ0FBVSxDQUFWLENBQXBDO0FBQUEsUUFBa0QvL0MsRUFBRSxHQUFHM25CLEVBQUUsR0FBR0EsRUFBTCxHQUFVQyxFQUFFLEdBQUdBLEVBQXRFLENBTDJCLENBTzNCOztBQUNBLE9BQUc7QUFDRGtxRSxVQUFJLEdBQUduc0UsSUFBSSxDQUFDZ3NFLEtBQUwsQ0FBVzk0RSxFQUFFLEdBQUdDLEVBQWhCLENBQVAsRUFBNEJBLEVBQUUsR0FBRyxJQUFqQztBQUNBZzVFLFVBQUksQ0FBQ0YsU0FBTCxDQUFlNW5FLE9BQWYsQ0FBdUIsVUFBUzFILENBQVQsRUFBWTtBQUNqQyxZQUFJOHNFLElBQUksR0FBR3pwRSxJQUFJLENBQUN5c0UsS0FBTCxDQUFXOXZFLENBQVgsQ0FBWDtBQUFBLFlBQTBCcEosQ0FBQyxHQUFHazJFLElBQUksQ0FBQ3YzRSxJQUFuQztBQUNBLFlBQUksQ0FBQ3FCLENBQUMsS0FBSzQ0RSxJQUFJLENBQUN6QyxJQUFYLElBQW1CLENBQUNuMkUsQ0FBckIsS0FBMkIsRUFBRUEsQ0FBQyxHQUFHazJFLElBQUksQ0FBQ3ozRSxLQUFYLENBQS9CLEVBQWtEO0FBQ2xELFlBQUlrMEIsRUFBRSxHQUFHNXpCLENBQUMsR0FBR2lCLENBQUMsQ0FBQyxDQUFELENBQWQ7QUFBQSxZQUFtQjR5QixFQUFFLEdBQUd0dEIsQ0FBQyxHQUFHdEYsQ0FBQyxDQUFDLENBQUQsQ0FBN0I7QUFBQSxZQUFrQ3E4QyxFQUFFLEdBQUcxcEIsRUFBRSxHQUFHQSxFQUFMLEdBQVVDLEVBQUUsR0FBR0EsRUFBdEQ7QUFDQSxZQUFJeXBCLEVBQUUsR0FBR2ptQixFQUFULEVBQWFBLEVBQUUsR0FBR2ltQixFQUFMLEVBQVN6OEMsRUFBRSxHQUFHSSxDQUFDLENBQUNvUixLQUFoQjtBQUNkLE9BTEQ7QUFNRCxLQVJELFFBUVN4UixFQUFFLEtBQUssSUFSaEI7O0FBVUE2TSxRQUFJLENBQUNvdUUsTUFBTCxHQUFjbDdFLEVBQWQ7QUFFQSxXQUFPcVMsTUFBTSxJQUFJLElBQVYsSUFBa0Jva0IsRUFBRSxJQUFJcGtCLE1BQU0sR0FBR0EsTUFBakMsR0FBMEM0bUUsSUFBSSxDQUFDekMsSUFBL0MsR0FBc0QsSUFBN0Q7QUFDRDtBQXhFaUIsQ0FBcEIsQzs7Ozs7Ozs7Ozs7O0FDcEVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRU8sU0FBU2UsVUFBVCxDQUFvQnY0RSxJQUFwQixFQUEwQkYsS0FBMUIsRUFBaUNxbkIsRUFBakMsRUFBcUNDLEVBQXJDLEVBQXlDO0FBQzlDLE1BQUltd0QsSUFBSSxHQUFHLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FBWDtBQUFBLE1BQ0k5a0UsS0FBSyxHQUFHOG5FLDhDQUFLLENBQUNwM0UsSUFBTixDQUFXbzBFLElBQVgsSUFBbUIsQ0FEL0I7QUFFQUEsTUFBSSxDQUFDdjNFLElBQUwsR0FBWUEsSUFBWjtBQUNBdTNFLE1BQUksQ0FBQ3ozRSxLQUFMLEdBQWFBLEtBQWI7QUFDQSxNQUFJcW5CLEVBQUosRUFBUW14RCxVQUFVLENBQUNmLElBQUQsRUFBT3YzRSxJQUFQLEVBQWFGLEtBQWIsRUFBb0JxbkIsRUFBcEIsQ0FBVjtBQUNSLE1BQUlDLEVBQUosRUFBUWt4RCxVQUFVLENBQUNmLElBQUQsRUFBT3ozRSxLQUFQLEVBQWNFLElBQWQsRUFBb0JvbkIsRUFBcEIsQ0FBVjtBQUNSMHlELGdEQUFLLENBQUM5NUUsSUFBSSxDQUFDeVMsS0FBTixDQUFMLENBQWtCc25FLFNBQWxCLENBQTRCNTJFLElBQTVCLENBQWlDc1AsS0FBakM7QUFDQXFuRSxnREFBSyxDQUFDaDZFLEtBQUssQ0FBQzJTLEtBQVAsQ0FBTCxDQUFtQnNuRSxTQUFuQixDQUE2QjUyRSxJQUE3QixDQUFrQ3NQLEtBQWxDO0FBQ0EsU0FBTzhrRSxJQUFQO0FBQ0Q7QUFFTSxTQUFTMEQsZ0JBQVQsQ0FBMEJqN0UsSUFBMUIsRUFBZ0NtbkIsRUFBaEMsRUFBb0NDLEVBQXBDLEVBQXdDO0FBQzdDLE1BQUltd0QsSUFBSSxHQUFHLENBQUNwd0QsRUFBRCxFQUFLQyxFQUFMLENBQVg7QUFDQW13RCxNQUFJLENBQUN2M0UsSUFBTCxHQUFZQSxJQUFaO0FBQ0EsU0FBT3UzRSxJQUFQO0FBQ0Q7QUFFTSxTQUFTZSxVQUFULENBQW9CZixJQUFwQixFQUEwQnYzRSxJQUExQixFQUFnQ0YsS0FBaEMsRUFBdUNpNEUsTUFBdkMsRUFBK0M7QUFDcEQsTUFBSSxDQUFDUixJQUFJLENBQUMsQ0FBRCxDQUFMLElBQVksQ0FBQ0EsSUFBSSxDQUFDLENBQUQsQ0FBckIsRUFBMEI7QUFDeEJBLFFBQUksQ0FBQyxDQUFELENBQUosR0FBVVEsTUFBVjtBQUNBUixRQUFJLENBQUN2M0UsSUFBTCxHQUFZQSxJQUFaO0FBQ0F1M0UsUUFBSSxDQUFDejNFLEtBQUwsR0FBYUEsS0FBYjtBQUNELEdBSkQsTUFJTyxJQUFJeTNFLElBQUksQ0FBQ3YzRSxJQUFMLEtBQWNGLEtBQWxCLEVBQXlCO0FBQzlCeTNFLFFBQUksQ0FBQyxDQUFELENBQUosR0FBVVEsTUFBVjtBQUNELEdBRk0sTUFFQTtBQUNMUixRQUFJLENBQUMsQ0FBRCxDQUFKLEdBQVVRLE1BQVY7QUFDRDtBQUNGLEMsQ0FFRDs7QUFDQSxTQUFTb0UsUUFBVCxDQUFrQjVFLElBQWxCLEVBQXdCajFFLEVBQXhCLEVBQTRCdXlCLEVBQTVCLEVBQWdDdHlCLEVBQWhDLEVBQW9DdXlCLEVBQXBDLEVBQXdDO0FBQ3RDLE1BQUl2MUIsQ0FBQyxHQUFHZzRFLElBQUksQ0FBQyxDQUFELENBQVo7QUFBQSxNQUNJLzNFLENBQUMsR0FBRyszRSxJQUFJLENBQUMsQ0FBRCxDQURaO0FBQUEsTUFFSXZ5QyxFQUFFLEdBQUd6bEMsQ0FBQyxDQUFDLENBQUQsQ0FGVjtBQUFBLE1BR0kwbEMsRUFBRSxHQUFHMWxDLENBQUMsQ0FBQyxDQUFELENBSFY7QUFBQSxNQUlJMmxDLEVBQUUsR0FBRzFsQyxDQUFDLENBQUMsQ0FBRCxDQUpWO0FBQUEsTUFLSTJsQyxFQUFFLEdBQUczbEMsQ0FBQyxDQUFDLENBQUQsQ0FMVjtBQUFBLE1BTUl1a0IsRUFBRSxHQUFHLENBTlQ7QUFBQSxNQU9JQyxFQUFFLEdBQUcsQ0FQVDtBQUFBLE1BUUlsVSxFQUFFLEdBQUdvMUIsRUFBRSxHQUFHRixFQVJkO0FBQUEsTUFTSWoxQixFQUFFLEdBQUdvMUIsRUFBRSxHQUFHRixFQVRkO0FBQUEsTUFVSXhqQixDQVZKO0FBWUFBLEdBQUMsR0FBR25mLEVBQUUsR0FBRzBpQyxFQUFUO0FBQ0EsTUFBSSxDQUFDbDFCLEVBQUQsSUFBTzJSLENBQUMsR0FBRyxDQUFmLEVBQWtCO0FBQ2xCQSxHQUFDLElBQUkzUixFQUFMOztBQUNBLE1BQUlBLEVBQUUsR0FBRyxDQUFULEVBQVk7QUFDVixRQUFJMlIsQ0FBQyxHQUFHc0MsRUFBUixFQUFZO0FBQ1osUUFBSXRDLENBQUMsR0FBR3VDLEVBQVIsRUFBWUEsRUFBRSxHQUFHdkMsQ0FBTDtBQUNiLEdBSEQsTUFHTyxJQUFJM1IsRUFBRSxHQUFHLENBQVQsRUFBWTtBQUNqQixRQUFJMlIsQ0FBQyxHQUFHdUMsRUFBUixFQUFZO0FBQ1osUUFBSXZDLENBQUMsR0FBR3NDLEVBQVIsRUFBWUEsRUFBRSxHQUFHdEMsQ0FBTDtBQUNiOztBQUVEQSxHQUFDLEdBQUdsZixFQUFFLEdBQUd5aUMsRUFBVDtBQUNBLE1BQUksQ0FBQ2wxQixFQUFELElBQU8yUixDQUFDLEdBQUcsQ0FBZixFQUFrQjtBQUNsQkEsR0FBQyxJQUFJM1IsRUFBTDs7QUFDQSxNQUFJQSxFQUFFLEdBQUcsQ0FBVCxFQUFZO0FBQ1YsUUFBSTJSLENBQUMsR0FBR3VDLEVBQVIsRUFBWTtBQUNaLFFBQUl2QyxDQUFDLEdBQUdzQyxFQUFSLEVBQVlBLEVBQUUsR0FBR3RDLENBQUw7QUFDYixHQUhELE1BR08sSUFBSTNSLEVBQUUsR0FBRyxDQUFULEVBQVk7QUFDakIsUUFBSTJSLENBQUMsR0FBR3NDLEVBQVIsRUFBWTtBQUNaLFFBQUl0QyxDQUFDLEdBQUd1QyxFQUFSLEVBQVlBLEVBQUUsR0FBR3ZDLENBQUw7QUFDYjs7QUFFREEsR0FBQyxHQUFHb1QsRUFBRSxHQUFHb1EsRUFBVDtBQUNBLE1BQUksQ0FBQ2wxQixFQUFELElBQU8wUixDQUFDLEdBQUcsQ0FBZixFQUFrQjtBQUNsQkEsR0FBQyxJQUFJMVIsRUFBTDs7QUFDQSxNQUFJQSxFQUFFLEdBQUcsQ0FBVCxFQUFZO0FBQ1YsUUFBSTBSLENBQUMsR0FBR3NDLEVBQVIsRUFBWTtBQUNaLFFBQUl0QyxDQUFDLEdBQUd1QyxFQUFSLEVBQVlBLEVBQUUsR0FBR3ZDLENBQUw7QUFDYixHQUhELE1BR08sSUFBSTFSLEVBQUUsR0FBRyxDQUFULEVBQVk7QUFDakIsUUFBSTBSLENBQUMsR0FBR3VDLEVBQVIsRUFBWTtBQUNaLFFBQUl2QyxDQUFDLEdBQUdzQyxFQUFSLEVBQVlBLEVBQUUsR0FBR3RDLENBQUw7QUFDYjs7QUFFREEsR0FBQyxHQUFHcVQsRUFBRSxHQUFHbVEsRUFBVDtBQUNBLE1BQUksQ0FBQ2wxQixFQUFELElBQU8wUixDQUFDLEdBQUcsQ0FBZixFQUFrQjtBQUNsQkEsR0FBQyxJQUFJMVIsRUFBTDs7QUFDQSxNQUFJQSxFQUFFLEdBQUcsQ0FBVCxFQUFZO0FBQ1YsUUFBSTBSLENBQUMsR0FBR3VDLEVBQVIsRUFBWTtBQUNaLFFBQUl2QyxDQUFDLEdBQUdzQyxFQUFSLEVBQVlBLEVBQUUsR0FBR3RDLENBQUw7QUFDYixHQUhELE1BR08sSUFBSTFSLEVBQUUsR0FBRyxDQUFULEVBQVk7QUFDakIsUUFBSTBSLENBQUMsR0FBR3NDLEVBQVIsRUFBWTtBQUNaLFFBQUl0QyxDQUFDLEdBQUd1QyxFQUFSLEVBQVlBLEVBQUUsR0FBR3ZDLENBQUw7QUFDYjs7QUFFRCxNQUFJLEVBQUVzQyxFQUFFLEdBQUcsQ0FBUCxLQUFhLEVBQUVDLEVBQUUsR0FBRyxDQUFQLENBQWpCLEVBQTRCLE9BQU8sSUFBUCxDQXpEVSxDQXlERzs7QUFFekMsTUFBSUQsRUFBRSxHQUFHLENBQVQsRUFBWXd6RCxJQUFJLENBQUMsQ0FBRCxDQUFKLEdBQVUsQ0FBQ3Z5QyxFQUFFLEdBQUdqaEIsRUFBRSxHQUFHalUsRUFBWCxFQUFlbTFCLEVBQUUsR0FBR2xoQixFQUFFLEdBQUdoVSxFQUF6QixDQUFWO0FBQ1osTUFBSWlVLEVBQUUsR0FBRyxDQUFULEVBQVl1ekQsSUFBSSxDQUFDLENBQUQsQ0FBSixHQUFVLENBQUN2eUMsRUFBRSxHQUFHaGhCLEVBQUUsR0FBR2xVLEVBQVgsRUFBZW0xQixFQUFFLEdBQUdqaEIsRUFBRSxHQUFHalUsRUFBekIsQ0FBVjtBQUNaLFNBQU8sSUFBUDtBQUNEOztBQUVELFNBQVNxc0UsV0FBVCxDQUFxQjdFLElBQXJCLEVBQTJCajFFLEVBQTNCLEVBQStCdXlCLEVBQS9CLEVBQW1DdHlCLEVBQW5DLEVBQXVDdXlCLEVBQXZDLEVBQTJDO0FBQ3pDLE1BQUkxTixFQUFFLEdBQUdtd0QsSUFBSSxDQUFDLENBQUQsQ0FBYjtBQUNBLE1BQUlud0QsRUFBSixFQUFRLE9BQU8sSUFBUDtBQUVSLE1BQUlELEVBQUUsR0FBR293RCxJQUFJLENBQUMsQ0FBRCxDQUFiO0FBQUEsTUFDSXYzRSxJQUFJLEdBQUd1M0UsSUFBSSxDQUFDdjNFLElBRGhCO0FBQUEsTUFFSUYsS0FBSyxHQUFHeTNFLElBQUksQ0FBQ3ozRSxLQUZqQjtBQUFBLE1BR0l1OEUsRUFBRSxHQUFHcjhFLElBQUksQ0FBQyxDQUFELENBSGI7QUFBQSxNQUlJczhFLEVBQUUsR0FBR3Q4RSxJQUFJLENBQUMsQ0FBRCxDQUpiO0FBQUEsTUFLSXU4RSxFQUFFLEdBQUd6OEUsS0FBSyxDQUFDLENBQUQsQ0FMZDtBQUFBLE1BTUkwOEUsRUFBRSxHQUFHMThFLEtBQUssQ0FBQyxDQUFELENBTmQ7QUFBQSxNQU9JcTNCLEVBQUUsR0FBRyxDQUFDa2xELEVBQUUsR0FBR0UsRUFBTixJQUFZLENBUHJCO0FBQUEsTUFRSW5sRCxFQUFFLEdBQUcsQ0FBQ2tsRCxFQUFFLEdBQUdFLEVBQU4sSUFBWSxDQVJyQjtBQUFBLE1BU0lDLEVBVEo7QUFBQSxNQVVJQyxFQVZKOztBQVlBLE1BQUlGLEVBQUUsS0FBS0YsRUFBWCxFQUFlO0FBQ2IsUUFBSW5sRCxFQUFFLEdBQUc3MEIsRUFBTCxJQUFXNjBCLEVBQUUsSUFBSTUwQixFQUFyQixFQUF5Qjs7QUFDekIsUUFBSTg1RSxFQUFFLEdBQUdFLEVBQVQsRUFBYTtBQUNYLFVBQUksQ0FBQ3AxRCxFQUFMLEVBQVNBLEVBQUUsR0FBRyxDQUFDZ1EsRUFBRCxFQUFLdEMsRUFBTCxDQUFMLENBQVQsS0FDSyxJQUFJMU4sRUFBRSxDQUFDLENBQUQsQ0FBRixJQUFTMk4sRUFBYixFQUFpQjtBQUN0QjFOLFFBQUUsR0FBRyxDQUFDK1AsRUFBRCxFQUFLckMsRUFBTCxDQUFMO0FBQ0QsS0FKRCxNQUlPO0FBQ0wsVUFBSSxDQUFDM04sRUFBTCxFQUFTQSxFQUFFLEdBQUcsQ0FBQ2dRLEVBQUQsRUFBS3JDLEVBQUwsQ0FBTCxDQUFULEtBQ0ssSUFBSTNOLEVBQUUsQ0FBQyxDQUFELENBQUYsR0FBUTBOLEVBQVosRUFBZ0I7QUFDckJ6TixRQUFFLEdBQUcsQ0FBQytQLEVBQUQsRUFBS3RDLEVBQUwsQ0FBTDtBQUNEO0FBQ0YsR0FYRCxNQVdPO0FBQ0w0bkQsTUFBRSxHQUFHLENBQUNKLEVBQUUsR0FBR0UsRUFBTixLQUFhQyxFQUFFLEdBQUdGLEVBQWxCLENBQUw7QUFDQUksTUFBRSxHQUFHdGxELEVBQUUsR0FBR3FsRCxFQUFFLEdBQUd0bEQsRUFBZjs7QUFDQSxRQUFJc2xELEVBQUUsR0FBRyxDQUFDLENBQU4sSUFBV0EsRUFBRSxHQUFHLENBQXBCLEVBQXVCO0FBQ3JCLFVBQUlKLEVBQUUsR0FBR0UsRUFBVCxFQUFhO0FBQ1gsWUFBSSxDQUFDcDFELEVBQUwsRUFBU0EsRUFBRSxHQUFHLENBQUMsQ0FBQzBOLEVBQUUsR0FBRzZuRCxFQUFOLElBQVlELEVBQWIsRUFBaUI1bkQsRUFBakIsQ0FBTCxDQUFULEtBQ0ssSUFBSTFOLEVBQUUsQ0FBQyxDQUFELENBQUYsSUFBUzJOLEVBQWIsRUFBaUI7QUFDdEIxTixVQUFFLEdBQUcsQ0FBQyxDQUFDME4sRUFBRSxHQUFHNG5ELEVBQU4sSUFBWUQsRUFBYixFQUFpQjNuRCxFQUFqQixDQUFMO0FBQ0QsT0FKRCxNQUlPO0FBQ0wsWUFBSSxDQUFDM04sRUFBTCxFQUFTQSxFQUFFLEdBQUcsQ0FBQyxDQUFDMk4sRUFBRSxHQUFHNG5ELEVBQU4sSUFBWUQsRUFBYixFQUFpQjNuRCxFQUFqQixDQUFMLENBQVQsS0FDSyxJQUFJM04sRUFBRSxDQUFDLENBQUQsQ0FBRixHQUFRME4sRUFBWixFQUFnQjtBQUNyQnpOLFVBQUUsR0FBRyxDQUFDLENBQUN5TixFQUFFLEdBQUc2bkQsRUFBTixJQUFZRCxFQUFiLEVBQWlCNW5ELEVBQWpCLENBQUw7QUFDRDtBQUNGLEtBVkQsTUFVTztBQUNMLFVBQUl5bkQsRUFBRSxHQUFHRSxFQUFULEVBQWE7QUFDWCxZQUFJLENBQUNyMUQsRUFBTCxFQUFTQSxFQUFFLEdBQUcsQ0FBQzdrQixFQUFELEVBQUttNkUsRUFBRSxHQUFHbjZFLEVBQUwsR0FBVW82RSxFQUFmLENBQUwsQ0FBVCxLQUNLLElBQUl2MUQsRUFBRSxDQUFDLENBQUQsQ0FBRixJQUFTNWtCLEVBQWIsRUFBaUI7QUFDdEI2a0IsVUFBRSxHQUFHLENBQUM3a0IsRUFBRCxFQUFLazZFLEVBQUUsR0FBR2w2RSxFQUFMLEdBQVVtNkUsRUFBZixDQUFMO0FBQ0QsT0FKRCxNQUlPO0FBQ0wsWUFBSSxDQUFDdjFELEVBQUwsRUFBU0EsRUFBRSxHQUFHLENBQUM1a0IsRUFBRCxFQUFLazZFLEVBQUUsR0FBR2w2RSxFQUFMLEdBQVVtNkUsRUFBZixDQUFMLENBQVQsS0FDSyxJQUFJdjFELEVBQUUsQ0FBQyxDQUFELENBQUYsR0FBUTdrQixFQUFaLEVBQWdCO0FBQ3JCOGtCLFVBQUUsR0FBRyxDQUFDOWtCLEVBQUQsRUFBS202RSxFQUFFLEdBQUduNkUsRUFBTCxHQUFVbzZFLEVBQWYsQ0FBTDtBQUNEO0FBQ0Y7QUFDRjs7QUFFRG5GLE1BQUksQ0FBQyxDQUFELENBQUosR0FBVXB3RCxFQUFWO0FBQ0Fvd0QsTUFBSSxDQUFDLENBQUQsQ0FBSixHQUFVbndELEVBQVY7QUFDQSxTQUFPLElBQVA7QUFDRDs7QUFFTSxTQUFTNDBELFNBQVQsQ0FBbUIxNUUsRUFBbkIsRUFBdUJ1eUIsRUFBdkIsRUFBMkJ0eUIsRUFBM0IsRUFBK0J1eUIsRUFBL0IsRUFBbUM7QUFDeEMsTUFBSTV6QixDQUFDLEdBQUdxNUUsOENBQUssQ0FBQ3I2RSxNQUFkO0FBQUEsTUFDSXEzRSxJQURKOztBQUdBLFNBQU9yMkUsQ0FBQyxFQUFSLEVBQVk7QUFDVixRQUFJLENBQUNrN0UsV0FBVyxDQUFDN0UsSUFBSSxHQUFHZ0QsOENBQUssQ0FBQ3I1RSxDQUFELENBQWIsRUFBa0JvQixFQUFsQixFQUFzQnV5QixFQUF0QixFQUEwQnR5QixFQUExQixFQUE4QnV5QixFQUE5QixDQUFaLElBQ0csQ0FBQ3FuRCxRQUFRLENBQUM1RSxJQUFELEVBQU9qMUUsRUFBUCxFQUFXdXlCLEVBQVgsRUFBZXR5QixFQUFmLEVBQW1CdXlCLEVBQW5CLENBRFosSUFFRyxFQUFFdnpCLElBQUksQ0FBQ3dFLEdBQUwsQ0FBU3d4RSxJQUFJLENBQUMsQ0FBRCxDQUFKLENBQVEsQ0FBUixJQUFhQSxJQUFJLENBQUMsQ0FBRCxDQUFKLENBQVEsQ0FBUixDQUF0QixJQUFvQy93RSxnREFBcEMsSUFDRWpGLElBQUksQ0FBQ3dFLEdBQUwsQ0FBU3d4RSxJQUFJLENBQUMsQ0FBRCxDQUFKLENBQVEsQ0FBUixJQUFhQSxJQUFJLENBQUMsQ0FBRCxDQUFKLENBQVEsQ0FBUixDQUF0QixJQUFvQy93RSxnREFEeEMsQ0FGUCxFQUd5RDtBQUN2RCxhQUFPK3pFLDhDQUFLLENBQUNyNUUsQ0FBRCxDQUFaO0FBQ0Q7QUFDRjtBQUNGLEM7Ozs7Ozs7Ozs7OztBQ3ZLRDtBQUFBO0FBQUEsU0FBUzY2RSxZQUFULEdBQXdCO0FBQ3RCLE9BQUszNEUsQ0FBTCxHQUFTLElBQVQsQ0FEc0IsQ0FDUDtBQUNoQjs7QUFFTSxTQUFTazBFLFlBQVQsQ0FBc0JsckUsSUFBdEIsRUFBNEI7QUFDakNBLE1BQUksQ0FBQ3lnRSxDQUFMLEdBQVM7QUFDVHpnRSxNQUFJLENBQUNvVyxDQUFMLEdBQVM7QUFDVHBXLE1BQUksQ0FBQ3U1RCxDQUFMLEdBQVM7QUFDVHY1RCxNQUFJLENBQUMyc0UsQ0FBTCxHQUFTO0FBQ1Qzc0UsTUFBSSxDQUFDNHJFLENBQUwsR0FBUztBQUNUNXJFLE1BQUksQ0FBQ21ELENBQUwsR0FBUyxJQUxULENBRGlDLENBTWxCO0FBQ2hCO0FBRUR3c0UsWUFBWSxDQUFDMzhFLFNBQWIsR0FBeUI7QUFDdkJ3VixhQUFXLEVBQUVtbkUsWUFEVTtBQUd2QjN5RSxRQUFNLEVBQUUsZ0JBQVN1ekUsS0FBVCxFQUFnQnZ3RSxJQUFoQixFQUFzQjtBQUM1QixRQUFJbVgsTUFBSixFQUFZcTVELE9BQVosRUFBcUJDLEtBQXJCOztBQUVBLFFBQUlGLEtBQUosRUFBVztBQUNUdndFLFVBQUksQ0FBQzRyRSxDQUFMLEdBQVMyRSxLQUFUO0FBQ0F2d0UsVUFBSSxDQUFDbUQsQ0FBTCxHQUFTb3RFLEtBQUssQ0FBQ3B0RSxDQUFmO0FBQ0EsVUFBSW90RSxLQUFLLENBQUNwdEUsQ0FBVixFQUFhb3RFLEtBQUssQ0FBQ3B0RSxDQUFOLENBQVF5b0UsQ0FBUixHQUFZNXJFLElBQVo7QUFDYnV3RSxXQUFLLENBQUNwdEUsQ0FBTixHQUFVbkQsSUFBVjs7QUFDQSxVQUFJdXdFLEtBQUssQ0FBQzVELENBQVYsRUFBYTtBQUNYNEQsYUFBSyxHQUFHQSxLQUFLLENBQUM1RCxDQUFkOztBQUNBLGVBQU80RCxLQUFLLENBQUNoWCxDQUFiO0FBQWdCZ1gsZUFBSyxHQUFHQSxLQUFLLENBQUNoWCxDQUFkO0FBQWhCOztBQUNBZ1gsYUFBSyxDQUFDaFgsQ0FBTixHQUFVdjVELElBQVY7QUFDRCxPQUpELE1BSU87QUFDTHV3RSxhQUFLLENBQUM1RCxDQUFOLEdBQVUzc0UsSUFBVjtBQUNEOztBQUNEbVgsWUFBTSxHQUFHbzVELEtBQVQ7QUFDRCxLQWJELE1BYU8sSUFBSSxLQUFLdjVFLENBQVQsRUFBWTtBQUNqQnU1RSxXQUFLLEdBQUdHLGFBQWEsQ0FBQyxLQUFLMTVFLENBQU4sQ0FBckI7QUFDQWdKLFVBQUksQ0FBQzRyRSxDQUFMLEdBQVMsSUFBVDtBQUNBNXJFLFVBQUksQ0FBQ21ELENBQUwsR0FBU290RSxLQUFUO0FBQ0FBLFdBQUssQ0FBQzNFLENBQU4sR0FBVTJFLEtBQUssQ0FBQ2hYLENBQU4sR0FBVXY1RCxJQUFwQjtBQUNBbVgsWUFBTSxHQUFHbzVELEtBQVQ7QUFDRCxLQU5NLE1BTUE7QUFDTHZ3RSxVQUFJLENBQUM0ckUsQ0FBTCxHQUFTNXJFLElBQUksQ0FBQ21ELENBQUwsR0FBUyxJQUFsQjtBQUNBLFdBQUtuTSxDQUFMLEdBQVNnSixJQUFUO0FBQ0FtWCxZQUFNLEdBQUcsSUFBVDtBQUNEOztBQUNEblgsUUFBSSxDQUFDdTVELENBQUwsR0FBU3Y1RCxJQUFJLENBQUMyc0UsQ0FBTCxHQUFTLElBQWxCO0FBQ0Ezc0UsUUFBSSxDQUFDeWdFLENBQUwsR0FBU3RwRCxNQUFUO0FBQ0FuWCxRQUFJLENBQUNvVyxDQUFMLEdBQVMsSUFBVDtBQUVBbTZELFNBQUssR0FBR3Z3RSxJQUFSOztBQUNBLFdBQU9tWCxNQUFNLElBQUlBLE1BQU0sQ0FBQ2YsQ0FBeEIsRUFBMkI7QUFDekJvNkQsYUFBTyxHQUFHcjVELE1BQU0sQ0FBQ3NwRCxDQUFqQjs7QUFDQSxVQUFJdHBELE1BQU0sS0FBS3E1RCxPQUFPLENBQUNqWCxDQUF2QixFQUEwQjtBQUN4QmtYLGFBQUssR0FBR0QsT0FBTyxDQUFDN0QsQ0FBaEI7O0FBQ0EsWUFBSThELEtBQUssSUFBSUEsS0FBSyxDQUFDcjZELENBQW5CLEVBQXNCO0FBQ3BCZSxnQkFBTSxDQUFDZixDQUFQLEdBQVdxNkQsS0FBSyxDQUFDcjZELENBQU4sR0FBVSxLQUFyQjtBQUNBbzZELGlCQUFPLENBQUNwNkQsQ0FBUixHQUFZLElBQVo7QUFDQW02RCxlQUFLLEdBQUdDLE9BQVI7QUFDRCxTQUpELE1BSU87QUFDTCxjQUFJRCxLQUFLLEtBQUtwNUQsTUFBTSxDQUFDdzFELENBQXJCLEVBQXdCO0FBQ3RCZ0UsOEJBQWtCLENBQUMsSUFBRCxFQUFPeDVELE1BQVAsQ0FBbEI7QUFDQW81RCxpQkFBSyxHQUFHcDVELE1BQVI7QUFDQUEsa0JBQU0sR0FBR281RCxLQUFLLENBQUM5UCxDQUFmO0FBQ0Q7O0FBQ0R0cEQsZ0JBQU0sQ0FBQ2YsQ0FBUCxHQUFXLEtBQVg7QUFDQW82RCxpQkFBTyxDQUFDcDZELENBQVIsR0FBWSxJQUFaO0FBQ0F3NkQsNkJBQW1CLENBQUMsSUFBRCxFQUFPSixPQUFQLENBQW5CO0FBQ0Q7QUFDRixPQWhCRCxNQWdCTztBQUNMQyxhQUFLLEdBQUdELE9BQU8sQ0FBQ2pYLENBQWhCOztBQUNBLFlBQUlrWCxLQUFLLElBQUlBLEtBQUssQ0FBQ3I2RCxDQUFuQixFQUFzQjtBQUNwQmUsZ0JBQU0sQ0FBQ2YsQ0FBUCxHQUFXcTZELEtBQUssQ0FBQ3I2RCxDQUFOLEdBQVUsS0FBckI7QUFDQW82RCxpQkFBTyxDQUFDcDZELENBQVIsR0FBWSxJQUFaO0FBQ0FtNkQsZUFBSyxHQUFHQyxPQUFSO0FBQ0QsU0FKRCxNQUlPO0FBQ0wsY0FBSUQsS0FBSyxLQUFLcDVELE1BQU0sQ0FBQ29pRCxDQUFyQixFQUF3QjtBQUN0QnFYLCtCQUFtQixDQUFDLElBQUQsRUFBT3o1RCxNQUFQLENBQW5CO0FBQ0FvNUQsaUJBQUssR0FBR3A1RCxNQUFSO0FBQ0FBLGtCQUFNLEdBQUdvNUQsS0FBSyxDQUFDOVAsQ0FBZjtBQUNEOztBQUNEdHBELGdCQUFNLENBQUNmLENBQVAsR0FBVyxLQUFYO0FBQ0FvNkQsaUJBQU8sQ0FBQ3A2RCxDQUFSLEdBQVksSUFBWjtBQUNBdTZELDRCQUFrQixDQUFDLElBQUQsRUFBT0gsT0FBUCxDQUFsQjtBQUNEO0FBQ0Y7O0FBQ0RyNUQsWUFBTSxHQUFHbzVELEtBQUssQ0FBQzlQLENBQWY7QUFDRDs7QUFDRCxTQUFLenBFLENBQUwsQ0FBT29mLENBQVAsR0FBVyxLQUFYO0FBQ0QsR0F6RXNCO0FBMkV2QmhaLFFBQU0sRUFBRSxnQkFBUzRDLElBQVQsRUFBZTtBQUNyQixRQUFJQSxJQUFJLENBQUNtRCxDQUFULEVBQVluRCxJQUFJLENBQUNtRCxDQUFMLENBQU95b0UsQ0FBUCxHQUFXNXJFLElBQUksQ0FBQzRyRSxDQUFoQjtBQUNaLFFBQUk1ckUsSUFBSSxDQUFDNHJFLENBQVQsRUFBWTVyRSxJQUFJLENBQUM0ckUsQ0FBTCxDQUFPem9FLENBQVAsR0FBV25ELElBQUksQ0FBQ21ELENBQWhCO0FBQ1puRCxRQUFJLENBQUNtRCxDQUFMLEdBQVNuRCxJQUFJLENBQUM0ckUsQ0FBTCxHQUFTLElBQWxCO0FBRUEsUUFBSXowRCxNQUFNLEdBQUduWCxJQUFJLENBQUN5Z0UsQ0FBbEI7QUFBQSxRQUNJb1EsT0FESjtBQUFBLFFBRUlqOUUsSUFBSSxHQUFHb00sSUFBSSxDQUFDdTVELENBRmhCO0FBQUEsUUFHSTdsRSxLQUFLLEdBQUdzTSxJQUFJLENBQUMyc0UsQ0FIakI7QUFBQSxRQUlJNWlELElBSko7QUFBQSxRQUtJclgsR0FMSjtBQU9BLFFBQUksQ0FBQzllLElBQUwsRUFBV20yQixJQUFJLEdBQUdyMkIsS0FBUCxDQUFYLEtBQ0ssSUFBSSxDQUFDQSxLQUFMLEVBQVlxMkIsSUFBSSxHQUFHbjJCLElBQVAsQ0FBWixLQUNBbTJCLElBQUksR0FBRzJtRCxhQUFhLENBQUNoOUUsS0FBRCxDQUFwQjs7QUFFTCxRQUFJeWpCLE1BQUosRUFBWTtBQUNWLFVBQUlBLE1BQU0sQ0FBQ29pRCxDQUFQLEtBQWF2NUQsSUFBakIsRUFBdUJtWCxNQUFNLENBQUNvaUQsQ0FBUCxHQUFXeHZDLElBQVgsQ0FBdkIsS0FDSzVTLE1BQU0sQ0FBQ3cxRCxDQUFQLEdBQVc1aUQsSUFBWDtBQUNOLEtBSEQsTUFHTztBQUNMLFdBQUsveUIsQ0FBTCxHQUFTK3lCLElBQVQ7QUFDRDs7QUFFRCxRQUFJbjJCLElBQUksSUFBSUYsS0FBWixFQUFtQjtBQUNqQmdmLFNBQUcsR0FBR3FYLElBQUksQ0FBQzNULENBQVg7QUFDQTJULFVBQUksQ0FBQzNULENBQUwsR0FBU3BXLElBQUksQ0FBQ29XLENBQWQ7QUFDQTJULFVBQUksQ0FBQ3d2QyxDQUFMLEdBQVMzbEUsSUFBVDtBQUNBQSxVQUFJLENBQUM2c0UsQ0FBTCxHQUFTMTJDLElBQVQ7O0FBQ0EsVUFBSUEsSUFBSSxLQUFLcjJCLEtBQWIsRUFBb0I7QUFDbEJ5akIsY0FBTSxHQUFHNFMsSUFBSSxDQUFDMDJDLENBQWQ7QUFDQTEyQyxZQUFJLENBQUMwMkMsQ0FBTCxHQUFTemdFLElBQUksQ0FBQ3lnRSxDQUFkO0FBQ0F6Z0UsWUFBSSxHQUFHK3BCLElBQUksQ0FBQzRpRCxDQUFaO0FBQ0F4MUQsY0FBTSxDQUFDb2lELENBQVAsR0FBV3Y1RCxJQUFYO0FBQ0ErcEIsWUFBSSxDQUFDNGlELENBQUwsR0FBU2o1RSxLQUFUO0FBQ0FBLGFBQUssQ0FBQytzRSxDQUFOLEdBQVUxMkMsSUFBVjtBQUNELE9BUEQsTUFPTztBQUNMQSxZQUFJLENBQUMwMkMsQ0FBTCxHQUFTdHBELE1BQVQ7QUFDQUEsY0FBTSxHQUFHNFMsSUFBVDtBQUNBL3BCLFlBQUksR0FBRytwQixJQUFJLENBQUM0aUQsQ0FBWjtBQUNEO0FBQ0YsS0FqQkQsTUFpQk87QUFDTGo2RCxTQUFHLEdBQUcxUyxJQUFJLENBQUNvVyxDQUFYO0FBQ0FwVyxVQUFJLEdBQUcrcEIsSUFBUDtBQUNEOztBQUVELFFBQUkvcEIsSUFBSixFQUFVQSxJQUFJLENBQUN5Z0UsQ0FBTCxHQUFTdHBELE1BQVQ7QUFDVixRQUFJekUsR0FBSixFQUFTOztBQUNULFFBQUkxUyxJQUFJLElBQUlBLElBQUksQ0FBQ29XLENBQWpCLEVBQW9CO0FBQUVwVyxVQUFJLENBQUNvVyxDQUFMLEdBQVMsS0FBVDtBQUFnQjtBQUFTOztBQUUvQyxPQUFHO0FBQ0QsVUFBSXBXLElBQUksS0FBSyxLQUFLaEosQ0FBbEIsRUFBcUI7O0FBQ3JCLFVBQUlnSixJQUFJLEtBQUttWCxNQUFNLENBQUNvaUQsQ0FBcEIsRUFBdUI7QUFDckJzWCxlQUFPLEdBQUcxNUQsTUFBTSxDQUFDdzFELENBQWpCOztBQUNBLFlBQUlrRSxPQUFPLENBQUN6NkQsQ0FBWixFQUFlO0FBQ2J5NkQsaUJBQU8sQ0FBQ3o2RCxDQUFSLEdBQVksS0FBWjtBQUNBZSxnQkFBTSxDQUFDZixDQUFQLEdBQVcsSUFBWDtBQUNBdTZELDRCQUFrQixDQUFDLElBQUQsRUFBT3g1RCxNQUFQLENBQWxCO0FBQ0EwNUQsaUJBQU8sR0FBRzE1RCxNQUFNLENBQUN3MUQsQ0FBakI7QUFDRDs7QUFDRCxZQUFLa0UsT0FBTyxDQUFDdFgsQ0FBUixJQUFhc1gsT0FBTyxDQUFDdFgsQ0FBUixDQUFVbmpELENBQXhCLElBQ0l5NkQsT0FBTyxDQUFDbEUsQ0FBUixJQUFha0UsT0FBTyxDQUFDbEUsQ0FBUixDQUFVdjJELENBRC9CLEVBQ21DO0FBQ2pDLGNBQUksQ0FBQ3k2RCxPQUFPLENBQUNsRSxDQUFULElBQWMsQ0FBQ2tFLE9BQU8sQ0FBQ2xFLENBQVIsQ0FBVXYyRCxDQUE3QixFQUFnQztBQUM5Qnk2RCxtQkFBTyxDQUFDdFgsQ0FBUixDQUFVbmpELENBQVYsR0FBYyxLQUFkO0FBQ0F5NkQsbUJBQU8sQ0FBQ3o2RCxDQUFSLEdBQVksSUFBWjtBQUNBdzZELCtCQUFtQixDQUFDLElBQUQsRUFBT0MsT0FBUCxDQUFuQjtBQUNBQSxtQkFBTyxHQUFHMTVELE1BQU0sQ0FBQ3cxRCxDQUFqQjtBQUNEOztBQUNEa0UsaUJBQU8sQ0FBQ3o2RCxDQUFSLEdBQVllLE1BQU0sQ0FBQ2YsQ0FBbkI7QUFDQWUsZ0JBQU0sQ0FBQ2YsQ0FBUCxHQUFXeTZELE9BQU8sQ0FBQ2xFLENBQVIsQ0FBVXYyRCxDQUFWLEdBQWMsS0FBekI7QUFDQXU2RCw0QkFBa0IsQ0FBQyxJQUFELEVBQU94NUQsTUFBUCxDQUFsQjtBQUNBblgsY0FBSSxHQUFHLEtBQUtoSixDQUFaO0FBQ0E7QUFDRDtBQUNGLE9BdEJELE1Bc0JPO0FBQ0w2NUUsZUFBTyxHQUFHMTVELE1BQU0sQ0FBQ29pRCxDQUFqQjs7QUFDQSxZQUFJc1gsT0FBTyxDQUFDejZELENBQVosRUFBZTtBQUNieTZELGlCQUFPLENBQUN6NkQsQ0FBUixHQUFZLEtBQVo7QUFDQWUsZ0JBQU0sQ0FBQ2YsQ0FBUCxHQUFXLElBQVg7QUFDQXc2RCw2QkFBbUIsQ0FBQyxJQUFELEVBQU96NUQsTUFBUCxDQUFuQjtBQUNBMDVELGlCQUFPLEdBQUcxNUQsTUFBTSxDQUFDb2lELENBQWpCO0FBQ0Q7O0FBQ0QsWUFBS3NYLE9BQU8sQ0FBQ3RYLENBQVIsSUFBYXNYLE9BQU8sQ0FBQ3RYLENBQVIsQ0FBVW5qRCxDQUF4QixJQUNFeTZELE9BQU8sQ0FBQ2xFLENBQVIsSUFBYWtFLE9BQU8sQ0FBQ2xFLENBQVIsQ0FBVXYyRCxDQUQ3QixFQUNpQztBQUMvQixjQUFJLENBQUN5NkQsT0FBTyxDQUFDdFgsQ0FBVCxJQUFjLENBQUNzWCxPQUFPLENBQUN0WCxDQUFSLENBQVVuakQsQ0FBN0IsRUFBZ0M7QUFDOUJ5NkQsbUJBQU8sQ0FBQ2xFLENBQVIsQ0FBVXYyRCxDQUFWLEdBQWMsS0FBZDtBQUNBeTZELG1CQUFPLENBQUN6NkQsQ0FBUixHQUFZLElBQVo7QUFDQXU2RCw4QkFBa0IsQ0FBQyxJQUFELEVBQU9FLE9BQVAsQ0FBbEI7QUFDQUEsbUJBQU8sR0FBRzE1RCxNQUFNLENBQUNvaUQsQ0FBakI7QUFDRDs7QUFDRHNYLGlCQUFPLENBQUN6NkQsQ0FBUixHQUFZZSxNQUFNLENBQUNmLENBQW5CO0FBQ0FlLGdCQUFNLENBQUNmLENBQVAsR0FBV3k2RCxPQUFPLENBQUN0WCxDQUFSLENBQVVuakQsQ0FBVixHQUFjLEtBQXpCO0FBQ0F3NkQsNkJBQW1CLENBQUMsSUFBRCxFQUFPejVELE1BQVAsQ0FBbkI7QUFDQW5YLGNBQUksR0FBRyxLQUFLaEosQ0FBWjtBQUNBO0FBQ0Q7QUFDRjs7QUFDRDY1RSxhQUFPLENBQUN6NkQsQ0FBUixHQUFZLElBQVo7QUFDQXBXLFVBQUksR0FBR21YLE1BQVA7QUFDQUEsWUFBTSxHQUFHQSxNQUFNLENBQUNzcEQsQ0FBaEI7QUFDRCxLQWxERCxRQWtEUyxDQUFDemdFLElBQUksQ0FBQ29XLENBbERmOztBQW9EQSxRQUFJcFcsSUFBSixFQUFVQSxJQUFJLENBQUNvVyxDQUFMLEdBQVMsS0FBVDtBQUNYO0FBakxzQixDQUF6Qjs7QUFvTEEsU0FBU3U2RCxrQkFBVCxDQUE0QjFvRCxJQUE1QixFQUFrQ2pvQixJQUFsQyxFQUF3QztBQUN0QyxNQUFJbEksQ0FBQyxHQUFHa0ksSUFBUjtBQUFBLE1BQ0l5WixDQUFDLEdBQUd6WixJQUFJLENBQUMyc0UsQ0FEYjtBQUFBLE1BRUl4MUQsTUFBTSxHQUFHcmYsQ0FBQyxDQUFDMm9FLENBRmY7O0FBSUEsTUFBSXRwRCxNQUFKLEVBQVk7QUFDVixRQUFJQSxNQUFNLENBQUNvaUQsQ0FBUCxLQUFhemhFLENBQWpCLEVBQW9CcWYsTUFBTSxDQUFDb2lELENBQVAsR0FBVzkvQyxDQUFYLENBQXBCLEtBQ0t0QyxNQUFNLENBQUN3MUQsQ0FBUCxHQUFXbHpELENBQVg7QUFDTixHQUhELE1BR087QUFDTHdPLFFBQUksQ0FBQ2p4QixDQUFMLEdBQVN5aUIsQ0FBVDtBQUNEOztBQUVEQSxHQUFDLENBQUNnbkQsQ0FBRixHQUFNdHBELE1BQU47QUFDQXJmLEdBQUMsQ0FBQzJvRSxDQUFGLEdBQU1obkQsQ0FBTjtBQUNBM2hCLEdBQUMsQ0FBQzYwRSxDQUFGLEdBQU1sekQsQ0FBQyxDQUFDOC9DLENBQVI7QUFDQSxNQUFJemhFLENBQUMsQ0FBQzYwRSxDQUFOLEVBQVM3MEUsQ0FBQyxDQUFDNjBFLENBQUYsQ0FBSWxNLENBQUosR0FBUTNvRSxDQUFSO0FBQ1QyaEIsR0FBQyxDQUFDOC9DLENBQUYsR0FBTXpoRSxDQUFOO0FBQ0Q7O0FBRUQsU0FBUzg0RSxtQkFBVCxDQUE2QjNvRCxJQUE3QixFQUFtQ2pvQixJQUFuQyxFQUF5QztBQUN2QyxNQUFJbEksQ0FBQyxHQUFHa0ksSUFBUjtBQUFBLE1BQ0l5WixDQUFDLEdBQUd6WixJQUFJLENBQUN1NUQsQ0FEYjtBQUFBLE1BRUlwaUQsTUFBTSxHQUFHcmYsQ0FBQyxDQUFDMm9FLENBRmY7O0FBSUEsTUFBSXRwRCxNQUFKLEVBQVk7QUFDVixRQUFJQSxNQUFNLENBQUNvaUQsQ0FBUCxLQUFhemhFLENBQWpCLEVBQW9CcWYsTUFBTSxDQUFDb2lELENBQVAsR0FBVzkvQyxDQUFYLENBQXBCLEtBQ0t0QyxNQUFNLENBQUN3MUQsQ0FBUCxHQUFXbHpELENBQVg7QUFDTixHQUhELE1BR087QUFDTHdPLFFBQUksQ0FBQ2p4QixDQUFMLEdBQVN5aUIsQ0FBVDtBQUNEOztBQUVEQSxHQUFDLENBQUNnbkQsQ0FBRixHQUFNdHBELE1BQU47QUFDQXJmLEdBQUMsQ0FBQzJvRSxDQUFGLEdBQU1obkQsQ0FBTjtBQUNBM2hCLEdBQUMsQ0FBQ3loRSxDQUFGLEdBQU05L0MsQ0FBQyxDQUFDa3pELENBQVI7QUFDQSxNQUFJNzBFLENBQUMsQ0FBQ3loRSxDQUFOLEVBQVN6aEUsQ0FBQyxDQUFDeWhFLENBQUYsQ0FBSWtILENBQUosR0FBUTNvRSxDQUFSO0FBQ1QyaEIsR0FBQyxDQUFDa3pELENBQUYsR0FBTTcwRSxDQUFOO0FBQ0Q7O0FBRUQsU0FBUzQ0RSxhQUFULENBQXVCMXdFLElBQXZCLEVBQTZCO0FBQzNCLFNBQU9BLElBQUksQ0FBQ3U1RCxDQUFaO0FBQWV2NUQsUUFBSSxHQUFHQSxJQUFJLENBQUN1NUQsQ0FBWjtBQUFmOztBQUNBLFNBQU92NUQsSUFBUDtBQUNEOztBQUVjMnZFLDJFQUFmLEU7Ozs7Ozs7Ozs7OztBQzVPQTtBQUFlLHlFQUFTMzdFLENBQVQsRUFBWTtBQUN6QixTQUFPLFlBQVc7QUFDaEIsV0FBT0EsQ0FBUDtBQUNELEdBRkQ7QUFHRCxDOzs7Ozs7Ozs7Ozs7QUNKRDtBQUFBO0FBQUE7QUFBQTs7Ozs7Ozs7Ozs7OztBQ0FBO0FBQUE7QUFBQTtBQUFPLFNBQVNBLENBQVQsQ0FBV0ssQ0FBWCxFQUFjO0FBQ25CLFNBQU9BLENBQUMsQ0FBQyxDQUFELENBQVI7QUFDRDtBQUVNLFNBQVNrRyxDQUFULENBQVdsRyxDQUFYLEVBQWM7QUFDbkIsU0FBT0EsQ0FBQyxDQUFDLENBQUQsQ0FBUjtBQUNELEM7Ozs7Ozs7Ozs7OztBQ05EO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRWUsMkVBQVc7QUFDeEIsTUFBSUwsQ0FBQyxHQUFHcThELHdDQUFSO0FBQUEsTUFDSTkxRCxDQUFDLEdBQUcrMUQsd0NBRFI7QUFBQSxNQUVJMTZELE1BQU0sR0FBRyxJQUZiOztBQUlBLFdBQVNrN0UsT0FBVCxDQUFpQjk2RSxJQUFqQixFQUF1QjtBQUNyQixXQUFPLElBQUl5NUUsZ0RBQUosQ0FBWXo1RSxJQUFJLENBQUM5QyxHQUFMLENBQVMsVUFBU21CLENBQVQsRUFBWVMsQ0FBWixFQUFlO0FBQ3pDLFVBQUk4SixDQUFDLEdBQUcsQ0FBQ3pKLElBQUksQ0FBQ3lGLEtBQUwsQ0FBVzVHLENBQUMsQ0FBQ0ssQ0FBRCxFQUFJUyxDQUFKLEVBQU9rQixJQUFQLENBQUQsR0FBZ0JvRSxnREFBM0IsSUFBc0NBLGdEQUF2QyxFQUFnRGpGLElBQUksQ0FBQ3lGLEtBQUwsQ0FBV0wsQ0FBQyxDQUFDbEcsQ0FBRCxFQUFJUyxDQUFKLEVBQU9rQixJQUFQLENBQUQsR0FBZ0JvRSxnREFBM0IsSUFBc0NBLGdEQUF0RixDQUFSO0FBQ0F3RSxPQUFDLENBQUN5SCxLQUFGLEdBQVV2UixDQUFWO0FBQ0E4SixPQUFDLENBQUM1SSxJQUFGLEdBQVMzQixDQUFUO0FBQ0EsYUFBT3VLLENBQVA7QUFDRCxLQUxrQixDQUFaLEVBS0hoSixNQUxHLENBQVA7QUFNRDs7QUFFRGs3RSxTQUFPLENBQUM5MkQsUUFBUixHQUFtQixVQUFTaGtCLElBQVQsRUFBZTtBQUNoQyxXQUFPODZFLE9BQU8sQ0FBQzk2RSxJQUFELENBQVAsQ0FBY2drQixRQUFkLEVBQVA7QUFDRCxHQUZEOztBQUlBODJELFNBQU8sQ0FBQzluRCxLQUFSLEdBQWdCLFVBQVNoekIsSUFBVCxFQUFlO0FBQzdCLFdBQU84NkUsT0FBTyxDQUFDOTZFLElBQUQsQ0FBUCxDQUFjZ3pCLEtBQWQsRUFBUDtBQUNELEdBRkQ7O0FBSUE4bkQsU0FBTyxDQUFDakIsU0FBUixHQUFvQixVQUFTNzVFLElBQVQsRUFBZTtBQUNqQyxXQUFPODZFLE9BQU8sQ0FBQzk2RSxJQUFELENBQVAsQ0FBYzY1RSxTQUFkLEVBQVA7QUFDRCxHQUZEOztBQUlBaUIsU0FBTyxDQUFDOThFLENBQVIsR0FBWSxVQUFTZ0QsQ0FBVCxFQUFZO0FBQ3RCLFdBQU9DLFNBQVMsQ0FBQ25ELE1BQVYsSUFBb0JFLENBQUMsR0FBRyxPQUFPZ0QsQ0FBUCxLQUFhLFVBQWIsR0FBMEJBLENBQTFCLEdBQThCRSx5REFBUSxDQUFDLENBQUNGLENBQUYsQ0FBMUMsRUFBZ0Q4NUUsT0FBcEUsSUFBK0U5OEUsQ0FBdEY7QUFDRCxHQUZEOztBQUlBODhFLFNBQU8sQ0FBQ3YyRSxDQUFSLEdBQVksVUFBU3ZELENBQVQsRUFBWTtBQUN0QixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9CeUcsQ0FBQyxHQUFHLE9BQU92RCxDQUFQLEtBQWEsVUFBYixHQUEwQkEsQ0FBMUIsR0FBOEJFLHlEQUFRLENBQUMsQ0FBQ0YsQ0FBRixDQUExQyxFQUFnRDg1RSxPQUFwRSxJQUErRXYyRSxDQUF0RjtBQUNELEdBRkQ7O0FBSUF1MkUsU0FBTyxDQUFDbDdFLE1BQVIsR0FBaUIsVUFBU29CLENBQVQsRUFBWTtBQUMzQixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9COEIsTUFBTSxHQUFHb0IsQ0FBQyxJQUFJLElBQUwsR0FBWSxJQUFaLEdBQW1CLENBQUMsQ0FBQyxDQUFDQSxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUssQ0FBTCxDQUFGLEVBQVcsQ0FBQ0EsQ0FBQyxDQUFDLENBQUQsQ0FBRCxDQUFLLENBQUwsQ0FBWixDQUFELEVBQXVCLENBQUMsQ0FBQ0EsQ0FBQyxDQUFDLENBQUQsQ0FBRCxDQUFLLENBQUwsQ0FBRixFQUFXLENBQUNBLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBSyxDQUFMLENBQVosQ0FBdkIsQ0FBNUIsRUFBMEU4NUUsT0FBOUYsSUFBeUdsN0UsTUFBTSxJQUFJLENBQUMsQ0FBQ0EsTUFBTSxDQUFDLENBQUQsQ0FBTixDQUFVLENBQVYsQ0FBRCxFQUFlQSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsQ0FBVixDQUFmLENBQUQsRUFBK0IsQ0FBQ0EsTUFBTSxDQUFDLENBQUQsQ0FBTixDQUFVLENBQVYsQ0FBRCxFQUFlQSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsQ0FBVixDQUFmLENBQS9CLENBQTFIO0FBQ0QsR0FGRDs7QUFJQWs3RSxTQUFPLENBQUNqb0UsSUFBUixHQUFlLFVBQVM3UixDQUFULEVBQVk7QUFDekIsV0FBT0MsU0FBUyxDQUFDbkQsTUFBVixJQUFvQjhCLE1BQU0sR0FBR29CLENBQUMsSUFBSSxJQUFMLEdBQVksSUFBWixHQUFtQixDQUFDLENBQUMsQ0FBRCxFQUFJLENBQUosQ0FBRCxFQUFTLENBQUMsQ0FBQ0EsQ0FBQyxDQUFDLENBQUQsQ0FBSCxFQUFRLENBQUNBLENBQUMsQ0FBQyxDQUFELENBQVYsQ0FBVCxDQUE1QixFQUFzRDg1RSxPQUExRSxJQUFxRmw3RSxNQUFNLElBQUksQ0FBQ0EsTUFBTSxDQUFDLENBQUQsQ0FBTixDQUFVLENBQVYsSUFBZUEsTUFBTSxDQUFDLENBQUQsQ0FBTixDQUFVLENBQVYsQ0FBaEIsRUFBOEJBLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVSxDQUFWLElBQWVBLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVSxDQUFWLENBQTdDLENBQXRHO0FBQ0QsR0FGRDs7QUFJQSxTQUFPazdFLE9BQVA7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUMvQ0Q7QUFBZSx5RUFBUzk4RSxDQUFULEVBQVk7QUFDekIsU0FBTyxZQUFXO0FBQ2hCLFdBQU9BLENBQVA7QUFDRCxHQUZEO0FBR0QsQzs7Ozs7Ozs7Ozs7O0FDSkQ7QUFBQTtBQUFlLFNBQVMrOEUsU0FBVCxDQUFtQnR1RSxNQUFuQixFQUEyQnRFLElBQTNCLEVBQWlDM0MsU0FBakMsRUFBNEM7QUFDekQsT0FBS2lILE1BQUwsR0FBY0EsTUFBZDtBQUNBLE9BQUt0RSxJQUFMLEdBQVlBLElBQVo7QUFDQSxPQUFLM0MsU0FBTCxHQUFpQkEsU0FBakI7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUNKRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7Ozs7Ozs7OztBQ0FBO0FBQUE7QUFBQTtBQUFBO0FBRU8sU0FBU2tKLGFBQVQsR0FBeUI7QUFDOUJuRixvREFBSyxDQUFDeUYsd0JBQU47QUFDRDtBQUVjLDJFQUFXO0FBQ3hCekYsb0RBQUssQ0FBQzBGLGNBQU47QUFDQTFGLG9EQUFLLENBQUN5Rix3QkFBTjtBQUNELEM7Ozs7Ozs7Ozs7OztBQ1REO0FBQUE7QUFBQTtBQUFBO0FBQU8sU0FBU2dzRSxTQUFULENBQW1CejFFLENBQW5CLEVBQXNCdkgsQ0FBdEIsRUFBeUJ1RyxDQUF6QixFQUE0QjtBQUNqQyxPQUFLZ0IsQ0FBTCxHQUFTQSxDQUFUO0FBQ0EsT0FBS3ZILENBQUwsR0FBU0EsQ0FBVDtBQUNBLE9BQUt1RyxDQUFMLEdBQVNBLENBQVQ7QUFDRDtBQUVEeTJFLFNBQVMsQ0FBQ2grRSxTQUFWLEdBQXNCO0FBQ3BCd1YsYUFBVyxFQUFFd29FLFNBRE87QUFFcEJ4MkUsT0FBSyxFQUFFLGVBQVNlLENBQVQsRUFBWTtBQUNqQixXQUFPQSxDQUFDLEtBQUssQ0FBTixHQUFVLElBQVYsR0FBaUIsSUFBSXkxRSxTQUFKLENBQWMsS0FBS3oxRSxDQUFMLEdBQVNBLENBQXZCLEVBQTBCLEtBQUt2SCxDQUEvQixFQUFrQyxLQUFLdUcsQ0FBdkMsQ0FBeEI7QUFDRCxHQUptQjtBQUtwQndsQyxXQUFTLEVBQUUsbUJBQVMvckMsQ0FBVCxFQUFZdUcsQ0FBWixFQUFlO0FBQ3hCLFdBQU92RyxDQUFDLEtBQUssQ0FBTixHQUFVdUcsQ0FBQyxLQUFLLENBQWhCLEdBQW9CLElBQXBCLEdBQTJCLElBQUl5MkUsU0FBSixDQUFjLEtBQUt6MUUsQ0FBbkIsRUFBc0IsS0FBS3ZILENBQUwsR0FBUyxLQUFLdUgsQ0FBTCxHQUFTdkgsQ0FBeEMsRUFBMkMsS0FBS3VHLENBQUwsR0FBUyxLQUFLZ0IsQ0FBTCxHQUFTaEIsQ0FBN0QsQ0FBbEM7QUFDRCxHQVBtQjtBQVFwQm1CLE9BQUssRUFBRSxlQUFTeUksS0FBVCxFQUFnQjtBQUNyQixXQUFPLENBQUNBLEtBQUssQ0FBQyxDQUFELENBQUwsR0FBVyxLQUFLNUksQ0FBaEIsR0FBb0IsS0FBS3ZILENBQTFCLEVBQTZCbVEsS0FBSyxDQUFDLENBQUQsQ0FBTCxHQUFXLEtBQUs1SSxDQUFoQixHQUFvQixLQUFLaEIsQ0FBdEQsQ0FBUDtBQUNELEdBVm1CO0FBV3BCMDJFLFFBQU0sRUFBRSxnQkFBU2o5RSxDQUFULEVBQVk7QUFDbEIsV0FBT0EsQ0FBQyxHQUFHLEtBQUt1SCxDQUFULEdBQWEsS0FBS3ZILENBQXpCO0FBQ0QsR0FibUI7QUFjcEJrOUUsUUFBTSxFQUFFLGdCQUFTMzJFLENBQVQsRUFBWTtBQUNsQixXQUFPQSxDQUFDLEdBQUcsS0FBS2dCLENBQVQsR0FBYSxLQUFLaEIsQ0FBekI7QUFDRCxHQWhCbUI7QUFpQnBCdzZCLFFBQU0sRUFBRSxnQkFBU284QyxRQUFULEVBQW1CO0FBQ3pCLFdBQU8sQ0FBQyxDQUFDQSxRQUFRLENBQUMsQ0FBRCxDQUFSLEdBQWMsS0FBS245RSxDQUFwQixJQUF5QixLQUFLdUgsQ0FBL0IsRUFBa0MsQ0FBQzQxRSxRQUFRLENBQUMsQ0FBRCxDQUFSLEdBQWMsS0FBSzUyRSxDQUFwQixJQUF5QixLQUFLZ0IsQ0FBaEUsQ0FBUDtBQUNELEdBbkJtQjtBQW9CcEI2MUUsU0FBTyxFQUFFLGlCQUFTcDlFLENBQVQsRUFBWTtBQUNuQixXQUFPLENBQUNBLENBQUMsR0FBRyxLQUFLQSxDQUFWLElBQWUsS0FBS3VILENBQTNCO0FBQ0QsR0F0Qm1CO0FBdUJwQjgxRSxTQUFPLEVBQUUsaUJBQVM5MkUsQ0FBVCxFQUFZO0FBQ25CLFdBQU8sQ0FBQ0EsQ0FBQyxHQUFHLEtBQUtBLENBQVYsSUFBZSxLQUFLZ0IsQ0FBM0I7QUFDRCxHQXpCbUI7QUEwQnBCKzFFLFVBQVEsRUFBRSxrQkFBU3Q5RSxDQUFULEVBQVk7QUFDcEIsV0FBT0EsQ0FBQyxDQUFDZ0ksSUFBRixHQUFTckcsTUFBVCxDQUFnQjNCLENBQUMsQ0FBQ3VDLEtBQUYsR0FBVXJELEdBQVYsQ0FBYyxLQUFLaytFLE9BQW5CLEVBQTRCLElBQTVCLEVBQWtDbCtFLEdBQWxDLENBQXNDYyxDQUFDLENBQUMrZ0MsTUFBeEMsRUFBZ0QvZ0MsQ0FBaEQsQ0FBaEIsQ0FBUDtBQUNELEdBNUJtQjtBQTZCcEJ1OUUsVUFBUSxFQUFFLGtCQUFTaDNFLENBQVQsRUFBWTtBQUNwQixXQUFPQSxDQUFDLENBQUN5QixJQUFGLEdBQVNyRyxNQUFULENBQWdCNEUsQ0FBQyxDQUFDaEUsS0FBRixHQUFVckQsR0FBVixDQUFjLEtBQUttK0UsT0FBbkIsRUFBNEIsSUFBNUIsRUFBa0NuK0UsR0FBbEMsQ0FBc0NxSCxDQUFDLENBQUN3NkIsTUFBeEMsRUFBZ0R4NkIsQ0FBaEQsQ0FBaEIsQ0FBUDtBQUNELEdBL0JtQjtBQWdDcEJvYSxVQUFRLEVBQUUsb0JBQVc7QUFDbkIsV0FBTyxlQUFlLEtBQUszZ0IsQ0FBcEIsR0FBd0IsR0FBeEIsR0FBOEIsS0FBS3VHLENBQW5DLEdBQXVDLFVBQXZDLEdBQW9ELEtBQUtnQixDQUF6RCxHQUE2RCxHQUFwRTtBQUNEO0FBbENtQixDQUF0QjtBQXFDTyxJQUFJN0YsUUFBUSxHQUFHLElBQUlzN0UsU0FBSixDQUFjLENBQWQsRUFBaUIsQ0FBakIsRUFBb0IsQ0FBcEIsQ0FBZjtBQUVQeDFFLFNBQVMsQ0FBQ3hJLFNBQVYsR0FBc0JnK0UsU0FBUyxDQUFDaCtFLFNBQWhDO0FBRWUsU0FBU3dJLFNBQVQsQ0FBbUJ3RSxJQUFuQixFQUF5QjtBQUN0QyxTQUFPQSxJQUFJLENBQUN3eEUsTUFBTCxJQUFlOTdFLFFBQXRCO0FBQ0QsQzs7Ozs7Ozs7Ozs7O0FDakREO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtDQUdBOztBQUNBLFNBQVM0SixhQUFULEdBQXlCO0FBQ3ZCLFNBQU8sQ0FBQ0Msa0RBQUssQ0FBQ0MsTUFBZDtBQUNEOztBQUVELFNBQVNDLGFBQVQsR0FBeUI7QUFDdkIsTUFBSXBCLENBQUMsR0FBRyxJQUFSO0FBQUEsTUFBY1EsQ0FBZDtBQUFBLE1BQWlCNlcsQ0FBakI7O0FBQ0EsTUFBSXJYLENBQUMsWUFBWW96RSxVQUFqQixFQUE2QjtBQUMzQnB6RSxLQUFDLEdBQUdBLENBQUMsQ0FBQ3NCLGVBQUYsSUFBcUJ0QixDQUF6QjtBQUNBUSxLQUFDLEdBQUdSLENBQUMsQ0FBQ3VCLEtBQUYsQ0FBUUMsT0FBUixDQUFnQnRLLEtBQXBCO0FBQ0FtZ0IsS0FBQyxHQUFHclgsQ0FBQyxDQUFDeUIsTUFBRixDQUFTRCxPQUFULENBQWlCdEssS0FBckI7QUFDRCxHQUpELE1BSU87QUFDTHNKLEtBQUMsR0FBR1IsQ0FBQyxDQUFDcXpFLFdBQU47QUFDQWg4RCxLQUFDLEdBQUdyWCxDQUFDLENBQUNzekUsWUFBTjtBQUNEOztBQUNELFNBQU8sQ0FBQyxDQUFDLENBQUQsRUFBSSxDQUFKLENBQUQsRUFBUyxDQUFDOXlFLENBQUQsRUFBSTZXLENBQUosQ0FBVCxDQUFQO0FBQ0Q7O0FBRUQsU0FBU2s4RCxnQkFBVCxHQUE0QjtBQUMxQixTQUFPLEtBQUtKLE1BQUwsSUFBZTk3RSxtREFBdEI7QUFDRDs7QUFFRCxTQUFTbThFLGlCQUFULEdBQTZCO0FBQzNCLFNBQU8sQ0FBQ3R5RSxrREFBSyxDQUFDdXlFLE1BQVAsSUFBaUJ2eUUsa0RBQUssQ0FBQ3d5RSxTQUFOLEdBQWtCLEdBQWxCLEdBQXdCLENBQXpDLElBQThDLEdBQXJEO0FBQ0Q7O0FBRUQsU0FBU24xRCxnQkFBVCxHQUE0QjtBQUMxQixTQUFPLGtCQUFrQixJQUF6QjtBQUNEOztBQUVELFNBQVNvMUQsZ0JBQVQsQ0FBMEJ4MkUsU0FBMUIsRUFBcUM1RixNQUFyQyxFQUE2Q3E4RSxlQUE3QyxFQUE4RDtBQUM1RCxNQUFJOWlCLEdBQUcsR0FBRzN6RCxTQUFTLENBQUM0MUUsT0FBVixDQUFrQng3RSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsQ0FBVixDQUFsQixJQUFrQ3E4RSxlQUFlLENBQUMsQ0FBRCxDQUFmLENBQW1CLENBQW5CLENBQTVDO0FBQUEsTUFDSTVpQixHQUFHLEdBQUc3ekQsU0FBUyxDQUFDNDFFLE9BQVYsQ0FBa0J4N0UsTUFBTSxDQUFDLENBQUQsQ0FBTixDQUFVLENBQVYsQ0FBbEIsSUFBa0NxOEUsZUFBZSxDQUFDLENBQUQsQ0FBZixDQUFtQixDQUFuQixDQUQ1QztBQUFBLE1BRUk3aUIsR0FBRyxHQUFHNXpELFNBQVMsQ0FBQzYxRSxPQUFWLENBQWtCejdFLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVSxDQUFWLENBQWxCLElBQWtDcThFLGVBQWUsQ0FBQyxDQUFELENBQWYsQ0FBbUIsQ0FBbkIsQ0FGNUM7QUFBQSxNQUdJM2lCLEdBQUcsR0FBRzl6RCxTQUFTLENBQUM2MUUsT0FBVixDQUFrQno3RSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsQ0FBVixDQUFsQixJQUFrQ3E4RSxlQUFlLENBQUMsQ0FBRCxDQUFmLENBQW1CLENBQW5CLENBSDVDO0FBSUEsU0FBT3oyRSxTQUFTLENBQUN1a0MsU0FBVixDQUNMc3ZCLEdBQUcsR0FBR0YsR0FBTixHQUFZLENBQUNBLEdBQUcsR0FBR0UsR0FBUCxJQUFjLENBQTFCLEdBQThCbDZELElBQUksQ0FBQ0ssR0FBTCxDQUFTLENBQVQsRUFBWTI1RCxHQUFaLEtBQW9CaDZELElBQUksQ0FBQ00sR0FBTCxDQUFTLENBQVQsRUFBWTQ1RCxHQUFaLENBRDdDLEVBRUxDLEdBQUcsR0FBR0YsR0FBTixHQUFZLENBQUNBLEdBQUcsR0FBR0UsR0FBUCxJQUFjLENBQTFCLEdBQThCbjZELElBQUksQ0FBQ0ssR0FBTCxDQUFTLENBQVQsRUFBWTQ1RCxHQUFaLEtBQW9CajZELElBQUksQ0FBQ00sR0FBTCxDQUFTLENBQVQsRUFBWTY1RCxHQUFaLENBRjdDLENBQVA7QUFJRDs7QUFFYywyRUFBVztBQUN4QixNQUFJanlELE1BQU0sR0FBR2lDLGFBQWI7QUFBQSxNQUNJMUosTUFBTSxHQUFHNkosYUFEYjtBQUFBLE1BRUl5eUUsU0FBUyxHQUFHRixnQkFGaEI7QUFBQSxNQUdJRyxVQUFVLEdBQUdOLGlCQUhqQjtBQUFBLE1BSUk5MEQsU0FBUyxHQUFHSCxnQkFKaEI7QUFBQSxNQUtJdzFELFdBQVcsR0FBRyxDQUFDLENBQUQsRUFBSXhvRCxRQUFKLENBTGxCO0FBQUEsTUFNSXFvRCxlQUFlLEdBQUcsQ0FBQyxDQUFDLENBQUNyb0QsUUFBRixFQUFZLENBQUNBLFFBQWIsQ0FBRCxFQUF5QixDQUFDQSxRQUFELEVBQVdBLFFBQVgsQ0FBekIsQ0FOdEI7QUFBQSxNQU9JK3JCLFFBQVEsR0FBRyxHQVBmO0FBQUEsTUFRSTd6QyxXQUFXLEdBQUd1d0UsOERBUmxCO0FBQUEsTUFTSXIxRCxRQUFRLEdBQUcsRUFUZjtBQUFBLE1BVUl2YyxTQUFTLEdBQUdDLDREQUFRLENBQUMsT0FBRCxFQUFVLE1BQVYsRUFBa0IsS0FBbEIsQ0FWeEI7QUFBQSxNQVdJNHhFLGFBWEo7QUFBQSxNQVlJMXhFLFdBWko7QUFBQSxNQWFJMnhFLFVBQVUsR0FBRyxHQWJqQjtBQUFBLE1BY0lDLFVBQVUsR0FBRyxHQWRqQjtBQUFBLE1BZUlwMUQsY0FBYyxHQUFHLENBZnJCOztBQWlCQSxXQUFTcTFELElBQVQsQ0FBY3gyRSxTQUFkLEVBQXlCO0FBQ3ZCQSxhQUFTLENBQ0o2RSxRQURMLENBQ2MsUUFEZCxFQUN3Qjh3RSxnQkFEeEIsRUFFS3p3RSxFQUZMLENBRVEsWUFGUixFQUVzQnV4RSxPQUZ0QixFQUdLdnhFLEVBSEwsQ0FHUSxnQkFIUixFQUcwQm1jLFdBSDFCLEVBSUtuYyxFQUpMLENBSVEsZUFKUixFQUl5Qnd4RSxVQUp6QixFQUtHdDFFLE1BTEgsQ0FLVTBmLFNBTFYsRUFNSzViLEVBTkwsQ0FNUSxpQkFOUixFQU0yQm9jLFlBTjNCLEVBT0twYyxFQVBMLENBT1EsZ0JBUFIsRUFPMEJxYyxVQVAxQixFQVFLcmMsRUFSTCxDQVFRLGdDQVJSLEVBUTBDc2MsVUFSMUMsRUFTS3ZjLEtBVEwsQ0FTVyxjQVRYLEVBUzJCLE1BVDNCLEVBVUtBLEtBVkwsQ0FVVyw2QkFWWCxFQVUwQyxlQVYxQztBQVdEOztBQUVEdXhFLE1BQUksQ0FBQ2ozRSxTQUFMLEdBQWlCLFVBQVNvM0UsVUFBVCxFQUFxQnAzRSxTQUFyQixFQUFnQztBQUMvQyxRQUFJUyxTQUFTLEdBQUcyMkUsVUFBVSxDQUFDMzJFLFNBQVgsR0FBdUIyMkUsVUFBVSxDQUFDMzJFLFNBQVgsRUFBdkIsR0FBZ0QyMkUsVUFBaEU7QUFDQTMyRSxhQUFTLENBQUM2RSxRQUFWLENBQW1CLFFBQW5CLEVBQTZCOHdFLGdCQUE3Qjs7QUFDQSxRQUFJZ0IsVUFBVSxLQUFLMzJFLFNBQW5CLEVBQThCO0FBQzVCbXFFLGNBQVEsQ0FBQ3dNLFVBQUQsRUFBYXAzRSxTQUFiLENBQVI7QUFDRCxLQUZELE1BRU87QUFDTFMsZUFBUyxDQUFDK0YsU0FBVixHQUFzQjFFLElBQXRCLENBQTJCLFlBQVc7QUFDcENvZ0IsZUFBTyxDQUFDLElBQUQsRUFBT3ptQixTQUFQLENBQVAsQ0FDS21CLEtBREwsR0FFS3E2RSxJQUZMLENBRVUsSUFGVixFQUVnQixPQUFPajNFLFNBQVAsS0FBcUIsVUFBckIsR0FBa0NBLFNBQVMsQ0FBQ0UsS0FBVixDQUFnQixJQUFoQixFQUFzQnpFLFNBQXRCLENBQWxDLEdBQXFFdUUsU0FGckYsRUFHS2dHLEdBSEw7QUFJRCxPQUxEO0FBTUQ7QUFDRixHQWJEOztBQWVBaXhFLE1BQUksQ0FBQ0ksT0FBTCxHQUFlLFVBQVM1MkUsU0FBVCxFQUFvQlYsQ0FBcEIsRUFBdUI7QUFDcENrM0UsUUFBSSxDQUFDSyxPQUFMLENBQWE3MkUsU0FBYixFQUF3QixZQUFXO0FBQ2pDLFVBQUk4MkUsRUFBRSxHQUFHLEtBQUt2QixNQUFMLENBQVlqMkUsQ0FBckI7QUFBQSxVQUNJeTNFLEVBQUUsR0FBRyxPQUFPejNFLENBQVAsS0FBYSxVQUFiLEdBQTBCQSxDQUFDLENBQUNHLEtBQUYsQ0FBUSxJQUFSLEVBQWN6RSxTQUFkLENBQTFCLEdBQXFEc0UsQ0FEOUQ7QUFFQSxhQUFPdzNFLEVBQUUsR0FBR0MsRUFBWjtBQUNELEtBSkQ7QUFLRCxHQU5EOztBQVFBUCxNQUFJLENBQUNLLE9BQUwsR0FBZSxVQUFTNzJFLFNBQVQsRUFBb0JWLENBQXBCLEVBQXVCO0FBQ3BDazNFLFFBQUksQ0FBQ2ozRSxTQUFMLENBQWVTLFNBQWYsRUFBMEIsWUFBVztBQUNuQyxVQUFJb0MsQ0FBQyxHQUFHekksTUFBTSxDQUFDOEYsS0FBUCxDQUFhLElBQWIsRUFBbUJ6RSxTQUFuQixDQUFSO0FBQUEsVUFDSTBnQixFQUFFLEdBQUcsS0FBSzY1RCxNQURkO0FBQUEsVUFFSWx6RCxFQUFFLEdBQUcyZixRQUFRLENBQUM1L0IsQ0FBRCxDQUZqQjtBQUFBLFVBR0lrOEIsRUFBRSxHQUFHNWlCLEVBQUUsQ0FBQ29kLE1BQUgsQ0FBVXpXLEVBQVYsQ0FIVDtBQUFBLFVBSUkwMEQsRUFBRSxHQUFHLE9BQU96M0UsQ0FBUCxLQUFhLFVBQWIsR0FBMEJBLENBQUMsQ0FBQ0csS0FBRixDQUFRLElBQVIsRUFBY3pFLFNBQWQsQ0FBMUIsR0FBcURzRSxDQUo5RDtBQUtBLGFBQU8yMkUsU0FBUyxDQUFDbnlDLFNBQVMsQ0FBQ3ZsQyxLQUFLLENBQUNtZCxFQUFELEVBQUtxN0QsRUFBTCxDQUFOLEVBQWdCMTBELEVBQWhCLEVBQW9CaWMsRUFBcEIsQ0FBVixFQUFtQ2w4QixDQUFuQyxFQUFzQzR6RSxlQUF0QyxDQUFoQjtBQUNELEtBUEQ7QUFRRCxHQVREOztBQVdBUSxNQUFJLENBQUNRLFdBQUwsR0FBbUIsVUFBU2gzRSxTQUFULEVBQW9CakksQ0FBcEIsRUFBdUJ1RyxDQUF2QixFQUEwQjtBQUMzQ2s0RSxRQUFJLENBQUNqM0UsU0FBTCxDQUFlUyxTQUFmLEVBQTBCLFlBQVc7QUFDbkMsYUFBT2kyRSxTQUFTLENBQUMsS0FBS1YsTUFBTCxDQUFZenhDLFNBQVosQ0FDZixPQUFPL3JDLENBQVAsS0FBYSxVQUFiLEdBQTBCQSxDQUFDLENBQUMwSCxLQUFGLENBQVEsSUFBUixFQUFjekUsU0FBZCxDQUExQixHQUFxRGpELENBRHRDLEVBRWYsT0FBT3VHLENBQVAsS0FBYSxVQUFiLEdBQTBCQSxDQUFDLENBQUNtQixLQUFGLENBQVEsSUFBUixFQUFjekUsU0FBZCxDQUExQixHQUFxRHNELENBRnRDLENBQUQsRUFHYjNFLE1BQU0sQ0FBQzhGLEtBQVAsQ0FBYSxJQUFiLEVBQW1CekUsU0FBbkIsQ0FIYSxFQUdrQmc3RSxlQUhsQixDQUFoQjtBQUlELEtBTEQ7QUFNRCxHQVBEOztBQVNBUSxNQUFJLENBQUNTLFdBQUwsR0FBbUIsVUFBU2ozRSxTQUFULEVBQW9CakksQ0FBcEIsRUFBdUJ1RyxDQUF2QixFQUEwQjtBQUMzQ2s0RSxRQUFJLENBQUNqM0UsU0FBTCxDQUFlUyxTQUFmLEVBQTBCLFlBQVc7QUFDbkMsVUFBSW9DLENBQUMsR0FBR3pJLE1BQU0sQ0FBQzhGLEtBQVAsQ0FBYSxJQUFiLEVBQW1CekUsU0FBbkIsQ0FBUjtBQUFBLFVBQ0l3QixDQUFDLEdBQUcsS0FBSys0RSxNQURiO0FBQUEsVUFFSTE1RSxDQUFDLEdBQUdtbUMsUUFBUSxDQUFDNS9CLENBQUQsQ0FGaEI7QUFHQSxhQUFPNnpFLFNBQVMsQ0FBQ3g4RSxtREFBUSxDQUFDcXFDLFNBQVQsQ0FBbUJqb0MsQ0FBQyxDQUFDLENBQUQsQ0FBcEIsRUFBeUJBLENBQUMsQ0FBQyxDQUFELENBQTFCLEVBQStCMEMsS0FBL0IsQ0FBcUMvQixDQUFDLENBQUM4QyxDQUF2QyxFQUEwQ3drQyxTQUExQyxDQUNmLE9BQU8vckMsQ0FBUCxLQUFhLFVBQWIsR0FBMEIsQ0FBQ0EsQ0FBQyxDQUFDMEgsS0FBRixDQUFRLElBQVIsRUFBY3pFLFNBQWQsQ0FBM0IsR0FBc0QsQ0FBQ2pELENBRHhDLEVBRWYsT0FBT3VHLENBQVAsS0FBYSxVQUFiLEdBQTBCLENBQUNBLENBQUMsQ0FBQ21CLEtBQUYsQ0FBUSxJQUFSLEVBQWN6RSxTQUFkLENBQTNCLEdBQXNELENBQUNzRCxDQUZ4QyxDQUFELEVBR2I4RCxDQUhhLEVBR1Y0ekUsZUFIVSxDQUFoQjtBQUlELEtBUkQ7QUFTRCxHQVZEOztBQVlBLFdBQVN6M0UsS0FBVCxDQUFlZ0IsU0FBZixFQUEwQkQsQ0FBMUIsRUFBNkI7QUFDM0JBLEtBQUMsR0FBR3BHLElBQUksQ0FBQ00sR0FBTCxDQUFTMjhFLFdBQVcsQ0FBQyxDQUFELENBQXBCLEVBQXlCajlFLElBQUksQ0FBQ0ssR0FBTCxDQUFTNDhFLFdBQVcsQ0FBQyxDQUFELENBQXBCLEVBQXlCNzJFLENBQXpCLENBQXpCLENBQUo7QUFDQSxXQUFPQSxDQUFDLEtBQUtDLFNBQVMsQ0FBQ0QsQ0FBaEIsR0FBb0JDLFNBQXBCLEdBQWdDLElBQUl3MUUsb0RBQUosQ0FBY3oxRSxDQUFkLEVBQWlCQyxTQUFTLENBQUN4SCxDQUEzQixFQUE4QndILFNBQVMsQ0FBQ2pCLENBQXhDLENBQXZDO0FBQ0Q7O0FBRUQsV0FBU3dsQyxTQUFULENBQW1CdmtDLFNBQW5CLEVBQThCOGlCLEVBQTlCLEVBQWtDaWMsRUFBbEMsRUFBc0M7QUFDcEMsUUFBSXZtQyxDQUFDLEdBQUdzcUIsRUFBRSxDQUFDLENBQUQsQ0FBRixHQUFRaWMsRUFBRSxDQUFDLENBQUQsQ0FBRixHQUFRLytCLFNBQVMsQ0FBQ0QsQ0FBbEM7QUFBQSxRQUFxQ2hCLENBQUMsR0FBRytqQixFQUFFLENBQUMsQ0FBRCxDQUFGLEdBQVFpYyxFQUFFLENBQUMsQ0FBRCxDQUFGLEdBQVEvK0IsU0FBUyxDQUFDRCxDQUFuRTtBQUNBLFdBQU92SCxDQUFDLEtBQUt3SCxTQUFTLENBQUN4SCxDQUFoQixJQUFxQnVHLENBQUMsS0FBS2lCLFNBQVMsQ0FBQ2pCLENBQXJDLEdBQXlDaUIsU0FBekMsR0FBcUQsSUFBSXcxRSxvREFBSixDQUFjeDFFLFNBQVMsQ0FBQ0QsQ0FBeEIsRUFBMkJ2SCxDQUEzQixFQUE4QnVHLENBQTlCLENBQTVEO0FBQ0Q7O0FBRUQsV0FBUzBqQyxRQUFULENBQWtCcm9DLE1BQWxCLEVBQTBCO0FBQ3hCLFdBQU8sQ0FBQyxDQUFDLENBQUNBLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVSxDQUFWLENBQUQsR0FBZ0IsQ0FBQ0EsTUFBTSxDQUFDLENBQUQsQ0FBTixDQUFVLENBQVYsQ0FBbEIsSUFBa0MsQ0FBbkMsRUFBc0MsQ0FBQyxDQUFDQSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsQ0FBVixDQUFELEdBQWdCLENBQUNBLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVSxDQUFWLENBQWxCLElBQWtDLENBQXhFLENBQVA7QUFDRDs7QUFFRCxXQUFTd3dFLFFBQVQsQ0FBa0JucEUsVUFBbEIsRUFBOEJ6QixTQUE5QixFQUF5Q2YsTUFBekMsRUFBaUQ7QUFDL0N3QyxjQUFVLENBQ0xrRSxFQURMLENBQ1EsWUFEUixFQUNzQixZQUFXO0FBQUV1YyxhQUFPLENBQUMsSUFBRCxFQUFPem1CLFNBQVAsQ0FBUCxDQUF5Qm1CLEtBQXpCO0FBQW1DLEtBRHRFLEVBRUsrSSxFQUZMLENBRVEseUJBRlIsRUFFbUMsWUFBVztBQUFFdWMsYUFBTyxDQUFDLElBQUQsRUFBT3ptQixTQUFQLENBQVAsQ0FBeUJ1SyxHQUF6QjtBQUFpQyxLQUZqRixFQUdLQyxLQUhMLENBR1csTUFIWCxFQUdtQixZQUFXO0FBQ3hCLFVBQUlDLElBQUksR0FBRyxJQUFYO0FBQUEsVUFDSUssSUFBSSxHQUFHOUssU0FEWDtBQUFBLFVBRUlxZSxDQUFDLEdBQUdvSSxPQUFPLENBQUNoYyxJQUFELEVBQU9LLElBQVAsQ0FGZjtBQUFBLFVBR0kxRCxDQUFDLEdBQUd6SSxNQUFNLENBQUM4RixLQUFQLENBQWFnRyxJQUFiLEVBQW1CSyxJQUFuQixDQUhSO0FBQUEsVUFJSWpLLENBQUMsR0FBRzJDLE1BQU0sSUFBSXdqQyxRQUFRLENBQUM1L0IsQ0FBRCxDQUoxQjtBQUFBLFVBS0lRLENBQUMsR0FBRzFKLElBQUksQ0FBQ00sR0FBTCxDQUFTNEksQ0FBQyxDQUFDLENBQUQsQ0FBRCxDQUFLLENBQUwsSUFBVUEsQ0FBQyxDQUFDLENBQUQsQ0FBRCxDQUFLLENBQUwsQ0FBbkIsRUFBNEJBLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBSyxDQUFMLElBQVVBLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBSyxDQUFMLENBQXRDLENBTFI7QUFBQSxVQU1JbEwsQ0FBQyxHQUFHdU8sSUFBSSxDQUFDOHZFLE1BTmI7QUFBQSxVQU9JcCtFLENBQUMsR0FBRyxPQUFPb0ksU0FBUCxLQUFxQixVQUFyQixHQUFrQ0EsU0FBUyxDQUFDRSxLQUFWLENBQWdCZ0csSUFBaEIsRUFBc0JLLElBQXRCLENBQWxDLEdBQWdFdkcsU0FQeEU7QUFBQSxVQVFJMUcsQ0FBQyxHQUFHZ04sV0FBVyxDQUFDM08sQ0FBQyxDQUFDNGhDLE1BQUYsQ0FBU2o5QixDQUFULEVBQVk2aUIsTUFBWixDQUFtQjliLENBQUMsR0FBRzFMLENBQUMsQ0FBQ29JLENBQXpCLENBQUQsRUFBOEJuSSxDQUFDLENBQUMyaEMsTUFBRixDQUFTajlCLENBQVQsRUFBWTZpQixNQUFaLENBQW1COWIsQ0FBQyxHQUFHekwsQ0FBQyxDQUFDbUksQ0FBekIsQ0FBOUIsQ0FSbkI7QUFTQSxhQUFPLFVBQVM5QyxDQUFULEVBQVk7QUFDakIsWUFBSUEsQ0FBQyxLQUFLLENBQVYsRUFBYUEsQ0FBQyxHQUFHckYsQ0FBSixDQUFiLENBQW9CO0FBQXBCLGFBQ0s7QUFBRSxnQkFBSXVpQixDQUFDLEdBQUc3Z0IsQ0FBQyxDQUFDMkQsQ0FBRCxDQUFUO0FBQUEsZ0JBQWM4QyxDQUFDLEdBQUdzRCxDQUFDLEdBQUc4VyxDQUFDLENBQUMsQ0FBRCxDQUF2QjtBQUE0QmxkLGFBQUMsR0FBRyxJQUFJdTRFLG9EQUFKLENBQWN6MUUsQ0FBZCxFQUFpQnpELENBQUMsQ0FBQyxDQUFELENBQUQsR0FBTzZkLENBQUMsQ0FBQyxDQUFELENBQUQsR0FBT3BhLENBQS9CLEVBQWtDekQsQ0FBQyxDQUFDLENBQUQsQ0FBRCxHQUFPNmQsQ0FBQyxDQUFDLENBQUQsQ0FBRCxHQUFPcGEsQ0FBaEQsQ0FBSjtBQUF5RDtBQUM1RitaLFNBQUMsQ0FBQ205RCxJQUFGLENBQU8sSUFBUCxFQUFhaDZFLENBQWI7QUFDRCxPQUpEO0FBS0QsS0FsQkw7QUFtQkQ7O0FBRUQsV0FBU2lsQixPQUFULENBQWlCaGMsSUFBakIsRUFBdUJLLElBQXZCLEVBQTZCO0FBQzNCLFNBQUssSUFBSWpOLENBQUMsR0FBRyxDQUFSLEVBQVdRLENBQUMsR0FBRzBuQixRQUFRLENBQUNscEIsTUFBeEIsRUFBZ0N3aEIsQ0FBckMsRUFBd0N4Z0IsQ0FBQyxHQUFHUSxDQUE1QyxFQUErQyxFQUFFUixDQUFqRCxFQUFvRDtBQUNsRCxVQUFJLENBQUN3Z0IsQ0FBQyxHQUFHMEgsUUFBUSxDQUFDbG9CLENBQUQsQ0FBYixFQUFrQjRNLElBQWxCLEtBQTJCQSxJQUEvQixFQUFxQztBQUNuQyxlQUFPNFQsQ0FBUDtBQUNEO0FBQ0Y7O0FBQ0QsV0FBTyxJQUFJNjlELE9BQUosQ0FBWXp4RSxJQUFaLEVBQWtCSyxJQUFsQixDQUFQO0FBQ0Q7O0FBRUQsV0FBU294RSxPQUFULENBQWlCenhFLElBQWpCLEVBQXVCSyxJQUF2QixFQUE2QjtBQUMzQixTQUFLTCxJQUFMLEdBQVlBLElBQVo7QUFDQSxTQUFLSyxJQUFMLEdBQVlBLElBQVo7QUFDQSxTQUFLc0UsS0FBTCxHQUFhLENBQUMsQ0FBZDtBQUNBLFNBQUtuRSxNQUFMLEdBQWMsQ0FBZDtBQUNBLFNBQUt0TSxNQUFMLEdBQWNBLE1BQU0sQ0FBQzhGLEtBQVAsQ0FBYWdHLElBQWIsRUFBbUJLLElBQW5CLENBQWQ7QUFDRDs7QUFFRG94RSxTQUFPLENBQUNuZ0YsU0FBUixHQUFvQjtBQUNsQm9GLFNBQUssRUFBRSxpQkFBVztBQUNoQixVQUFJLEVBQUUsS0FBSzhKLE1BQVAsS0FBa0IsQ0FBdEIsRUFBeUI7QUFDdkIsYUFBS21FLEtBQUwsR0FBYTJXLFFBQVEsQ0FBQ2ptQixJQUFULENBQWMsSUFBZCxJQUFzQixDQUFuQztBQUNBLGFBQUs0SyxJQUFMLENBQVUsT0FBVjtBQUNEOztBQUNELGFBQU8sSUFBUDtBQUNELEtBUGlCO0FBUWxCOHdFLFFBQUksRUFBRSxjQUFTcnFFLEdBQVQsRUFBYzVNLFNBQWQsRUFBeUI7QUFDN0IsVUFBSSxLQUFLMEksS0FBTCxJQUFja0UsR0FBRyxLQUFLLE9BQTFCLEVBQW1DLEtBQUtsRSxLQUFMLENBQVcsQ0FBWCxJQUFnQjFJLFNBQVMsQ0FBQ3U1QixNQUFWLENBQWlCLEtBQUs3d0IsS0FBTCxDQUFXLENBQVgsQ0FBakIsQ0FBaEI7QUFDbkMsVUFBSSxLQUFLa3ZFLE1BQUwsSUFBZWhyRSxHQUFHLEtBQUssT0FBM0IsRUFBb0MsS0FBS2dyRSxNQUFMLENBQVksQ0FBWixJQUFpQjUzRSxTQUFTLENBQUN1NUIsTUFBVixDQUFpQixLQUFLcStDLE1BQUwsQ0FBWSxDQUFaLENBQWpCLENBQWpCO0FBQ3BDLFVBQUksS0FBS0MsTUFBTCxJQUFlanJFLEdBQUcsS0FBSyxPQUEzQixFQUFvQyxLQUFLaXJFLE1BQUwsQ0FBWSxDQUFaLElBQWlCNzNFLFNBQVMsQ0FBQ3U1QixNQUFWLENBQWlCLEtBQUtzK0MsTUFBTCxDQUFZLENBQVosQ0FBakIsQ0FBakI7QUFDcEMsV0FBSzN4RSxJQUFMLENBQVU4dkUsTUFBVixHQUFtQmgyRSxTQUFuQjtBQUNBLFdBQUttRyxJQUFMLENBQVUsTUFBVjtBQUNBLGFBQU8sSUFBUDtBQUNELEtBZmlCO0FBZ0JsQkgsT0FBRyxFQUFFLGVBQVc7QUFDZCxVQUFJLEVBQUUsS0FBS1UsTUFBUCxLQUFrQixDQUF0QixFQUF5QjtBQUN2QjhhLGdCQUFRLENBQUNxdEIsTUFBVCxDQUFnQixLQUFLaGtDLEtBQXJCLEVBQTRCLENBQTVCO0FBQ0EsYUFBS0EsS0FBTCxHQUFhLENBQUMsQ0FBZDtBQUNBLGFBQUsxRSxJQUFMLENBQVUsS0FBVjtBQUNEOztBQUNELGFBQU8sSUFBUDtBQUNELEtBdkJpQjtBQXdCbEJBLFFBQUksRUFBRSxjQUFTeEQsSUFBVCxFQUFlO0FBQ25CaUUsc0VBQVcsQ0FBQyxJQUFJMnVFLDhDQUFKLENBQWMwQixJQUFkLEVBQW9CdDBFLElBQXBCLEVBQTBCLEtBQUt1RCxJQUFMLENBQVU4dkUsTUFBcEMsQ0FBRCxFQUE4Qy93RSxTQUFTLENBQUMvRSxLQUF4RCxFQUErRCtFLFNBQS9ELEVBQTBFLENBQUN0QyxJQUFELEVBQU8sS0FBS3VELElBQVosRUFBa0IsS0FBS0ssSUFBdkIsQ0FBMUUsQ0FBWDtBQUNEO0FBMUJpQixHQUFwQjs7QUE2QkEsV0FBUzJ3RSxPQUFULEdBQW1CO0FBQ2pCLFFBQUksQ0FBQ3IxRSxNQUFNLENBQUMzQixLQUFQLENBQWEsSUFBYixFQUFtQnpFLFNBQW5CLENBQUwsRUFBb0M7QUFDcEMsUUFBSXFlLENBQUMsR0FBR29JLE9BQU8sQ0FBQyxJQUFELEVBQU96bUIsU0FBUCxDQUFmO0FBQUEsUUFDSXdCLENBQUMsR0FBRyxLQUFLKzRFLE1BRGI7QUFBQSxRQUVJajJFLENBQUMsR0FBR3BHLElBQUksQ0FBQ00sR0FBTCxDQUFTMjhFLFdBQVcsQ0FBQyxDQUFELENBQXBCLEVBQXlCajlFLElBQUksQ0FBQ0ssR0FBTCxDQUFTNDhFLFdBQVcsQ0FBQyxDQUFELENBQXBCLEVBQXlCMzVFLENBQUMsQ0FBQzhDLENBQUYsR0FBTXBHLElBQUksQ0FBQ3dELEdBQUwsQ0FBUyxDQUFULEVBQVl3NUUsVUFBVSxDQUFDejJFLEtBQVgsQ0FBaUIsSUFBakIsRUFBdUJ6RSxTQUF2QixDQUFaLENBQS9CLENBQXpCLENBRlI7QUFBQSxRQUdJYSxDQUFDLEdBQUdvTSwwREFBSyxDQUFDLElBQUQsQ0FIYixDQUZpQixDQU9qQjtBQUNBOztBQUNBLFFBQUlvUixDQUFDLENBQUNnK0QsS0FBTixFQUFhO0FBQ1gsVUFBSWgrRCxDQUFDLENBQUNwUixLQUFGLENBQVEsQ0FBUixFQUFXLENBQVgsTUFBa0JwTSxDQUFDLENBQUMsQ0FBRCxDQUFuQixJQUEwQndkLENBQUMsQ0FBQ3BSLEtBQUYsQ0FBUSxDQUFSLEVBQVcsQ0FBWCxNQUFrQnBNLENBQUMsQ0FBQyxDQUFELENBQWpELEVBQXNEO0FBQ3BEd2QsU0FBQyxDQUFDcFIsS0FBRixDQUFRLENBQVIsSUFBYXpMLENBQUMsQ0FBQ3M4QixNQUFGLENBQVN6ZixDQUFDLENBQUNwUixLQUFGLENBQVEsQ0FBUixJQUFhcE0sQ0FBdEIsQ0FBYjtBQUNEOztBQUNEOE0sa0JBQVksQ0FBQzBRLENBQUMsQ0FBQ2crRCxLQUFILENBQVo7QUFDRCxLQUxELENBT0E7QUFQQSxTQVFLLElBQUk3NkUsQ0FBQyxDQUFDOEMsQ0FBRixLQUFRQSxDQUFaLEVBQWUsT0FBZixDQUVMO0FBRkssV0FHQTtBQUNIK1osV0FBQyxDQUFDcFIsS0FBRixHQUFVLENBQUNwTSxDQUFELEVBQUlXLENBQUMsQ0FBQ3M4QixNQUFGLENBQVNqOUIsQ0FBVCxDQUFKLENBQVY7QUFDQWtLLHlFQUFTLENBQUMsSUFBRCxDQUFUO0FBQ0FzVCxXQUFDLENBQUNsZCxLQUFGO0FBQ0Q7O0FBRURvSyw0REFBTztBQUNQOFMsS0FBQyxDQUFDZytELEtBQUYsR0FBVXp1RSxVQUFVLENBQUMwdUUsVUFBRCxFQUFhZixVQUFiLENBQXBCO0FBQ0FsOUQsS0FBQyxDQUFDbTlELElBQUYsQ0FBTyxPQUFQLEVBQWdCUCxTQUFTLENBQUNueUMsU0FBUyxDQUFDdmxDLEtBQUssQ0FBQy9CLENBQUQsRUFBSThDLENBQUosQ0FBTixFQUFjK1osQ0FBQyxDQUFDcFIsS0FBRixDQUFRLENBQVIsQ0FBZCxFQUEwQm9SLENBQUMsQ0FBQ3BSLEtBQUYsQ0FBUSxDQUFSLENBQTFCLENBQVYsRUFBaURvUixDQUFDLENBQUMxZixNQUFuRCxFQUEyRHE4RSxlQUEzRCxDQUF6Qjs7QUFFQSxhQUFTc0IsVUFBVCxHQUFzQjtBQUNwQmorRCxPQUFDLENBQUNnK0QsS0FBRixHQUFVLElBQVY7QUFDQWgrRCxPQUFDLENBQUM5VCxHQUFGO0FBQ0Q7QUFDRjs7QUFFRCxXQUFTOGIsV0FBVCxHQUF1QjtBQUNyQixRQUFJMWMsV0FBVyxJQUFJLENBQUN2RCxNQUFNLENBQUMzQixLQUFQLENBQWEsSUFBYixFQUFtQnpFLFNBQW5CLENBQXBCLEVBQW1EO0FBQ25ELFFBQUlxZSxDQUFDLEdBQUdvSSxPQUFPLENBQUMsSUFBRCxFQUFPem1CLFNBQVAsQ0FBZjtBQUFBLFFBQ0loQyxDQUFDLEdBQUc0SCwyREFBTSxDQUFDMEMsa0RBQUssQ0FBQytFLElBQVAsQ0FBTixDQUFtQm5ELEVBQW5CLENBQXNCLGdCQUF0QixFQUF3Q3djLFVBQXhDLEVBQW9ELElBQXBELEVBQTBEeGMsRUFBMUQsQ0FBNkQsY0FBN0QsRUFBNkV5YyxVQUE3RSxFQUF5RixJQUF6RixDQURSO0FBQUEsUUFFSTlsQixDQUFDLEdBQUdvTSwwREFBSyxDQUFDLElBQUQsQ0FGYjtBQUFBLFFBR0loTyxFQUFFLEdBQUdxSixrREFBSyxDQUFDdWUsT0FIZjtBQUFBLFFBSUkySyxFQUFFLEdBQUdscEIsa0RBQUssQ0FBQ3dlLE9BSmY7QUFNQXRaLCtEQUFXLENBQUNsRixrREFBSyxDQUFDK0UsSUFBUCxDQUFYO0FBQ0FJLGtFQUFhO0FBQ2I0USxLQUFDLENBQUNwUixLQUFGLEdBQVUsQ0FBQ3BNLENBQUQsRUFBSSxLQUFLMDVFLE1BQUwsQ0FBWXo4QyxNQUFaLENBQW1CajlCLENBQW5CLENBQUosQ0FBVjtBQUNBa0ssbUVBQVMsQ0FBQyxJQUFELENBQVQ7QUFDQXNULEtBQUMsQ0FBQ2xkLEtBQUY7O0FBRUEsYUFBU3VsQixVQUFULEdBQXNCO0FBQ3BCbmIsOERBQU87O0FBQ1AsVUFBSSxDQUFDOFMsQ0FBQyxDQUFDbFIsS0FBUCxFQUFjO0FBQ1osWUFBSVYsRUFBRSxHQUFHbkUsa0RBQUssQ0FBQ3VlLE9BQU4sR0FBZ0I1bkIsRUFBekI7QUFBQSxZQUE2QnlOLEVBQUUsR0FBR3BFLGtEQUFLLENBQUN3ZSxPQUFOLEdBQWdCMEssRUFBbEQ7QUFDQW5ULFNBQUMsQ0FBQ2xSLEtBQUYsR0FBVVYsRUFBRSxHQUFHQSxFQUFMLEdBQVVDLEVBQUUsR0FBR0EsRUFBZixHQUFvQnlaLGNBQTlCO0FBQ0Q7O0FBQ0Q5SCxPQUFDLENBQUNtOUQsSUFBRixDQUFPLE9BQVAsRUFBZ0JQLFNBQVMsQ0FBQ255QyxTQUFTLENBQUN6cUIsQ0FBQyxDQUFDNVQsSUFBRixDQUFPOHZFLE1BQVIsRUFBZ0JsOEQsQ0FBQyxDQUFDcFIsS0FBRixDQUFRLENBQVIsSUFBYUEsMERBQUssQ0FBQ29SLENBQUMsQ0FBQzVULElBQUgsQ0FBbEMsRUFBNEM0VCxDQUFDLENBQUNwUixLQUFGLENBQVEsQ0FBUixDQUE1QyxDQUFWLEVBQW1Fb1IsQ0FBQyxDQUFDMWYsTUFBckUsRUFBNkVxOEUsZUFBN0UsQ0FBekI7QUFDRDs7QUFFRCxhQUFTcjBELFVBQVQsR0FBc0I7QUFDcEIzb0IsT0FBQyxDQUFDa00sRUFBRixDQUFLLDZCQUFMLEVBQW9DLElBQXBDO0FBQ0EyRCxnRUFBVSxDQUFDdkYsa0RBQUssQ0FBQytFLElBQVAsRUFBYWdSLENBQUMsQ0FBQ2xSLEtBQWYsQ0FBVjtBQUNBNUIsOERBQU87QUFDUDhTLE9BQUMsQ0FBQzlULEdBQUY7QUFDRDtBQUNGOztBQUVELFdBQVNteEUsVUFBVCxHQUFzQjtBQUNwQixRQUFJLENBQUN0MUUsTUFBTSxDQUFDM0IsS0FBUCxDQUFhLElBQWIsRUFBbUJ6RSxTQUFuQixDQUFMLEVBQW9DO0FBQ3BDLFFBQUkwZ0IsRUFBRSxHQUFHLEtBQUs2NUQsTUFBZDtBQUFBLFFBQ0lsekQsRUFBRSxHQUFHcGEsMERBQUssQ0FBQyxJQUFELENBRGQ7QUFBQSxRQUVJcTJCLEVBQUUsR0FBRzVpQixFQUFFLENBQUNvZCxNQUFILENBQVV6VyxFQUFWLENBRlQ7QUFBQSxRQUdJMDBELEVBQUUsR0FBR3I3RCxFQUFFLENBQUNwYyxDQUFILElBQVFnRSxrREFBSyxDQUFDdUUsUUFBTixHQUFpQixHQUFqQixHQUF1QixDQUEvQixDQUhUO0FBQUEsUUFJSThULEVBQUUsR0FBR3M2RCxTQUFTLENBQUNueUMsU0FBUyxDQUFDdmxDLEtBQUssQ0FBQ21kLEVBQUQsRUFBS3E3RCxFQUFMLENBQU4sRUFBZ0IxMEQsRUFBaEIsRUFBb0JpYyxFQUFwQixDQUFWLEVBQW1DM2tDLE1BQU0sQ0FBQzhGLEtBQVAsQ0FBYSxJQUFiLEVBQW1CekUsU0FBbkIsQ0FBbkMsRUFBa0VnN0UsZUFBbEUsQ0FKbEI7QUFNQXp2RSw0REFBTztBQUNQLFFBQUltekMsUUFBUSxHQUFHLENBQWYsRUFBa0I5NEMsMkRBQU0sQ0FBQyxJQUFELENBQU4sQ0FBYUksVUFBYixHQUEwQjA0QyxRQUExQixDQUFtQ0EsUUFBbkMsRUFBNkN2K0MsSUFBN0MsQ0FBa0RndkUsUUFBbEQsRUFBNER4dUQsRUFBNUQsRUFBZ0UwRyxFQUFoRSxFQUFsQixLQUNLemhCLDJEQUFNLENBQUMsSUFBRCxDQUFOLENBQWF6RixJQUFiLENBQWtCcTdFLElBQUksQ0FBQ2ozRSxTQUF2QixFQUFrQ29jLEVBQWxDO0FBQ047O0FBRUQsV0FBUzJGLFlBQVQsR0FBd0I7QUFDdEIsUUFBSSxDQUFDbGdCLE1BQU0sQ0FBQzNCLEtBQVAsQ0FBYSxJQUFiLEVBQW1CekUsU0FBbkIsQ0FBTCxFQUFvQztBQUNwQyxRQUFJcWUsQ0FBQyxHQUFHb0ksT0FBTyxDQUFDLElBQUQsRUFBT3ptQixTQUFQLENBQWY7QUFBQSxRQUNJcUwsT0FBTyxHQUFHL0Msa0RBQUssQ0FBQ2dELGNBRHBCO0FBQUEsUUFFSW5CLE9BRko7QUFBQSxRQUdJOUwsQ0FBQyxHQUFHZ04sT0FBTyxDQUFDeE8sTUFIaEI7QUFBQSxRQUd3QmdCLENBSHhCO0FBQUEsUUFHMkIyRCxDQUgzQjtBQUFBLFFBRzhCWCxDQUg5QjtBQUtBNE0sa0VBQWE7O0FBQ2IsU0FBSzVQLENBQUMsR0FBRyxDQUFULEVBQVlBLENBQUMsR0FBR1EsQ0FBaEIsRUFBbUIsRUFBRVIsQ0FBckIsRUFBd0I7QUFDdEIyRCxPQUFDLEdBQUc2SixPQUFPLENBQUN4TixDQUFELENBQVgsRUFBZ0JnRCxDQUFDLEdBQUdvbUIsMERBQUssQ0FBQyxJQUFELEVBQU81YixPQUFQLEVBQWdCN0osQ0FBQyxDQUFDd2xCLFVBQWxCLENBQXpCO0FBQ0FubUIsT0FBQyxHQUFHLENBQUNBLENBQUQsRUFBSSxLQUFLMDVFLE1BQUwsQ0FBWXo4QyxNQUFaLENBQW1CajlCLENBQW5CLENBQUosRUFBMkJXLENBQUMsQ0FBQ3dsQixVQUE3QixDQUFKO0FBQ0EsVUFBSSxDQUFDM0ksQ0FBQyxDQUFDODlELE1BQVAsRUFBZTk5RCxDQUFDLENBQUM4OUQsTUFBRixHQUFXdDdFLENBQVgsRUFBY3NKLE9BQU8sR0FBRyxJQUF4QixDQUFmLEtBQ0ssSUFBSSxDQUFDa1UsQ0FBQyxDQUFDKzlELE1BQVAsRUFBZS85RCxDQUFDLENBQUMrOUQsTUFBRixHQUFXdjdFLENBQVg7QUFDckIsS0FicUIsQ0FldEI7OztBQUNBLFFBQUl3NkUsYUFBSixFQUFtQjtBQUNqQkEsbUJBQWEsR0FBRzF0RSxZQUFZLENBQUMwdEUsYUFBRCxDQUE1Qjs7QUFDQSxVQUFJLENBQUNoOUQsQ0FBQyxDQUFDKzlELE1BQVAsRUFBZTtBQUNiLzlELFNBQUMsQ0FBQzlULEdBQUY7QUFDQTFKLFNBQUMsR0FBRytFLDJEQUFNLENBQUMsSUFBRCxDQUFOLENBQWFzRSxFQUFiLENBQWdCLGVBQWhCLENBQUo7QUFDQSxZQUFJckosQ0FBSixFQUFPQSxDQUFDLENBQUM0RCxLQUFGLENBQVEsSUFBUixFQUFjekUsU0FBZDtBQUNQO0FBQ0Q7QUFDRjs7QUFFRCxRQUFJbUssT0FBSixFQUFhO0FBQ1hreEUsbUJBQWEsR0FBR3p0RSxVQUFVLENBQUMsWUFBVztBQUFFeXRFLHFCQUFhLEdBQUcsSUFBaEI7QUFBdUIsT0FBckMsRUFBdUNDLFVBQXZDLENBQTFCO0FBQ0F2d0UscUVBQVMsQ0FBQyxJQUFELENBQVQ7QUFDQXNULE9BQUMsQ0FBQ2xkLEtBQUY7QUFDRDtBQUNGOztBQUVELFdBQVNvbEIsVUFBVCxHQUFzQjtBQUNwQixRQUFJbEksQ0FBQyxHQUFHb0ksT0FBTyxDQUFDLElBQUQsRUFBT3ptQixTQUFQLENBQWY7QUFBQSxRQUNJcUwsT0FBTyxHQUFHL0Msa0RBQUssQ0FBQ2dELGNBRHBCO0FBQUEsUUFFSWpOLENBQUMsR0FBR2dOLE9BQU8sQ0FBQ3hPLE1BRmhCO0FBQUEsUUFFd0JnQixDQUZ4QjtBQUFBLFFBRTJCMkQsQ0FGM0I7QUFBQSxRQUU4QlgsQ0FGOUI7QUFBQSxRQUVpQzZkLENBRmpDO0FBSUFuVCw0REFBTztBQUNQLFFBQUk4dkUsYUFBSixFQUFtQkEsYUFBYSxHQUFHMXRFLFlBQVksQ0FBQzB0RSxhQUFELENBQTVCOztBQUNuQixTQUFLeDlFLENBQUMsR0FBRyxDQUFULEVBQVlBLENBQUMsR0FBR1EsQ0FBaEIsRUFBbUIsRUFBRVIsQ0FBckIsRUFBd0I7QUFDdEIyRCxPQUFDLEdBQUc2SixPQUFPLENBQUN4TixDQUFELENBQVgsRUFBZ0JnRCxDQUFDLEdBQUdvbUIsMERBQUssQ0FBQyxJQUFELEVBQU81YixPQUFQLEVBQWdCN0osQ0FBQyxDQUFDd2xCLFVBQWxCLENBQXpCO0FBQ0EsVUFBSTNJLENBQUMsQ0FBQzg5RCxNQUFGLElBQVk5OUQsQ0FBQyxDQUFDODlELE1BQUYsQ0FBUyxDQUFULE1BQWdCMzZFLENBQUMsQ0FBQ3dsQixVQUFsQyxFQUE4QzNJLENBQUMsQ0FBQzg5RCxNQUFGLENBQVMsQ0FBVCxJQUFjdDdFLENBQWQsQ0FBOUMsS0FDSyxJQUFJd2QsQ0FBQyxDQUFDKzlELE1BQUYsSUFBWS85RCxDQUFDLENBQUMrOUQsTUFBRixDQUFTLENBQVQsTUFBZ0I1NkUsQ0FBQyxDQUFDd2xCLFVBQWxDLEVBQThDM0ksQ0FBQyxDQUFDKzlELE1BQUYsQ0FBUyxDQUFULElBQWN2N0UsQ0FBZDtBQUNwRDs7QUFDRFcsS0FBQyxHQUFHNmMsQ0FBQyxDQUFDNVQsSUFBRixDQUFPOHZFLE1BQVg7O0FBQ0EsUUFBSWw4RCxDQUFDLENBQUMrOUQsTUFBTixFQUFjO0FBQ1osVUFBSS8wRCxFQUFFLEdBQUdoSixDQUFDLENBQUM4OUQsTUFBRixDQUFTLENBQVQsQ0FBVDtBQUFBLFVBQXNCSSxFQUFFLEdBQUdsK0QsQ0FBQyxDQUFDODlELE1BQUYsQ0FBUyxDQUFULENBQTNCO0FBQUEsVUFDSTc0QyxFQUFFLEdBQUdqbEIsQ0FBQyxDQUFDKzlELE1BQUYsQ0FBUyxDQUFULENBRFQ7QUFBQSxVQUNzQkksRUFBRSxHQUFHbitELENBQUMsQ0FBQys5RCxNQUFGLENBQVMsQ0FBVCxDQUQzQjtBQUFBLFVBRUlLLEVBQUUsR0FBRyxDQUFDQSxFQUFFLEdBQUduNUMsRUFBRSxDQUFDLENBQUQsQ0FBRixHQUFRamMsRUFBRSxDQUFDLENBQUQsQ0FBaEIsSUFBdUJvMUQsRUFBdkIsR0FBNEIsQ0FBQ0EsRUFBRSxHQUFHbjVDLEVBQUUsQ0FBQyxDQUFELENBQUYsR0FBUWpjLEVBQUUsQ0FBQyxDQUFELENBQWhCLElBQXVCbzFELEVBRjVEO0FBQUEsVUFHSUMsRUFBRSxHQUFHLENBQUNBLEVBQUUsR0FBR0YsRUFBRSxDQUFDLENBQUQsQ0FBRixHQUFRRCxFQUFFLENBQUMsQ0FBRCxDQUFoQixJQUF1QkcsRUFBdkIsR0FBNEIsQ0FBQ0EsRUFBRSxHQUFHRixFQUFFLENBQUMsQ0FBRCxDQUFGLEdBQVFELEVBQUUsQ0FBQyxDQUFELENBQWhCLElBQXVCRyxFQUg1RDtBQUlBbDdFLE9BQUMsR0FBRytCLEtBQUssQ0FBQy9CLENBQUQsRUFBSXRELElBQUksQ0FBQ0MsSUFBTCxDQUFVcytFLEVBQUUsR0FBR0MsRUFBZixDQUFKLENBQVQ7QUFDQTc3RSxPQUFDLEdBQUcsQ0FBQyxDQUFDd21CLEVBQUUsQ0FBQyxDQUFELENBQUYsR0FBUWljLEVBQUUsQ0FBQyxDQUFELENBQVgsSUFBa0IsQ0FBbkIsRUFBc0IsQ0FBQ2pjLEVBQUUsQ0FBQyxDQUFELENBQUYsR0FBUWljLEVBQUUsQ0FBQyxDQUFELENBQVgsSUFBa0IsQ0FBeEMsQ0FBSjtBQUNBNWtCLE9BQUMsR0FBRyxDQUFDLENBQUM2OUQsRUFBRSxDQUFDLENBQUQsQ0FBRixHQUFRQyxFQUFFLENBQUMsQ0FBRCxDQUFYLElBQWtCLENBQW5CLEVBQXNCLENBQUNELEVBQUUsQ0FBQyxDQUFELENBQUYsR0FBUUMsRUFBRSxDQUFDLENBQUQsQ0FBWCxJQUFrQixDQUF4QyxDQUFKO0FBQ0QsS0FSRCxNQVNLLElBQUluK0QsQ0FBQyxDQUFDODlELE1BQU4sRUFBY3Q3RSxDQUFDLEdBQUd3ZCxDQUFDLENBQUM4OUQsTUFBRixDQUFTLENBQVQsQ0FBSixFQUFpQno5RCxDQUFDLEdBQUdMLENBQUMsQ0FBQzg5RCxNQUFGLENBQVMsQ0FBVCxDQUFyQixDQUFkLEtBQ0E7O0FBQ0w5OUQsS0FBQyxDQUFDbTlELElBQUYsQ0FBTyxPQUFQLEVBQWdCUCxTQUFTLENBQUNueUMsU0FBUyxDQUFDdG5DLENBQUQsRUFBSVgsQ0FBSixFQUFPNmQsQ0FBUCxDQUFWLEVBQXFCTCxDQUFDLENBQUMxZixNQUF2QixFQUErQnE4RSxlQUEvQixDQUF6QjtBQUNEOztBQUVELFdBQVN4MEQsVUFBVCxHQUFzQjtBQUNwQixRQUFJbkksQ0FBQyxHQUFHb0ksT0FBTyxDQUFDLElBQUQsRUFBT3ptQixTQUFQLENBQWY7QUFBQSxRQUNJcUwsT0FBTyxHQUFHL0Msa0RBQUssQ0FBQ2dELGNBRHBCO0FBQUEsUUFFSWpOLENBQUMsR0FBR2dOLE9BQU8sQ0FBQ3hPLE1BRmhCO0FBQUEsUUFFd0JnQixDQUZ4QjtBQUFBLFFBRTJCMkQsQ0FGM0I7QUFJQWlNLGtFQUFhO0FBQ2IsUUFBSTlELFdBQUosRUFBaUJnRSxZQUFZLENBQUNoRSxXQUFELENBQVo7QUFDakJBLGVBQVcsR0FBR2lFLFVBQVUsQ0FBQyxZQUFXO0FBQUVqRSxpQkFBVyxHQUFHLElBQWQ7QUFBcUIsS0FBbkMsRUFBcUMyeEUsVUFBckMsQ0FBeEI7O0FBQ0EsU0FBS3o5RSxDQUFDLEdBQUcsQ0FBVCxFQUFZQSxDQUFDLEdBQUdRLENBQWhCLEVBQW1CLEVBQUVSLENBQXJCLEVBQXdCO0FBQ3RCMkQsT0FBQyxHQUFHNkosT0FBTyxDQUFDeE4sQ0FBRCxDQUFYO0FBQ0EsVUFBSXdnQixDQUFDLENBQUM4OUQsTUFBRixJQUFZOTlELENBQUMsQ0FBQzg5RCxNQUFGLENBQVMsQ0FBVCxNQUFnQjM2RSxDQUFDLENBQUN3bEIsVUFBbEMsRUFBOEMsT0FBTzNJLENBQUMsQ0FBQzg5RCxNQUFULENBQTlDLEtBQ0ssSUFBSTk5RCxDQUFDLENBQUMrOUQsTUFBRixJQUFZLzlELENBQUMsQ0FBQys5RCxNQUFGLENBQVMsQ0FBVCxNQUFnQjU2RSxDQUFDLENBQUN3bEIsVUFBbEMsRUFBOEMsT0FBTzNJLENBQUMsQ0FBQys5RCxNQUFUO0FBQ3BEOztBQUNELFFBQUkvOUQsQ0FBQyxDQUFDKzlELE1BQUYsSUFBWSxDQUFDLzlELENBQUMsQ0FBQzg5RCxNQUFuQixFQUEyQjk5RCxDQUFDLENBQUM4OUQsTUFBRixHQUFXOTlELENBQUMsQ0FBQys5RCxNQUFiLEVBQXFCLE9BQU8vOUQsQ0FBQyxDQUFDKzlELE1BQTlCO0FBQzNCLFFBQUkvOUQsQ0FBQyxDQUFDODlELE1BQU4sRUFBYzk5RCxDQUFDLENBQUM4OUQsTUFBRixDQUFTLENBQVQsSUFBYyxLQUFLNUIsTUFBTCxDQUFZejhDLE1BQVosQ0FBbUJ6ZixDQUFDLENBQUM4OUQsTUFBRixDQUFTLENBQVQsQ0FBbkIsQ0FBZCxDQUFkLEtBQ0s5OUQsQ0FBQyxDQUFDOVQsR0FBRjtBQUNOOztBQUVEaXhFLE1BQUksQ0FBQ04sVUFBTCxHQUFrQixVQUFTbjdFLENBQVQsRUFBWTtBQUM1QixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9CcStFLFVBQVUsR0FBRyxPQUFPbjdFLENBQVAsS0FBYSxVQUFiLEdBQTBCQSxDQUExQixHQUE4QkUseURBQVEsQ0FBQyxDQUFDRixDQUFGLENBQW5ELEVBQXlEeTdFLElBQTdFLElBQXFGTixVQUE1RjtBQUNELEdBRkQ7O0FBSUFNLE1BQUksQ0FBQ3AxRSxNQUFMLEdBQWMsVUFBU3JHLENBQVQsRUFBWTtBQUN4QixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9CdUosTUFBTSxHQUFHLE9BQU9yRyxDQUFQLEtBQWEsVUFBYixHQUEwQkEsQ0FBMUIsR0FBOEJFLHlEQUFRLENBQUMsQ0FBQyxDQUFDRixDQUFILENBQS9DLEVBQXNEeTdFLElBQTFFLElBQWtGcDFFLE1BQXpGO0FBQ0QsR0FGRDs7QUFJQW8xRSxNQUFJLENBQUMxMUQsU0FBTCxHQUFpQixVQUFTL2xCLENBQVQsRUFBWTtBQUMzQixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9CaXBCLFNBQVMsR0FBRyxPQUFPL2xCLENBQVAsS0FBYSxVQUFiLEdBQTBCQSxDQUExQixHQUE4QkUseURBQVEsQ0FBQyxDQUFDLENBQUNGLENBQUgsQ0FBbEQsRUFBeUR5N0UsSUFBN0UsSUFBcUYxMUQsU0FBNUY7QUFDRCxHQUZEOztBQUlBMDFELE1BQUksQ0FBQzc4RSxNQUFMLEdBQWMsVUFBU29CLENBQVQsRUFBWTtBQUN4QixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9COEIsTUFBTSxHQUFHLE9BQU9vQixDQUFQLEtBQWEsVUFBYixHQUEwQkEsQ0FBMUIsR0FBOEJFLHlEQUFRLENBQUMsQ0FBQyxDQUFDLENBQUNGLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBSyxDQUFMLENBQUYsRUFBVyxDQUFDQSxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUssQ0FBTCxDQUFaLENBQUQsRUFBdUIsQ0FBQyxDQUFDQSxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUssQ0FBTCxDQUFGLEVBQVcsQ0FBQ0EsQ0FBQyxDQUFDLENBQUQsQ0FBRCxDQUFLLENBQUwsQ0FBWixDQUF2QixDQUFELENBQS9DLEVBQStGeTdFLElBQW5ILElBQTJINzhFLE1BQWxJO0FBQ0QsR0FGRDs7QUFJQTY4RSxNQUFJLENBQUNMLFdBQUwsR0FBbUIsVUFBU3A3RSxDQUFULEVBQVk7QUFDN0IsV0FBT0MsU0FBUyxDQUFDbkQsTUFBVixJQUFvQnMrRSxXQUFXLENBQUMsQ0FBRCxDQUFYLEdBQWlCLENBQUNwN0UsQ0FBQyxDQUFDLENBQUQsQ0FBbkIsRUFBd0JvN0UsV0FBVyxDQUFDLENBQUQsQ0FBWCxHQUFpQixDQUFDcDdFLENBQUMsQ0FBQyxDQUFELENBQTNDLEVBQWdEeTdFLElBQXBFLElBQTRFLENBQUNMLFdBQVcsQ0FBQyxDQUFELENBQVosRUFBaUJBLFdBQVcsQ0FBQyxDQUFELENBQTVCLENBQW5GO0FBQ0QsR0FGRDs7QUFJQUssTUFBSSxDQUFDUixlQUFMLEdBQXVCLFVBQVNqN0UsQ0FBVCxFQUFZO0FBQ2pDLFdBQU9DLFNBQVMsQ0FBQ25ELE1BQVYsSUFBb0JtK0UsZUFBZSxDQUFDLENBQUQsQ0FBZixDQUFtQixDQUFuQixJQUF3QixDQUFDajdFLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBSyxDQUFMLENBQXpCLEVBQWtDaTdFLGVBQWUsQ0FBQyxDQUFELENBQWYsQ0FBbUIsQ0FBbkIsSUFBd0IsQ0FBQ2o3RSxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUssQ0FBTCxDQUEzRCxFQUFvRWk3RSxlQUFlLENBQUMsQ0FBRCxDQUFmLENBQW1CLENBQW5CLElBQXdCLENBQUNqN0UsQ0FBQyxDQUFDLENBQUQsQ0FBRCxDQUFLLENBQUwsQ0FBN0YsRUFBc0dpN0UsZUFBZSxDQUFDLENBQUQsQ0FBZixDQUFtQixDQUFuQixJQUF3QixDQUFDajdFLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBSyxDQUFMLENBQS9ILEVBQXdJeTdFLElBQTVKLElBQW9LLENBQUMsQ0FBQ1IsZUFBZSxDQUFDLENBQUQsQ0FBZixDQUFtQixDQUFuQixDQUFELEVBQXdCQSxlQUFlLENBQUMsQ0FBRCxDQUFmLENBQW1CLENBQW5CLENBQXhCLENBQUQsRUFBaUQsQ0FBQ0EsZUFBZSxDQUFDLENBQUQsQ0FBZixDQUFtQixDQUFuQixDQUFELEVBQXdCQSxlQUFlLENBQUMsQ0FBRCxDQUFmLENBQW1CLENBQW5CLENBQXhCLENBQWpELENBQTNLO0FBQ0QsR0FGRDs7QUFJQVEsTUFBSSxDQUFDUCxTQUFMLEdBQWlCLFVBQVNsN0UsQ0FBVCxFQUFZO0FBQzNCLFdBQU9DLFNBQVMsQ0FBQ25ELE1BQVYsSUFBb0JvK0UsU0FBUyxHQUFHbDdFLENBQVosRUFBZXk3RSxJQUFuQyxJQUEyQ1AsU0FBbEQ7QUFDRCxHQUZEOztBQUlBTyxNQUFJLENBQUM5OEIsUUFBTCxHQUFnQixVQUFTMytDLENBQVQsRUFBWTtBQUMxQixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9CNmhELFFBQVEsR0FBRyxDQUFDMytDLENBQVosRUFBZXk3RSxJQUFuQyxJQUEyQzk4QixRQUFsRDtBQUNELEdBRkQ7O0FBSUE4OEIsTUFBSSxDQUFDM3dFLFdBQUwsR0FBbUIsVUFBUzlLLENBQVQsRUFBWTtBQUM3QixXQUFPQyxTQUFTLENBQUNuRCxNQUFWLElBQW9CZ08sV0FBVyxHQUFHOUssQ0FBZCxFQUFpQnk3RSxJQUFyQyxJQUE2QzN3RSxXQUFwRDtBQUNELEdBRkQ7O0FBSUEyd0UsTUFBSSxDQUFDdHhFLEVBQUwsR0FBVSxZQUFXO0FBQ25CLFFBQUk1TCxLQUFLLEdBQUdrTCxTQUFTLENBQUNVLEVBQVYsQ0FBYXpGLEtBQWIsQ0FBbUIrRSxTQUFuQixFQUE4QnhKLFNBQTlCLENBQVo7QUFDQSxXQUFPMUIsS0FBSyxLQUFLa0wsU0FBVixHQUFzQmd5RSxJQUF0QixHQUE2Qmw5RSxLQUFwQztBQUNELEdBSEQ7O0FBS0FrOUUsTUFBSSxDQUFDbDBELGFBQUwsR0FBcUIsVUFBU3ZuQixDQUFULEVBQVk7QUFDL0IsV0FBT0MsU0FBUyxDQUFDbkQsTUFBVixJQUFvQnNwQixjQUFjLEdBQUcsQ0FBQ3BtQixDQUFDLEdBQUcsQ0FBQ0EsQ0FBTixJQUFXQSxDQUE1QixFQUErQnk3RSxJQUFuRCxJQUEyRHQ5RSxJQUFJLENBQUNDLElBQUwsQ0FBVWdvQixjQUFWLENBQWxFO0FBQ0QsR0FGRDs7QUFJQSxTQUFPcTFELElBQVA7QUFDRCxDOzs7Ozs7Ozs7Ozs7QUN4YUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBTyxJQUFJNTBFLElBQUksR0FBRyxJQUFYO0FBQ0EsSUFBSSsxRSxPQUFPLEdBQUcsT0FBZDtBQUNBLElBQUlDLFdBQVcsR0FBRyx1QkFBbEI7QUFDQSxJQUFJQyxRQUFRLEdBQUcsQ0FBQyxLQUFELEVBQU8sZUFBUCxFQUF1QixLQUF2QixFQUE2QixXQUE3QixFQUF5QyxRQUF6QyxDQUFmO0FBQ0EsSUFBSUMsUUFBUSxHQUFHLGtCQUFmO0FBQ0EsSUFBSUMsT0FBTyxHQUFHLGNBQWQ7QUFDQSxJQUFJQyxNQUFNLEdBQUc7QUFBQyxVQUFPLGNBQVI7QUFBdUIsU0FBTTtBQUE3QixDQUFiO0FBQ0EsSUFBSUMsSUFBSSxHQUFHLGlCQUFYO0FBQ0EsSUFBSUMsS0FBSyxHQUFHLGdCQUFaO0FBQ0EsSUFBSUMsUUFBUSxHQUFHLGdCQUFmO0FBQ0EsSUFBSUMsTUFBTSxHQUFHLFVBQWI7QUFDQSxJQUFJQyxVQUFVLEdBQUc7QUFBQyxVQUFPLEtBQVI7QUFBYyxTQUFNO0FBQXBCLENBQWpCO0FBQ0EsSUFBSUMsT0FBTyxHQUFHO0FBQUMsYUFBVSw2RkFBWDtBQUF5RyxVQUFPLDBCQUFoSDtBQUEySSxvQkFBaUIsd0JBQTVKO0FBQXFMLGlCQUFjO0FBQW5NLENBQWQ7QUFDQSxJQUFJQyxlQUFlLEdBQUc7QUFBQyxpQkFBYyxLQUFmO0FBQXFCLFlBQVMsR0FBOUI7QUFBa0MsWUFBUyxNQUEzQztBQUFrRCx5QkFBc0IsS0FBeEU7QUFBOEUsZ0NBQTZCLEdBQTNHO0FBQStHLDBCQUF1QixHQUF0STtBQUEwSSxVQUFPO0FBQWpKLENBQXRCO0FBQ0EsSUFBSUMsWUFBWSxHQUFHO0FBQUMsY0FBVyxHQUFaO0FBQWdCLGFBQVUsR0FBMUI7QUFBOEIsY0FBVyxHQUF6QztBQUE2QyxjQUFXLEdBQXhEO0FBQTRELG1CQUFnQixHQUE1RTtBQUFnRixjQUFXLEdBQTNGO0FBQStGLGdCQUFhLEdBQTVHO0FBQWdILGlCQUFjLEdBQTlIO0FBQWtJLGFBQVUsR0FBNUk7QUFBZ0osWUFBUyxHQUF6SjtBQUE2SixhQUFVLEdBQXZLO0FBQTJLLGNBQVcsR0FBdEw7QUFBMEwsY0FBVyxHQUFyTTtBQUF5TSxlQUFZLEdBQXJOO0FBQXlOLFlBQVMsR0FBbE87QUFBc08sa0JBQWUsR0FBclA7QUFBeVAsb0JBQWlCLEdBQTFRO0FBQThRLGFBQVUsR0FBeFI7QUFBNFIsZ0JBQWEsR0FBelM7QUFBNlMsaUJBQWMsR0FBM1Q7QUFBK1QsZUFBWSxHQUEzVTtBQUErVSxjQUFXLEdBQTFWO0FBQThWLHdCQUFxQixHQUFuWDtBQUF1WCxrQkFBZSxHQUF0WTtBQUEwWSxjQUFXLEdBQXJaO0FBQXlaLGFBQVUsR0FBbmE7QUFBdWEsb0JBQWlCLEdBQXhiO0FBQTRiLGNBQVcsR0FBdmM7QUFBMmMsbUJBQWdCLEdBQTNkO0FBQStkLGdCQUFhLEdBQTVlO0FBQWdmLGFBQVU7QUFBMWYsQ0FBbkIsQzs7Ozs7Ozs7Ozs7O0FDZFA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFB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RCxjQUFULENBQXdCLGFBQXhCLEVBQXVDbjBFLEtBQXZDLENBQTZDbTdFLE9BQTdDLEdBQXVELE9BQXZEO0FBR0QsR0E1QkQsRUE0QkcsS0E1Qkg7QUFpQ0EsTUFBTUMsZ0JBQWdCLEdBQUc3OUQsUUFBUSxDQUFDNDJELGNBQVQsQ0FBd0IsVUFBeEIsQ0FBekI7O0FBQ0FpSCxrQkFBZ0IsQ0FBQ0MsUUFBakIsR0FBNEIsWUFBWTtBQUN0QyxRQUFNckQsWUFBWSxHQUFHLEtBQUtzRCxPQUFMLENBQWEsS0FBS0MsYUFBbEIsRUFBaUNsbkYsS0FBdEQ7QUFDQTBsRixlQUFXLENBQUM3MEIsTUFBWixDQUFtQjh5QixZQUFuQjtBQUNBK0IsZUFBVyxDQUFDSSxjQUFaO0FBQ0E1OEQsWUFBUSxDQUFDNDJELGNBQVQsQ0FBd0IsSUFBeEIsRUFBOEJ6bkIsV0FBOUIsR0FBNENzckIsWUFBWSxHQUFHLFVBQTNEO0FBQ0QsR0FMRDtBQVFELENBekhELEkiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vc3JjL2luZGV4LmpzXCIpO1xuIiwidmFyIGFycmF5ID0gQXJyYXkucHJvdG90eXBlO1xuXG5leHBvcnQgdmFyIHNsaWNlID0gYXJyYXkuc2xpY2U7XG5leHBvcnQgdmFyIG1hcCA9IGFycmF5Lm1hcDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiBhID49IGIgPyAwIDogTmFOO1xufVxuIiwiaW1wb3J0IGFzY2VuZGluZyBmcm9tIFwiLi9hc2NlbmRpbmdcIjtcbmltcG9ydCBiaXNlY3RvciBmcm9tIFwiLi9iaXNlY3RvclwiO1xuXG52YXIgYXNjZW5kaW5nQmlzZWN0ID0gYmlzZWN0b3IoYXNjZW5kaW5nKTtcbmV4cG9ydCB2YXIgYmlzZWN0UmlnaHQgPSBhc2NlbmRpbmdCaXNlY3QucmlnaHQ7XG5leHBvcnQgdmFyIGJpc2VjdExlZnQgPSBhc2NlbmRpbmdCaXNlY3QubGVmdDtcbmV4cG9ydCBkZWZhdWx0IGJpc2VjdFJpZ2h0O1xuIiwiaW1wb3J0IGFzY2VuZGluZyBmcm9tIFwiLi9hc2NlbmRpbmdcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29tcGFyZSkge1xuICBpZiAoY29tcGFyZS5sZW5ndGggPT09IDEpIGNvbXBhcmUgPSBhc2NlbmRpbmdDb21wYXJhdG9yKGNvbXBhcmUpO1xuICByZXR1cm4ge1xuICAgIGxlZnQ6IGZ1bmN0aW9uKGEsIHgsIGxvLCBoaSkge1xuICAgICAgaWYgKGxvID09IG51bGwpIGxvID0gMDtcbiAgICAgIGlmIChoaSA9PSBudWxsKSBoaSA9IGEubGVuZ3RoO1xuICAgICAgd2hpbGUgKGxvIDwgaGkpIHtcbiAgICAgICAgdmFyIG1pZCA9IGxvICsgaGkgPj4+IDE7XG4gICAgICAgIGlmIChjb21wYXJlKGFbbWlkXSwgeCkgPCAwKSBsbyA9IG1pZCArIDE7XG4gICAgICAgIGVsc2UgaGkgPSBtaWQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gbG87XG4gICAgfSxcbiAgICByaWdodDogZnVuY3Rpb24oYSwgeCwgbG8sIGhpKSB7XG4gICAgICBpZiAobG8gPT0gbnVsbCkgbG8gPSAwO1xuICAgICAgaWYgKGhpID09IG51bGwpIGhpID0gYS5sZW5ndGg7XG4gICAgICB3aGlsZSAobG8gPCBoaSkge1xuICAgICAgICB2YXIgbWlkID0gbG8gKyBoaSA+Pj4gMTtcbiAgICAgICAgaWYgKGNvbXBhcmUoYVttaWRdLCB4KSA+IDApIGhpID0gbWlkO1xuICAgICAgICBlbHNlIGxvID0gbWlkICsgMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBsbztcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGFzY2VuZGluZ0NvbXBhcmF0b3IoZikge1xuICByZXR1cm4gZnVuY3Rpb24oZCwgeCkge1xuICAgIHJldHVybiBhc2NlbmRpbmcoZihkKSwgeCk7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImltcG9ydCB7cGFpcn0gZnJvbSBcIi4vcGFpcnNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzMCwgdmFsdWVzMSwgcmVkdWNlKSB7XG4gIHZhciBuMCA9IHZhbHVlczAubGVuZ3RoLFxuICAgICAgbjEgPSB2YWx1ZXMxLmxlbmd0aCxcbiAgICAgIHZhbHVlcyA9IG5ldyBBcnJheShuMCAqIG4xKSxcbiAgICAgIGkwLFxuICAgICAgaTEsXG4gICAgICBpLFxuICAgICAgdmFsdWUwO1xuXG4gIGlmIChyZWR1Y2UgPT0gbnVsbCkgcmVkdWNlID0gcGFpcjtcblxuICBmb3IgKGkwID0gaSA9IDA7IGkwIDwgbjA7ICsraTApIHtcbiAgICBmb3IgKHZhbHVlMCA9IHZhbHVlczBbaTBdLCBpMSA9IDA7IGkxIDwgbjE7ICsraTEsICsraSkge1xuICAgICAgdmFsdWVzW2ldID0gcmVkdWNlKHZhbHVlMCwgdmFsdWVzMVtpMV0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB2YWx1ZXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBiIDwgYSA/IC0xIDogYiA+IGEgPyAxIDogYiA+PSBhID8gMCA6IE5hTjtcbn1cbiIsImltcG9ydCB2YXJpYW5jZSBmcm9tIFwiLi92YXJpYW5jZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhcnJheSwgZikge1xuICB2YXIgdiA9IHZhcmlhbmNlKGFycmF5LCBmKTtcbiAgcmV0dXJuIHYgPyBNYXRoLnNxcnQodikgOiB2O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCB2YWx1ZW9mKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCxcbiAgICAgIGkgPSAtMSxcbiAgICAgIHZhbHVlLFxuICAgICAgbWluLFxuICAgICAgbWF4O1xuXG4gIGlmICh2YWx1ZW9mID09IG51bGwpIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlc1tpXSkgIT0gbnVsbCAmJiB2YWx1ZSA+PSB2YWx1ZSkge1xuICAgICAgICBtaW4gPSBtYXggPSB2YWx1ZTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy5cbiAgICAgICAgICBpZiAoKHZhbHVlID0gdmFsdWVzW2ldKSAhPSBudWxsKSB7XG4gICAgICAgICAgICBpZiAobWluID4gdmFsdWUpIG1pbiA9IHZhbHVlO1xuICAgICAgICAgICAgaWYgKG1heCA8IHZhbHVlKSBtYXggPSB2YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlbHNlIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSAhPSBudWxsICYmIHZhbHVlID49IHZhbHVlKSB7XG4gICAgICAgIG1pbiA9IG1heCA9IHZhbHVlO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBDb21wYXJlIHRoZSByZW1haW5pbmcgdmFsdWVzLlxuICAgICAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKG1pbiA+IHZhbHVlKSBtaW4gPSB2YWx1ZTtcbiAgICAgICAgICAgIGlmIChtYXggPCB2YWx1ZSkgbWF4ID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIFttaW4sIG1heF07XG59XG4iLCJpbXBvcnQge3NsaWNlfSBmcm9tIFwiLi9hcnJheVwiO1xuaW1wb3J0IGJpc2VjdCBmcm9tIFwiLi9iaXNlY3RcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IGV4dGVudCBmcm9tIFwiLi9leHRlbnRcIjtcbmltcG9ydCBpZGVudGl0eSBmcm9tIFwiLi9pZGVudGl0eVwiO1xuaW1wb3J0IHJhbmdlIGZyb20gXCIuL3JhbmdlXCI7XG5pbXBvcnQge3RpY2tTdGVwfSBmcm9tIFwiLi90aWNrc1wiO1xuaW1wb3J0IHN0dXJnZXMgZnJvbSBcIi4vdGhyZXNob2xkL3N0dXJnZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciB2YWx1ZSA9IGlkZW50aXR5LFxuICAgICAgZG9tYWluID0gZXh0ZW50LFxuICAgICAgdGhyZXNob2xkID0gc3R1cmdlcztcblxuICBmdW5jdGlvbiBoaXN0b2dyYW0oZGF0YSkge1xuICAgIHZhciBpLFxuICAgICAgICBuID0gZGF0YS5sZW5ndGgsXG4gICAgICAgIHgsXG4gICAgICAgIHZhbHVlcyA9IG5ldyBBcnJheShuKTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHZhbHVlc1tpXSA9IHZhbHVlKGRhdGFbaV0sIGksIGRhdGEpO1xuICAgIH1cblxuICAgIHZhciB4eiA9IGRvbWFpbih2YWx1ZXMpLFxuICAgICAgICB4MCA9IHh6WzBdLFxuICAgICAgICB4MSA9IHh6WzFdLFxuICAgICAgICB0eiA9IHRocmVzaG9sZCh2YWx1ZXMsIHgwLCB4MSk7XG5cbiAgICAvLyBDb252ZXJ0IG51bWJlciBvZiB0aHJlc2hvbGRzIGludG8gdW5pZm9ybSB0aHJlc2hvbGRzLlxuICAgIGlmICghQXJyYXkuaXNBcnJheSh0eikpIHtcbiAgICAgIHR6ID0gdGlja1N0ZXAoeDAsIHgxLCB0eik7XG4gICAgICB0eiA9IHJhbmdlKE1hdGguY2VpbCh4MCAvIHR6KSAqIHR6LCB4MSwgdHopOyAvLyBleGNsdXNpdmVcbiAgICB9XG5cbiAgICAvLyBSZW1vdmUgYW55IHRocmVzaG9sZHMgb3V0c2lkZSB0aGUgZG9tYWluLlxuICAgIHZhciBtID0gdHoubGVuZ3RoO1xuICAgIHdoaWxlICh0elswXSA8PSB4MCkgdHouc2hpZnQoKSwgLS1tO1xuICAgIHdoaWxlICh0elttIC0gMV0gPiB4MSkgdHoucG9wKCksIC0tbTtcblxuICAgIHZhciBiaW5zID0gbmV3IEFycmF5KG0gKyAxKSxcbiAgICAgICAgYmluO1xuXG4gICAgLy8gSW5pdGlhbGl6ZSBiaW5zLlxuICAgIGZvciAoaSA9IDA7IGkgPD0gbTsgKytpKSB7XG4gICAgICBiaW4gPSBiaW5zW2ldID0gW107XG4gICAgICBiaW4ueDAgPSBpID4gMCA/IHR6W2kgLSAxXSA6IHgwO1xuICAgICAgYmluLngxID0gaSA8IG0gPyB0eltpXSA6IHgxO1xuICAgIH1cblxuICAgIC8vIEFzc2lnbiBkYXRhIHRvIGJpbnMgYnkgdmFsdWUsIGlnbm9yaW5nIGFueSBvdXRzaWRlIHRoZSBkb21haW4uXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgeCA9IHZhbHVlc1tpXTtcbiAgICAgIGlmICh4MCA8PSB4ICYmIHggPD0geDEpIHtcbiAgICAgICAgYmluc1tiaXNlY3QodHosIHgsIDAsIG0pXS5wdXNoKGRhdGFbaV0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBiaW5zO1xuICB9XG5cbiAgaGlzdG9ncmFtLnZhbHVlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHZhbHVlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgaGlzdG9ncmFtKSA6IHZhbHVlO1xuICB9O1xuXG4gIGhpc3RvZ3JhbS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZG9tYWluID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChbX1swXSwgX1sxXV0pLCBoaXN0b2dyYW0pIDogZG9tYWluO1xuICB9O1xuXG4gIGhpc3RvZ3JhbS50aHJlc2hvbGRzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRocmVzaG9sZCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogQXJyYXkuaXNBcnJheShfKSA/IGNvbnN0YW50KHNsaWNlLmNhbGwoXykpIDogY29uc3RhbnQoXyksIGhpc3RvZ3JhbSkgOiB0aHJlc2hvbGQ7XG4gIH07XG5cbiAgcmV0dXJuIGhpc3RvZ3JhbTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIHg7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgYmlzZWN0LCBiaXNlY3RSaWdodCwgYmlzZWN0TGVmdH0gZnJvbSBcIi4vYmlzZWN0XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgYXNjZW5kaW5nfSBmcm9tIFwiLi9hc2NlbmRpbmdcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBiaXNlY3Rvcn0gZnJvbSBcIi4vYmlzZWN0b3JcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjcm9zc30gZnJvbSBcIi4vY3Jvc3NcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBkZXNjZW5kaW5nfSBmcm9tIFwiLi9kZXNjZW5kaW5nXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZGV2aWF0aW9ufSBmcm9tIFwiLi9kZXZpYXRpb25cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBleHRlbnR9IGZyb20gXCIuL2V4dGVudFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGhpc3RvZ3JhbX0gZnJvbSBcIi4vaGlzdG9ncmFtXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdGhyZXNob2xkRnJlZWRtYW5EaWFjb25pc30gZnJvbSBcIi4vdGhyZXNob2xkL2ZyZWVkbWFuRGlhY29uaXNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0aHJlc2hvbGRTY290dH0gZnJvbSBcIi4vdGhyZXNob2xkL3Njb3R0XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdGhyZXNob2xkU3R1cmdlc30gZnJvbSBcIi4vdGhyZXNob2xkL3N0dXJnZXNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBtYXh9IGZyb20gXCIuL21heFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1lYW59IGZyb20gXCIuL21lYW5cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBtZWRpYW59IGZyb20gXCIuL21lZGlhblwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1lcmdlfSBmcm9tIFwiLi9tZXJnZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1pbn0gZnJvbSBcIi4vbWluXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGFpcnN9IGZyb20gXCIuL3BhaXJzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGVybXV0ZX0gZnJvbSBcIi4vcGVybXV0ZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHF1YW50aWxlfSBmcm9tIFwiLi9xdWFudGlsZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHJhbmdlfSBmcm9tIFwiLi9yYW5nZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNjYW59IGZyb20gXCIuL3NjYW5cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzaHVmZmxlfSBmcm9tIFwiLi9zaHVmZmxlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3VtfSBmcm9tIFwiLi9zdW1cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0aWNrcywgdGlja0luY3JlbWVudCwgdGlja1N0ZXB9IGZyb20gXCIuL3RpY2tzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJhbnNwb3NlfSBmcm9tIFwiLi90cmFuc3Bvc2VcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB2YXJpYW5jZX0gZnJvbSBcIi4vdmFyaWFuY2VcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB6aXB9IGZyb20gXCIuL3ppcFwiO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCB2YWx1ZW9mKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCxcbiAgICAgIGkgPSAtMSxcbiAgICAgIHZhbHVlLFxuICAgICAgbWF4O1xuXG4gIGlmICh2YWx1ZW9mID09IG51bGwpIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlc1tpXSkgIT0gbnVsbCAmJiB2YWx1ZSA+PSB2YWx1ZSkge1xuICAgICAgICBtYXggPSB2YWx1ZTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy5cbiAgICAgICAgICBpZiAoKHZhbHVlID0gdmFsdWVzW2ldKSAhPSBudWxsICYmIHZhbHVlID4gbWF4KSB7XG4gICAgICAgICAgICBtYXggPSB2YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlbHNlIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSAhPSBudWxsICYmIHZhbHVlID49IHZhbHVlKSB7XG4gICAgICAgIG1heCA9IHZhbHVlO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBDb21wYXJlIHRoZSByZW1haW5pbmcgdmFsdWVzLlxuICAgICAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkgIT0gbnVsbCAmJiB2YWx1ZSA+IG1heCkge1xuICAgICAgICAgICAgbWF4ID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1heDtcbn1cbiIsImltcG9ydCBudW1iZXIgZnJvbSBcIi4vbnVtYmVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgdmFsdWVvZikge1xuICB2YXIgbiA9IHZhbHVlcy5sZW5ndGgsXG4gICAgICBtID0gbixcbiAgICAgIGkgPSAtMSxcbiAgICAgIHZhbHVlLFxuICAgICAgc3VtID0gMDtcblxuICBpZiAodmFsdWVvZiA9PSBudWxsKSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICghaXNOYU4odmFsdWUgPSBudW1iZXIodmFsdWVzW2ldKSkpIHN1bSArPSB2YWx1ZTtcbiAgICAgIGVsc2UgLS1tO1xuICAgIH1cbiAgfVxuXG4gIGVsc2Uge1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAoIWlzTmFOKHZhbHVlID0gbnVtYmVyKHZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSkpIHN1bSArPSB2YWx1ZTtcbiAgICAgIGVsc2UgLS1tO1xuICAgIH1cbiAgfVxuXG4gIGlmIChtKSByZXR1cm4gc3VtIC8gbTtcbn1cbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nXCI7XG5pbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlclwiO1xuaW1wb3J0IHF1YW50aWxlIGZyb20gXCIuL3F1YW50aWxlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgdmFsdWVvZikge1xuICB2YXIgbiA9IHZhbHVlcy5sZW5ndGgsXG4gICAgICBpID0gLTEsXG4gICAgICB2YWx1ZSxcbiAgICAgIG51bWJlcnMgPSBbXTtcblxuICBpZiAodmFsdWVvZiA9PSBudWxsKSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICghaXNOYU4odmFsdWUgPSBudW1iZXIodmFsdWVzW2ldKSkpIHtcbiAgICAgICAgbnVtYmVycy5wdXNoKHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlbHNlIHtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgaWYgKCFpc05hTih2YWx1ZSA9IG51bWJlcih2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkpKSB7XG4gICAgICAgIG51bWJlcnMucHVzaCh2YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHF1YW50aWxlKG51bWJlcnMuc29ydChhc2NlbmRpbmcpLCAwLjUpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYXJyYXlzKSB7XG4gIHZhciBuID0gYXJyYXlzLmxlbmd0aCxcbiAgICAgIG0sXG4gICAgICBpID0gLTEsXG4gICAgICBqID0gMCxcbiAgICAgIG1lcmdlZCxcbiAgICAgIGFycmF5O1xuXG4gIHdoaWxlICgrK2kgPCBuKSBqICs9IGFycmF5c1tpXS5sZW5ndGg7XG4gIG1lcmdlZCA9IG5ldyBBcnJheShqKTtcblxuICB3aGlsZSAoLS1uID49IDApIHtcbiAgICBhcnJheSA9IGFycmF5c1tuXTtcbiAgICBtID0gYXJyYXkubGVuZ3RoO1xuICAgIHdoaWxlICgtLW0gPj0gMCkge1xuICAgICAgbWVyZ2VkWy0tal0gPSBhcnJheVttXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VkO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCB2YWx1ZW9mKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCxcbiAgICAgIGkgPSAtMSxcbiAgICAgIHZhbHVlLFxuICAgICAgbWluO1xuXG4gIGlmICh2YWx1ZW9mID09IG51bGwpIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlc1tpXSkgIT0gbnVsbCAmJiB2YWx1ZSA+PSB2YWx1ZSkge1xuICAgICAgICBtaW4gPSB2YWx1ZTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy5cbiAgICAgICAgICBpZiAoKHZhbHVlID0gdmFsdWVzW2ldKSAhPSBudWxsICYmIG1pbiA+IHZhbHVlKSB7XG4gICAgICAgICAgICBtaW4gPSB2YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlbHNlIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSAhPSBudWxsICYmIHZhbHVlID49IHZhbHVlKSB7XG4gICAgICAgIG1pbiA9IHZhbHVlO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBDb21wYXJlIHRoZSByZW1haW5pbmcgdmFsdWVzLlxuICAgICAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkgIT0gbnVsbCAmJiBtaW4gPiB2YWx1ZSkge1xuICAgICAgICAgICAgbWluID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1pbjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIHggPT09IG51bGwgPyBOYU4gOiAreDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGFycmF5LCBmKSB7XG4gIGlmIChmID09IG51bGwpIGYgPSBwYWlyO1xuICB2YXIgaSA9IDAsIG4gPSBhcnJheS5sZW5ndGggLSAxLCBwID0gYXJyYXlbMF0sIHBhaXJzID0gbmV3IEFycmF5KG4gPCAwID8gMCA6IG4pO1xuICB3aGlsZSAoaSA8IG4pIHBhaXJzW2ldID0gZihwLCBwID0gYXJyYXlbKytpXSk7XG4gIHJldHVybiBwYWlycztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhaXIoYSwgYikge1xuICByZXR1cm4gW2EsIGJdO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYXJyYXksIGluZGV4ZXMpIHtcbiAgdmFyIGkgPSBpbmRleGVzLmxlbmd0aCwgcGVybXV0ZXMgPSBuZXcgQXJyYXkoaSk7XG4gIHdoaWxlIChpLS0pIHBlcm11dGVzW2ldID0gYXJyYXlbaW5kZXhlc1tpXV07XG4gIHJldHVybiBwZXJtdXRlcztcbn1cbiIsImltcG9ydCBudW1iZXIgZnJvbSBcIi4vbnVtYmVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgcCwgdmFsdWVvZikge1xuICBpZiAodmFsdWVvZiA9PSBudWxsKSB2YWx1ZW9mID0gbnVtYmVyO1xuICBpZiAoIShuID0gdmFsdWVzLmxlbmd0aCkpIHJldHVybjtcbiAgaWYgKChwID0gK3ApIDw9IDAgfHwgbiA8IDIpIHJldHVybiArdmFsdWVvZih2YWx1ZXNbMF0sIDAsIHZhbHVlcyk7XG4gIGlmIChwID49IDEpIHJldHVybiArdmFsdWVvZih2YWx1ZXNbbiAtIDFdLCBuIC0gMSwgdmFsdWVzKTtcbiAgdmFyIG4sXG4gICAgICBpID0gKG4gLSAxKSAqIHAsXG4gICAgICBpMCA9IE1hdGguZmxvb3IoaSksXG4gICAgICB2YWx1ZTAgPSArdmFsdWVvZih2YWx1ZXNbaTBdLCBpMCwgdmFsdWVzKSxcbiAgICAgIHZhbHVlMSA9ICt2YWx1ZW9mKHZhbHVlc1tpMCArIDFdLCBpMCArIDEsIHZhbHVlcyk7XG4gIHJldHVybiB2YWx1ZTAgKyAodmFsdWUxIC0gdmFsdWUwKSAqIChpIC0gaTApO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RhcnQsIHN0b3AsIHN0ZXApIHtcbiAgc3RhcnQgPSArc3RhcnQsIHN0b3AgPSArc3RvcCwgc3RlcCA9IChuID0gYXJndW1lbnRzLmxlbmd0aCkgPCAyID8gKHN0b3AgPSBzdGFydCwgc3RhcnQgPSAwLCAxKSA6IG4gPCAzID8gMSA6ICtzdGVwO1xuXG4gIHZhciBpID0gLTEsXG4gICAgICBuID0gTWF0aC5tYXgoMCwgTWF0aC5jZWlsKChzdG9wIC0gc3RhcnQpIC8gc3RlcCkpIHwgMCxcbiAgICAgIHJhbmdlID0gbmV3IEFycmF5KG4pO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgcmFuZ2VbaV0gPSBzdGFydCArIGkgKiBzdGVwO1xuICB9XG5cbiAgcmV0dXJuIHJhbmdlO1xufVxuIiwiaW1wb3J0IGFzY2VuZGluZyBmcm9tIFwiLi9hc2NlbmRpbmdcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCBjb21wYXJlKSB7XG4gIGlmICghKG4gPSB2YWx1ZXMubGVuZ3RoKSkgcmV0dXJuO1xuICB2YXIgbixcbiAgICAgIGkgPSAwLFxuICAgICAgaiA9IDAsXG4gICAgICB4aSxcbiAgICAgIHhqID0gdmFsdWVzW2pdO1xuXG4gIGlmIChjb21wYXJlID09IG51bGwpIGNvbXBhcmUgPSBhc2NlbmRpbmc7XG5cbiAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICBpZiAoY29tcGFyZSh4aSA9IHZhbHVlc1tpXSwgeGopIDwgMCB8fCBjb21wYXJlKHhqLCB4aikgIT09IDApIHtcbiAgICAgIHhqID0geGksIGogPSBpO1xuICAgIH1cbiAgfVxuXG4gIGlmIChjb21wYXJlKHhqLCB4aikgPT09IDApIHJldHVybiBqO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYXJyYXksIGkwLCBpMSkge1xuICB2YXIgbSA9IChpMSA9PSBudWxsID8gYXJyYXkubGVuZ3RoIDogaTEpIC0gKGkwID0gaTAgPT0gbnVsbCA/IDAgOiAraTApLFxuICAgICAgdCxcbiAgICAgIGk7XG5cbiAgd2hpbGUgKG0pIHtcbiAgICBpID0gTWF0aC5yYW5kb20oKSAqIG0tLSB8IDA7XG4gICAgdCA9IGFycmF5W20gKyBpMF07XG4gICAgYXJyYXlbbSArIGkwXSA9IGFycmF5W2kgKyBpMF07XG4gICAgYXJyYXlbaSArIGkwXSA9IHQ7XG4gIH1cblxuICByZXR1cm4gYXJyYXk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMsIHZhbHVlb2YpIHtcbiAgdmFyIG4gPSB2YWx1ZXMubGVuZ3RoLFxuICAgICAgaSA9IC0xLFxuICAgICAgdmFsdWUsXG4gICAgICBzdW0gPSAwO1xuXG4gIGlmICh2YWx1ZW9mID09IG51bGwpIHtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgaWYgKHZhbHVlID0gK3ZhbHVlc1tpXSkgc3VtICs9IHZhbHVlOyAvLyBOb3RlOiB6ZXJvIGFuZCBudWxsIGFyZSBlcXVpdmFsZW50LlxuICAgIH1cbiAgfVxuXG4gIGVsc2Uge1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAodmFsdWUgPSArdmFsdWVvZih2YWx1ZXNbaV0sIGksIHZhbHVlcykpIHN1bSArPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3VtO1xufVxuIiwiaW1wb3J0IHttYXB9IGZyb20gXCIuLi9hcnJheVwiO1xuaW1wb3J0IGFzY2VuZGluZyBmcm9tIFwiLi4vYXNjZW5kaW5nXCI7XG5pbXBvcnQgbnVtYmVyIGZyb20gXCIuLi9udW1iZXJcIjtcbmltcG9ydCBxdWFudGlsZSBmcm9tIFwiLi4vcXVhbnRpbGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCBtaW4sIG1heCkge1xuICB2YWx1ZXMgPSBtYXAuY2FsbCh2YWx1ZXMsIG51bWJlcikuc29ydChhc2NlbmRpbmcpO1xuICByZXR1cm4gTWF0aC5jZWlsKChtYXggLSBtaW4pIC8gKDIgKiAocXVhbnRpbGUodmFsdWVzLCAwLjc1KSAtIHF1YW50aWxlKHZhbHVlcywgMC4yNSkpICogTWF0aC5wb3codmFsdWVzLmxlbmd0aCwgLTEgLyAzKSkpO1xufVxuIiwiaW1wb3J0IGRldmlhdGlvbiBmcm9tIFwiLi4vZGV2aWF0aW9uXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgbWluLCBtYXgpIHtcbiAgcmV0dXJuIE1hdGguY2VpbCgobWF4IC0gbWluKSAvICgzLjUgKiBkZXZpYXRpb24odmFsdWVzKSAqIE1hdGgucG93KHZhbHVlcy5sZW5ndGgsIC0xIC8gMykpKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcykge1xuICByZXR1cm4gTWF0aC5jZWlsKE1hdGgubG9nKHZhbHVlcy5sZW5ndGgpIC8gTWF0aC5MTjIpICsgMTtcbn1cbiIsInZhciBlMTAgPSBNYXRoLnNxcnQoNTApLFxuICAgIGU1ID0gTWF0aC5zcXJ0KDEwKSxcbiAgICBlMiA9IE1hdGguc3FydCgyKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RhcnQsIHN0b3AsIGNvdW50KSB7XG4gIHZhciByZXZlcnNlLFxuICAgICAgaSA9IC0xLFxuICAgICAgbixcbiAgICAgIHRpY2tzLFxuICAgICAgc3RlcDtcblxuICBzdG9wID0gK3N0b3AsIHN0YXJ0ID0gK3N0YXJ0LCBjb3VudCA9ICtjb3VudDtcbiAgaWYgKHN0YXJ0ID09PSBzdG9wICYmIGNvdW50ID4gMCkgcmV0dXJuIFtzdGFydF07XG4gIGlmIChyZXZlcnNlID0gc3RvcCA8IHN0YXJ0KSBuID0gc3RhcnQsIHN0YXJ0ID0gc3RvcCwgc3RvcCA9IG47XG4gIGlmICgoc3RlcCA9IHRpY2tJbmNyZW1lbnQoc3RhcnQsIHN0b3AsIGNvdW50KSkgPT09IDAgfHwgIWlzRmluaXRlKHN0ZXApKSByZXR1cm4gW107XG5cbiAgaWYgKHN0ZXAgPiAwKSB7XG4gICAgc3RhcnQgPSBNYXRoLmNlaWwoc3RhcnQgLyBzdGVwKTtcbiAgICBzdG9wID0gTWF0aC5mbG9vcihzdG9wIC8gc3RlcCk7XG4gICAgdGlja3MgPSBuZXcgQXJyYXkobiA9IE1hdGguY2VpbChzdG9wIC0gc3RhcnQgKyAxKSk7XG4gICAgd2hpbGUgKCsraSA8IG4pIHRpY2tzW2ldID0gKHN0YXJ0ICsgaSkgKiBzdGVwO1xuICB9IGVsc2Uge1xuICAgIHN0YXJ0ID0gTWF0aC5mbG9vcihzdGFydCAqIHN0ZXApO1xuICAgIHN0b3AgPSBNYXRoLmNlaWwoc3RvcCAqIHN0ZXApO1xuICAgIHRpY2tzID0gbmV3IEFycmF5KG4gPSBNYXRoLmNlaWwoc3RhcnQgLSBzdG9wICsgMSkpO1xuICAgIHdoaWxlICgrK2kgPCBuKSB0aWNrc1tpXSA9IChzdGFydCAtIGkpIC8gc3RlcDtcbiAgfVxuXG4gIGlmIChyZXZlcnNlKSB0aWNrcy5yZXZlcnNlKCk7XG5cbiAgcmV0dXJuIHRpY2tzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdGlja0luY3JlbWVudChzdGFydCwgc3RvcCwgY291bnQpIHtcbiAgdmFyIHN0ZXAgPSAoc3RvcCAtIHN0YXJ0KSAvIE1hdGgubWF4KDAsIGNvdW50KSxcbiAgICAgIHBvd2VyID0gTWF0aC5mbG9vcihNYXRoLmxvZyhzdGVwKSAvIE1hdGguTE4xMCksXG4gICAgICBlcnJvciA9IHN0ZXAgLyBNYXRoLnBvdygxMCwgcG93ZXIpO1xuICByZXR1cm4gcG93ZXIgPj0gMFxuICAgICAgPyAoZXJyb3IgPj0gZTEwID8gMTAgOiBlcnJvciA+PSBlNSA/IDUgOiBlcnJvciA+PSBlMiA/IDIgOiAxKSAqIE1hdGgucG93KDEwLCBwb3dlcilcbiAgICAgIDogLU1hdGgucG93KDEwLCAtcG93ZXIpIC8gKGVycm9yID49IGUxMCA/IDEwIDogZXJyb3IgPj0gZTUgPyA1IDogZXJyb3IgPj0gZTIgPyAyIDogMSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0aWNrU3RlcChzdGFydCwgc3RvcCwgY291bnQpIHtcbiAgdmFyIHN0ZXAwID0gTWF0aC5hYnMoc3RvcCAtIHN0YXJ0KSAvIE1hdGgubWF4KDAsIGNvdW50KSxcbiAgICAgIHN0ZXAxID0gTWF0aC5wb3coMTAsIE1hdGguZmxvb3IoTWF0aC5sb2coc3RlcDApIC8gTWF0aC5MTjEwKSksXG4gICAgICBlcnJvciA9IHN0ZXAwIC8gc3RlcDE7XG4gIGlmIChlcnJvciA+PSBlMTApIHN0ZXAxICo9IDEwO1xuICBlbHNlIGlmIChlcnJvciA+PSBlNSkgc3RlcDEgKj0gNTtcbiAgZWxzZSBpZiAoZXJyb3IgPj0gZTIpIHN0ZXAxICo9IDI7XG4gIHJldHVybiBzdG9wIDwgc3RhcnQgPyAtc3RlcDEgOiBzdGVwMTtcbn1cbiIsImltcG9ydCBtaW4gZnJvbSBcIi4vbWluXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG1hdHJpeCkge1xuICBpZiAoIShuID0gbWF0cml4Lmxlbmd0aCkpIHJldHVybiBbXTtcbiAgZm9yICh2YXIgaSA9IC0xLCBtID0gbWluKG1hdHJpeCwgbGVuZ3RoKSwgdHJhbnNwb3NlID0gbmV3IEFycmF5KG0pOyArK2kgPCBtOykge1xuICAgIGZvciAodmFyIGogPSAtMSwgbiwgcm93ID0gdHJhbnNwb3NlW2ldID0gbmV3IEFycmF5KG4pOyArK2ogPCBuOykge1xuICAgICAgcm93W2pdID0gbWF0cml4W2pdW2ldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJhbnNwb3NlO1xufVxuXG5mdW5jdGlvbiBsZW5ndGgoZCkge1xuICByZXR1cm4gZC5sZW5ndGg7XG59XG4iLCJpbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMsIHZhbHVlb2YpIHtcbiAgdmFyIG4gPSB2YWx1ZXMubGVuZ3RoLFxuICAgICAgbSA9IDAsXG4gICAgICBpID0gLTEsXG4gICAgICBtZWFuID0gMCxcbiAgICAgIHZhbHVlLFxuICAgICAgZGVsdGEsXG4gICAgICBzdW0gPSAwO1xuXG4gIGlmICh2YWx1ZW9mID09IG51bGwpIHtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgaWYgKCFpc05hTih2YWx1ZSA9IG51bWJlcih2YWx1ZXNbaV0pKSkge1xuICAgICAgICBkZWx0YSA9IHZhbHVlIC0gbWVhbjtcbiAgICAgICAgbWVhbiArPSBkZWx0YSAvICsrbTtcbiAgICAgICAgc3VtICs9IGRlbHRhICogKHZhbHVlIC0gbWVhbik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZWxzZSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICghaXNOYU4odmFsdWUgPSBudW1iZXIodmFsdWVvZih2YWx1ZXNbaV0sIGksIHZhbHVlcykpKSkge1xuICAgICAgICBkZWx0YSA9IHZhbHVlIC0gbWVhbjtcbiAgICAgICAgbWVhbiArPSBkZWx0YSAvICsrbTtcbiAgICAgICAgc3VtICs9IGRlbHRhICogKHZhbHVlIC0gbWVhbik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaWYgKG0gPiAxKSByZXR1cm4gc3VtIC8gKG0gLSAxKTtcbn1cbiIsImltcG9ydCB0cmFuc3Bvc2UgZnJvbSBcIi4vdHJhbnNwb3NlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdHJhbnNwb3NlKGFyZ3VtZW50cyk7XG59XG4iLCJleHBvcnQgdmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xuIiwiaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCBpZGVudGl0eSBmcm9tIFwiLi9pZGVudGl0eVwiO1xuXG52YXIgdG9wID0gMSxcbiAgICByaWdodCA9IDIsXG4gICAgYm90dG9tID0gMyxcbiAgICBsZWZ0ID0gNCxcbiAgICBlcHNpbG9uID0gMWUtNjtcblxuZnVuY3Rpb24gdHJhbnNsYXRlWCh4KSB7XG4gIHJldHVybiBcInRyYW5zbGF0ZShcIiArICh4ICsgMC41KSArIFwiLDApXCI7XG59XG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZVkoeSkge1xuICByZXR1cm4gXCJ0cmFuc2xhdGUoMCxcIiArICh5ICsgMC41KSArIFwiKVwiO1xufVxuXG5mdW5jdGlvbiBudW1iZXIoc2NhbGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gK3NjYWxlKGQpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBjZW50ZXIoc2NhbGUpIHtcbiAgdmFyIG9mZnNldCA9IE1hdGgubWF4KDAsIHNjYWxlLmJhbmR3aWR0aCgpIC0gMSkgLyAyOyAvLyBBZGp1c3QgZm9yIDAuNXB4IG9mZnNldC5cbiAgaWYgKHNjYWxlLnJvdW5kKCkpIG9mZnNldCA9IE1hdGgucm91bmQob2Zmc2V0KTtcbiAgcmV0dXJuIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gK3NjYWxlKGQpICsgb2Zmc2V0O1xuICB9O1xufVxuXG5mdW5jdGlvbiBlbnRlcmluZygpIHtcbiAgcmV0dXJuICF0aGlzLl9fYXhpcztcbn1cblxuZnVuY3Rpb24gYXhpcyhvcmllbnQsIHNjYWxlKSB7XG4gIHZhciB0aWNrQXJndW1lbnRzID0gW10sXG4gICAgICB0aWNrVmFsdWVzID0gbnVsbCxcbiAgICAgIHRpY2tGb3JtYXQgPSBudWxsLFxuICAgICAgdGlja1NpemVJbm5lciA9IDYsXG4gICAgICB0aWNrU2l6ZU91dGVyID0gNixcbiAgICAgIHRpY2tQYWRkaW5nID0gMyxcbiAgICAgIGsgPSBvcmllbnQgPT09IHRvcCB8fCBvcmllbnQgPT09IGxlZnQgPyAtMSA6IDEsXG4gICAgICB4ID0gb3JpZW50ID09PSBsZWZ0IHx8IG9yaWVudCA9PT0gcmlnaHQgPyBcInhcIiA6IFwieVwiLFxuICAgICAgdHJhbnNmb3JtID0gb3JpZW50ID09PSB0b3AgfHwgb3JpZW50ID09PSBib3R0b20gPyB0cmFuc2xhdGVYIDogdHJhbnNsYXRlWTtcblxuICBmdW5jdGlvbiBheGlzKGNvbnRleHQpIHtcbiAgICB2YXIgdmFsdWVzID0gdGlja1ZhbHVlcyA9PSBudWxsID8gKHNjYWxlLnRpY2tzID8gc2NhbGUudGlja3MuYXBwbHkoc2NhbGUsIHRpY2tBcmd1bWVudHMpIDogc2NhbGUuZG9tYWluKCkpIDogdGlja1ZhbHVlcyxcbiAgICAgICAgZm9ybWF0ID0gdGlja0Zvcm1hdCA9PSBudWxsID8gKHNjYWxlLnRpY2tGb3JtYXQgPyBzY2FsZS50aWNrRm9ybWF0LmFwcGx5KHNjYWxlLCB0aWNrQXJndW1lbnRzKSA6IGlkZW50aXR5KSA6IHRpY2tGb3JtYXQsXG4gICAgICAgIHNwYWNpbmcgPSBNYXRoLm1heCh0aWNrU2l6ZUlubmVyLCAwKSArIHRpY2tQYWRkaW5nLFxuICAgICAgICByYW5nZSA9IHNjYWxlLnJhbmdlKCksXG4gICAgICAgIHJhbmdlMCA9ICtyYW5nZVswXSArIDAuNSxcbiAgICAgICAgcmFuZ2UxID0gK3JhbmdlW3JhbmdlLmxlbmd0aCAtIDFdICsgMC41LFxuICAgICAgICBwb3NpdGlvbiA9IChzY2FsZS5iYW5kd2lkdGggPyBjZW50ZXIgOiBudW1iZXIpKHNjYWxlLmNvcHkoKSksXG4gICAgICAgIHNlbGVjdGlvbiA9IGNvbnRleHQuc2VsZWN0aW9uID8gY29udGV4dC5zZWxlY3Rpb24oKSA6IGNvbnRleHQsXG4gICAgICAgIHBhdGggPSBzZWxlY3Rpb24uc2VsZWN0QWxsKFwiLmRvbWFpblwiKS5kYXRhKFtudWxsXSksXG4gICAgICAgIHRpY2sgPSBzZWxlY3Rpb24uc2VsZWN0QWxsKFwiLnRpY2tcIikuZGF0YSh2YWx1ZXMsIHNjYWxlKS5vcmRlcigpLFxuICAgICAgICB0aWNrRXhpdCA9IHRpY2suZXhpdCgpLFxuICAgICAgICB0aWNrRW50ZXIgPSB0aWNrLmVudGVyKCkuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJ0aWNrXCIpLFxuICAgICAgICBsaW5lID0gdGljay5zZWxlY3QoXCJsaW5lXCIpLFxuICAgICAgICB0ZXh0ID0gdGljay5zZWxlY3QoXCJ0ZXh0XCIpO1xuXG4gICAgcGF0aCA9IHBhdGgubWVyZ2UocGF0aC5lbnRlcigpLmluc2VydChcInBhdGhcIiwgXCIudGlja1wiKVxuICAgICAgICAuYXR0cihcImNsYXNzXCIsIFwiZG9tYWluXCIpXG4gICAgICAgIC5hdHRyKFwic3Ryb2tlXCIsIFwiY3VycmVudENvbG9yXCIpKTtcblxuICAgIHRpY2sgPSB0aWNrLm1lcmdlKHRpY2tFbnRlcik7XG5cbiAgICBsaW5lID0gbGluZS5tZXJnZSh0aWNrRW50ZXIuYXBwZW5kKFwibGluZVwiKVxuICAgICAgICAuYXR0cihcInN0cm9rZVwiLCBcImN1cnJlbnRDb2xvclwiKVxuICAgICAgICAuYXR0cih4ICsgXCIyXCIsIGsgKiB0aWNrU2l6ZUlubmVyKSk7XG5cbiAgICB0ZXh0ID0gdGV4dC5tZXJnZSh0aWNrRW50ZXIuYXBwZW5kKFwidGV4dFwiKVxuICAgICAgICAuYXR0cihcImZpbGxcIiwgXCJjdXJyZW50Q29sb3JcIilcbiAgICAgICAgLmF0dHIoeCwgayAqIHNwYWNpbmcpXG4gICAgICAgIC5hdHRyKFwiZHlcIiwgb3JpZW50ID09PSB0b3AgPyBcIjBlbVwiIDogb3JpZW50ID09PSBib3R0b20gPyBcIjAuNzFlbVwiIDogXCIwLjMyZW1cIikpO1xuXG4gICAgaWYgKGNvbnRleHQgIT09IHNlbGVjdGlvbikge1xuICAgICAgcGF0aCA9IHBhdGgudHJhbnNpdGlvbihjb250ZXh0KTtcbiAgICAgIHRpY2sgPSB0aWNrLnRyYW5zaXRpb24oY29udGV4dCk7XG4gICAgICBsaW5lID0gbGluZS50cmFuc2l0aW9uKGNvbnRleHQpO1xuICAgICAgdGV4dCA9IHRleHQudHJhbnNpdGlvbihjb250ZXh0KTtcblxuICAgICAgdGlja0V4aXQgPSB0aWNrRXhpdC50cmFuc2l0aW9uKGNvbnRleHQpXG4gICAgICAgICAgLmF0dHIoXCJvcGFjaXR5XCIsIGVwc2lsb24pXG4gICAgICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gaXNGaW5pdGUoZCA9IHBvc2l0aW9uKGQpKSA/IHRyYW5zZm9ybShkKSA6IHRoaXMuZ2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIpOyB9KTtcblxuICAgICAgdGlja0VudGVyXG4gICAgICAgICAgLmF0dHIoXCJvcGFjaXR5XCIsIGVwc2lsb24pXG4gICAgICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZnVuY3Rpb24oZCkgeyB2YXIgcCA9IHRoaXMucGFyZW50Tm9kZS5fX2F4aXM7IHJldHVybiB0cmFuc2Zvcm0ocCAmJiBpc0Zpbml0ZShwID0gcChkKSkgPyBwIDogcG9zaXRpb24oZCkpOyB9KTtcbiAgICB9XG5cbiAgICB0aWNrRXhpdC5yZW1vdmUoKTtcblxuICAgIHBhdGhcbiAgICAgICAgLmF0dHIoXCJkXCIsIG9yaWVudCA9PT0gbGVmdCB8fCBvcmllbnQgPT0gcmlnaHRcbiAgICAgICAgICAgID8gKHRpY2tTaXplT3V0ZXIgPyBcIk1cIiArIGsgKiB0aWNrU2l6ZU91dGVyICsgXCIsXCIgKyByYW5nZTAgKyBcIkgwLjVWXCIgKyByYW5nZTEgKyBcIkhcIiArIGsgKiB0aWNrU2l6ZU91dGVyIDogXCJNMC41LFwiICsgcmFuZ2UwICsgXCJWXCIgKyByYW5nZTEpXG4gICAgICAgICAgICA6ICh0aWNrU2l6ZU91dGVyID8gXCJNXCIgKyByYW5nZTAgKyBcIixcIiArIGsgKiB0aWNrU2l6ZU91dGVyICsgXCJWMC41SFwiICsgcmFuZ2UxICsgXCJWXCIgKyBrICogdGlja1NpemVPdXRlciA6IFwiTVwiICsgcmFuZ2UwICsgXCIsMC41SFwiICsgcmFuZ2UxKSk7XG5cbiAgICB0aWNrXG4gICAgICAgIC5hdHRyKFwib3BhY2l0eVwiLCAxKVxuICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBmdW5jdGlvbihkKSB7IHJldHVybiB0cmFuc2Zvcm0ocG9zaXRpb24oZCkpOyB9KTtcblxuICAgIGxpbmVcbiAgICAgICAgLmF0dHIoeCArIFwiMlwiLCBrICogdGlja1NpemVJbm5lcik7XG5cbiAgICB0ZXh0XG4gICAgICAgIC5hdHRyKHgsIGsgKiBzcGFjaW5nKVxuICAgICAgICAudGV4dChmb3JtYXQpO1xuXG4gICAgc2VsZWN0aW9uLmZpbHRlcihlbnRlcmluZylcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIFwibm9uZVwiKVxuICAgICAgICAuYXR0cihcImZvbnQtc2l6ZVwiLCAxMClcbiAgICAgICAgLmF0dHIoXCJmb250LWZhbWlseVwiLCBcInNhbnMtc2VyaWZcIilcbiAgICAgICAgLmF0dHIoXCJ0ZXh0LWFuY2hvclwiLCBvcmllbnQgPT09IHJpZ2h0ID8gXCJzdGFydFwiIDogb3JpZW50ID09PSBsZWZ0ID8gXCJlbmRcIiA6IFwibWlkZGxlXCIpO1xuXG4gICAgc2VsZWN0aW9uXG4gICAgICAgIC5lYWNoKGZ1bmN0aW9uKCkgeyB0aGlzLl9fYXhpcyA9IHBvc2l0aW9uOyB9KTtcbiAgfVxuXG4gIGF4aXMuc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2NhbGUgPSBfLCBheGlzKSA6IHNjYWxlO1xuICB9O1xuXG4gIGF4aXMudGlja3MgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGlja0FyZ3VtZW50cyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzKSwgYXhpcztcbiAgfTtcblxuICBheGlzLnRpY2tBcmd1bWVudHMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGlja0FyZ3VtZW50cyA9IF8gPT0gbnVsbCA/IFtdIDogc2xpY2UuY2FsbChfKSwgYXhpcykgOiB0aWNrQXJndW1lbnRzLnNsaWNlKCk7XG4gIH07XG5cbiAgYXhpcy50aWNrVmFsdWVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpY2tWYWx1ZXMgPSBfID09IG51bGwgPyBudWxsIDogc2xpY2UuY2FsbChfKSwgYXhpcykgOiB0aWNrVmFsdWVzICYmIHRpY2tWYWx1ZXMuc2xpY2UoKTtcbiAgfTtcblxuICBheGlzLnRpY2tGb3JtYXQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGlja0Zvcm1hdCA9IF8sIGF4aXMpIDogdGlja0Zvcm1hdDtcbiAgfTtcblxuICBheGlzLnRpY2tTaXplID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpY2tTaXplSW5uZXIgPSB0aWNrU2l6ZU91dGVyID0gK18sIGF4aXMpIDogdGlja1NpemVJbm5lcjtcbiAgfTtcblxuICBheGlzLnRpY2tTaXplSW5uZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGlja1NpemVJbm5lciA9ICtfLCBheGlzKSA6IHRpY2tTaXplSW5uZXI7XG4gIH07XG5cbiAgYXhpcy50aWNrU2l6ZU91dGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpY2tTaXplT3V0ZXIgPSArXywgYXhpcykgOiB0aWNrU2l6ZU91dGVyO1xuICB9O1xuXG4gIGF4aXMudGlja1BhZGRpbmcgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGlja1BhZGRpbmcgPSArXywgYXhpcykgOiB0aWNrUGFkZGluZztcbiAgfTtcblxuICByZXR1cm4gYXhpcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGF4aXNUb3Aoc2NhbGUpIHtcbiAgcmV0dXJuIGF4aXModG9wLCBzY2FsZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBheGlzUmlnaHQoc2NhbGUpIHtcbiAgcmV0dXJuIGF4aXMocmlnaHQsIHNjYWxlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGF4aXNCb3R0b20oc2NhbGUpIHtcbiAgcmV0dXJuIGF4aXMoYm90dG9tLCBzY2FsZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBheGlzTGVmdChzY2FsZSkge1xuICByZXR1cm4gYXhpcyhsZWZ0LCBzY2FsZSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiB4O1xufVxuIiwiZXhwb3J0IHtcbiAgYXhpc1RvcCxcbiAgYXhpc1JpZ2h0LFxuICBheGlzQm90dG9tLFxuICBheGlzTGVmdFxufSBmcm9tIFwiLi9heGlzXCI7XG4iLCJpbXBvcnQge2Rpc3BhdGNofSBmcm9tIFwiZDMtZGlzcGF0Y2hcIjtcbmltcG9ydCB7ZHJhZ0Rpc2FibGUsIGRyYWdFbmFibGV9IGZyb20gXCJkMy1kcmFnXCI7XG5pbXBvcnQge2ludGVycG9sYXRlfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcbmltcG9ydCB7Y3VzdG9tRXZlbnQsIGV2ZW50LCBtb3VzZSwgc2VsZWN0fSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge2ludGVycnVwdH0gZnJvbSBcImQzLXRyYW5zaXRpb25cIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IEJydXNoRXZlbnQgZnJvbSBcIi4vZXZlbnRcIjtcbmltcG9ydCBub2V2ZW50LCB7bm9wcm9wYWdhdGlvbn0gZnJvbSBcIi4vbm9ldmVudFwiO1xuXG52YXIgTU9ERV9EUkFHID0ge25hbWU6IFwiZHJhZ1wifSxcbiAgICBNT0RFX1NQQUNFID0ge25hbWU6IFwic3BhY2VcIn0sXG4gICAgTU9ERV9IQU5ETEUgPSB7bmFtZTogXCJoYW5kbGVcIn0sXG4gICAgTU9ERV9DRU5URVIgPSB7bmFtZTogXCJjZW50ZXJcIn07XG5cbnZhciBYID0ge1xuICBuYW1lOiBcInhcIixcbiAgaGFuZGxlczogW1wiZVwiLCBcIndcIl0ubWFwKHR5cGUpLFxuICBpbnB1dDogZnVuY3Rpb24oeCwgZSkgeyByZXR1cm4geCAmJiBbW3hbMF0sIGVbMF1bMV1dLCBbeFsxXSwgZVsxXVsxXV1dOyB9LFxuICBvdXRwdXQ6IGZ1bmN0aW9uKHh5KSB7IHJldHVybiB4eSAmJiBbeHlbMF1bMF0sIHh5WzFdWzBdXTsgfVxufTtcblxudmFyIFkgPSB7XG4gIG5hbWU6IFwieVwiLFxuICBoYW5kbGVzOiBbXCJuXCIsIFwic1wiXS5tYXAodHlwZSksXG4gIGlucHV0OiBmdW5jdGlvbih5LCBlKSB7IHJldHVybiB5ICYmIFtbZVswXVswXSwgeVswXV0sIFtlWzFdWzBdLCB5WzFdXV07IH0sXG4gIG91dHB1dDogZnVuY3Rpb24oeHkpIHsgcmV0dXJuIHh5ICYmIFt4eVswXVsxXSwgeHlbMV1bMV1dOyB9XG59O1xuXG52YXIgWFkgPSB7XG4gIG5hbWU6IFwieHlcIixcbiAgaGFuZGxlczogW1wiblwiLCBcImVcIiwgXCJzXCIsIFwid1wiLCBcIm53XCIsIFwibmVcIiwgXCJzZVwiLCBcInN3XCJdLm1hcCh0eXBlKSxcbiAgaW5wdXQ6IGZ1bmN0aW9uKHh5KSB7IHJldHVybiB4eTsgfSxcbiAgb3V0cHV0OiBmdW5jdGlvbih4eSkgeyByZXR1cm4geHk7IH1cbn07XG5cbnZhciBjdXJzb3JzID0ge1xuICBvdmVybGF5OiBcImNyb3NzaGFpclwiLFxuICBzZWxlY3Rpb246IFwibW92ZVwiLFxuICBuOiBcIm5zLXJlc2l6ZVwiLFxuICBlOiBcImV3LXJlc2l6ZVwiLFxuICBzOiBcIm5zLXJlc2l6ZVwiLFxuICB3OiBcImV3LXJlc2l6ZVwiLFxuICBudzogXCJud3NlLXJlc2l6ZVwiLFxuICBuZTogXCJuZXN3LXJlc2l6ZVwiLFxuICBzZTogXCJud3NlLXJlc2l6ZVwiLFxuICBzdzogXCJuZXN3LXJlc2l6ZVwiXG59O1xuXG52YXIgZmxpcFggPSB7XG4gIGU6IFwid1wiLFxuICB3OiBcImVcIixcbiAgbnc6IFwibmVcIixcbiAgbmU6IFwibndcIixcbiAgc2U6IFwic3dcIixcbiAgc3c6IFwic2VcIlxufTtcblxudmFyIGZsaXBZID0ge1xuICBuOiBcInNcIixcbiAgczogXCJuXCIsXG4gIG53OiBcInN3XCIsXG4gIG5lOiBcInNlXCIsXG4gIHNlOiBcIm5lXCIsXG4gIHN3OiBcIm53XCJcbn07XG5cbnZhciBzaWduc1ggPSB7XG4gIG92ZXJsYXk6ICsxLFxuICBzZWxlY3Rpb246ICsxLFxuICBuOiBudWxsLFxuICBlOiArMSxcbiAgczogbnVsbCxcbiAgdzogLTEsXG4gIG53OiAtMSxcbiAgbmU6ICsxLFxuICBzZTogKzEsXG4gIHN3OiAtMVxufTtcblxudmFyIHNpZ25zWSA9IHtcbiAgb3ZlcmxheTogKzEsXG4gIHNlbGVjdGlvbjogKzEsXG4gIG46IC0xLFxuICBlOiBudWxsLFxuICBzOiArMSxcbiAgdzogbnVsbCxcbiAgbnc6IC0xLFxuICBuZTogLTEsXG4gIHNlOiArMSxcbiAgc3c6ICsxXG59O1xuXG5mdW5jdGlvbiB0eXBlKHQpIHtcbiAgcmV0dXJuIHt0eXBlOiB0fTtcbn1cblxuLy8gSWdub3JlIHJpZ2h0LWNsaWNrLCBzaW5jZSB0aGF0IHNob3VsZCBvcGVuIHRoZSBjb250ZXh0IG1lbnUuXG5mdW5jdGlvbiBkZWZhdWx0RmlsdGVyKCkge1xuICByZXR1cm4gIWV2ZW50LmJ1dHRvbjtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdEV4dGVudCgpIHtcbiAgdmFyIHN2ZyA9IHRoaXMub3duZXJTVkdFbGVtZW50IHx8IHRoaXM7XG4gIHJldHVybiBbWzAsIDBdLCBbc3ZnLndpZHRoLmJhc2VWYWwudmFsdWUsIHN2Zy5oZWlnaHQuYmFzZVZhbC52YWx1ZV1dO1xufVxuXG4vLyBMaWtlIGQzLmxvY2FsLCBidXQgd2l0aCB0aGUgbmFtZSDigJxfX2JydXNo4oCdIHJhdGhlciB0aGFuIGF1dG8tZ2VuZXJhdGVkLlxuZnVuY3Rpb24gbG9jYWwobm9kZSkge1xuICB3aGlsZSAoIW5vZGUuX19icnVzaCkgaWYgKCEobm9kZSA9IG5vZGUucGFyZW50Tm9kZSkpIHJldHVybjtcbiAgcmV0dXJuIG5vZGUuX19icnVzaDtcbn1cblxuZnVuY3Rpb24gZW1wdHkoZXh0ZW50KSB7XG4gIHJldHVybiBleHRlbnRbMF1bMF0gPT09IGV4dGVudFsxXVswXVxuICAgICAgfHwgZXh0ZW50WzBdWzFdID09PSBleHRlbnRbMV1bMV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBicnVzaFNlbGVjdGlvbihub2RlKSB7XG4gIHZhciBzdGF0ZSA9IG5vZGUuX19icnVzaDtcbiAgcmV0dXJuIHN0YXRlID8gc3RhdGUuZGltLm91dHB1dChzdGF0ZS5zZWxlY3Rpb24pIDogbnVsbDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJydXNoWCgpIHtcbiAgcmV0dXJuIGJydXNoKFgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYnJ1c2hZKCkge1xuICByZXR1cm4gYnJ1c2goWSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gYnJ1c2goWFkpO1xufVxuXG5mdW5jdGlvbiBicnVzaChkaW0pIHtcbiAgdmFyIGV4dGVudCA9IGRlZmF1bHRFeHRlbnQsXG4gICAgICBmaWx0ZXIgPSBkZWZhdWx0RmlsdGVyLFxuICAgICAgbGlzdGVuZXJzID0gZGlzcGF0Y2goYnJ1c2gsIFwic3RhcnRcIiwgXCJicnVzaFwiLCBcImVuZFwiKSxcbiAgICAgIGhhbmRsZVNpemUgPSA2LFxuICAgICAgdG91Y2hlbmRpbmc7XG5cbiAgZnVuY3Rpb24gYnJ1c2goZ3JvdXApIHtcbiAgICB2YXIgb3ZlcmxheSA9IGdyb3VwXG4gICAgICAgIC5wcm9wZXJ0eShcIl9fYnJ1c2hcIiwgaW5pdGlhbGl6ZSlcbiAgICAgIC5zZWxlY3RBbGwoXCIub3ZlcmxheVwiKVxuICAgICAgLmRhdGEoW3R5cGUoXCJvdmVybGF5XCIpXSk7XG5cbiAgICBvdmVybGF5LmVudGVyKCkuYXBwZW5kKFwicmVjdFwiKVxuICAgICAgICAuYXR0cihcImNsYXNzXCIsIFwib3ZlcmxheVwiKVxuICAgICAgICAuYXR0cihcInBvaW50ZXItZXZlbnRzXCIsIFwiYWxsXCIpXG4gICAgICAgIC5hdHRyKFwiY3Vyc29yXCIsIGN1cnNvcnMub3ZlcmxheSlcbiAgICAgIC5tZXJnZShvdmVybGF5KVxuICAgICAgICAuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXIgZXh0ZW50ID0gbG9jYWwodGhpcykuZXh0ZW50O1xuICAgICAgICAgIHNlbGVjdCh0aGlzKVxuICAgICAgICAgICAgICAuYXR0cihcInhcIiwgZXh0ZW50WzBdWzBdKVxuICAgICAgICAgICAgICAuYXR0cihcInlcIiwgZXh0ZW50WzBdWzFdKVxuICAgICAgICAgICAgICAuYXR0cihcIndpZHRoXCIsIGV4dGVudFsxXVswXSAtIGV4dGVudFswXVswXSlcbiAgICAgICAgICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgZXh0ZW50WzFdWzFdIC0gZXh0ZW50WzBdWzFdKTtcbiAgICAgICAgfSk7XG5cbiAgICBncm91cC5zZWxlY3RBbGwoXCIuc2VsZWN0aW9uXCIpXG4gICAgICAuZGF0YShbdHlwZShcInNlbGVjdGlvblwiKV0pXG4gICAgICAuZW50ZXIoKS5hcHBlbmQoXCJyZWN0XCIpXG4gICAgICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJzZWxlY3Rpb25cIilcbiAgICAgICAgLmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29ycy5zZWxlY3Rpb24pXG4gICAgICAgIC5hdHRyKFwiZmlsbFwiLCBcIiM3NzdcIilcbiAgICAgICAgLmF0dHIoXCJmaWxsLW9wYWNpdHlcIiwgMC4zKVxuICAgICAgICAuYXR0cihcInN0cm9rZVwiLCBcIiNmZmZcIilcbiAgICAgICAgLmF0dHIoXCJzaGFwZS1yZW5kZXJpbmdcIiwgXCJjcmlzcEVkZ2VzXCIpO1xuXG4gICAgdmFyIGhhbmRsZSA9IGdyb3VwLnNlbGVjdEFsbChcIi5oYW5kbGVcIilcbiAgICAgIC5kYXRhKGRpbS5oYW5kbGVzLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLnR5cGU7IH0pO1xuXG4gICAgaGFuZGxlLmV4aXQoKS5yZW1vdmUoKTtcblxuICAgIGhhbmRsZS5lbnRlcigpLmFwcGVuZChcInJlY3RcIilcbiAgICAgICAgLmF0dHIoXCJjbGFzc1wiLCBmdW5jdGlvbihkKSB7IHJldHVybiBcImhhbmRsZSBoYW5kbGUtLVwiICsgZC50eXBlOyB9KVxuICAgICAgICAuYXR0cihcImN1cnNvclwiLCBmdW5jdGlvbihkKSB7IHJldHVybiBjdXJzb3JzW2QudHlwZV07IH0pO1xuXG4gICAgZ3JvdXBcbiAgICAgICAgLmVhY2gocmVkcmF3KVxuICAgICAgICAuYXR0cihcImZpbGxcIiwgXCJub25lXCIpXG4gICAgICAgIC5hdHRyKFwicG9pbnRlci1ldmVudHNcIiwgXCJhbGxcIilcbiAgICAgICAgLnN0eWxlKFwiLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yXCIsIFwicmdiYSgwLDAsMCwwKVwiKVxuICAgICAgICAub24oXCJtb3VzZWRvd24uYnJ1c2ggdG91Y2hzdGFydC5icnVzaFwiLCBzdGFydGVkKTtcbiAgfVxuXG4gIGJydXNoLm1vdmUgPSBmdW5jdGlvbihncm91cCwgc2VsZWN0aW9uKSB7XG4gICAgaWYgKGdyb3VwLnNlbGVjdGlvbikge1xuICAgICAgZ3JvdXBcbiAgICAgICAgICAub24oXCJzdGFydC5icnVzaFwiLCBmdW5jdGlvbigpIHsgZW1pdHRlcih0aGlzLCBhcmd1bWVudHMpLmJlZm9yZXN0YXJ0KCkuc3RhcnQoKTsgfSlcbiAgICAgICAgICAub24oXCJpbnRlcnJ1cHQuYnJ1c2ggZW5kLmJydXNoXCIsIGZ1bmN0aW9uKCkgeyBlbWl0dGVyKHRoaXMsIGFyZ3VtZW50cykuZW5kKCk7IH0pXG4gICAgICAgICAgLnR3ZWVuKFwiYnJ1c2hcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgdGhhdCA9IHRoaXMsXG4gICAgICAgICAgICAgICAgc3RhdGUgPSB0aGF0Ll9fYnJ1c2gsXG4gICAgICAgICAgICAgICAgZW1pdCA9IGVtaXR0ZXIodGhhdCwgYXJndW1lbnRzKSxcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb24wID0gc3RhdGUuc2VsZWN0aW9uLFxuICAgICAgICAgICAgICAgIHNlbGVjdGlvbjEgPSBkaW0uaW5wdXQodHlwZW9mIHNlbGVjdGlvbiA9PT0gXCJmdW5jdGlvblwiID8gc2VsZWN0aW9uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBzZWxlY3Rpb24sIHN0YXRlLmV4dGVudCksXG4gICAgICAgICAgICAgICAgaSA9IGludGVycG9sYXRlKHNlbGVjdGlvbjAsIHNlbGVjdGlvbjEpO1xuXG4gICAgICAgICAgICBmdW5jdGlvbiB0d2Vlbih0KSB7XG4gICAgICAgICAgICAgIHN0YXRlLnNlbGVjdGlvbiA9IHQgPT09IDEgJiYgZW1wdHkoc2VsZWN0aW9uMSkgPyBudWxsIDogaSh0KTtcbiAgICAgICAgICAgICAgcmVkcmF3LmNhbGwodGhhdCk7XG4gICAgICAgICAgICAgIGVtaXQuYnJ1c2goKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGlvbjAgJiYgc2VsZWN0aW9uMSA/IHR3ZWVuIDogdHdlZW4oMSk7XG4gICAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdyb3VwXG4gICAgICAgICAgLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgdGhhdCA9IHRoaXMsXG4gICAgICAgICAgICAgICAgYXJncyA9IGFyZ3VtZW50cyxcbiAgICAgICAgICAgICAgICBzdGF0ZSA9IHRoYXQuX19icnVzaCxcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb24xID0gZGltLmlucHV0KHR5cGVvZiBzZWxlY3Rpb24gPT09IFwiZnVuY3Rpb25cIiA/IHNlbGVjdGlvbi5hcHBseSh0aGF0LCBhcmdzKSA6IHNlbGVjdGlvbiwgc3RhdGUuZXh0ZW50KSxcbiAgICAgICAgICAgICAgICBlbWl0ID0gZW1pdHRlcih0aGF0LCBhcmdzKS5iZWZvcmVzdGFydCgpO1xuXG4gICAgICAgICAgICBpbnRlcnJ1cHQodGhhdCk7XG4gICAgICAgICAgICBzdGF0ZS5zZWxlY3Rpb24gPSBzZWxlY3Rpb24xID09IG51bGwgfHwgZW1wdHkoc2VsZWN0aW9uMSkgPyBudWxsIDogc2VsZWN0aW9uMTtcbiAgICAgICAgICAgIHJlZHJhdy5jYWxsKHRoYXQpO1xuICAgICAgICAgICAgZW1pdC5zdGFydCgpLmJydXNoKCkuZW5kKCk7XG4gICAgICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIGZ1bmN0aW9uIHJlZHJhdygpIHtcbiAgICB2YXIgZ3JvdXAgPSBzZWxlY3QodGhpcyksXG4gICAgICAgIHNlbGVjdGlvbiA9IGxvY2FsKHRoaXMpLnNlbGVjdGlvbjtcblxuICAgIGlmIChzZWxlY3Rpb24pIHtcbiAgICAgIGdyb3VwLnNlbGVjdEFsbChcIi5zZWxlY3Rpb25cIilcbiAgICAgICAgICAuc3R5bGUoXCJkaXNwbGF5XCIsIG51bGwpXG4gICAgICAgICAgLmF0dHIoXCJ4XCIsIHNlbGVjdGlvblswXVswXSlcbiAgICAgICAgICAuYXR0cihcInlcIiwgc2VsZWN0aW9uWzBdWzFdKVxuICAgICAgICAgIC5hdHRyKFwid2lkdGhcIiwgc2VsZWN0aW9uWzFdWzBdIC0gc2VsZWN0aW9uWzBdWzBdKVxuICAgICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIHNlbGVjdGlvblsxXVsxXSAtIHNlbGVjdGlvblswXVsxXSk7XG5cbiAgICAgIGdyb3VwLnNlbGVjdEFsbChcIi5oYW5kbGVcIilcbiAgICAgICAgICAuc3R5bGUoXCJkaXNwbGF5XCIsIG51bGwpXG4gICAgICAgICAgLmF0dHIoXCJ4XCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQudHlwZVtkLnR5cGUubGVuZ3RoIC0gMV0gPT09IFwiZVwiID8gc2VsZWN0aW9uWzFdWzBdIC0gaGFuZGxlU2l6ZSAvIDIgOiBzZWxlY3Rpb25bMF1bMF0gLSBoYW5kbGVTaXplIC8gMjsgfSlcbiAgICAgICAgICAuYXR0cihcInlcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC50eXBlWzBdID09PSBcInNcIiA/IHNlbGVjdGlvblsxXVsxXSAtIGhhbmRsZVNpemUgLyAyIDogc2VsZWN0aW9uWzBdWzFdIC0gaGFuZGxlU2l6ZSAvIDI7IH0pXG4gICAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLnR5cGUgPT09IFwiblwiIHx8IGQudHlwZSA9PT0gXCJzXCIgPyBzZWxlY3Rpb25bMV1bMF0gLSBzZWxlY3Rpb25bMF1bMF0gKyBoYW5kbGVTaXplIDogaGFuZGxlU2l6ZTsgfSlcbiAgICAgICAgICAuYXR0cihcImhlaWdodFwiLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLnR5cGUgPT09IFwiZVwiIHx8IGQudHlwZSA9PT0gXCJ3XCIgPyBzZWxlY3Rpb25bMV1bMV0gLSBzZWxlY3Rpb25bMF1bMV0gKyBoYW5kbGVTaXplIDogaGFuZGxlU2l6ZTsgfSk7XG4gICAgfVxuXG4gICAgZWxzZSB7XG4gICAgICBncm91cC5zZWxlY3RBbGwoXCIuc2VsZWN0aW9uLC5oYW5kbGVcIilcbiAgICAgICAgICAuc3R5bGUoXCJkaXNwbGF5XCIsIFwibm9uZVwiKVxuICAgICAgICAgIC5hdHRyKFwieFwiLCBudWxsKVxuICAgICAgICAgIC5hdHRyKFwieVwiLCBudWxsKVxuICAgICAgICAgIC5hdHRyKFwid2lkdGhcIiwgbnVsbClcbiAgICAgICAgICAuYXR0cihcImhlaWdodFwiLCBudWxsKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBlbWl0dGVyKHRoYXQsIGFyZ3MpIHtcbiAgICByZXR1cm4gdGhhdC5fX2JydXNoLmVtaXR0ZXIgfHwgbmV3IEVtaXR0ZXIodGhhdCwgYXJncyk7XG4gIH1cblxuICBmdW5jdGlvbiBFbWl0dGVyKHRoYXQsIGFyZ3MpIHtcbiAgICB0aGlzLnRoYXQgPSB0aGF0O1xuICAgIHRoaXMuYXJncyA9IGFyZ3M7XG4gICAgdGhpcy5zdGF0ZSA9IHRoYXQuX19icnVzaDtcbiAgICB0aGlzLmFjdGl2ZSA9IDA7XG4gIH1cblxuICBFbWl0dGVyLnByb3RvdHlwZSA9IHtcbiAgICBiZWZvcmVzdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoKyt0aGlzLmFjdGl2ZSA9PT0gMSkgdGhpcy5zdGF0ZS5lbWl0dGVyID0gdGhpcywgdGhpcy5zdGFydGluZyA9IHRydWU7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIHN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIGlmICh0aGlzLnN0YXJ0aW5nKSB0aGlzLnN0YXJ0aW5nID0gZmFsc2UsIHRoaXMuZW1pdChcInN0YXJ0XCIpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBicnVzaDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmVtaXQoXCJicnVzaFwiKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgZW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIGlmICgtLXRoaXMuYWN0aXZlID09PSAwKSBkZWxldGUgdGhpcy5zdGF0ZS5lbWl0dGVyLCB0aGlzLmVtaXQoXCJlbmRcIik7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIGVtaXQ6IGZ1bmN0aW9uKHR5cGUpIHtcbiAgICAgIGN1c3RvbUV2ZW50KG5ldyBCcnVzaEV2ZW50KGJydXNoLCB0eXBlLCBkaW0ub3V0cHV0KHRoaXMuc3RhdGUuc2VsZWN0aW9uKSksIGxpc3RlbmVycy5hcHBseSwgbGlzdGVuZXJzLCBbdHlwZSwgdGhpcy50aGF0LCB0aGlzLmFyZ3NdKTtcbiAgICB9XG4gIH07XG5cbiAgZnVuY3Rpb24gc3RhcnRlZCgpIHtcbiAgICBpZiAoZXZlbnQudG91Y2hlcykgeyBpZiAoZXZlbnQuY2hhbmdlZFRvdWNoZXMubGVuZ3RoIDwgZXZlbnQudG91Y2hlcy5sZW5ndGgpIHJldHVybiBub2V2ZW50KCk7IH1cbiAgICBlbHNlIGlmICh0b3VjaGVuZGluZykgcmV0dXJuO1xuICAgIGlmICghZmlsdGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHJldHVybjtcblxuICAgIHZhciB0aGF0ID0gdGhpcyxcbiAgICAgICAgdHlwZSA9IGV2ZW50LnRhcmdldC5fX2RhdGFfXy50eXBlLFxuICAgICAgICBtb2RlID0gKGV2ZW50Lm1ldGFLZXkgPyB0eXBlID0gXCJvdmVybGF5XCIgOiB0eXBlKSA9PT0gXCJzZWxlY3Rpb25cIiA/IE1PREVfRFJBRyA6IChldmVudC5hbHRLZXkgPyBNT0RFX0NFTlRFUiA6IE1PREVfSEFORExFKSxcbiAgICAgICAgc2lnblggPSBkaW0gPT09IFkgPyBudWxsIDogc2lnbnNYW3R5cGVdLFxuICAgICAgICBzaWduWSA9IGRpbSA9PT0gWCA/IG51bGwgOiBzaWduc1lbdHlwZV0sXG4gICAgICAgIHN0YXRlID0gbG9jYWwodGhhdCksXG4gICAgICAgIGV4dGVudCA9IHN0YXRlLmV4dGVudCxcbiAgICAgICAgc2VsZWN0aW9uID0gc3RhdGUuc2VsZWN0aW9uLFxuICAgICAgICBXID0gZXh0ZW50WzBdWzBdLCB3MCwgdzEsXG4gICAgICAgIE4gPSBleHRlbnRbMF1bMV0sIG4wLCBuMSxcbiAgICAgICAgRSA9IGV4dGVudFsxXVswXSwgZTAsIGUxLFxuICAgICAgICBTID0gZXh0ZW50WzFdWzFdLCBzMCwgczEsXG4gICAgICAgIGR4LFxuICAgICAgICBkeSxcbiAgICAgICAgbW92aW5nLFxuICAgICAgICBzaGlmdGluZyA9IHNpZ25YICYmIHNpZ25ZICYmIGV2ZW50LnNoaWZ0S2V5LFxuICAgICAgICBsb2NrWCxcbiAgICAgICAgbG9ja1ksXG4gICAgICAgIHBvaW50MCA9IG1vdXNlKHRoYXQpLFxuICAgICAgICBwb2ludCA9IHBvaW50MCxcbiAgICAgICAgZW1pdCA9IGVtaXR0ZXIodGhhdCwgYXJndW1lbnRzKS5iZWZvcmVzdGFydCgpO1xuXG4gICAgaWYgKHR5cGUgPT09IFwib3ZlcmxheVwiKSB7XG4gICAgICBzdGF0ZS5zZWxlY3Rpb24gPSBzZWxlY3Rpb24gPSBbXG4gICAgICAgIFt3MCA9IGRpbSA9PT0gWSA/IFcgOiBwb2ludDBbMF0sIG4wID0gZGltID09PSBYID8gTiA6IHBvaW50MFsxXV0sXG4gICAgICAgIFtlMCA9IGRpbSA9PT0gWSA/IEUgOiB3MCwgczAgPSBkaW0gPT09IFggPyBTIDogbjBdXG4gICAgICBdO1xuICAgIH0gZWxzZSB7XG4gICAgICB3MCA9IHNlbGVjdGlvblswXVswXTtcbiAgICAgIG4wID0gc2VsZWN0aW9uWzBdWzFdO1xuICAgICAgZTAgPSBzZWxlY3Rpb25bMV1bMF07XG4gICAgICBzMCA9IHNlbGVjdGlvblsxXVsxXTtcbiAgICB9XG5cbiAgICB3MSA9IHcwO1xuICAgIG4xID0gbjA7XG4gICAgZTEgPSBlMDtcbiAgICBzMSA9IHMwO1xuXG4gICAgdmFyIGdyb3VwID0gc2VsZWN0KHRoYXQpXG4gICAgICAgIC5hdHRyKFwicG9pbnRlci1ldmVudHNcIiwgXCJub25lXCIpO1xuXG4gICAgdmFyIG92ZXJsYXkgPSBncm91cC5zZWxlY3RBbGwoXCIub3ZlcmxheVwiKVxuICAgICAgICAuYXR0cihcImN1cnNvclwiLCBjdXJzb3JzW3R5cGVdKTtcblxuICAgIGlmIChldmVudC50b3VjaGVzKSB7XG4gICAgICBncm91cFxuICAgICAgICAgIC5vbihcInRvdWNobW92ZS5icnVzaFwiLCBtb3ZlZCwgdHJ1ZSlcbiAgICAgICAgICAub24oXCJ0b3VjaGVuZC5icnVzaCB0b3VjaGNhbmNlbC5icnVzaFwiLCBlbmRlZCwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB2aWV3ID0gc2VsZWN0KGV2ZW50LnZpZXcpXG4gICAgICAgICAgLm9uKFwia2V5ZG93bi5icnVzaFwiLCBrZXlkb3duZWQsIHRydWUpXG4gICAgICAgICAgLm9uKFwia2V5dXAuYnJ1c2hcIiwga2V5dXBwZWQsIHRydWUpXG4gICAgICAgICAgLm9uKFwibW91c2Vtb3ZlLmJydXNoXCIsIG1vdmVkLCB0cnVlKVxuICAgICAgICAgIC5vbihcIm1vdXNldXAuYnJ1c2hcIiwgZW5kZWQsIHRydWUpO1xuXG4gICAgICBkcmFnRGlzYWJsZShldmVudC52aWV3KTtcbiAgICB9XG5cbiAgICBub3Byb3BhZ2F0aW9uKCk7XG4gICAgaW50ZXJydXB0KHRoYXQpO1xuICAgIHJlZHJhdy5jYWxsKHRoYXQpO1xuICAgIGVtaXQuc3RhcnQoKTtcblxuICAgIGZ1bmN0aW9uIG1vdmVkKCkge1xuICAgICAgdmFyIHBvaW50MSA9IG1vdXNlKHRoYXQpO1xuICAgICAgaWYgKHNoaWZ0aW5nICYmICFsb2NrWCAmJiAhbG9ja1kpIHtcbiAgICAgICAgaWYgKE1hdGguYWJzKHBvaW50MVswXSAtIHBvaW50WzBdKSA+IE1hdGguYWJzKHBvaW50MVsxXSAtIHBvaW50WzFdKSkgbG9ja1kgPSB0cnVlO1xuICAgICAgICBlbHNlIGxvY2tYID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHBvaW50ID0gcG9pbnQxO1xuICAgICAgbW92aW5nID0gdHJ1ZTtcbiAgICAgIG5vZXZlbnQoKTtcbiAgICAgIG1vdmUoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBtb3ZlKCkge1xuICAgICAgdmFyIHQ7XG5cbiAgICAgIGR4ID0gcG9pbnRbMF0gLSBwb2ludDBbMF07XG4gICAgICBkeSA9IHBvaW50WzFdIC0gcG9pbnQwWzFdO1xuXG4gICAgICBzd2l0Y2ggKG1vZGUpIHtcbiAgICAgICAgY2FzZSBNT0RFX1NQQUNFOlxuICAgICAgICBjYXNlIE1PREVfRFJBRzoge1xuICAgICAgICAgIGlmIChzaWduWCkgZHggPSBNYXRoLm1heChXIC0gdzAsIE1hdGgubWluKEUgLSBlMCwgZHgpKSwgdzEgPSB3MCArIGR4LCBlMSA9IGUwICsgZHg7XG4gICAgICAgICAgaWYgKHNpZ25ZKSBkeSA9IE1hdGgubWF4KE4gLSBuMCwgTWF0aC5taW4oUyAtIHMwLCBkeSkpLCBuMSA9IG4wICsgZHksIHMxID0gczAgKyBkeTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIE1PREVfSEFORExFOiB7XG4gICAgICAgICAgaWYgKHNpZ25YIDwgMCkgZHggPSBNYXRoLm1heChXIC0gdzAsIE1hdGgubWluKEUgLSB3MCwgZHgpKSwgdzEgPSB3MCArIGR4LCBlMSA9IGUwO1xuICAgICAgICAgIGVsc2UgaWYgKHNpZ25YID4gMCkgZHggPSBNYXRoLm1heChXIC0gZTAsIE1hdGgubWluKEUgLSBlMCwgZHgpKSwgdzEgPSB3MCwgZTEgPSBlMCArIGR4O1xuICAgICAgICAgIGlmIChzaWduWSA8IDApIGR5ID0gTWF0aC5tYXgoTiAtIG4wLCBNYXRoLm1pbihTIC0gbjAsIGR5KSksIG4xID0gbjAgKyBkeSwgczEgPSBzMDtcbiAgICAgICAgICBlbHNlIGlmIChzaWduWSA+IDApIGR5ID0gTWF0aC5tYXgoTiAtIHMwLCBNYXRoLm1pbihTIC0gczAsIGR5KSksIG4xID0gbjAsIHMxID0gczAgKyBkeTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIE1PREVfQ0VOVEVSOiB7XG4gICAgICAgICAgaWYgKHNpZ25YKSB3MSA9IE1hdGgubWF4KFcsIE1hdGgubWluKEUsIHcwIC0gZHggKiBzaWduWCkpLCBlMSA9IE1hdGgubWF4KFcsIE1hdGgubWluKEUsIGUwICsgZHggKiBzaWduWCkpO1xuICAgICAgICAgIGlmIChzaWduWSkgbjEgPSBNYXRoLm1heChOLCBNYXRoLm1pbihTLCBuMCAtIGR5ICogc2lnblkpKSwgczEgPSBNYXRoLm1heChOLCBNYXRoLm1pbihTLCBzMCArIGR5ICogc2lnblkpKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZTEgPCB3MSkge1xuICAgICAgICBzaWduWCAqPSAtMTtcbiAgICAgICAgdCA9IHcwLCB3MCA9IGUwLCBlMCA9IHQ7XG4gICAgICAgIHQgPSB3MSwgdzEgPSBlMSwgZTEgPSB0O1xuICAgICAgICBpZiAodHlwZSBpbiBmbGlwWCkgb3ZlcmxheS5hdHRyKFwiY3Vyc29yXCIsIGN1cnNvcnNbdHlwZSA9IGZsaXBYW3R5cGVdXSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChzMSA8IG4xKSB7XG4gICAgICAgIHNpZ25ZICo9IC0xO1xuICAgICAgICB0ID0gbjAsIG4wID0gczAsIHMwID0gdDtcbiAgICAgICAgdCA9IG4xLCBuMSA9IHMxLCBzMSA9IHQ7XG4gICAgICAgIGlmICh0eXBlIGluIGZsaXBZKSBvdmVybGF5LmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29yc1t0eXBlID0gZmxpcFlbdHlwZV1dKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN0YXRlLnNlbGVjdGlvbikgc2VsZWN0aW9uID0gc3RhdGUuc2VsZWN0aW9uOyAvLyBNYXkgYmUgc2V0IGJ5IGJydXNoLm1vdmUhXG4gICAgICBpZiAobG9ja1gpIHcxID0gc2VsZWN0aW9uWzBdWzBdLCBlMSA9IHNlbGVjdGlvblsxXVswXTtcbiAgICAgIGlmIChsb2NrWSkgbjEgPSBzZWxlY3Rpb25bMF1bMV0sIHMxID0gc2VsZWN0aW9uWzFdWzFdO1xuXG4gICAgICBpZiAoc2VsZWN0aW9uWzBdWzBdICE9PSB3MVxuICAgICAgICAgIHx8IHNlbGVjdGlvblswXVsxXSAhPT0gbjFcbiAgICAgICAgICB8fCBzZWxlY3Rpb25bMV1bMF0gIT09IGUxXG4gICAgICAgICAgfHwgc2VsZWN0aW9uWzFdWzFdICE9PSBzMSkge1xuICAgICAgICBzdGF0ZS5zZWxlY3Rpb24gPSBbW3cxLCBuMV0sIFtlMSwgczFdXTtcbiAgICAgICAgcmVkcmF3LmNhbGwodGhhdCk7XG4gICAgICAgIGVtaXQuYnJ1c2goKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBlbmRlZCgpIHtcbiAgICAgIG5vcHJvcGFnYXRpb24oKTtcbiAgICAgIGlmIChldmVudC50b3VjaGVzKSB7XG4gICAgICAgIGlmIChldmVudC50b3VjaGVzLmxlbmd0aCkgcmV0dXJuO1xuICAgICAgICBpZiAodG91Y2hlbmRpbmcpIGNsZWFyVGltZW91dCh0b3VjaGVuZGluZyk7XG4gICAgICAgIHRvdWNoZW5kaW5nID0gc2V0VGltZW91dChmdW5jdGlvbigpIHsgdG91Y2hlbmRpbmcgPSBudWxsOyB9LCA1MDApOyAvLyBHaG9zdCBjbGlja3MgYXJlIGRlbGF5ZWQhXG4gICAgICAgIGdyb3VwLm9uKFwidG91Y2htb3ZlLmJydXNoIHRvdWNoZW5kLmJydXNoIHRvdWNoY2FuY2VsLmJydXNoXCIsIG51bGwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZHJhZ0VuYWJsZShldmVudC52aWV3LCBtb3ZpbmcpO1xuICAgICAgICB2aWV3Lm9uKFwia2V5ZG93bi5icnVzaCBrZXl1cC5icnVzaCBtb3VzZW1vdmUuYnJ1c2ggbW91c2V1cC5icnVzaFwiLCBudWxsKTtcbiAgICAgIH1cbiAgICAgIGdyb3VwLmF0dHIoXCJwb2ludGVyLWV2ZW50c1wiLCBcImFsbFwiKTtcbiAgICAgIG92ZXJsYXkuYXR0cihcImN1cnNvclwiLCBjdXJzb3JzLm92ZXJsYXkpO1xuICAgICAgaWYgKHN0YXRlLnNlbGVjdGlvbikgc2VsZWN0aW9uID0gc3RhdGUuc2VsZWN0aW9uOyAvLyBNYXkgYmUgc2V0IGJ5IGJydXNoLm1vdmUgKG9uIHN0YXJ0KSFcbiAgICAgIGlmIChlbXB0eShzZWxlY3Rpb24pKSBzdGF0ZS5zZWxlY3Rpb24gPSBudWxsLCByZWRyYXcuY2FsbCh0aGF0KTtcbiAgICAgIGVtaXQuZW5kKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24ga2V5ZG93bmVkKCkge1xuICAgICAgc3dpdGNoIChldmVudC5rZXlDb2RlKSB7XG4gICAgICAgIGNhc2UgMTY6IHsgLy8gU0hJRlRcbiAgICAgICAgICBzaGlmdGluZyA9IHNpZ25YICYmIHNpZ25ZO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgMTg6IHsgLy8gQUxUXG4gICAgICAgICAgaWYgKG1vZGUgPT09IE1PREVfSEFORExFKSB7XG4gICAgICAgICAgICBpZiAoc2lnblgpIGUwID0gZTEgLSBkeCAqIHNpZ25YLCB3MCA9IHcxICsgZHggKiBzaWduWDtcbiAgICAgICAgICAgIGlmIChzaWduWSkgczAgPSBzMSAtIGR5ICogc2lnblksIG4wID0gbjEgKyBkeSAqIHNpZ25ZO1xuICAgICAgICAgICAgbW9kZSA9IE1PREVfQ0VOVEVSO1xuICAgICAgICAgICAgbW92ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIDMyOiB7IC8vIFNQQUNFOyB0YWtlcyBwcmlvcml0eSBvdmVyIEFMVFxuICAgICAgICAgIGlmIChtb2RlID09PSBNT0RFX0hBTkRMRSB8fCBtb2RlID09PSBNT0RFX0NFTlRFUikge1xuICAgICAgICAgICAgaWYgKHNpZ25YIDwgMCkgZTAgPSBlMSAtIGR4OyBlbHNlIGlmIChzaWduWCA+IDApIHcwID0gdzEgLSBkeDtcbiAgICAgICAgICAgIGlmIChzaWduWSA8IDApIHMwID0gczEgLSBkeTsgZWxzZSBpZiAoc2lnblkgPiAwKSBuMCA9IG4xIC0gZHk7XG4gICAgICAgICAgICBtb2RlID0gTU9ERV9TUEFDRTtcbiAgICAgICAgICAgIG92ZXJsYXkuYXR0cihcImN1cnNvclwiLCBjdXJzb3JzLnNlbGVjdGlvbik7XG4gICAgICAgICAgICBtb3ZlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHJldHVybjtcbiAgICAgIH1cbiAgICAgIG5vZXZlbnQoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBrZXl1cHBlZCgpIHtcbiAgICAgIHN3aXRjaCAoZXZlbnQua2V5Q29kZSkge1xuICAgICAgICBjYXNlIDE2OiB7IC8vIFNISUZUXG4gICAgICAgICAgaWYgKHNoaWZ0aW5nKSB7XG4gICAgICAgICAgICBsb2NrWCA9IGxvY2tZID0gc2hpZnRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIG1vdmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAxODogeyAvLyBBTFRcbiAgICAgICAgICBpZiAobW9kZSA9PT0gTU9ERV9DRU5URVIpIHtcbiAgICAgICAgICAgIGlmIChzaWduWCA8IDApIGUwID0gZTE7IGVsc2UgaWYgKHNpZ25YID4gMCkgdzAgPSB3MTtcbiAgICAgICAgICAgIGlmIChzaWduWSA8IDApIHMwID0gczE7IGVsc2UgaWYgKHNpZ25ZID4gMCkgbjAgPSBuMTtcbiAgICAgICAgICAgIG1vZGUgPSBNT0RFX0hBTkRMRTtcbiAgICAgICAgICAgIG1vdmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAzMjogeyAvLyBTUEFDRVxuICAgICAgICAgIGlmIChtb2RlID09PSBNT0RFX1NQQUNFKSB7XG4gICAgICAgICAgICBpZiAoZXZlbnQuYWx0S2V5KSB7XG4gICAgICAgICAgICAgIGlmIChzaWduWCkgZTAgPSBlMSAtIGR4ICogc2lnblgsIHcwID0gdzEgKyBkeCAqIHNpZ25YO1xuICAgICAgICAgICAgICBpZiAoc2lnblkpIHMwID0gczEgLSBkeSAqIHNpZ25ZLCBuMCA9IG4xICsgZHkgKiBzaWduWTtcbiAgICAgICAgICAgICAgbW9kZSA9IE1PREVfQ0VOVEVSO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaWYgKHNpZ25YIDwgMCkgZTAgPSBlMTsgZWxzZSBpZiAoc2lnblggPiAwKSB3MCA9IHcxO1xuICAgICAgICAgICAgICBpZiAoc2lnblkgPCAwKSBzMCA9IHMxOyBlbHNlIGlmIChzaWduWSA+IDApIG4wID0gbjE7XG4gICAgICAgICAgICAgIG1vZGUgPSBNT0RFX0hBTkRMRTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG92ZXJsYXkuYXR0cihcImN1cnNvclwiLCBjdXJzb3JzW3R5cGVdKTtcbiAgICAgICAgICAgIG1vdmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDogcmV0dXJuO1xuICAgICAgfVxuICAgICAgbm9ldmVudCgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgdmFyIHN0YXRlID0gdGhpcy5fX2JydXNoIHx8IHtzZWxlY3Rpb246IG51bGx9O1xuICAgIHN0YXRlLmV4dGVudCA9IGV4dGVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIHN0YXRlLmRpbSA9IGRpbTtcbiAgICByZXR1cm4gc3RhdGU7XG4gIH1cblxuICBicnVzaC5leHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZXh0ZW50ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChbWytfWzBdWzBdLCArX1swXVsxXV0sIFsrX1sxXVswXSwgK19bMV1bMV1dXSksIGJydXNoKSA6IGV4dGVudDtcbiAgfTtcblxuICBicnVzaC5maWx0ZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZmlsdGVyID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCghIV8pLCBicnVzaCkgOiBmaWx0ZXI7XG4gIH07XG5cbiAgYnJ1c2guaGFuZGxlU2l6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChoYW5kbGVTaXplID0gK18sIGJydXNoKSA6IGhhbmRsZVNpemU7XG4gIH07XG5cbiAgYnJ1c2gub24gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUgPSBsaXN0ZW5lcnMub24uYXBwbHkobGlzdGVuZXJzLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiB2YWx1ZSA9PT0gbGlzdGVuZXJzID8gYnJ1c2ggOiB2YWx1ZTtcbiAgfTtcblxuICByZXR1cm4gYnJ1c2g7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHRhcmdldCwgdHlwZSwgc2VsZWN0aW9uKSB7XG4gIHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuICB0aGlzLnR5cGUgPSB0eXBlO1xuICB0aGlzLnNlbGVjdGlvbiA9IHNlbGVjdGlvbjtcbn1cbiIsImV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgYnJ1c2gsXG4gIGJydXNoWCxcbiAgYnJ1c2hZLFxuICBicnVzaFNlbGVjdGlvblxufSBmcm9tIFwiLi9icnVzaFwiO1xuIiwiaW1wb3J0IHtldmVudH0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuXG5leHBvcnQgZnVuY3Rpb24gbm9wcm9wYWdhdGlvbigpIHtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbn1cbiIsImV4cG9ydCB2YXIgc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XG4iLCJpbXBvcnQge3JhbmdlfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7bWF4LCB0YXV9IGZyb20gXCIuL21hdGhcIjtcblxuZnVuY3Rpb24gY29tcGFyZVZhbHVlKGNvbXBhcmUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGEsIGIpIHtcbiAgICByZXR1cm4gY29tcGFyZShcbiAgICAgIGEuc291cmNlLnZhbHVlICsgYS50YXJnZXQudmFsdWUsXG4gICAgICBiLnNvdXJjZS52YWx1ZSArIGIudGFyZ2V0LnZhbHVlXG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBwYWRBbmdsZSA9IDAsXG4gICAgICBzb3J0R3JvdXBzID0gbnVsbCxcbiAgICAgIHNvcnRTdWJncm91cHMgPSBudWxsLFxuICAgICAgc29ydENob3JkcyA9IG51bGw7XG5cbiAgZnVuY3Rpb24gY2hvcmQobWF0cml4KSB7XG4gICAgdmFyIG4gPSBtYXRyaXgubGVuZ3RoLFxuICAgICAgICBncm91cFN1bXMgPSBbXSxcbiAgICAgICAgZ3JvdXBJbmRleCA9IHJhbmdlKG4pLFxuICAgICAgICBzdWJncm91cEluZGV4ID0gW10sXG4gICAgICAgIGNob3JkcyA9IFtdLFxuICAgICAgICBncm91cHMgPSBjaG9yZHMuZ3JvdXBzID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBzdWJncm91cHMgPSBuZXcgQXJyYXkobiAqIG4pLFxuICAgICAgICBrLFxuICAgICAgICB4LFxuICAgICAgICB4MCxcbiAgICAgICAgZHgsXG4gICAgICAgIGksXG4gICAgICAgIGo7XG5cbiAgICAvLyBDb21wdXRlIHRoZSBzdW0uXG4gICAgayA9IDAsIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIHggPSAwLCBqID0gLTE7IHdoaWxlICgrK2ogPCBuKSB7XG4gICAgICAgIHggKz0gbWF0cml4W2ldW2pdO1xuICAgICAgfVxuICAgICAgZ3JvdXBTdW1zLnB1c2goeCk7XG4gICAgICBzdWJncm91cEluZGV4LnB1c2gocmFuZ2UobikpO1xuICAgICAgayArPSB4O1xuICAgIH1cblxuICAgIC8vIFNvcnQgZ3JvdXBz4oCmXG4gICAgaWYgKHNvcnRHcm91cHMpIGdyb3VwSW5kZXguc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgICByZXR1cm4gc29ydEdyb3Vwcyhncm91cFN1bXNbYV0sIGdyb3VwU3Vtc1tiXSk7XG4gICAgfSk7XG5cbiAgICAvLyBTb3J0IHN1Ymdyb3Vwc+KAplxuICAgIGlmIChzb3J0U3ViZ3JvdXBzKSBzdWJncm91cEluZGV4LmZvckVhY2goZnVuY3Rpb24oZCwgaSkge1xuICAgICAgZC5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgcmV0dXJuIHNvcnRTdWJncm91cHMobWF0cml4W2ldW2FdLCBtYXRyaXhbaV1bYl0pO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICAvLyBDb252ZXJ0IHRoZSBzdW0gdG8gc2NhbGluZyBmYWN0b3IgZm9yIFswLCAycGldLlxuICAgIC8vIFRPRE8gQWxsb3cgc3RhcnQgYW5kIGVuZCBhbmdsZSB0byBiZSBzcGVjaWZpZWQ/XG4gICAgLy8gVE9ETyBBbGxvdyBwYWRkaW5nIHRvIGJlIHNwZWNpZmllZCBhcyBwZXJjZW50YWdlP1xuICAgIGsgPSBtYXgoMCwgdGF1IC0gcGFkQW5nbGUgKiBuKSAvIGs7XG4gICAgZHggPSBrID8gcGFkQW5nbGUgOiB0YXUgLyBuO1xuXG4gICAgLy8gQ29tcHV0ZSB0aGUgc3RhcnQgYW5kIGVuZCBhbmdsZSBmb3IgZWFjaCBncm91cCBhbmQgc3ViZ3JvdXAuXG4gICAgLy8gTm90ZTogT3BlcmEgaGFzIGEgYnVnIHJlb3JkZXJpbmcgb2JqZWN0IGxpdGVyYWwgcHJvcGVydGllcyFcbiAgICB4ID0gMCwgaSA9IC0xOyB3aGlsZSAoKytpIDwgbikge1xuICAgICAgeDAgPSB4LCBqID0gLTE7IHdoaWxlICgrK2ogPCBuKSB7XG4gICAgICAgIHZhciBkaSA9IGdyb3VwSW5kZXhbaV0sXG4gICAgICAgICAgICBkaiA9IHN1Ymdyb3VwSW5kZXhbZGldW2pdLFxuICAgICAgICAgICAgdiA9IG1hdHJpeFtkaV1bZGpdLFxuICAgICAgICAgICAgYTAgPSB4LFxuICAgICAgICAgICAgYTEgPSB4ICs9IHYgKiBrO1xuICAgICAgICBzdWJncm91cHNbZGogKiBuICsgZGldID0ge1xuICAgICAgICAgIGluZGV4OiBkaSxcbiAgICAgICAgICBzdWJpbmRleDogZGosXG4gICAgICAgICAgc3RhcnRBbmdsZTogYTAsXG4gICAgICAgICAgZW5kQW5nbGU6IGExLFxuICAgICAgICAgIHZhbHVlOiB2XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICBncm91cHNbZGldID0ge1xuICAgICAgICBpbmRleDogZGksXG4gICAgICAgIHN0YXJ0QW5nbGU6IHgwLFxuICAgICAgICBlbmRBbmdsZTogeCxcbiAgICAgICAgdmFsdWU6IGdyb3VwU3Vtc1tkaV1cbiAgICAgIH07XG4gICAgICB4ICs9IGR4O1xuICAgIH1cblxuICAgIC8vIEdlbmVyYXRlIGNob3JkcyBmb3IgZWFjaCAobm9uLWVtcHR5KSBzdWJncm91cC1zdWJncm91cCBsaW5rLlxuICAgIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGogPSBpIC0gMTsgd2hpbGUgKCsraiA8IG4pIHtcbiAgICAgICAgdmFyIHNvdXJjZSA9IHN1Ymdyb3Vwc1tqICogbiArIGldLFxuICAgICAgICAgICAgdGFyZ2V0ID0gc3ViZ3JvdXBzW2kgKiBuICsgal07XG4gICAgICAgIGlmIChzb3VyY2UudmFsdWUgfHwgdGFyZ2V0LnZhbHVlKSB7XG4gICAgICAgICAgY2hvcmRzLnB1c2goc291cmNlLnZhbHVlIDwgdGFyZ2V0LnZhbHVlXG4gICAgICAgICAgICAgID8ge3NvdXJjZTogdGFyZ2V0LCB0YXJnZXQ6IHNvdXJjZX1cbiAgICAgICAgICAgICAgOiB7c291cmNlOiBzb3VyY2UsIHRhcmdldDogdGFyZ2V0fSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc29ydENob3JkcyA/IGNob3Jkcy5zb3J0KHNvcnRDaG9yZHMpIDogY2hvcmRzO1xuICB9XG5cbiAgY2hvcmQucGFkQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkQW5nbGUgPSBtYXgoMCwgXyksIGNob3JkKSA6IHBhZEFuZ2xlO1xuICB9O1xuXG4gIGNob3JkLnNvcnRHcm91cHMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc29ydEdyb3VwcyA9IF8sIGNob3JkKSA6IHNvcnRHcm91cHM7XG4gIH07XG5cbiAgY2hvcmQuc29ydFN1Ymdyb3VwcyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzb3J0U3ViZ3JvdXBzID0gXywgY2hvcmQpIDogc29ydFN1Ymdyb3VwcztcbiAgfTtcblxuICBjaG9yZC5zb3J0Q2hvcmRzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKF8gPT0gbnVsbCA/IHNvcnRDaG9yZHMgPSBudWxsIDogKHNvcnRDaG9yZHMgPSBjb21wYXJlVmFsdWUoXykpLl8gPSBfLCBjaG9yZCkgOiBzb3J0Q2hvcmRzICYmIHNvcnRDaG9yZHMuXztcbiAgfTtcblxuICByZXR1cm4gY2hvcmQ7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBjaG9yZH0gZnJvbSBcIi4vY2hvcmRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByaWJib259IGZyb20gXCIuL3JpYmJvblwiO1xuIiwiZXhwb3J0IHZhciBjb3MgPSBNYXRoLmNvcztcbmV4cG9ydCB2YXIgc2luID0gTWF0aC5zaW47XG5leHBvcnQgdmFyIHBpID0gTWF0aC5QSTtcbmV4cG9ydCB2YXIgaGFsZlBpID0gcGkgLyAyO1xuZXhwb3J0IHZhciB0YXUgPSBwaSAqIDI7XG5leHBvcnQgdmFyIG1heCA9IE1hdGgubWF4O1xuIiwiaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IHtjb3MsIGhhbGZQaSwgc2lufSBmcm9tIFwiLi9tYXRoXCI7XG5pbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTb3VyY2UoZCkge1xuICByZXR1cm4gZC5zb3VyY2U7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRUYXJnZXQoZCkge1xuICByZXR1cm4gZC50YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRSYWRpdXMoZCkge1xuICByZXR1cm4gZC5yYWRpdXM7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRTdGFydEFuZ2xlKGQpIHtcbiAgcmV0dXJuIGQuc3RhcnRBbmdsZTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdEVuZEFuZ2xlKGQpIHtcbiAgcmV0dXJuIGQuZW5kQW5nbGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgc291cmNlID0gZGVmYXVsdFNvdXJjZSxcbiAgICAgIHRhcmdldCA9IGRlZmF1bHRUYXJnZXQsXG4gICAgICByYWRpdXMgPSBkZWZhdWx0UmFkaXVzLFxuICAgICAgc3RhcnRBbmdsZSA9IGRlZmF1bHRTdGFydEFuZ2xlLFxuICAgICAgZW5kQW5nbGUgPSBkZWZhdWx0RW5kQW5nbGUsXG4gICAgICBjb250ZXh0ID0gbnVsbDtcblxuICBmdW5jdGlvbiByaWJib24oKSB7XG4gICAgdmFyIGJ1ZmZlcixcbiAgICAgICAgYXJndiA9IHNsaWNlLmNhbGwoYXJndW1lbnRzKSxcbiAgICAgICAgcyA9IHNvdXJjZS5hcHBseSh0aGlzLCBhcmd2KSxcbiAgICAgICAgdCA9IHRhcmdldC5hcHBseSh0aGlzLCBhcmd2KSxcbiAgICAgICAgc3IgPSArcmFkaXVzLmFwcGx5KHRoaXMsIChhcmd2WzBdID0gcywgYXJndikpLFxuICAgICAgICBzYTAgPSBzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3YpIC0gaGFsZlBpLFxuICAgICAgICBzYTEgPSBlbmRBbmdsZS5hcHBseSh0aGlzLCBhcmd2KSAtIGhhbGZQaSxcbiAgICAgICAgc3gwID0gc3IgKiBjb3Moc2EwKSxcbiAgICAgICAgc3kwID0gc3IgKiBzaW4oc2EwKSxcbiAgICAgICAgdHIgPSArcmFkaXVzLmFwcGx5KHRoaXMsIChhcmd2WzBdID0gdCwgYXJndikpLFxuICAgICAgICB0YTAgPSBzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3YpIC0gaGFsZlBpLFxuICAgICAgICB0YTEgPSBlbmRBbmdsZS5hcHBseSh0aGlzLCBhcmd2KSAtIGhhbGZQaTtcblxuICAgIGlmICghY29udGV4dCkgY29udGV4dCA9IGJ1ZmZlciA9IHBhdGgoKTtcblxuICAgIGNvbnRleHQubW92ZVRvKHN4MCwgc3kwKTtcbiAgICBjb250ZXh0LmFyYygwLCAwLCBzciwgc2EwLCBzYTEpO1xuICAgIGlmIChzYTAgIT09IHRhMCB8fCBzYTEgIT09IHRhMSkgeyAvLyBUT0RPIHNyICE9PSB0cj9cbiAgICAgIGNvbnRleHQucXVhZHJhdGljQ3VydmVUbygwLCAwLCB0ciAqIGNvcyh0YTApLCB0ciAqIHNpbih0YTApKTtcbiAgICAgIGNvbnRleHQuYXJjKDAsIDAsIHRyLCB0YTAsIHRhMSk7XG4gICAgfVxuICAgIGNvbnRleHQucXVhZHJhdGljQ3VydmVUbygwLCAwLCBzeDAsIHN5MCk7XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcblxuICAgIGlmIChidWZmZXIpIHJldHVybiBjb250ZXh0ID0gbnVsbCwgYnVmZmVyICsgXCJcIiB8fCBudWxsO1xuICB9XG5cbiAgcmliYm9uLnJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYWRpdXMgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgcmliYm9uKSA6IHJhZGl1cztcbiAgfTtcblxuICByaWJib24uc3RhcnRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzdGFydEFuZ2xlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHJpYmJvbikgOiBzdGFydEFuZ2xlO1xuICB9O1xuXG4gIHJpYmJvbi5lbmRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlbmRBbmdsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCByaWJib24pIDogZW5kQW5nbGU7XG4gIH07XG5cbiAgcmliYm9uLnNvdXJjZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzb3VyY2UgPSBfLCByaWJib24pIDogc291cmNlO1xuICB9O1xuXG4gIHJpYmJvbi50YXJnZXQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGFyZ2V0ID0gXywgcmliYm9uKSA6IHRhcmdldDtcbiAgfTtcblxuICByaWJib24uY29udGV4dCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICgoY29udGV4dCA9IF8gPT0gbnVsbCA/IG51bGwgOiBfKSwgcmliYm9uKSA6IGNvbnRleHQ7XG4gIH07XG5cbiAgcmV0dXJuIHJpYmJvbjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG1hcCkge1xuICB2YXIgZW50cmllcyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gbWFwKSBlbnRyaWVzLnB1c2goe2tleToga2V5LCB2YWx1ZTogbWFwW2tleV19KTtcbiAgcmV0dXJuIGVudHJpZXM7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgbmVzdH0gZnJvbSBcIi4vbmVzdFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNldH0gZnJvbSBcIi4vc2V0XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbWFwfSBmcm9tIFwiLi9tYXBcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBrZXlzfSBmcm9tIFwiLi9rZXlzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdmFsdWVzfSBmcm9tIFwiLi92YWx1ZXNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBlbnRyaWVzfSBmcm9tIFwiLi9lbnRyaWVzXCI7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihtYXApIHtcbiAgdmFyIGtleXMgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIG1hcCkga2V5cy5wdXNoKGtleSk7XG4gIHJldHVybiBrZXlzO1xufVxuIiwiZXhwb3J0IHZhciBwcmVmaXggPSBcIiRcIjtcblxuZnVuY3Rpb24gTWFwKCkge31cblxuTWFwLnByb3RvdHlwZSA9IG1hcC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBNYXAsXG4gIGhhczogZnVuY3Rpb24oa2V5KSB7XG4gICAgcmV0dXJuIChwcmVmaXggKyBrZXkpIGluIHRoaXM7XG4gIH0sXG4gIGdldDogZnVuY3Rpb24oa2V5KSB7XG4gICAgcmV0dXJuIHRoaXNbcHJlZml4ICsga2V5XTtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbihrZXksIHZhbHVlKSB7XG4gICAgdGhpc1twcmVmaXggKyBrZXldID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIHJlbW92ZTogZnVuY3Rpb24oa2V5KSB7XG4gICAgdmFyIHByb3BlcnR5ID0gcHJlZml4ICsga2V5O1xuICAgIHJldHVybiBwcm9wZXJ0eSBpbiB0aGlzICYmIGRlbGV0ZSB0aGlzW3Byb3BlcnR5XTtcbiAgfSxcbiAgY2xlYXI6IGZ1bmN0aW9uKCkge1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHRoaXMpIGlmIChwcm9wZXJ0eVswXSA9PT0gcHJlZml4KSBkZWxldGUgdGhpc1twcm9wZXJ0eV07XG4gIH0sXG4gIGtleXM6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIgcHJvcGVydHkgaW4gdGhpcykgaWYgKHByb3BlcnR5WzBdID09PSBwcmVmaXgpIGtleXMucHVzaChwcm9wZXJ0eS5zbGljZSgxKSk7XG4gICAgcmV0dXJuIGtleXM7XG4gIH0sXG4gIHZhbHVlczogZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlcyA9IFtdO1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHRoaXMpIGlmIChwcm9wZXJ0eVswXSA9PT0gcHJlZml4KSB2YWx1ZXMucHVzaCh0aGlzW3Byb3BlcnR5XSk7XG4gICAgcmV0dXJuIHZhbHVlcztcbiAgfSxcbiAgZW50cmllczogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGVudHJpZXMgPSBbXTtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiB0aGlzKSBpZiAocHJvcGVydHlbMF0gPT09IHByZWZpeCkgZW50cmllcy5wdXNoKHtrZXk6IHByb3BlcnR5LnNsaWNlKDEpLCB2YWx1ZTogdGhpc1twcm9wZXJ0eV19KTtcbiAgICByZXR1cm4gZW50cmllcztcbiAgfSxcbiAgc2l6ZTogZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNpemUgPSAwO1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHRoaXMpIGlmIChwcm9wZXJ0eVswXSA9PT0gcHJlZml4KSArK3NpemU7XG4gICAgcmV0dXJuIHNpemU7XG4gIH0sXG4gIGVtcHR5OiBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiB0aGlzKSBpZiAocHJvcGVydHlbMF0gPT09IHByZWZpeCkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuICBlYWNoOiBmdW5jdGlvbihmKSB7XG4gICAgZm9yICh2YXIgcHJvcGVydHkgaW4gdGhpcykgaWYgKHByb3BlcnR5WzBdID09PSBwcmVmaXgpIGYodGhpc1twcm9wZXJ0eV0sIHByb3BlcnR5LnNsaWNlKDEpLCB0aGlzKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gbWFwKG9iamVjdCwgZikge1xuICB2YXIgbWFwID0gbmV3IE1hcDtcblxuICAvLyBDb3B5IGNvbnN0cnVjdG9yLlxuICBpZiAob2JqZWN0IGluc3RhbmNlb2YgTWFwKSBvYmplY3QuZWFjaChmdW5jdGlvbih2YWx1ZSwga2V5KSB7IG1hcC5zZXQoa2V5LCB2YWx1ZSk7IH0pO1xuXG4gIC8vIEluZGV4IGFycmF5IGJ5IG51bWVyaWMgaW5kZXggb3Igc3BlY2lmaWVkIGtleSBmdW5jdGlvbi5cbiAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShvYmplY3QpKSB7XG4gICAgdmFyIGkgPSAtMSxcbiAgICAgICAgbiA9IG9iamVjdC5sZW5ndGgsXG4gICAgICAgIG87XG5cbiAgICBpZiAoZiA9PSBudWxsKSB3aGlsZSAoKytpIDwgbikgbWFwLnNldChpLCBvYmplY3RbaV0pO1xuICAgIGVsc2Ugd2hpbGUgKCsraSA8IG4pIG1hcC5zZXQoZihvID0gb2JqZWN0W2ldLCBpLCBvYmplY3QpLCBvKTtcbiAgfVxuXG4gIC8vIENvbnZlcnQgb2JqZWN0IHRvIG1hcC5cbiAgZWxzZSBpZiAob2JqZWN0KSBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSBtYXAuc2V0KGtleSwgb2JqZWN0W2tleV0pO1xuXG4gIHJldHVybiBtYXA7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1hcDtcbiIsImltcG9ydCBtYXAgZnJvbSBcIi4vbWFwXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIga2V5cyA9IFtdLFxuICAgICAgc29ydEtleXMgPSBbXSxcbiAgICAgIHNvcnRWYWx1ZXMsXG4gICAgICByb2xsdXAsXG4gICAgICBuZXN0O1xuXG4gIGZ1bmN0aW9uIGFwcGx5KGFycmF5LCBkZXB0aCwgY3JlYXRlUmVzdWx0LCBzZXRSZXN1bHQpIHtcbiAgICBpZiAoZGVwdGggPj0ga2V5cy5sZW5ndGgpIHtcbiAgICAgIGlmIChzb3J0VmFsdWVzICE9IG51bGwpIGFycmF5LnNvcnQoc29ydFZhbHVlcyk7XG4gICAgICByZXR1cm4gcm9sbHVwICE9IG51bGwgPyByb2xsdXAoYXJyYXkpIDogYXJyYXk7XG4gICAgfVxuXG4gICAgdmFyIGkgPSAtMSxcbiAgICAgICAgbiA9IGFycmF5Lmxlbmd0aCxcbiAgICAgICAga2V5ID0ga2V5c1tkZXB0aCsrXSxcbiAgICAgICAga2V5VmFsdWUsXG4gICAgICAgIHZhbHVlLFxuICAgICAgICB2YWx1ZXNCeUtleSA9IG1hcCgpLFxuICAgICAgICB2YWx1ZXMsXG4gICAgICAgIHJlc3VsdCA9IGNyZWF0ZVJlc3VsdCgpO1xuXG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICh2YWx1ZXMgPSB2YWx1ZXNCeUtleS5nZXQoa2V5VmFsdWUgPSBrZXkodmFsdWUgPSBhcnJheVtpXSkgKyBcIlwiKSkge1xuICAgICAgICB2YWx1ZXMucHVzaCh2YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWx1ZXNCeUtleS5zZXQoa2V5VmFsdWUsIFt2YWx1ZV0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhbHVlc0J5S2V5LmVhY2goZnVuY3Rpb24odmFsdWVzLCBrZXkpIHtcbiAgICAgIHNldFJlc3VsdChyZXN1bHQsIGtleSwgYXBwbHkodmFsdWVzLCBkZXB0aCwgY3JlYXRlUmVzdWx0LCBzZXRSZXN1bHQpKTtcbiAgICB9KTtcblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBmdW5jdGlvbiBlbnRyaWVzKG1hcCwgZGVwdGgpIHtcbiAgICBpZiAoKytkZXB0aCA+IGtleXMubGVuZ3RoKSByZXR1cm4gbWFwO1xuICAgIHZhciBhcnJheSwgc29ydEtleSA9IHNvcnRLZXlzW2RlcHRoIC0gMV07XG4gICAgaWYgKHJvbGx1cCAhPSBudWxsICYmIGRlcHRoID49IGtleXMubGVuZ3RoKSBhcnJheSA9IG1hcC5lbnRyaWVzKCk7XG4gICAgZWxzZSBhcnJheSA9IFtdLCBtYXAuZWFjaChmdW5jdGlvbih2LCBrKSB7IGFycmF5LnB1c2goe2tleTogaywgdmFsdWVzOiBlbnRyaWVzKHYsIGRlcHRoKX0pOyB9KTtcbiAgICByZXR1cm4gc29ydEtleSAhPSBudWxsID8gYXJyYXkuc29ydChmdW5jdGlvbihhLCBiKSB7IHJldHVybiBzb3J0S2V5KGEua2V5LCBiLmtleSk7IH0pIDogYXJyYXk7XG4gIH1cblxuICByZXR1cm4gbmVzdCA9IHtcbiAgICBvYmplY3Q6IGZ1bmN0aW9uKGFycmF5KSB7IHJldHVybiBhcHBseShhcnJheSwgMCwgY3JlYXRlT2JqZWN0LCBzZXRPYmplY3QpOyB9LFxuICAgIG1hcDogZnVuY3Rpb24oYXJyYXkpIHsgcmV0dXJuIGFwcGx5KGFycmF5LCAwLCBjcmVhdGVNYXAsIHNldE1hcCk7IH0sXG4gICAgZW50cmllczogZnVuY3Rpb24oYXJyYXkpIHsgcmV0dXJuIGVudHJpZXMoYXBwbHkoYXJyYXksIDAsIGNyZWF0ZU1hcCwgc2V0TWFwKSwgMCk7IH0sXG4gICAga2V5OiBmdW5jdGlvbihkKSB7IGtleXMucHVzaChkKTsgcmV0dXJuIG5lc3Q7IH0sXG4gICAgc29ydEtleXM6IGZ1bmN0aW9uKG9yZGVyKSB7IHNvcnRLZXlzW2tleXMubGVuZ3RoIC0gMV0gPSBvcmRlcjsgcmV0dXJuIG5lc3Q7IH0sXG4gICAgc29ydFZhbHVlczogZnVuY3Rpb24ob3JkZXIpIHsgc29ydFZhbHVlcyA9IG9yZGVyOyByZXR1cm4gbmVzdDsgfSxcbiAgICByb2xsdXA6IGZ1bmN0aW9uKGYpIHsgcm9sbHVwID0gZjsgcmV0dXJuIG5lc3Q7IH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlT2JqZWN0KCkge1xuICByZXR1cm4ge307XG59XG5cbmZ1bmN0aW9uIHNldE9iamVjdChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTWFwKCkge1xuICByZXR1cm4gbWFwKCk7XG59XG5cbmZ1bmN0aW9uIHNldE1hcChtYXAsIGtleSwgdmFsdWUpIHtcbiAgbWFwLnNldChrZXksIHZhbHVlKTtcbn1cbiIsImltcG9ydCB7ZGVmYXVsdCBhcyBtYXAsIHByZWZpeH0gZnJvbSBcIi4vbWFwXCI7XG5cbmZ1bmN0aW9uIFNldCgpIHt9XG5cbnZhciBwcm90byA9IG1hcC5wcm90b3R5cGU7XG5cblNldC5wcm90b3R5cGUgPSBzZXQucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogU2V0LFxuICBoYXM6IHByb3RvLmhhcyxcbiAgYWRkOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHZhbHVlICs9IFwiXCI7XG4gICAgdGhpc1twcmVmaXggKyB2YWx1ZV0gPSB2YWx1ZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfSxcbiAgcmVtb3ZlOiBwcm90by5yZW1vdmUsXG4gIGNsZWFyOiBwcm90by5jbGVhcixcbiAgdmFsdWVzOiBwcm90by5rZXlzLFxuICBzaXplOiBwcm90by5zaXplLFxuICBlbXB0eTogcHJvdG8uZW1wdHksXG4gIGVhY2g6IHByb3RvLmVhY2hcbn07XG5cbmZ1bmN0aW9uIHNldChvYmplY3QsIGYpIHtcbiAgdmFyIHNldCA9IG5ldyBTZXQ7XG5cbiAgLy8gQ29weSBjb25zdHJ1Y3Rvci5cbiAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIFNldCkgb2JqZWN0LmVhY2goZnVuY3Rpb24odmFsdWUpIHsgc2V0LmFkZCh2YWx1ZSk7IH0pO1xuXG4gIC8vIE90aGVyd2lzZSwgYXNzdW1lIGl04oCZcyBhbiBhcnJheS5cbiAgZWxzZSBpZiAob2JqZWN0KSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IG9iamVjdC5sZW5ndGg7XG4gICAgaWYgKGYgPT0gbnVsbCkgd2hpbGUgKCsraSA8IG4pIHNldC5hZGQob2JqZWN0W2ldKTtcbiAgICBlbHNlIHdoaWxlICgrK2kgPCBuKSBzZXQuYWRkKGYob2JqZWN0W2ldLCBpLCBvYmplY3QpKTtcbiAgfVxuXG4gIHJldHVybiBzZXQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHNldDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG1hcCkge1xuICB2YXIgdmFsdWVzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBtYXApIHZhbHVlcy5wdXNoKG1hcFtrZXldKTtcbiAgcmV0dXJuIHZhbHVlcztcbn1cbiIsImltcG9ydCBkZWZpbmUsIHtleHRlbmR9IGZyb20gXCIuL2RlZmluZVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gQ29sb3IoKSB7fVxuXG5leHBvcnQgdmFyIGRhcmtlciA9IDAuNztcbmV4cG9ydCB2YXIgYnJpZ2h0ZXIgPSAxIC8gZGFya2VyO1xuXG52YXIgcmVJID0gXCJcXFxccyooWystXT9cXFxcZCspXFxcXHMqXCIsXG4gICAgcmVOID0gXCJcXFxccyooWystXT9cXFxcZCpcXFxcLj9cXFxcZCsoPzpbZUVdWystXT9cXFxcZCspPylcXFxccypcIixcbiAgICByZVAgPSBcIlxcXFxzKihbKy1dP1xcXFxkKlxcXFwuP1xcXFxkKyg/OltlRV1bKy1dP1xcXFxkKyk/KSVcXFxccypcIixcbiAgICByZUhleDMgPSAvXiMoWzAtOWEtZl17M30pJC8sXG4gICAgcmVIZXg2ID0gL14jKFswLTlhLWZdezZ9KSQvLFxuICAgIHJlUmdiSW50ZWdlciA9IG5ldyBSZWdFeHAoXCJecmdiXFxcXChcIiArIFtyZUksIHJlSSwgcmVJXSArIFwiXFxcXCkkXCIpLFxuICAgIHJlUmdiUGVyY2VudCA9IG5ldyBSZWdFeHAoXCJecmdiXFxcXChcIiArIFtyZVAsIHJlUCwgcmVQXSArIFwiXFxcXCkkXCIpLFxuICAgIHJlUmdiYUludGVnZXIgPSBuZXcgUmVnRXhwKFwiXnJnYmFcXFxcKFwiICsgW3JlSSwgcmVJLCByZUksIHJlTl0gKyBcIlxcXFwpJFwiKSxcbiAgICByZVJnYmFQZXJjZW50ID0gbmV3IFJlZ0V4cChcIl5yZ2JhXFxcXChcIiArIFtyZVAsIHJlUCwgcmVQLCByZU5dICsgXCJcXFxcKSRcIiksXG4gICAgcmVIc2xQZXJjZW50ID0gbmV3IFJlZ0V4cChcIl5oc2xcXFxcKFwiICsgW3JlTiwgcmVQLCByZVBdICsgXCJcXFxcKSRcIiksXG4gICAgcmVIc2xhUGVyY2VudCA9IG5ldyBSZWdFeHAoXCJeaHNsYVxcXFwoXCIgKyBbcmVOLCByZVAsIHJlUCwgcmVOXSArIFwiXFxcXCkkXCIpO1xuXG52YXIgbmFtZWQgPSB7XG4gIGFsaWNlYmx1ZTogMHhmMGY4ZmYsXG4gIGFudGlxdWV3aGl0ZTogMHhmYWViZDcsXG4gIGFxdWE6IDB4MDBmZmZmLFxuICBhcXVhbWFyaW5lOiAweDdmZmZkNCxcbiAgYXp1cmU6IDB4ZjBmZmZmLFxuICBiZWlnZTogMHhmNWY1ZGMsXG4gIGJpc3F1ZTogMHhmZmU0YzQsXG4gIGJsYWNrOiAweDAwMDAwMCxcbiAgYmxhbmNoZWRhbG1vbmQ6IDB4ZmZlYmNkLFxuICBibHVlOiAweDAwMDBmZixcbiAgYmx1ZXZpb2xldDogMHg4YTJiZTIsXG4gIGJyb3duOiAweGE1MmEyYSxcbiAgYnVybHl3b29kOiAweGRlYjg4NyxcbiAgY2FkZXRibHVlOiAweDVmOWVhMCxcbiAgY2hhcnRyZXVzZTogMHg3ZmZmMDAsXG4gIGNob2NvbGF0ZTogMHhkMjY5MWUsXG4gIGNvcmFsOiAweGZmN2Y1MCxcbiAgY29ybmZsb3dlcmJsdWU6IDB4NjQ5NWVkLFxuICBjb3Juc2lsazogMHhmZmY4ZGMsXG4gIGNyaW1zb246IDB4ZGMxNDNjLFxuICBjeWFuOiAweDAwZmZmZixcbiAgZGFya2JsdWU6IDB4MDAwMDhiLFxuICBkYXJrY3lhbjogMHgwMDhiOGIsXG4gIGRhcmtnb2xkZW5yb2Q6IDB4Yjg4NjBiLFxuICBkYXJrZ3JheTogMHhhOWE5YTksXG4gIGRhcmtncmVlbjogMHgwMDY0MDAsXG4gIGRhcmtncmV5OiAweGE5YTlhOSxcbiAgZGFya2toYWtpOiAweGJkYjc2YixcbiAgZGFya21hZ2VudGE6IDB4OGIwMDhiLFxuICBkYXJrb2xpdmVncmVlbjogMHg1NTZiMmYsXG4gIGRhcmtvcmFuZ2U6IDB4ZmY4YzAwLFxuICBkYXJrb3JjaGlkOiAweDk5MzJjYyxcbiAgZGFya3JlZDogMHg4YjAwMDAsXG4gIGRhcmtzYWxtb246IDB4ZTk5NjdhLFxuICBkYXJrc2VhZ3JlZW46IDB4OGZiYzhmLFxuICBkYXJrc2xhdGVibHVlOiAweDQ4M2Q4YixcbiAgZGFya3NsYXRlZ3JheTogMHgyZjRmNGYsXG4gIGRhcmtzbGF0ZWdyZXk6IDB4MmY0ZjRmLFxuICBkYXJrdHVycXVvaXNlOiAweDAwY2VkMSxcbiAgZGFya3Zpb2xldDogMHg5NDAwZDMsXG4gIGRlZXBwaW5rOiAweGZmMTQ5MyxcbiAgZGVlcHNreWJsdWU6IDB4MDBiZmZmLFxuICBkaW1ncmF5OiAweDY5Njk2OSxcbiAgZGltZ3JleTogMHg2OTY5NjksXG4gIGRvZGdlcmJsdWU6IDB4MWU5MGZmLFxuICBmaXJlYnJpY2s6IDB4YjIyMjIyLFxuICBmbG9yYWx3aGl0ZTogMHhmZmZhZjAsXG4gIGZvcmVzdGdyZWVuOiAweDIyOGIyMixcbiAgZnVjaHNpYTogMHhmZjAwZmYsXG4gIGdhaW5zYm9ybzogMHhkY2RjZGMsXG4gIGdob3N0d2hpdGU6IDB4ZjhmOGZmLFxuICBnb2xkOiAweGZmZDcwMCxcbiAgZ29sZGVucm9kOiAweGRhYTUyMCxcbiAgZ3JheTogMHg4MDgwODAsXG4gIGdyZWVuOiAweDAwODAwMCxcbiAgZ3JlZW55ZWxsb3c6IDB4YWRmZjJmLFxuICBncmV5OiAweDgwODA4MCxcbiAgaG9uZXlkZXc6IDB4ZjBmZmYwLFxuICBob3RwaW5rOiAweGZmNjliNCxcbiAgaW5kaWFucmVkOiAweGNkNWM1YyxcbiAgaW5kaWdvOiAweDRiMDA4MixcbiAgaXZvcnk6IDB4ZmZmZmYwLFxuICBraGFraTogMHhmMGU2OGMsXG4gIGxhdmVuZGVyOiAweGU2ZTZmYSxcbiAgbGF2ZW5kZXJibHVzaDogMHhmZmYwZjUsXG4gIGxhd25ncmVlbjogMHg3Y2ZjMDAsXG4gIGxlbW9uY2hpZmZvbjogMHhmZmZhY2QsXG4gIGxpZ2h0Ymx1ZTogMHhhZGQ4ZTYsXG4gIGxpZ2h0Y29yYWw6IDB4ZjA4MDgwLFxuICBsaWdodGN5YW46IDB4ZTBmZmZmLFxuICBsaWdodGdvbGRlbnJvZHllbGxvdzogMHhmYWZhZDIsXG4gIGxpZ2h0Z3JheTogMHhkM2QzZDMsXG4gIGxpZ2h0Z3JlZW46IDB4OTBlZTkwLFxuICBsaWdodGdyZXk6IDB4ZDNkM2QzLFxuICBsaWdodHBpbms6IDB4ZmZiNmMxLFxuICBsaWdodHNhbG1vbjogMHhmZmEwN2EsXG4gIGxpZ2h0c2VhZ3JlZW46IDB4MjBiMmFhLFxuICBsaWdodHNreWJsdWU6IDB4ODdjZWZhLFxuICBsaWdodHNsYXRlZ3JheTogMHg3Nzg4OTksXG4gIGxpZ2h0c2xhdGVncmV5OiAweDc3ODg5OSxcbiAgbGlnaHRzdGVlbGJsdWU6IDB4YjBjNGRlLFxuICBsaWdodHllbGxvdzogMHhmZmZmZTAsXG4gIGxpbWU6IDB4MDBmZjAwLFxuICBsaW1lZ3JlZW46IDB4MzJjZDMyLFxuICBsaW5lbjogMHhmYWYwZTYsXG4gIG1hZ2VudGE6IDB4ZmYwMGZmLFxuICBtYXJvb246IDB4ODAwMDAwLFxuICBtZWRpdW1hcXVhbWFyaW5lOiAweDY2Y2RhYSxcbiAgbWVkaXVtYmx1ZTogMHgwMDAwY2QsXG4gIG1lZGl1bW9yY2hpZDogMHhiYTU1ZDMsXG4gIG1lZGl1bXB1cnBsZTogMHg5MzcwZGIsXG4gIG1lZGl1bXNlYWdyZWVuOiAweDNjYjM3MSxcbiAgbWVkaXVtc2xhdGVibHVlOiAweDdiNjhlZSxcbiAgbWVkaXVtc3ByaW5nZ3JlZW46IDB4MDBmYTlhLFxuICBtZWRpdW10dXJxdW9pc2U6IDB4NDhkMWNjLFxuICBtZWRpdW12aW9sZXRyZWQ6IDB4YzcxNTg1LFxuICBtaWRuaWdodGJsdWU6IDB4MTkxOTcwLFxuICBtaW50Y3JlYW06IDB4ZjVmZmZhLFxuICBtaXN0eXJvc2U6IDB4ZmZlNGUxLFxuICBtb2NjYXNpbjogMHhmZmU0YjUsXG4gIG5hdmFqb3doaXRlOiAweGZmZGVhZCxcbiAgbmF2eTogMHgwMDAwODAsXG4gIG9sZGxhY2U6IDB4ZmRmNWU2LFxuICBvbGl2ZTogMHg4MDgwMDAsXG4gIG9saXZlZHJhYjogMHg2YjhlMjMsXG4gIG9yYW5nZTogMHhmZmE1MDAsXG4gIG9yYW5nZXJlZDogMHhmZjQ1MDAsXG4gIG9yY2hpZDogMHhkYTcwZDYsXG4gIHBhbGVnb2xkZW5yb2Q6IDB4ZWVlOGFhLFxuICBwYWxlZ3JlZW46IDB4OThmYjk4LFxuICBwYWxldHVycXVvaXNlOiAweGFmZWVlZSxcbiAgcGFsZXZpb2xldHJlZDogMHhkYjcwOTMsXG4gIHBhcGF5YXdoaXA6IDB4ZmZlZmQ1LFxuICBwZWFjaHB1ZmY6IDB4ZmZkYWI5LFxuICBwZXJ1OiAweGNkODUzZixcbiAgcGluazogMHhmZmMwY2IsXG4gIHBsdW06IDB4ZGRhMGRkLFxuICBwb3dkZXJibHVlOiAweGIwZTBlNixcbiAgcHVycGxlOiAweDgwMDA4MCxcbiAgcmViZWNjYXB1cnBsZTogMHg2NjMzOTksXG4gIHJlZDogMHhmZjAwMDAsXG4gIHJvc3licm93bjogMHhiYzhmOGYsXG4gIHJveWFsYmx1ZTogMHg0MTY5ZTEsXG4gIHNhZGRsZWJyb3duOiAweDhiNDUxMyxcbiAgc2FsbW9uOiAweGZhODA3MixcbiAgc2FuZHlicm93bjogMHhmNGE0NjAsXG4gIHNlYWdyZWVuOiAweDJlOGI1NyxcbiAgc2Vhc2hlbGw6IDB4ZmZmNWVlLFxuICBzaWVubmE6IDB4YTA1MjJkLFxuICBzaWx2ZXI6IDB4YzBjMGMwLFxuICBza3libHVlOiAweDg3Y2VlYixcbiAgc2xhdGVibHVlOiAweDZhNWFjZCxcbiAgc2xhdGVncmF5OiAweDcwODA5MCxcbiAgc2xhdGVncmV5OiAweDcwODA5MCxcbiAgc25vdzogMHhmZmZhZmEsXG4gIHNwcmluZ2dyZWVuOiAweDAwZmY3ZixcbiAgc3RlZWxibHVlOiAweDQ2ODJiNCxcbiAgdGFuOiAweGQyYjQ4YyxcbiAgdGVhbDogMHgwMDgwODAsXG4gIHRoaXN0bGU6IDB4ZDhiZmQ4LFxuICB0b21hdG86IDB4ZmY2MzQ3LFxuICB0dXJxdW9pc2U6IDB4NDBlMGQwLFxuICB2aW9sZXQ6IDB4ZWU4MmVlLFxuICB3aGVhdDogMHhmNWRlYjMsXG4gIHdoaXRlOiAweGZmZmZmZixcbiAgd2hpdGVzbW9rZTogMHhmNWY1ZjUsXG4gIHllbGxvdzogMHhmZmZmMDAsXG4gIHllbGxvd2dyZWVuOiAweDlhY2QzMlxufTtcblxuZGVmaW5lKENvbG9yLCBjb2xvciwge1xuICBkaXNwbGF5YWJsZTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMucmdiKCkuZGlzcGxheWFibGUoKTtcbiAgfSxcbiAgaGV4OiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5yZ2IoKS5oZXgoKTtcbiAgfSxcbiAgdG9TdHJpbmc6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnJnYigpICsgXCJcIjtcbiAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbG9yKGZvcm1hdCkge1xuICB2YXIgbTtcbiAgZm9ybWF0ID0gKGZvcm1hdCArIFwiXCIpLnRyaW0oKS50b0xvd2VyQ2FzZSgpO1xuICByZXR1cm4gKG0gPSByZUhleDMuZXhlYyhmb3JtYXQpKSA/IChtID0gcGFyc2VJbnQobVsxXSwgMTYpLCBuZXcgUmdiKChtID4+IDggJiAweGYpIHwgKG0gPj4gNCAmIDB4MGYwKSwgKG0gPj4gNCAmIDB4ZikgfCAobSAmIDB4ZjApLCAoKG0gJiAweGYpIDw8IDQpIHwgKG0gJiAweGYpLCAxKSkgLy8gI2YwMFxuICAgICAgOiAobSA9IHJlSGV4Ni5leGVjKGZvcm1hdCkpID8gcmdibihwYXJzZUludChtWzFdLCAxNikpIC8vICNmZjAwMDBcbiAgICAgIDogKG0gPSByZVJnYkludGVnZXIuZXhlYyhmb3JtYXQpKSA/IG5ldyBSZ2IobVsxXSwgbVsyXSwgbVszXSwgMSkgLy8gcmdiKDI1NSwgMCwgMClcbiAgICAgIDogKG0gPSByZVJnYlBlcmNlbnQuZXhlYyhmb3JtYXQpKSA/IG5ldyBSZ2IobVsxXSAqIDI1NSAvIDEwMCwgbVsyXSAqIDI1NSAvIDEwMCwgbVszXSAqIDI1NSAvIDEwMCwgMSkgLy8gcmdiKDEwMCUsIDAlLCAwJSlcbiAgICAgIDogKG0gPSByZVJnYmFJbnRlZ2VyLmV4ZWMoZm9ybWF0KSkgPyByZ2JhKG1bMV0sIG1bMl0sIG1bM10sIG1bNF0pIC8vIHJnYmEoMjU1LCAwLCAwLCAxKVxuICAgICAgOiAobSA9IHJlUmdiYVBlcmNlbnQuZXhlYyhmb3JtYXQpKSA/IHJnYmEobVsxXSAqIDI1NSAvIDEwMCwgbVsyXSAqIDI1NSAvIDEwMCwgbVszXSAqIDI1NSAvIDEwMCwgbVs0XSkgLy8gcmdiKDEwMCUsIDAlLCAwJSwgMSlcbiAgICAgIDogKG0gPSByZUhzbFBlcmNlbnQuZXhlYyhmb3JtYXQpKSA/IGhzbGEobVsxXSwgbVsyXSAvIDEwMCwgbVszXSAvIDEwMCwgMSkgLy8gaHNsKDEyMCwgNTAlLCA1MCUpXG4gICAgICA6IChtID0gcmVIc2xhUGVyY2VudC5leGVjKGZvcm1hdCkpID8gaHNsYShtWzFdLCBtWzJdIC8gMTAwLCBtWzNdIC8gMTAwLCBtWzRdKSAvLyBoc2xhKDEyMCwgNTAlLCA1MCUsIDEpXG4gICAgICA6IG5hbWVkLmhhc093blByb3BlcnR5KGZvcm1hdCkgPyByZ2JuKG5hbWVkW2Zvcm1hdF0pXG4gICAgICA6IGZvcm1hdCA9PT0gXCJ0cmFuc3BhcmVudFwiID8gbmV3IFJnYihOYU4sIE5hTiwgTmFOLCAwKVxuICAgICAgOiBudWxsO1xufVxuXG5mdW5jdGlvbiByZ2JuKG4pIHtcbiAgcmV0dXJuIG5ldyBSZ2IobiA+PiAxNiAmIDB4ZmYsIG4gPj4gOCAmIDB4ZmYsIG4gJiAweGZmLCAxKTtcbn1cblxuZnVuY3Rpb24gcmdiYShyLCBnLCBiLCBhKSB7XG4gIGlmIChhIDw9IDApIHIgPSBnID0gYiA9IE5hTjtcbiAgcmV0dXJuIG5ldyBSZ2IociwgZywgYiwgYSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZ2JDb252ZXJ0KG8pIHtcbiAgaWYgKCEobyBpbnN0YW5jZW9mIENvbG9yKSkgbyA9IGNvbG9yKG8pO1xuICBpZiAoIW8pIHJldHVybiBuZXcgUmdiO1xuICBvID0gby5yZ2IoKTtcbiAgcmV0dXJuIG5ldyBSZ2Ioby5yLCBvLmcsIG8uYiwgby5vcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJnYihyLCBnLCBiLCBvcGFjaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gcmdiQ29udmVydChyKSA6IG5ldyBSZ2IociwgZywgYiwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gUmdiKHIsIGcsIGIsIG9wYWNpdHkpIHtcbiAgdGhpcy5yID0gK3I7XG4gIHRoaXMuZyA9ICtnO1xuICB0aGlzLmIgPSArYjtcbiAgdGhpcy5vcGFjaXR5ID0gK29wYWNpdHk7XG59XG5cbmRlZmluZShSZ2IsIHJnYiwgZXh0ZW5kKENvbG9yLCB7XG4gIGJyaWdodGVyOiBmdW5jdGlvbihrKSB7XG4gICAgayA9IGsgPT0gbnVsbCA/IGJyaWdodGVyIDogTWF0aC5wb3coYnJpZ2h0ZXIsIGspO1xuICAgIHJldHVybiBuZXcgUmdiKHRoaXMuciAqIGssIHRoaXMuZyAqIGssIHRoaXMuYiAqIGssIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIGRhcmtlcjogZnVuY3Rpb24oaykge1xuICAgIGsgPSBrID09IG51bGwgPyBkYXJrZXIgOiBNYXRoLnBvdyhkYXJrZXIsIGspO1xuICAgIHJldHVybiBuZXcgUmdiKHRoaXMuciAqIGssIHRoaXMuZyAqIGssIHRoaXMuYiAqIGssIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIHJnYjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIGRpc3BsYXlhYmxlOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gKDAgPD0gdGhpcy5yICYmIHRoaXMuciA8PSAyNTUpXG4gICAgICAgICYmICgwIDw9IHRoaXMuZyAmJiB0aGlzLmcgPD0gMjU1KVxuICAgICAgICAmJiAoMCA8PSB0aGlzLmIgJiYgdGhpcy5iIDw9IDI1NSlcbiAgICAgICAgJiYgKDAgPD0gdGhpcy5vcGFjaXR5ICYmIHRoaXMub3BhY2l0eSA8PSAxKTtcbiAgfSxcbiAgaGV4OiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCIjXCIgKyBoZXgodGhpcy5yKSArIGhleCh0aGlzLmcpICsgaGV4KHRoaXMuYik7XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgYSA9IHRoaXMub3BhY2l0eTsgYSA9IGlzTmFOKGEpID8gMSA6IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIGEpKTtcbiAgICByZXR1cm4gKGEgPT09IDEgPyBcInJnYihcIiA6IFwicmdiYShcIilcbiAgICAgICAgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQodGhpcy5yKSB8fCAwKSkgKyBcIiwgXCJcbiAgICAgICAgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQodGhpcy5nKSB8fCAwKSkgKyBcIiwgXCJcbiAgICAgICAgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQodGhpcy5iKSB8fCAwKSlcbiAgICAgICAgKyAoYSA9PT0gMSA/IFwiKVwiIDogXCIsIFwiICsgYSArIFwiKVwiKTtcbiAgfVxufSkpO1xuXG5mdW5jdGlvbiBoZXgodmFsdWUpIHtcbiAgdmFsdWUgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQodmFsdWUpIHx8IDApKTtcbiAgcmV0dXJuICh2YWx1ZSA8IDE2ID8gXCIwXCIgOiBcIlwiKSArIHZhbHVlLnRvU3RyaW5nKDE2KTtcbn1cblxuZnVuY3Rpb24gaHNsYShoLCBzLCBsLCBhKSB7XG4gIGlmIChhIDw9IDApIGggPSBzID0gbCA9IE5hTjtcbiAgZWxzZSBpZiAobCA8PSAwIHx8IGwgPj0gMSkgaCA9IHMgPSBOYU47XG4gIGVsc2UgaWYgKHMgPD0gMCkgaCA9IE5hTjtcbiAgcmV0dXJuIG5ldyBIc2woaCwgcywgbCwgYSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoc2xDb252ZXJ0KG8pIHtcbiAgaWYgKG8gaW5zdGFuY2VvZiBIc2wpIHJldHVybiBuZXcgSHNsKG8uaCwgby5zLCBvLmwsIG8ub3BhY2l0eSk7XG4gIGlmICghKG8gaW5zdGFuY2VvZiBDb2xvcikpIG8gPSBjb2xvcihvKTtcbiAgaWYgKCFvKSByZXR1cm4gbmV3IEhzbDtcbiAgaWYgKG8gaW5zdGFuY2VvZiBIc2wpIHJldHVybiBvO1xuICBvID0gby5yZ2IoKTtcbiAgdmFyIHIgPSBvLnIgLyAyNTUsXG4gICAgICBnID0gby5nIC8gMjU1LFxuICAgICAgYiA9IG8uYiAvIDI1NSxcbiAgICAgIG1pbiA9IE1hdGgubWluKHIsIGcsIGIpLFxuICAgICAgbWF4ID0gTWF0aC5tYXgociwgZywgYiksXG4gICAgICBoID0gTmFOLFxuICAgICAgcyA9IG1heCAtIG1pbixcbiAgICAgIGwgPSAobWF4ICsgbWluKSAvIDI7XG4gIGlmIChzKSB7XG4gICAgaWYgKHIgPT09IG1heCkgaCA9IChnIC0gYikgLyBzICsgKGcgPCBiKSAqIDY7XG4gICAgZWxzZSBpZiAoZyA9PT0gbWF4KSBoID0gKGIgLSByKSAvIHMgKyAyO1xuICAgIGVsc2UgaCA9IChyIC0gZykgLyBzICsgNDtcbiAgICBzIC89IGwgPCAwLjUgPyBtYXggKyBtaW4gOiAyIC0gbWF4IC0gbWluO1xuICAgIGggKj0gNjA7XG4gIH0gZWxzZSB7XG4gICAgcyA9IGwgPiAwICYmIGwgPCAxID8gMCA6IGg7XG4gIH1cbiAgcmV0dXJuIG5ldyBIc2woaCwgcywgbCwgby5vcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhzbChoLCBzLCBsLCBvcGFjaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gaHNsQ29udmVydChoKSA6IG5ldyBIc2woaCwgcywgbCwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5mdW5jdGlvbiBIc2woaCwgcywgbCwgb3BhY2l0eSkge1xuICB0aGlzLmggPSAraDtcbiAgdGhpcy5zID0gK3M7XG4gIHRoaXMubCA9ICtsO1xuICB0aGlzLm9wYWNpdHkgPSArb3BhY2l0eTtcbn1cblxuZGVmaW5lKEhzbCwgaHNsLCBleHRlbmQoQ29sb3IsIHtcbiAgYnJpZ2h0ZXI6IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gYnJpZ2h0ZXIgOiBNYXRoLnBvdyhicmlnaHRlciwgayk7XG4gICAgcmV0dXJuIG5ldyBIc2wodGhpcy5oLCB0aGlzLnMsIHRoaXMubCAqIGssIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIGRhcmtlcjogZnVuY3Rpb24oaykge1xuICAgIGsgPSBrID09IG51bGwgPyBkYXJrZXIgOiBNYXRoLnBvdyhkYXJrZXIsIGspO1xuICAgIHJldHVybiBuZXcgSHNsKHRoaXMuaCwgdGhpcy5zLCB0aGlzLmwgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICByZ2I6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoID0gdGhpcy5oICUgMzYwICsgKHRoaXMuaCA8IDApICogMzYwLFxuICAgICAgICBzID0gaXNOYU4oaCkgfHwgaXNOYU4odGhpcy5zKSA/IDAgOiB0aGlzLnMsXG4gICAgICAgIGwgPSB0aGlzLmwsXG4gICAgICAgIG0yID0gbCArIChsIDwgMC41ID8gbCA6IDEgLSBsKSAqIHMsXG4gICAgICAgIG0xID0gMiAqIGwgLSBtMjtcbiAgICByZXR1cm4gbmV3IFJnYihcbiAgICAgIGhzbDJyZ2IoaCA+PSAyNDAgPyBoIC0gMjQwIDogaCArIDEyMCwgbTEsIG0yKSxcbiAgICAgIGhzbDJyZ2IoaCwgbTEsIG0yKSxcbiAgICAgIGhzbDJyZ2IoaCA8IDEyMCA/IGggKyAyNDAgOiBoIC0gMTIwLCBtMSwgbTIpLFxuICAgICAgdGhpcy5vcGFjaXR5XG4gICAgKTtcbiAgfSxcbiAgZGlzcGxheWFibGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiAoMCA8PSB0aGlzLnMgJiYgdGhpcy5zIDw9IDEgfHwgaXNOYU4odGhpcy5zKSlcbiAgICAgICAgJiYgKDAgPD0gdGhpcy5sICYmIHRoaXMubCA8PSAxKVxuICAgICAgICAmJiAoMCA8PSB0aGlzLm9wYWNpdHkgJiYgdGhpcy5vcGFjaXR5IDw9IDEpO1xuICB9XG59KSk7XG5cbi8qIEZyb20gRnZEIDEzLjM3LCBDU1MgQ29sb3IgTW9kdWxlIExldmVsIDMgKi9cbmZ1bmN0aW9uIGhzbDJyZ2IoaCwgbTEsIG0yKSB7XG4gIHJldHVybiAoaCA8IDYwID8gbTEgKyAobTIgLSBtMSkgKiBoIC8gNjBcbiAgICAgIDogaCA8IDE4MCA/IG0yXG4gICAgICA6IGggPCAyNDAgPyBtMSArIChtMiAtIG0xKSAqICgyNDAgLSBoKSAvIDYwXG4gICAgICA6IG0xKSAqIDI1NTtcbn1cbiIsImltcG9ydCBkZWZpbmUsIHtleHRlbmR9IGZyb20gXCIuL2RlZmluZVwiO1xuaW1wb3J0IHtDb2xvciwgcmdiQ29udmVydCwgUmdiLCBkYXJrZXIsIGJyaWdodGVyfSBmcm9tIFwiLi9jb2xvclwiO1xuaW1wb3J0IHtkZWcycmFkLCByYWQyZGVnfSBmcm9tIFwiLi9tYXRoXCI7XG5cbnZhciBBID0gLTAuMTQ4NjEsXG4gICAgQiA9ICsxLjc4Mjc3LFxuICAgIEMgPSAtMC4yOTIyNyxcbiAgICBEID0gLTAuOTA2NDksXG4gICAgRSA9ICsxLjk3Mjk0LFxuICAgIEVEID0gRSAqIEQsXG4gICAgRUIgPSBFICogQixcbiAgICBCQ19EQSA9IEIgKiBDIC0gRCAqIEE7XG5cbmZ1bmN0aW9uIGN1YmVoZWxpeENvbnZlcnQobykge1xuICBpZiAobyBpbnN0YW5jZW9mIEN1YmVoZWxpeCkgcmV0dXJuIG5ldyBDdWJlaGVsaXgoby5oLCBvLnMsIG8ubCwgby5vcGFjaXR5KTtcbiAgaWYgKCEobyBpbnN0YW5jZW9mIFJnYikpIG8gPSByZ2JDb252ZXJ0KG8pO1xuICB2YXIgciA9IG8uciAvIDI1NSxcbiAgICAgIGcgPSBvLmcgLyAyNTUsXG4gICAgICBiID0gby5iIC8gMjU1LFxuICAgICAgbCA9IChCQ19EQSAqIGIgKyBFRCAqIHIgLSBFQiAqIGcpIC8gKEJDX0RBICsgRUQgLSBFQiksXG4gICAgICBibCA9IGIgLSBsLFxuICAgICAgayA9IChFICogKGcgLSBsKSAtIEMgKiBibCkgLyBELFxuICAgICAgcyA9IE1hdGguc3FydChrICogayArIGJsICogYmwpIC8gKEUgKiBsICogKDEgLSBsKSksIC8vIE5hTiBpZiBsPTAgb3IgbD0xXG4gICAgICBoID0gcyA/IE1hdGguYXRhbjIoaywgYmwpICogcmFkMmRlZyAtIDEyMCA6IE5hTjtcbiAgcmV0dXJuIG5ldyBDdWJlaGVsaXgoaCA8IDAgPyBoICsgMzYwIDogaCwgcywgbCwgby5vcGFjaXR5KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3ViZWhlbGl4KGgsIHMsIGwsIG9wYWNpdHkpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgPyBjdWJlaGVsaXhDb252ZXJ0KGgpIDogbmV3IEN1YmVoZWxpeChoLCBzLCBsLCBvcGFjaXR5ID09IG51bGwgPyAxIDogb3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBDdWJlaGVsaXgoaCwgcywgbCwgb3BhY2l0eSkge1xuICB0aGlzLmggPSAraDtcbiAgdGhpcy5zID0gK3M7XG4gIHRoaXMubCA9ICtsO1xuICB0aGlzLm9wYWNpdHkgPSArb3BhY2l0eTtcbn1cblxuZGVmaW5lKEN1YmVoZWxpeCwgY3ViZWhlbGl4LCBleHRlbmQoQ29sb3IsIHtcbiAgYnJpZ2h0ZXI6IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gYnJpZ2h0ZXIgOiBNYXRoLnBvdyhicmlnaHRlciwgayk7XG4gICAgcmV0dXJuIG5ldyBDdWJlaGVsaXgodGhpcy5oLCB0aGlzLnMsIHRoaXMubCAqIGssIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIGRhcmtlcjogZnVuY3Rpb24oaykge1xuICAgIGsgPSBrID09IG51bGwgPyBkYXJrZXIgOiBNYXRoLnBvdyhkYXJrZXIsIGspO1xuICAgIHJldHVybiBuZXcgQ3ViZWhlbGl4KHRoaXMuaCwgdGhpcy5zLCB0aGlzLmwgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICByZ2I6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoID0gaXNOYU4odGhpcy5oKSA/IDAgOiAodGhpcy5oICsgMTIwKSAqIGRlZzJyYWQsXG4gICAgICAgIGwgPSArdGhpcy5sLFxuICAgICAgICBhID0gaXNOYU4odGhpcy5zKSA/IDAgOiB0aGlzLnMgKiBsICogKDEgLSBsKSxcbiAgICAgICAgY29zaCA9IE1hdGguY29zKGgpLFxuICAgICAgICBzaW5oID0gTWF0aC5zaW4oaCk7XG4gICAgcmV0dXJuIG5ldyBSZ2IoXG4gICAgICAyNTUgKiAobCArIGEgKiAoQSAqIGNvc2ggKyBCICogc2luaCkpLFxuICAgICAgMjU1ICogKGwgKyBhICogKEMgKiBjb3NoICsgRCAqIHNpbmgpKSxcbiAgICAgIDI1NSAqIChsICsgYSAqIChFICogY29zaCkpLFxuICAgICAgdGhpcy5vcGFjaXR5XG4gICAgKTtcbiAgfVxufSkpO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29uc3RydWN0b3IsIGZhY3RvcnksIHByb3RvdHlwZSkge1xuICBjb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBmYWN0b3J5LnByb3RvdHlwZSA9IHByb3RvdHlwZTtcbiAgcHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY29uc3RydWN0b3I7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHRlbmQocGFyZW50LCBkZWZpbml0aW9uKSB7XG4gIHZhciBwcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHBhcmVudC5wcm90b3R5cGUpO1xuICBmb3IgKHZhciBrZXkgaW4gZGVmaW5pdGlvbikgcHJvdG90eXBlW2tleV0gPSBkZWZpbml0aW9uW2tleV07XG4gIHJldHVybiBwcm90b3R5cGU7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgY29sb3IsIHJnYiwgaHNsfSBmcm9tIFwiLi9jb2xvclwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGxhYiwgaGNsLCBsY2gsIGdyYXl9IGZyb20gXCIuL2xhYlwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1YmVoZWxpeH0gZnJvbSBcIi4vY3ViZWhlbGl4XCI7XG4iLCJpbXBvcnQgZGVmaW5lLCB7ZXh0ZW5kfSBmcm9tIFwiLi9kZWZpbmVcIjtcbmltcG9ydCB7Q29sb3IsIHJnYkNvbnZlcnQsIFJnYn0gZnJvbSBcIi4vY29sb3JcIjtcbmltcG9ydCB7ZGVnMnJhZCwgcmFkMmRlZ30gZnJvbSBcIi4vbWF0aFwiO1xuXG4vLyBodHRwczovL2JldGEub2JzZXJ2YWJsZWhxLmNvbS9AbWJvc3RvY2svbGFiLWFuZC1yZ2JcbnZhciBLID0gMTgsXG4gICAgWG4gPSAwLjk2NDIyLFxuICAgIFluID0gMSxcbiAgICBabiA9IDAuODI1MjEsXG4gICAgdDAgPSA0IC8gMjksXG4gICAgdDEgPSA2IC8gMjksXG4gICAgdDIgPSAzICogdDEgKiB0MSxcbiAgICB0MyA9IHQxICogdDEgKiB0MTtcblxuZnVuY3Rpb24gbGFiQ29udmVydChvKSB7XG4gIGlmIChvIGluc3RhbmNlb2YgTGFiKSByZXR1cm4gbmV3IExhYihvLmwsIG8uYSwgby5iLCBvLm9wYWNpdHkpO1xuICBpZiAobyBpbnN0YW5jZW9mIEhjbCkge1xuICAgIGlmIChpc05hTihvLmgpKSByZXR1cm4gbmV3IExhYihvLmwsIDAsIDAsIG8ub3BhY2l0eSk7XG4gICAgdmFyIGggPSBvLmggKiBkZWcycmFkO1xuICAgIHJldHVybiBuZXcgTGFiKG8ubCwgTWF0aC5jb3MoaCkgKiBvLmMsIE1hdGguc2luKGgpICogby5jLCBvLm9wYWNpdHkpO1xuICB9XG4gIGlmICghKG8gaW5zdGFuY2VvZiBSZ2IpKSBvID0gcmdiQ29udmVydChvKTtcbiAgdmFyIHIgPSByZ2IybHJnYihvLnIpLFxuICAgICAgZyA9IHJnYjJscmdiKG8uZyksXG4gICAgICBiID0gcmdiMmxyZ2Ioby5iKSxcbiAgICAgIHkgPSB4eXoybGFiKCgwLjIyMjUwNDUgKiByICsgMC43MTY4Nzg2ICogZyArIDAuMDYwNjE2OSAqIGIpIC8gWW4pLCB4LCB6O1xuICBpZiAociA9PT0gZyAmJiBnID09PSBiKSB4ID0geiA9IHk7IGVsc2Uge1xuICAgIHggPSB4eXoybGFiKCgwLjQzNjA3NDcgKiByICsgMC4zODUwNjQ5ICogZyArIDAuMTQzMDgwNCAqIGIpIC8gWG4pO1xuICAgIHogPSB4eXoybGFiKCgwLjAxMzkzMjIgKiByICsgMC4wOTcxMDQ1ICogZyArIDAuNzE0MTczMyAqIGIpIC8gWm4pO1xuICB9XG4gIHJldHVybiBuZXcgTGFiKDExNiAqIHkgLSAxNiwgNTAwICogKHggLSB5KSwgMjAwICogKHkgLSB6KSwgby5vcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdyYXkobCwgb3BhY2l0eSkge1xuICByZXR1cm4gbmV3IExhYihsLCAwLCAwLCBvcGFjaXR5ID09IG51bGwgPyAxIDogb3BhY2l0eSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxhYihsLCBhLCBiLCBvcGFjaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gbGFiQ29udmVydChsKSA6IG5ldyBMYWIobCwgYSwgYiwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gTGFiKGwsIGEsIGIsIG9wYWNpdHkpIHtcbiAgdGhpcy5sID0gK2w7XG4gIHRoaXMuYSA9ICthO1xuICB0aGlzLmIgPSArYjtcbiAgdGhpcy5vcGFjaXR5ID0gK29wYWNpdHk7XG59XG5cbmRlZmluZShMYWIsIGxhYiwgZXh0ZW5kKENvbG9yLCB7XG4gIGJyaWdodGVyOiBmdW5jdGlvbihrKSB7XG4gICAgcmV0dXJuIG5ldyBMYWIodGhpcy5sICsgSyAqIChrID09IG51bGwgPyAxIDogayksIHRoaXMuYSwgdGhpcy5iLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICBkYXJrZXI6IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gbmV3IExhYih0aGlzLmwgLSBLICogKGsgPT0gbnVsbCA/IDEgOiBrKSwgdGhpcy5hLCB0aGlzLmIsIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIHJnYjogZnVuY3Rpb24oKSB7XG4gICAgdmFyIHkgPSAodGhpcy5sICsgMTYpIC8gMTE2LFxuICAgICAgICB4ID0gaXNOYU4odGhpcy5hKSA/IHkgOiB5ICsgdGhpcy5hIC8gNTAwLFxuICAgICAgICB6ID0gaXNOYU4odGhpcy5iKSA/IHkgOiB5IC0gdGhpcy5iIC8gMjAwO1xuICAgIHggPSBYbiAqIGxhYjJ4eXooeCk7XG4gICAgeSA9IFluICogbGFiMnh5eih5KTtcbiAgICB6ID0gWm4gKiBsYWIyeHl6KHopO1xuICAgIHJldHVybiBuZXcgUmdiKFxuICAgICAgbHJnYjJyZ2IoIDMuMTMzODU2MSAqIHggLSAxLjYxNjg2NjcgKiB5IC0gMC40OTA2MTQ2ICogeiksXG4gICAgICBscmdiMnJnYigtMC45Nzg3Njg0ICogeCArIDEuOTE2MTQxNSAqIHkgKyAwLjAzMzQ1NDAgKiB6KSxcbiAgICAgIGxyZ2IycmdiKCAwLjA3MTk0NTMgKiB4IC0gMC4yMjg5OTE0ICogeSArIDEuNDA1MjQyNyAqIHopLFxuICAgICAgdGhpcy5vcGFjaXR5XG4gICAgKTtcbiAgfVxufSkpO1xuXG5mdW5jdGlvbiB4eXoybGFiKHQpIHtcbiAgcmV0dXJuIHQgPiB0MyA/IE1hdGgucG93KHQsIDEgLyAzKSA6IHQgLyB0MiArIHQwO1xufVxuXG5mdW5jdGlvbiBsYWIyeHl6KHQpIHtcbiAgcmV0dXJuIHQgPiB0MSA/IHQgKiB0ICogdCA6IHQyICogKHQgLSB0MCk7XG59XG5cbmZ1bmN0aW9uIGxyZ2IycmdiKHgpIHtcbiAgcmV0dXJuIDI1NSAqICh4IDw9IDAuMDAzMTMwOCA/IDEyLjkyICogeCA6IDEuMDU1ICogTWF0aC5wb3coeCwgMSAvIDIuNCkgLSAwLjA1NSk7XG59XG5cbmZ1bmN0aW9uIHJnYjJscmdiKHgpIHtcbiAgcmV0dXJuICh4IC89IDI1NSkgPD0gMC4wNDA0NSA/IHggLyAxMi45MiA6IE1hdGgucG93KCh4ICsgMC4wNTUpIC8gMS4wNTUsIDIuNCk7XG59XG5cbmZ1bmN0aW9uIGhjbENvbnZlcnQobykge1xuICBpZiAobyBpbnN0YW5jZW9mIEhjbCkgcmV0dXJuIG5ldyBIY2woby5oLCBvLmMsIG8ubCwgby5vcGFjaXR5KTtcbiAgaWYgKCEobyBpbnN0YW5jZW9mIExhYikpIG8gPSBsYWJDb252ZXJ0KG8pO1xuICBpZiAoby5hID09PSAwICYmIG8uYiA9PT0gMCkgcmV0dXJuIG5ldyBIY2woTmFOLCAwLCBvLmwsIG8ub3BhY2l0eSk7XG4gIHZhciBoID0gTWF0aC5hdGFuMihvLmIsIG8uYSkgKiByYWQyZGVnO1xuICByZXR1cm4gbmV3IEhjbChoIDwgMCA/IGggKyAzNjAgOiBoLCBNYXRoLnNxcnQoby5hICogby5hICsgby5iICogby5iKSwgby5sLCBvLm9wYWNpdHkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbGNoKGwsIGMsIGgsIG9wYWNpdHkpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgPyBoY2xDb252ZXJ0KGwpIDogbmV3IEhjbChoLCBjLCBsLCBvcGFjaXR5ID09IG51bGwgPyAxIDogb3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoY2woaCwgYywgbCwgb3BhY2l0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IGhjbENvbnZlcnQoaCkgOiBuZXcgSGNsKGgsIGMsIGwsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEhjbChoLCBjLCBsLCBvcGFjaXR5KSB7XG4gIHRoaXMuaCA9ICtoO1xuICB0aGlzLmMgPSArYztcbiAgdGhpcy5sID0gK2w7XG4gIHRoaXMub3BhY2l0eSA9ICtvcGFjaXR5O1xufVxuXG5kZWZpbmUoSGNsLCBoY2wsIGV4dGVuZChDb2xvciwge1xuICBicmlnaHRlcjogZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBuZXcgSGNsKHRoaXMuaCwgdGhpcy5jLCB0aGlzLmwgKyBLICogKGsgPT0gbnVsbCA/IDEgOiBrKSwgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgZGFya2VyOiBmdW5jdGlvbihrKSB7XG4gICAgcmV0dXJuIG5ldyBIY2wodGhpcy5oLCB0aGlzLmMsIHRoaXMubCAtIEsgKiAoayA9PSBudWxsID8gMSA6IGspLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICByZ2I6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBsYWJDb252ZXJ0KHRoaXMpLnJnYigpO1xuICB9XG59KSk7XG4iLCJleHBvcnQgdmFyIGRlZzJyYWQgPSBNYXRoLlBJIC8gMTgwO1xuZXhwb3J0IHZhciByYWQyZGVnID0gMTgwIC8gTWF0aC5QSTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHJpbmcpIHtcbiAgdmFyIGkgPSAwLCBuID0gcmluZy5sZW5ndGgsIGFyZWEgPSByaW5nW24gLSAxXVsxXSAqIHJpbmdbMF1bMF0gLSByaW5nW24gLSAxXVswXSAqIHJpbmdbMF1bMV07XG4gIHdoaWxlICgrK2kgPCBuKSBhcmVhICs9IHJpbmdbaSAtIDFdWzFdICogcmluZ1tpXVswXSAtIHJpbmdbaSAtIDFdWzBdICogcmluZ1tpXVsxXTtcbiAgcmV0dXJuIGFyZWE7XG59XG4iLCJ2YXIgYXJyYXkgPSBBcnJheS5wcm90b3R5cGU7XG5cbmV4cG9ydCB2YXIgc2xpY2UgPSBhcnJheS5zbGljZTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGEgLSBiO1xufVxuIiwiLy8gVE9ETyBPcHRpbWl6ZSBlZGdlIGNhc2VzLlxuLy8gVE9ETyBPcHRpbWl6ZSBpbmRleCBjYWxjdWxhdGlvbi5cbi8vIFRPRE8gT3B0aW1pemUgYXJndW1lbnRzLlxuZXhwb3J0IGZ1bmN0aW9uIGJsdXJYKHNvdXJjZSwgdGFyZ2V0LCByKSB7XG4gIHZhciBuID0gc291cmNlLndpZHRoLFxuICAgICAgbSA9IHNvdXJjZS5oZWlnaHQsXG4gICAgICB3ID0gKHIgPDwgMSkgKyAxO1xuICBmb3IgKHZhciBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGkgPSAwLCBzciA9IDA7IGkgPCBuICsgcjsgKytpKSB7XG4gICAgICBpZiAoaSA8IG4pIHtcbiAgICAgICAgc3IgKz0gc291cmNlLmRhdGFbaSArIGogKiBuXTtcbiAgICAgIH1cbiAgICAgIGlmIChpID49IHIpIHtcbiAgICAgICAgaWYgKGkgPj0gdykge1xuICAgICAgICAgIHNyIC09IHNvdXJjZS5kYXRhW2kgLSB3ICsgaiAqIG5dO1xuICAgICAgICB9XG4gICAgICAgIHRhcmdldC5kYXRhW2kgLSByICsgaiAqIG5dID0gc3IgLyBNYXRoLm1pbihpICsgMSwgbiAtIDEgKyB3IC0gaSwgdyk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8vIFRPRE8gT3B0aW1pemUgZWRnZSBjYXNlcy5cbi8vIFRPRE8gT3B0aW1pemUgaW5kZXggY2FsY3VsYXRpb24uXG4vLyBUT0RPIE9wdGltaXplIGFyZ3VtZW50cy5cbmV4cG9ydCBmdW5jdGlvbiBibHVyWShzb3VyY2UsIHRhcmdldCwgcikge1xuICB2YXIgbiA9IHNvdXJjZS53aWR0aCxcbiAgICAgIG0gPSBzb3VyY2UuaGVpZ2h0LFxuICAgICAgdyA9IChyIDw8IDEpICsgMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICBmb3IgKHZhciBqID0gMCwgc3IgPSAwOyBqIDwgbSArIHI7ICsraikge1xuICAgICAgaWYgKGogPCBtKSB7XG4gICAgICAgIHNyICs9IHNvdXJjZS5kYXRhW2kgKyBqICogbl07XG4gICAgICB9XG4gICAgICBpZiAoaiA+PSByKSB7XG4gICAgICAgIGlmIChqID49IHcpIHtcbiAgICAgICAgICBzciAtPSBzb3VyY2UuZGF0YVtpICsgKGogLSB3KSAqIG5dO1xuICAgICAgICB9XG4gICAgICAgIHRhcmdldC5kYXRhW2kgKyAoaiAtIHIpICogbl0gPSBzciAvIE1hdGgubWluKGogKyAxLCBtIC0gMSArIHcgLSBqLCB3KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocmluZywgaG9sZSkge1xuICB2YXIgaSA9IC0xLCBuID0gaG9sZS5sZW5ndGgsIGM7XG4gIHdoaWxlICgrK2kgPCBuKSBpZiAoYyA9IHJpbmdDb250YWlucyhyaW5nLCBob2xlW2ldKSkgcmV0dXJuIGM7XG4gIHJldHVybiAwO1xufVxuXG5mdW5jdGlvbiByaW5nQ29udGFpbnMocmluZywgcG9pbnQpIHtcbiAgdmFyIHggPSBwb2ludFswXSwgeSA9IHBvaW50WzFdLCBjb250YWlucyA9IC0xO1xuICBmb3IgKHZhciBpID0gMCwgbiA9IHJpbmcubGVuZ3RoLCBqID0gbiAtIDE7IGkgPCBuOyBqID0gaSsrKSB7XG4gICAgdmFyIHBpID0gcmluZ1tpXSwgeGkgPSBwaVswXSwgeWkgPSBwaVsxXSwgcGogPSByaW5nW2pdLCB4aiA9IHBqWzBdLCB5aiA9IHBqWzFdO1xuICAgIGlmIChzZWdtZW50Q29udGFpbnMocGksIHBqLCBwb2ludCkpIHJldHVybiAwO1xuICAgIGlmICgoKHlpID4geSkgIT09ICh5aiA+IHkpKSAmJiAoKHggPCAoeGogLSB4aSkgKiAoeSAtIHlpKSAvICh5aiAtIHlpKSArIHhpKSkpIGNvbnRhaW5zID0gLWNvbnRhaW5zO1xuICB9XG4gIHJldHVybiBjb250YWlucztcbn1cblxuZnVuY3Rpb24gc2VnbWVudENvbnRhaW5zKGEsIGIsIGMpIHtcbiAgdmFyIGk7IHJldHVybiBjb2xsaW5lYXIoYSwgYiwgYykgJiYgd2l0aGluKGFbaSA9ICsoYVswXSA9PT0gYlswXSldLCBjW2ldLCBiW2ldKTtcbn1cblxuZnVuY3Rpb24gY29sbGluZWFyKGEsIGIsIGMpIHtcbiAgcmV0dXJuIChiWzBdIC0gYVswXSkgKiAoY1sxXSAtIGFbMV0pID09PSAoY1swXSAtIGFbMF0pICogKGJbMV0gLSBhWzFdKTtcbn1cblxuZnVuY3Rpb24gd2l0aGluKHAsIHEsIHIpIHtcbiAgcmV0dXJuIHAgPD0gcSAmJiBxIDw9IHIgfHwgciA8PSBxICYmIHEgPD0gcDtcbn1cbiIsImltcG9ydCB7ZXh0ZW50LCB0aHJlc2hvbGRTdHVyZ2VzLCB0aWNrU3RlcCwgcmFuZ2V9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nXCI7XG5pbXBvcnQgYXJlYSBmcm9tIFwiLi9hcmVhXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBjb250YWlucyBmcm9tIFwiLi9jb250YWluc1wiO1xuaW1wb3J0IG5vb3AgZnJvbSBcIi4vbm9vcFwiO1xuXG52YXIgY2FzZXMgPSBbXG4gIFtdLFxuICBbW1sxLjAsIDEuNV0sIFswLjUsIDEuMF1dXSxcbiAgW1tbMS41LCAxLjBdLCBbMS4wLCAxLjVdXV0sXG4gIFtbWzEuNSwgMS4wXSwgWzAuNSwgMS4wXV1dLFxuICBbW1sxLjAsIDAuNV0sIFsxLjUsIDEuMF1dXSxcbiAgW1tbMS4wLCAxLjVdLCBbMC41LCAxLjBdXSwgW1sxLjAsIDAuNV0sIFsxLjUsIDEuMF1dXSxcbiAgW1tbMS4wLCAwLjVdLCBbMS4wLCAxLjVdXV0sXG4gIFtbWzEuMCwgMC41XSwgWzAuNSwgMS4wXV1dLFxuICBbW1swLjUsIDEuMF0sIFsxLjAsIDAuNV1dXSxcbiAgW1tbMS4wLCAxLjVdLCBbMS4wLCAwLjVdXV0sXG4gIFtbWzAuNSwgMS4wXSwgWzEuMCwgMC41XV0sIFtbMS41LCAxLjBdLCBbMS4wLCAxLjVdXV0sXG4gIFtbWzEuNSwgMS4wXSwgWzEuMCwgMC41XV1dLFxuICBbW1swLjUsIDEuMF0sIFsxLjUsIDEuMF1dXSxcbiAgW1tbMS4wLCAxLjVdLCBbMS41LCAxLjBdXV0sXG4gIFtbWzAuNSwgMS4wXSwgWzEuMCwgMS41XV1dLFxuICBbXVxuXTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICB0aHJlc2hvbGQgPSB0aHJlc2hvbGRTdHVyZ2VzLFxuICAgICAgc21vb3RoID0gc21vb3RoTGluZWFyO1xuXG4gIGZ1bmN0aW9uIGNvbnRvdXJzKHZhbHVlcykge1xuICAgIHZhciB0eiA9IHRocmVzaG9sZCh2YWx1ZXMpO1xuXG4gICAgLy8gQ29udmVydCBudW1iZXIgb2YgdGhyZXNob2xkcyBpbnRvIHVuaWZvcm0gdGhyZXNob2xkcy5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodHopKSB7XG4gICAgICB2YXIgZG9tYWluID0gZXh0ZW50KHZhbHVlcyksIHN0YXJ0ID0gZG9tYWluWzBdLCBzdG9wID0gZG9tYWluWzFdO1xuICAgICAgdHogPSB0aWNrU3RlcChzdGFydCwgc3RvcCwgdHopO1xuICAgICAgdHogPSByYW5nZShNYXRoLmZsb29yKHN0YXJ0IC8gdHopICogdHosIE1hdGguZmxvb3Ioc3RvcCAvIHR6KSAqIHR6LCB0eik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHR6ID0gdHouc2xpY2UoKS5zb3J0KGFzY2VuZGluZyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHR6Lm1hcChmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgcmV0dXJuIGNvbnRvdXIodmFsdWVzLCB2YWx1ZSk7XG4gICAgfSk7XG4gIH1cblxuICAvLyBBY2N1bXVsYXRlLCBzbW9vdGggY29udG91ciByaW5ncywgYXNzaWduIGhvbGVzIHRvIGV4dGVyaW9yIHJpbmdzLlxuICAvLyBCYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vbWJvc3RvY2svc2hhcGVmaWxlL2Jsb2IvdjAuNi4yL3NocC9wb2x5Z29uLmpzXG4gIGZ1bmN0aW9uIGNvbnRvdXIodmFsdWVzLCB2YWx1ZSkge1xuICAgIHZhciBwb2x5Z29ucyA9IFtdLFxuICAgICAgICBob2xlcyA9IFtdO1xuXG4gICAgaXNvcmluZ3ModmFsdWVzLCB2YWx1ZSwgZnVuY3Rpb24ocmluZykge1xuICAgICAgc21vb3RoKHJpbmcsIHZhbHVlcywgdmFsdWUpO1xuICAgICAgaWYgKGFyZWEocmluZykgPiAwKSBwb2x5Z29ucy5wdXNoKFtyaW5nXSk7XG4gICAgICBlbHNlIGhvbGVzLnB1c2gocmluZyk7XG4gICAgfSk7XG5cbiAgICBob2xlcy5mb3JFYWNoKGZ1bmN0aW9uKGhvbGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBuID0gcG9seWdvbnMubGVuZ3RoLCBwb2x5Z29uOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmIChjb250YWlucygocG9seWdvbiA9IHBvbHlnb25zW2ldKVswXSwgaG9sZSkgIT09IC0xKSB7XG4gICAgICAgICAgcG9seWdvbi5wdXNoKGhvbGUpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwiTXVsdGlQb2x5Z29uXCIsXG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBjb29yZGluYXRlczogcG9seWdvbnNcbiAgICB9O1xuICB9XG5cbiAgLy8gTWFyY2hpbmcgc3F1YXJlcyB3aXRoIGlzb2xpbmVzIHN0aXRjaGVkIGludG8gcmluZ3MuXG4gIC8vIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS90b3BvanNvbi90b3BvanNvbi1jbGllbnQvYmxvYi92My4wLjAvc3JjL3N0aXRjaC5qc1xuICBmdW5jdGlvbiBpc29yaW5ncyh2YWx1ZXMsIHZhbHVlLCBjYWxsYmFjaykge1xuICAgIHZhciBmcmFnbWVudEJ5U3RhcnQgPSBuZXcgQXJyYXksXG4gICAgICAgIGZyYWdtZW50QnlFbmQgPSBuZXcgQXJyYXksXG4gICAgICAgIHgsIHksIHQwLCB0MSwgdDIsIHQzO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIGZvciB0aGUgZmlyc3Qgcm93ICh5ID0gLTEsIHQyID0gdDMgPSAwKS5cbiAgICB4ID0geSA9IC0xO1xuICAgIHQxID0gdmFsdWVzWzBdID49IHZhbHVlO1xuICAgIGNhc2VzW3QxIDw8IDFdLmZvckVhY2goc3RpdGNoKTtcbiAgICB3aGlsZSAoKyt4IDwgZHggLSAxKSB7XG4gICAgICB0MCA9IHQxLCB0MSA9IHZhbHVlc1t4ICsgMV0gPj0gdmFsdWU7XG4gICAgICBjYXNlc1t0MCB8IHQxIDw8IDFdLmZvckVhY2goc3RpdGNoKTtcbiAgICB9XG4gICAgY2FzZXNbdDEgPDwgMF0uZm9yRWFjaChzdGl0Y2gpO1xuXG4gICAgLy8gR2VuZXJhbCBjYXNlIGZvciB0aGUgaW50ZXJtZWRpYXRlIHJvd3MuXG4gICAgd2hpbGUgKCsreSA8IGR5IC0gMSkge1xuICAgICAgeCA9IC0xO1xuICAgICAgdDEgPSB2YWx1ZXNbeSAqIGR4ICsgZHhdID49IHZhbHVlO1xuICAgICAgdDIgPSB2YWx1ZXNbeSAqIGR4XSA+PSB2YWx1ZTtcbiAgICAgIGNhc2VzW3QxIDw8IDEgfCB0MiA8PCAyXS5mb3JFYWNoKHN0aXRjaCk7XG4gICAgICB3aGlsZSAoKyt4IDwgZHggLSAxKSB7XG4gICAgICAgIHQwID0gdDEsIHQxID0gdmFsdWVzW3kgKiBkeCArIGR4ICsgeCArIDFdID49IHZhbHVlO1xuICAgICAgICB0MyA9IHQyLCB0MiA9IHZhbHVlc1t5ICogZHggKyB4ICsgMV0gPj0gdmFsdWU7XG4gICAgICAgIGNhc2VzW3QwIHwgdDEgPDwgMSB8IHQyIDw8IDIgfCB0MyA8PCAzXS5mb3JFYWNoKHN0aXRjaCk7XG4gICAgICB9XG4gICAgICBjYXNlc1t0MSB8IHQyIDw8IDNdLmZvckVhY2goc3RpdGNoKTtcbiAgICB9XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgZm9yIHRoZSBsYXN0IHJvdyAoeSA9IGR5IC0gMSwgdDAgPSB0MSA9IDApLlxuICAgIHggPSAtMTtcbiAgICB0MiA9IHZhbHVlc1t5ICogZHhdID49IHZhbHVlO1xuICAgIGNhc2VzW3QyIDw8IDJdLmZvckVhY2goc3RpdGNoKTtcbiAgICB3aGlsZSAoKyt4IDwgZHggLSAxKSB7XG4gICAgICB0MyA9IHQyLCB0MiA9IHZhbHVlc1t5ICogZHggKyB4ICsgMV0gPj0gdmFsdWU7XG4gICAgICBjYXNlc1t0MiA8PCAyIHwgdDMgPDwgM10uZm9yRWFjaChzdGl0Y2gpO1xuICAgIH1cbiAgICBjYXNlc1t0MiA8PCAzXS5mb3JFYWNoKHN0aXRjaCk7XG5cbiAgICBmdW5jdGlvbiBzdGl0Y2gobGluZSkge1xuICAgICAgdmFyIHN0YXJ0ID0gW2xpbmVbMF1bMF0gKyB4LCBsaW5lWzBdWzFdICsgeV0sXG4gICAgICAgICAgZW5kID0gW2xpbmVbMV1bMF0gKyB4LCBsaW5lWzFdWzFdICsgeV0sXG4gICAgICAgICAgc3RhcnRJbmRleCA9IGluZGV4KHN0YXJ0KSxcbiAgICAgICAgICBlbmRJbmRleCA9IGluZGV4KGVuZCksXG4gICAgICAgICAgZiwgZztcbiAgICAgIGlmIChmID0gZnJhZ21lbnRCeUVuZFtzdGFydEluZGV4XSkge1xuICAgICAgICBpZiAoZyA9IGZyYWdtZW50QnlTdGFydFtlbmRJbmRleF0pIHtcbiAgICAgICAgICBkZWxldGUgZnJhZ21lbnRCeUVuZFtmLmVuZF07XG4gICAgICAgICAgZGVsZXRlIGZyYWdtZW50QnlTdGFydFtnLnN0YXJ0XTtcbiAgICAgICAgICBpZiAoZiA9PT0gZykge1xuICAgICAgICAgICAgZi5yaW5nLnB1c2goZW5kKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKGYucmluZyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZyYWdtZW50QnlTdGFydFtmLnN0YXJ0XSA9IGZyYWdtZW50QnlFbmRbZy5lbmRdID0ge3N0YXJ0OiBmLnN0YXJ0LCBlbmQ6IGcuZW5kLCByaW5nOiBmLnJpbmcuY29uY2F0KGcucmluZyl9O1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZWxldGUgZnJhZ21lbnRCeUVuZFtmLmVuZF07XG4gICAgICAgICAgZi5yaW5nLnB1c2goZW5kKTtcbiAgICAgICAgICBmcmFnbWVudEJ5RW5kW2YuZW5kID0gZW5kSW5kZXhdID0gZjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChmID0gZnJhZ21lbnRCeVN0YXJ0W2VuZEluZGV4XSkge1xuICAgICAgICBpZiAoZyA9IGZyYWdtZW50QnlFbmRbc3RhcnRJbmRleF0pIHtcbiAgICAgICAgICBkZWxldGUgZnJhZ21lbnRCeVN0YXJ0W2Yuc3RhcnRdO1xuICAgICAgICAgIGRlbGV0ZSBmcmFnbWVudEJ5RW5kW2cuZW5kXTtcbiAgICAgICAgICBpZiAoZiA9PT0gZykge1xuICAgICAgICAgICAgZi5yaW5nLnB1c2goZW5kKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKGYucmluZyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZyYWdtZW50QnlTdGFydFtnLnN0YXJ0XSA9IGZyYWdtZW50QnlFbmRbZi5lbmRdID0ge3N0YXJ0OiBnLnN0YXJ0LCBlbmQ6IGYuZW5kLCByaW5nOiBnLnJpbmcuY29uY2F0KGYucmluZyl9O1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZWxldGUgZnJhZ21lbnRCeVN0YXJ0W2Yuc3RhcnRdO1xuICAgICAgICAgIGYucmluZy51bnNoaWZ0KHN0YXJ0KTtcbiAgICAgICAgICBmcmFnbWVudEJ5U3RhcnRbZi5zdGFydCA9IHN0YXJ0SW5kZXhdID0gZjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZnJhZ21lbnRCeVN0YXJ0W3N0YXJ0SW5kZXhdID0gZnJhZ21lbnRCeUVuZFtlbmRJbmRleF0gPSB7c3RhcnQ6IHN0YXJ0SW5kZXgsIGVuZDogZW5kSW5kZXgsIHJpbmc6IFtzdGFydCwgZW5kXX07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5kZXgocG9pbnQpIHtcbiAgICByZXR1cm4gcG9pbnRbMF0gKiAyICsgcG9pbnRbMV0gKiAoZHggKyAxKSAqIDQ7XG4gIH1cblxuICBmdW5jdGlvbiBzbW9vdGhMaW5lYXIocmluZywgdmFsdWVzLCB2YWx1ZSkge1xuICAgIHJpbmcuZm9yRWFjaChmdW5jdGlvbihwb2ludCkge1xuICAgICAgdmFyIHggPSBwb2ludFswXSxcbiAgICAgICAgICB5ID0gcG9pbnRbMV0sXG4gICAgICAgICAgeHQgPSB4IHwgMCxcbiAgICAgICAgICB5dCA9IHkgfCAwLFxuICAgICAgICAgIHYwLFxuICAgICAgICAgIHYxID0gdmFsdWVzW3l0ICogZHggKyB4dF07XG4gICAgICBpZiAoeCA+IDAgJiYgeCA8IGR4ICYmIHh0ID09PSB4KSB7XG4gICAgICAgIHYwID0gdmFsdWVzW3l0ICogZHggKyB4dCAtIDFdO1xuICAgICAgICBwb2ludFswXSA9IHggKyAodmFsdWUgLSB2MCkgLyAodjEgLSB2MCkgLSAwLjU7XG4gICAgICB9XG4gICAgICBpZiAoeSA+IDAgJiYgeSA8IGR5ICYmIHl0ID09PSB5KSB7XG4gICAgICAgIHYwID0gdmFsdWVzWyh5dCAtIDEpICogZHggKyB4dF07XG4gICAgICAgIHBvaW50WzFdID0geSArICh2YWx1ZSAtIHYwKSAvICh2MSAtIHYwKSAtIDAuNTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGNvbnRvdXJzLmNvbnRvdXIgPSBjb250b3VyO1xuXG4gIGNvbnRvdXJzLnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gW2R4LCBkeV07XG4gICAgdmFyIF8wID0gTWF0aC5jZWlsKF9bMF0pLCBfMSA9IE1hdGguY2VpbChfWzFdKTtcbiAgICBpZiAoIShfMCA+IDApIHx8ICEoXzEgPiAwKSkgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBzaXplXCIpO1xuICAgIHJldHVybiBkeCA9IF8wLCBkeSA9IF8xLCBjb250b3VycztcbiAgfTtcblxuICBjb250b3Vycy50aHJlc2hvbGRzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRocmVzaG9sZCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogQXJyYXkuaXNBcnJheShfKSA/IGNvbnN0YW50KHNsaWNlLmNhbGwoXykpIDogY29uc3RhbnQoXyksIGNvbnRvdXJzKSA6IHRocmVzaG9sZDtcbiAgfTtcblxuICBjb250b3Vycy5zbW9vdGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc21vb3RoID0gXyA/IHNtb290aExpbmVhciA6IG5vb3AsIGNvbnRvdXJzKSA6IHNtb290aCA9PT0gc21vb3RoTGluZWFyO1xuICB9O1xuXG4gIHJldHVybiBjb250b3Vycztcbn1cbiIsImltcG9ydCB7bWF4LCByYW5nZSwgdGlja1N0ZXB9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCB7Ymx1clgsIGJsdXJZfSBmcm9tIFwiLi9ibHVyXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBjb250b3VycyBmcm9tIFwiLi9jb250b3Vyc1wiO1xuXG5mdW5jdGlvbiBkZWZhdWx0WChkKSB7XG4gIHJldHVybiBkWzBdO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0WShkKSB7XG4gIHJldHVybiBkWzFdO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0V2VpZ2h0KCkge1xuICByZXR1cm4gMTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciB4ID0gZGVmYXVsdFgsXG4gICAgICB5ID0gZGVmYXVsdFksXG4gICAgICB3ZWlnaHQgPSBkZWZhdWx0V2VpZ2h0LFxuICAgICAgZHggPSA5NjAsXG4gICAgICBkeSA9IDUwMCxcbiAgICAgIHIgPSAyMCwgLy8gYmx1ciByYWRpdXNcbiAgICAgIGsgPSAyLCAvLyBsb2cyKGdyaWQgY2VsbCBzaXplKVxuICAgICAgbyA9IHIgKiAzLCAvLyBncmlkIG9mZnNldCwgdG8gcGFkIGZvciBibHVyXG4gICAgICBuID0gKGR4ICsgbyAqIDIpID4+IGssIC8vIGdyaWQgd2lkdGhcbiAgICAgIG0gPSAoZHkgKyBvICogMikgPj4gaywgLy8gZ3JpZCBoZWlnaHRcbiAgICAgIHRocmVzaG9sZCA9IGNvbnN0YW50KDIwKTtcblxuICBmdW5jdGlvbiBkZW5zaXR5KGRhdGEpIHtcbiAgICB2YXIgdmFsdWVzMCA9IG5ldyBGbG9hdDMyQXJyYXkobiAqIG0pLFxuICAgICAgICB2YWx1ZXMxID0gbmV3IEZsb2F0MzJBcnJheShuICogbSk7XG5cbiAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24oZCwgaSwgZGF0YSkge1xuICAgICAgdmFyIHhpID0gKCt4KGQsIGksIGRhdGEpICsgbykgPj4gayxcbiAgICAgICAgICB5aSA9ICgreShkLCBpLCBkYXRhKSArIG8pID4+IGssXG4gICAgICAgICAgd2kgPSArd2VpZ2h0KGQsIGksIGRhdGEpO1xuICAgICAgaWYgKHhpID49IDAgJiYgeGkgPCBuICYmIHlpID49IDAgJiYgeWkgPCBtKSB7XG4gICAgICAgIHZhbHVlczBbeGkgKyB5aSAqIG5dICs9IHdpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gVE9ETyBPcHRpbWl6ZS5cbiAgICBibHVyWCh7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMH0sIHt3aWR0aDogbiwgaGVpZ2h0OiBtLCBkYXRhOiB2YWx1ZXMxfSwgciA+PiBrKTtcbiAgICBibHVyWSh7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMX0sIHt3aWR0aDogbiwgaGVpZ2h0OiBtLCBkYXRhOiB2YWx1ZXMwfSwgciA+PiBrKTtcbiAgICBibHVyWCh7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMH0sIHt3aWR0aDogbiwgaGVpZ2h0OiBtLCBkYXRhOiB2YWx1ZXMxfSwgciA+PiBrKTtcbiAgICBibHVyWSh7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMX0sIHt3aWR0aDogbiwgaGVpZ2h0OiBtLCBkYXRhOiB2YWx1ZXMwfSwgciA+PiBrKTtcbiAgICBibHVyWCh7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMH0sIHt3aWR0aDogbiwgaGVpZ2h0OiBtLCBkYXRhOiB2YWx1ZXMxfSwgciA+PiBrKTtcbiAgICBibHVyWSh7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMX0sIHt3aWR0aDogbiwgaGVpZ2h0OiBtLCBkYXRhOiB2YWx1ZXMwfSwgciA+PiBrKTtcblxuICAgIHZhciB0eiA9IHRocmVzaG9sZCh2YWx1ZXMwKTtcblxuICAgIC8vIENvbnZlcnQgbnVtYmVyIG9mIHRocmVzaG9sZHMgaW50byB1bmlmb3JtIHRocmVzaG9sZHMuXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHR6KSkge1xuICAgICAgdmFyIHN0b3AgPSBtYXgodmFsdWVzMCk7XG4gICAgICB0eiA9IHRpY2tTdGVwKDAsIHN0b3AsIHR6KTtcbiAgICAgIHR6ID0gcmFuZ2UoMCwgTWF0aC5mbG9vcihzdG9wIC8gdHopICogdHosIHR6KTtcbiAgICAgIHR6LnNoaWZ0KCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNvbnRvdXJzKClcbiAgICAgICAgLnRocmVzaG9sZHModHopXG4gICAgICAgIC5zaXplKFtuLCBtXSlcbiAgICAgICh2YWx1ZXMwKVxuICAgICAgICAubWFwKHRyYW5zZm9ybSk7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFuc2Zvcm0oZ2VvbWV0cnkpIHtcbiAgICBnZW9tZXRyeS52YWx1ZSAqPSBNYXRoLnBvdygyLCAtMiAqIGspOyAvLyBEZW5zaXR5IGluIHBvaW50cyBwZXIgc3F1YXJlIHBpeGVsLlxuICAgIGdlb21ldHJ5LmNvb3JkaW5hdGVzLmZvckVhY2godHJhbnNmb3JtUG9seWdvbik7XG4gICAgcmV0dXJuIGdlb21ldHJ5O1xuICB9XG5cbiAgZnVuY3Rpb24gdHJhbnNmb3JtUG9seWdvbihjb29yZGluYXRlcykge1xuICAgIGNvb3JkaW5hdGVzLmZvckVhY2godHJhbnNmb3JtUmluZyk7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFuc2Zvcm1SaW5nKGNvb3JkaW5hdGVzKSB7XG4gICAgY29vcmRpbmF0ZXMuZm9yRWFjaCh0cmFuc2Zvcm1Qb2ludCk7XG4gIH1cblxuICAvLyBUT0RPIE9wdGltaXplLlxuICBmdW5jdGlvbiB0cmFuc2Zvcm1Qb2ludChjb29yZGluYXRlcykge1xuICAgIGNvb3JkaW5hdGVzWzBdID0gY29vcmRpbmF0ZXNbMF0gKiBNYXRoLnBvdygyLCBrKSAtIG87XG4gICAgY29vcmRpbmF0ZXNbMV0gPSBjb29yZGluYXRlc1sxXSAqIE1hdGgucG93KDIsIGspIC0gbztcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2l6ZSgpIHtcbiAgICBvID0gciAqIDM7XG4gICAgbiA9IChkeCArIG8gKiAyKSA+PiBrO1xuICAgIG0gPSAoZHkgKyBvICogMikgPj4gaztcbiAgICByZXR1cm4gZGVuc2l0eTtcbiAgfVxuXG4gIGRlbnNpdHkueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGRlbnNpdHkpIDogeDtcbiAgfTtcblxuICBkZW5zaXR5LnkgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBkZW5zaXR5KSA6IHk7XG4gIH07XG5cbiAgZGVuc2l0eS53ZWlnaHQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAod2VpZ2h0ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGRlbnNpdHkpIDogd2VpZ2h0O1xuICB9O1xuXG4gIGRlbnNpdHkuc2l6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbZHgsIGR5XTtcbiAgICB2YXIgXzAgPSBNYXRoLmNlaWwoX1swXSksIF8xID0gTWF0aC5jZWlsKF9bMV0pO1xuICAgIGlmICghKF8wID49IDApICYmICEoXzAgPj0gMCkpIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgc2l6ZVwiKTtcbiAgICByZXR1cm4gZHggPSBfMCwgZHkgPSBfMSwgcmVzaXplKCk7XG4gIH07XG5cbiAgZGVuc2l0eS5jZWxsU2l6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiAxIDw8IGs7XG4gICAgaWYgKCEoKF8gPSArXykgPj0gMSkpIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgY2VsbCBzaXplXCIpO1xuICAgIHJldHVybiBrID0gTWF0aC5mbG9vcihNYXRoLmxvZyhfKSAvIE1hdGguTE4yKSwgcmVzaXplKCk7XG4gIH07XG5cbiAgZGVuc2l0eS50aHJlc2hvbGRzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRocmVzaG9sZCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogQXJyYXkuaXNBcnJheShfKSA/IGNvbnN0YW50KHNsaWNlLmNhbGwoXykpIDogY29uc3RhbnQoXyksIGRlbnNpdHkpIDogdGhyZXNob2xkO1xuICB9O1xuXG4gIGRlbnNpdHkuYmFuZHdpZHRoID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIE1hdGguc3FydChyICogKHIgKyAxKSk7XG4gICAgaWYgKCEoKF8gPSArXykgPj0gMCkpIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgYmFuZHdpZHRoXCIpO1xuICAgIHJldHVybiByID0gTWF0aC5yb3VuZCgoTWF0aC5zcXJ0KDQgKiBfICogXyArIDEpIC0gMSkgLyAyKSwgcmVzaXplKCk7XG4gIH07XG5cbiAgcmV0dXJuIGRlbnNpdHk7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgY29udG91cnN9IGZyb20gXCIuL2NvbnRvdXJzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY29udG91ckRlbnNpdHl9IGZyb20gXCIuL2RlbnNpdHlcIjtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge31cbiIsInZhciBub29wID0ge3ZhbHVlOiBmdW5jdGlvbigpIHt9fTtcblxuZnVuY3Rpb24gZGlzcGF0Y2goKSB7XG4gIGZvciAodmFyIGkgPSAwLCBuID0gYXJndW1lbnRzLmxlbmd0aCwgXyA9IHt9LCB0OyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKCEodCA9IGFyZ3VtZW50c1tpXSArIFwiXCIpIHx8ICh0IGluIF8pKSB0aHJvdyBuZXcgRXJyb3IoXCJpbGxlZ2FsIHR5cGU6IFwiICsgdCk7XG4gICAgX1t0XSA9IFtdO1xuICB9XG4gIHJldHVybiBuZXcgRGlzcGF0Y2goXyk7XG59XG5cbmZ1bmN0aW9uIERpc3BhdGNoKF8pIHtcbiAgdGhpcy5fID0gXztcbn1cblxuZnVuY3Rpb24gcGFyc2VUeXBlbmFtZXModHlwZW5hbWVzLCB0eXBlcykge1xuICByZXR1cm4gdHlwZW5hbWVzLnRyaW0oKS5zcGxpdCgvXnxcXHMrLykubWFwKGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgbmFtZSA9IFwiXCIsIGkgPSB0LmluZGV4T2YoXCIuXCIpO1xuICAgIGlmIChpID49IDApIG5hbWUgPSB0LnNsaWNlKGkgKyAxKSwgdCA9IHQuc2xpY2UoMCwgaSk7XG4gICAgaWYgKHQgJiYgIXR5cGVzLmhhc093blByb3BlcnR5KHQpKSB0aHJvdyBuZXcgRXJyb3IoXCJ1bmtub3duIHR5cGU6IFwiICsgdCk7XG4gICAgcmV0dXJuIHt0eXBlOiB0LCBuYW1lOiBuYW1lfTtcbiAgfSk7XG59XG5cbkRpc3BhdGNoLnByb3RvdHlwZSA9IGRpc3BhdGNoLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IERpc3BhdGNoLFxuICBvbjogZnVuY3Rpb24odHlwZW5hbWUsIGNhbGxiYWNrKSB7XG4gICAgdmFyIF8gPSB0aGlzLl8sXG4gICAgICAgIFQgPSBwYXJzZVR5cGVuYW1lcyh0eXBlbmFtZSArIFwiXCIsIF8pLFxuICAgICAgICB0LFxuICAgICAgICBpID0gLTEsXG4gICAgICAgIG4gPSBULmxlbmd0aDtcblxuICAgIC8vIElmIG5vIGNhbGxiYWNrIHdhcyBzcGVjaWZpZWQsIHJldHVybiB0aGUgY2FsbGJhY2sgb2YgdGhlIGdpdmVuIHR5cGUgYW5kIG5hbWUuXG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKCh0ID0gKHR5cGVuYW1lID0gVFtpXSkudHlwZSkgJiYgKHQgPSBnZXQoX1t0XSwgdHlwZW5hbWUubmFtZSkpKSByZXR1cm4gdDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBJZiBhIHR5cGUgd2FzIHNwZWNpZmllZCwgc2V0IHRoZSBjYWxsYmFjayBmb3IgdGhlIGdpdmVuIHR5cGUgYW5kIG5hbWUuXG4gICAgLy8gT3RoZXJ3aXNlLCBpZiBhIG51bGwgY2FsbGJhY2sgd2FzIHNwZWNpZmllZCwgcmVtb3ZlIGNhbGxiYWNrcyBvZiB0aGUgZ2l2ZW4gbmFtZS5cbiAgICBpZiAoY2FsbGJhY2sgIT0gbnVsbCAmJiB0eXBlb2YgY2FsbGJhY2sgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBjYWxsYmFjazogXCIgKyBjYWxsYmFjayk7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICh0ID0gKHR5cGVuYW1lID0gVFtpXSkudHlwZSkgX1t0XSA9IHNldChfW3RdLCB0eXBlbmFtZS5uYW1lLCBjYWxsYmFjayk7XG4gICAgICBlbHNlIGlmIChjYWxsYmFjayA9PSBudWxsKSBmb3IgKHQgaW4gXykgX1t0XSA9IHNldChfW3RdLCB0eXBlbmFtZS5uYW1lLCBudWxsKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfSxcbiAgY29weTogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGNvcHkgPSB7fSwgXyA9IHRoaXMuXztcbiAgICBmb3IgKHZhciB0IGluIF8pIGNvcHlbdF0gPSBfW3RdLnNsaWNlKCk7XG4gICAgcmV0dXJuIG5ldyBEaXNwYXRjaChjb3B5KTtcbiAgfSxcbiAgY2FsbDogZnVuY3Rpb24odHlwZSwgdGhhdCkge1xuICAgIGlmICgobiA9IGFyZ3VtZW50cy5sZW5ndGggLSAyKSA+IDApIGZvciAodmFyIGFyZ3MgPSBuZXcgQXJyYXkobiksIGkgPSAwLCBuLCB0OyBpIDwgbjsgKytpKSBhcmdzW2ldID0gYXJndW1lbnRzW2kgKyAyXTtcbiAgICBpZiAoIXRoaXMuXy5oYXNPd25Qcm9wZXJ0eSh0eXBlKSkgdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biB0eXBlOiBcIiArIHR5cGUpO1xuICAgIGZvciAodCA9IHRoaXMuX1t0eXBlXSwgaSA9IDAsIG4gPSB0Lmxlbmd0aDsgaSA8IG47ICsraSkgdFtpXS52YWx1ZS5hcHBseSh0aGF0LCBhcmdzKTtcbiAgfSxcbiAgYXBwbHk6IGZ1bmN0aW9uKHR5cGUsIHRoYXQsIGFyZ3MpIHtcbiAgICBpZiAoIXRoaXMuXy5oYXNPd25Qcm9wZXJ0eSh0eXBlKSkgdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biB0eXBlOiBcIiArIHR5cGUpO1xuICAgIGZvciAodmFyIHQgPSB0aGlzLl9bdHlwZV0sIGkgPSAwLCBuID0gdC5sZW5ndGg7IGkgPCBuOyArK2kpIHRbaV0udmFsdWUuYXBwbHkodGhhdCwgYXJncyk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGdldCh0eXBlLCBuYW1lKSB7XG4gIGZvciAodmFyIGkgPSAwLCBuID0gdHlwZS5sZW5ndGgsIGM7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAoKGMgPSB0eXBlW2ldKS5uYW1lID09PSBuYW1lKSB7XG4gICAgICByZXR1cm4gYy52YWx1ZTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gc2V0KHR5cGUsIG5hbWUsIGNhbGxiYWNrKSB7XG4gIGZvciAodmFyIGkgPSAwLCBuID0gdHlwZS5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAodHlwZVtpXS5uYW1lID09PSBuYW1lKSB7XG4gICAgICB0eXBlW2ldID0gbm9vcCwgdHlwZSA9IHR5cGUuc2xpY2UoMCwgaSkuY29uY2F0KHR5cGUuc2xpY2UoaSArIDEpKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICBpZiAoY2FsbGJhY2sgIT0gbnVsbCkgdHlwZS5wdXNoKHtuYW1lOiBuYW1lLCB2YWx1ZTogY2FsbGJhY2t9KTtcbiAgcmV0dXJuIHR5cGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGRpc3BhdGNoO1xuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGRpc3BhdGNofSBmcm9tIFwiLi9kaXNwYXRjaFwiO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJpbXBvcnQge2Rpc3BhdGNofSBmcm9tIFwiZDMtZGlzcGF0Y2hcIjtcbmltcG9ydCB7ZXZlbnQsIGN1c3RvbUV2ZW50LCBzZWxlY3QsIG1vdXNlLCB0b3VjaH0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IG5vZHJhZywge3llc2RyYWd9IGZyb20gXCIuL25vZHJhZ1wiO1xuaW1wb3J0IG5vZXZlbnQsIHtub3Byb3BhZ2F0aW9ufSBmcm9tIFwiLi9ub2V2ZW50XCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBEcmFnRXZlbnQgZnJvbSBcIi4vZXZlbnRcIjtcblxuLy8gSWdub3JlIHJpZ2h0LWNsaWNrLCBzaW5jZSB0aGF0IHNob3VsZCBvcGVuIHRoZSBjb250ZXh0IG1lbnUuXG5mdW5jdGlvbiBkZWZhdWx0RmlsdGVyKCkge1xuICByZXR1cm4gIWV2ZW50LmJ1dHRvbjtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdENvbnRhaW5lcigpIHtcbiAgcmV0dXJuIHRoaXMucGFyZW50Tm9kZTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFN1YmplY3QoZCkge1xuICByZXR1cm4gZCA9PSBudWxsID8ge3g6IGV2ZW50LngsIHk6IGV2ZW50Lnl9IDogZDtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFRvdWNoYWJsZSgpIHtcbiAgcmV0dXJuIFwib250b3VjaHN0YXJ0XCIgaW4gdGhpcztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBmaWx0ZXIgPSBkZWZhdWx0RmlsdGVyLFxuICAgICAgY29udGFpbmVyID0gZGVmYXVsdENvbnRhaW5lcixcbiAgICAgIHN1YmplY3QgPSBkZWZhdWx0U3ViamVjdCxcbiAgICAgIHRvdWNoYWJsZSA9IGRlZmF1bHRUb3VjaGFibGUsXG4gICAgICBnZXN0dXJlcyA9IHt9LFxuICAgICAgbGlzdGVuZXJzID0gZGlzcGF0Y2goXCJzdGFydFwiLCBcImRyYWdcIiwgXCJlbmRcIiksXG4gICAgICBhY3RpdmUgPSAwLFxuICAgICAgbW91c2Vkb3dueCxcbiAgICAgIG1vdXNlZG93bnksXG4gICAgICBtb3VzZW1vdmluZyxcbiAgICAgIHRvdWNoZW5kaW5nLFxuICAgICAgY2xpY2tEaXN0YW5jZTIgPSAwO1xuXG4gIGZ1bmN0aW9uIGRyYWcoc2VsZWN0aW9uKSB7XG4gICAgc2VsZWN0aW9uXG4gICAgICAgIC5vbihcIm1vdXNlZG93bi5kcmFnXCIsIG1vdXNlZG93bmVkKVxuICAgICAgLmZpbHRlcih0b3VjaGFibGUpXG4gICAgICAgIC5vbihcInRvdWNoc3RhcnQuZHJhZ1wiLCB0b3VjaHN0YXJ0ZWQpXG4gICAgICAgIC5vbihcInRvdWNobW92ZS5kcmFnXCIsIHRvdWNobW92ZWQpXG4gICAgICAgIC5vbihcInRvdWNoZW5kLmRyYWcgdG91Y2hjYW5jZWwuZHJhZ1wiLCB0b3VjaGVuZGVkKVxuICAgICAgICAuc3R5bGUoXCJ0b3VjaC1hY3Rpb25cIiwgXCJub25lXCIpXG4gICAgICAgIC5zdHlsZShcIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvclwiLCBcInJnYmEoMCwwLDAsMClcIik7XG4gIH1cblxuICBmdW5jdGlvbiBtb3VzZWRvd25lZCgpIHtcbiAgICBpZiAodG91Y2hlbmRpbmcgfHwgIWZpbHRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSByZXR1cm47XG4gICAgdmFyIGdlc3R1cmUgPSBiZWZvcmVzdGFydChcIm1vdXNlXCIsIGNvbnRhaW5lci5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCBtb3VzZSwgdGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAoIWdlc3R1cmUpIHJldHVybjtcbiAgICBzZWxlY3QoZXZlbnQudmlldykub24oXCJtb3VzZW1vdmUuZHJhZ1wiLCBtb3VzZW1vdmVkLCB0cnVlKS5vbihcIm1vdXNldXAuZHJhZ1wiLCBtb3VzZXVwcGVkLCB0cnVlKTtcbiAgICBub2RyYWcoZXZlbnQudmlldyk7XG4gICAgbm9wcm9wYWdhdGlvbigpO1xuICAgIG1vdXNlbW92aW5nID0gZmFsc2U7XG4gICAgbW91c2Vkb3dueCA9IGV2ZW50LmNsaWVudFg7XG4gICAgbW91c2Vkb3dueSA9IGV2ZW50LmNsaWVudFk7XG4gICAgZ2VzdHVyZShcInN0YXJ0XCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gbW91c2Vtb3ZlZCgpIHtcbiAgICBub2V2ZW50KCk7XG4gICAgaWYgKCFtb3VzZW1vdmluZykge1xuICAgICAgdmFyIGR4ID0gZXZlbnQuY2xpZW50WCAtIG1vdXNlZG93bngsIGR5ID0gZXZlbnQuY2xpZW50WSAtIG1vdXNlZG93bnk7XG4gICAgICBtb3VzZW1vdmluZyA9IGR4ICogZHggKyBkeSAqIGR5ID4gY2xpY2tEaXN0YW5jZTI7XG4gICAgfVxuICAgIGdlc3R1cmVzLm1vdXNlKFwiZHJhZ1wiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG1vdXNldXBwZWQoKSB7XG4gICAgc2VsZWN0KGV2ZW50LnZpZXcpLm9uKFwibW91c2Vtb3ZlLmRyYWcgbW91c2V1cC5kcmFnXCIsIG51bGwpO1xuICAgIHllc2RyYWcoZXZlbnQudmlldywgbW91c2Vtb3ZpbmcpO1xuICAgIG5vZXZlbnQoKTtcbiAgICBnZXN0dXJlcy5tb3VzZShcImVuZFwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRvdWNoc3RhcnRlZCgpIHtcbiAgICBpZiAoIWZpbHRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSByZXR1cm47XG4gICAgdmFyIHRvdWNoZXMgPSBldmVudC5jaGFuZ2VkVG91Y2hlcyxcbiAgICAgICAgYyA9IGNvbnRhaW5lci5hcHBseSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICBuID0gdG91Y2hlcy5sZW5ndGgsIGksIGdlc3R1cmU7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoZ2VzdHVyZSA9IGJlZm9yZXN0YXJ0KHRvdWNoZXNbaV0uaWRlbnRpZmllciwgYywgdG91Y2gsIHRoaXMsIGFyZ3VtZW50cykpIHtcbiAgICAgICAgbm9wcm9wYWdhdGlvbigpO1xuICAgICAgICBnZXN0dXJlKFwic3RhcnRcIik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdG91Y2htb3ZlZCgpIHtcbiAgICB2YXIgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzLFxuICAgICAgICBuID0gdG91Y2hlcy5sZW5ndGgsIGksIGdlc3R1cmU7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoZ2VzdHVyZSA9IGdlc3R1cmVzW3RvdWNoZXNbaV0uaWRlbnRpZmllcl0pIHtcbiAgICAgICAgbm9ldmVudCgpO1xuICAgICAgICBnZXN0dXJlKFwiZHJhZ1wiKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB0b3VjaGVuZGVkKCkge1xuICAgIHZhciB0b3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXMsXG4gICAgICAgIG4gPSB0b3VjaGVzLmxlbmd0aCwgaSwgZ2VzdHVyZTtcblxuICAgIGlmICh0b3VjaGVuZGluZykgY2xlYXJUaW1lb3V0KHRvdWNoZW5kaW5nKTtcbiAgICB0b3VjaGVuZGluZyA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IHRvdWNoZW5kaW5nID0gbnVsbDsgfSwgNTAwKTsgLy8gR2hvc3QgY2xpY2tzIGFyZSBkZWxheWVkIVxuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChnZXN0dXJlID0gZ2VzdHVyZXNbdG91Y2hlc1tpXS5pZGVudGlmaWVyXSkge1xuICAgICAgICBub3Byb3BhZ2F0aW9uKCk7XG4gICAgICAgIGdlc3R1cmUoXCJlbmRcIik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gYmVmb3Jlc3RhcnQoaWQsIGNvbnRhaW5lciwgcG9pbnQsIHRoYXQsIGFyZ3MpIHtcbiAgICB2YXIgcCA9IHBvaW50KGNvbnRhaW5lciwgaWQpLCBzLCBkeCwgZHksXG4gICAgICAgIHN1Ymxpc3RlbmVycyA9IGxpc3RlbmVycy5jb3B5KCk7XG5cbiAgICBpZiAoIWN1c3RvbUV2ZW50KG5ldyBEcmFnRXZlbnQoZHJhZywgXCJiZWZvcmVzdGFydFwiLCBzLCBpZCwgYWN0aXZlLCBwWzBdLCBwWzFdLCAwLCAwLCBzdWJsaXN0ZW5lcnMpLCBmdW5jdGlvbigpIHtcbiAgICAgIGlmICgoZXZlbnQuc3ViamVjdCA9IHMgPSBzdWJqZWN0LmFwcGx5KHRoYXQsIGFyZ3MpKSA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG4gICAgICBkeCA9IHMueCAtIHBbMF0gfHwgMDtcbiAgICAgIGR5ID0gcy55IC0gcFsxXSB8fCAwO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSkpIHJldHVybjtcblxuICAgIHJldHVybiBmdW5jdGlvbiBnZXN0dXJlKHR5cGUpIHtcbiAgICAgIHZhciBwMCA9IHAsIG47XG4gICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSBcInN0YXJ0XCI6IGdlc3R1cmVzW2lkXSA9IGdlc3R1cmUsIG4gPSBhY3RpdmUrKzsgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJlbmRcIjogZGVsZXRlIGdlc3R1cmVzW2lkXSwgLS1hY3RpdmU7IC8vIG5vYnJlYWtcbiAgICAgICAgY2FzZSBcImRyYWdcIjogcCA9IHBvaW50KGNvbnRhaW5lciwgaWQpLCBuID0gYWN0aXZlOyBicmVhaztcbiAgICAgIH1cbiAgICAgIGN1c3RvbUV2ZW50KG5ldyBEcmFnRXZlbnQoZHJhZywgdHlwZSwgcywgaWQsIG4sIHBbMF0gKyBkeCwgcFsxXSArIGR5LCBwWzBdIC0gcDBbMF0sIHBbMV0gLSBwMFsxXSwgc3VibGlzdGVuZXJzKSwgc3VibGlzdGVuZXJzLmFwcGx5LCBzdWJsaXN0ZW5lcnMsIFt0eXBlLCB0aGF0LCBhcmdzXSk7XG4gICAgfTtcbiAgfVxuXG4gIGRyYWcuZmlsdGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGZpbHRlciA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgZHJhZykgOiBmaWx0ZXI7XG4gIH07XG5cbiAgZHJhZy5jb250YWluZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY29udGFpbmVyID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgZHJhZykgOiBjb250YWluZXI7XG4gIH07XG5cbiAgZHJhZy5zdWJqZWN0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN1YmplY3QgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCBkcmFnKSA6IHN1YmplY3Q7XG4gIH07XG5cbiAgZHJhZy50b3VjaGFibGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodG91Y2hhYmxlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCghIV8pLCBkcmFnKSA6IHRvdWNoYWJsZTtcbiAgfTtcblxuICBkcmFnLm9uID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlID0gbGlzdGVuZXJzLm9uLmFwcGx5KGxpc3RlbmVycywgYXJndW1lbnRzKTtcbiAgICByZXR1cm4gdmFsdWUgPT09IGxpc3RlbmVycyA/IGRyYWcgOiB2YWx1ZTtcbiAgfTtcblxuICBkcmFnLmNsaWNrRGlzdGFuY2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY2xpY2tEaXN0YW5jZTIgPSAoXyA9ICtfKSAqIF8sIGRyYWcpIDogTWF0aC5zcXJ0KGNsaWNrRGlzdGFuY2UyKTtcbiAgfTtcblxuICByZXR1cm4gZHJhZztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERyYWdFdmVudCh0YXJnZXQsIHR5cGUsIHN1YmplY3QsIGlkLCBhY3RpdmUsIHgsIHksIGR4LCBkeSwgZGlzcGF0Y2gpIHtcbiAgdGhpcy50YXJnZXQgPSB0YXJnZXQ7XG4gIHRoaXMudHlwZSA9IHR5cGU7XG4gIHRoaXMuc3ViamVjdCA9IHN1YmplY3Q7XG4gIHRoaXMuaWRlbnRpZmllciA9IGlkO1xuICB0aGlzLmFjdGl2ZSA9IGFjdGl2ZTtcbiAgdGhpcy54ID0geDtcbiAgdGhpcy55ID0geTtcbiAgdGhpcy5keCA9IGR4O1xuICB0aGlzLmR5ID0gZHk7XG4gIHRoaXMuXyA9IGRpc3BhdGNoO1xufVxuXG5EcmFnRXZlbnQucHJvdG90eXBlLm9uID0gZnVuY3Rpb24oKSB7XG4gIHZhciB2YWx1ZSA9IHRoaXMuXy5vbi5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gIHJldHVybiB2YWx1ZSA9PT0gdGhpcy5fID8gdGhpcyA6IHZhbHVlO1xufTtcbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBkcmFnfSBmcm9tIFwiLi9kcmFnXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZHJhZ0Rpc2FibGUsIHllc2RyYWcgYXMgZHJhZ0VuYWJsZX0gZnJvbSBcIi4vbm9kcmFnXCI7XG4iLCJpbXBvcnQge3NlbGVjdH0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IG5vZXZlbnQgZnJvbSBcIi4vbm9ldmVudFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2aWV3KSB7XG4gIHZhciByb290ID0gdmlldy5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsXG4gICAgICBzZWxlY3Rpb24gPSBzZWxlY3Qodmlldykub24oXCJkcmFnc3RhcnQuZHJhZ1wiLCBub2V2ZW50LCB0cnVlKTtcbiAgaWYgKFwib25zZWxlY3RzdGFydFwiIGluIHJvb3QpIHtcbiAgICBzZWxlY3Rpb24ub24oXCJzZWxlY3RzdGFydC5kcmFnXCIsIG5vZXZlbnQsIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIHJvb3QuX19ub3NlbGVjdCA9IHJvb3Quc3R5bGUuTW96VXNlclNlbGVjdDtcbiAgICByb290LnN0eWxlLk1velVzZXJTZWxlY3QgPSBcIm5vbmVcIjtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24geWVzZHJhZyh2aWV3LCBub2NsaWNrKSB7XG4gIHZhciByb290ID0gdmlldy5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsXG4gICAgICBzZWxlY3Rpb24gPSBzZWxlY3Qodmlldykub24oXCJkcmFnc3RhcnQuZHJhZ1wiLCBudWxsKTtcbiAgaWYgKG5vY2xpY2spIHtcbiAgICBzZWxlY3Rpb24ub24oXCJjbGljay5kcmFnXCIsIG5vZXZlbnQsIHRydWUpO1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IHNlbGVjdGlvbi5vbihcImNsaWNrLmRyYWdcIiwgbnVsbCk7IH0sIDApO1xuICB9XG4gIGlmIChcIm9uc2VsZWN0c3RhcnRcIiBpbiByb290KSB7XG4gICAgc2VsZWN0aW9uLm9uKFwic2VsZWN0c3RhcnQuZHJhZ1wiLCBudWxsKTtcbiAgfSBlbHNlIHtcbiAgICByb290LnN0eWxlLk1velVzZXJTZWxlY3QgPSByb290Ll9fbm9zZWxlY3Q7XG4gICAgZGVsZXRlIHJvb3QuX19ub3NlbGVjdDtcbiAgfVxufVxuIiwiaW1wb3J0IHtldmVudH0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuXG5leHBvcnQgZnVuY3Rpb24gbm9wcm9wYWdhdGlvbigpIHtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGF1dG9UeXBlKG9iamVjdCkge1xuICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgdmFyIHZhbHVlID0gb2JqZWN0W2tleV0udHJpbSgpLCBudW1iZXI7XG4gICAgaWYgKCF2YWx1ZSkgdmFsdWUgPSBudWxsO1xuICAgIGVsc2UgaWYgKHZhbHVlID09PSBcInRydWVcIikgdmFsdWUgPSB0cnVlO1xuICAgIGVsc2UgaWYgKHZhbHVlID09PSBcImZhbHNlXCIpIHZhbHVlID0gZmFsc2U7XG4gICAgZWxzZSBpZiAodmFsdWUgPT09IFwiTmFOXCIpIHZhbHVlID0gTmFOO1xuICAgIGVsc2UgaWYgKCFpc05hTihudW1iZXIgPSArdmFsdWUpKSB2YWx1ZSA9IG51bWJlcjtcbiAgICBlbHNlIGlmICgvXihbLStdXFxkezJ9KT9cXGR7NH0oLVxcZHsyfSgtXFxkezJ9KT8pPyhUXFxkezJ9OlxcZHsyfSg6XFxkezJ9KFxcLlxcZHszfSk/KT8oWnxbLStdXFxkezJ9OlxcZHsyfSk/KT8kLy50ZXN0KHZhbHVlKSkgdmFsdWUgPSBuZXcgRGF0ZSh2YWx1ZSk7XG4gICAgZWxzZSBjb250aW51ZTtcbiAgICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiBvYmplY3Q7XG59XG4iLCJpbXBvcnQgZHN2IGZyb20gXCIuL2RzdlwiO1xuXG52YXIgY3N2ID0gZHN2KFwiLFwiKTtcblxuZXhwb3J0IHZhciBjc3ZQYXJzZSA9IGNzdi5wYXJzZTtcbmV4cG9ydCB2YXIgY3N2UGFyc2VSb3dzID0gY3N2LnBhcnNlUm93cztcbmV4cG9ydCB2YXIgY3N2Rm9ybWF0ID0gY3N2LmZvcm1hdDtcbmV4cG9ydCB2YXIgY3N2Rm9ybWF0Qm9keSA9IGNzdi5mb3JtYXRCb2R5O1xuZXhwb3J0IHZhciBjc3ZGb3JtYXRSb3dzID0gY3N2LmZvcm1hdFJvd3M7XG4iLCJ2YXIgRU9MID0ge30sXG4gICAgRU9GID0ge30sXG4gICAgUVVPVEUgPSAzNCxcbiAgICBORVdMSU5FID0gMTAsXG4gICAgUkVUVVJOID0gMTM7XG5cbmZ1bmN0aW9uIG9iamVjdENvbnZlcnRlcihjb2x1bW5zKSB7XG4gIHJldHVybiBuZXcgRnVuY3Rpb24oXCJkXCIsIFwicmV0dXJuIHtcIiArIGNvbHVtbnMubWFwKGZ1bmN0aW9uKG5hbWUsIGkpIHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkobmFtZSkgKyBcIjogZFtcIiArIGkgKyBcIl1cIjtcbiAgfSkuam9pbihcIixcIikgKyBcIn1cIik7XG59XG5cbmZ1bmN0aW9uIGN1c3RvbUNvbnZlcnRlcihjb2x1bW5zLCBmKSB7XG4gIHZhciBvYmplY3QgPSBvYmplY3RDb252ZXJ0ZXIoY29sdW1ucyk7XG4gIHJldHVybiBmdW5jdGlvbihyb3csIGkpIHtcbiAgICByZXR1cm4gZihvYmplY3Qocm93KSwgaSwgY29sdW1ucyk7XG4gIH07XG59XG5cbi8vIENvbXB1dGUgdW5pcXVlIGNvbHVtbnMgaW4gb3JkZXIgb2YgZGlzY292ZXJ5LlxuZnVuY3Rpb24gaW5mZXJDb2x1bW5zKHJvd3MpIHtcbiAgdmFyIGNvbHVtblNldCA9IE9iamVjdC5jcmVhdGUobnVsbCksXG4gICAgICBjb2x1bW5zID0gW107XG5cbiAgcm93cy5mb3JFYWNoKGZ1bmN0aW9uKHJvdykge1xuICAgIGZvciAodmFyIGNvbHVtbiBpbiByb3cpIHtcbiAgICAgIGlmICghKGNvbHVtbiBpbiBjb2x1bW5TZXQpKSB7XG4gICAgICAgIGNvbHVtbnMucHVzaChjb2x1bW5TZXRbY29sdW1uXSA9IGNvbHVtbik7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gY29sdW1ucztcbn1cblxuZnVuY3Rpb24gcGFkKHZhbHVlLCB3aWR0aCkge1xuICB2YXIgcyA9IHZhbHVlICsgXCJcIiwgbGVuZ3RoID0gcy5sZW5ndGg7XG4gIHJldHVybiBsZW5ndGggPCB3aWR0aCA/IG5ldyBBcnJheSh3aWR0aCAtIGxlbmd0aCArIDEpLmpvaW4oMCkgKyBzIDogcztcbn1cblxuZnVuY3Rpb24gZm9ybWF0WWVhcih5ZWFyKSB7XG4gIHJldHVybiB5ZWFyIDwgMCA/IFwiLVwiICsgcGFkKC15ZWFyLCA2KVxuICAgIDogeWVhciA+IDk5OTkgPyBcIitcIiArIHBhZCh5ZWFyLCA2KVxuICAgIDogcGFkKHllYXIsIDQpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXREYXRlKGRhdGUpIHtcbiAgdmFyIGhvdXJzID0gZGF0ZS5nZXRVVENIb3VycygpLFxuICAgICAgbWludXRlcyA9IGRhdGUuZ2V0VVRDTWludXRlcygpLFxuICAgICAgc2Vjb25kcyA9IGRhdGUuZ2V0VVRDU2Vjb25kcygpLFxuICAgICAgbWlsbGlzZWNvbmRzID0gZGF0ZS5nZXRVVENNaWxsaXNlY29uZHMoKTtcbiAgcmV0dXJuIGlzTmFOKGRhdGUpID8gXCJJbnZhbGlkIERhdGVcIlxuICAgICAgOiBmb3JtYXRZZWFyKGRhdGUuZ2V0VVRDRnVsbFllYXIoKSwgNCkgKyBcIi1cIiArIHBhZChkYXRlLmdldFVUQ01vbnRoKCkgKyAxLCAyKSArIFwiLVwiICsgcGFkKGRhdGUuZ2V0VVRDRGF0ZSgpLCAyKVxuICAgICAgKyAobWlsbGlzZWNvbmRzID8gXCJUXCIgKyBwYWQoaG91cnMsIDIpICsgXCI6XCIgKyBwYWQobWludXRlcywgMikgKyBcIjpcIiArIHBhZChzZWNvbmRzLCAyKSArIFwiLlwiICsgcGFkKG1pbGxpc2Vjb25kcywgMykgKyBcIlpcIlxuICAgICAgOiBzZWNvbmRzID8gXCJUXCIgKyBwYWQoaG91cnMsIDIpICsgXCI6XCIgKyBwYWQobWludXRlcywgMikgKyBcIjpcIiArIHBhZChzZWNvbmRzLCAyKSArIFwiWlwiXG4gICAgICA6IG1pbnV0ZXMgfHwgaG91cnMgPyBcIlRcIiArIHBhZChob3VycywgMikgKyBcIjpcIiArIHBhZChtaW51dGVzLCAyKSArIFwiWlwiXG4gICAgICA6IFwiXCIpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihkZWxpbWl0ZXIpIHtcbiAgdmFyIHJlRm9ybWF0ID0gbmV3IFJlZ0V4cChcIltcXFwiXCIgKyBkZWxpbWl0ZXIgKyBcIlxcblxccl1cIiksXG4gICAgICBERUxJTUlURVIgPSBkZWxpbWl0ZXIuY2hhckNvZGVBdCgwKTtcblxuICBmdW5jdGlvbiBwYXJzZSh0ZXh0LCBmKSB7XG4gICAgdmFyIGNvbnZlcnQsIGNvbHVtbnMsIHJvd3MgPSBwYXJzZVJvd3ModGV4dCwgZnVuY3Rpb24ocm93LCBpKSB7XG4gICAgICBpZiAoY29udmVydCkgcmV0dXJuIGNvbnZlcnQocm93LCBpIC0gMSk7XG4gICAgICBjb2x1bW5zID0gcm93LCBjb252ZXJ0ID0gZiA/IGN1c3RvbUNvbnZlcnRlcihyb3csIGYpIDogb2JqZWN0Q29udmVydGVyKHJvdyk7XG4gICAgfSk7XG4gICAgcm93cy5jb2x1bW5zID0gY29sdW1ucyB8fCBbXTtcbiAgICByZXR1cm4gcm93cztcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlUm93cyh0ZXh0LCBmKSB7XG4gICAgdmFyIHJvd3MgPSBbXSwgLy8gb3V0cHV0IHJvd3NcbiAgICAgICAgTiA9IHRleHQubGVuZ3RoLFxuICAgICAgICBJID0gMCwgLy8gY3VycmVudCBjaGFyYWN0ZXIgaW5kZXhcbiAgICAgICAgbiA9IDAsIC8vIGN1cnJlbnQgbGluZSBudW1iZXJcbiAgICAgICAgdCwgLy8gY3VycmVudCB0b2tlblxuICAgICAgICBlb2YgPSBOIDw9IDAsIC8vIGN1cnJlbnQgdG9rZW4gZm9sbG93ZWQgYnkgRU9GP1xuICAgICAgICBlb2wgPSBmYWxzZTsgLy8gY3VycmVudCB0b2tlbiBmb2xsb3dlZCBieSBFT0w/XG5cbiAgICAvLyBTdHJpcCB0aGUgdHJhaWxpbmcgbmV3bGluZS5cbiAgICBpZiAodGV4dC5jaGFyQ29kZUF0KE4gLSAxKSA9PT0gTkVXTElORSkgLS1OO1xuICAgIGlmICh0ZXh0LmNoYXJDb2RlQXQoTiAtIDEpID09PSBSRVRVUk4pIC0tTjtcblxuICAgIGZ1bmN0aW9uIHRva2VuKCkge1xuICAgICAgaWYgKGVvZikgcmV0dXJuIEVPRjtcbiAgICAgIGlmIChlb2wpIHJldHVybiBlb2wgPSBmYWxzZSwgRU9MO1xuXG4gICAgICAvLyBVbmVzY2FwZSBxdW90ZXMuXG4gICAgICB2YXIgaSwgaiA9IEksIGM7XG4gICAgICBpZiAodGV4dC5jaGFyQ29kZUF0KGopID09PSBRVU9URSkge1xuICAgICAgICB3aGlsZSAoSSsrIDwgTiAmJiB0ZXh0LmNoYXJDb2RlQXQoSSkgIT09IFFVT1RFIHx8IHRleHQuY2hhckNvZGVBdCgrK0kpID09PSBRVU9URSk7XG4gICAgICAgIGlmICgoaSA9IEkpID49IE4pIGVvZiA9IHRydWU7XG4gICAgICAgIGVsc2UgaWYgKChjID0gdGV4dC5jaGFyQ29kZUF0KEkrKykpID09PSBORVdMSU5FKSBlb2wgPSB0cnVlO1xuICAgICAgICBlbHNlIGlmIChjID09PSBSRVRVUk4pIHsgZW9sID0gdHJ1ZTsgaWYgKHRleHQuY2hhckNvZGVBdChJKSA9PT0gTkVXTElORSkgKytJOyB9XG4gICAgICAgIHJldHVybiB0ZXh0LnNsaWNlKGogKyAxLCBpIC0gMSkucmVwbGFjZSgvXCJcIi9nLCBcIlxcXCJcIik7XG4gICAgICB9XG5cbiAgICAgIC8vIEZpbmQgbmV4dCBkZWxpbWl0ZXIgb3IgbmV3bGluZS5cbiAgICAgIHdoaWxlIChJIDwgTikge1xuICAgICAgICBpZiAoKGMgPSB0ZXh0LmNoYXJDb2RlQXQoaSA9IEkrKykpID09PSBORVdMSU5FKSBlb2wgPSB0cnVlO1xuICAgICAgICBlbHNlIGlmIChjID09PSBSRVRVUk4pIHsgZW9sID0gdHJ1ZTsgaWYgKHRleHQuY2hhckNvZGVBdChJKSA9PT0gTkVXTElORSkgKytJOyB9XG4gICAgICAgIGVsc2UgaWYgKGMgIT09IERFTElNSVRFUikgY29udGludWU7XG4gICAgICAgIHJldHVybiB0ZXh0LnNsaWNlKGosIGkpO1xuICAgICAgfVxuXG4gICAgICAvLyBSZXR1cm4gbGFzdCB0b2tlbiBiZWZvcmUgRU9GLlxuICAgICAgcmV0dXJuIGVvZiA9IHRydWUsIHRleHQuc2xpY2UoaiwgTik7XG4gICAgfVxuXG4gICAgd2hpbGUgKCh0ID0gdG9rZW4oKSkgIT09IEVPRikge1xuICAgICAgdmFyIHJvdyA9IFtdO1xuICAgICAgd2hpbGUgKHQgIT09IEVPTCAmJiB0ICE9PSBFT0YpIHJvdy5wdXNoKHQpLCB0ID0gdG9rZW4oKTtcbiAgICAgIGlmIChmICYmIChyb3cgPSBmKHJvdywgbisrKSkgPT0gbnVsbCkgY29udGludWU7XG4gICAgICByb3dzLnB1c2gocm93KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcm93cztcbiAgfVxuXG4gIGZ1bmN0aW9uIHByZWZvcm1hdEJvZHkocm93cywgY29sdW1ucykge1xuICAgIHJldHVybiByb3dzLm1hcChmdW5jdGlvbihyb3cpIHtcbiAgICAgIHJldHVybiBjb2x1bW5zLm1hcChmdW5jdGlvbihjb2x1bW4pIHtcbiAgICAgICAgcmV0dXJuIGZvcm1hdFZhbHVlKHJvd1tjb2x1bW5dKTtcbiAgICAgIH0pLmpvaW4oZGVsaW1pdGVyKTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdChyb3dzLCBjb2x1bW5zKSB7XG4gICAgaWYgKGNvbHVtbnMgPT0gbnVsbCkgY29sdW1ucyA9IGluZmVyQ29sdW1ucyhyb3dzKTtcbiAgICByZXR1cm4gW2NvbHVtbnMubWFwKGZvcm1hdFZhbHVlKS5qb2luKGRlbGltaXRlcildLmNvbmNhdChwcmVmb3JtYXRCb2R5KHJvd3MsIGNvbHVtbnMpKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0Qm9keShyb3dzLCBjb2x1bW5zKSB7XG4gICAgaWYgKGNvbHVtbnMgPT0gbnVsbCkgY29sdW1ucyA9IGluZmVyQ29sdW1ucyhyb3dzKTtcbiAgICByZXR1cm4gcHJlZm9ybWF0Qm9keShyb3dzLCBjb2x1bW5zKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0Um93cyhyb3dzKSB7XG4gICAgcmV0dXJuIHJvd3MubWFwKGZvcm1hdFJvdykuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFJvdyhyb3cpIHtcbiAgICByZXR1cm4gcm93Lm1hcChmb3JtYXRWYWx1ZSkuam9pbihkZWxpbWl0ZXIpO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0VmFsdWUodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT0gbnVsbCA/IFwiXCJcbiAgICAgICAgOiB2YWx1ZSBpbnN0YW5jZW9mIERhdGUgPyBmb3JtYXREYXRlKHZhbHVlKVxuICAgICAgICA6IHJlRm9ybWF0LnRlc3QodmFsdWUgKz0gXCJcIikgPyBcIlxcXCJcIiArIHZhbHVlLnJlcGxhY2UoL1wiL2csIFwiXFxcIlxcXCJcIikgKyBcIlxcXCJcIlxuICAgICAgICA6IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXJzZTogcGFyc2UsXG4gICAgcGFyc2VSb3dzOiBwYXJzZVJvd3MsXG4gICAgZm9ybWF0OiBmb3JtYXQsXG4gICAgZm9ybWF0Qm9keTogZm9ybWF0Qm9keSxcbiAgICBmb3JtYXRSb3dzOiBmb3JtYXRSb3dzXG4gIH07XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgZHN2Rm9ybWF0fSBmcm9tIFwiLi9kc3ZcIjtcbmV4cG9ydCB7Y3N2UGFyc2UsIGNzdlBhcnNlUm93cywgY3N2Rm9ybWF0LCBjc3ZGb3JtYXRCb2R5LCBjc3ZGb3JtYXRSb3dzfSBmcm9tIFwiLi9jc3ZcIjtcbmV4cG9ydCB7dHN2UGFyc2UsIHRzdlBhcnNlUm93cywgdHN2Rm9ybWF0LCB0c3ZGb3JtYXRCb2R5LCB0c3ZGb3JtYXRSb3dzfSBmcm9tIFwiLi90c3ZcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBhdXRvVHlwZX0gZnJvbSBcIi4vYXV0b1R5cGVcIjtcbiIsImltcG9ydCBkc3YgZnJvbSBcIi4vZHN2XCI7XG5cbnZhciB0c3YgPSBkc3YoXCJcXHRcIik7XG5cbmV4cG9ydCB2YXIgdHN2UGFyc2UgPSB0c3YucGFyc2U7XG5leHBvcnQgdmFyIHRzdlBhcnNlUm93cyA9IHRzdi5wYXJzZVJvd3M7XG5leHBvcnQgdmFyIHRzdkZvcm1hdCA9IHRzdi5mb3JtYXQ7XG5leHBvcnQgdmFyIHRzdkZvcm1hdEJvZHkgPSB0c3YuZm9ybWF0Qm9keTtcbmV4cG9ydCB2YXIgdHN2Rm9ybWF0Um93cyA9IHRzdi5mb3JtYXRSb3dzO1xuIiwidmFyIG92ZXJzaG9vdCA9IDEuNzAxNTg7XG5cbmV4cG9ydCB2YXIgYmFja0luID0gKGZ1bmN0aW9uIGN1c3RvbShzKSB7XG4gIHMgPSArcztcblxuICBmdW5jdGlvbiBiYWNrSW4odCkge1xuICAgIHJldHVybiB0ICogdCAqICgocyArIDEpICogdCAtIHMpO1xuICB9XG5cbiAgYmFja0luLm92ZXJzaG9vdCA9IGN1c3RvbTtcblxuICByZXR1cm4gYmFja0luO1xufSkob3ZlcnNob290KTtcblxuZXhwb3J0IHZhciBiYWNrT3V0ID0gKGZ1bmN0aW9uIGN1c3RvbShzKSB7XG4gIHMgPSArcztcblxuICBmdW5jdGlvbiBiYWNrT3V0KHQpIHtcbiAgICByZXR1cm4gLS10ICogdCAqICgocyArIDEpICogdCArIHMpICsgMTtcbiAgfVxuXG4gIGJhY2tPdXQub3ZlcnNob290ID0gY3VzdG9tO1xuXG4gIHJldHVybiBiYWNrT3V0O1xufSkob3ZlcnNob290KTtcblxuZXhwb3J0IHZhciBiYWNrSW5PdXQgPSAoZnVuY3Rpb24gY3VzdG9tKHMpIHtcbiAgcyA9ICtzO1xuXG4gIGZ1bmN0aW9uIGJhY2tJbk91dCh0KSB7XG4gICAgcmV0dXJuICgodCAqPSAyKSA8IDEgPyB0ICogdCAqICgocyArIDEpICogdCAtIHMpIDogKHQgLT0gMikgKiB0ICogKChzICsgMSkgKiB0ICsgcykgKyAyKSAvIDI7XG4gIH1cblxuICBiYWNrSW5PdXQub3ZlcnNob290ID0gY3VzdG9tO1xuXG4gIHJldHVybiBiYWNrSW5PdXQ7XG59KShvdmVyc2hvb3QpO1xuIiwidmFyIGIxID0gNCAvIDExLFxuICAgIGIyID0gNiAvIDExLFxuICAgIGIzID0gOCAvIDExLFxuICAgIGI0ID0gMyAvIDQsXG4gICAgYjUgPSA5IC8gMTEsXG4gICAgYjYgPSAxMCAvIDExLFxuICAgIGI3ID0gMTUgLyAxNixcbiAgICBiOCA9IDIxIC8gMjIsXG4gICAgYjkgPSA2MyAvIDY0LFxuICAgIGIwID0gMSAvIGIxIC8gYjE7XG5cbmV4cG9ydCBmdW5jdGlvbiBib3VuY2VJbih0KSB7XG4gIHJldHVybiAxIC0gYm91bmNlT3V0KDEgLSB0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJvdW5jZU91dCh0KSB7XG4gIHJldHVybiAodCA9ICt0KSA8IGIxID8gYjAgKiB0ICogdCA6IHQgPCBiMyA/IGIwICogKHQgLT0gYjIpICogdCArIGI0IDogdCA8IGI2ID8gYjAgKiAodCAtPSBiNSkgKiB0ICsgYjcgOiBiMCAqICh0IC09IGI4KSAqIHQgKyBiOTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJvdW5jZUluT3V0KHQpIHtcbiAgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gMSAtIGJvdW5jZU91dCgxIC0gdCkgOiBib3VuY2VPdXQodCAtIDEpICsgMSkgLyAyO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGNpcmNsZUluKHQpIHtcbiAgcmV0dXJuIDEgLSBNYXRoLnNxcnQoMSAtIHQgKiB0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNpcmNsZU91dCh0KSB7XG4gIHJldHVybiBNYXRoLnNxcnQoMSAtIC0tdCAqIHQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2lyY2xlSW5PdXQodCkge1xuICByZXR1cm4gKCh0ICo9IDIpIDw9IDEgPyAxIC0gTWF0aC5zcXJ0KDEgLSB0ICogdCkgOiBNYXRoLnNxcnQoMSAtICh0IC09IDIpICogdCkgKyAxKSAvIDI7XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gY3ViaWNJbih0KSB7XG4gIHJldHVybiB0ICogdCAqIHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjdWJpY091dCh0KSB7XG4gIHJldHVybiAtLXQgKiB0ICogdCArIDE7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjdWJpY0luT3V0KHQpIHtcbiAgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gdCAqIHQgKiB0IDogKHQgLT0gMikgKiB0ICogdCArIDIpIC8gMjtcbn1cbiIsInZhciB0YXUgPSAyICogTWF0aC5QSSxcbiAgICBhbXBsaXR1ZGUgPSAxLFxuICAgIHBlcmlvZCA9IDAuMztcblxuZXhwb3J0IHZhciBlbGFzdGljSW4gPSAoZnVuY3Rpb24gY3VzdG9tKGEsIHApIHtcbiAgdmFyIHMgPSBNYXRoLmFzaW4oMSAvIChhID0gTWF0aC5tYXgoMSwgYSkpKSAqIChwIC89IHRhdSk7XG5cbiAgZnVuY3Rpb24gZWxhc3RpY0luKHQpIHtcbiAgICByZXR1cm4gYSAqIE1hdGgucG93KDIsIDEwICogLS10KSAqIE1hdGguc2luKChzIC0gdCkgLyBwKTtcbiAgfVxuXG4gIGVsYXN0aWNJbi5hbXBsaXR1ZGUgPSBmdW5jdGlvbihhKSB7IHJldHVybiBjdXN0b20oYSwgcCAqIHRhdSk7IH07XG4gIGVsYXN0aWNJbi5wZXJpb2QgPSBmdW5jdGlvbihwKSB7IHJldHVybiBjdXN0b20oYSwgcCk7IH07XG5cbiAgcmV0dXJuIGVsYXN0aWNJbjtcbn0pKGFtcGxpdHVkZSwgcGVyaW9kKTtcblxuZXhwb3J0IHZhciBlbGFzdGljT3V0ID0gKGZ1bmN0aW9uIGN1c3RvbShhLCBwKSB7XG4gIHZhciBzID0gTWF0aC5hc2luKDEgLyAoYSA9IE1hdGgubWF4KDEsIGEpKSkgKiAocCAvPSB0YXUpO1xuXG4gIGZ1bmN0aW9uIGVsYXN0aWNPdXQodCkge1xuICAgIHJldHVybiAxIC0gYSAqIE1hdGgucG93KDIsIC0xMCAqICh0ID0gK3QpKSAqIE1hdGguc2luKCh0ICsgcykgLyBwKTtcbiAgfVxuXG4gIGVsYXN0aWNPdXQuYW1wbGl0dWRlID0gZnVuY3Rpb24oYSkgeyByZXR1cm4gY3VzdG9tKGEsIHAgKiB0YXUpOyB9O1xuICBlbGFzdGljT3V0LnBlcmlvZCA9IGZ1bmN0aW9uKHApIHsgcmV0dXJuIGN1c3RvbShhLCBwKTsgfTtcblxuICByZXR1cm4gZWxhc3RpY091dDtcbn0pKGFtcGxpdHVkZSwgcGVyaW9kKTtcblxuZXhwb3J0IHZhciBlbGFzdGljSW5PdXQgPSAoZnVuY3Rpb24gY3VzdG9tKGEsIHApIHtcbiAgdmFyIHMgPSBNYXRoLmFzaW4oMSAvIChhID0gTWF0aC5tYXgoMSwgYSkpKSAqIChwIC89IHRhdSk7XG5cbiAgZnVuY3Rpb24gZWxhc3RpY0luT3V0KHQpIHtcbiAgICByZXR1cm4gKCh0ID0gdCAqIDIgLSAxKSA8IDBcbiAgICAgICAgPyBhICogTWF0aC5wb3coMiwgMTAgKiB0KSAqIE1hdGguc2luKChzIC0gdCkgLyBwKVxuICAgICAgICA6IDIgLSBhICogTWF0aC5wb3coMiwgLTEwICogdCkgKiBNYXRoLnNpbigocyArIHQpIC8gcCkpIC8gMjtcbiAgfVxuXG4gIGVsYXN0aWNJbk91dC5hbXBsaXR1ZGUgPSBmdW5jdGlvbihhKSB7IHJldHVybiBjdXN0b20oYSwgcCAqIHRhdSk7IH07XG4gIGVsYXN0aWNJbk91dC5wZXJpb2QgPSBmdW5jdGlvbihwKSB7IHJldHVybiBjdXN0b20oYSwgcCk7IH07XG5cbiAgcmV0dXJuIGVsYXN0aWNJbk91dDtcbn0pKGFtcGxpdHVkZSwgcGVyaW9kKTtcbiIsImV4cG9ydCBmdW5jdGlvbiBleHBJbih0KSB7XG4gIHJldHVybiBNYXRoLnBvdygyLCAxMCAqIHQgLSAxMCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHBPdXQodCkge1xuICByZXR1cm4gMSAtIE1hdGgucG93KDIsIC0xMCAqIHQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXhwSW5PdXQodCkge1xuICByZXR1cm4gKCh0ICo9IDIpIDw9IDEgPyBNYXRoLnBvdygyLCAxMCAqIHQgLSAxMCkgOiAyIC0gTWF0aC5wb3coMiwgMTAgLSAxMCAqIHQpKSAvIDI7XG59XG4iLCJleHBvcnQge1xuICBsaW5lYXIgYXMgZWFzZUxpbmVhclxufSBmcm9tIFwiLi9saW5lYXJcIjtcblxuZXhwb3J0IHtcbiAgcXVhZEluT3V0IGFzIGVhc2VRdWFkLFxuICBxdWFkSW4gYXMgZWFzZVF1YWRJbixcbiAgcXVhZE91dCBhcyBlYXNlUXVhZE91dCxcbiAgcXVhZEluT3V0IGFzIGVhc2VRdWFkSW5PdXRcbn0gZnJvbSBcIi4vcXVhZFwiO1xuXG5leHBvcnQge1xuICBjdWJpY0luT3V0IGFzIGVhc2VDdWJpYyxcbiAgY3ViaWNJbiBhcyBlYXNlQ3ViaWNJbixcbiAgY3ViaWNPdXQgYXMgZWFzZUN1YmljT3V0LFxuICBjdWJpY0luT3V0IGFzIGVhc2VDdWJpY0luT3V0XG59IGZyb20gXCIuL2N1YmljXCI7XG5cbmV4cG9ydCB7XG4gIHBvbHlJbk91dCBhcyBlYXNlUG9seSxcbiAgcG9seUluIGFzIGVhc2VQb2x5SW4sXG4gIHBvbHlPdXQgYXMgZWFzZVBvbHlPdXQsXG4gIHBvbHlJbk91dCBhcyBlYXNlUG9seUluT3V0XG59IGZyb20gXCIuL3BvbHlcIjtcblxuZXhwb3J0IHtcbiAgc2luSW5PdXQgYXMgZWFzZVNpbixcbiAgc2luSW4gYXMgZWFzZVNpbkluLFxuICBzaW5PdXQgYXMgZWFzZVNpbk91dCxcbiAgc2luSW5PdXQgYXMgZWFzZVNpbkluT3V0XG59IGZyb20gXCIuL3NpblwiO1xuXG5leHBvcnQge1xuICBleHBJbk91dCBhcyBlYXNlRXhwLFxuICBleHBJbiBhcyBlYXNlRXhwSW4sXG4gIGV4cE91dCBhcyBlYXNlRXhwT3V0LFxuICBleHBJbk91dCBhcyBlYXNlRXhwSW5PdXRcbn0gZnJvbSBcIi4vZXhwXCI7XG5cbmV4cG9ydCB7XG4gIGNpcmNsZUluT3V0IGFzIGVhc2VDaXJjbGUsXG4gIGNpcmNsZUluIGFzIGVhc2VDaXJjbGVJbixcbiAgY2lyY2xlT3V0IGFzIGVhc2VDaXJjbGVPdXQsXG4gIGNpcmNsZUluT3V0IGFzIGVhc2VDaXJjbGVJbk91dFxufSBmcm9tIFwiLi9jaXJjbGVcIjtcblxuZXhwb3J0IHtcbiAgYm91bmNlT3V0IGFzIGVhc2VCb3VuY2UsXG4gIGJvdW5jZUluIGFzIGVhc2VCb3VuY2VJbixcbiAgYm91bmNlT3V0IGFzIGVhc2VCb3VuY2VPdXQsXG4gIGJvdW5jZUluT3V0IGFzIGVhc2VCb3VuY2VJbk91dFxufSBmcm9tIFwiLi9ib3VuY2VcIjtcblxuZXhwb3J0IHtcbiAgYmFja0luT3V0IGFzIGVhc2VCYWNrLFxuICBiYWNrSW4gYXMgZWFzZUJhY2tJbixcbiAgYmFja091dCBhcyBlYXNlQmFja091dCxcbiAgYmFja0luT3V0IGFzIGVhc2VCYWNrSW5PdXRcbn0gZnJvbSBcIi4vYmFja1wiO1xuXG5leHBvcnQge1xuICBlbGFzdGljT3V0IGFzIGVhc2VFbGFzdGljLFxuICBlbGFzdGljSW4gYXMgZWFzZUVsYXN0aWNJbixcbiAgZWxhc3RpY091dCBhcyBlYXNlRWxhc3RpY091dCxcbiAgZWxhc3RpY0luT3V0IGFzIGVhc2VFbGFzdGljSW5PdXRcbn0gZnJvbSBcIi4vZWxhc3RpY1wiO1xuIiwiZXhwb3J0IGZ1bmN0aW9uIGxpbmVhcih0KSB7XG4gIHJldHVybiArdDtcbn1cbiIsInZhciBleHBvbmVudCA9IDM7XG5cbmV4cG9ydCB2YXIgcG9seUluID0gKGZ1bmN0aW9uIGN1c3RvbShlKSB7XG4gIGUgPSArZTtcblxuICBmdW5jdGlvbiBwb2x5SW4odCkge1xuICAgIHJldHVybiBNYXRoLnBvdyh0LCBlKTtcbiAgfVxuXG4gIHBvbHlJbi5leHBvbmVudCA9IGN1c3RvbTtcblxuICByZXR1cm4gcG9seUluO1xufSkoZXhwb25lbnQpO1xuXG5leHBvcnQgdmFyIHBvbHlPdXQgPSAoZnVuY3Rpb24gY3VzdG9tKGUpIHtcbiAgZSA9ICtlO1xuXG4gIGZ1bmN0aW9uIHBvbHlPdXQodCkge1xuICAgIHJldHVybiAxIC0gTWF0aC5wb3coMSAtIHQsIGUpO1xuICB9XG5cbiAgcG9seU91dC5leHBvbmVudCA9IGN1c3RvbTtcblxuICByZXR1cm4gcG9seU91dDtcbn0pKGV4cG9uZW50KTtcblxuZXhwb3J0IHZhciBwb2x5SW5PdXQgPSAoZnVuY3Rpb24gY3VzdG9tKGUpIHtcbiAgZSA9ICtlO1xuXG4gIGZ1bmN0aW9uIHBvbHlJbk91dCh0KSB7XG4gICAgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gTWF0aC5wb3codCwgZSkgOiAyIC0gTWF0aC5wb3coMiAtIHQsIGUpKSAvIDI7XG4gIH1cblxuICBwb2x5SW5PdXQuZXhwb25lbnQgPSBjdXN0b207XG5cbiAgcmV0dXJuIHBvbHlJbk91dDtcbn0pKGV4cG9uZW50KTtcbiIsImV4cG9ydCBmdW5jdGlvbiBxdWFkSW4odCkge1xuICByZXR1cm4gdCAqIHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBxdWFkT3V0KHQpIHtcbiAgcmV0dXJuIHQgKiAoMiAtIHQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcXVhZEluT3V0KHQpIHtcbiAgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gdCAqIHQgOiAtLXQgKiAoMiAtIHQpICsgMSkgLyAyO1xufVxuIiwidmFyIHBpID0gTWF0aC5QSSxcbiAgICBoYWxmUGkgPSBwaSAvIDI7XG5cbmV4cG9ydCBmdW5jdGlvbiBzaW5Jbih0KSB7XG4gIHJldHVybiAxIC0gTWF0aC5jb3ModCAqIGhhbGZQaSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaW5PdXQodCkge1xuICByZXR1cm4gTWF0aC5zaW4odCAqIGhhbGZQaSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaW5Jbk91dCh0KSB7XG4gIHJldHVybiAoMSAtIE1hdGguY29zKHBpICogdCkpIC8gMjtcbn1cbiIsImZ1bmN0aW9uIHJlc3BvbnNlQmxvYihyZXNwb25zZSkge1xuICBpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IocmVzcG9uc2Uuc3RhdHVzICsgXCIgXCIgKyByZXNwb25zZS5zdGF0dXNUZXh0KTtcbiAgcmV0dXJuIHJlc3BvbnNlLmJsb2IoKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5wdXQsIGluaXQpIHtcbiAgcmV0dXJuIGZldGNoKGlucHV0LCBpbml0KS50aGVuKHJlc3BvbnNlQmxvYik7XG59XG4iLCJmdW5jdGlvbiByZXNwb25zZUFycmF5QnVmZmVyKHJlc3BvbnNlKSB7XG4gIGlmICghcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcihyZXNwb25zZS5zdGF0dXMgKyBcIiBcIiArIHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuICByZXR1cm4gcmVzcG9uc2UuYXJyYXlCdWZmZXIoKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5wdXQsIGluaXQpIHtcbiAgcmV0dXJuIGZldGNoKGlucHV0LCBpbml0KS50aGVuKHJlc3BvbnNlQXJyYXlCdWZmZXIpO1xufVxuIiwiaW1wb3J0IHtjc3ZQYXJzZSwgZHN2Rm9ybWF0LCB0c3ZQYXJzZX0gZnJvbSBcImQzLWRzdlwiO1xuaW1wb3J0IHRleHQgZnJvbSBcIi4vdGV4dFwiO1xuXG5mdW5jdGlvbiBkc3ZQYXJzZShwYXJzZSkge1xuICByZXR1cm4gZnVuY3Rpb24oaW5wdXQsIGluaXQsIHJvdykge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyICYmIHR5cGVvZiBpbml0ID09PSBcImZ1bmN0aW9uXCIpIHJvdyA9IGluaXQsIGluaXQgPSB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIHRleHQoaW5wdXQsIGluaXQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgIHJldHVybiBwYXJzZShyZXNwb25zZSwgcm93KTtcbiAgICB9KTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZHN2KGRlbGltaXRlciwgaW5wdXQsIGluaXQsIHJvdykge1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMyAmJiB0eXBlb2YgaW5pdCA9PT0gXCJmdW5jdGlvblwiKSByb3cgPSBpbml0LCBpbml0ID0gdW5kZWZpbmVkO1xuICB2YXIgZm9ybWF0ID0gZHN2Rm9ybWF0KGRlbGltaXRlcik7XG4gIHJldHVybiB0ZXh0KGlucHV0LCBpbml0KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIGZvcm1hdC5wYXJzZShyZXNwb25zZSwgcm93KTtcbiAgfSk7XG59XG5cbmV4cG9ydCB2YXIgY3N2ID0gZHN2UGFyc2UoY3N2UGFyc2UpO1xuZXhwb3J0IHZhciB0c3YgPSBkc3ZQYXJzZSh0c3ZQYXJzZSk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnB1dCwgaW5pdCkge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdmFyIGltYWdlID0gbmV3IEltYWdlO1xuICAgIGZvciAodmFyIGtleSBpbiBpbml0KSBpbWFnZVtrZXldID0gaW5pdFtrZXldO1xuICAgIGltYWdlLm9uZXJyb3IgPSByZWplY3Q7XG4gICAgaW1hZ2Uub25sb2FkID0gZnVuY3Rpb24oKSB7IHJlc29sdmUoaW1hZ2UpOyB9O1xuICAgIGltYWdlLnNyYyA9IGlucHV0O1xuICB9KTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBibG9ifSBmcm9tIFwiLi9ibG9iXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgYnVmZmVyfSBmcm9tIFwiLi9idWZmZXJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBkc3YsIGNzdiwgdHN2fSBmcm9tIFwiLi9kc3ZcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbWFnZX0gZnJvbSBcIi4vaW1hZ2VcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBqc29ufSBmcm9tIFwiLi9qc29uXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdGV4dH0gZnJvbSBcIi4vdGV4dFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHhtbCwgaHRtbCwgc3ZnfSBmcm9tIFwiLi94bWxcIjtcbiIsImZ1bmN0aW9uIHJlc3BvbnNlSnNvbihyZXNwb25zZSkge1xuICBpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IocmVzcG9uc2Uuc3RhdHVzICsgXCIgXCIgKyByZXNwb25zZS5zdGF0dXNUZXh0KTtcbiAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5wdXQsIGluaXQpIHtcbiAgcmV0dXJuIGZldGNoKGlucHV0LCBpbml0KS50aGVuKHJlc3BvbnNlSnNvbik7XG59XG4iLCJmdW5jdGlvbiByZXNwb25zZVRleHQocmVzcG9uc2UpIHtcbiAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKHJlc3BvbnNlLnN0YXR1cyArIFwiIFwiICsgcmVzcG9uc2Uuc3RhdHVzVGV4dCk7XG4gIHJldHVybiByZXNwb25zZS50ZXh0KCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGlucHV0LCBpbml0KSB7XG4gIHJldHVybiBmZXRjaChpbnB1dCwgaW5pdCkudGhlbihyZXNwb25zZVRleHQpO1xufVxuIiwiaW1wb3J0IHRleHQgZnJvbSBcIi4vdGV4dFwiO1xuXG5mdW5jdGlvbiBwYXJzZXIodHlwZSkge1xuICByZXR1cm4gZnVuY3Rpb24oaW5wdXQsIGluaXQpICB7XG4gICAgcmV0dXJuIHRleHQoaW5wdXQsIGluaXQpLnRoZW4oZnVuY3Rpb24odGV4dCkge1xuICAgICAgcmV0dXJuIChuZXcgRE9NUGFyc2VyKS5wYXJzZUZyb21TdHJpbmcodGV4dCwgdHlwZSk7XG4gICAgfSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IHBhcnNlcihcImFwcGxpY2F0aW9uL3htbFwiKTtcblxuZXhwb3J0IHZhciBodG1sID0gcGFyc2VyKFwidGV4dC9odG1sXCIpO1xuXG5leHBvcnQgdmFyIHN2ZyA9IHBhcnNlcihcImltYWdlL3N2Zyt4bWxcIik7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4LCB5KSB7XG4gIHZhciBub2RlcztcblxuICBpZiAoeCA9PSBudWxsKSB4ID0gMDtcbiAgaWYgKHkgPT0gbnVsbCkgeSA9IDA7XG5cbiAgZnVuY3Rpb24gZm9yY2UoKSB7XG4gICAgdmFyIGksXG4gICAgICAgIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICAgIG5vZGUsXG4gICAgICAgIHN4ID0gMCxcbiAgICAgICAgc3kgPSAwO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZSA9IG5vZGVzW2ldLCBzeCArPSBub2RlLngsIHN5ICs9IG5vZGUueTtcbiAgICB9XG5cbiAgICBmb3IgKHN4ID0gc3ggLyBuIC0geCwgc3kgPSBzeSAvIG4gLSB5LCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlLnggLT0gc3gsIG5vZGUueSAtPSBzeTtcbiAgICB9XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oXykge1xuICAgIG5vZGVzID0gXztcbiAgfTtcblxuICBmb3JjZS54ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSArXywgZm9yY2UpIDogeDtcbiAgfTtcblxuICBmb3JjZS55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSArXywgZm9yY2UpIDogeTtcbiAgfTtcblxuICByZXR1cm4gZm9yY2U7XG59XG4iLCJpbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBqaWdnbGUgZnJvbSBcIi4vamlnZ2xlXCI7XG5pbXBvcnQge3F1YWR0cmVlfSBmcm9tIFwiZDMtcXVhZHRyZWVcIjtcblxuZnVuY3Rpb24geChkKSB7XG4gIHJldHVybiBkLnggKyBkLnZ4O1xufVxuXG5mdW5jdGlvbiB5KGQpIHtcbiAgcmV0dXJuIGQueSArIGQudnk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHJhZGl1cykge1xuICB2YXIgbm9kZXMsXG4gICAgICByYWRpaSxcbiAgICAgIHN0cmVuZ3RoID0gMSxcbiAgICAgIGl0ZXJhdGlvbnMgPSAxO1xuXG4gIGlmICh0eXBlb2YgcmFkaXVzICE9PSBcImZ1bmN0aW9uXCIpIHJhZGl1cyA9IGNvbnN0YW50KHJhZGl1cyA9PSBudWxsID8gMSA6ICtyYWRpdXMpO1xuXG4gIGZ1bmN0aW9uIGZvcmNlKCkge1xuICAgIHZhciBpLCBuID0gbm9kZXMubGVuZ3RoLFxuICAgICAgICB0cmVlLFxuICAgICAgICBub2RlLFxuICAgICAgICB4aSxcbiAgICAgICAgeWksXG4gICAgICAgIHJpLFxuICAgICAgICByaTI7XG5cbiAgICBmb3IgKHZhciBrID0gMDsgayA8IGl0ZXJhdGlvbnM7ICsraykge1xuICAgICAgdHJlZSA9IHF1YWR0cmVlKG5vZGVzLCB4LCB5KS52aXNpdEFmdGVyKHByZXBhcmUpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICBub2RlID0gbm9kZXNbaV07XG4gICAgICAgIHJpID0gcmFkaWlbbm9kZS5pbmRleF0sIHJpMiA9IHJpICogcmk7XG4gICAgICAgIHhpID0gbm9kZS54ICsgbm9kZS52eDtcbiAgICAgICAgeWkgPSBub2RlLnkgKyBub2RlLnZ5O1xuICAgICAgICB0cmVlLnZpc2l0KGFwcGx5KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBhcHBseShxdWFkLCB4MCwgeTAsIHgxLCB5MSkge1xuICAgICAgdmFyIGRhdGEgPSBxdWFkLmRhdGEsIHJqID0gcXVhZC5yLCByID0gcmkgKyByajtcbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIGlmIChkYXRhLmluZGV4ID4gbm9kZS5pbmRleCkge1xuICAgICAgICAgIHZhciB4ID0geGkgLSBkYXRhLnggLSBkYXRhLnZ4LFxuICAgICAgICAgICAgICB5ID0geWkgLSBkYXRhLnkgLSBkYXRhLnZ5LFxuICAgICAgICAgICAgICBsID0geCAqIHggKyB5ICogeTtcbiAgICAgICAgICBpZiAobCA8IHIgKiByKSB7XG4gICAgICAgICAgICBpZiAoeCA9PT0gMCkgeCA9IGppZ2dsZSgpLCBsICs9IHggKiB4O1xuICAgICAgICAgICAgaWYgKHkgPT09IDApIHkgPSBqaWdnbGUoKSwgbCArPSB5ICogeTtcbiAgICAgICAgICAgIGwgPSAociAtIChsID0gTWF0aC5zcXJ0KGwpKSkgLyBsICogc3RyZW5ndGg7XG4gICAgICAgICAgICBub2RlLnZ4ICs9ICh4ICo9IGwpICogKHIgPSAocmogKj0gcmopIC8gKHJpMiArIHJqKSk7XG4gICAgICAgICAgICBub2RlLnZ5ICs9ICh5ICo9IGwpICogcjtcbiAgICAgICAgICAgIGRhdGEudnggLT0geCAqIChyID0gMSAtIHIpO1xuICAgICAgICAgICAgZGF0YS52eSAtPSB5ICogcjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHgwID4geGkgKyByIHx8IHgxIDwgeGkgLSByIHx8IHkwID4geWkgKyByIHx8IHkxIDwgeWkgLSByO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHByZXBhcmUocXVhZCkge1xuICAgIGlmIChxdWFkLmRhdGEpIHJldHVybiBxdWFkLnIgPSByYWRpaVtxdWFkLmRhdGEuaW5kZXhdO1xuICAgIGZvciAodmFyIGkgPSBxdWFkLnIgPSAwOyBpIDwgNDsgKytpKSB7XG4gICAgICBpZiAocXVhZFtpXSAmJiBxdWFkW2ldLnIgPiBxdWFkLnIpIHtcbiAgICAgICAgcXVhZC5yID0gcXVhZFtpXS5yO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgaWYgKCFub2RlcykgcmV0dXJuO1xuICAgIHZhciBpLCBuID0gbm9kZXMubGVuZ3RoLCBub2RlO1xuICAgIHJhZGlpID0gbmV3IEFycmF5KG4pO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIG5vZGUgPSBub2Rlc1tpXSwgcmFkaWlbbm9kZS5pbmRleF0gPSArcmFkaXVzKG5vZGUsIGksIG5vZGVzKTtcbiAgfVxuXG4gIGZvcmNlLmluaXRpYWxpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgbm9kZXMgPSBfO1xuICAgIGluaXRpYWxpemUoKTtcbiAgfTtcblxuICBmb3JjZS5pdGVyYXRpb25zID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGl0ZXJhdGlvbnMgPSArXywgZm9yY2UpIDogaXRlcmF0aW9ucztcbiAgfTtcblxuICBmb3JjZS5zdHJlbmd0aCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzdHJlbmd0aCA9ICtfLCBmb3JjZSkgOiBzdHJlbmd0aDtcbiAgfTtcblxuICBmb3JjZS5yYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocmFkaXVzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemUoKSwgZm9yY2UpIDogcmFkaXVzO1xuICB9O1xuXG4gIHJldHVybiBmb3JjZTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGZvcmNlQ2VudGVyfSBmcm9tIFwiLi9jZW50ZXJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBmb3JjZUNvbGxpZGV9IGZyb20gXCIuL2NvbGxpZGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBmb3JjZUxpbmt9IGZyb20gXCIuL2xpbmtcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBmb3JjZU1hbnlCb2R5fSBmcm9tIFwiLi9tYW55Qm9keVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGZvcmNlUmFkaWFsfSBmcm9tIFwiLi9yYWRpYWxcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBmb3JjZVNpbXVsYXRpb259IGZyb20gXCIuL3NpbXVsYXRpb25cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBmb3JjZVh9IGZyb20gXCIuL3hcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBmb3JjZVl9IGZyb20gXCIuL3lcIjtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gKE1hdGgucmFuZG9tKCkgLSAwLjUpICogMWUtNjtcbn1cbiIsImltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IGppZ2dsZSBmcm9tIFwiLi9qaWdnbGVcIjtcbmltcG9ydCB7bWFwfSBmcm9tIFwiZDMtY29sbGVjdGlvblwiO1xuXG5mdW5jdGlvbiBpbmRleChkKSB7XG4gIHJldHVybiBkLmluZGV4O1xufVxuXG5mdW5jdGlvbiBmaW5kKG5vZGVCeUlkLCBub2RlSWQpIHtcbiAgdmFyIG5vZGUgPSBub2RlQnlJZC5nZXQobm9kZUlkKTtcbiAgaWYgKCFub2RlKSB0aHJvdyBuZXcgRXJyb3IoXCJtaXNzaW5nOiBcIiArIG5vZGVJZCk7XG4gIHJldHVybiBub2RlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihsaW5rcykge1xuICB2YXIgaWQgPSBpbmRleCxcbiAgICAgIHN0cmVuZ3RoID0gZGVmYXVsdFN0cmVuZ3RoLFxuICAgICAgc3RyZW5ndGhzLFxuICAgICAgZGlzdGFuY2UgPSBjb25zdGFudCgzMCksXG4gICAgICBkaXN0YW5jZXMsXG4gICAgICBub2RlcyxcbiAgICAgIGNvdW50LFxuICAgICAgYmlhcyxcbiAgICAgIGl0ZXJhdGlvbnMgPSAxO1xuXG4gIGlmIChsaW5rcyA9PSBudWxsKSBsaW5rcyA9IFtdO1xuXG4gIGZ1bmN0aW9uIGRlZmF1bHRTdHJlbmd0aChsaW5rKSB7XG4gICAgcmV0dXJuIDEgLyBNYXRoLm1pbihjb3VudFtsaW5rLnNvdXJjZS5pbmRleF0sIGNvdW50W2xpbmsudGFyZ2V0LmluZGV4XSk7XG4gIH1cblxuICBmdW5jdGlvbiBmb3JjZShhbHBoYSkge1xuICAgIGZvciAodmFyIGsgPSAwLCBuID0gbGlua3MubGVuZ3RoOyBrIDwgaXRlcmF0aW9uczsgKytrKSB7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbGluaywgc291cmNlLCB0YXJnZXQsIHgsIHksIGwsIGI7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgbGluayA9IGxpbmtzW2ldLCBzb3VyY2UgPSBsaW5rLnNvdXJjZSwgdGFyZ2V0ID0gbGluay50YXJnZXQ7XG4gICAgICAgIHggPSB0YXJnZXQueCArIHRhcmdldC52eCAtIHNvdXJjZS54IC0gc291cmNlLnZ4IHx8IGppZ2dsZSgpO1xuICAgICAgICB5ID0gdGFyZ2V0LnkgKyB0YXJnZXQudnkgLSBzb3VyY2UueSAtIHNvdXJjZS52eSB8fCBqaWdnbGUoKTtcbiAgICAgICAgbCA9IE1hdGguc3FydCh4ICogeCArIHkgKiB5KTtcbiAgICAgICAgbCA9IChsIC0gZGlzdGFuY2VzW2ldKSAvIGwgKiBhbHBoYSAqIHN0cmVuZ3Roc1tpXTtcbiAgICAgICAgeCAqPSBsLCB5ICo9IGw7XG4gICAgICAgIHRhcmdldC52eCAtPSB4ICogKGIgPSBiaWFzW2ldKTtcbiAgICAgICAgdGFyZ2V0LnZ5IC09IHkgKiBiO1xuICAgICAgICBzb3VyY2UudnggKz0geCAqIChiID0gMSAtIGIpO1xuICAgICAgICBzb3VyY2UudnkgKz0geSAqIGI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcbiAgICBpZiAoIW5vZGVzKSByZXR1cm47XG5cbiAgICB2YXIgaSxcbiAgICAgICAgbiA9IG5vZGVzLmxlbmd0aCxcbiAgICAgICAgbSA9IGxpbmtzLmxlbmd0aCxcbiAgICAgICAgbm9kZUJ5SWQgPSBtYXAobm9kZXMsIGlkKSxcbiAgICAgICAgbGluaztcblxuICAgIGZvciAoaSA9IDAsIGNvdW50ID0gbmV3IEFycmF5KG4pOyBpIDwgbTsgKytpKSB7XG4gICAgICBsaW5rID0gbGlua3NbaV0sIGxpbmsuaW5kZXggPSBpO1xuICAgICAgaWYgKHR5cGVvZiBsaW5rLnNvdXJjZSAhPT0gXCJvYmplY3RcIikgbGluay5zb3VyY2UgPSBmaW5kKG5vZGVCeUlkLCBsaW5rLnNvdXJjZSk7XG4gICAgICBpZiAodHlwZW9mIGxpbmsudGFyZ2V0ICE9PSBcIm9iamVjdFwiKSBsaW5rLnRhcmdldCA9IGZpbmQobm9kZUJ5SWQsIGxpbmsudGFyZ2V0KTtcbiAgICAgIGNvdW50W2xpbmsuc291cmNlLmluZGV4XSA9IChjb3VudFtsaW5rLnNvdXJjZS5pbmRleF0gfHwgMCkgKyAxO1xuICAgICAgY291bnRbbGluay50YXJnZXQuaW5kZXhdID0gKGNvdW50W2xpbmsudGFyZ2V0LmluZGV4XSB8fCAwKSArIDE7XG4gICAgfVxuXG4gICAgZm9yIChpID0gMCwgYmlhcyA9IG5ldyBBcnJheShtKTsgaSA8IG07ICsraSkge1xuICAgICAgbGluayA9IGxpbmtzW2ldLCBiaWFzW2ldID0gY291bnRbbGluay5zb3VyY2UuaW5kZXhdIC8gKGNvdW50W2xpbmsuc291cmNlLmluZGV4XSArIGNvdW50W2xpbmsudGFyZ2V0LmluZGV4XSk7XG4gICAgfVxuXG4gICAgc3RyZW5ndGhzID0gbmV3IEFycmF5KG0pLCBpbml0aWFsaXplU3RyZW5ndGgoKTtcbiAgICBkaXN0YW5jZXMgPSBuZXcgQXJyYXkobSksIGluaXRpYWxpemVEaXN0YW5jZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZVN0cmVuZ3RoKCkge1xuICAgIGlmICghbm9kZXMpIHJldHVybjtcblxuICAgIGZvciAodmFyIGkgPSAwLCBuID0gbGlua3MubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICBzdHJlbmd0aHNbaV0gPSArc3RyZW5ndGgobGlua3NbaV0sIGksIGxpbmtzKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplRGlzdGFuY2UoKSB7XG4gICAgaWYgKCFub2RlcykgcmV0dXJuO1xuXG4gICAgZm9yICh2YXIgaSA9IDAsIG4gPSBsaW5rcy5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgIGRpc3RhbmNlc1tpXSA9ICtkaXN0YW5jZShsaW5rc1tpXSwgaSwgbGlua3MpO1xuICAgIH1cbiAgfVxuXG4gIGZvcmNlLmluaXRpYWxpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgbm9kZXMgPSBfO1xuICAgIGluaXRpYWxpemUoKTtcbiAgfTtcblxuICBmb3JjZS5saW5rcyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChsaW5rcyA9IF8sIGluaXRpYWxpemUoKSwgZm9yY2UpIDogbGlua3M7XG4gIH07XG5cbiAgZm9yY2UuaWQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaWQgPSBfLCBmb3JjZSkgOiBpZDtcbiAgfTtcblxuICBmb3JjZS5pdGVyYXRpb25zID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGl0ZXJhdGlvbnMgPSArXywgZm9yY2UpIDogaXRlcmF0aW9ucztcbiAgfTtcblxuICBmb3JjZS5zdHJlbmd0aCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzdHJlbmd0aCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBpbml0aWFsaXplU3RyZW5ndGgoKSwgZm9yY2UpIDogc3RyZW5ndGg7XG4gIH07XG5cbiAgZm9yY2UuZGlzdGFuY2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZGlzdGFuY2UgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZURpc3RhbmNlKCksIGZvcmNlKSA6IGRpc3RhbmNlO1xuICB9O1xuXG4gIHJldHVybiBmb3JjZTtcbn1cbiIsImltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IGppZ2dsZSBmcm9tIFwiLi9qaWdnbGVcIjtcbmltcG9ydCB7cXVhZHRyZWV9IGZyb20gXCJkMy1xdWFkdHJlZVwiO1xuaW1wb3J0IHt4LCB5fSBmcm9tIFwiLi9zaW11bGF0aW9uXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgbm9kZXMsXG4gICAgICBub2RlLFxuICAgICAgYWxwaGEsXG4gICAgICBzdHJlbmd0aCA9IGNvbnN0YW50KC0zMCksXG4gICAgICBzdHJlbmd0aHMsXG4gICAgICBkaXN0YW5jZU1pbjIgPSAxLFxuICAgICAgZGlzdGFuY2VNYXgyID0gSW5maW5pdHksXG4gICAgICB0aGV0YTIgPSAwLjgxO1xuXG4gIGZ1bmN0aW9uIGZvcmNlKF8pIHtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aCwgdHJlZSA9IHF1YWR0cmVlKG5vZGVzLCB4LCB5KS52aXNpdEFmdGVyKGFjY3VtdWxhdGUpO1xuICAgIGZvciAoYWxwaGEgPSBfLCBpID0gMDsgaSA8IG47ICsraSkgbm9kZSA9IG5vZGVzW2ldLCB0cmVlLnZpc2l0KGFwcGx5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgaWYgKCFub2RlcykgcmV0dXJuO1xuICAgIHZhciBpLCBuID0gbm9kZXMubGVuZ3RoLCBub2RlO1xuICAgIHN0cmVuZ3RocyA9IG5ldyBBcnJheShuKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBub2RlID0gbm9kZXNbaV0sIHN0cmVuZ3Roc1tub2RlLmluZGV4XSA9ICtzdHJlbmd0aChub2RlLCBpLCBub2Rlcyk7XG4gIH1cblxuICBmdW5jdGlvbiBhY2N1bXVsYXRlKHF1YWQpIHtcbiAgICB2YXIgc3RyZW5ndGggPSAwLCBxLCBjLCB3ZWlnaHQgPSAwLCB4LCB5LCBpO1xuXG4gICAgLy8gRm9yIGludGVybmFsIG5vZGVzLCBhY2N1bXVsYXRlIGZvcmNlcyBmcm9tIGNoaWxkIHF1YWRyYW50cy5cbiAgICBpZiAocXVhZC5sZW5ndGgpIHtcbiAgICAgIGZvciAoeCA9IHkgPSBpID0gMDsgaSA8IDQ7ICsraSkge1xuICAgICAgICBpZiAoKHEgPSBxdWFkW2ldKSAmJiAoYyA9IE1hdGguYWJzKHEudmFsdWUpKSkge1xuICAgICAgICAgIHN0cmVuZ3RoICs9IHEudmFsdWUsIHdlaWdodCArPSBjLCB4ICs9IGMgKiBxLngsIHkgKz0gYyAqIHEueTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcXVhZC54ID0geCAvIHdlaWdodDtcbiAgICAgIHF1YWQueSA9IHkgLyB3ZWlnaHQ7XG4gICAgfVxuXG4gICAgLy8gRm9yIGxlYWYgbm9kZXMsIGFjY3VtdWxhdGUgZm9yY2VzIGZyb20gY29pbmNpZGVudCBxdWFkcmFudHMuXG4gICAgZWxzZSB7XG4gICAgICBxID0gcXVhZDtcbiAgICAgIHEueCA9IHEuZGF0YS54O1xuICAgICAgcS55ID0gcS5kYXRhLnk7XG4gICAgICBkbyBzdHJlbmd0aCArPSBzdHJlbmd0aHNbcS5kYXRhLmluZGV4XTtcbiAgICAgIHdoaWxlIChxID0gcS5uZXh0KTtcbiAgICB9XG5cbiAgICBxdWFkLnZhbHVlID0gc3RyZW5ndGg7XG4gIH1cblxuICBmdW5jdGlvbiBhcHBseShxdWFkLCB4MSwgXywgeDIpIHtcbiAgICBpZiAoIXF1YWQudmFsdWUpIHJldHVybiB0cnVlO1xuXG4gICAgdmFyIHggPSBxdWFkLnggLSBub2RlLngsXG4gICAgICAgIHkgPSBxdWFkLnkgLSBub2RlLnksXG4gICAgICAgIHcgPSB4MiAtIHgxLFxuICAgICAgICBsID0geCAqIHggKyB5ICogeTtcblxuICAgIC8vIEFwcGx5IHRoZSBCYXJuZXMtSHV0IGFwcHJveGltYXRpb24gaWYgcG9zc2libGUuXG4gICAgLy8gTGltaXQgZm9yY2VzIGZvciB2ZXJ5IGNsb3NlIG5vZGVzOyByYW5kb21pemUgZGlyZWN0aW9uIGlmIGNvaW5jaWRlbnQuXG4gICAgaWYgKHcgKiB3IC8gdGhldGEyIDwgbCkge1xuICAgICAgaWYgKGwgPCBkaXN0YW5jZU1heDIpIHtcbiAgICAgICAgaWYgKHggPT09IDApIHggPSBqaWdnbGUoKSwgbCArPSB4ICogeDtcbiAgICAgICAgaWYgKHkgPT09IDApIHkgPSBqaWdnbGUoKSwgbCArPSB5ICogeTtcbiAgICAgICAgaWYgKGwgPCBkaXN0YW5jZU1pbjIpIGwgPSBNYXRoLnNxcnQoZGlzdGFuY2VNaW4yICogbCk7XG4gICAgICAgIG5vZGUudnggKz0geCAqIHF1YWQudmFsdWUgKiBhbHBoYSAvIGw7XG4gICAgICAgIG5vZGUudnkgKz0geSAqIHF1YWQudmFsdWUgKiBhbHBoYSAvIGw7XG4gICAgICB9XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICAvLyBPdGhlcndpc2UsIHByb2Nlc3MgcG9pbnRzIGRpcmVjdGx5LlxuICAgIGVsc2UgaWYgKHF1YWQubGVuZ3RoIHx8IGwgPj0gZGlzdGFuY2VNYXgyKSByZXR1cm47XG5cbiAgICAvLyBMaW1pdCBmb3JjZXMgZm9yIHZlcnkgY2xvc2Ugbm9kZXM7IHJhbmRvbWl6ZSBkaXJlY3Rpb24gaWYgY29pbmNpZGVudC5cbiAgICBpZiAocXVhZC5kYXRhICE9PSBub2RlIHx8IHF1YWQubmV4dCkge1xuICAgICAgaWYgKHggPT09IDApIHggPSBqaWdnbGUoKSwgbCArPSB4ICogeDtcbiAgICAgIGlmICh5ID09PSAwKSB5ID0gamlnZ2xlKCksIGwgKz0geSAqIHk7XG4gICAgICBpZiAobCA8IGRpc3RhbmNlTWluMikgbCA9IE1hdGguc3FydChkaXN0YW5jZU1pbjIgKiBsKTtcbiAgICB9XG5cbiAgICBkbyBpZiAocXVhZC5kYXRhICE9PSBub2RlKSB7XG4gICAgICB3ID0gc3RyZW5ndGhzW3F1YWQuZGF0YS5pbmRleF0gKiBhbHBoYSAvIGw7XG4gICAgICBub2RlLnZ4ICs9IHggKiB3O1xuICAgICAgbm9kZS52eSArPSB5ICogdztcbiAgICB9IHdoaWxlIChxdWFkID0gcXVhZC5uZXh0KTtcbiAgfVxuXG4gIGZvcmNlLmluaXRpYWxpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgbm9kZXMgPSBfO1xuICAgIGluaXRpYWxpemUoKTtcbiAgfTtcblxuICBmb3JjZS5zdHJlbmd0aCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzdHJlbmd0aCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBpbml0aWFsaXplKCksIGZvcmNlKSA6IHN0cmVuZ3RoO1xuICB9O1xuXG4gIGZvcmNlLmRpc3RhbmNlTWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRpc3RhbmNlTWluMiA9IF8gKiBfLCBmb3JjZSkgOiBNYXRoLnNxcnQoZGlzdGFuY2VNaW4yKTtcbiAgfTtcblxuICBmb3JjZS5kaXN0YW5jZU1heCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkaXN0YW5jZU1heDIgPSBfICogXywgZm9yY2UpIDogTWF0aC5zcXJ0KGRpc3RhbmNlTWF4Mik7XG4gIH07XG5cbiAgZm9yY2UudGhldGEgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhldGEyID0gXyAqIF8sIGZvcmNlKSA6IE1hdGguc3FydCh0aGV0YTIpO1xuICB9O1xuXG4gIHJldHVybiBmb3JjZTtcbn1cbiIsImltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihyYWRpdXMsIHgsIHkpIHtcbiAgdmFyIG5vZGVzLFxuICAgICAgc3RyZW5ndGggPSBjb25zdGFudCgwLjEpLFxuICAgICAgc3RyZW5ndGhzLFxuICAgICAgcmFkaXVzZXM7XG5cbiAgaWYgKHR5cGVvZiByYWRpdXMgIT09IFwiZnVuY3Rpb25cIikgcmFkaXVzID0gY29uc3RhbnQoK3JhZGl1cyk7XG4gIGlmICh4ID09IG51bGwpIHggPSAwO1xuICBpZiAoeSA9PSBudWxsKSB5ID0gMDtcblxuICBmdW5jdGlvbiBmb3JjZShhbHBoYSkge1xuICAgIGZvciAodmFyIGkgPSAwLCBuID0gbm9kZXMubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICB2YXIgbm9kZSA9IG5vZGVzW2ldLFxuICAgICAgICAgIGR4ID0gbm9kZS54IC0geCB8fCAxZS02LFxuICAgICAgICAgIGR5ID0gbm9kZS55IC0geSB8fCAxZS02LFxuICAgICAgICAgIHIgPSBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpLFxuICAgICAgICAgIGsgPSAocmFkaXVzZXNbaV0gLSByKSAqIHN0cmVuZ3Roc1tpXSAqIGFscGhhIC8gcjtcbiAgICAgIG5vZGUudnggKz0gZHggKiBrO1xuICAgICAgbm9kZS52eSArPSBkeSAqIGs7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcbiAgICBpZiAoIW5vZGVzKSByZXR1cm47XG4gICAgdmFyIGksIG4gPSBub2Rlcy5sZW5ndGg7XG4gICAgc3RyZW5ndGhzID0gbmV3IEFycmF5KG4pO1xuICAgIHJhZGl1c2VzID0gbmV3IEFycmF5KG4pO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHJhZGl1c2VzW2ldID0gK3JhZGl1cyhub2Rlc1tpXSwgaSwgbm9kZXMpO1xuICAgICAgc3RyZW5ndGhzW2ldID0gaXNOYU4ocmFkaXVzZXNbaV0pID8gMCA6ICtzdHJlbmd0aChub2Rlc1tpXSwgaSwgbm9kZXMpO1xuICAgIH1cbiAgfVxuXG4gIGZvcmNlLmluaXRpYWxpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgbm9kZXMgPSBfLCBpbml0aWFsaXplKCk7XG4gIH07XG5cbiAgZm9yY2Uuc3RyZW5ndGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RyZW5ndGggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZSgpLCBmb3JjZSkgOiBzdHJlbmd0aDtcbiAgfTtcblxuICBmb3JjZS5yYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocmFkaXVzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemUoKSwgZm9yY2UpIDogcmFkaXVzO1xuICB9O1xuXG4gIGZvcmNlLnggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9ICtfLCBmb3JjZSkgOiB4O1xuICB9O1xuXG4gIGZvcmNlLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9ICtfLCBmb3JjZSkgOiB5O1xuICB9O1xuXG4gIHJldHVybiBmb3JjZTtcbn1cbiIsImltcG9ydCB7ZGlzcGF0Y2h9IGZyb20gXCJkMy1kaXNwYXRjaFwiO1xuaW1wb3J0IHttYXB9IGZyb20gXCJkMy1jb2xsZWN0aW9uXCI7XG5pbXBvcnQge3RpbWVyfSBmcm9tIFwiZDMtdGltZXJcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHgoZCkge1xuICByZXR1cm4gZC54O1xufVxuXG5leHBvcnQgZnVuY3Rpb24geShkKSB7XG4gIHJldHVybiBkLnk7XG59XG5cbnZhciBpbml0aWFsUmFkaXVzID0gMTAsXG4gICAgaW5pdGlhbEFuZ2xlID0gTWF0aC5QSSAqICgzIC0gTWF0aC5zcXJ0KDUpKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZXMpIHtcbiAgdmFyIHNpbXVsYXRpb24sXG4gICAgICBhbHBoYSA9IDEsXG4gICAgICBhbHBoYU1pbiA9IDAuMDAxLFxuICAgICAgYWxwaGFEZWNheSA9IDEgLSBNYXRoLnBvdyhhbHBoYU1pbiwgMSAvIDMwMCksXG4gICAgICBhbHBoYVRhcmdldCA9IDAsXG4gICAgICB2ZWxvY2l0eURlY2F5ID0gMC42LFxuICAgICAgZm9yY2VzID0gbWFwKCksXG4gICAgICBzdGVwcGVyID0gdGltZXIoc3RlcCksXG4gICAgICBldmVudCA9IGRpc3BhdGNoKFwidGlja1wiLCBcImVuZFwiKTtcblxuICBpZiAobm9kZXMgPT0gbnVsbCkgbm9kZXMgPSBbXTtcblxuICBmdW5jdGlvbiBzdGVwKCkge1xuICAgIHRpY2soKTtcbiAgICBldmVudC5jYWxsKFwidGlja1wiLCBzaW11bGF0aW9uKTtcbiAgICBpZiAoYWxwaGEgPCBhbHBoYU1pbikge1xuICAgICAgc3RlcHBlci5zdG9wKCk7XG4gICAgICBldmVudC5jYWxsKFwiZW5kXCIsIHNpbXVsYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHRpY2soaXRlcmF0aW9ucykge1xuICAgIHZhciBpLCBuID0gbm9kZXMubGVuZ3RoLCBub2RlO1xuXG4gICAgaWYgKGl0ZXJhdGlvbnMgPT09IHVuZGVmaW5lZCkgaXRlcmF0aW9ucyA9IDE7XG5cbiAgICBmb3IgKHZhciBrID0gMDsgayA8IGl0ZXJhdGlvbnM7ICsraykge1xuICAgICAgYWxwaGEgKz0gKGFscGhhVGFyZ2V0IC0gYWxwaGEpICogYWxwaGFEZWNheTtcblxuICAgICAgZm9yY2VzLmVhY2goZnVuY3Rpb24gKGZvcmNlKSB7XG4gICAgICAgIGZvcmNlKGFscGhhKTtcbiAgICAgIH0pO1xuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIG5vZGUgPSBub2Rlc1tpXTtcbiAgICAgICAgaWYgKG5vZGUuZnggPT0gbnVsbCkgbm9kZS54ICs9IG5vZGUudnggKj0gdmVsb2NpdHlEZWNheTtcbiAgICAgICAgZWxzZSBub2RlLnggPSBub2RlLmZ4LCBub2RlLnZ4ID0gMDtcbiAgICAgICAgaWYgKG5vZGUuZnkgPT0gbnVsbCkgbm9kZS55ICs9IG5vZGUudnkgKj0gdmVsb2NpdHlEZWNheTtcbiAgICAgICAgZWxzZSBub2RlLnkgPSBub2RlLmZ5LCBub2RlLnZ5ID0gMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc2ltdWxhdGlvbjtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemVOb2RlcygpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IG5vZGVzLmxlbmd0aCwgbm9kZTsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlLmluZGV4ID0gaTtcbiAgICAgIGlmIChub2RlLmZ4ICE9IG51bGwpIG5vZGUueCA9IG5vZGUuZng7XG4gICAgICBpZiAobm9kZS5meSAhPSBudWxsKSBub2RlLnkgPSBub2RlLmZ5O1xuICAgICAgaWYgKGlzTmFOKG5vZGUueCkgfHwgaXNOYU4obm9kZS55KSkge1xuICAgICAgICB2YXIgcmFkaXVzID0gaW5pdGlhbFJhZGl1cyAqIE1hdGguc3FydChpKSwgYW5nbGUgPSBpICogaW5pdGlhbEFuZ2xlO1xuICAgICAgICBub2RlLnggPSByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZSk7XG4gICAgICAgIG5vZGUueSA9IHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlKTtcbiAgICAgIH1cbiAgICAgIGlmIChpc05hTihub2RlLnZ4KSB8fCBpc05hTihub2RlLnZ5KSkge1xuICAgICAgICBub2RlLnZ4ID0gbm9kZS52eSA9IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZUZvcmNlKGZvcmNlKSB7XG4gICAgaWYgKGZvcmNlLmluaXRpYWxpemUpIGZvcmNlLmluaXRpYWxpemUobm9kZXMpO1xuICAgIHJldHVybiBmb3JjZTtcbiAgfVxuXG4gIGluaXRpYWxpemVOb2RlcygpO1xuXG4gIHJldHVybiBzaW11bGF0aW9uID0ge1xuICAgIHRpY2s6IHRpY2ssXG5cbiAgICByZXN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBzdGVwcGVyLnJlc3RhcnQoc3RlcCksIHNpbXVsYXRpb247XG4gICAgfSxcblxuICAgIHN0b3A6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHN0ZXBwZXIuc3RvcCgpLCBzaW11bGF0aW9uO1xuICAgIH0sXG5cbiAgICBub2RlczogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobm9kZXMgPSBfLCBpbml0aWFsaXplTm9kZXMoKSwgZm9yY2VzLmVhY2goaW5pdGlhbGl6ZUZvcmNlKSwgc2ltdWxhdGlvbikgOiBub2RlcztcbiAgICB9LFxuXG4gICAgYWxwaGE6IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGFscGhhID0gK18sIHNpbXVsYXRpb24pIDogYWxwaGE7XG4gICAgfSxcblxuICAgIGFscGhhTWluOiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhbHBoYU1pbiA9ICtfLCBzaW11bGF0aW9uKSA6IGFscGhhTWluO1xuICAgIH0sXG5cbiAgICBhbHBoYURlY2F5OiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhbHBoYURlY2F5ID0gK18sIHNpbXVsYXRpb24pIDogK2FscGhhRGVjYXk7XG4gICAgfSxcblxuICAgIGFscGhhVGFyZ2V0OiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhbHBoYVRhcmdldCA9ICtfLCBzaW11bGF0aW9uKSA6IGFscGhhVGFyZ2V0O1xuICAgIH0sXG5cbiAgICB2ZWxvY2l0eURlY2F5OiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh2ZWxvY2l0eURlY2F5ID0gMSAtIF8sIHNpbXVsYXRpb24pIDogMSAtIHZlbG9jaXR5RGVjYXk7XG4gICAgfSxcblxuICAgIGZvcmNlOiBmdW5jdGlvbihuYW1lLCBfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyAoKF8gPT0gbnVsbCA/IGZvcmNlcy5yZW1vdmUobmFtZSkgOiBmb3JjZXMuc2V0KG5hbWUsIGluaXRpYWxpemVGb3JjZShfKSkpLCBzaW11bGF0aW9uKSA6IGZvcmNlcy5nZXQobmFtZSk7XG4gICAgfSxcblxuICAgIGZpbmQ6IGZ1bmN0aW9uKHgsIHksIHJhZGl1cykge1xuICAgICAgdmFyIGkgPSAwLFxuICAgICAgICAgIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICAgICAgZHgsXG4gICAgICAgICAgZHksXG4gICAgICAgICAgZDIsXG4gICAgICAgICAgbm9kZSxcbiAgICAgICAgICBjbG9zZXN0O1xuXG4gICAgICBpZiAocmFkaXVzID09IG51bGwpIHJhZGl1cyA9IEluZmluaXR5O1xuICAgICAgZWxzZSByYWRpdXMgKj0gcmFkaXVzO1xuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIG5vZGUgPSBub2Rlc1tpXTtcbiAgICAgICAgZHggPSB4IC0gbm9kZS54O1xuICAgICAgICBkeSA9IHkgLSBub2RlLnk7XG4gICAgICAgIGQyID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgICAgIGlmIChkMiA8IHJhZGl1cykgY2xvc2VzdCA9IG5vZGUsIHJhZGl1cyA9IGQyO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY2xvc2VzdDtcbiAgICB9LFxuXG4gICAgb246IGZ1bmN0aW9uKG5hbWUsIF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMSA/IChldmVudC5vbihuYW1lLCBfKSwgc2ltdWxhdGlvbikgOiBldmVudC5vbihuYW1lKTtcbiAgICB9XG4gIH07XG59XG4iLCJpbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICB2YXIgc3RyZW5ndGggPSBjb25zdGFudCgwLjEpLFxuICAgICAgbm9kZXMsXG4gICAgICBzdHJlbmd0aHMsXG4gICAgICB4ejtcblxuICBpZiAodHlwZW9mIHggIT09IFwiZnVuY3Rpb25cIikgeCA9IGNvbnN0YW50KHggPT0gbnVsbCA/IDAgOiAreCk7XG5cbiAgZnVuY3Rpb24gZm9yY2UoYWxwaGEpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IG5vZGVzLmxlbmd0aCwgbm9kZTsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlLnZ4ICs9ICh4eltpXSAtIG5vZGUueCkgKiBzdHJlbmd0aHNbaV0gKiBhbHBoYTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xuICAgIGlmICghbm9kZXMpIHJldHVybjtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aDtcbiAgICBzdHJlbmd0aHMgPSBuZXcgQXJyYXkobik7XG4gICAgeHogPSBuZXcgQXJyYXkobik7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgc3RyZW5ndGhzW2ldID0gaXNOYU4oeHpbaV0gPSAreChub2Rlc1tpXSwgaSwgbm9kZXMpKSA/IDAgOiArc3RyZW5ndGgobm9kZXNbaV0sIGksIG5vZGVzKTtcbiAgICB9XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oXykge1xuICAgIG5vZGVzID0gXztcbiAgICBpbml0aWFsaXplKCk7XG4gIH07XG5cbiAgZm9yY2Uuc3RyZW5ndGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RyZW5ndGggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZSgpLCBmb3JjZSkgOiBzdHJlbmd0aDtcbiAgfTtcblxuICBmb3JjZS54ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZSgpLCBmb3JjZSkgOiB4O1xuICB9O1xuXG4gIHJldHVybiBmb3JjZTtcbn1cbiIsImltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih5KSB7XG4gIHZhciBzdHJlbmd0aCA9IGNvbnN0YW50KDAuMSksXG4gICAgICBub2RlcyxcbiAgICAgIHN0cmVuZ3RocyxcbiAgICAgIHl6O1xuXG4gIGlmICh0eXBlb2YgeSAhPT0gXCJmdW5jdGlvblwiKSB5ID0gY29uc3RhbnQoeSA9PSBudWxsID8gMCA6ICt5KTtcblxuICBmdW5jdGlvbiBmb3JjZShhbHBoYSkge1xuICAgIGZvciAodmFyIGkgPSAwLCBuID0gbm9kZXMubGVuZ3RoLCBub2RlOyBpIDwgbjsgKytpKSB7XG4gICAgICBub2RlID0gbm9kZXNbaV0sIG5vZGUudnkgKz0gKHl6W2ldIC0gbm9kZS55KSAqIHN0cmVuZ3Roc1tpXSAqIGFscGhhO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgaWYgKCFub2RlcykgcmV0dXJuO1xuICAgIHZhciBpLCBuID0gbm9kZXMubGVuZ3RoO1xuICAgIHN0cmVuZ3RocyA9IG5ldyBBcnJheShuKTtcbiAgICB5eiA9IG5ldyBBcnJheShuKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBzdHJlbmd0aHNbaV0gPSBpc05hTih5eltpXSA9ICt5KG5vZGVzW2ldLCBpLCBub2RlcykpID8gMCA6ICtzdHJlbmd0aChub2Rlc1tpXSwgaSwgbm9kZXMpO1xuICAgIH1cbiAgfVxuXG4gIGZvcmNlLmluaXRpYWxpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgbm9kZXMgPSBfO1xuICAgIGluaXRpYWxpemUoKTtcbiAgfTtcblxuICBmb3JjZS5zdHJlbmd0aCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzdHJlbmd0aCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBpbml0aWFsaXplKCksIGZvcmNlKSA6IHN0cmVuZ3RoO1xuICB9O1xuXG4gIGZvcmNlLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBpbml0aWFsaXplKCksIGZvcmNlKSA6IHk7XG4gIH07XG5cbiAgcmV0dXJuIGZvcmNlO1xufVxuIiwiaW1wb3J0IGZvcm1hdExvY2FsZSBmcm9tIFwiLi9sb2NhbGVcIjtcblxudmFyIGxvY2FsZTtcbmV4cG9ydCB2YXIgZm9ybWF0O1xuZXhwb3J0IHZhciBmb3JtYXRQcmVmaXg7XG5cbmRlZmF1bHRMb2NhbGUoe1xuICBkZWNpbWFsOiBcIi5cIixcbiAgdGhvdXNhbmRzOiBcIixcIixcbiAgZ3JvdXBpbmc6IFszXSxcbiAgY3VycmVuY3k6IFtcIiRcIiwgXCJcIl1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZWZhdWx0TG9jYWxlKGRlZmluaXRpb24pIHtcbiAgbG9jYWxlID0gZm9ybWF0TG9jYWxlKGRlZmluaXRpb24pO1xuICBmb3JtYXQgPSBsb2NhbGUuZm9ybWF0O1xuICBmb3JtYXRQcmVmaXggPSBsb2NhbGUuZm9ybWF0UHJlZml4O1xuICByZXR1cm4gbG9jYWxlO1xufVxuIiwiaW1wb3J0IGZvcm1hdERlY2ltYWwgZnJvbSBcIi4vZm9ybWF0RGVjaW1hbFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiB4ID0gZm9ybWF0RGVjaW1hbChNYXRoLmFicyh4KSksIHggPyB4WzFdIDogTmFOO1xufVxuIiwiLy8gQ29tcHV0ZXMgdGhlIGRlY2ltYWwgY29lZmZpY2llbnQgYW5kIGV4cG9uZW50IG9mIHRoZSBzcGVjaWZpZWQgbnVtYmVyIHggd2l0aFxuLy8gc2lnbmlmaWNhbnQgZGlnaXRzIHAsIHdoZXJlIHggaXMgcG9zaXRpdmUgYW5kIHAgaXMgaW4gWzEsIDIxXSBvciB1bmRlZmluZWQuXG4vLyBGb3IgZXhhbXBsZSwgZm9ybWF0RGVjaW1hbCgxLjIzKSByZXR1cm5zIFtcIjEyM1wiLCAwXS5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgsIHApIHtcbiAgaWYgKChpID0gKHggPSBwID8geC50b0V4cG9uZW50aWFsKHAgLSAxKSA6IHgudG9FeHBvbmVudGlhbCgpKS5pbmRleE9mKFwiZVwiKSkgPCAwKSByZXR1cm4gbnVsbDsgLy8gTmFOLCDCsUluZmluaXR5XG4gIHZhciBpLCBjb2VmZmljaWVudCA9IHguc2xpY2UoMCwgaSk7XG5cbiAgLy8gVGhlIHN0cmluZyByZXR1cm5lZCBieSB0b0V4cG9uZW50aWFsIGVpdGhlciBoYXMgdGhlIGZvcm0gXFxkXFwuXFxkK2VbLStdXFxkK1xuICAvLyAoZS5nLiwgMS4yZSszKSBvciB0aGUgZm9ybSBcXGRlWy0rXVxcZCsgKGUuZy4sIDFlKzMpLlxuICByZXR1cm4gW1xuICAgIGNvZWZmaWNpZW50Lmxlbmd0aCA+IDEgPyBjb2VmZmljaWVudFswXSArIGNvZWZmaWNpZW50LnNsaWNlKDIpIDogY29lZmZpY2llbnQsXG4gICAgK3guc2xpY2UoaSArIDEpXG4gIF07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihncm91cGluZywgdGhvdXNhbmRzKSB7XG4gIHJldHVybiBmdW5jdGlvbih2YWx1ZSwgd2lkdGgpIHtcbiAgICB2YXIgaSA9IHZhbHVlLmxlbmd0aCxcbiAgICAgICAgdCA9IFtdLFxuICAgICAgICBqID0gMCxcbiAgICAgICAgZyA9IGdyb3VwaW5nWzBdLFxuICAgICAgICBsZW5ndGggPSAwO1xuXG4gICAgd2hpbGUgKGkgPiAwICYmIGcgPiAwKSB7XG4gICAgICBpZiAobGVuZ3RoICsgZyArIDEgPiB3aWR0aCkgZyA9IE1hdGgubWF4KDEsIHdpZHRoIC0gbGVuZ3RoKTtcbiAgICAgIHQucHVzaCh2YWx1ZS5zdWJzdHJpbmcoaSAtPSBnLCBpICsgZykpO1xuICAgICAgaWYgKChsZW5ndGggKz0gZyArIDEpID4gd2lkdGgpIGJyZWFrO1xuICAgICAgZyA9IGdyb3VwaW5nW2ogPSAoaiArIDEpICUgZ3JvdXBpbmcubGVuZ3RoXTtcbiAgICB9XG5cbiAgICByZXR1cm4gdC5yZXZlcnNlKCkuam9pbih0aG91c2FuZHMpO1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obnVtZXJhbHMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoL1swLTldL2csIGZ1bmN0aW9uKGkpIHtcbiAgICAgIHJldHVybiBudW1lcmFsc1sraV07XG4gICAgfSk7XG4gIH07XG59XG4iLCJpbXBvcnQgZm9ybWF0RGVjaW1hbCBmcm9tIFwiLi9mb3JtYXREZWNpbWFsXCI7XG5cbmV4cG9ydCB2YXIgcHJlZml4RXhwb25lbnQ7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgsIHApIHtcbiAgdmFyIGQgPSBmb3JtYXREZWNpbWFsKHgsIHApO1xuICBpZiAoIWQpIHJldHVybiB4ICsgXCJcIjtcbiAgdmFyIGNvZWZmaWNpZW50ID0gZFswXSxcbiAgICAgIGV4cG9uZW50ID0gZFsxXSxcbiAgICAgIGkgPSBleHBvbmVudCAtIChwcmVmaXhFeHBvbmVudCA9IE1hdGgubWF4KC04LCBNYXRoLm1pbig4LCBNYXRoLmZsb29yKGV4cG9uZW50IC8gMykpKSAqIDMpICsgMSxcbiAgICAgIG4gPSBjb2VmZmljaWVudC5sZW5ndGg7XG4gIHJldHVybiBpID09PSBuID8gY29lZmZpY2llbnRcbiAgICAgIDogaSA+IG4gPyBjb2VmZmljaWVudCArIG5ldyBBcnJheShpIC0gbiArIDEpLmpvaW4oXCIwXCIpXG4gICAgICA6IGkgPiAwID8gY29lZmZpY2llbnQuc2xpY2UoMCwgaSkgKyBcIi5cIiArIGNvZWZmaWNpZW50LnNsaWNlKGkpXG4gICAgICA6IFwiMC5cIiArIG5ldyBBcnJheSgxIC0gaSkuam9pbihcIjBcIikgKyBmb3JtYXREZWNpbWFsKHgsIE1hdGgubWF4KDAsIHAgKyBpIC0gMSkpWzBdOyAvLyBsZXNzIHRoYW4gMXkhXG59XG4iLCJpbXBvcnQgZm9ybWF0RGVjaW1hbCBmcm9tIFwiLi9mb3JtYXREZWNpbWFsXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgsIHApIHtcbiAgdmFyIGQgPSBmb3JtYXREZWNpbWFsKHgsIHApO1xuICBpZiAoIWQpIHJldHVybiB4ICsgXCJcIjtcbiAgdmFyIGNvZWZmaWNpZW50ID0gZFswXSxcbiAgICAgIGV4cG9uZW50ID0gZFsxXTtcbiAgcmV0dXJuIGV4cG9uZW50IDwgMCA/IFwiMC5cIiArIG5ldyBBcnJheSgtZXhwb25lbnQpLmpvaW4oXCIwXCIpICsgY29lZmZpY2llbnRcbiAgICAgIDogY29lZmZpY2llbnQubGVuZ3RoID4gZXhwb25lbnQgKyAxID8gY29lZmZpY2llbnQuc2xpY2UoMCwgZXhwb25lbnQgKyAxKSArIFwiLlwiICsgY29lZmZpY2llbnQuc2xpY2UoZXhwb25lbnQgKyAxKVxuICAgICAgOiBjb2VmZmljaWVudCArIG5ldyBBcnJheShleHBvbmVudCAtIGNvZWZmaWNpZW50Lmxlbmd0aCArIDIpLmpvaW4oXCIwXCIpO1xufVxuIiwiLy8gW1tmaWxsXWFsaWduXVtzaWduXVtzeW1ib2xdWzBdW3dpZHRoXVssXVsucHJlY2lzaW9uXVt+XVt0eXBlXVxudmFyIHJlID0gL14oPzooLik/KFs8Pj1eXSkpPyhbK1xcLSggXSk/KFskI10pPygwKT8oXFxkKyk/KCwpPyhcXC5cXGQrKT8ofik/KFthLXolXSk/JC9pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JtYXRTcGVjaWZpZXIoc3BlY2lmaWVyKSB7XG4gIHJldHVybiBuZXcgRm9ybWF0U3BlY2lmaWVyKHNwZWNpZmllcik7XG59XG5cbmZvcm1hdFNwZWNpZmllci5wcm90b3R5cGUgPSBGb3JtYXRTcGVjaWZpZXIucHJvdG90eXBlOyAvLyBpbnN0YW5jZW9mXG5cbmZ1bmN0aW9uIEZvcm1hdFNwZWNpZmllcihzcGVjaWZpZXIpIHtcbiAgaWYgKCEobWF0Y2ggPSByZS5leGVjKHNwZWNpZmllcikpKSB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGZvcm1hdDogXCIgKyBzcGVjaWZpZXIpO1xuICB2YXIgbWF0Y2g7XG4gIHRoaXMuZmlsbCA9IG1hdGNoWzFdIHx8IFwiIFwiO1xuICB0aGlzLmFsaWduID0gbWF0Y2hbMl0gfHwgXCI+XCI7XG4gIHRoaXMuc2lnbiA9IG1hdGNoWzNdIHx8IFwiLVwiO1xuICB0aGlzLnN5bWJvbCA9IG1hdGNoWzRdIHx8IFwiXCI7XG4gIHRoaXMuemVybyA9ICEhbWF0Y2hbNV07XG4gIHRoaXMud2lkdGggPSBtYXRjaFs2XSAmJiArbWF0Y2hbNl07XG4gIHRoaXMuY29tbWEgPSAhIW1hdGNoWzddO1xuICB0aGlzLnByZWNpc2lvbiA9IG1hdGNoWzhdICYmICttYXRjaFs4XS5zbGljZSgxKTtcbiAgdGhpcy50cmltID0gISFtYXRjaFs5XTtcbiAgdGhpcy50eXBlID0gbWF0Y2hbMTBdIHx8IFwiXCI7XG59XG5cbkZvcm1hdFNwZWNpZmllci5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuZmlsbFxuICAgICAgKyB0aGlzLmFsaWduXG4gICAgICArIHRoaXMuc2lnblxuICAgICAgKyB0aGlzLnN5bWJvbFxuICAgICAgKyAodGhpcy56ZXJvID8gXCIwXCIgOiBcIlwiKVxuICAgICAgKyAodGhpcy53aWR0aCA9PSBudWxsID8gXCJcIiA6IE1hdGgubWF4KDEsIHRoaXMud2lkdGggfCAwKSlcbiAgICAgICsgKHRoaXMuY29tbWEgPyBcIixcIiA6IFwiXCIpXG4gICAgICArICh0aGlzLnByZWNpc2lvbiA9PSBudWxsID8gXCJcIiA6IFwiLlwiICsgTWF0aC5tYXgoMCwgdGhpcy5wcmVjaXNpb24gfCAwKSlcbiAgICAgICsgKHRoaXMudHJpbSA/IFwiflwiIDogXCJcIilcbiAgICAgICsgdGhpcy50eXBlO1xufTtcbiIsIi8vIFRyaW1zIGluc2lnbmlmaWNhbnQgemVyb3MsIGUuZy4sIHJlcGxhY2VzIDEuMjAwMGsgd2l0aCAxLjJrLlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocykge1xuICBvdXQ6IGZvciAodmFyIG4gPSBzLmxlbmd0aCwgaSA9IDEsIGkwID0gLTEsIGkxOyBpIDwgbjsgKytpKSB7XG4gICAgc3dpdGNoIChzW2ldKSB7XG4gICAgICBjYXNlIFwiLlwiOiBpMCA9IGkxID0gaTsgYnJlYWs7XG4gICAgICBjYXNlIFwiMFwiOiBpZiAoaTAgPT09IDApIGkwID0gaTsgaTEgPSBpOyBicmVhaztcbiAgICAgIGRlZmF1bHQ6IGlmIChpMCA+IDApIHsgaWYgKCErc1tpXSkgYnJlYWsgb3V0OyBpMCA9IDA7IH0gYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiBpMCA+IDAgPyBzLnNsaWNlKDAsIGkwKSArIHMuc2xpY2UoaTEgKyAxKSA6IHM7XG59XG4iLCJpbXBvcnQgZm9ybWF0UHJlZml4QXV0byBmcm9tIFwiLi9mb3JtYXRQcmVmaXhBdXRvXCI7XG5pbXBvcnQgZm9ybWF0Um91bmRlZCBmcm9tIFwiLi9mb3JtYXRSb3VuZGVkXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgXCIlXCI6IGZ1bmN0aW9uKHgsIHApIHsgcmV0dXJuICh4ICogMTAwKS50b0ZpeGVkKHApOyB9LFxuICBcImJcIjogZnVuY3Rpb24oeCkgeyByZXR1cm4gTWF0aC5yb3VuZCh4KS50b1N0cmluZygyKTsgfSxcbiAgXCJjXCI6IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIHggKyBcIlwiOyB9LFxuICBcImRcIjogZnVuY3Rpb24oeCkgeyByZXR1cm4gTWF0aC5yb3VuZCh4KS50b1N0cmluZygxMCk7IH0sXG4gIFwiZVwiOiBmdW5jdGlvbih4LCBwKSB7IHJldHVybiB4LnRvRXhwb25lbnRpYWwocCk7IH0sXG4gIFwiZlwiOiBmdW5jdGlvbih4LCBwKSB7IHJldHVybiB4LnRvRml4ZWQocCk7IH0sXG4gIFwiZ1wiOiBmdW5jdGlvbih4LCBwKSB7IHJldHVybiB4LnRvUHJlY2lzaW9uKHApOyB9LFxuICBcIm9cIjogZnVuY3Rpb24oeCkgeyByZXR1cm4gTWF0aC5yb3VuZCh4KS50b1N0cmluZyg4KTsgfSxcbiAgXCJwXCI6IGZ1bmN0aW9uKHgsIHApIHsgcmV0dXJuIGZvcm1hdFJvdW5kZWQoeCAqIDEwMCwgcCk7IH0sXG4gIFwiclwiOiBmb3JtYXRSb3VuZGVkLFxuICBcInNcIjogZm9ybWF0UHJlZml4QXV0byxcbiAgXCJYXCI6IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIE1hdGgucm91bmQoeCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCk7IH0sXG4gIFwieFwiOiBmdW5jdGlvbih4KSB7IHJldHVybiBNYXRoLnJvdW5kKHgpLnRvU3RyaW5nKDE2KTsgfVxufTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIHg7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgZm9ybWF0RGVmYXVsdExvY2FsZSwgZm9ybWF0LCBmb3JtYXRQcmVmaXh9IGZyb20gXCIuL2RlZmF1bHRMb2NhbGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBmb3JtYXRMb2NhbGV9IGZyb20gXCIuL2xvY2FsZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGZvcm1hdFNwZWNpZmllcn0gZnJvbSBcIi4vZm9ybWF0U3BlY2lmaWVyXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcHJlY2lzaW9uRml4ZWR9IGZyb20gXCIuL3ByZWNpc2lvbkZpeGVkXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcHJlY2lzaW9uUHJlZml4fSBmcm9tIFwiLi9wcmVjaXNpb25QcmVmaXhcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwcmVjaXNpb25Sb3VuZH0gZnJvbSBcIi4vcHJlY2lzaW9uUm91bmRcIjtcbiIsImltcG9ydCBleHBvbmVudCBmcm9tIFwiLi9leHBvbmVudFwiO1xuaW1wb3J0IGZvcm1hdEdyb3VwIGZyb20gXCIuL2Zvcm1hdEdyb3VwXCI7XG5pbXBvcnQgZm9ybWF0TnVtZXJhbHMgZnJvbSBcIi4vZm9ybWF0TnVtZXJhbHNcIjtcbmltcG9ydCBmb3JtYXRTcGVjaWZpZXIgZnJvbSBcIi4vZm9ybWF0U3BlY2lmaWVyXCI7XG5pbXBvcnQgZm9ybWF0VHJpbSBmcm9tIFwiLi9mb3JtYXRUcmltXCI7XG5pbXBvcnQgZm9ybWF0VHlwZXMgZnJvbSBcIi4vZm9ybWF0VHlwZXNcIjtcbmltcG9ydCB7cHJlZml4RXhwb25lbnR9IGZyb20gXCIuL2Zvcm1hdFByZWZpeEF1dG9cIjtcbmltcG9ydCBpZGVudGl0eSBmcm9tIFwiLi9pZGVudGl0eVwiO1xuXG52YXIgcHJlZml4ZXMgPSBbXCJ5XCIsXCJ6XCIsXCJhXCIsXCJmXCIsXCJwXCIsXCJuXCIsXCLCtVwiLFwibVwiLFwiXCIsXCJrXCIsXCJNXCIsXCJHXCIsXCJUXCIsXCJQXCIsXCJFXCIsXCJaXCIsXCJZXCJdO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihsb2NhbGUpIHtcbiAgdmFyIGdyb3VwID0gbG9jYWxlLmdyb3VwaW5nICYmIGxvY2FsZS50aG91c2FuZHMgPyBmb3JtYXRHcm91cChsb2NhbGUuZ3JvdXBpbmcsIGxvY2FsZS50aG91c2FuZHMpIDogaWRlbnRpdHksXG4gICAgICBjdXJyZW5jeSA9IGxvY2FsZS5jdXJyZW5jeSxcbiAgICAgIGRlY2ltYWwgPSBsb2NhbGUuZGVjaW1hbCxcbiAgICAgIG51bWVyYWxzID0gbG9jYWxlLm51bWVyYWxzID8gZm9ybWF0TnVtZXJhbHMobG9jYWxlLm51bWVyYWxzKSA6IGlkZW50aXR5LFxuICAgICAgcGVyY2VudCA9IGxvY2FsZS5wZXJjZW50IHx8IFwiJVwiO1xuXG4gIGZ1bmN0aW9uIG5ld0Zvcm1hdChzcGVjaWZpZXIpIHtcbiAgICBzcGVjaWZpZXIgPSBmb3JtYXRTcGVjaWZpZXIoc3BlY2lmaWVyKTtcblxuICAgIHZhciBmaWxsID0gc3BlY2lmaWVyLmZpbGwsXG4gICAgICAgIGFsaWduID0gc3BlY2lmaWVyLmFsaWduLFxuICAgICAgICBzaWduID0gc3BlY2lmaWVyLnNpZ24sXG4gICAgICAgIHN5bWJvbCA9IHNwZWNpZmllci5zeW1ib2wsXG4gICAgICAgIHplcm8gPSBzcGVjaWZpZXIuemVybyxcbiAgICAgICAgd2lkdGggPSBzcGVjaWZpZXIud2lkdGgsXG4gICAgICAgIGNvbW1hID0gc3BlY2lmaWVyLmNvbW1hLFxuICAgICAgICBwcmVjaXNpb24gPSBzcGVjaWZpZXIucHJlY2lzaW9uLFxuICAgICAgICB0cmltID0gc3BlY2lmaWVyLnRyaW0sXG4gICAgICAgIHR5cGUgPSBzcGVjaWZpZXIudHlwZTtcblxuICAgIC8vIFRoZSBcIm5cIiB0eXBlIGlzIGFuIGFsaWFzIGZvciBcIixnXCIuXG4gICAgaWYgKHR5cGUgPT09IFwiblwiKSBjb21tYSA9IHRydWUsIHR5cGUgPSBcImdcIjtcblxuICAgIC8vIFRoZSBcIlwiIHR5cGUsIGFuZCBhbnkgaW52YWxpZCB0eXBlLCBpcyBhbiBhbGlhcyBmb3IgXCIuMTJ+Z1wiLlxuICAgIGVsc2UgaWYgKCFmb3JtYXRUeXBlc1t0eXBlXSkgcHJlY2lzaW9uID09IG51bGwgJiYgKHByZWNpc2lvbiA9IDEyKSwgdHJpbSA9IHRydWUsIHR5cGUgPSBcImdcIjtcblxuICAgIC8vIElmIHplcm8gZmlsbCBpcyBzcGVjaWZpZWQsIHBhZGRpbmcgZ29lcyBhZnRlciBzaWduIGFuZCBiZWZvcmUgZGlnaXRzLlxuICAgIGlmICh6ZXJvIHx8IChmaWxsID09PSBcIjBcIiAmJiBhbGlnbiA9PT0gXCI9XCIpKSB6ZXJvID0gdHJ1ZSwgZmlsbCA9IFwiMFwiLCBhbGlnbiA9IFwiPVwiO1xuXG4gICAgLy8gQ29tcHV0ZSB0aGUgcHJlZml4IGFuZCBzdWZmaXguXG4gICAgLy8gRm9yIFNJLXByZWZpeCwgdGhlIHN1ZmZpeCBpcyBsYXppbHkgY29tcHV0ZWQuXG4gICAgdmFyIHByZWZpeCA9IHN5bWJvbCA9PT0gXCIkXCIgPyBjdXJyZW5jeVswXSA6IHN5bWJvbCA9PT0gXCIjXCIgJiYgL1tib3hYXS8udGVzdCh0eXBlKSA/IFwiMFwiICsgdHlwZS50b0xvd2VyQ2FzZSgpIDogXCJcIixcbiAgICAgICAgc3VmZml4ID0gc3ltYm9sID09PSBcIiRcIiA/IGN1cnJlbmN5WzFdIDogL1slcF0vLnRlc3QodHlwZSkgPyBwZXJjZW50IDogXCJcIjtcblxuICAgIC8vIFdoYXQgZm9ybWF0IGZ1bmN0aW9uIHNob3VsZCB3ZSB1c2U/XG4gICAgLy8gSXMgdGhpcyBhbiBpbnRlZ2VyIHR5cGU/XG4gICAgLy8gQ2FuIHRoaXMgdHlwZSBnZW5lcmF0ZSBleHBvbmVudGlhbCBub3RhdGlvbj9cbiAgICB2YXIgZm9ybWF0VHlwZSA9IGZvcm1hdFR5cGVzW3R5cGVdLFxuICAgICAgICBtYXliZVN1ZmZpeCA9IC9bZGVmZ3BycyVdLy50ZXN0KHR5cGUpO1xuXG4gICAgLy8gU2V0IHRoZSBkZWZhdWx0IHByZWNpc2lvbiBpZiBub3Qgc3BlY2lmaWVkLFxuICAgIC8vIG9yIGNsYW1wIHRoZSBzcGVjaWZpZWQgcHJlY2lzaW9uIHRvIHRoZSBzdXBwb3J0ZWQgcmFuZ2UuXG4gICAgLy8gRm9yIHNpZ25pZmljYW50IHByZWNpc2lvbiwgaXQgbXVzdCBiZSBpbiBbMSwgMjFdLlxuICAgIC8vIEZvciBmaXhlZCBwcmVjaXNpb24sIGl0IG11c3QgYmUgaW4gWzAsIDIwXS5cbiAgICBwcmVjaXNpb24gPSBwcmVjaXNpb24gPT0gbnVsbCA/IDZcbiAgICAgICAgOiAvW2dwcnNdLy50ZXN0KHR5cGUpID8gTWF0aC5tYXgoMSwgTWF0aC5taW4oMjEsIHByZWNpc2lvbikpXG4gICAgICAgIDogTWF0aC5tYXgoMCwgTWF0aC5taW4oMjAsIHByZWNpc2lvbikpO1xuXG4gICAgZnVuY3Rpb24gZm9ybWF0KHZhbHVlKSB7XG4gICAgICB2YXIgdmFsdWVQcmVmaXggPSBwcmVmaXgsXG4gICAgICAgICAgdmFsdWVTdWZmaXggPSBzdWZmaXgsXG4gICAgICAgICAgaSwgbiwgYztcblxuICAgICAgaWYgKHR5cGUgPT09IFwiY1wiKSB7XG4gICAgICAgIHZhbHVlU3VmZml4ID0gZm9ybWF0VHlwZSh2YWx1ZSkgKyB2YWx1ZVN1ZmZpeDtcbiAgICAgICAgdmFsdWUgPSBcIlwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsdWUgPSArdmFsdWU7XG5cbiAgICAgICAgLy8gUGVyZm9ybSB0aGUgaW5pdGlhbCBmb3JtYXR0aW5nLlxuICAgICAgICB2YXIgdmFsdWVOZWdhdGl2ZSA9IHZhbHVlIDwgMDtcbiAgICAgICAgdmFsdWUgPSBmb3JtYXRUeXBlKE1hdGguYWJzKHZhbHVlKSwgcHJlY2lzaW9uKTtcblxuICAgICAgICAvLyBUcmltIGluc2lnbmlmaWNhbnQgemVyb3MuXG4gICAgICAgIGlmICh0cmltKSB2YWx1ZSA9IGZvcm1hdFRyaW0odmFsdWUpO1xuXG4gICAgICAgIC8vIElmIGEgbmVnYXRpdmUgdmFsdWUgcm91bmRzIHRvIHplcm8gZHVyaW5nIGZvcm1hdHRpbmcsIHRyZWF0IGFzIHBvc2l0aXZlLlxuICAgICAgICBpZiAodmFsdWVOZWdhdGl2ZSAmJiArdmFsdWUgPT09IDApIHZhbHVlTmVnYXRpdmUgPSBmYWxzZTtcblxuICAgICAgICAvLyBDb21wdXRlIHRoZSBwcmVmaXggYW5kIHN1ZmZpeC5cbiAgICAgICAgdmFsdWVQcmVmaXggPSAodmFsdWVOZWdhdGl2ZSA/IChzaWduID09PSBcIihcIiA/IHNpZ24gOiBcIi1cIikgOiBzaWduID09PSBcIi1cIiB8fCBzaWduID09PSBcIihcIiA/IFwiXCIgOiBzaWduKSArIHZhbHVlUHJlZml4O1xuICAgICAgICB2YWx1ZVN1ZmZpeCA9ICh0eXBlID09PSBcInNcIiA/IHByZWZpeGVzWzggKyBwcmVmaXhFeHBvbmVudCAvIDNdIDogXCJcIikgKyB2YWx1ZVN1ZmZpeCArICh2YWx1ZU5lZ2F0aXZlICYmIHNpZ24gPT09IFwiKFwiID8gXCIpXCIgOiBcIlwiKTtcblxuICAgICAgICAvLyBCcmVhayB0aGUgZm9ybWF0dGVkIHZhbHVlIGludG8gdGhlIGludGVnZXIg4oCcdmFsdWXigJ0gcGFydCB0aGF0IGNhbiBiZVxuICAgICAgICAvLyBncm91cGVkLCBhbmQgZnJhY3Rpb25hbCBvciBleHBvbmVudGlhbCDigJxzdWZmaXjigJ0gcGFydCB0aGF0IGlzIG5vdC5cbiAgICAgICAgaWYgKG1heWJlU3VmZml4KSB7XG4gICAgICAgICAgaSA9IC0xLCBuID0gdmFsdWUubGVuZ3RoO1xuICAgICAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgICBpZiAoYyA9IHZhbHVlLmNoYXJDb2RlQXQoaSksIDQ4ID4gYyB8fCBjID4gNTcpIHtcbiAgICAgICAgICAgICAgdmFsdWVTdWZmaXggPSAoYyA9PT0gNDYgPyBkZWNpbWFsICsgdmFsdWUuc2xpY2UoaSArIDEpIDogdmFsdWUuc2xpY2UoaSkpICsgdmFsdWVTdWZmaXg7XG4gICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUuc2xpY2UoMCwgaSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBJZiB0aGUgZmlsbCBjaGFyYWN0ZXIgaXMgbm90IFwiMFwiLCBncm91cGluZyBpcyBhcHBsaWVkIGJlZm9yZSBwYWRkaW5nLlxuICAgICAgaWYgKGNvbW1hICYmICF6ZXJvKSB2YWx1ZSA9IGdyb3VwKHZhbHVlLCBJbmZpbml0eSk7XG5cbiAgICAgIC8vIENvbXB1dGUgdGhlIHBhZGRpbmcuXG4gICAgICB2YXIgbGVuZ3RoID0gdmFsdWVQcmVmaXgubGVuZ3RoICsgdmFsdWUubGVuZ3RoICsgdmFsdWVTdWZmaXgubGVuZ3RoLFxuICAgICAgICAgIHBhZGRpbmcgPSBsZW5ndGggPCB3aWR0aCA/IG5ldyBBcnJheSh3aWR0aCAtIGxlbmd0aCArIDEpLmpvaW4oZmlsbCkgOiBcIlwiO1xuXG4gICAgICAvLyBJZiB0aGUgZmlsbCBjaGFyYWN0ZXIgaXMgXCIwXCIsIGdyb3VwaW5nIGlzIGFwcGxpZWQgYWZ0ZXIgcGFkZGluZy5cbiAgICAgIGlmIChjb21tYSAmJiB6ZXJvKSB2YWx1ZSA9IGdyb3VwKHBhZGRpbmcgKyB2YWx1ZSwgcGFkZGluZy5sZW5ndGggPyB3aWR0aCAtIHZhbHVlU3VmZml4Lmxlbmd0aCA6IEluZmluaXR5KSwgcGFkZGluZyA9IFwiXCI7XG5cbiAgICAgIC8vIFJlY29uc3RydWN0IHRoZSBmaW5hbCBvdXRwdXQgYmFzZWQgb24gdGhlIGRlc2lyZWQgYWxpZ25tZW50LlxuICAgICAgc3dpdGNoIChhbGlnbikge1xuICAgICAgICBjYXNlIFwiPFwiOiB2YWx1ZSA9IHZhbHVlUHJlZml4ICsgdmFsdWUgKyB2YWx1ZVN1ZmZpeCArIHBhZGRpbmc7IGJyZWFrO1xuICAgICAgICBjYXNlIFwiPVwiOiB2YWx1ZSA9IHZhbHVlUHJlZml4ICsgcGFkZGluZyArIHZhbHVlICsgdmFsdWVTdWZmaXg7IGJyZWFrO1xuICAgICAgICBjYXNlIFwiXlwiOiB2YWx1ZSA9IHBhZGRpbmcuc2xpY2UoMCwgbGVuZ3RoID0gcGFkZGluZy5sZW5ndGggPj4gMSkgKyB2YWx1ZVByZWZpeCArIHZhbHVlICsgdmFsdWVTdWZmaXggKyBwYWRkaW5nLnNsaWNlKGxlbmd0aCk7IGJyZWFrO1xuICAgICAgICBkZWZhdWx0OiB2YWx1ZSA9IHBhZGRpbmcgKyB2YWx1ZVByZWZpeCArIHZhbHVlICsgdmFsdWVTdWZmaXg7IGJyZWFrO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVtZXJhbHModmFsdWUpO1xuICAgIH1cblxuICAgIGZvcm1hdC50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHNwZWNpZmllciArIFwiXCI7XG4gICAgfTtcblxuICAgIHJldHVybiBmb3JtYXQ7XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRQcmVmaXgoc3BlY2lmaWVyLCB2YWx1ZSkge1xuICAgIHZhciBmID0gbmV3Rm9ybWF0KChzcGVjaWZpZXIgPSBmb3JtYXRTcGVjaWZpZXIoc3BlY2lmaWVyKSwgc3BlY2lmaWVyLnR5cGUgPSBcImZcIiwgc3BlY2lmaWVyKSksXG4gICAgICAgIGUgPSBNYXRoLm1heCgtOCwgTWF0aC5taW4oOCwgTWF0aC5mbG9vcihleHBvbmVudCh2YWx1ZSkgLyAzKSkpICogMyxcbiAgICAgICAgayA9IE1hdGgucG93KDEwLCAtZSksXG4gICAgICAgIHByZWZpeCA9IHByZWZpeGVzWzggKyBlIC8gM107XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICByZXR1cm4gZihrICogdmFsdWUpICsgcHJlZml4O1xuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGZvcm1hdDogbmV3Rm9ybWF0LFxuICAgIGZvcm1hdFByZWZpeDogZm9ybWF0UHJlZml4XG4gIH07XG59XG4iLCJpbXBvcnQgZXhwb25lbnQgZnJvbSBcIi4vZXhwb25lbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RlcCkge1xuICByZXR1cm4gTWF0aC5tYXgoMCwgLWV4cG9uZW50KE1hdGguYWJzKHN0ZXApKSk7XG59XG4iLCJpbXBvcnQgZXhwb25lbnQgZnJvbSBcIi4vZXhwb25lbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RlcCwgdmFsdWUpIHtcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWF4KC04LCBNYXRoLm1pbig4LCBNYXRoLmZsb29yKGV4cG9uZW50KHZhbHVlKSAvIDMpKSkgKiAzIC0gZXhwb25lbnQoTWF0aC5hYnMoc3RlcCkpKTtcbn1cbiIsImltcG9ydCBleHBvbmVudCBmcm9tIFwiLi9leHBvbmVudFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzdGVwLCBtYXgpIHtcbiAgc3RlcCA9IE1hdGguYWJzKHN0ZXApLCBtYXggPSBNYXRoLmFicyhtYXgpIC0gc3RlcDtcbiAgcmV0dXJuIE1hdGgubWF4KDAsIGV4cG9uZW50KG1heCkgLSBleHBvbmVudChzdGVwKSkgKyAxO1xufVxuIiwiLy8gQWRkcyBmbG9hdGluZyBwb2ludCBudW1iZXJzIHdpdGggdHdpY2UgdGhlIG5vcm1hbCBwcmVjaXNpb24uXG4vLyBSZWZlcmVuY2U6IEouIFIuIFNoZXdjaHVrLCBBZGFwdGl2ZSBQcmVjaXNpb24gRmxvYXRpbmctUG9pbnQgQXJpdGhtZXRpYyBhbmRcbi8vIEZhc3QgUm9idXN0IEdlb21ldHJpYyBQcmVkaWNhdGVzLCBEaXNjcmV0ZSAmIENvbXB1dGF0aW9uYWwgR2VvbWV0cnkgMTgoMylcbi8vIDMwNeKAkzM2MyAoMTk5NykuXG4vLyBDb2RlIGFkYXB0ZWQgZnJvbSBHZW9ncmFwaGljTGliIGJ5IENoYXJsZXMgRi4gRi4gS2FybmV5LFxuLy8gaHR0cDovL2dlb2dyYXBoaWNsaWIuc291cmNlZm9yZ2UubmV0L1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBBZGRlcjtcbn1cblxuZnVuY3Rpb24gQWRkZXIoKSB7XG4gIHRoaXMucmVzZXQoKTtcbn1cblxuQWRkZXIucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogQWRkZXIsXG4gIHJlc2V0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnMgPSAvLyByb3VuZGVkIHZhbHVlXG4gICAgdGhpcy50ID0gMDsgLy8gZXhhY3QgZXJyb3JcbiAgfSxcbiAgYWRkOiBmdW5jdGlvbih5KSB7XG4gICAgYWRkKHRlbXAsIHksIHRoaXMudCk7XG4gICAgYWRkKHRoaXMsIHRlbXAucywgdGhpcy5zKTtcbiAgICBpZiAodGhpcy5zKSB0aGlzLnQgKz0gdGVtcC50O1xuICAgIGVsc2UgdGhpcy5zID0gdGVtcC50O1xuICB9LFxuICB2YWx1ZU9mOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5zO1xuICB9XG59O1xuXG52YXIgdGVtcCA9IG5ldyBBZGRlcjtcblxuZnVuY3Rpb24gYWRkKGFkZGVyLCBhLCBiKSB7XG4gIHZhciB4ID0gYWRkZXIucyA9IGEgKyBiLFxuICAgICAgYnYgPSB4IC0gYSxcbiAgICAgIGF2ID0geCAtIGJ2O1xuICBhZGRlci50ID0gKGEgLSBhdikgKyAoYiAtIGJ2KTtcbn1cbiIsImltcG9ydCBhZGRlciBmcm9tIFwiLi9hZGRlclwiO1xuaW1wb3J0IHthdGFuMiwgY29zLCBxdWFydGVyUGksIHJhZGlhbnMsIHNpbiwgdGF1fSBmcm9tIFwiLi9tYXRoXCI7XG5pbXBvcnQgbm9vcCBmcm9tIFwiLi9ub29wXCI7XG5pbXBvcnQgc3RyZWFtIGZyb20gXCIuL3N0cmVhbVwiO1xuXG5leHBvcnQgdmFyIGFyZWFSaW5nU3VtID0gYWRkZXIoKTtcblxudmFyIGFyZWFTdW0gPSBhZGRlcigpLFxuICAgIGxhbWJkYTAwLFxuICAgIHBoaTAwLFxuICAgIGxhbWJkYTAsXG4gICAgY29zUGhpMCxcbiAgICBzaW5QaGkwO1xuXG5leHBvcnQgdmFyIGFyZWFTdHJlYW0gPSB7XG4gIHBvaW50OiBub29wLFxuICBsaW5lU3RhcnQ6IG5vb3AsXG4gIGxpbmVFbmQ6IG5vb3AsXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgYXJlYVJpbmdTdW0ucmVzZXQoKTtcbiAgICBhcmVhU3RyZWFtLmxpbmVTdGFydCA9IGFyZWFSaW5nU3RhcnQ7XG4gICAgYXJlYVN0cmVhbS5saW5lRW5kID0gYXJlYVJpbmdFbmQ7XG4gIH0sXG4gIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBhcmVhUmluZyA9ICthcmVhUmluZ1N1bTtcbiAgICBhcmVhU3VtLmFkZChhcmVhUmluZyA8IDAgPyB0YXUgKyBhcmVhUmluZyA6IGFyZWFSaW5nKTtcbiAgICB0aGlzLmxpbmVTdGFydCA9IHRoaXMubGluZUVuZCA9IHRoaXMucG9pbnQgPSBub29wO1xuICB9LFxuICBzcGhlcmU6IGZ1bmN0aW9uKCkge1xuICAgIGFyZWFTdW0uYWRkKHRhdSk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGFyZWFSaW5nU3RhcnQoKSB7XG4gIGFyZWFTdHJlYW0ucG9pbnQgPSBhcmVhUG9pbnRGaXJzdDtcbn1cblxuZnVuY3Rpb24gYXJlYVJpbmdFbmQoKSB7XG4gIGFyZWFQb2ludChsYW1iZGEwMCwgcGhpMDApO1xufVxuXG5mdW5jdGlvbiBhcmVhUG9pbnRGaXJzdChsYW1iZGEsIHBoaSkge1xuICBhcmVhU3RyZWFtLnBvaW50ID0gYXJlYVBvaW50O1xuICBsYW1iZGEwMCA9IGxhbWJkYSwgcGhpMDAgPSBwaGk7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgbGFtYmRhMCA9IGxhbWJkYSwgY29zUGhpMCA9IGNvcyhwaGkgPSBwaGkgLyAyICsgcXVhcnRlclBpKSwgc2luUGhpMCA9IHNpbihwaGkpO1xufVxuXG5mdW5jdGlvbiBhcmVhUG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgbGFtYmRhICo9IHJhZGlhbnMsIHBoaSAqPSByYWRpYW5zO1xuICBwaGkgPSBwaGkgLyAyICsgcXVhcnRlclBpOyAvLyBoYWxmIHRoZSBhbmd1bGFyIGRpc3RhbmNlIGZyb20gc291dGggcG9sZVxuXG4gIC8vIFNwaGVyaWNhbCBleGNlc3MgRSBmb3IgYSBzcGhlcmljYWwgdHJpYW5nbGUgd2l0aCB2ZXJ0aWNlczogc291dGggcG9sZSxcbiAgLy8gcHJldmlvdXMgcG9pbnQsIGN1cnJlbnQgcG9pbnQuICBVc2VzIGEgZm9ybXVsYSBkZXJpdmVkIGZyb20gQ2Fnbm9saeKAmXNcbiAgLy8gdGhlb3JlbS4gIFNlZSBUb2RodW50ZXIsIFNwaGVyaWNhbCBUcmlnLiAoMTg3MSksIFNlYy4gMTAzLCBFcS4gKDIpLlxuICB2YXIgZExhbWJkYSA9IGxhbWJkYSAtIGxhbWJkYTAsXG4gICAgICBzZExhbWJkYSA9IGRMYW1iZGEgPj0gMCA/IDEgOiAtMSxcbiAgICAgIGFkTGFtYmRhID0gc2RMYW1iZGEgKiBkTGFtYmRhLFxuICAgICAgY29zUGhpID0gY29zKHBoaSksXG4gICAgICBzaW5QaGkgPSBzaW4ocGhpKSxcbiAgICAgIGsgPSBzaW5QaGkwICogc2luUGhpLFxuICAgICAgdSA9IGNvc1BoaTAgKiBjb3NQaGkgKyBrICogY29zKGFkTGFtYmRhKSxcbiAgICAgIHYgPSBrICogc2RMYW1iZGEgKiBzaW4oYWRMYW1iZGEpO1xuICBhcmVhUmluZ1N1bS5hZGQoYXRhbjIodiwgdSkpO1xuXG4gIC8vIEFkdmFuY2UgdGhlIHByZXZpb3VzIHBvaW50cy5cbiAgbGFtYmRhMCA9IGxhbWJkYSwgY29zUGhpMCA9IGNvc1BoaSwgc2luUGhpMCA9IHNpblBoaTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqZWN0KSB7XG4gIGFyZWFTdW0ucmVzZXQoKTtcbiAgc3RyZWFtKG9iamVjdCwgYXJlYVN0cmVhbSk7XG4gIHJldHVybiBhcmVhU3VtICogMjtcbn1cbiIsImltcG9ydCBhZGRlciBmcm9tIFwiLi9hZGRlclwiO1xuaW1wb3J0IHthcmVhU3RyZWFtLCBhcmVhUmluZ1N1bX0gZnJvbSBcIi4vYXJlYVwiO1xuaW1wb3J0IHtjYXJ0ZXNpYW4sIGNhcnRlc2lhbkNyb3NzLCBjYXJ0ZXNpYW5Ob3JtYWxpemVJblBsYWNlLCBzcGhlcmljYWx9IGZyb20gXCIuL2NhcnRlc2lhblwiO1xuaW1wb3J0IHthYnMsIGRlZ3JlZXMsIGVwc2lsb24sIHJhZGlhbnN9IGZyb20gXCIuL21hdGhcIjtcbmltcG9ydCBzdHJlYW0gZnJvbSBcIi4vc3RyZWFtXCI7XG5cbnZhciBsYW1iZGEwLCBwaGkwLCBsYW1iZGExLCBwaGkxLCAvLyBib3VuZHNcbiAgICBsYW1iZGEyLCAvLyBwcmV2aW91cyBsYW1iZGEtY29vcmRpbmF0ZVxuICAgIGxhbWJkYTAwLCBwaGkwMCwgLy8gZmlyc3QgcG9pbnRcbiAgICBwMCwgLy8gcHJldmlvdXMgM0QgcG9pbnRcbiAgICBkZWx0YVN1bSA9IGFkZGVyKCksXG4gICAgcmFuZ2VzLFxuICAgIHJhbmdlO1xuXG52YXIgYm91bmRzU3RyZWFtID0ge1xuICBwb2ludDogYm91bmRzUG9pbnQsXG4gIGxpbmVTdGFydDogYm91bmRzTGluZVN0YXJ0LFxuICBsaW5lRW5kOiBib3VuZHNMaW5lRW5kLFxuICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIGJvdW5kc1N0cmVhbS5wb2ludCA9IGJvdW5kc1JpbmdQb2ludDtcbiAgICBib3VuZHNTdHJlYW0ubGluZVN0YXJ0ID0gYm91bmRzUmluZ1N0YXJ0O1xuICAgIGJvdW5kc1N0cmVhbS5saW5lRW5kID0gYm91bmRzUmluZ0VuZDtcbiAgICBkZWx0YVN1bS5yZXNldCgpO1xuICAgIGFyZWFTdHJlYW0ucG9seWdvblN0YXJ0KCk7XG4gIH0sXG4gIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGFyZWFTdHJlYW0ucG9seWdvbkVuZCgpO1xuICAgIGJvdW5kc1N0cmVhbS5wb2ludCA9IGJvdW5kc1BvaW50O1xuICAgIGJvdW5kc1N0cmVhbS5saW5lU3RhcnQgPSBib3VuZHNMaW5lU3RhcnQ7XG4gICAgYm91bmRzU3RyZWFtLmxpbmVFbmQgPSBib3VuZHNMaW5lRW5kO1xuICAgIGlmIChhcmVhUmluZ1N1bSA8IDApIGxhbWJkYTAgPSAtKGxhbWJkYTEgPSAxODApLCBwaGkwID0gLShwaGkxID0gOTApO1xuICAgIGVsc2UgaWYgKGRlbHRhU3VtID4gZXBzaWxvbikgcGhpMSA9IDkwO1xuICAgIGVsc2UgaWYgKGRlbHRhU3VtIDwgLWVwc2lsb24pIHBoaTAgPSAtOTA7XG4gICAgcmFuZ2VbMF0gPSBsYW1iZGEwLCByYW5nZVsxXSA9IGxhbWJkYTE7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGJvdW5kc1BvaW50KGxhbWJkYSwgcGhpKSB7XG4gIHJhbmdlcy5wdXNoKHJhbmdlID0gW2xhbWJkYTAgPSBsYW1iZGEsIGxhbWJkYTEgPSBsYW1iZGFdKTtcbiAgaWYgKHBoaSA8IHBoaTApIHBoaTAgPSBwaGk7XG4gIGlmIChwaGkgPiBwaGkxKSBwaGkxID0gcGhpO1xufVxuXG5mdW5jdGlvbiBsaW5lUG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgdmFyIHAgPSBjYXJ0ZXNpYW4oW2xhbWJkYSAqIHJhZGlhbnMsIHBoaSAqIHJhZGlhbnNdKTtcbiAgaWYgKHAwKSB7XG4gICAgdmFyIG5vcm1hbCA9IGNhcnRlc2lhbkNyb3NzKHAwLCBwKSxcbiAgICAgICAgZXF1YXRvcmlhbCA9IFtub3JtYWxbMV0sIC1ub3JtYWxbMF0sIDBdLFxuICAgICAgICBpbmZsZWN0aW9uID0gY2FydGVzaWFuQ3Jvc3MoZXF1YXRvcmlhbCwgbm9ybWFsKTtcbiAgICBjYXJ0ZXNpYW5Ob3JtYWxpemVJblBsYWNlKGluZmxlY3Rpb24pO1xuICAgIGluZmxlY3Rpb24gPSBzcGhlcmljYWwoaW5mbGVjdGlvbik7XG4gICAgdmFyIGRlbHRhID0gbGFtYmRhIC0gbGFtYmRhMixcbiAgICAgICAgc2lnbiA9IGRlbHRhID4gMCA/IDEgOiAtMSxcbiAgICAgICAgbGFtYmRhaSA9IGluZmxlY3Rpb25bMF0gKiBkZWdyZWVzICogc2lnbixcbiAgICAgICAgcGhpaSxcbiAgICAgICAgYW50aW1lcmlkaWFuID0gYWJzKGRlbHRhKSA+IDE4MDtcbiAgICBpZiAoYW50aW1lcmlkaWFuIF4gKHNpZ24gKiBsYW1iZGEyIDwgbGFtYmRhaSAmJiBsYW1iZGFpIDwgc2lnbiAqIGxhbWJkYSkpIHtcbiAgICAgIHBoaWkgPSBpbmZsZWN0aW9uWzFdICogZGVncmVlcztcbiAgICAgIGlmIChwaGlpID4gcGhpMSkgcGhpMSA9IHBoaWk7XG4gICAgfSBlbHNlIGlmIChsYW1iZGFpID0gKGxhbWJkYWkgKyAzNjApICUgMzYwIC0gMTgwLCBhbnRpbWVyaWRpYW4gXiAoc2lnbiAqIGxhbWJkYTIgPCBsYW1iZGFpICYmIGxhbWJkYWkgPCBzaWduICogbGFtYmRhKSkge1xuICAgICAgcGhpaSA9IC1pbmZsZWN0aW9uWzFdICogZGVncmVlcztcbiAgICAgIGlmIChwaGlpIDwgcGhpMCkgcGhpMCA9IHBoaWk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChwaGkgPCBwaGkwKSBwaGkwID0gcGhpO1xuICAgICAgaWYgKHBoaSA+IHBoaTEpIHBoaTEgPSBwaGk7XG4gICAgfVxuICAgIGlmIChhbnRpbWVyaWRpYW4pIHtcbiAgICAgIGlmIChsYW1iZGEgPCBsYW1iZGEyKSB7XG4gICAgICAgIGlmIChhbmdsZShsYW1iZGEwLCBsYW1iZGEpID4gYW5nbGUobGFtYmRhMCwgbGFtYmRhMSkpIGxhbWJkYTEgPSBsYW1iZGE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoYW5nbGUobGFtYmRhLCBsYW1iZGExKSA+IGFuZ2xlKGxhbWJkYTAsIGxhbWJkYTEpKSBsYW1iZGEwID0gbGFtYmRhO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAobGFtYmRhMSA+PSBsYW1iZGEwKSB7XG4gICAgICAgIGlmIChsYW1iZGEgPCBsYW1iZGEwKSBsYW1iZGEwID0gbGFtYmRhO1xuICAgICAgICBpZiAobGFtYmRhID4gbGFtYmRhMSkgbGFtYmRhMSA9IGxhbWJkYTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChsYW1iZGEgPiBsYW1iZGEyKSB7XG4gICAgICAgICAgaWYgKGFuZ2xlKGxhbWJkYTAsIGxhbWJkYSkgPiBhbmdsZShsYW1iZGEwLCBsYW1iZGExKSkgbGFtYmRhMSA9IGxhbWJkYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoYW5nbGUobGFtYmRhLCBsYW1iZGExKSA+IGFuZ2xlKGxhbWJkYTAsIGxhbWJkYTEpKSBsYW1iZGEwID0gbGFtYmRhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJhbmdlcy5wdXNoKHJhbmdlID0gW2xhbWJkYTAgPSBsYW1iZGEsIGxhbWJkYTEgPSBsYW1iZGFdKTtcbiAgfVxuICBpZiAocGhpIDwgcGhpMCkgcGhpMCA9IHBoaTtcbiAgaWYgKHBoaSA+IHBoaTEpIHBoaTEgPSBwaGk7XG4gIHAwID0gcCwgbGFtYmRhMiA9IGxhbWJkYTtcbn1cblxuZnVuY3Rpb24gYm91bmRzTGluZVN0YXJ0KCkge1xuICBib3VuZHNTdHJlYW0ucG9pbnQgPSBsaW5lUG9pbnQ7XG59XG5cbmZ1bmN0aW9uIGJvdW5kc0xpbmVFbmQoKSB7XG4gIHJhbmdlWzBdID0gbGFtYmRhMCwgcmFuZ2VbMV0gPSBsYW1iZGExO1xuICBib3VuZHNTdHJlYW0ucG9pbnQgPSBib3VuZHNQb2ludDtcbiAgcDAgPSBudWxsO1xufVxuXG5mdW5jdGlvbiBib3VuZHNSaW5nUG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgaWYgKHAwKSB7XG4gICAgdmFyIGRlbHRhID0gbGFtYmRhIC0gbGFtYmRhMjtcbiAgICBkZWx0YVN1bS5hZGQoYWJzKGRlbHRhKSA+IDE4MCA/IGRlbHRhICsgKGRlbHRhID4gMCA/IDM2MCA6IC0zNjApIDogZGVsdGEpO1xuICB9IGVsc2Uge1xuICAgIGxhbWJkYTAwID0gbGFtYmRhLCBwaGkwMCA9IHBoaTtcbiAgfVxuICBhcmVhU3RyZWFtLnBvaW50KGxhbWJkYSwgcGhpKTtcbiAgbGluZVBvaW50KGxhbWJkYSwgcGhpKTtcbn1cblxuZnVuY3Rpb24gYm91bmRzUmluZ1N0YXJ0KCkge1xuICBhcmVhU3RyZWFtLmxpbmVTdGFydCgpO1xufVxuXG5mdW5jdGlvbiBib3VuZHNSaW5nRW5kKCkge1xuICBib3VuZHNSaW5nUG9pbnQobGFtYmRhMDAsIHBoaTAwKTtcbiAgYXJlYVN0cmVhbS5saW5lRW5kKCk7XG4gIGlmIChhYnMoZGVsdGFTdW0pID4gZXBzaWxvbikgbGFtYmRhMCA9IC0obGFtYmRhMSA9IDE4MCk7XG4gIHJhbmdlWzBdID0gbGFtYmRhMCwgcmFuZ2VbMV0gPSBsYW1iZGExO1xuICBwMCA9IG51bGw7XG59XG5cbi8vIEZpbmRzIHRoZSBsZWZ0LXJpZ2h0IGRpc3RhbmNlIGJldHdlZW4gdHdvIGxvbmdpdHVkZXMuXG4vLyBUaGlzIGlzIGFsbW9zdCB0aGUgc2FtZSBhcyAobGFtYmRhMSAtIGxhbWJkYTAgKyAzNjDCsCkgJSAzNjDCsCwgZXhjZXB0IHRoYXQgd2Ugd2FudFxuLy8gdGhlIGRpc3RhbmNlIGJldHdlZW4gwrExODDCsCB0byBiZSAzNjDCsC5cbmZ1bmN0aW9uIGFuZ2xlKGxhbWJkYTAsIGxhbWJkYTEpIHtcbiAgcmV0dXJuIChsYW1iZGExIC09IGxhbWJkYTApIDwgMCA/IGxhbWJkYTEgKyAzNjAgOiBsYW1iZGExO1xufVxuXG5mdW5jdGlvbiByYW5nZUNvbXBhcmUoYSwgYikge1xuICByZXR1cm4gYVswXSAtIGJbMF07XG59XG5cbmZ1bmN0aW9uIHJhbmdlQ29udGFpbnMocmFuZ2UsIHgpIHtcbiAgcmV0dXJuIHJhbmdlWzBdIDw9IHJhbmdlWzFdID8gcmFuZ2VbMF0gPD0geCAmJiB4IDw9IHJhbmdlWzFdIDogeCA8IHJhbmdlWzBdIHx8IHJhbmdlWzFdIDwgeDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZmVhdHVyZSkge1xuICB2YXIgaSwgbiwgYSwgYiwgbWVyZ2VkLCBkZWx0YU1heCwgZGVsdGE7XG5cbiAgcGhpMSA9IGxhbWJkYTEgPSAtKGxhbWJkYTAgPSBwaGkwID0gSW5maW5pdHkpO1xuICByYW5nZXMgPSBbXTtcbiAgc3RyZWFtKGZlYXR1cmUsIGJvdW5kc1N0cmVhbSk7XG5cbiAgLy8gRmlyc3QsIHNvcnQgcmFuZ2VzIGJ5IHRoZWlyIG1pbmltdW0gbG9uZ2l0dWRlcy5cbiAgaWYgKG4gPSByYW5nZXMubGVuZ3RoKSB7XG4gICAgcmFuZ2VzLnNvcnQocmFuZ2VDb21wYXJlKTtcblxuICAgIC8vIFRoZW4sIG1lcmdlIGFueSByYW5nZXMgdGhhdCBvdmVybGFwLlxuICAgIGZvciAoaSA9IDEsIGEgPSByYW5nZXNbMF0sIG1lcmdlZCA9IFthXTsgaSA8IG47ICsraSkge1xuICAgICAgYiA9IHJhbmdlc1tpXTtcbiAgICAgIGlmIChyYW5nZUNvbnRhaW5zKGEsIGJbMF0pIHx8IHJhbmdlQ29udGFpbnMoYSwgYlsxXSkpIHtcbiAgICAgICAgaWYgKGFuZ2xlKGFbMF0sIGJbMV0pID4gYW5nbGUoYVswXSwgYVsxXSkpIGFbMV0gPSBiWzFdO1xuICAgICAgICBpZiAoYW5nbGUoYlswXSwgYVsxXSkgPiBhbmdsZShhWzBdLCBhWzFdKSkgYVswXSA9IGJbMF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtZXJnZWQucHVzaChhID0gYik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gRmluYWxseSwgZmluZCB0aGUgbGFyZ2VzdCBnYXAgYmV0d2VlbiB0aGUgbWVyZ2VkIHJhbmdlcy5cbiAgICAvLyBUaGUgZmluYWwgYm91bmRpbmcgYm94IHdpbGwgYmUgdGhlIGludmVyc2Ugb2YgdGhpcyBnYXAuXG4gICAgZm9yIChkZWx0YU1heCA9IC1JbmZpbml0eSwgbiA9IG1lcmdlZC5sZW5ndGggLSAxLCBpID0gMCwgYSA9IG1lcmdlZFtuXTsgaSA8PSBuOyBhID0gYiwgKytpKSB7XG4gICAgICBiID0gbWVyZ2VkW2ldO1xuICAgICAgaWYgKChkZWx0YSA9IGFuZ2xlKGFbMV0sIGJbMF0pKSA+IGRlbHRhTWF4KSBkZWx0YU1heCA9IGRlbHRhLCBsYW1iZGEwID0gYlswXSwgbGFtYmRhMSA9IGFbMV07XG4gICAgfVxuICB9XG5cbiAgcmFuZ2VzID0gcmFuZ2UgPSBudWxsO1xuXG4gIHJldHVybiBsYW1iZGEwID09PSBJbmZpbml0eSB8fCBwaGkwID09PSBJbmZpbml0eVxuICAgICAgPyBbW05hTiwgTmFOXSwgW05hTiwgTmFOXV1cbiAgICAgIDogW1tsYW1iZGEwLCBwaGkwXSwgW2xhbWJkYTEsIHBoaTFdXTtcbn1cbiIsImltcG9ydCB7YXNpbiwgYXRhbjIsIGNvcywgc2luLCBzcXJ0fSBmcm9tIFwiLi9tYXRoXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBzcGhlcmljYWwoY2FydGVzaWFuKSB7XG4gIHJldHVybiBbYXRhbjIoY2FydGVzaWFuWzFdLCBjYXJ0ZXNpYW5bMF0pLCBhc2luKGNhcnRlc2lhblsyXSldO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FydGVzaWFuKHNwaGVyaWNhbCkge1xuICB2YXIgbGFtYmRhID0gc3BoZXJpY2FsWzBdLCBwaGkgPSBzcGhlcmljYWxbMV0sIGNvc1BoaSA9IGNvcyhwaGkpO1xuICByZXR1cm4gW2Nvc1BoaSAqIGNvcyhsYW1iZGEpLCBjb3NQaGkgKiBzaW4obGFtYmRhKSwgc2luKHBoaSldO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FydGVzaWFuRG90KGEsIGIpIHtcbiAgcmV0dXJuIGFbMF0gKiBiWzBdICsgYVsxXSAqIGJbMV0gKyBhWzJdICogYlsyXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhbkNyb3NzKGEsIGIpIHtcbiAgcmV0dXJuIFthWzFdICogYlsyXSAtIGFbMl0gKiBiWzFdLCBhWzJdICogYlswXSAtIGFbMF0gKiBiWzJdLCBhWzBdICogYlsxXSAtIGFbMV0gKiBiWzBdXTtcbn1cblxuLy8gVE9ETyByZXR1cm4gYVxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhbkFkZEluUGxhY2UoYSwgYikge1xuICBhWzBdICs9IGJbMF0sIGFbMV0gKz0gYlsxXSwgYVsyXSArPSBiWzJdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FydGVzaWFuU2NhbGUodmVjdG9yLCBrKSB7XG4gIHJldHVybiBbdmVjdG9yWzBdICogaywgdmVjdG9yWzFdICogaywgdmVjdG9yWzJdICoga107XG59XG5cbi8vIFRPRE8gcmV0dXJuIGRcbmV4cG9ydCBmdW5jdGlvbiBjYXJ0ZXNpYW5Ob3JtYWxpemVJblBsYWNlKGQpIHtcbiAgdmFyIGwgPSBzcXJ0KGRbMF0gKiBkWzBdICsgZFsxXSAqIGRbMV0gKyBkWzJdICogZFsyXSk7XG4gIGRbMF0gLz0gbCwgZFsxXSAvPSBsLCBkWzJdIC89IGw7XG59XG4iLCJpbXBvcnQge2FzaW4sIGF0YW4yLCBjb3MsIGRlZ3JlZXMsIGVwc2lsb24sIGVwc2lsb24yLCByYWRpYW5zLCBzaW4sIHNxcnR9IGZyb20gXCIuL21hdGhcIjtcbmltcG9ydCBub29wIGZyb20gXCIuL25vb3BcIjtcbmltcG9ydCBzdHJlYW0gZnJvbSBcIi4vc3RyZWFtXCI7XG5cbnZhciBXMCwgVzEsXG4gICAgWDAsIFkwLCBaMCxcbiAgICBYMSwgWTEsIFoxLFxuICAgIFgyLCBZMiwgWjIsXG4gICAgbGFtYmRhMDAsIHBoaTAwLCAvLyBmaXJzdCBwb2ludFxuICAgIHgwLCB5MCwgejA7IC8vIHByZXZpb3VzIHBvaW50XG5cbnZhciBjZW50cm9pZFN0cmVhbSA9IHtcbiAgc3BoZXJlOiBub29wLFxuICBwb2ludDogY2VudHJvaWRQb2ludCxcbiAgbGluZVN0YXJ0OiBjZW50cm9pZExpbmVTdGFydCxcbiAgbGluZUVuZDogY2VudHJvaWRMaW5lRW5kLFxuICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIGNlbnRyb2lkU3RyZWFtLmxpbmVTdGFydCA9IGNlbnRyb2lkUmluZ1N0YXJ0O1xuICAgIGNlbnRyb2lkU3RyZWFtLmxpbmVFbmQgPSBjZW50cm9pZFJpbmdFbmQ7XG4gIH0sXG4gIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGNlbnRyb2lkU3RyZWFtLmxpbmVTdGFydCA9IGNlbnRyb2lkTGluZVN0YXJ0O1xuICAgIGNlbnRyb2lkU3RyZWFtLmxpbmVFbmQgPSBjZW50cm9pZExpbmVFbmQ7XG4gIH1cbn07XG5cbi8vIEFyaXRobWV0aWMgbWVhbiBvZiBDYXJ0ZXNpYW4gdmVjdG9ycy5cbmZ1bmN0aW9uIGNlbnRyb2lkUG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgbGFtYmRhICo9IHJhZGlhbnMsIHBoaSAqPSByYWRpYW5zO1xuICB2YXIgY29zUGhpID0gY29zKHBoaSk7XG4gIGNlbnRyb2lkUG9pbnRDYXJ0ZXNpYW4oY29zUGhpICogY29zKGxhbWJkYSksIGNvc1BoaSAqIHNpbihsYW1iZGEpLCBzaW4ocGhpKSk7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkUG9pbnRDYXJ0ZXNpYW4oeCwgeSwgeikge1xuICArK1cwO1xuICBYMCArPSAoeCAtIFgwKSAvIFcwO1xuICBZMCArPSAoeSAtIFkwKSAvIFcwO1xuICBaMCArPSAoeiAtIFowKSAvIFcwO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZExpbmVTdGFydCgpIHtcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZExpbmVQb2ludEZpcnN0O1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZExpbmVQb2ludEZpcnN0KGxhbWJkYSwgcGhpKSB7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgdmFyIGNvc1BoaSA9IGNvcyhwaGkpO1xuICB4MCA9IGNvc1BoaSAqIGNvcyhsYW1iZGEpO1xuICB5MCA9IGNvc1BoaSAqIHNpbihsYW1iZGEpO1xuICB6MCA9IHNpbihwaGkpO1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkTGluZVBvaW50O1xuICBjZW50cm9pZFBvaW50Q2FydGVzaWFuKHgwLCB5MCwgejApO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZExpbmVQb2ludChsYW1iZGEsIHBoaSkge1xuICBsYW1iZGEgKj0gcmFkaWFucywgcGhpICo9IHJhZGlhbnM7XG4gIHZhciBjb3NQaGkgPSBjb3MocGhpKSxcbiAgICAgIHggPSBjb3NQaGkgKiBjb3MobGFtYmRhKSxcbiAgICAgIHkgPSBjb3NQaGkgKiBzaW4obGFtYmRhKSxcbiAgICAgIHogPSBzaW4ocGhpKSxcbiAgICAgIHcgPSBhdGFuMihzcXJ0KCh3ID0geTAgKiB6IC0gejAgKiB5KSAqIHcgKyAodyA9IHowICogeCAtIHgwICogeikgKiB3ICsgKHcgPSB4MCAqIHkgLSB5MCAqIHgpICogdyksIHgwICogeCArIHkwICogeSArIHowICogeik7XG4gIFcxICs9IHc7XG4gIFgxICs9IHcgKiAoeDAgKyAoeDAgPSB4KSk7XG4gIFkxICs9IHcgKiAoeTAgKyAoeTAgPSB5KSk7XG4gIFoxICs9IHcgKiAoejAgKyAoejAgPSB6KSk7XG4gIGNlbnRyb2lkUG9pbnRDYXJ0ZXNpYW4oeDAsIHkwLCB6MCk7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkTGluZUVuZCgpIHtcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZFBvaW50O1xufVxuXG4vLyBTZWUgSi4gRS4gQnJvY2ssIFRoZSBJbmVydGlhIFRlbnNvciBmb3IgYSBTcGhlcmljYWwgVHJpYW5nbGUsXG4vLyBKLiBBcHBsaWVkIE1lY2hhbmljcyA0MiwgMjM5ICgxOTc1KS5cbmZ1bmN0aW9uIGNlbnRyb2lkUmluZ1N0YXJ0KCkge1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUmluZ1BvaW50Rmlyc3Q7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkUmluZ0VuZCgpIHtcbiAgY2VudHJvaWRSaW5nUG9pbnQobGFtYmRhMDAsIHBoaTAwKTtcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZFBvaW50O1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZFJpbmdQb2ludEZpcnN0KGxhbWJkYSwgcGhpKSB7XG4gIGxhbWJkYTAwID0gbGFtYmRhLCBwaGkwMCA9IHBoaTtcbiAgbGFtYmRhICo9IHJhZGlhbnMsIHBoaSAqPSByYWRpYW5zO1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUmluZ1BvaW50O1xuICB2YXIgY29zUGhpID0gY29zKHBoaSk7XG4gIHgwID0gY29zUGhpICogY29zKGxhbWJkYSk7XG4gIHkwID0gY29zUGhpICogc2luKGxhbWJkYSk7XG4gIHowID0gc2luKHBoaSk7XG4gIGNlbnRyb2lkUG9pbnRDYXJ0ZXNpYW4oeDAsIHkwLCB6MCk7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkUmluZ1BvaW50KGxhbWJkYSwgcGhpKSB7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgdmFyIGNvc1BoaSA9IGNvcyhwaGkpLFxuICAgICAgeCA9IGNvc1BoaSAqIGNvcyhsYW1iZGEpLFxuICAgICAgeSA9IGNvc1BoaSAqIHNpbihsYW1iZGEpLFxuICAgICAgeiA9IHNpbihwaGkpLFxuICAgICAgY3ggPSB5MCAqIHogLSB6MCAqIHksXG4gICAgICBjeSA9IHowICogeCAtIHgwICogeixcbiAgICAgIGN6ID0geDAgKiB5IC0geTAgKiB4LFxuICAgICAgbSA9IHNxcnQoY3ggKiBjeCArIGN5ICogY3kgKyBjeiAqIGN6KSxcbiAgICAgIHcgPSBhc2luKG0pLCAvLyBsaW5lIHdlaWdodCA9IGFuZ2xlXG4gICAgICB2ID0gbSAmJiAtdyAvIG07IC8vIGFyZWEgd2VpZ2h0IG11bHRpcGxpZXJcbiAgWDIgKz0gdiAqIGN4O1xuICBZMiArPSB2ICogY3k7XG4gIFoyICs9IHYgKiBjejtcbiAgVzEgKz0gdztcbiAgWDEgKz0gdyAqICh4MCArICh4MCA9IHgpKTtcbiAgWTEgKz0gdyAqICh5MCArICh5MCA9IHkpKTtcbiAgWjEgKz0gdyAqICh6MCArICh6MCA9IHopKTtcbiAgY2VudHJvaWRQb2ludENhcnRlc2lhbih4MCwgeTAsIHowKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqZWN0KSB7XG4gIFcwID0gVzEgPVxuICBYMCA9IFkwID0gWjAgPVxuICBYMSA9IFkxID0gWjEgPVxuICBYMiA9IFkyID0gWjIgPSAwO1xuICBzdHJlYW0ob2JqZWN0LCBjZW50cm9pZFN0cmVhbSk7XG5cbiAgdmFyIHggPSBYMixcbiAgICAgIHkgPSBZMixcbiAgICAgIHogPSBaMixcbiAgICAgIG0gPSB4ICogeCArIHkgKiB5ICsgeiAqIHo7XG5cbiAgLy8gSWYgdGhlIGFyZWEtd2VpZ2h0ZWQgY2NlbnRyb2lkIGlzIHVuZGVmaW5lZCwgZmFsbCBiYWNrIHRvIGxlbmd0aC13ZWlnaHRlZCBjY2VudHJvaWQuXG4gIGlmIChtIDwgZXBzaWxvbjIpIHtcbiAgICB4ID0gWDEsIHkgPSBZMSwgeiA9IFoxO1xuICAgIC8vIElmIHRoZSBmZWF0dXJlIGhhcyB6ZXJvIGxlbmd0aCwgZmFsbCBiYWNrIHRvIGFyaXRobWV0aWMgbWVhbiBvZiBwb2ludCB2ZWN0b3JzLlxuICAgIGlmIChXMSA8IGVwc2lsb24pIHggPSBYMCwgeSA9IFkwLCB6ID0gWjA7XG4gICAgbSA9IHggKiB4ICsgeSAqIHkgKyB6ICogejtcbiAgICAvLyBJZiB0aGUgZmVhdHVyZSBzdGlsbCBoYXMgYW4gdW5kZWZpbmVkIGNjZW50cm9pZCwgdGhlbiByZXR1cm4uXG4gICAgaWYgKG0gPCBlcHNpbG9uMikgcmV0dXJuIFtOYU4sIE5hTl07XG4gIH1cblxuICByZXR1cm4gW2F0YW4yKHksIHgpICogZGVncmVlcywgYXNpbih6IC8gc3FydChtKSkgKiBkZWdyZWVzXTtcbn1cbiIsImltcG9ydCB7Y2FydGVzaWFuLCBjYXJ0ZXNpYW5Ob3JtYWxpemVJblBsYWNlLCBzcGhlcmljYWx9IGZyb20gXCIuL2NhcnRlc2lhblwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQge2Fjb3MsIGNvcywgZGVncmVlcywgZXBzaWxvbiwgcmFkaWFucywgc2luLCB0YXV9IGZyb20gXCIuL21hdGhcIjtcbmltcG9ydCB7cm90YXRlUmFkaWFuc30gZnJvbSBcIi4vcm90YXRpb25cIjtcblxuLy8gR2VuZXJhdGVzIGEgY2lyY2xlIGNlbnRlcmVkIGF0IFswwrAsIDDCsF0sIHdpdGggYSBnaXZlbiByYWRpdXMgYW5kIHByZWNpc2lvbi5cbmV4cG9ydCBmdW5jdGlvbiBjaXJjbGVTdHJlYW0oc3RyZWFtLCByYWRpdXMsIGRlbHRhLCBkaXJlY3Rpb24sIHQwLCB0MSkge1xuICBpZiAoIWRlbHRhKSByZXR1cm47XG4gIHZhciBjb3NSYWRpdXMgPSBjb3MocmFkaXVzKSxcbiAgICAgIHNpblJhZGl1cyA9IHNpbihyYWRpdXMpLFxuICAgICAgc3RlcCA9IGRpcmVjdGlvbiAqIGRlbHRhO1xuICBpZiAodDAgPT0gbnVsbCkge1xuICAgIHQwID0gcmFkaXVzICsgZGlyZWN0aW9uICogdGF1O1xuICAgIHQxID0gcmFkaXVzIC0gc3RlcCAvIDI7XG4gIH0gZWxzZSB7XG4gICAgdDAgPSBjaXJjbGVSYWRpdXMoY29zUmFkaXVzLCB0MCk7XG4gICAgdDEgPSBjaXJjbGVSYWRpdXMoY29zUmFkaXVzLCB0MSk7XG4gICAgaWYgKGRpcmVjdGlvbiA+IDAgPyB0MCA8IHQxIDogdDAgPiB0MSkgdDAgKz0gZGlyZWN0aW9uICogdGF1O1xuICB9XG4gIGZvciAodmFyIHBvaW50LCB0ID0gdDA7IGRpcmVjdGlvbiA+IDAgPyB0ID4gdDEgOiB0IDwgdDE7IHQgLT0gc3RlcCkge1xuICAgIHBvaW50ID0gc3BoZXJpY2FsKFtjb3NSYWRpdXMsIC1zaW5SYWRpdXMgKiBjb3ModCksIC1zaW5SYWRpdXMgKiBzaW4odCldKTtcbiAgICBzdHJlYW0ucG9pbnQocG9pbnRbMF0sIHBvaW50WzFdKTtcbiAgfVxufVxuXG4vLyBSZXR1cm5zIHRoZSBzaWduZWQgYW5nbGUgb2YgYSBjYXJ0ZXNpYW4gcG9pbnQgcmVsYXRpdmUgdG8gW2Nvc1JhZGl1cywgMCwgMF0uXG5mdW5jdGlvbiBjaXJjbGVSYWRpdXMoY29zUmFkaXVzLCBwb2ludCkge1xuICBwb2ludCA9IGNhcnRlc2lhbihwb2ludCksIHBvaW50WzBdIC09IGNvc1JhZGl1cztcbiAgY2FydGVzaWFuTm9ybWFsaXplSW5QbGFjZShwb2ludCk7XG4gIHZhciByYWRpdXMgPSBhY29zKC1wb2ludFsxXSk7XG4gIHJldHVybiAoKC1wb2ludFsyXSA8IDAgPyAtcmFkaXVzIDogcmFkaXVzKSArIHRhdSAtIGVwc2lsb24pICUgdGF1O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGNlbnRlciA9IGNvbnN0YW50KFswLCAwXSksXG4gICAgICByYWRpdXMgPSBjb25zdGFudCg5MCksXG4gICAgICBwcmVjaXNpb24gPSBjb25zdGFudCg2KSxcbiAgICAgIHJpbmcsXG4gICAgICByb3RhdGUsXG4gICAgICBzdHJlYW0gPSB7cG9pbnQ6IHBvaW50fTtcblxuICBmdW5jdGlvbiBwb2ludCh4LCB5KSB7XG4gICAgcmluZy5wdXNoKHggPSByb3RhdGUoeCwgeSkpO1xuICAgIHhbMF0gKj0gZGVncmVlcywgeFsxXSAqPSBkZWdyZWVzO1xuICB9XG5cbiAgZnVuY3Rpb24gY2lyY2xlKCkge1xuICAgIHZhciBjID0gY2VudGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgIHIgPSByYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSAqIHJhZGlhbnMsXG4gICAgICAgIHAgPSBwcmVjaXNpb24uYXBwbHkodGhpcywgYXJndW1lbnRzKSAqIHJhZGlhbnM7XG4gICAgcmluZyA9IFtdO1xuICAgIHJvdGF0ZSA9IHJvdGF0ZVJhZGlhbnMoLWNbMF0gKiByYWRpYW5zLCAtY1sxXSAqIHJhZGlhbnMsIDApLmludmVydDtcbiAgICBjaXJjbGVTdHJlYW0oc3RyZWFtLCByLCBwLCAxKTtcbiAgICBjID0ge3R5cGU6IFwiUG9seWdvblwiLCBjb29yZGluYXRlczogW3JpbmddfTtcbiAgICByaW5nID0gcm90YXRlID0gbnVsbDtcbiAgICByZXR1cm4gYztcbiAgfVxuXG4gIGNpcmNsZS5jZW50ZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY2VudGVyID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChbK19bMF0sICtfWzFdXSksIGNpcmNsZSkgOiBjZW50ZXI7XG4gIH07XG5cbiAgY2lyY2xlLnJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYWRpdXMgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgY2lyY2xlKSA6IHJhZGl1cztcbiAgfTtcblxuICBjaXJjbGUucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHByZWNpc2lvbiA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBjaXJjbGUpIDogcHJlY2lzaW9uO1xuICB9O1xuXG4gIHJldHVybiBjaXJjbGU7XG59XG4iLCJpbXBvcnQgY2xpcCBmcm9tIFwiLi9pbmRleFwiO1xuaW1wb3J0IHthYnMsIGF0YW4sIGNvcywgZXBzaWxvbiwgaGFsZlBpLCBwaSwgc2lufSBmcm9tIFwiLi4vbWF0aFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGlwKFxuICBmdW5jdGlvbigpIHsgcmV0dXJuIHRydWU7IH0sXG4gIGNsaXBBbnRpbWVyaWRpYW5MaW5lLFxuICBjbGlwQW50aW1lcmlkaWFuSW50ZXJwb2xhdGUsXG4gIFstcGksIC1oYWxmUGldXG4pO1xuXG4vLyBUYWtlcyBhIGxpbmUgYW5kIGN1dHMgaW50byB2aXNpYmxlIHNlZ21lbnRzLiBSZXR1cm4gdmFsdWVzOiAwIC0gdGhlcmUgd2VyZVxuLy8gaW50ZXJzZWN0aW9ucyBvciB0aGUgbGluZSB3YXMgZW1wdHk7IDEgLSBubyBpbnRlcnNlY3Rpb25zOyAyIC0gdGhlcmUgd2VyZVxuLy8gaW50ZXJzZWN0aW9ucywgYW5kIHRoZSBmaXJzdCBhbmQgbGFzdCBzZWdtZW50cyBzaG91bGQgYmUgcmVqb2luZWQuXG5mdW5jdGlvbiBjbGlwQW50aW1lcmlkaWFuTGluZShzdHJlYW0pIHtcbiAgdmFyIGxhbWJkYTAgPSBOYU4sXG4gICAgICBwaGkwID0gTmFOLFxuICAgICAgc2lnbjAgPSBOYU4sXG4gICAgICBjbGVhbjsgLy8gbm8gaW50ZXJzZWN0aW9uc1xuXG4gIHJldHVybiB7XG4gICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgIGNsZWFuID0gMTtcbiAgICB9LFxuICAgIHBvaW50OiBmdW5jdGlvbihsYW1iZGExLCBwaGkxKSB7XG4gICAgICB2YXIgc2lnbjEgPSBsYW1iZGExID4gMCA/IHBpIDogLXBpLFxuICAgICAgICAgIGRlbHRhID0gYWJzKGxhbWJkYTEgLSBsYW1iZGEwKTtcbiAgICAgIGlmIChhYnMoZGVsdGEgLSBwaSkgPCBlcHNpbG9uKSB7IC8vIGxpbmUgY3Jvc3NlcyBhIHBvbGVcbiAgICAgICAgc3RyZWFtLnBvaW50KGxhbWJkYTAsIHBoaTAgPSAocGhpMCArIHBoaTEpIC8gMiA+IDAgPyBoYWxmUGkgOiAtaGFsZlBpKTtcbiAgICAgICAgc3RyZWFtLnBvaW50KHNpZ24wLCBwaGkwKTtcbiAgICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICBzdHJlYW0ucG9pbnQoc2lnbjEsIHBoaTApO1xuICAgICAgICBzdHJlYW0ucG9pbnQobGFtYmRhMSwgcGhpMCk7XG4gICAgICAgIGNsZWFuID0gMDtcbiAgICAgIH0gZWxzZSBpZiAoc2lnbjAgIT09IHNpZ24xICYmIGRlbHRhID49IHBpKSB7IC8vIGxpbmUgY3Jvc3NlcyBhbnRpbWVyaWRpYW5cbiAgICAgICAgaWYgKGFicyhsYW1iZGEwIC0gc2lnbjApIDwgZXBzaWxvbikgbGFtYmRhMCAtPSBzaWduMCAqIGVwc2lsb247IC8vIGhhbmRsZSBkZWdlbmVyYWNpZXNcbiAgICAgICAgaWYgKGFicyhsYW1iZGExIC0gc2lnbjEpIDwgZXBzaWxvbikgbGFtYmRhMSAtPSBzaWduMSAqIGVwc2lsb247XG4gICAgICAgIHBoaTAgPSBjbGlwQW50aW1lcmlkaWFuSW50ZXJzZWN0KGxhbWJkYTAsIHBoaTAsIGxhbWJkYTEsIHBoaTEpO1xuICAgICAgICBzdHJlYW0ucG9pbnQoc2lnbjAsIHBoaTApO1xuICAgICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgIHN0cmVhbS5wb2ludChzaWduMSwgcGhpMCk7XG4gICAgICAgIGNsZWFuID0gMDtcbiAgICAgIH1cbiAgICAgIHN0cmVhbS5wb2ludChsYW1iZGEwID0gbGFtYmRhMSwgcGhpMCA9IHBoaTEpO1xuICAgICAgc2lnbjAgPSBzaWduMTtcbiAgICB9LFxuICAgIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgIGxhbWJkYTAgPSBwaGkwID0gTmFOO1xuICAgIH0sXG4gICAgY2xlYW46IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIDIgLSBjbGVhbjsgLy8gaWYgaW50ZXJzZWN0aW9ucywgcmVqb2luIGZpcnN0IGFuZCBsYXN0IHNlZ21lbnRzXG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBjbGlwQW50aW1lcmlkaWFuSW50ZXJzZWN0KGxhbWJkYTAsIHBoaTAsIGxhbWJkYTEsIHBoaTEpIHtcbiAgdmFyIGNvc1BoaTAsXG4gICAgICBjb3NQaGkxLFxuICAgICAgc2luTGFtYmRhMExhbWJkYTEgPSBzaW4obGFtYmRhMCAtIGxhbWJkYTEpO1xuICByZXR1cm4gYWJzKHNpbkxhbWJkYTBMYW1iZGExKSA+IGVwc2lsb25cbiAgICAgID8gYXRhbigoc2luKHBoaTApICogKGNvc1BoaTEgPSBjb3MocGhpMSkpICogc2luKGxhbWJkYTEpXG4gICAgICAgICAgLSBzaW4ocGhpMSkgKiAoY29zUGhpMCA9IGNvcyhwaGkwKSkgKiBzaW4obGFtYmRhMCkpXG4gICAgICAgICAgLyAoY29zUGhpMCAqIGNvc1BoaTEgKiBzaW5MYW1iZGEwTGFtYmRhMSkpXG4gICAgICA6IChwaGkwICsgcGhpMSkgLyAyO1xufVxuXG5mdW5jdGlvbiBjbGlwQW50aW1lcmlkaWFuSW50ZXJwb2xhdGUoZnJvbSwgdG8sIGRpcmVjdGlvbiwgc3RyZWFtKSB7XG4gIHZhciBwaGk7XG4gIGlmIChmcm9tID09IG51bGwpIHtcbiAgICBwaGkgPSBkaXJlY3Rpb24gKiBoYWxmUGk7XG4gICAgc3RyZWFtLnBvaW50KC1waSwgcGhpKTtcbiAgICBzdHJlYW0ucG9pbnQoMCwgcGhpKTtcbiAgICBzdHJlYW0ucG9pbnQocGksIHBoaSk7XG4gICAgc3RyZWFtLnBvaW50KHBpLCAwKTtcbiAgICBzdHJlYW0ucG9pbnQocGksIC1waGkpO1xuICAgIHN0cmVhbS5wb2ludCgwLCAtcGhpKTtcbiAgICBzdHJlYW0ucG9pbnQoLXBpLCAtcGhpKTtcbiAgICBzdHJlYW0ucG9pbnQoLXBpLCAwKTtcbiAgICBzdHJlYW0ucG9pbnQoLXBpLCBwaGkpO1xuICB9IGVsc2UgaWYgKGFicyhmcm9tWzBdIC0gdG9bMF0pID4gZXBzaWxvbikge1xuICAgIHZhciBsYW1iZGEgPSBmcm9tWzBdIDwgdG9bMF0gPyBwaSA6IC1waTtcbiAgICBwaGkgPSBkaXJlY3Rpb24gKiBsYW1iZGEgLyAyO1xuICAgIHN0cmVhbS5wb2ludCgtbGFtYmRhLCBwaGkpO1xuICAgIHN0cmVhbS5wb2ludCgwLCBwaGkpO1xuICAgIHN0cmVhbS5wb2ludChsYW1iZGEsIHBoaSk7XG4gIH0gZWxzZSB7XG4gICAgc3RyZWFtLnBvaW50KHRvWzBdLCB0b1sxXSk7XG4gIH1cbn1cbiIsImltcG9ydCBub29wIGZyb20gXCIuLi9ub29wXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgbGluZXMgPSBbXSxcbiAgICAgIGxpbmU7XG4gIHJldHVybiB7XG4gICAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIGxpbmUucHVzaChbeCwgeV0pO1xuICAgIH0sXG4gICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIGxpbmVzLnB1c2gobGluZSA9IFtdKTtcbiAgICB9LFxuICAgIGxpbmVFbmQ6IG5vb3AsXG4gICAgcmVqb2luOiBmdW5jdGlvbigpIHtcbiAgICAgIGlmIChsaW5lcy5sZW5ndGggPiAxKSBsaW5lcy5wdXNoKGxpbmVzLnBvcCgpLmNvbmNhdChsaW5lcy5zaGlmdCgpKSk7XG4gICAgfSxcbiAgICByZXN1bHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHJlc3VsdCA9IGxpbmVzO1xuICAgICAgbGluZXMgPSBbXTtcbiAgICAgIGxpbmUgPSBudWxsO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gIH07XG59XG4iLCJpbXBvcnQge2NhcnRlc2lhbiwgY2FydGVzaWFuQWRkSW5QbGFjZSwgY2FydGVzaWFuQ3Jvc3MsIGNhcnRlc2lhbkRvdCwgY2FydGVzaWFuU2NhbGUsIHNwaGVyaWNhbH0gZnJvbSBcIi4uL2NhcnRlc2lhblwiO1xuaW1wb3J0IHtjaXJjbGVTdHJlYW19IGZyb20gXCIuLi9jaXJjbGVcIjtcbmltcG9ydCB7YWJzLCBjb3MsIGVwc2lsb24sIHBpLCByYWRpYW5zLCBzcXJ0fSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHBvaW50RXF1YWwgZnJvbSBcIi4uL3BvaW50RXF1YWxcIjtcbmltcG9ydCBjbGlwIGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHJhZGl1cykge1xuICB2YXIgY3IgPSBjb3MocmFkaXVzKSxcbiAgICAgIGRlbHRhID0gNiAqIHJhZGlhbnMsXG4gICAgICBzbWFsbFJhZGl1cyA9IGNyID4gMCxcbiAgICAgIG5vdEhlbWlzcGhlcmUgPSBhYnMoY3IpID4gZXBzaWxvbjsgLy8gVE9ETyBvcHRpbWlzZSBmb3IgdGhpcyBjb21tb24gY2FzZVxuXG4gIGZ1bmN0aW9uIGludGVycG9sYXRlKGZyb20sIHRvLCBkaXJlY3Rpb24sIHN0cmVhbSkge1xuICAgIGNpcmNsZVN0cmVhbShzdHJlYW0sIHJhZGl1cywgZGVsdGEsIGRpcmVjdGlvbiwgZnJvbSwgdG8pO1xuICB9XG5cbiAgZnVuY3Rpb24gdmlzaWJsZShsYW1iZGEsIHBoaSkge1xuICAgIHJldHVybiBjb3MobGFtYmRhKSAqIGNvcyhwaGkpID4gY3I7XG4gIH1cblxuICAvLyBUYWtlcyBhIGxpbmUgYW5kIGN1dHMgaW50byB2aXNpYmxlIHNlZ21lbnRzLiBSZXR1cm4gdmFsdWVzIHVzZWQgZm9yIHBvbHlnb25cbiAgLy8gY2xpcHBpbmc6IDAgLSB0aGVyZSB3ZXJlIGludGVyc2VjdGlvbnMgb3IgdGhlIGxpbmUgd2FzIGVtcHR5OyAxIC0gbm9cbiAgLy8gaW50ZXJzZWN0aW9ucyAyIC0gdGhlcmUgd2VyZSBpbnRlcnNlY3Rpb25zLCBhbmQgdGhlIGZpcnN0IGFuZCBsYXN0IHNlZ21lbnRzXG4gIC8vIHNob3VsZCBiZSByZWpvaW5lZC5cbiAgZnVuY3Rpb24gY2xpcExpbmUoc3RyZWFtKSB7XG4gICAgdmFyIHBvaW50MCwgLy8gcHJldmlvdXMgcG9pbnRcbiAgICAgICAgYzAsIC8vIGNvZGUgZm9yIHByZXZpb3VzIHBvaW50XG4gICAgICAgIHYwLCAvLyB2aXNpYmlsaXR5IG9mIHByZXZpb3VzIHBvaW50XG4gICAgICAgIHYwMCwgLy8gdmlzaWJpbGl0eSBvZiBmaXJzdCBwb2ludFxuICAgICAgICBjbGVhbjsgLy8gbm8gaW50ZXJzZWN0aW9uc1xuICAgIHJldHVybiB7XG4gICAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB2MDAgPSB2MCA9IGZhbHNlO1xuICAgICAgICBjbGVhbiA9IDE7XG4gICAgICB9LFxuICAgICAgcG9pbnQ6IGZ1bmN0aW9uKGxhbWJkYSwgcGhpKSB7XG4gICAgICAgIHZhciBwb2ludDEgPSBbbGFtYmRhLCBwaGldLFxuICAgICAgICAgICAgcG9pbnQyLFxuICAgICAgICAgICAgdiA9IHZpc2libGUobGFtYmRhLCBwaGkpLFxuICAgICAgICAgICAgYyA9IHNtYWxsUmFkaXVzXG4gICAgICAgICAgICAgID8gdiA/IDAgOiBjb2RlKGxhbWJkYSwgcGhpKVxuICAgICAgICAgICAgICA6IHYgPyBjb2RlKGxhbWJkYSArIChsYW1iZGEgPCAwID8gcGkgOiAtcGkpLCBwaGkpIDogMDtcbiAgICAgICAgaWYgKCFwb2ludDAgJiYgKHYwMCA9IHYwID0gdikpIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgLy8gSGFuZGxlIGRlZ2VuZXJhY2llcy5cbiAgICAgICAgLy8gVE9ETyBpZ25vcmUgaWYgbm90IGNsaXBwaW5nIHBvbHlnb25zLlxuICAgICAgICBpZiAodiAhPT0gdjApIHtcbiAgICAgICAgICBwb2ludDIgPSBpbnRlcnNlY3QocG9pbnQwLCBwb2ludDEpO1xuICAgICAgICAgIGlmICghcG9pbnQyIHx8IHBvaW50RXF1YWwocG9pbnQwLCBwb2ludDIpIHx8IHBvaW50RXF1YWwocG9pbnQxLCBwb2ludDIpKSB7XG4gICAgICAgICAgICBwb2ludDFbMF0gKz0gZXBzaWxvbjtcbiAgICAgICAgICAgIHBvaW50MVsxXSArPSBlcHNpbG9uO1xuICAgICAgICAgICAgdiA9IHZpc2libGUocG9pbnQxWzBdLCBwb2ludDFbMV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodiAhPT0gdjApIHtcbiAgICAgICAgICBjbGVhbiA9IDA7XG4gICAgICAgICAgaWYgKHYpIHtcbiAgICAgICAgICAgIC8vIG91dHNpZGUgZ29pbmcgaW5cbiAgICAgICAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgIHBvaW50MiA9IGludGVyc2VjdChwb2ludDEsIHBvaW50MCk7XG4gICAgICAgICAgICBzdHJlYW0ucG9pbnQocG9pbnQyWzBdLCBwb2ludDJbMV0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBpbnNpZGUgZ29pbmcgb3V0XG4gICAgICAgICAgICBwb2ludDIgPSBpbnRlcnNlY3QocG9pbnQwLCBwb2ludDEpO1xuICAgICAgICAgICAgc3RyZWFtLnBvaW50KHBvaW50MlswXSwgcG9pbnQyWzFdKTtcbiAgICAgICAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHBvaW50MCA9IHBvaW50MjtcbiAgICAgICAgfSBlbHNlIGlmIChub3RIZW1pc3BoZXJlICYmIHBvaW50MCAmJiBzbWFsbFJhZGl1cyBeIHYpIHtcbiAgICAgICAgICB2YXIgdDtcbiAgICAgICAgICAvLyBJZiB0aGUgY29kZXMgZm9yIHR3byBwb2ludHMgYXJlIGRpZmZlcmVudCwgb3IgYXJlIGJvdGggemVybyxcbiAgICAgICAgICAvLyBhbmQgdGhlcmUgdGhpcyBzZWdtZW50IGludGVyc2VjdHMgd2l0aCB0aGUgc21hbGwgY2lyY2xlLlxuICAgICAgICAgIGlmICghKGMgJiBjMCkgJiYgKHQgPSBpbnRlcnNlY3QocG9pbnQxLCBwb2ludDAsIHRydWUpKSkge1xuICAgICAgICAgICAgY2xlYW4gPSAwO1xuICAgICAgICAgICAgaWYgKHNtYWxsUmFkaXVzKSB7XG4gICAgICAgICAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgICAgc3RyZWFtLnBvaW50KHRbMF1bMF0sIHRbMF1bMV0pO1xuICAgICAgICAgICAgICBzdHJlYW0ucG9pbnQodFsxXVswXSwgdFsxXVsxXSk7XG4gICAgICAgICAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBzdHJlYW0ucG9pbnQodFsxXVswXSwgdFsxXVsxXSk7XG4gICAgICAgICAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgICAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgICAgc3RyZWFtLnBvaW50KHRbMF1bMF0sIHRbMF1bMV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodiAmJiAoIXBvaW50MCB8fCAhcG9pbnRFcXVhbChwb2ludDAsIHBvaW50MSkpKSB7XG4gICAgICAgICAgc3RyZWFtLnBvaW50KHBvaW50MVswXSwgcG9pbnQxWzFdKTtcbiAgICAgICAgfVxuICAgICAgICBwb2ludDAgPSBwb2ludDEsIHYwID0gdiwgYzAgPSBjO1xuICAgICAgfSxcbiAgICAgIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodjApIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgIHBvaW50MCA9IG51bGw7XG4gICAgICB9LFxuICAgICAgLy8gUmVqb2luIGZpcnN0IGFuZCBsYXN0IHNlZ21lbnRzIGlmIHRoZXJlIHdlcmUgaW50ZXJzZWN0aW9ucyBhbmQgdGhlIGZpcnN0XG4gICAgICAvLyBhbmQgbGFzdCBwb2ludHMgd2VyZSB2aXNpYmxlLlxuICAgICAgY2xlYW46IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gY2xlYW4gfCAoKHYwMCAmJiB2MCkgPDwgMSk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIC8vIEludGVyc2VjdHMgdGhlIGdyZWF0IGNpcmNsZSBiZXR3ZWVuIGEgYW5kIGIgd2l0aCB0aGUgY2xpcCBjaXJjbGUuXG4gIGZ1bmN0aW9uIGludGVyc2VjdChhLCBiLCB0d28pIHtcbiAgICB2YXIgcGEgPSBjYXJ0ZXNpYW4oYSksXG4gICAgICAgIHBiID0gY2FydGVzaWFuKGIpO1xuXG4gICAgLy8gV2UgaGF2ZSB0d28gcGxhbmVzLCBuMS5wID0gZDEgYW5kIG4yLnAgPSBkMi5cbiAgICAvLyBGaW5kIGludGVyc2VjdGlvbiBsaW5lIHAodCkgPSBjMSBuMSArIGMyIG4yICsgdCAobjEg4qivIG4yKS5cbiAgICB2YXIgbjEgPSBbMSwgMCwgMF0sIC8vIG5vcm1hbFxuICAgICAgICBuMiA9IGNhcnRlc2lhbkNyb3NzKHBhLCBwYiksXG4gICAgICAgIG4ybjIgPSBjYXJ0ZXNpYW5Eb3QobjIsIG4yKSxcbiAgICAgICAgbjFuMiA9IG4yWzBdLCAvLyBjYXJ0ZXNpYW5Eb3QobjEsIG4yKSxcbiAgICAgICAgZGV0ZXJtaW5hbnQgPSBuMm4yIC0gbjFuMiAqIG4xbjI7XG5cbiAgICAvLyBUd28gcG9sYXIgcG9pbnRzLlxuICAgIGlmICghZGV0ZXJtaW5hbnQpIHJldHVybiAhdHdvICYmIGE7XG5cbiAgICB2YXIgYzEgPSAgY3IgKiBuMm4yIC8gZGV0ZXJtaW5hbnQsXG4gICAgICAgIGMyID0gLWNyICogbjFuMiAvIGRldGVybWluYW50LFxuICAgICAgICBuMXhuMiA9IGNhcnRlc2lhbkNyb3NzKG4xLCBuMiksXG4gICAgICAgIEEgPSBjYXJ0ZXNpYW5TY2FsZShuMSwgYzEpLFxuICAgICAgICBCID0gY2FydGVzaWFuU2NhbGUobjIsIGMyKTtcbiAgICBjYXJ0ZXNpYW5BZGRJblBsYWNlKEEsIEIpO1xuXG4gICAgLy8gU29sdmUgfHAodCl8XjIgPSAxLlxuICAgIHZhciB1ID0gbjF4bjIsXG4gICAgICAgIHcgPSBjYXJ0ZXNpYW5Eb3QoQSwgdSksXG4gICAgICAgIHV1ID0gY2FydGVzaWFuRG90KHUsIHUpLFxuICAgICAgICB0MiA9IHcgKiB3IC0gdXUgKiAoY2FydGVzaWFuRG90KEEsIEEpIC0gMSk7XG5cbiAgICBpZiAodDIgPCAwKSByZXR1cm47XG5cbiAgICB2YXIgdCA9IHNxcnQodDIpLFxuICAgICAgICBxID0gY2FydGVzaWFuU2NhbGUodSwgKC13IC0gdCkgLyB1dSk7XG4gICAgY2FydGVzaWFuQWRkSW5QbGFjZShxLCBBKTtcbiAgICBxID0gc3BoZXJpY2FsKHEpO1xuXG4gICAgaWYgKCF0d28pIHJldHVybiBxO1xuXG4gICAgLy8gVHdvIGludGVyc2VjdGlvbiBwb2ludHMuXG4gICAgdmFyIGxhbWJkYTAgPSBhWzBdLFxuICAgICAgICBsYW1iZGExID0gYlswXSxcbiAgICAgICAgcGhpMCA9IGFbMV0sXG4gICAgICAgIHBoaTEgPSBiWzFdLFxuICAgICAgICB6O1xuXG4gICAgaWYgKGxhbWJkYTEgPCBsYW1iZGEwKSB6ID0gbGFtYmRhMCwgbGFtYmRhMCA9IGxhbWJkYTEsIGxhbWJkYTEgPSB6O1xuXG4gICAgdmFyIGRlbHRhID0gbGFtYmRhMSAtIGxhbWJkYTAsXG4gICAgICAgIHBvbGFyID0gYWJzKGRlbHRhIC0gcGkpIDwgZXBzaWxvbixcbiAgICAgICAgbWVyaWRpYW4gPSBwb2xhciB8fCBkZWx0YSA8IGVwc2lsb247XG5cbiAgICBpZiAoIXBvbGFyICYmIHBoaTEgPCBwaGkwKSB6ID0gcGhpMCwgcGhpMCA9IHBoaTEsIHBoaTEgPSB6O1xuXG4gICAgLy8gQ2hlY2sgdGhhdCB0aGUgZmlyc3QgcG9pbnQgaXMgYmV0d2VlbiBhIGFuZCBiLlxuICAgIGlmIChtZXJpZGlhblxuICAgICAgICA/IHBvbGFyXG4gICAgICAgICAgPyBwaGkwICsgcGhpMSA+IDAgXiBxWzFdIDwgKGFicyhxWzBdIC0gbGFtYmRhMCkgPCBlcHNpbG9uID8gcGhpMCA6IHBoaTEpXG4gICAgICAgICAgOiBwaGkwIDw9IHFbMV0gJiYgcVsxXSA8PSBwaGkxXG4gICAgICAgIDogZGVsdGEgPiBwaSBeIChsYW1iZGEwIDw9IHFbMF0gJiYgcVswXSA8PSBsYW1iZGExKSkge1xuICAgICAgdmFyIHExID0gY2FydGVzaWFuU2NhbGUodSwgKC13ICsgdCkgLyB1dSk7XG4gICAgICBjYXJ0ZXNpYW5BZGRJblBsYWNlKHExLCBBKTtcbiAgICAgIHJldHVybiBbcSwgc3BoZXJpY2FsKHExKV07XG4gICAgfVxuICB9XG5cbiAgLy8gR2VuZXJhdGVzIGEgNC1iaXQgdmVjdG9yIHJlcHJlc2VudGluZyB0aGUgbG9jYXRpb24gb2YgYSBwb2ludCByZWxhdGl2ZSB0b1xuICAvLyB0aGUgc21hbGwgY2lyY2xlJ3MgYm91bmRpbmcgYm94LlxuICBmdW5jdGlvbiBjb2RlKGxhbWJkYSwgcGhpKSB7XG4gICAgdmFyIHIgPSBzbWFsbFJhZGl1cyA/IHJhZGl1cyA6IHBpIC0gcmFkaXVzLFxuICAgICAgICBjb2RlID0gMDtcbiAgICBpZiAobGFtYmRhIDwgLXIpIGNvZGUgfD0gMTsgLy8gbGVmdFxuICAgIGVsc2UgaWYgKGxhbWJkYSA+IHIpIGNvZGUgfD0gMjsgLy8gcmlnaHRcbiAgICBpZiAocGhpIDwgLXIpIGNvZGUgfD0gNDsgLy8gYmVsb3dcbiAgICBlbHNlIGlmIChwaGkgPiByKSBjb2RlIHw9IDg7IC8vIGFib3ZlXG4gICAgcmV0dXJuIGNvZGU7XG4gIH1cblxuICByZXR1cm4gY2xpcCh2aXNpYmxlLCBjbGlwTGluZSwgaW50ZXJwb2xhdGUsIHNtYWxsUmFkaXVzID8gWzAsIC1yYWRpdXNdIDogWy1waSwgcmFkaXVzIC0gcGldKTtcbn1cbiIsImltcG9ydCBjbGlwUmVjdGFuZ2xlIGZyb20gXCIuL3JlY3RhbmdsZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHgwID0gMCxcbiAgICAgIHkwID0gMCxcbiAgICAgIHgxID0gOTYwLFxuICAgICAgeTEgPSA1MDAsXG4gICAgICBjYWNoZSxcbiAgICAgIGNhY2hlU3RyZWFtLFxuICAgICAgY2xpcDtcblxuICByZXR1cm4gY2xpcCA9IHtcbiAgICBzdHJlYW06IGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgICAgcmV0dXJuIGNhY2hlICYmIGNhY2hlU3RyZWFtID09PSBzdHJlYW0gPyBjYWNoZSA6IGNhY2hlID0gY2xpcFJlY3RhbmdsZSh4MCwgeTAsIHgxLCB5MSkoY2FjaGVTdHJlYW0gPSBzdHJlYW0pO1xuICAgIH0sXG4gICAgZXh0ZW50OiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4MCA9ICtfWzBdWzBdLCB5MCA9ICtfWzBdWzFdLCB4MSA9ICtfWzFdWzBdLCB5MSA9ICtfWzFdWzFdLCBjYWNoZSA9IGNhY2hlU3RyZWFtID0gbnVsbCwgY2xpcCkgOiBbW3gwLCB5MF0sIFt4MSwgeTFdXTtcbiAgICB9XG4gIH07XG59XG4iLCJpbXBvcnQgY2xpcEJ1ZmZlciBmcm9tIFwiLi9idWZmZXJcIjtcbmltcG9ydCBjbGlwUmVqb2luIGZyb20gXCIuL3Jlam9pblwiO1xuaW1wb3J0IHtlcHNpbG9uLCBoYWxmUGl9IGZyb20gXCIuLi9tYXRoXCI7XG5pbXBvcnQgcG9seWdvbkNvbnRhaW5zIGZyb20gXCIuLi9wb2x5Z29uQ29udGFpbnNcIjtcbmltcG9ydCB7bWVyZ2V9IGZyb20gXCJkMy1hcnJheVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwb2ludFZpc2libGUsIGNsaXBMaW5lLCBpbnRlcnBvbGF0ZSwgc3RhcnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHNpbmspIHtcbiAgICB2YXIgbGluZSA9IGNsaXBMaW5lKHNpbmspLFxuICAgICAgICByaW5nQnVmZmVyID0gY2xpcEJ1ZmZlcigpLFxuICAgICAgICByaW5nU2luayA9IGNsaXBMaW5lKHJpbmdCdWZmZXIpLFxuICAgICAgICBwb2x5Z29uU3RhcnRlZCA9IGZhbHNlLFxuICAgICAgICBwb2x5Z29uLFxuICAgICAgICBzZWdtZW50cyxcbiAgICAgICAgcmluZztcblxuICAgIHZhciBjbGlwID0ge1xuICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgbGluZVN0YXJ0OiBsaW5lU3RhcnQsXG4gICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgY2xpcC5wb2ludCA9IHBvaW50UmluZztcbiAgICAgICAgY2xpcC5saW5lU3RhcnQgPSByaW5nU3RhcnQ7XG4gICAgICAgIGNsaXAubGluZUVuZCA9IHJpbmdFbmQ7XG4gICAgICAgIHNlZ21lbnRzID0gW107XG4gICAgICAgIHBvbHlnb24gPSBbXTtcbiAgICAgIH0sXG4gICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgY2xpcC5wb2ludCA9IHBvaW50O1xuICAgICAgICBjbGlwLmxpbmVTdGFydCA9IGxpbmVTdGFydDtcbiAgICAgICAgY2xpcC5saW5lRW5kID0gbGluZUVuZDtcbiAgICAgICAgc2VnbWVudHMgPSBtZXJnZShzZWdtZW50cyk7XG4gICAgICAgIHZhciBzdGFydEluc2lkZSA9IHBvbHlnb25Db250YWlucyhwb2x5Z29uLCBzdGFydCk7XG4gICAgICAgIGlmIChzZWdtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICBpZiAoIXBvbHlnb25TdGFydGVkKSBzaW5rLnBvbHlnb25TdGFydCgpLCBwb2x5Z29uU3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgY2xpcFJlam9pbihzZWdtZW50cywgY29tcGFyZUludGVyc2VjdGlvbiwgc3RhcnRJbnNpZGUsIGludGVycG9sYXRlLCBzaW5rKTtcbiAgICAgICAgfSBlbHNlIGlmIChzdGFydEluc2lkZSkge1xuICAgICAgICAgIGlmICghcG9seWdvblN0YXJ0ZWQpIHNpbmsucG9seWdvblN0YXJ0KCksIHBvbHlnb25TdGFydGVkID0gdHJ1ZTtcbiAgICAgICAgICBzaW5rLmxpbmVTdGFydCgpO1xuICAgICAgICAgIGludGVycG9sYXRlKG51bGwsIG51bGwsIDEsIHNpbmspO1xuICAgICAgICAgIHNpbmsubGluZUVuZCgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwb2x5Z29uU3RhcnRlZCkgc2luay5wb2x5Z29uRW5kKCksIHBvbHlnb25TdGFydGVkID0gZmFsc2U7XG4gICAgICAgIHNlZ21lbnRzID0gcG9seWdvbiA9IG51bGw7XG4gICAgICB9LFxuICAgICAgc3BoZXJlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgc2luay5wb2x5Z29uU3RhcnQoKTtcbiAgICAgICAgc2luay5saW5lU3RhcnQoKTtcbiAgICAgICAgaW50ZXJwb2xhdGUobnVsbCwgbnVsbCwgMSwgc2luayk7XG4gICAgICAgIHNpbmsubGluZUVuZCgpO1xuICAgICAgICBzaW5rLnBvbHlnb25FbmQoKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gcG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgICAgIGlmIChwb2ludFZpc2libGUobGFtYmRhLCBwaGkpKSBzaW5rLnBvaW50KGxhbWJkYSwgcGhpKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwb2ludExpbmUobGFtYmRhLCBwaGkpIHtcbiAgICAgIGxpbmUucG9pbnQobGFtYmRhLCBwaGkpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpbmVTdGFydCgpIHtcbiAgICAgIGNsaXAucG9pbnQgPSBwb2ludExpbmU7XG4gICAgICBsaW5lLmxpbmVTdGFydCgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICBjbGlwLnBvaW50ID0gcG9pbnQ7XG4gICAgICBsaW5lLmxpbmVFbmQoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwb2ludFJpbmcobGFtYmRhLCBwaGkpIHtcbiAgICAgIHJpbmcucHVzaChbbGFtYmRhLCBwaGldKTtcbiAgICAgIHJpbmdTaW5rLnBvaW50KGxhbWJkYSwgcGhpKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByaW5nU3RhcnQoKSB7XG4gICAgICByaW5nU2luay5saW5lU3RhcnQoKTtcbiAgICAgIHJpbmcgPSBbXTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByaW5nRW5kKCkge1xuICAgICAgcG9pbnRSaW5nKHJpbmdbMF1bMF0sIHJpbmdbMF1bMV0pO1xuICAgICAgcmluZ1NpbmsubGluZUVuZCgpO1xuXG4gICAgICB2YXIgY2xlYW4gPSByaW5nU2luay5jbGVhbigpLFxuICAgICAgICAgIHJpbmdTZWdtZW50cyA9IHJpbmdCdWZmZXIucmVzdWx0KCksXG4gICAgICAgICAgaSwgbiA9IHJpbmdTZWdtZW50cy5sZW5ndGgsIG0sXG4gICAgICAgICAgc2VnbWVudCxcbiAgICAgICAgICBwb2ludDtcblxuICAgICAgcmluZy5wb3AoKTtcbiAgICAgIHBvbHlnb24ucHVzaChyaW5nKTtcbiAgICAgIHJpbmcgPSBudWxsO1xuXG4gICAgICBpZiAoIW4pIHJldHVybjtcblxuICAgICAgLy8gTm8gaW50ZXJzZWN0aW9ucy5cbiAgICAgIGlmIChjbGVhbiAmIDEpIHtcbiAgICAgICAgc2VnbWVudCA9IHJpbmdTZWdtZW50c1swXTtcbiAgICAgICAgaWYgKChtID0gc2VnbWVudC5sZW5ndGggLSAxKSA+IDApIHtcbiAgICAgICAgICBpZiAoIXBvbHlnb25TdGFydGVkKSBzaW5rLnBvbHlnb25TdGFydCgpLCBwb2x5Z29uU3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgc2luay5saW5lU3RhcnQoKTtcbiAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbTsgKytpKSBzaW5rLnBvaW50KChwb2ludCA9IHNlZ21lbnRbaV0pWzBdLCBwb2ludFsxXSk7XG4gICAgICAgICAgc2luay5saW5lRW5kKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBSZWpvaW4gY29ubmVjdGVkIHNlZ21lbnRzLlxuICAgICAgLy8gVE9ETyByZXVzZSByaW5nQnVmZmVyLnJlam9pbigpP1xuICAgICAgaWYgKG4gPiAxICYmIGNsZWFuICYgMikgcmluZ1NlZ21lbnRzLnB1c2gocmluZ1NlZ21lbnRzLnBvcCgpLmNvbmNhdChyaW5nU2VnbWVudHMuc2hpZnQoKSkpO1xuXG4gICAgICBzZWdtZW50cy5wdXNoKHJpbmdTZWdtZW50cy5maWx0ZXIodmFsaWRTZWdtZW50KSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNsaXA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHZhbGlkU2VnbWVudChzZWdtZW50KSB7XG4gIHJldHVybiBzZWdtZW50Lmxlbmd0aCA+IDE7XG59XG5cbi8vIEludGVyc2VjdGlvbnMgYXJlIHNvcnRlZCBhbG9uZyB0aGUgY2xpcCBlZGdlLiBGb3IgYm90aCBhbnRpbWVyaWRpYW4gY3V0dGluZ1xuLy8gYW5kIGNpcmNsZSBjbGlwcGluZywgdGhlIHNhbWUgY29tcGFyaXNvbiBpcyB1c2VkLlxuZnVuY3Rpb24gY29tcGFyZUludGVyc2VjdGlvbihhLCBiKSB7XG4gIHJldHVybiAoKGEgPSBhLngpWzBdIDwgMCA/IGFbMV0gLSBoYWxmUGkgLSBlcHNpbG9uIDogaGFsZlBpIC0gYVsxXSlcbiAgICAgICAtICgoYiA9IGIueClbMF0gPCAwID8gYlsxXSAtIGhhbGZQaSAtIGVwc2lsb24gOiBoYWxmUGkgLSBiWzFdKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIHZhciBheCA9IGFbMF0sXG4gICAgICBheSA9IGFbMV0sXG4gICAgICBieCA9IGJbMF0sXG4gICAgICBieSA9IGJbMV0sXG4gICAgICB0MCA9IDAsXG4gICAgICB0MSA9IDEsXG4gICAgICBkeCA9IGJ4IC0gYXgsXG4gICAgICBkeSA9IGJ5IC0gYXksXG4gICAgICByO1xuXG4gIHIgPSB4MCAtIGF4O1xuICBpZiAoIWR4ICYmIHIgPiAwKSByZXR1cm47XG4gIHIgLz0gZHg7XG4gIGlmIChkeCA8IDApIHtcbiAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICB9IGVsc2UgaWYgKGR4ID4gMCkge1xuICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICBpZiAociA+IHQwKSB0MCA9IHI7XG4gIH1cblxuICByID0geDEgLSBheDtcbiAgaWYgKCFkeCAmJiByIDwgMCkgcmV0dXJuO1xuICByIC89IGR4O1xuICBpZiAoZHggPCAwKSB7XG4gICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgfSBlbHNlIGlmIChkeCA+IDApIHtcbiAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICB9XG5cbiAgciA9IHkwIC0gYXk7XG4gIGlmICghZHkgJiYgciA+IDApIHJldHVybjtcbiAgciAvPSBkeTtcbiAgaWYgKGR5IDwgMCkge1xuICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gIH0gZWxzZSBpZiAoZHkgPiAwKSB7XG4gICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgfVxuXG4gIHIgPSB5MSAtIGF5O1xuICBpZiAoIWR5ICYmIHIgPCAwKSByZXR1cm47XG4gIHIgLz0gZHk7XG4gIGlmIChkeSA8IDApIHtcbiAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICB9IGVsc2UgaWYgKGR5ID4gMCkge1xuICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gIH1cblxuICBpZiAodDAgPiAwKSBhWzBdID0gYXggKyB0MCAqIGR4LCBhWzFdID0gYXkgKyB0MCAqIGR5O1xuICBpZiAodDEgPCAxKSBiWzBdID0gYXggKyB0MSAqIGR4LCBiWzFdID0gYXkgKyB0MSAqIGR5O1xuICByZXR1cm4gdHJ1ZTtcbn1cbiIsImltcG9ydCB7YWJzLCBlcHNpbG9ufSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IGNsaXBCdWZmZXIgZnJvbSBcIi4vYnVmZmVyXCI7XG5pbXBvcnQgY2xpcExpbmUgZnJvbSBcIi4vbGluZVwiO1xuaW1wb3J0IGNsaXBSZWpvaW4gZnJvbSBcIi4vcmVqb2luXCI7XG5pbXBvcnQge21lcmdlfSBmcm9tIFwiZDMtYXJyYXlcIjtcblxudmFyIGNsaXBNYXggPSAxZTksIGNsaXBNaW4gPSAtY2xpcE1heDtcblxuLy8gVE9ETyBVc2UgZDMtcG9seWdvbuKAmXMgcG9seWdvbkNvbnRhaW5zIGhlcmUgZm9yIHRoZSByaW5nIGNoZWNrP1xuLy8gVE9ETyBFbGltaW5hdGUgZHVwbGljYXRlIGJ1ZmZlcmluZyBpbiBjbGlwQnVmZmVyIGFuZCBwb2x5Z29uLnB1c2g/XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNsaXBSZWN0YW5nbGUoeDAsIHkwLCB4MSwgeTEpIHtcblxuICBmdW5jdGlvbiB2aXNpYmxlKHgsIHkpIHtcbiAgICByZXR1cm4geDAgPD0geCAmJiB4IDw9IHgxICYmIHkwIDw9IHkgJiYgeSA8PSB5MTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGludGVycG9sYXRlKGZyb20sIHRvLCBkaXJlY3Rpb24sIHN0cmVhbSkge1xuICAgIHZhciBhID0gMCwgYTEgPSAwO1xuICAgIGlmIChmcm9tID09IG51bGxcbiAgICAgICAgfHwgKGEgPSBjb3JuZXIoZnJvbSwgZGlyZWN0aW9uKSkgIT09IChhMSA9IGNvcm5lcih0bywgZGlyZWN0aW9uKSlcbiAgICAgICAgfHwgY29tcGFyZVBvaW50KGZyb20sIHRvKSA8IDAgXiBkaXJlY3Rpb24gPiAwKSB7XG4gICAgICBkbyBzdHJlYW0ucG9pbnQoYSA9PT0gMCB8fCBhID09PSAzID8geDAgOiB4MSwgYSA+IDEgPyB5MSA6IHkwKTtcbiAgICAgIHdoaWxlICgoYSA9IChhICsgZGlyZWN0aW9uICsgNCkgJSA0KSAhPT0gYTEpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHJlYW0ucG9pbnQodG9bMF0sIHRvWzFdKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBjb3JuZXIocCwgZGlyZWN0aW9uKSB7XG4gICAgcmV0dXJuIGFicyhwWzBdIC0geDApIDwgZXBzaWxvbiA/IGRpcmVjdGlvbiA+IDAgPyAwIDogM1xuICAgICAgICA6IGFicyhwWzBdIC0geDEpIDwgZXBzaWxvbiA/IGRpcmVjdGlvbiA+IDAgPyAyIDogMVxuICAgICAgICA6IGFicyhwWzFdIC0geTApIDwgZXBzaWxvbiA/IGRpcmVjdGlvbiA+IDAgPyAxIDogMFxuICAgICAgICA6IGRpcmVjdGlvbiA+IDAgPyAzIDogMjsgLy8gYWJzKHBbMV0gLSB5MSkgPCBlcHNpbG9uXG4gIH1cblxuICBmdW5jdGlvbiBjb21wYXJlSW50ZXJzZWN0aW9uKGEsIGIpIHtcbiAgICByZXR1cm4gY29tcGFyZVBvaW50KGEueCwgYi54KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbXBhcmVQb2ludChhLCBiKSB7XG4gICAgdmFyIGNhID0gY29ybmVyKGEsIDEpLFxuICAgICAgICBjYiA9IGNvcm5lcihiLCAxKTtcbiAgICByZXR1cm4gY2EgIT09IGNiID8gY2EgLSBjYlxuICAgICAgICA6IGNhID09PSAwID8gYlsxXSAtIGFbMV1cbiAgICAgICAgOiBjYSA9PT0gMSA/IGFbMF0gLSBiWzBdXG4gICAgICAgIDogY2EgPT09IDIgPyBhWzFdIC0gYlsxXVxuICAgICAgICA6IGJbMF0gLSBhWzBdO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgIHZhciBhY3RpdmVTdHJlYW0gPSBzdHJlYW0sXG4gICAgICAgIGJ1ZmZlclN0cmVhbSA9IGNsaXBCdWZmZXIoKSxcbiAgICAgICAgc2VnbWVudHMsXG4gICAgICAgIHBvbHlnb24sXG4gICAgICAgIHJpbmcsXG4gICAgICAgIHhfXywgeV9fLCB2X18sIC8vIGZpcnN0IHBvaW50XG4gICAgICAgIHhfLCB5Xywgdl8sIC8vIHByZXZpb3VzIHBvaW50XG4gICAgICAgIGZpcnN0LFxuICAgICAgICBjbGVhbjtcblxuICAgIHZhciBjbGlwU3RyZWFtID0ge1xuICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgbGluZVN0YXJ0OiBsaW5lU3RhcnQsXG4gICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgcG9seWdvblN0YXJ0OiBwb2x5Z29uU3RhcnQsXG4gICAgICBwb2x5Z29uRW5kOiBwb2x5Z29uRW5kXG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHBvaW50KHgsIHkpIHtcbiAgICAgIGlmICh2aXNpYmxlKHgsIHkpKSBhY3RpdmVTdHJlYW0ucG9pbnQoeCwgeSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcG9seWdvbkluc2lkZSgpIHtcbiAgICAgIHZhciB3aW5kaW5nID0gMDtcblxuICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSBwb2x5Z29uLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgICBmb3IgKHZhciByaW5nID0gcG9seWdvbltpXSwgaiA9IDEsIG0gPSByaW5nLmxlbmd0aCwgcG9pbnQgPSByaW5nWzBdLCBhMCwgYTEsIGIwID0gcG9pbnRbMF0sIGIxID0gcG9pbnRbMV07IGogPCBtOyArK2opIHtcbiAgICAgICAgICBhMCA9IGIwLCBhMSA9IGIxLCBwb2ludCA9IHJpbmdbal0sIGIwID0gcG9pbnRbMF0sIGIxID0gcG9pbnRbMV07XG4gICAgICAgICAgaWYgKGExIDw9IHkxKSB7IGlmIChiMSA+IHkxICYmIChiMCAtIGEwKSAqICh5MSAtIGExKSA+IChiMSAtIGExKSAqICh4MCAtIGEwKSkgKyt3aW5kaW5nOyB9XG4gICAgICAgICAgZWxzZSB7IGlmIChiMSA8PSB5MSAmJiAoYjAgLSBhMCkgKiAoeTEgLSBhMSkgPCAoYjEgLSBhMSkgKiAoeDAgLSBhMCkpIC0td2luZGluZzsgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB3aW5kaW5nO1xuICAgIH1cblxuICAgIC8vIEJ1ZmZlciBnZW9tZXRyeSB3aXRoaW4gYSBwb2x5Z29uIGFuZCB0aGVuIGNsaXAgaXQgZW4gbWFzc2UuXG4gICAgZnVuY3Rpb24gcG9seWdvblN0YXJ0KCkge1xuICAgICAgYWN0aXZlU3RyZWFtID0gYnVmZmVyU3RyZWFtLCBzZWdtZW50cyA9IFtdLCBwb2x5Z29uID0gW10sIGNsZWFuID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwb2x5Z29uRW5kKCkge1xuICAgICAgdmFyIHN0YXJ0SW5zaWRlID0gcG9seWdvbkluc2lkZSgpLFxuICAgICAgICAgIGNsZWFuSW5zaWRlID0gY2xlYW4gJiYgc3RhcnRJbnNpZGUsXG4gICAgICAgICAgdmlzaWJsZSA9IChzZWdtZW50cyA9IG1lcmdlKHNlZ21lbnRzKSkubGVuZ3RoO1xuICAgICAgaWYgKGNsZWFuSW5zaWRlIHx8IHZpc2libGUpIHtcbiAgICAgICAgc3RyZWFtLnBvbHlnb25TdGFydCgpO1xuICAgICAgICBpZiAoY2xlYW5JbnNpZGUpIHtcbiAgICAgICAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgaW50ZXJwb2xhdGUobnVsbCwgbnVsbCwgMSwgc3RyZWFtKTtcbiAgICAgICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2aXNpYmxlKSB7XG4gICAgICAgICAgY2xpcFJlam9pbihzZWdtZW50cywgY29tcGFyZUludGVyc2VjdGlvbiwgc3RhcnRJbnNpZGUsIGludGVycG9sYXRlLCBzdHJlYW0pO1xuICAgICAgICB9XG4gICAgICAgIHN0cmVhbS5wb2x5Z29uRW5kKCk7XG4gICAgICB9XG4gICAgICBhY3RpdmVTdHJlYW0gPSBzdHJlYW0sIHNlZ21lbnRzID0gcG9seWdvbiA9IHJpbmcgPSBudWxsO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpbmVTdGFydCgpIHtcbiAgICAgIGNsaXBTdHJlYW0ucG9pbnQgPSBsaW5lUG9pbnQ7XG4gICAgICBpZiAocG9seWdvbikgcG9seWdvbi5wdXNoKHJpbmcgPSBbXSk7XG4gICAgICBmaXJzdCA9IHRydWU7XG4gICAgICB2XyA9IGZhbHNlO1xuICAgICAgeF8gPSB5XyA9IE5hTjtcbiAgICB9XG5cbiAgICAvLyBUT0RPIHJhdGhlciB0aGFuIHNwZWNpYWwtY2FzZSBwb2x5Z29ucywgc2ltcGx5IGhhbmRsZSB0aGVtIHNlcGFyYXRlbHkuXG4gICAgLy8gSWRlYWxseSwgY29pbmNpZGVudCBpbnRlcnNlY3Rpb24gcG9pbnRzIHNob3VsZCBiZSBqaXR0ZXJlZCB0byBhdm9pZFxuICAgIC8vIGNsaXBwaW5nIGlzc3Vlcy5cbiAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgaWYgKHNlZ21lbnRzKSB7XG4gICAgICAgIGxpbmVQb2ludCh4X18sIHlfXyk7XG4gICAgICAgIGlmICh2X18gJiYgdl8pIGJ1ZmZlclN0cmVhbS5yZWpvaW4oKTtcbiAgICAgICAgc2VnbWVudHMucHVzaChidWZmZXJTdHJlYW0ucmVzdWx0KCkpO1xuICAgICAgfVxuICAgICAgY2xpcFN0cmVhbS5wb2ludCA9IHBvaW50O1xuICAgICAgaWYgKHZfKSBhY3RpdmVTdHJlYW0ubGluZUVuZCgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpbmVQb2ludCh4LCB5KSB7XG4gICAgICB2YXIgdiA9IHZpc2libGUoeCwgeSk7XG4gICAgICBpZiAocG9seWdvbikgcmluZy5wdXNoKFt4LCB5XSk7XG4gICAgICBpZiAoZmlyc3QpIHtcbiAgICAgICAgeF9fID0geCwgeV9fID0geSwgdl9fID0gdjtcbiAgICAgICAgZmlyc3QgPSBmYWxzZTtcbiAgICAgICAgaWYgKHYpIHtcbiAgICAgICAgICBhY3RpdmVTdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgYWN0aXZlU3RyZWFtLnBvaW50KHgsIHkpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodiAmJiB2XykgYWN0aXZlU3RyZWFtLnBvaW50KHgsIHkpO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICB2YXIgYSA9IFt4XyA9IE1hdGgubWF4KGNsaXBNaW4sIE1hdGgubWluKGNsaXBNYXgsIHhfKSksIHlfID0gTWF0aC5tYXgoY2xpcE1pbiwgTWF0aC5taW4oY2xpcE1heCwgeV8pKV0sXG4gICAgICAgICAgICAgIGIgPSBbeCA9IE1hdGgubWF4KGNsaXBNaW4sIE1hdGgubWluKGNsaXBNYXgsIHgpKSwgeSA9IE1hdGgubWF4KGNsaXBNaW4sIE1hdGgubWluKGNsaXBNYXgsIHkpKV07XG4gICAgICAgICAgaWYgKGNsaXBMaW5lKGEsIGIsIHgwLCB5MCwgeDEsIHkxKSkge1xuICAgICAgICAgICAgaWYgKCF2Xykge1xuICAgICAgICAgICAgICBhY3RpdmVTdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICAgIGFjdGl2ZVN0cmVhbS5wb2ludChhWzBdLCBhWzFdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFjdGl2ZVN0cmVhbS5wb2ludChiWzBdLCBiWzFdKTtcbiAgICAgICAgICAgIGlmICghdikgYWN0aXZlU3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgICAgIGNsZWFuID0gZmFsc2U7XG4gICAgICAgICAgfSBlbHNlIGlmICh2KSB7XG4gICAgICAgICAgICBhY3RpdmVTdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICBhY3RpdmVTdHJlYW0ucG9pbnQoeCwgeSk7XG4gICAgICAgICAgICBjbGVhbiA9IGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgeF8gPSB4LCB5XyA9IHksIHZfID0gdjtcbiAgICB9XG5cbiAgICByZXR1cm4gY2xpcFN0cmVhbTtcbiAgfTtcbn1cbiIsImltcG9ydCBwb2ludEVxdWFsIGZyb20gXCIuLi9wb2ludEVxdWFsXCI7XG5cbmZ1bmN0aW9uIEludGVyc2VjdGlvbihwb2ludCwgcG9pbnRzLCBvdGhlciwgZW50cnkpIHtcbiAgdGhpcy54ID0gcG9pbnQ7XG4gIHRoaXMueiA9IHBvaW50cztcbiAgdGhpcy5vID0gb3RoZXI7IC8vIGFub3RoZXIgaW50ZXJzZWN0aW9uXG4gIHRoaXMuZSA9IGVudHJ5OyAvLyBpcyBhbiBlbnRyeT9cbiAgdGhpcy52ID0gZmFsc2U7IC8vIHZpc2l0ZWRcbiAgdGhpcy5uID0gdGhpcy5wID0gbnVsbDsgLy8gbmV4dCAmIHByZXZpb3VzXG59XG5cbi8vIEEgZ2VuZXJhbGl6ZWQgcG9seWdvbiBjbGlwcGluZyBhbGdvcml0aG06IGdpdmVuIGEgcG9seWdvbiB0aGF0IGhhcyBiZWVuIGN1dFxuLy8gaW50byBpdHMgdmlzaWJsZSBsaW5lIHNlZ21lbnRzLCBhbmQgcmVqb2lucyB0aGUgc2VnbWVudHMgYnkgaW50ZXJwb2xhdGluZ1xuLy8gYWxvbmcgdGhlIGNsaXAgZWRnZS5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlZ21lbnRzLCBjb21wYXJlSW50ZXJzZWN0aW9uLCBzdGFydEluc2lkZSwgaW50ZXJwb2xhdGUsIHN0cmVhbSkge1xuICB2YXIgc3ViamVjdCA9IFtdLFxuICAgICAgY2xpcCA9IFtdLFxuICAgICAgaSxcbiAgICAgIG47XG5cbiAgc2VnbWVudHMuZm9yRWFjaChmdW5jdGlvbihzZWdtZW50KSB7XG4gICAgaWYgKChuID0gc2VnbWVudC5sZW5ndGggLSAxKSA8PSAwKSByZXR1cm47XG4gICAgdmFyIG4sIHAwID0gc2VnbWVudFswXSwgcDEgPSBzZWdtZW50W25dLCB4O1xuXG4gICAgLy8gSWYgdGhlIGZpcnN0IGFuZCBsYXN0IHBvaW50cyBvZiBhIHNlZ21lbnQgYXJlIGNvaW5jaWRlbnQsIHRoZW4gdHJlYXQgYXMgYVxuICAgIC8vIGNsb3NlZCByaW5nLiBUT0RPIGlmIGFsbCByaW5ncyBhcmUgY2xvc2VkLCB0aGVuIHRoZSB3aW5kaW5nIG9yZGVyIG9mIHRoZVxuICAgIC8vIGV4dGVyaW9yIHJpbmcgc2hvdWxkIGJlIGNoZWNrZWQuXG4gICAgaWYgKHBvaW50RXF1YWwocDAsIHAxKSkge1xuICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkgc3RyZWFtLnBvaW50KChwMCA9IHNlZ21lbnRbaV0pWzBdLCBwMFsxXSk7XG4gICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHN1YmplY3QucHVzaCh4ID0gbmV3IEludGVyc2VjdGlvbihwMCwgc2VnbWVudCwgbnVsbCwgdHJ1ZSkpO1xuICAgIGNsaXAucHVzaCh4Lm8gPSBuZXcgSW50ZXJzZWN0aW9uKHAwLCBudWxsLCB4LCBmYWxzZSkpO1xuICAgIHN1YmplY3QucHVzaCh4ID0gbmV3IEludGVyc2VjdGlvbihwMSwgc2VnbWVudCwgbnVsbCwgZmFsc2UpKTtcbiAgICBjbGlwLnB1c2goeC5vID0gbmV3IEludGVyc2VjdGlvbihwMSwgbnVsbCwgeCwgdHJ1ZSkpO1xuICB9KTtcblxuICBpZiAoIXN1YmplY3QubGVuZ3RoKSByZXR1cm47XG5cbiAgY2xpcC5zb3J0KGNvbXBhcmVJbnRlcnNlY3Rpb24pO1xuICBsaW5rKHN1YmplY3QpO1xuICBsaW5rKGNsaXApO1xuXG4gIGZvciAoaSA9IDAsIG4gPSBjbGlwLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgIGNsaXBbaV0uZSA9IHN0YXJ0SW5zaWRlID0gIXN0YXJ0SW5zaWRlO1xuICB9XG5cbiAgdmFyIHN0YXJ0ID0gc3ViamVjdFswXSxcbiAgICAgIHBvaW50cyxcbiAgICAgIHBvaW50O1xuXG4gIHdoaWxlICgxKSB7XG4gICAgLy8gRmluZCBmaXJzdCB1bnZpc2l0ZWQgaW50ZXJzZWN0aW9uLlxuICAgIHZhciBjdXJyZW50ID0gc3RhcnQsXG4gICAgICAgIGlzU3ViamVjdCA9IHRydWU7XG4gICAgd2hpbGUgKGN1cnJlbnQudikgaWYgKChjdXJyZW50ID0gY3VycmVudC5uKSA9PT0gc3RhcnQpIHJldHVybjtcbiAgICBwb2ludHMgPSBjdXJyZW50Lno7XG4gICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgIGRvIHtcbiAgICAgIGN1cnJlbnQudiA9IGN1cnJlbnQuby52ID0gdHJ1ZTtcbiAgICAgIGlmIChjdXJyZW50LmUpIHtcbiAgICAgICAgaWYgKGlzU3ViamVjdCkge1xuICAgICAgICAgIGZvciAoaSA9IDAsIG4gPSBwb2ludHMubGVuZ3RoOyBpIDwgbjsgKytpKSBzdHJlYW0ucG9pbnQoKHBvaW50ID0gcG9pbnRzW2ldKVswXSwgcG9pbnRbMV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGludGVycG9sYXRlKGN1cnJlbnQueCwgY3VycmVudC5uLngsIDEsIHN0cmVhbSk7XG4gICAgICAgIH1cbiAgICAgICAgY3VycmVudCA9IGN1cnJlbnQubjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChpc1N1YmplY3QpIHtcbiAgICAgICAgICBwb2ludHMgPSBjdXJyZW50LnAuejtcbiAgICAgICAgICBmb3IgKGkgPSBwb2ludHMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHN0cmVhbS5wb2ludCgocG9pbnQgPSBwb2ludHNbaV0pWzBdLCBwb2ludFsxXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaW50ZXJwb2xhdGUoY3VycmVudC54LCBjdXJyZW50LnAueCwgLTEsIHN0cmVhbSk7XG4gICAgICAgIH1cbiAgICAgICAgY3VycmVudCA9IGN1cnJlbnQucDtcbiAgICAgIH1cbiAgICAgIGN1cnJlbnQgPSBjdXJyZW50Lm87XG4gICAgICBwb2ludHMgPSBjdXJyZW50Lno7XG4gICAgICBpc1N1YmplY3QgPSAhaXNTdWJqZWN0O1xuICAgIH0gd2hpbGUgKCFjdXJyZW50LnYpO1xuICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbGluayhhcnJheSkge1xuICBpZiAoIShuID0gYXJyYXkubGVuZ3RoKSkgcmV0dXJuO1xuICB2YXIgbixcbiAgICAgIGkgPSAwLFxuICAgICAgYSA9IGFycmF5WzBdLFxuICAgICAgYjtcbiAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICBhLm4gPSBiID0gYXJyYXlbaV07XG4gICAgYi5wID0gYTtcbiAgICBhID0gYjtcbiAgfVxuICBhLm4gPSBiID0gYXJyYXlbMF07XG4gIGIucCA9IGE7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG5cbiAgZnVuY3Rpb24gY29tcG9zZSh4LCB5KSB7XG4gICAgcmV0dXJuIHggPSBhKHgsIHkpLCBiKHhbMF0sIHhbMV0pO1xuICB9XG5cbiAgaWYgKGEuaW52ZXJ0ICYmIGIuaW52ZXJ0KSBjb21wb3NlLmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICByZXR1cm4geCA9IGIuaW52ZXJ0KHgsIHkpLCB4ICYmIGEuaW52ZXJ0KHhbMF0sIHhbMV0pO1xuICB9O1xuXG4gIHJldHVybiBjb21wb3NlO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJpbXBvcnQge2RlZmF1bHQgYXMgcG9seWdvbkNvbnRhaW5zfSBmcm9tIFwiLi9wb2x5Z29uQ29udGFpbnNcIjtcbmltcG9ydCB7ZGVmYXVsdCBhcyBkaXN0YW5jZX0gZnJvbSBcIi4vZGlzdGFuY2VcIjtcbmltcG9ydCB7ZXBzaWxvbiwgcmFkaWFuc30gZnJvbSBcIi4vbWF0aFwiO1xuXG52YXIgY29udGFpbnNPYmplY3RUeXBlID0ge1xuICBGZWF0dXJlOiBmdW5jdGlvbihvYmplY3QsIHBvaW50KSB7XG4gICAgcmV0dXJuIGNvbnRhaW5zR2VvbWV0cnkob2JqZWN0Lmdlb21ldHJ5LCBwb2ludCk7XG4gIH0sXG4gIEZlYXR1cmVDb2xsZWN0aW9uOiBmdW5jdGlvbihvYmplY3QsIHBvaW50KSB7XG4gICAgdmFyIGZlYXR1cmVzID0gb2JqZWN0LmZlYXR1cmVzLCBpID0gLTEsIG4gPSBmZWF0dXJlcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIGlmIChjb250YWluc0dlb21ldHJ5KGZlYXR1cmVzW2ldLmdlb21ldHJ5LCBwb2ludCkpIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufTtcblxudmFyIGNvbnRhaW5zR2VvbWV0cnlUeXBlID0ge1xuICBTcGhlcmU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuICBQb2ludDogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHJldHVybiBjb250YWluc1BvaW50KG9iamVjdC5jb29yZGluYXRlcywgcG9pbnQpO1xuICB9LFxuICBNdWx0aVBvaW50OiBmdW5jdGlvbihvYmplY3QsIHBvaW50KSB7XG4gICAgdmFyIGNvb3JkaW5hdGVzID0gb2JqZWN0LmNvb3JkaW5hdGVzLCBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIGlmIChjb250YWluc1BvaW50KGNvb3JkaW5hdGVzW2ldLCBwb2ludCkpIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSxcbiAgTGluZVN0cmluZzogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHJldHVybiBjb250YWluc0xpbmUob2JqZWN0LmNvb3JkaW5hdGVzLCBwb2ludCk7XG4gIH0sXG4gIE11bHRpTGluZVN0cmluZzogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHZhciBjb29yZGluYXRlcyA9IG9iamVjdC5jb29yZGluYXRlcywgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoY29udGFpbnNMaW5lKGNvb3JkaW5hdGVzW2ldLCBwb2ludCkpIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSxcbiAgUG9seWdvbjogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHJldHVybiBjb250YWluc1BvbHlnb24ob2JqZWN0LmNvb3JkaW5hdGVzLCBwb2ludCk7XG4gIH0sXG4gIE11bHRpUG9seWdvbjogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHZhciBjb29yZGluYXRlcyA9IG9iamVjdC5jb29yZGluYXRlcywgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoY29udGFpbnNQb2x5Z29uKGNvb3JkaW5hdGVzW2ldLCBwb2ludCkpIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSxcbiAgR2VvbWV0cnlDb2xsZWN0aW9uOiBmdW5jdGlvbihvYmplY3QsIHBvaW50KSB7XG4gICAgdmFyIGdlb21ldHJpZXMgPSBvYmplY3QuZ2VvbWV0cmllcywgaSA9IC0xLCBuID0gZ2VvbWV0cmllcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIGlmIChjb250YWluc0dlb21ldHJ5KGdlb21ldHJpZXNbaV0sIHBvaW50KSkgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG5mdW5jdGlvbiBjb250YWluc0dlb21ldHJ5KGdlb21ldHJ5LCBwb2ludCkge1xuICByZXR1cm4gZ2VvbWV0cnkgJiYgY29udGFpbnNHZW9tZXRyeVR5cGUuaGFzT3duUHJvcGVydHkoZ2VvbWV0cnkudHlwZSlcbiAgICAgID8gY29udGFpbnNHZW9tZXRyeVR5cGVbZ2VvbWV0cnkudHlwZV0oZ2VvbWV0cnksIHBvaW50KVxuICAgICAgOiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gY29udGFpbnNQb2ludChjb29yZGluYXRlcywgcG9pbnQpIHtcbiAgcmV0dXJuIGRpc3RhbmNlKGNvb3JkaW5hdGVzLCBwb2ludCkgPT09IDA7XG59XG5cbmZ1bmN0aW9uIGNvbnRhaW5zTGluZShjb29yZGluYXRlcywgcG9pbnQpIHtcbiAgdmFyIGFiID0gZGlzdGFuY2UoY29vcmRpbmF0ZXNbMF0sIGNvb3JkaW5hdGVzWzFdKSxcbiAgICAgIGFvID0gZGlzdGFuY2UoY29vcmRpbmF0ZXNbMF0sIHBvaW50KSxcbiAgICAgIG9iID0gZGlzdGFuY2UocG9pbnQsIGNvb3JkaW5hdGVzWzFdKTtcbiAgcmV0dXJuIGFvICsgb2IgPD0gYWIgKyBlcHNpbG9uO1xufVxuXG5mdW5jdGlvbiBjb250YWluc1BvbHlnb24oY29vcmRpbmF0ZXMsIHBvaW50KSB7XG4gIHJldHVybiAhIXBvbHlnb25Db250YWlucyhjb29yZGluYXRlcy5tYXAocmluZ1JhZGlhbnMpLCBwb2ludFJhZGlhbnMocG9pbnQpKTtcbn1cblxuZnVuY3Rpb24gcmluZ1JhZGlhbnMocmluZykge1xuICByZXR1cm4gcmluZyA9IHJpbmcubWFwKHBvaW50UmFkaWFucyksIHJpbmcucG9wKCksIHJpbmc7XG59XG5cbmZ1bmN0aW9uIHBvaW50UmFkaWFucyhwb2ludCkge1xuICByZXR1cm4gW3BvaW50WzBdICogcmFkaWFucywgcG9pbnRbMV0gKiByYWRpYW5zXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICByZXR1cm4gKG9iamVjdCAmJiBjb250YWluc09iamVjdFR5cGUuaGFzT3duUHJvcGVydHkob2JqZWN0LnR5cGUpXG4gICAgICA/IGNvbnRhaW5zT2JqZWN0VHlwZVtvYmplY3QudHlwZV1cbiAgICAgIDogY29udGFpbnNHZW9tZXRyeSkob2JqZWN0LCBwb2ludCk7XG59XG4iLCJpbXBvcnQgbGVuZ3RoIGZyb20gXCIuL2xlbmd0aFwiO1xuXG52YXIgY29vcmRpbmF0ZXMgPSBbbnVsbCwgbnVsbF0sXG4gICAgb2JqZWN0ID0ge3R5cGU6IFwiTGluZVN0cmluZ1wiLCBjb29yZGluYXRlczogY29vcmRpbmF0ZXN9O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIGNvb3JkaW5hdGVzWzBdID0gYTtcbiAgY29vcmRpbmF0ZXNbMV0gPSBiO1xuICByZXR1cm4gbGVuZ3RoKG9iamVjdCk7XG59XG4iLCJpbXBvcnQge3JhbmdlfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7YWJzLCBjZWlsLCBlcHNpbG9ufSBmcm9tIFwiLi9tYXRoXCI7XG5cbmZ1bmN0aW9uIGdyYXRpY3VsZVgoeTAsIHkxLCBkeSkge1xuICB2YXIgeSA9IHJhbmdlKHkwLCB5MSAtIGVwc2lsb24sIGR5KS5jb25jYXQoeTEpO1xuICByZXR1cm4gZnVuY3Rpb24oeCkgeyByZXR1cm4geS5tYXAoZnVuY3Rpb24oeSkgeyByZXR1cm4gW3gsIHldOyB9KTsgfTtcbn1cblxuZnVuY3Rpb24gZ3JhdGljdWxlWSh4MCwgeDEsIGR4KSB7XG4gIHZhciB4ID0gcmFuZ2UoeDAsIHgxIC0gZXBzaWxvbiwgZHgpLmNvbmNhdCh4MSk7XG4gIHJldHVybiBmdW5jdGlvbih5KSB7IHJldHVybiB4Lm1hcChmdW5jdGlvbih4KSB7IHJldHVybiBbeCwgeV07IH0pOyB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBncmF0aWN1bGUoKSB7XG4gIHZhciB4MSwgeDAsIFgxLCBYMCxcbiAgICAgIHkxLCB5MCwgWTEsIFkwLFxuICAgICAgZHggPSAxMCwgZHkgPSBkeCwgRFggPSA5MCwgRFkgPSAzNjAsXG4gICAgICB4LCB5LCBYLCBZLFxuICAgICAgcHJlY2lzaW9uID0gMi41O1xuXG4gIGZ1bmN0aW9uIGdyYXRpY3VsZSgpIHtcbiAgICByZXR1cm4ge3R5cGU6IFwiTXVsdGlMaW5lU3RyaW5nXCIsIGNvb3JkaW5hdGVzOiBsaW5lcygpfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpbmVzKCkge1xuICAgIHJldHVybiByYW5nZShjZWlsKFgwIC8gRFgpICogRFgsIFgxLCBEWCkubWFwKFgpXG4gICAgICAgIC5jb25jYXQocmFuZ2UoY2VpbChZMCAvIERZKSAqIERZLCBZMSwgRFkpLm1hcChZKSlcbiAgICAgICAgLmNvbmNhdChyYW5nZShjZWlsKHgwIC8gZHgpICogZHgsIHgxLCBkeCkuZmlsdGVyKGZ1bmN0aW9uKHgpIHsgcmV0dXJuIGFicyh4ICUgRFgpID4gZXBzaWxvbjsgfSkubWFwKHgpKVxuICAgICAgICAuY29uY2F0KHJhbmdlKGNlaWwoeTAgLyBkeSkgKiBkeSwgeTEsIGR5KS5maWx0ZXIoZnVuY3Rpb24oeSkgeyByZXR1cm4gYWJzKHkgJSBEWSkgPiBlcHNpbG9uOyB9KS5tYXAoeSkpO1xuICB9XG5cbiAgZ3JhdGljdWxlLmxpbmVzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGxpbmVzKCkubWFwKGZ1bmN0aW9uKGNvb3JkaW5hdGVzKSB7IHJldHVybiB7dHlwZTogXCJMaW5lU3RyaW5nXCIsIGNvb3JkaW5hdGVzOiBjb29yZGluYXRlc307IH0pO1xuICB9O1xuXG4gIGdyYXRpY3VsZS5vdXRsaW5lID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwiUG9seWdvblwiLFxuICAgICAgY29vcmRpbmF0ZXM6IFtcbiAgICAgICAgWChYMCkuY29uY2F0KFxuICAgICAgICBZKFkxKS5zbGljZSgxKSxcbiAgICAgICAgWChYMSkucmV2ZXJzZSgpLnNsaWNlKDEpLFxuICAgICAgICBZKFkwKS5yZXZlcnNlKCkuc2xpY2UoMSkpXG4gICAgICBdXG4gICAgfTtcbiAgfTtcblxuICBncmF0aWN1bGUuZXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGdyYXRpY3VsZS5leHRlbnRNaW5vcigpO1xuICAgIHJldHVybiBncmF0aWN1bGUuZXh0ZW50TWFqb3IoXykuZXh0ZW50TWlub3IoXyk7XG4gIH07XG5cbiAgZ3JhdGljdWxlLmV4dGVudE1ham9yID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFtbWDAsIFkwXSwgW1gxLCBZMV1dO1xuICAgIFgwID0gK19bMF1bMF0sIFgxID0gK19bMV1bMF07XG4gICAgWTAgPSArX1swXVsxXSwgWTEgPSArX1sxXVsxXTtcbiAgICBpZiAoWDAgPiBYMSkgXyA9IFgwLCBYMCA9IFgxLCBYMSA9IF87XG4gICAgaWYgKFkwID4gWTEpIF8gPSBZMCwgWTAgPSBZMSwgWTEgPSBfO1xuICAgIHJldHVybiBncmF0aWN1bGUucHJlY2lzaW9uKHByZWNpc2lvbik7XG4gIH07XG5cbiAgZ3JhdGljdWxlLmV4dGVudE1pbm9yID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFtbeDAsIHkwXSwgW3gxLCB5MV1dO1xuICAgIHgwID0gK19bMF1bMF0sIHgxID0gK19bMV1bMF07XG4gICAgeTAgPSArX1swXVsxXSwgeTEgPSArX1sxXVsxXTtcbiAgICBpZiAoeDAgPiB4MSkgXyA9IHgwLCB4MCA9IHgxLCB4MSA9IF87XG4gICAgaWYgKHkwID4geTEpIF8gPSB5MCwgeTAgPSB5MSwgeTEgPSBfO1xuICAgIHJldHVybiBncmF0aWN1bGUucHJlY2lzaW9uKHByZWNpc2lvbik7XG4gIH07XG5cbiAgZ3JhdGljdWxlLnN0ZXAgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZ3JhdGljdWxlLnN0ZXBNaW5vcigpO1xuICAgIHJldHVybiBncmF0aWN1bGUuc3RlcE1ham9yKF8pLnN0ZXBNaW5vcihfKTtcbiAgfTtcblxuICBncmF0aWN1bGUuc3RlcE1ham9yID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFtEWCwgRFldO1xuICAgIERYID0gK19bMF0sIERZID0gK19bMV07XG4gICAgcmV0dXJuIGdyYXRpY3VsZTtcbiAgfTtcblxuICBncmF0aWN1bGUuc3RlcE1pbm9yID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFtkeCwgZHldO1xuICAgIGR4ID0gK19bMF0sIGR5ID0gK19bMV07XG4gICAgcmV0dXJuIGdyYXRpY3VsZTtcbiAgfTtcblxuICBncmF0aWN1bGUucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHByZWNpc2lvbjtcbiAgICBwcmVjaXNpb24gPSArXztcbiAgICB4ID0gZ3JhdGljdWxlWCh5MCwgeTEsIDkwKTtcbiAgICB5ID0gZ3JhdGljdWxlWSh4MCwgeDEsIHByZWNpc2lvbik7XG4gICAgWCA9IGdyYXRpY3VsZVgoWTAsIFkxLCA5MCk7XG4gICAgWSA9IGdyYXRpY3VsZVkoWDAsIFgxLCBwcmVjaXNpb24pO1xuICAgIHJldHVybiBncmF0aWN1bGU7XG4gIH07XG5cbiAgcmV0dXJuIGdyYXRpY3VsZVxuICAgICAgLmV4dGVudE1ham9yKFtbLTE4MCwgLTkwICsgZXBzaWxvbl0sIFsxODAsIDkwIC0gZXBzaWxvbl1dKVxuICAgICAgLmV4dGVudE1pbm9yKFtbLTE4MCwgLTgwIC0gZXBzaWxvbl0sIFsxODAsIDgwICsgZXBzaWxvbl1dKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdyYXRpY3VsZTEwKCkge1xuICByZXR1cm4gZ3JhdGljdWxlKCkoKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIHg7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgZ2VvQXJlYX0gZnJvbSBcIi4vYXJlYVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0JvdW5kc30gZnJvbSBcIi4vYm91bmRzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ2VudHJvaWR9IGZyb20gXCIuL2NlbnRyb2lkXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ2lyY2xlfSBmcm9tIFwiLi9jaXJjbGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9DbGlwQW50aW1lcmlkaWFufSBmcm9tIFwiLi9jbGlwL2FudGltZXJpZGlhblwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0NsaXBDaXJjbGV9IGZyb20gXCIuL2NsaXAvY2lyY2xlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ2xpcEV4dGVudH0gZnJvbSBcIi4vY2xpcC9leHRlbnRcIjsgLy8gREVQUkVDQVRFRCEgVXNlIGQzLmdlb0lkZW50aXR5KCkuY2xpcEV4dGVudCjigKYpLlxuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0NsaXBSZWN0YW5nbGV9IGZyb20gXCIuL2NsaXAvcmVjdGFuZ2xlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ29udGFpbnN9IGZyb20gXCIuL2NvbnRhaW5zXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvRGlzdGFuY2V9IGZyb20gXCIuL2Rpc3RhbmNlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvR3JhdGljdWxlLCBncmF0aWN1bGUxMCBhcyBnZW9HcmF0aWN1bGUxMH0gZnJvbSBcIi4vZ3JhdGljdWxlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvSW50ZXJwb2xhdGV9IGZyb20gXCIuL2ludGVycG9sYXRlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvTGVuZ3RofSBmcm9tIFwiLi9sZW5ndGhcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9QYXRofSBmcm9tIFwiLi9wYXRoL2luZGV4XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQWxiZXJzfSBmcm9tIFwiLi9wcm9qZWN0aW9uL2FsYmVyc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0FsYmVyc1VzYX0gZnJvbSBcIi4vcHJvamVjdGlvbi9hbGJlcnNVc2FcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9BemltdXRoYWxFcXVhbEFyZWEsIGF6aW11dGhhbEVxdWFsQXJlYVJhdyBhcyBnZW9BemltdXRoYWxFcXVhbEFyZWFSYXd9IGZyb20gXCIuL3Byb2plY3Rpb24vYXppbXV0aGFsRXF1YWxBcmVhXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQXppbXV0aGFsRXF1aWRpc3RhbnQsIGF6aW11dGhhbEVxdWlkaXN0YW50UmF3IGFzIGdlb0F6aW11dGhhbEVxdWlkaXN0YW50UmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL2F6aW11dGhhbEVxdWlkaXN0YW50XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ29uaWNDb25mb3JtYWwsIGNvbmljQ29uZm9ybWFsUmF3IGFzIGdlb0NvbmljQ29uZm9ybWFsUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL2NvbmljQ29uZm9ybWFsXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ29uaWNFcXVhbEFyZWEsIGNvbmljRXF1YWxBcmVhUmF3IGFzIGdlb0NvbmljRXF1YWxBcmVhUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL2NvbmljRXF1YWxBcmVhXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ29uaWNFcXVpZGlzdGFudCwgY29uaWNFcXVpZGlzdGFudFJhdyBhcyBnZW9Db25pY0VxdWlkaXN0YW50UmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL2NvbmljRXF1aWRpc3RhbnRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9FcXVhbEVhcnRoLCBlcXVhbEVhcnRoUmF3IGFzIGdlb0VxdWFsRWFydGhSYXd9IGZyb20gXCIuL3Byb2plY3Rpb24vZXF1YWxFYXJ0aFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0VxdWlyZWN0YW5ndWxhciwgZXF1aXJlY3Rhbmd1bGFyUmF3IGFzIGdlb0VxdWlyZWN0YW5ndWxhclJhd30gZnJvbSBcIi4vcHJvamVjdGlvbi9lcXVpcmVjdGFuZ3VsYXJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9Hbm9tb25pYywgZ25vbW9uaWNSYXcgYXMgZ2VvR25vbW9uaWNSYXd9IGZyb20gXCIuL3Byb2plY3Rpb24vZ25vbW9uaWNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9JZGVudGl0eX0gZnJvbSBcIi4vcHJvamVjdGlvbi9pZGVudGl0eVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb1Byb2plY3Rpb24sIHByb2plY3Rpb25NdXRhdG9yIGFzIGdlb1Byb2plY3Rpb25NdXRhdG9yfSBmcm9tIFwiLi9wcm9qZWN0aW9uL2luZGV4XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvTWVyY2F0b3IsIG1lcmNhdG9yUmF3IGFzIGdlb01lcmNhdG9yUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL21lcmNhdG9yXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvTmF0dXJhbEVhcnRoMSwgbmF0dXJhbEVhcnRoMVJhdyBhcyBnZW9OYXR1cmFsRWFydGgxUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL25hdHVyYWxFYXJ0aDFcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9PcnRob2dyYXBoaWMsIG9ydGhvZ3JhcGhpY1JhdyBhcyBnZW9PcnRob2dyYXBoaWNSYXd9IGZyb20gXCIuL3Byb2plY3Rpb24vb3J0aG9ncmFwaGljXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvU3RlcmVvZ3JhcGhpYywgc3RlcmVvZ3JhcGhpY1JhdyBhcyBnZW9TdGVyZW9ncmFwaGljUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL3N0ZXJlb2dyYXBoaWNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9UcmFuc3ZlcnNlTWVyY2F0b3IsIHRyYW5zdmVyc2VNZXJjYXRvclJhdyBhcyBnZW9UcmFuc3ZlcnNlTWVyY2F0b3JSYXd9IGZyb20gXCIuL3Byb2plY3Rpb24vdHJhbnN2ZXJzZU1lcmNhdG9yXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvUm90YXRpb259IGZyb20gXCIuL3JvdGF0aW9uXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvU3RyZWFtfSBmcm9tIFwiLi9zdHJlYW1cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9UcmFuc2Zvcm19IGZyb20gXCIuL3RyYW5zZm9ybVwiO1xuIiwiaW1wb3J0IHthc2luLCBhdGFuMiwgY29zLCBkZWdyZWVzLCBoYXZlcnNpbiwgcmFkaWFucywgc2luLCBzcXJ0fSBmcm9tIFwiLi9tYXRoXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIHgwID0gYVswXSAqIHJhZGlhbnMsXG4gICAgICB5MCA9IGFbMV0gKiByYWRpYW5zLFxuICAgICAgeDEgPSBiWzBdICogcmFkaWFucyxcbiAgICAgIHkxID0gYlsxXSAqIHJhZGlhbnMsXG4gICAgICBjeTAgPSBjb3MoeTApLFxuICAgICAgc3kwID0gc2luKHkwKSxcbiAgICAgIGN5MSA9IGNvcyh5MSksXG4gICAgICBzeTEgPSBzaW4oeTEpLFxuICAgICAga3gwID0gY3kwICogY29zKHgwKSxcbiAgICAgIGt5MCA9IGN5MCAqIHNpbih4MCksXG4gICAgICBreDEgPSBjeTEgKiBjb3MoeDEpLFxuICAgICAga3kxID0gY3kxICogc2luKHgxKSxcbiAgICAgIGQgPSAyICogYXNpbihzcXJ0KGhhdmVyc2luKHkxIC0geTApICsgY3kwICogY3kxICogaGF2ZXJzaW4oeDEgLSB4MCkpKSxcbiAgICAgIGsgPSBzaW4oZCk7XG5cbiAgdmFyIGludGVycG9sYXRlID0gZCA/IGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgQiA9IHNpbih0ICo9IGQpIC8gayxcbiAgICAgICAgQSA9IHNpbihkIC0gdCkgLyBrLFxuICAgICAgICB4ID0gQSAqIGt4MCArIEIgKiBreDEsXG4gICAgICAgIHkgPSBBICoga3kwICsgQiAqIGt5MSxcbiAgICAgICAgeiA9IEEgKiBzeTAgKyBCICogc3kxO1xuICAgIHJldHVybiBbXG4gICAgICBhdGFuMih5LCB4KSAqIGRlZ3JlZXMsXG4gICAgICBhdGFuMih6LCBzcXJ0KHggKiB4ICsgeSAqIHkpKSAqIGRlZ3JlZXNcbiAgICBdO1xuICB9IDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFt4MCAqIGRlZ3JlZXMsIHkwICogZGVncmVlc107XG4gIH07XG5cbiAgaW50ZXJwb2xhdGUuZGlzdGFuY2UgPSBkO1xuXG4gIHJldHVybiBpbnRlcnBvbGF0ZTtcbn1cbiIsImltcG9ydCBhZGRlciBmcm9tIFwiLi9hZGRlclwiO1xuaW1wb3J0IHthYnMsIGF0YW4yLCBjb3MsIHJhZGlhbnMsIHNpbiwgc3FydH0gZnJvbSBcIi4vbWF0aFwiO1xuaW1wb3J0IG5vb3AgZnJvbSBcIi4vbm9vcFwiO1xuaW1wb3J0IHN0cmVhbSBmcm9tIFwiLi9zdHJlYW1cIjtcblxudmFyIGxlbmd0aFN1bSA9IGFkZGVyKCksXG4gICAgbGFtYmRhMCxcbiAgICBzaW5QaGkwLFxuICAgIGNvc1BoaTA7XG5cbnZhciBsZW5ndGhTdHJlYW0gPSB7XG4gIHNwaGVyZTogbm9vcCxcbiAgcG9pbnQ6IG5vb3AsXG4gIGxpbmVTdGFydDogbGVuZ3RoTGluZVN0YXJ0LFxuICBsaW5lRW5kOiBub29wLFxuICBwb2x5Z29uU3RhcnQ6IG5vb3AsXG4gIHBvbHlnb25FbmQ6IG5vb3Bcbn07XG5cbmZ1bmN0aW9uIGxlbmd0aExpbmVTdGFydCgpIHtcbiAgbGVuZ3RoU3RyZWFtLnBvaW50ID0gbGVuZ3RoUG9pbnRGaXJzdDtcbiAgbGVuZ3RoU3RyZWFtLmxpbmVFbmQgPSBsZW5ndGhMaW5lRW5kO1xufVxuXG5mdW5jdGlvbiBsZW5ndGhMaW5lRW5kKCkge1xuICBsZW5ndGhTdHJlYW0ucG9pbnQgPSBsZW5ndGhTdHJlYW0ubGluZUVuZCA9IG5vb3A7XG59XG5cbmZ1bmN0aW9uIGxlbmd0aFBvaW50Rmlyc3QobGFtYmRhLCBwaGkpIHtcbiAgbGFtYmRhICo9IHJhZGlhbnMsIHBoaSAqPSByYWRpYW5zO1xuICBsYW1iZGEwID0gbGFtYmRhLCBzaW5QaGkwID0gc2luKHBoaSksIGNvc1BoaTAgPSBjb3MocGhpKTtcbiAgbGVuZ3RoU3RyZWFtLnBvaW50ID0gbGVuZ3RoUG9pbnQ7XG59XG5cbmZ1bmN0aW9uIGxlbmd0aFBvaW50KGxhbWJkYSwgcGhpKSB7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgdmFyIHNpblBoaSA9IHNpbihwaGkpLFxuICAgICAgY29zUGhpID0gY29zKHBoaSksXG4gICAgICBkZWx0YSA9IGFicyhsYW1iZGEgLSBsYW1iZGEwKSxcbiAgICAgIGNvc0RlbHRhID0gY29zKGRlbHRhKSxcbiAgICAgIHNpbkRlbHRhID0gc2luKGRlbHRhKSxcbiAgICAgIHggPSBjb3NQaGkgKiBzaW5EZWx0YSxcbiAgICAgIHkgPSBjb3NQaGkwICogc2luUGhpIC0gc2luUGhpMCAqIGNvc1BoaSAqIGNvc0RlbHRhLFxuICAgICAgeiA9IHNpblBoaTAgKiBzaW5QaGkgKyBjb3NQaGkwICogY29zUGhpICogY29zRGVsdGE7XG4gIGxlbmd0aFN1bS5hZGQoYXRhbjIoc3FydCh4ICogeCArIHkgKiB5KSwgeikpO1xuICBsYW1iZGEwID0gbGFtYmRhLCBzaW5QaGkwID0gc2luUGhpLCBjb3NQaGkwID0gY29zUGhpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmplY3QpIHtcbiAgbGVuZ3RoU3VtLnJlc2V0KCk7XG4gIHN0cmVhbShvYmplY3QsIGxlbmd0aFN0cmVhbSk7XG4gIHJldHVybiArbGVuZ3RoU3VtO1xufVxuIiwiZXhwb3J0IHZhciBlcHNpbG9uID0gMWUtNjtcbmV4cG9ydCB2YXIgZXBzaWxvbjIgPSAxZS0xMjtcbmV4cG9ydCB2YXIgcGkgPSBNYXRoLlBJO1xuZXhwb3J0IHZhciBoYWxmUGkgPSBwaSAvIDI7XG5leHBvcnQgdmFyIHF1YXJ0ZXJQaSA9IHBpIC8gNDtcbmV4cG9ydCB2YXIgdGF1ID0gcGkgKiAyO1xuXG5leHBvcnQgdmFyIGRlZ3JlZXMgPSAxODAgLyBwaTtcbmV4cG9ydCB2YXIgcmFkaWFucyA9IHBpIC8gMTgwO1xuXG5leHBvcnQgdmFyIGFicyA9IE1hdGguYWJzO1xuZXhwb3J0IHZhciBhdGFuID0gTWF0aC5hdGFuO1xuZXhwb3J0IHZhciBhdGFuMiA9IE1hdGguYXRhbjI7XG5leHBvcnQgdmFyIGNvcyA9IE1hdGguY29zO1xuZXhwb3J0IHZhciBjZWlsID0gTWF0aC5jZWlsO1xuZXhwb3J0IHZhciBleHAgPSBNYXRoLmV4cDtcbmV4cG9ydCB2YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xuZXhwb3J0IHZhciBsb2cgPSBNYXRoLmxvZztcbmV4cG9ydCB2YXIgcG93ID0gTWF0aC5wb3c7XG5leHBvcnQgdmFyIHNpbiA9IE1hdGguc2luO1xuZXhwb3J0IHZhciBzaWduID0gTWF0aC5zaWduIHx8IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIHggPiAwID8gMSA6IHggPCAwID8gLTEgOiAwOyB9O1xuZXhwb3J0IHZhciBzcXJ0ID0gTWF0aC5zcXJ0O1xuZXhwb3J0IHZhciB0YW4gPSBNYXRoLnRhbjtcblxuZXhwb3J0IGZ1bmN0aW9uIGFjb3MoeCkge1xuICByZXR1cm4geCA+IDEgPyAwIDogeCA8IC0xID8gcGkgOiBNYXRoLmFjb3MoeCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc2luKHgpIHtcbiAgcmV0dXJuIHggPiAxID8gaGFsZlBpIDogeCA8IC0xID8gLWhhbGZQaSA6IE1hdGguYXNpbih4KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhdmVyc2luKHgpIHtcbiAgcmV0dXJuICh4ID0gc2luKHggLyAyKSkgKiB4O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbm9vcCgpIHt9XG4iLCJpbXBvcnQgYWRkZXIgZnJvbSBcIi4uL2FkZGVyXCI7XG5pbXBvcnQge2Fic30gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCBub29wIGZyb20gXCIuLi9ub29wXCI7XG5cbnZhciBhcmVhU3VtID0gYWRkZXIoKSxcbiAgICBhcmVhUmluZ1N1bSA9IGFkZGVyKCksXG4gICAgeDAwLFxuICAgIHkwMCxcbiAgICB4MCxcbiAgICB5MDtcblxudmFyIGFyZWFTdHJlYW0gPSB7XG4gIHBvaW50OiBub29wLFxuICBsaW5lU3RhcnQ6IG5vb3AsXG4gIGxpbmVFbmQ6IG5vb3AsXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgYXJlYVN0cmVhbS5saW5lU3RhcnQgPSBhcmVhUmluZ1N0YXJ0O1xuICAgIGFyZWFTdHJlYW0ubGluZUVuZCA9IGFyZWFSaW5nRW5kO1xuICB9LFxuICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICBhcmVhU3RyZWFtLmxpbmVTdGFydCA9IGFyZWFTdHJlYW0ubGluZUVuZCA9IGFyZWFTdHJlYW0ucG9pbnQgPSBub29wO1xuICAgIGFyZWFTdW0uYWRkKGFicyhhcmVhUmluZ1N1bSkpO1xuICAgIGFyZWFSaW5nU3VtLnJlc2V0KCk7XG4gIH0sXG4gIHJlc3VsdDogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFyZWEgPSBhcmVhU3VtIC8gMjtcbiAgICBhcmVhU3VtLnJlc2V0KCk7XG4gICAgcmV0dXJuIGFyZWE7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGFyZWFSaW5nU3RhcnQoKSB7XG4gIGFyZWFTdHJlYW0ucG9pbnQgPSBhcmVhUG9pbnRGaXJzdDtcbn1cblxuZnVuY3Rpb24gYXJlYVBvaW50Rmlyc3QoeCwgeSkge1xuICBhcmVhU3RyZWFtLnBvaW50ID0gYXJlYVBvaW50O1xuICB4MDAgPSB4MCA9IHgsIHkwMCA9IHkwID0geTtcbn1cblxuZnVuY3Rpb24gYXJlYVBvaW50KHgsIHkpIHtcbiAgYXJlYVJpbmdTdW0uYWRkKHkwICogeCAtIHgwICogeSk7XG4gIHgwID0geCwgeTAgPSB5O1xufVxuXG5mdW5jdGlvbiBhcmVhUmluZ0VuZCgpIHtcbiAgYXJlYVBvaW50KHgwMCwgeTAwKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYXJlYVN0cmVhbTtcbiIsImltcG9ydCBub29wIGZyb20gXCIuLi9ub29wXCI7XG5cbnZhciB4MCA9IEluZmluaXR5LFxuICAgIHkwID0geDAsXG4gICAgeDEgPSAteDAsXG4gICAgeTEgPSB4MTtcblxudmFyIGJvdW5kc1N0cmVhbSA9IHtcbiAgcG9pbnQ6IGJvdW5kc1BvaW50LFxuICBsaW5lU3RhcnQ6IG5vb3AsXG4gIGxpbmVFbmQ6IG5vb3AsXG4gIHBvbHlnb25TdGFydDogbm9vcCxcbiAgcG9seWdvbkVuZDogbm9vcCxcbiAgcmVzdWx0OiBmdW5jdGlvbigpIHtcbiAgICB2YXIgYm91bmRzID0gW1t4MCwgeTBdLCBbeDEsIHkxXV07XG4gICAgeDEgPSB5MSA9IC0oeTAgPSB4MCA9IEluZmluaXR5KTtcbiAgICByZXR1cm4gYm91bmRzO1xuICB9XG59O1xuXG5mdW5jdGlvbiBib3VuZHNQb2ludCh4LCB5KSB7XG4gIGlmICh4IDwgeDApIHgwID0geDtcbiAgaWYgKHggPiB4MSkgeDEgPSB4O1xuICBpZiAoeSA8IHkwKSB5MCA9IHk7XG4gIGlmICh5ID4geTEpIHkxID0geTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYm91bmRzU3RyZWFtO1xuIiwiaW1wb3J0IHtzcXJ0fSBmcm9tIFwiLi4vbWF0aFwiO1xuXG4vLyBUT0RPIEVuZm9yY2UgcG9zaXRpdmUgYXJlYSBmb3IgZXh0ZXJpb3IsIG5lZ2F0aXZlIGFyZWEgZm9yIGludGVyaW9yP1xuXG52YXIgWDAgPSAwLFxuICAgIFkwID0gMCxcbiAgICBaMCA9IDAsXG4gICAgWDEgPSAwLFxuICAgIFkxID0gMCxcbiAgICBaMSA9IDAsXG4gICAgWDIgPSAwLFxuICAgIFkyID0gMCxcbiAgICBaMiA9IDAsXG4gICAgeDAwLFxuICAgIHkwMCxcbiAgICB4MCxcbiAgICB5MDtcblxudmFyIGNlbnRyb2lkU3RyZWFtID0ge1xuICBwb2ludDogY2VudHJvaWRQb2ludCxcbiAgbGluZVN0YXJ0OiBjZW50cm9pZExpbmVTdGFydCxcbiAgbGluZUVuZDogY2VudHJvaWRMaW5lRW5kLFxuICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIGNlbnRyb2lkU3RyZWFtLmxpbmVTdGFydCA9IGNlbnRyb2lkUmluZ1N0YXJ0O1xuICAgIGNlbnRyb2lkU3RyZWFtLmxpbmVFbmQgPSBjZW50cm9pZFJpbmdFbmQ7XG4gIH0sXG4gIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRQb2ludDtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lU3RhcnQgPSBjZW50cm9pZExpbmVTdGFydDtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lRW5kID0gY2VudHJvaWRMaW5lRW5kO1xuICB9LFxuICByZXN1bHQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBjZW50cm9pZCA9IFoyID8gW1gyIC8gWjIsIFkyIC8gWjJdXG4gICAgICAgIDogWjEgPyBbWDEgLyBaMSwgWTEgLyBaMV1cbiAgICAgICAgOiBaMCA/IFtYMCAvIFowLCBZMCAvIFowXVxuICAgICAgICA6IFtOYU4sIE5hTl07XG4gICAgWDAgPSBZMCA9IFowID1cbiAgICBYMSA9IFkxID0gWjEgPVxuICAgIFgyID0gWTIgPSBaMiA9IDA7XG4gICAgcmV0dXJuIGNlbnRyb2lkO1xuICB9XG59O1xuXG5mdW5jdGlvbiBjZW50cm9pZFBvaW50KHgsIHkpIHtcbiAgWDAgKz0geDtcbiAgWTAgKz0geTtcbiAgKytaMDtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRMaW5lU3RhcnQoKSB7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRQb2ludEZpcnN0TGluZTtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRQb2ludEZpcnN0TGluZSh4LCB5KSB7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRQb2ludExpbmU7XG4gIGNlbnRyb2lkUG9pbnQoeDAgPSB4LCB5MCA9IHkpO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZFBvaW50TGluZSh4LCB5KSB7XG4gIHZhciBkeCA9IHggLSB4MCwgZHkgPSB5IC0geTAsIHogPSBzcXJ0KGR4ICogZHggKyBkeSAqIGR5KTtcbiAgWDEgKz0geiAqICh4MCArIHgpIC8gMjtcbiAgWTEgKz0geiAqICh5MCArIHkpIC8gMjtcbiAgWjEgKz0gejtcbiAgY2VudHJvaWRQb2ludCh4MCA9IHgsIHkwID0geSk7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkTGluZUVuZCgpIHtcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZFBvaW50O1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZFJpbmdTdGFydCgpIHtcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZFBvaW50Rmlyc3RSaW5nO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZFJpbmdFbmQoKSB7XG4gIGNlbnRyb2lkUG9pbnRSaW5nKHgwMCwgeTAwKTtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRQb2ludEZpcnN0UmluZyh4LCB5KSB7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRQb2ludFJpbmc7XG4gIGNlbnRyb2lkUG9pbnQoeDAwID0geDAgPSB4LCB5MDAgPSB5MCA9IHkpO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZFBvaW50UmluZyh4LCB5KSB7XG4gIHZhciBkeCA9IHggLSB4MCxcbiAgICAgIGR5ID0geSAtIHkwLFxuICAgICAgeiA9IHNxcnQoZHggKiBkeCArIGR5ICogZHkpO1xuXG4gIFgxICs9IHogKiAoeDAgKyB4KSAvIDI7XG4gIFkxICs9IHogKiAoeTAgKyB5KSAvIDI7XG4gIFoxICs9IHo7XG5cbiAgeiA9IHkwICogeCAtIHgwICogeTtcbiAgWDIgKz0geiAqICh4MCArIHgpO1xuICBZMiArPSB6ICogKHkwICsgeSk7XG4gIFoyICs9IHogKiAzO1xuICBjZW50cm9pZFBvaW50KHgwID0geCwgeTAgPSB5KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2VudHJvaWRTdHJlYW07XG4iLCJpbXBvcnQge3RhdX0gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCBub29wIGZyb20gXCIuLi9ub29wXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBhdGhDb250ZXh0KGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cblBhdGhDb250ZXh0LnByb3RvdHlwZSA9IHtcbiAgX3JhZGl1czogNC41LFxuICBwb2ludFJhZGl1czogZnVuY3Rpb24oXykge1xuICAgIHJldHVybiB0aGlzLl9yYWRpdXMgPSBfLCB0aGlzO1xuICB9LFxuICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX2xpbmUgPT09IDApIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fcG9pbnQgPSBOYU47XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKHgsIHkpO1xuICAgICAgICB0aGlzLl9wb2ludCA9IDE7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAxOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5tb3ZlVG8oeCArIHRoaXMuX3JhZGl1cywgeSk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuYXJjKHgsIHksIHRoaXMuX3JhZGl1cywgMCwgdGF1KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICByZXN1bHQ6IG5vb3Bcbn07XG4iLCJpbXBvcnQgaWRlbnRpdHkgZnJvbSBcIi4uL2lkZW50aXR5XCI7XG5pbXBvcnQgc3RyZWFtIGZyb20gXCIuLi9zdHJlYW1cIjtcbmltcG9ydCBwYXRoQXJlYSBmcm9tIFwiLi9hcmVhXCI7XG5pbXBvcnQgcGF0aEJvdW5kcyBmcm9tIFwiLi9ib3VuZHNcIjtcbmltcG9ydCBwYXRoQ2VudHJvaWQgZnJvbSBcIi4vY2VudHJvaWRcIjtcbmltcG9ydCBQYXRoQ29udGV4dCBmcm9tIFwiLi9jb250ZXh0XCI7XG5pbXBvcnQgcGF0aE1lYXN1cmUgZnJvbSBcIi4vbWVhc3VyZVwiO1xuaW1wb3J0IFBhdGhTdHJpbmcgZnJvbSBcIi4vc3RyaW5nXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHByb2plY3Rpb24sIGNvbnRleHQpIHtcbiAgdmFyIHBvaW50UmFkaXVzID0gNC41LFxuICAgICAgcHJvamVjdGlvblN0cmVhbSxcbiAgICAgIGNvbnRleHRTdHJlYW07XG5cbiAgZnVuY3Rpb24gcGF0aChvYmplY3QpIHtcbiAgICBpZiAob2JqZWN0KSB7XG4gICAgICBpZiAodHlwZW9mIHBvaW50UmFkaXVzID09PSBcImZ1bmN0aW9uXCIpIGNvbnRleHRTdHJlYW0ucG9pbnRSYWRpdXMoK3BvaW50UmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICAgICAgc3RyZWFtKG9iamVjdCwgcHJvamVjdGlvblN0cmVhbShjb250ZXh0U3RyZWFtKSk7XG4gICAgfVxuICAgIHJldHVybiBjb250ZXh0U3RyZWFtLnJlc3VsdCgpO1xuICB9XG5cbiAgcGF0aC5hcmVhID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgc3RyZWFtKG9iamVjdCwgcHJvamVjdGlvblN0cmVhbShwYXRoQXJlYSkpO1xuICAgIHJldHVybiBwYXRoQXJlYS5yZXN1bHQoKTtcbiAgfTtcblxuICBwYXRoLm1lYXN1cmUgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICBzdHJlYW0ob2JqZWN0LCBwcm9qZWN0aW9uU3RyZWFtKHBhdGhNZWFzdXJlKSk7XG4gICAgcmV0dXJuIHBhdGhNZWFzdXJlLnJlc3VsdCgpO1xuICB9O1xuXG4gIHBhdGguYm91bmRzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgc3RyZWFtKG9iamVjdCwgcHJvamVjdGlvblN0cmVhbShwYXRoQm91bmRzKSk7XG4gICAgcmV0dXJuIHBhdGhCb3VuZHMucmVzdWx0KCk7XG4gIH07XG5cbiAgcGF0aC5jZW50cm9pZCA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHN0cmVhbShvYmplY3QsIHByb2plY3Rpb25TdHJlYW0ocGF0aENlbnRyb2lkKSk7XG4gICAgcmV0dXJuIHBhdGhDZW50cm9pZC5yZXN1bHQoKTtcbiAgfTtcblxuICBwYXRoLnByb2plY3Rpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocHJvamVjdGlvblN0cmVhbSA9IF8gPT0gbnVsbCA/IChwcm9qZWN0aW9uID0gbnVsbCwgaWRlbnRpdHkpIDogKHByb2plY3Rpb24gPSBfKS5zdHJlYW0sIHBhdGgpIDogcHJvamVjdGlvbjtcbiAgfTtcblxuICBwYXRoLmNvbnRleHQgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY29udGV4dDtcbiAgICBjb250ZXh0U3RyZWFtID0gXyA9PSBudWxsID8gKGNvbnRleHQgPSBudWxsLCBuZXcgUGF0aFN0cmluZykgOiBuZXcgUGF0aENvbnRleHQoY29udGV4dCA9IF8pO1xuICAgIGlmICh0eXBlb2YgcG9pbnRSYWRpdXMgIT09IFwiZnVuY3Rpb25cIikgY29udGV4dFN0cmVhbS5wb2ludFJhZGl1cyhwb2ludFJhZGl1cyk7XG4gICAgcmV0dXJuIHBhdGg7XG4gIH07XG5cbiAgcGF0aC5wb2ludFJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwb2ludFJhZGl1cztcbiAgICBwb2ludFJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogKGNvbnRleHRTdHJlYW0ucG9pbnRSYWRpdXMoK18pLCArXyk7XG4gICAgcmV0dXJuIHBhdGg7XG4gIH07XG5cbiAgcmV0dXJuIHBhdGgucHJvamVjdGlvbihwcm9qZWN0aW9uKS5jb250ZXh0KGNvbnRleHQpO1xufVxuIiwiaW1wb3J0IGFkZGVyIGZyb20gXCIuLi9hZGRlclwiO1xuaW1wb3J0IHtzcXJ0fSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IG5vb3AgZnJvbSBcIi4uL25vb3BcIjtcblxudmFyIGxlbmd0aFN1bSA9IGFkZGVyKCksXG4gICAgbGVuZ3RoUmluZyxcbiAgICB4MDAsXG4gICAgeTAwLFxuICAgIHgwLFxuICAgIHkwO1xuXG52YXIgbGVuZ3RoU3RyZWFtID0ge1xuICBwb2ludDogbm9vcCxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICBsZW5ndGhTdHJlYW0ucG9pbnQgPSBsZW5ndGhQb2ludEZpcnN0O1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAobGVuZ3RoUmluZykgbGVuZ3RoUG9pbnQoeDAwLCB5MDApO1xuICAgIGxlbmd0aFN0cmVhbS5wb2ludCA9IG5vb3A7XG4gIH0sXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgbGVuZ3RoUmluZyA9IHRydWU7XG4gIH0sXG4gIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGxlbmd0aFJpbmcgPSBudWxsO1xuICB9LFxuICByZXN1bHQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBsZW5ndGggPSArbGVuZ3RoU3VtO1xuICAgIGxlbmd0aFN1bS5yZXNldCgpO1xuICAgIHJldHVybiBsZW5ndGg7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGxlbmd0aFBvaW50Rmlyc3QoeCwgeSkge1xuICBsZW5ndGhTdHJlYW0ucG9pbnQgPSBsZW5ndGhQb2ludDtcbiAgeDAwID0geDAgPSB4LCB5MDAgPSB5MCA9IHk7XG59XG5cbmZ1bmN0aW9uIGxlbmd0aFBvaW50KHgsIHkpIHtcbiAgeDAgLT0geCwgeTAgLT0geTtcbiAgbGVuZ3RoU3VtLmFkZChzcXJ0KHgwICogeDAgKyB5MCAqIHkwKSk7XG4gIHgwID0geCwgeTAgPSB5O1xufVxuXG5leHBvcnQgZGVmYXVsdCBsZW5ndGhTdHJlYW07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQYXRoU3RyaW5nKCkge1xuICB0aGlzLl9zdHJpbmcgPSBbXTtcbn1cblxuUGF0aFN0cmluZy5wcm90b3R5cGUgPSB7XG4gIF9yYWRpdXM6IDQuNSxcbiAgX2NpcmNsZTogY2lyY2xlKDQuNSksXG4gIHBvaW50UmFkaXVzOiBmdW5jdGlvbihfKSB7XG4gICAgaWYgKChfID0gK18pICE9PSB0aGlzLl9yYWRpdXMpIHRoaXMuX3JhZGl1cyA9IF8sIHRoaXMuX2NpcmNsZSA9IG51bGw7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fbGluZSA9PT0gMCkgdGhpcy5fc3RyaW5nLnB1c2goXCJaXCIpO1xuICAgIHRoaXMuX3BvaW50ID0gTmFOO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDoge1xuICAgICAgICB0aGlzLl9zdHJpbmcucHVzaChcIk1cIiwgeCwgXCIsXCIsIHkpO1xuICAgICAgICB0aGlzLl9wb2ludCA9IDE7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAxOiB7XG4gICAgICAgIHRoaXMuX3N0cmluZy5wdXNoKFwiTFwiLCB4LCBcIixcIiwgeSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgZGVmYXVsdDoge1xuICAgICAgICBpZiAodGhpcy5fY2lyY2xlID09IG51bGwpIHRoaXMuX2NpcmNsZSA9IGNpcmNsZSh0aGlzLl9yYWRpdXMpO1xuICAgICAgICB0aGlzLl9zdHJpbmcucHVzaChcIk1cIiwgeCwgXCIsXCIsIHksIHRoaXMuX2NpcmNsZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgcmVzdWx0OiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fc3RyaW5nLmxlbmd0aCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuX3N0cmluZy5qb2luKFwiXCIpO1xuICAgICAgdGhpcy5fc3RyaW5nID0gW107XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGNpcmNsZShyYWRpdXMpIHtcbiAgcmV0dXJuIFwibTAsXCIgKyByYWRpdXNcbiAgICAgICsgXCJhXCIgKyByYWRpdXMgKyBcIixcIiArIHJhZGl1cyArIFwiIDAgMSwxIDAsXCIgKyAtMiAqIHJhZGl1c1xuICAgICAgKyBcImFcIiArIHJhZGl1cyArIFwiLFwiICsgcmFkaXVzICsgXCIgMCAxLDEgMCxcIiArIDIgKiByYWRpdXNcbiAgICAgICsgXCJ6XCI7XG59XG4iLCJpbXBvcnQge2FicywgZXBzaWxvbn0gZnJvbSBcIi4vbWF0aFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBhYnMoYVswXSAtIGJbMF0pIDwgZXBzaWxvbiAmJiBhYnMoYVsxXSAtIGJbMV0pIDwgZXBzaWxvbjtcbn1cbiIsImltcG9ydCBhZGRlciBmcm9tIFwiLi9hZGRlclwiO1xuaW1wb3J0IHtjYXJ0ZXNpYW4sIGNhcnRlc2lhbkNyb3NzLCBjYXJ0ZXNpYW5Ob3JtYWxpemVJblBsYWNlfSBmcm9tIFwiLi9jYXJ0ZXNpYW5cIjtcbmltcG9ydCB7YXNpbiwgYXRhbjIsIGNvcywgZXBzaWxvbiwgaGFsZlBpLCBwaSwgcXVhcnRlclBpLCBzaW4sIHRhdX0gZnJvbSBcIi4vbWF0aFwiO1xuXG52YXIgc3VtID0gYWRkZXIoKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocG9seWdvbiwgcG9pbnQpIHtcbiAgdmFyIGxhbWJkYSA9IHBvaW50WzBdLFxuICAgICAgcGhpID0gcG9pbnRbMV0sXG4gICAgICBzaW5QaGkgPSBzaW4ocGhpKSxcbiAgICAgIG5vcm1hbCA9IFtzaW4obGFtYmRhKSwgLWNvcyhsYW1iZGEpLCAwXSxcbiAgICAgIGFuZ2xlID0gMCxcbiAgICAgIHdpbmRpbmcgPSAwO1xuXG4gIHN1bS5yZXNldCgpO1xuXG4gIGlmIChzaW5QaGkgPT09IDEpIHBoaSA9IGhhbGZQaSArIGVwc2lsb247XG4gIGVsc2UgaWYgKHNpblBoaSA9PT0gLTEpIHBoaSA9IC1oYWxmUGkgLSBlcHNpbG9uO1xuXG4gIGZvciAodmFyIGkgPSAwLCBuID0gcG9seWdvbi5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAoIShtID0gKHJpbmcgPSBwb2x5Z29uW2ldKS5sZW5ndGgpKSBjb250aW51ZTtcbiAgICB2YXIgcmluZyxcbiAgICAgICAgbSxcbiAgICAgICAgcG9pbnQwID0gcmluZ1ttIC0gMV0sXG4gICAgICAgIGxhbWJkYTAgPSBwb2ludDBbMF0sXG4gICAgICAgIHBoaTAgPSBwb2ludDBbMV0gLyAyICsgcXVhcnRlclBpLFxuICAgICAgICBzaW5QaGkwID0gc2luKHBoaTApLFxuICAgICAgICBjb3NQaGkwID0gY29zKHBoaTApO1xuXG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCBtOyArK2osIGxhbWJkYTAgPSBsYW1iZGExLCBzaW5QaGkwID0gc2luUGhpMSwgY29zUGhpMCA9IGNvc1BoaTEsIHBvaW50MCA9IHBvaW50MSkge1xuICAgICAgdmFyIHBvaW50MSA9IHJpbmdbal0sXG4gICAgICAgICAgbGFtYmRhMSA9IHBvaW50MVswXSxcbiAgICAgICAgICBwaGkxID0gcG9pbnQxWzFdIC8gMiArIHF1YXJ0ZXJQaSxcbiAgICAgICAgICBzaW5QaGkxID0gc2luKHBoaTEpLFxuICAgICAgICAgIGNvc1BoaTEgPSBjb3MocGhpMSksXG4gICAgICAgICAgZGVsdGEgPSBsYW1iZGExIC0gbGFtYmRhMCxcbiAgICAgICAgICBzaWduID0gZGVsdGEgPj0gMCA/IDEgOiAtMSxcbiAgICAgICAgICBhYnNEZWx0YSA9IHNpZ24gKiBkZWx0YSxcbiAgICAgICAgICBhbnRpbWVyaWRpYW4gPSBhYnNEZWx0YSA+IHBpLFxuICAgICAgICAgIGsgPSBzaW5QaGkwICogc2luUGhpMTtcblxuICAgICAgc3VtLmFkZChhdGFuMihrICogc2lnbiAqIHNpbihhYnNEZWx0YSksIGNvc1BoaTAgKiBjb3NQaGkxICsgayAqIGNvcyhhYnNEZWx0YSkpKTtcbiAgICAgIGFuZ2xlICs9IGFudGltZXJpZGlhbiA/IGRlbHRhICsgc2lnbiAqIHRhdSA6IGRlbHRhO1xuXG4gICAgICAvLyBBcmUgdGhlIGxvbmdpdHVkZXMgZWl0aGVyIHNpZGUgb2YgdGhlIHBvaW504oCZcyBtZXJpZGlhbiAobGFtYmRhKSxcbiAgICAgIC8vIGFuZCBhcmUgdGhlIGxhdGl0dWRlcyBzbWFsbGVyIHRoYW4gdGhlIHBhcmFsbGVsIChwaGkpP1xuICAgICAgaWYgKGFudGltZXJpZGlhbiBeIGxhbWJkYTAgPj0gbGFtYmRhIF4gbGFtYmRhMSA+PSBsYW1iZGEpIHtcbiAgICAgICAgdmFyIGFyYyA9IGNhcnRlc2lhbkNyb3NzKGNhcnRlc2lhbihwb2ludDApLCBjYXJ0ZXNpYW4ocG9pbnQxKSk7XG4gICAgICAgIGNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UoYXJjKTtcbiAgICAgICAgdmFyIGludGVyc2VjdGlvbiA9IGNhcnRlc2lhbkNyb3NzKG5vcm1hbCwgYXJjKTtcbiAgICAgICAgY2FydGVzaWFuTm9ybWFsaXplSW5QbGFjZShpbnRlcnNlY3Rpb24pO1xuICAgICAgICB2YXIgcGhpQXJjID0gKGFudGltZXJpZGlhbiBeIGRlbHRhID49IDAgPyAtMSA6IDEpICogYXNpbihpbnRlcnNlY3Rpb25bMl0pO1xuICAgICAgICBpZiAocGhpID4gcGhpQXJjIHx8IHBoaSA9PT0gcGhpQXJjICYmIChhcmNbMF0gfHwgYXJjWzFdKSkge1xuICAgICAgICAgIHdpbmRpbmcgKz0gYW50aW1lcmlkaWFuIF4gZGVsdGEgPj0gMCA/IDEgOiAtMTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIEZpcnN0LCBkZXRlcm1pbmUgd2hldGhlciB0aGUgU291dGggcG9sZSBpcyBpbnNpZGUgb3Igb3V0c2lkZTpcbiAgLy9cbiAgLy8gSXQgaXMgaW5zaWRlIGlmOlxuICAvLyAqIHRoZSBwb2x5Z29uIHdpbmRzIGFyb3VuZCBpdCBpbiBhIGNsb2Nrd2lzZSBkaXJlY3Rpb24uXG4gIC8vICogdGhlIHBvbHlnb24gZG9lcyBub3QgKGN1bXVsYXRpdmVseSkgd2luZCBhcm91bmQgaXQsIGJ1dCBoYXMgYSBuZWdhdGl2ZVxuICAvLyAgIChjb3VudGVyLWNsb2Nrd2lzZSkgYXJlYS5cbiAgLy9cbiAgLy8gU2Vjb25kLCBjb3VudCB0aGUgKHNpZ25lZCkgbnVtYmVyIG9mIHRpbWVzIGEgc2VnbWVudCBjcm9zc2VzIGEgbGFtYmRhXG4gIC8vIGZyb20gdGhlIHBvaW50IHRvIHRoZSBTb3V0aCBwb2xlLiAgSWYgaXQgaXMgemVybywgdGhlbiB0aGUgcG9pbnQgaXMgdGhlXG4gIC8vIHNhbWUgc2lkZSBhcyB0aGUgU291dGggcG9sZS5cblxuICByZXR1cm4gKGFuZ2xlIDwgLWVwc2lsb24gfHwgYW5nbGUgPCBlcHNpbG9uICYmIHN1bSA8IC1lcHNpbG9uKSBeICh3aW5kaW5nICYgMSk7XG59XG4iLCJpbXBvcnQgY29uaWNFcXVhbEFyZWEgZnJvbSBcIi4vY29uaWNFcXVhbEFyZWFcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBjb25pY0VxdWFsQXJlYSgpXG4gICAgICAucGFyYWxsZWxzKFsyOS41LCA0NS41XSlcbiAgICAgIC5zY2FsZSgxMDcwKVxuICAgICAgLnRyYW5zbGF0ZShbNDgwLCAyNTBdKVxuICAgICAgLnJvdGF0ZShbOTYsIDBdKVxuICAgICAgLmNlbnRlcihbLTAuNiwgMzguN10pO1xufVxuIiwiaW1wb3J0IHtlcHNpbG9ufSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IGFsYmVycyBmcm9tIFwiLi9hbGJlcnNcIjtcbmltcG9ydCBjb25pY0VxdWFsQXJlYSBmcm9tIFwiLi9jb25pY0VxdWFsQXJlYVwiO1xuaW1wb3J0IHtmaXRFeHRlbnQsIGZpdFNpemUsIGZpdFdpZHRoLCBmaXRIZWlnaHR9IGZyb20gXCIuL2ZpdFwiO1xuXG4vLyBUaGUgcHJvamVjdGlvbnMgbXVzdCBoYXZlIG11dHVhbGx5IGV4Y2x1c2l2ZSBjbGlwIHJlZ2lvbnMgb24gdGhlIHNwaGVyZSxcbi8vIGFzIHRoaXMgd2lsbCBhdm9pZCBlbWl0dGluZyBpbnRlcmxlYXZpbmcgbGluZXMgYW5kIHBvbHlnb25zLlxuZnVuY3Rpb24gbXVsdGlwbGV4KHN0cmVhbXMpIHtcbiAgdmFyIG4gPSBzdHJlYW1zLmxlbmd0aDtcbiAgcmV0dXJuIHtcbiAgICBwb2ludDogZnVuY3Rpb24oeCwgeSkgeyB2YXIgaSA9IC0xOyB3aGlsZSAoKytpIDwgbikgc3RyZWFtc1tpXS5wb2ludCh4LCB5KTsgfSxcbiAgICBzcGhlcmU6IGZ1bmN0aW9uKCkgeyB2YXIgaSA9IC0xOyB3aGlsZSAoKytpIDwgbikgc3RyZWFtc1tpXS5zcGhlcmUoKTsgfSxcbiAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkgeyB2YXIgaSA9IC0xOyB3aGlsZSAoKytpIDwgbikgc3RyZWFtc1tpXS5saW5lU3RhcnQoKTsgfSxcbiAgICBsaW5lRW5kOiBmdW5jdGlvbigpIHsgdmFyIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHN0cmVhbXNbaV0ubGluZUVuZCgpOyB9LFxuICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7IHZhciBpID0gLTE7IHdoaWxlICgrK2kgPCBuKSBzdHJlYW1zW2ldLnBvbHlnb25TdGFydCgpOyB9LFxuICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkgeyB2YXIgaSA9IC0xOyB3aGlsZSAoKytpIDwgbikgc3RyZWFtc1tpXS5wb2x5Z29uRW5kKCk7IH1cbiAgfTtcbn1cblxuLy8gQSBjb21wb3NpdGUgcHJvamVjdGlvbiBmb3IgdGhlIFVuaXRlZCBTdGF0ZXMsIGNvbmZpZ3VyZWQgYnkgZGVmYXVsdCBmb3Jcbi8vIDk2MMOXNTAwLiBUaGUgcHJvamVjdGlvbiBhbHNvIHdvcmtzIHF1aXRlIHdlbGwgYXQgOTYww5c2MDAgaWYgeW91IGNoYW5nZSB0aGVcbi8vIHNjYWxlIHRvIDEyODUgYW5kIGFkanVzdCB0aGUgdHJhbnNsYXRlIGFjY29yZGluZ2x5LiBUaGUgc2V0IG9mIHN0YW5kYXJkXG4vLyBwYXJhbGxlbHMgZm9yIGVhY2ggcmVnaW9uIGNvbWVzIGZyb20gVVNHUywgd2hpY2ggaXMgcHVibGlzaGVkIGhlcmU6XG4vLyBodHRwOi8vZWdzYy51c2dzLmdvdi9pc2IvcHVicy9NYXBQcm9qZWN0aW9ucy9wcm9qZWN0aW9ucy5odG1sI2FsYmVyc1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBjYWNoZSxcbiAgICAgIGNhY2hlU3RyZWFtLFxuICAgICAgbG93ZXI0OCA9IGFsYmVycygpLCBsb3dlcjQ4UG9pbnQsXG4gICAgICBhbGFza2EgPSBjb25pY0VxdWFsQXJlYSgpLnJvdGF0ZShbMTU0LCAwXSkuY2VudGVyKFstMiwgNTguNV0pLnBhcmFsbGVscyhbNTUsIDY1XSksIGFsYXNrYVBvaW50LCAvLyBFUFNHOjMzMzhcbiAgICAgIGhhd2FpaSA9IGNvbmljRXF1YWxBcmVhKCkucm90YXRlKFsxNTcsIDBdKS5jZW50ZXIoWy0zLCAxOS45XSkucGFyYWxsZWxzKFs4LCAxOF0pLCBoYXdhaWlQb2ludCwgLy8gRVNSSToxMDIwMDdcbiAgICAgIHBvaW50LCBwb2ludFN0cmVhbSA9IHtwb2ludDogZnVuY3Rpb24oeCwgeSkgeyBwb2ludCA9IFt4LCB5XTsgfX07XG5cbiAgZnVuY3Rpb24gYWxiZXJzVXNhKGNvb3JkaW5hdGVzKSB7XG4gICAgdmFyIHggPSBjb29yZGluYXRlc1swXSwgeSA9IGNvb3JkaW5hdGVzWzFdO1xuICAgIHJldHVybiBwb2ludCA9IG51bGwsXG4gICAgICAgIChsb3dlcjQ4UG9pbnQucG9pbnQoeCwgeSksIHBvaW50KVxuICAgICAgICB8fCAoYWxhc2thUG9pbnQucG9pbnQoeCwgeSksIHBvaW50KVxuICAgICAgICB8fCAoaGF3YWlpUG9pbnQucG9pbnQoeCwgeSksIHBvaW50KTtcbiAgfVxuXG4gIGFsYmVyc1VzYS5pbnZlcnQgPSBmdW5jdGlvbihjb29yZGluYXRlcykge1xuICAgIHZhciBrID0gbG93ZXI0OC5zY2FsZSgpLFxuICAgICAgICB0ID0gbG93ZXI0OC50cmFuc2xhdGUoKSxcbiAgICAgICAgeCA9IChjb29yZGluYXRlc1swXSAtIHRbMF0pIC8gayxcbiAgICAgICAgeSA9IChjb29yZGluYXRlc1sxXSAtIHRbMV0pIC8gaztcbiAgICByZXR1cm4gKHkgPj0gMC4xMjAgJiYgeSA8IDAuMjM0ICYmIHggPj0gLTAuNDI1ICYmIHggPCAtMC4yMTQgPyBhbGFza2FcbiAgICAgICAgOiB5ID49IDAuMTY2ICYmIHkgPCAwLjIzNCAmJiB4ID49IC0wLjIxNCAmJiB4IDwgLTAuMTE1ID8gaGF3YWlpXG4gICAgICAgIDogbG93ZXI0OCkuaW52ZXJ0KGNvb3JkaW5hdGVzKTtcbiAgfTtcblxuICBhbGJlcnNVc2Euc3RyZWFtID0gZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgcmV0dXJuIGNhY2hlICYmIGNhY2hlU3RyZWFtID09PSBzdHJlYW0gPyBjYWNoZSA6IGNhY2hlID0gbXVsdGlwbGV4KFtsb3dlcjQ4LnN0cmVhbShjYWNoZVN0cmVhbSA9IHN0cmVhbSksIGFsYXNrYS5zdHJlYW0oc3RyZWFtKSwgaGF3YWlpLnN0cmVhbShzdHJlYW0pXSk7XG4gIH07XG5cbiAgYWxiZXJzVXNhLnByZWNpc2lvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBsb3dlcjQ4LnByZWNpc2lvbigpO1xuICAgIGxvd2VyNDgucHJlY2lzaW9uKF8pLCBhbGFza2EucHJlY2lzaW9uKF8pLCBoYXdhaWkucHJlY2lzaW9uKF8pO1xuICAgIHJldHVybiByZXNldCgpO1xuICB9O1xuXG4gIGFsYmVyc1VzYS5zY2FsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBsb3dlcjQ4LnNjYWxlKCk7XG4gICAgbG93ZXI0OC5zY2FsZShfKSwgYWxhc2thLnNjYWxlKF8gKiAwLjM1KSwgaGF3YWlpLnNjYWxlKF8pO1xuICAgIHJldHVybiBhbGJlcnNVc2EudHJhbnNsYXRlKGxvd2VyNDgudHJhbnNsYXRlKCkpO1xuICB9O1xuXG4gIGFsYmVyc1VzYS50cmFuc2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbG93ZXI0OC50cmFuc2xhdGUoKTtcbiAgICB2YXIgayA9IGxvd2VyNDguc2NhbGUoKSwgeCA9ICtfWzBdLCB5ID0gK19bMV07XG5cbiAgICBsb3dlcjQ4UG9pbnQgPSBsb3dlcjQ4XG4gICAgICAgIC50cmFuc2xhdGUoXylcbiAgICAgICAgLmNsaXBFeHRlbnQoW1t4IC0gMC40NTUgKiBrLCB5IC0gMC4yMzggKiBrXSwgW3ggKyAwLjQ1NSAqIGssIHkgKyAwLjIzOCAqIGtdXSlcbiAgICAgICAgLnN0cmVhbShwb2ludFN0cmVhbSk7XG5cbiAgICBhbGFza2FQb2ludCA9IGFsYXNrYVxuICAgICAgICAudHJhbnNsYXRlKFt4IC0gMC4zMDcgKiBrLCB5ICsgMC4yMDEgKiBrXSlcbiAgICAgICAgLmNsaXBFeHRlbnQoW1t4IC0gMC40MjUgKiBrICsgZXBzaWxvbiwgeSArIDAuMTIwICogayArIGVwc2lsb25dLCBbeCAtIDAuMjE0ICogayAtIGVwc2lsb24sIHkgKyAwLjIzNCAqIGsgLSBlcHNpbG9uXV0pXG4gICAgICAgIC5zdHJlYW0ocG9pbnRTdHJlYW0pO1xuXG4gICAgaGF3YWlpUG9pbnQgPSBoYXdhaWlcbiAgICAgICAgLnRyYW5zbGF0ZShbeCAtIDAuMjA1ICogaywgeSArIDAuMjEyICoga10pXG4gICAgICAgIC5jbGlwRXh0ZW50KFtbeCAtIDAuMjE0ICogayArIGVwc2lsb24sIHkgKyAwLjE2NiAqIGsgKyBlcHNpbG9uXSwgW3ggLSAwLjExNSAqIGsgLSBlcHNpbG9uLCB5ICsgMC4yMzQgKiBrIC0gZXBzaWxvbl1dKVxuICAgICAgICAuc3RyZWFtKHBvaW50U3RyZWFtKTtcblxuICAgIHJldHVybiByZXNldCgpO1xuICB9O1xuXG4gIGFsYmVyc1VzYS5maXRFeHRlbnQgPSBmdW5jdGlvbihleHRlbnQsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRFeHRlbnQoYWxiZXJzVXNhLCBleHRlbnQsIG9iamVjdCk7XG4gIH07XG5cbiAgYWxiZXJzVXNhLmZpdFNpemUgPSBmdW5jdGlvbihzaXplLCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0U2l6ZShhbGJlcnNVc2EsIHNpemUsIG9iamVjdCk7XG4gIH07XG5cbiAgYWxiZXJzVXNhLmZpdFdpZHRoID0gZnVuY3Rpb24od2lkdGgsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRXaWR0aChhbGJlcnNVc2EsIHdpZHRoLCBvYmplY3QpO1xuICB9O1xuXG4gIGFsYmVyc1VzYS5maXRIZWlnaHQgPSBmdW5jdGlvbihoZWlnaHQsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRIZWlnaHQoYWxiZXJzVXNhLCBoZWlnaHQsIG9iamVjdCk7XG4gIH07XG5cbiAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgY2FjaGUgPSBjYWNoZVN0cmVhbSA9IG51bGw7XG4gICAgcmV0dXJuIGFsYmVyc1VzYTtcbiAgfVxuXG4gIHJldHVybiBhbGJlcnNVc2Euc2NhbGUoMTA3MCk7XG59XG4iLCJpbXBvcnQge2FzaW4sIGF0YW4yLCBjb3MsIHNpbiwgc3FydH0gZnJvbSBcIi4uL21hdGhcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGF6aW11dGhhbFJhdyhzY2FsZSkge1xuICByZXR1cm4gZnVuY3Rpb24oeCwgeSkge1xuICAgIHZhciBjeCA9IGNvcyh4KSxcbiAgICAgICAgY3kgPSBjb3MoeSksXG4gICAgICAgIGsgPSBzY2FsZShjeCAqIGN5KTtcbiAgICByZXR1cm4gW1xuICAgICAgayAqIGN5ICogc2luKHgpLFxuICAgICAgayAqIHNpbih5KVxuICAgIF07XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGF6aW11dGhhbEludmVydChhbmdsZSkge1xuICByZXR1cm4gZnVuY3Rpb24oeCwgeSkge1xuICAgIHZhciB6ID0gc3FydCh4ICogeCArIHkgKiB5KSxcbiAgICAgICAgYyA9IGFuZ2xlKHopLFxuICAgICAgICBzYyA9IHNpbihjKSxcbiAgICAgICAgY2MgPSBjb3MoYyk7XG4gICAgcmV0dXJuIFtcbiAgICAgIGF0YW4yKHggKiBzYywgeiAqIGNjKSxcbiAgICAgIGFzaW4oeiAmJiB5ICogc2MgLyB6KVxuICAgIF07XG4gIH1cbn1cbiIsImltcG9ydCB7YXNpbiwgc3FydH0gZnJvbSBcIi4uL21hdGhcIjtcbmltcG9ydCB7YXppbXV0aGFsUmF3LCBhemltdXRoYWxJbnZlcnR9IGZyb20gXCIuL2F6aW11dGhhbFwiO1xuaW1wb3J0IHByb2plY3Rpb24gZnJvbSBcIi4vaW5kZXhcIjtcblxuZXhwb3J0IHZhciBhemltdXRoYWxFcXVhbEFyZWFSYXcgPSBhemltdXRoYWxSYXcoZnVuY3Rpb24oY3hjeSkge1xuICByZXR1cm4gc3FydCgyIC8gKDEgKyBjeGN5KSk7XG59KTtcblxuYXppbXV0aGFsRXF1YWxBcmVhUmF3LmludmVydCA9IGF6aW11dGhhbEludmVydChmdW5jdGlvbih6KSB7XG4gIHJldHVybiAyICogYXNpbih6IC8gMik7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBwcm9qZWN0aW9uKGF6aW11dGhhbEVxdWFsQXJlYVJhdylcbiAgICAgIC5zY2FsZSgxMjQuNzUpXG4gICAgICAuY2xpcEFuZ2xlKDE4MCAtIDFlLTMpO1xufVxuIiwiaW1wb3J0IHthY29zLCBzaW59IGZyb20gXCIuLi9tYXRoXCI7XG5pbXBvcnQge2F6aW11dGhhbFJhdywgYXppbXV0aGFsSW52ZXJ0fSBmcm9tIFwiLi9hemltdXRoYWxcIjtcbmltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCB2YXIgYXppbXV0aGFsRXF1aWRpc3RhbnRSYXcgPSBhemltdXRoYWxSYXcoZnVuY3Rpb24oYykge1xuICByZXR1cm4gKGMgPSBhY29zKGMpKSAmJiBjIC8gc2luKGMpO1xufSk7XG5cbmF6aW11dGhhbEVxdWlkaXN0YW50UmF3LmludmVydCA9IGF6aW11dGhhbEludmVydChmdW5jdGlvbih6KSB7XG4gIHJldHVybiB6O1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcHJvamVjdGlvbihhemltdXRoYWxFcXVpZGlzdGFudFJhdylcbiAgICAgIC5zY2FsZSg3OS40MTg4KVxuICAgICAgLmNsaXBBbmdsZSgxODAgLSAxZS0zKTtcbn1cbiIsImltcG9ydCB7ZGVncmVlcywgcGksIHJhZGlhbnN9IGZyb20gXCIuLi9tYXRoXCI7XG5pbXBvcnQge3Byb2plY3Rpb25NdXRhdG9yfSBmcm9tIFwiLi9pbmRleFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gY29uaWNQcm9qZWN0aW9uKHByb2plY3RBdCkge1xuICB2YXIgcGhpMCA9IDAsXG4gICAgICBwaGkxID0gcGkgLyAzLFxuICAgICAgbSA9IHByb2plY3Rpb25NdXRhdG9yKHByb2plY3RBdCksXG4gICAgICBwID0gbShwaGkwLCBwaGkxKTtcblxuICBwLnBhcmFsbGVscyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IG0ocGhpMCA9IF9bMF0gKiByYWRpYW5zLCBwaGkxID0gX1sxXSAqIHJhZGlhbnMpIDogW3BoaTAgKiBkZWdyZWVzLCBwaGkxICogZGVncmVlc107XG4gIH07XG5cbiAgcmV0dXJuIHA7XG59XG4iLCJpbXBvcnQge2FicywgYXRhbiwgYXRhbjIsIGNvcywgZXBzaWxvbiwgaGFsZlBpLCBsb2csIHBvdywgc2lnbiwgc2luLCBzcXJ0LCB0YW59IGZyb20gXCIuLi9tYXRoXCI7XG5pbXBvcnQge2NvbmljUHJvamVjdGlvbn0gZnJvbSBcIi4vY29uaWNcIjtcbmltcG9ydCB7bWVyY2F0b3JSYXd9IGZyb20gXCIuL21lcmNhdG9yXCI7XG5cbmZ1bmN0aW9uIHRhbnkoeSkge1xuICByZXR1cm4gdGFuKChoYWxmUGkgKyB5KSAvIDIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29uaWNDb25mb3JtYWxSYXcoeTAsIHkxKSB7XG4gIHZhciBjeTAgPSBjb3MoeTApLFxuICAgICAgbiA9IHkwID09PSB5MSA/IHNpbih5MCkgOiBsb2coY3kwIC8gY29zKHkxKSkgLyBsb2codGFueSh5MSkgLyB0YW55KHkwKSksXG4gICAgICBmID0gY3kwICogcG93KHRhbnkoeTApLCBuKSAvIG47XG5cbiAgaWYgKCFuKSByZXR1cm4gbWVyY2F0b3JSYXc7XG5cbiAgZnVuY3Rpb24gcHJvamVjdCh4LCB5KSB7XG4gICAgaWYgKGYgPiAwKSB7IGlmICh5IDwgLWhhbGZQaSArIGVwc2lsb24pIHkgPSAtaGFsZlBpICsgZXBzaWxvbjsgfVxuICAgIGVsc2UgeyBpZiAoeSA+IGhhbGZQaSAtIGVwc2lsb24pIHkgPSBoYWxmUGkgLSBlcHNpbG9uOyB9XG4gICAgdmFyIHIgPSBmIC8gcG93KHRhbnkoeSksIG4pO1xuICAgIHJldHVybiBbciAqIHNpbihuICogeCksIGYgLSByICogY29zKG4gKiB4KV07XG4gIH1cblxuICBwcm9qZWN0LmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB2YXIgZnkgPSBmIC0geSwgciA9IHNpZ24obikgKiBzcXJ0KHggKiB4ICsgZnkgKiBmeSk7XG4gICAgcmV0dXJuIFthdGFuMih4LCBhYnMoZnkpKSAvIG4gKiBzaWduKGZ5KSwgMiAqIGF0YW4ocG93KGYgLyByLCAxIC8gbikpIC0gaGFsZlBpXTtcbiAgfTtcblxuICByZXR1cm4gcHJvamVjdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBjb25pY1Byb2plY3Rpb24oY29uaWNDb25mb3JtYWxSYXcpXG4gICAgICAuc2NhbGUoMTA5LjUpXG4gICAgICAucGFyYWxsZWxzKFszMCwgMzBdKTtcbn1cbiIsImltcG9ydCB7YWJzLCBhc2luLCBhdGFuMiwgY29zLCBlcHNpbG9uLCBzaWduLCBzaW4sIHNxcnR9IGZyb20gXCIuLi9tYXRoXCI7XG5pbXBvcnQge2NvbmljUHJvamVjdGlvbn0gZnJvbSBcIi4vY29uaWNcIjtcbmltcG9ydCB7Y3lsaW5kcmljYWxFcXVhbEFyZWFSYXd9IGZyb20gXCIuL2N5bGluZHJpY2FsRXF1YWxBcmVhXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25pY0VxdWFsQXJlYVJhdyh5MCwgeTEpIHtcbiAgdmFyIHN5MCA9IHNpbih5MCksIG4gPSAoc3kwICsgc2luKHkxKSkgLyAyO1xuXG4gIC8vIEFyZSB0aGUgcGFyYWxsZWxzIHN5bW1ldHJpY2FsIGFyb3VuZCB0aGUgRXF1YXRvcj9cbiAgaWYgKGFicyhuKSA8IGVwc2lsb24pIHJldHVybiBjeWxpbmRyaWNhbEVxdWFsQXJlYVJhdyh5MCk7XG5cbiAgdmFyIGMgPSAxICsgc3kwICogKDIgKiBuIC0gc3kwKSwgcjAgPSBzcXJ0KGMpIC8gbjtcblxuICBmdW5jdGlvbiBwcm9qZWN0KHgsIHkpIHtcbiAgICB2YXIgciA9IHNxcnQoYyAtIDIgKiBuICogc2luKHkpKSAvIG47XG4gICAgcmV0dXJuIFtyICogc2luKHggKj0gbiksIHIwIC0gciAqIGNvcyh4KV07XG4gIH1cblxuICBwcm9qZWN0LmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB2YXIgcjB5ID0gcjAgLSB5O1xuICAgIHJldHVybiBbYXRhbjIoeCwgYWJzKHIweSkpIC8gbiAqIHNpZ24ocjB5KSwgYXNpbigoYyAtICh4ICogeCArIHIweSAqIHIweSkgKiBuICogbikgLyAoMiAqIG4pKV07XG4gIH07XG5cbiAgcmV0dXJuIHByb2plY3Q7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gY29uaWNQcm9qZWN0aW9uKGNvbmljRXF1YWxBcmVhUmF3KVxuICAgICAgLnNjYWxlKDE1NS40MjQpXG4gICAgICAuY2VudGVyKFswLCAzMy42NDQyXSk7XG59XG4iLCJpbXBvcnQge2FicywgYXRhbjIsIGNvcywgZXBzaWxvbiwgc2lnbiwgc2luLCBzcXJ0fSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHtjb25pY1Byb2plY3Rpb259IGZyb20gXCIuL2NvbmljXCI7XG5pbXBvcnQge2VxdWlyZWN0YW5ndWxhclJhd30gZnJvbSBcIi4vZXF1aXJlY3Rhbmd1bGFyXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25pY0VxdWlkaXN0YW50UmF3KHkwLCB5MSkge1xuICB2YXIgY3kwID0gY29zKHkwKSxcbiAgICAgIG4gPSB5MCA9PT0geTEgPyBzaW4oeTApIDogKGN5MCAtIGNvcyh5MSkpIC8gKHkxIC0geTApLFxuICAgICAgZyA9IGN5MCAvIG4gKyB5MDtcblxuICBpZiAoYWJzKG4pIDwgZXBzaWxvbikgcmV0dXJuIGVxdWlyZWN0YW5ndWxhclJhdztcblxuICBmdW5jdGlvbiBwcm9qZWN0KHgsIHkpIHtcbiAgICB2YXIgZ3kgPSBnIC0geSwgbnggPSBuICogeDtcbiAgICByZXR1cm4gW2d5ICogc2luKG54KSwgZyAtIGd5ICogY29zKG54KV07XG4gIH1cblxuICBwcm9qZWN0LmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB2YXIgZ3kgPSBnIC0geTtcbiAgICByZXR1cm4gW2F0YW4yKHgsIGFicyhneSkpIC8gbiAqIHNpZ24oZ3kpLCBnIC0gc2lnbihuKSAqIHNxcnQoeCAqIHggKyBneSAqIGd5KV07XG4gIH07XG5cbiAgcmV0dXJuIHByb2plY3Q7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gY29uaWNQcm9qZWN0aW9uKGNvbmljRXF1aWRpc3RhbnRSYXcpXG4gICAgICAuc2NhbGUoMTMxLjE1NClcbiAgICAgIC5jZW50ZXIoWzAsIDEzLjkzODldKTtcbn1cbiIsImltcG9ydCB7YXNpbiwgY29zLCBzaW59IGZyb20gXCIuLi9tYXRoXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjeWxpbmRyaWNhbEVxdWFsQXJlYVJhdyhwaGkwKSB7XG4gIHZhciBjb3NQaGkwID0gY29zKHBoaTApO1xuXG4gIGZ1bmN0aW9uIGZvcndhcmQobGFtYmRhLCBwaGkpIHtcbiAgICByZXR1cm4gW2xhbWJkYSAqIGNvc1BoaTAsIHNpbihwaGkpIC8gY29zUGhpMF07XG4gIH1cblxuICBmb3J3YXJkLmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICByZXR1cm4gW3ggLyBjb3NQaGkwLCBhc2luKHkgKiBjb3NQaGkwKV07XG4gIH07XG5cbiAgcmV0dXJuIGZvcndhcmQ7XG59XG4iLCJpbXBvcnQgcHJvamVjdGlvbiBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IHthYnMsIGFzaW4sIGNvcywgZXBzaWxvbjIsIHNpbiwgc3FydH0gZnJvbSBcIi4uL21hdGguanNcIjtcblxudmFyIEExID0gMS4zNDAyNjQsXG4gICAgQTIgPSAtMC4wODExMDYsXG4gICAgQTMgPSAwLjAwMDg5MyxcbiAgICBBNCA9IDAuMDAzNzk2LFxuICAgIE0gPSBzcXJ0KDMpIC8gMixcbiAgICBpdGVyYXRpb25zID0gMTI7XG5cbmV4cG9ydCBmdW5jdGlvbiBlcXVhbEVhcnRoUmF3KGxhbWJkYSwgcGhpKSB7XG4gIHZhciBsID0gYXNpbihNICogc2luKHBoaSkpLCBsMiA9IGwgKiBsLCBsNiA9IGwyICogbDIgKiBsMjtcbiAgcmV0dXJuIFtcbiAgICBsYW1iZGEgKiBjb3MobCkgLyAoTSAqIChBMSArIDMgKiBBMiAqIGwyICsgbDYgKiAoNyAqIEEzICsgOSAqIEE0ICogbDIpKSksXG4gICAgbCAqIChBMSArIEEyICogbDIgKyBsNiAqIChBMyArIEE0ICogbDIpKVxuICBdO1xufVxuXG5lcXVhbEVhcnRoUmF3LmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgdmFyIGwgPSB5LCBsMiA9IGwgKiBsLCBsNiA9IGwyICogbDIgKiBsMjtcbiAgZm9yICh2YXIgaSA9IDAsIGRlbHRhLCBmeSwgZnB5OyBpIDwgaXRlcmF0aW9uczsgKytpKSB7XG4gICAgZnkgPSBsICogKEExICsgQTIgKiBsMiArIGw2ICogKEEzICsgQTQgKiBsMikpIC0geTtcbiAgICBmcHkgPSBBMSArIDMgKiBBMiAqIGwyICsgbDYgKiAoNyAqIEEzICsgOSAqIEE0ICogbDIpO1xuICAgIGwgLT0gZGVsdGEgPSBmeSAvIGZweSwgbDIgPSBsICogbCwgbDYgPSBsMiAqIGwyICogbDI7XG4gICAgaWYgKGFicyhkZWx0YSkgPCBlcHNpbG9uMikgYnJlYWs7XG4gIH1cbiAgcmV0dXJuIFtcbiAgICBNICogeCAqIChBMSArIDMgKiBBMiAqIGwyICsgbDYgKiAoNyAqIEEzICsgOSAqIEE0ICogbDIpKSAvIGNvcyhsKSxcbiAgICBhc2luKHNpbihsKSAvIE0pXG4gIF07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHByb2plY3Rpb24oZXF1YWxFYXJ0aFJhdylcbiAgICAgIC5zY2FsZSgxNzcuMTU4KTtcbn1cbiIsImltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBlcXVpcmVjdGFuZ3VsYXJSYXcobGFtYmRhLCBwaGkpIHtcbiAgcmV0dXJuIFtsYW1iZGEsIHBoaV07XG59XG5cbmVxdWlyZWN0YW5ndWxhclJhdy5pbnZlcnQgPSBlcXVpcmVjdGFuZ3VsYXJSYXc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcHJvamVjdGlvbihlcXVpcmVjdGFuZ3VsYXJSYXcpXG4gICAgICAuc2NhbGUoMTUyLjYzKTtcbn1cbiIsImltcG9ydCB7ZGVmYXVsdCBhcyBnZW9TdHJlYW19IGZyb20gXCIuLi9zdHJlYW1cIjtcbmltcG9ydCBib3VuZHNTdHJlYW0gZnJvbSBcIi4uL3BhdGgvYm91bmRzXCI7XG5cbmZ1bmN0aW9uIGZpdChwcm9qZWN0aW9uLCBmaXRCb3VuZHMsIG9iamVjdCkge1xuICB2YXIgY2xpcCA9IHByb2plY3Rpb24uY2xpcEV4dGVudCAmJiBwcm9qZWN0aW9uLmNsaXBFeHRlbnQoKTtcbiAgcHJvamVjdGlvbi5zY2FsZSgxNTApLnRyYW5zbGF0ZShbMCwgMF0pO1xuICBpZiAoY2xpcCAhPSBudWxsKSBwcm9qZWN0aW9uLmNsaXBFeHRlbnQobnVsbCk7XG4gIGdlb1N0cmVhbShvYmplY3QsIHByb2plY3Rpb24uc3RyZWFtKGJvdW5kc1N0cmVhbSkpO1xuICBmaXRCb3VuZHMoYm91bmRzU3RyZWFtLnJlc3VsdCgpKTtcbiAgaWYgKGNsaXAgIT0gbnVsbCkgcHJvamVjdGlvbi5jbGlwRXh0ZW50KGNsaXApO1xuICByZXR1cm4gcHJvamVjdGlvbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpdEV4dGVudChwcm9qZWN0aW9uLCBleHRlbnQsIG9iamVjdCkge1xuICByZXR1cm4gZml0KHByb2plY3Rpb24sIGZ1bmN0aW9uKGIpIHtcbiAgICB2YXIgdyA9IGV4dGVudFsxXVswXSAtIGV4dGVudFswXVswXSxcbiAgICAgICAgaCA9IGV4dGVudFsxXVsxXSAtIGV4dGVudFswXVsxXSxcbiAgICAgICAgayA9IE1hdGgubWluKHcgLyAoYlsxXVswXSAtIGJbMF1bMF0pLCBoIC8gKGJbMV1bMV0gLSBiWzBdWzFdKSksXG4gICAgICAgIHggPSArZXh0ZW50WzBdWzBdICsgKHcgLSBrICogKGJbMV1bMF0gKyBiWzBdWzBdKSkgLyAyLFxuICAgICAgICB5ID0gK2V4dGVudFswXVsxXSArIChoIC0gayAqIChiWzFdWzFdICsgYlswXVsxXSkpIC8gMjtcbiAgICBwcm9qZWN0aW9uLnNjYWxlKDE1MCAqIGspLnRyYW5zbGF0ZShbeCwgeV0pO1xuICB9LCBvYmplY3QpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZml0U2l6ZShwcm9qZWN0aW9uLCBzaXplLCBvYmplY3QpIHtcbiAgcmV0dXJuIGZpdEV4dGVudChwcm9qZWN0aW9uLCBbWzAsIDBdLCBzaXplXSwgb2JqZWN0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpdFdpZHRoKHByb2plY3Rpb24sIHdpZHRoLCBvYmplY3QpIHtcbiAgcmV0dXJuIGZpdChwcm9qZWN0aW9uLCBmdW5jdGlvbihiKSB7XG4gICAgdmFyIHcgPSArd2lkdGgsXG4gICAgICAgIGsgPSB3IC8gKGJbMV1bMF0gLSBiWzBdWzBdKSxcbiAgICAgICAgeCA9ICh3IC0gayAqIChiWzFdWzBdICsgYlswXVswXSkpIC8gMixcbiAgICAgICAgeSA9IC1rICogYlswXVsxXTtcbiAgICBwcm9qZWN0aW9uLnNjYWxlKDE1MCAqIGspLnRyYW5zbGF0ZShbeCwgeV0pO1xuICB9LCBvYmplY3QpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZml0SGVpZ2h0KHByb2plY3Rpb24sIGhlaWdodCwgb2JqZWN0KSB7XG4gIHJldHVybiBmaXQocHJvamVjdGlvbiwgZnVuY3Rpb24oYikge1xuICAgIHZhciBoID0gK2hlaWdodCxcbiAgICAgICAgayA9IGggLyAoYlsxXVsxXSAtIGJbMF1bMV0pLFxuICAgICAgICB4ID0gLWsgKiBiWzBdWzBdLFxuICAgICAgICB5ID0gKGggLSBrICogKGJbMV1bMV0gKyBiWzBdWzFdKSkgLyAyO1xuICAgIHByb2plY3Rpb24uc2NhbGUoMTUwICogaykudHJhbnNsYXRlKFt4LCB5XSk7XG4gIH0sIG9iamVjdCk7XG59XG4iLCJpbXBvcnQge2F0YW4sIGNvcywgc2lufSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHthemltdXRoYWxJbnZlcnR9IGZyb20gXCIuL2F6aW11dGhhbFwiO1xuaW1wb3J0IHByb2plY3Rpb24gZnJvbSBcIi4vaW5kZXhcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGdub21vbmljUmF3KHgsIHkpIHtcbiAgdmFyIGN5ID0gY29zKHkpLCBrID0gY29zKHgpICogY3k7XG4gIHJldHVybiBbY3kgKiBzaW4oeCkgLyBrLCBzaW4oeSkgLyBrXTtcbn1cblxuZ25vbW9uaWNSYXcuaW52ZXJ0ID0gYXppbXV0aGFsSW52ZXJ0KGF0YW4pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHByb2plY3Rpb24oZ25vbW9uaWNSYXcpXG4gICAgICAuc2NhbGUoMTQ0LjA0OSlcbiAgICAgIC5jbGlwQW5nbGUoNjApO1xufVxuIiwiaW1wb3J0IGNsaXBSZWN0YW5nbGUgZnJvbSBcIi4uL2NsaXAvcmVjdGFuZ2xlXCI7XG5pbXBvcnQgaWRlbnRpdHkgZnJvbSBcIi4uL2lkZW50aXR5XCI7XG5pbXBvcnQge3RyYW5zZm9ybWVyfSBmcm9tIFwiLi4vdHJhbnNmb3JtXCI7XG5pbXBvcnQge2ZpdEV4dGVudCwgZml0U2l6ZSwgZml0V2lkdGgsIGZpdEhlaWdodH0gZnJvbSBcIi4vZml0XCI7XG5cbmZ1bmN0aW9uIHNjYWxlVHJhbnNsYXRlKGt4LCBreSwgdHgsIHR5KSB7XG4gIHJldHVybiBreCA9PT0gMSAmJiBreSA9PT0gMSAmJiB0eCA9PT0gMCAmJiB0eSA9PT0gMCA/IGlkZW50aXR5IDogdHJhbnNmb3JtZXIoe1xuICAgIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgICB0aGlzLnN0cmVhbS5wb2ludCh4ICoga3ggKyB0eCwgeSAqIGt5ICsgdHkpO1xuICAgIH1cbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgayA9IDEsIHR4ID0gMCwgdHkgPSAwLCBzeCA9IDEsIHN5ID0gMSwgdHJhbnNmb3JtID0gaWRlbnRpdHksIC8vIHNjYWxlLCB0cmFuc2xhdGUgYW5kIHJlZmxlY3RcbiAgICAgIHgwID0gbnVsbCwgeTAsIHgxLCB5MSwgLy8gY2xpcCBleHRlbnRcbiAgICAgIHBvc3RjbGlwID0gaWRlbnRpdHksXG4gICAgICBjYWNoZSxcbiAgICAgIGNhY2hlU3RyZWFtLFxuICAgICAgcHJvamVjdGlvbjtcblxuICBmdW5jdGlvbiByZXNldCgpIHtcbiAgICBjYWNoZSA9IGNhY2hlU3RyZWFtID0gbnVsbDtcbiAgICByZXR1cm4gcHJvamVjdGlvbjtcbiAgfVxuXG4gIHJldHVybiBwcm9qZWN0aW9uID0ge1xuICAgIHN0cmVhbTogZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgICByZXR1cm4gY2FjaGUgJiYgY2FjaGVTdHJlYW0gPT09IHN0cmVhbSA/IGNhY2hlIDogY2FjaGUgPSB0cmFuc2Zvcm0ocG9zdGNsaXAoY2FjaGVTdHJlYW0gPSBzdHJlYW0pKTtcbiAgICB9LFxuICAgIHBvc3RjbGlwOiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwb3N0Y2xpcCA9IF8sIHgwID0geTAgPSB4MSA9IHkxID0gbnVsbCwgcmVzZXQoKSkgOiBwb3N0Y2xpcDtcbiAgICB9LFxuICAgIGNsaXBFeHRlbnQ6IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBvc3RjbGlwID0gXyA9PSBudWxsID8gKHgwID0geTAgPSB4MSA9IHkxID0gbnVsbCwgaWRlbnRpdHkpIDogY2xpcFJlY3RhbmdsZSh4MCA9ICtfWzBdWzBdLCB5MCA9ICtfWzBdWzFdLCB4MSA9ICtfWzFdWzBdLCB5MSA9ICtfWzFdWzFdKSwgcmVzZXQoKSkgOiB4MCA9PSBudWxsID8gbnVsbCA6IFtbeDAsIHkwXSwgW3gxLCB5MV1dO1xuICAgIH0sXG4gICAgc2NhbGU6IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRyYW5zZm9ybSA9IHNjYWxlVHJhbnNsYXRlKChrID0gK18pICogc3gsIGsgKiBzeSwgdHgsIHR5KSwgcmVzZXQoKSkgOiBrO1xuICAgIH0sXG4gICAgdHJhbnNsYXRlOiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0cmFuc2Zvcm0gPSBzY2FsZVRyYW5zbGF0ZShrICogc3gsIGsgKiBzeSwgdHggPSArX1swXSwgdHkgPSArX1sxXSksIHJlc2V0KCkpIDogW3R4LCB0eV07XG4gICAgfSxcbiAgICByZWZsZWN0WDogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodHJhbnNmb3JtID0gc2NhbGVUcmFuc2xhdGUoayAqIChzeCA9IF8gPyAtMSA6IDEpLCBrICogc3ksIHR4LCB0eSksIHJlc2V0KCkpIDogc3ggPCAwO1xuICAgIH0sXG4gICAgcmVmbGVjdFk6IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRyYW5zZm9ybSA9IHNjYWxlVHJhbnNsYXRlKGsgKiBzeCwgayAqIChzeSA9IF8gPyAtMSA6IDEpLCB0eCwgdHkpLCByZXNldCgpKSA6IHN5IDwgMDtcbiAgICB9LFxuICAgIGZpdEV4dGVudDogZnVuY3Rpb24oZXh0ZW50LCBvYmplY3QpIHtcbiAgICAgIHJldHVybiBmaXRFeHRlbnQocHJvamVjdGlvbiwgZXh0ZW50LCBvYmplY3QpO1xuICAgIH0sXG4gICAgZml0U2l6ZTogZnVuY3Rpb24oc2l6ZSwgb2JqZWN0KSB7XG4gICAgICByZXR1cm4gZml0U2l6ZShwcm9qZWN0aW9uLCBzaXplLCBvYmplY3QpO1xuICAgIH0sXG4gICAgZml0V2lkdGg6IGZ1bmN0aW9uKHdpZHRoLCBvYmplY3QpIHtcbiAgICAgIHJldHVybiBmaXRXaWR0aChwcm9qZWN0aW9uLCB3aWR0aCwgb2JqZWN0KTtcbiAgICB9LFxuICAgIGZpdEhlaWdodDogZnVuY3Rpb24oaGVpZ2h0LCBvYmplY3QpIHtcbiAgICAgIHJldHVybiBmaXRIZWlnaHQocHJvamVjdGlvbiwgaGVpZ2h0LCBvYmplY3QpO1xuICAgIH1cbiAgfTtcbn1cbiIsImltcG9ydCBjbGlwQW50aW1lcmlkaWFuIGZyb20gXCIuLi9jbGlwL2FudGltZXJpZGlhblwiO1xuaW1wb3J0IGNsaXBDaXJjbGUgZnJvbSBcIi4uL2NsaXAvY2lyY2xlXCI7XG5pbXBvcnQgY2xpcFJlY3RhbmdsZSBmcm9tIFwiLi4vY2xpcC9yZWN0YW5nbGVcIjtcbmltcG9ydCBjb21wb3NlIGZyb20gXCIuLi9jb21wb3NlXCI7XG5pbXBvcnQgaWRlbnRpdHkgZnJvbSBcIi4uL2lkZW50aXR5XCI7XG5pbXBvcnQge2NvcywgZGVncmVlcywgcmFkaWFucywgc2luLCBzcXJ0fSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHtyb3RhdGVSYWRpYW5zfSBmcm9tIFwiLi4vcm90YXRpb25cIjtcbmltcG9ydCB7dHJhbnNmb3JtZXJ9IGZyb20gXCIuLi90cmFuc2Zvcm1cIjtcbmltcG9ydCB7Zml0RXh0ZW50LCBmaXRTaXplLCBmaXRXaWR0aCwgZml0SGVpZ2h0fSBmcm9tIFwiLi9maXRcIjtcbmltcG9ydCByZXNhbXBsZSBmcm9tIFwiLi9yZXNhbXBsZVwiO1xuXG52YXIgdHJhbnNmb3JtUmFkaWFucyA9IHRyYW5zZm9ybWVyKHtcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB0aGlzLnN0cmVhbS5wb2ludCh4ICogcmFkaWFucywgeSAqIHJhZGlhbnMpO1xuICB9XG59KTtcblxuZnVuY3Rpb24gdHJhbnNmb3JtUm90YXRlKHJvdGF0ZSkge1xuICByZXR1cm4gdHJhbnNmb3JtZXIoe1xuICAgIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgICB2YXIgciA9IHJvdGF0ZSh4LCB5KTtcbiAgICAgIHJldHVybiB0aGlzLnN0cmVhbS5wb2ludChyWzBdLCByWzFdKTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzY2FsZVRyYW5zbGF0ZShrLCBkeCwgZHkpIHtcbiAgZnVuY3Rpb24gdHJhbnNmb3JtKHgsIHkpIHtcbiAgICByZXR1cm4gW2R4ICsgayAqIHgsIGR5IC0gayAqIHldO1xuICB9XG4gIHRyYW5zZm9ybS5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIFsoeCAtIGR4KSAvIGssIChkeSAtIHkpIC8ga107XG4gIH07XG4gIHJldHVybiB0cmFuc2Zvcm07XG59XG5cbmZ1bmN0aW9uIHNjYWxlVHJhbnNsYXRlUm90YXRlKGssIGR4LCBkeSwgYWxwaGEpIHtcbiAgdmFyIGNvc0FscGhhID0gY29zKGFscGhhKSxcbiAgICAgIHNpbkFscGhhID0gc2luKGFscGhhKSxcbiAgICAgIGEgPSBjb3NBbHBoYSAqIGssXG4gICAgICBiID0gc2luQWxwaGEgKiBrLFxuICAgICAgYWkgPSBjb3NBbHBoYSAvIGssXG4gICAgICBiaSA9IHNpbkFscGhhIC8gayxcbiAgICAgIGNpID0gKHNpbkFscGhhICogZHkgLSBjb3NBbHBoYSAqIGR4KSAvIGssXG4gICAgICBmaSA9IChzaW5BbHBoYSAqIGR4ICsgY29zQWxwaGEgKiBkeSkgLyBrO1xuICBmdW5jdGlvbiB0cmFuc2Zvcm0oeCwgeSkge1xuICAgIHJldHVybiBbYSAqIHggLSBiICogeSArIGR4LCBkeSAtIGIgKiB4IC0gYSAqIHldO1xuICB9XG4gIHRyYW5zZm9ybS5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIFthaSAqIHggLSBiaSAqIHkgKyBjaSwgZmkgLSBiaSAqIHggLSBhaSAqIHldO1xuICB9O1xuICByZXR1cm4gdHJhbnNmb3JtO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwcm9qZWN0aW9uKHByb2plY3QpIHtcbiAgcmV0dXJuIHByb2plY3Rpb25NdXRhdG9yKGZ1bmN0aW9uKCkgeyByZXR1cm4gcHJvamVjdDsgfSkoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb2plY3Rpb25NdXRhdG9yKHByb2plY3RBdCkge1xuICB2YXIgcHJvamVjdCxcbiAgICAgIGsgPSAxNTAsIC8vIHNjYWxlXG4gICAgICB4ID0gNDgwLCB5ID0gMjUwLCAvLyB0cmFuc2xhdGVcbiAgICAgIGxhbWJkYSA9IDAsIHBoaSA9IDAsIC8vIGNlbnRlclxuICAgICAgZGVsdGFMYW1iZGEgPSAwLCBkZWx0YVBoaSA9IDAsIGRlbHRhR2FtbWEgPSAwLCByb3RhdGUsIC8vIHByZS1yb3RhdGVcbiAgICAgIGFscGhhID0gMCwgLy8gcG9zdC1yb3RhdGVcbiAgICAgIHRoZXRhID0gbnVsbCwgcHJlY2xpcCA9IGNsaXBBbnRpbWVyaWRpYW4sIC8vIHByZS1jbGlwIGFuZ2xlXG4gICAgICB4MCA9IG51bGwsIHkwLCB4MSwgeTEsIHBvc3RjbGlwID0gaWRlbnRpdHksIC8vIHBvc3QtY2xpcCBleHRlbnRcbiAgICAgIGRlbHRhMiA9IDAuNSwgLy8gcHJlY2lzaW9uXG4gICAgICBwcm9qZWN0UmVzYW1wbGUsXG4gICAgICBwcm9qZWN0VHJhbnNmb3JtLFxuICAgICAgcHJvamVjdFJvdGF0ZVRyYW5zZm9ybSxcbiAgICAgIGNhY2hlLFxuICAgICAgY2FjaGVTdHJlYW07XG5cbiAgZnVuY3Rpb24gcHJvamVjdGlvbihwb2ludCkge1xuICAgIHJldHVybiBwcm9qZWN0Um90YXRlVHJhbnNmb3JtKHBvaW50WzBdICogcmFkaWFucywgcG9pbnRbMV0gKiByYWRpYW5zKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGludmVydChwb2ludCkge1xuICAgIHBvaW50ID0gcHJvamVjdFJvdGF0ZVRyYW5zZm9ybS5pbnZlcnQocG9pbnRbMF0sIHBvaW50WzFdKTtcbiAgICByZXR1cm4gcG9pbnQgJiYgW3BvaW50WzBdICogZGVncmVlcywgcG9pbnRbMV0gKiBkZWdyZWVzXTtcbiAgfVxuXG4gIHByb2plY3Rpb24uc3RyZWFtID0gZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgcmV0dXJuIGNhY2hlICYmIGNhY2hlU3RyZWFtID09PSBzdHJlYW0gPyBjYWNoZSA6IGNhY2hlID0gdHJhbnNmb3JtUmFkaWFucyh0cmFuc2Zvcm1Sb3RhdGUocm90YXRlKShwcmVjbGlwKHByb2plY3RSZXNhbXBsZShwb3N0Y2xpcChjYWNoZVN0cmVhbSA9IHN0cmVhbSkpKSkpO1xuICB9O1xuXG4gIHByb2plY3Rpb24ucHJlY2xpcCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwcmVjbGlwID0gXywgdGhldGEgPSB1bmRlZmluZWQsIHJlc2V0KCkpIDogcHJlY2xpcDtcbiAgfTtcblxuICBwcm9qZWN0aW9uLnBvc3RjbGlwID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBvc3RjbGlwID0gXywgeDAgPSB5MCA9IHgxID0geTEgPSBudWxsLCByZXNldCgpKSA6IHBvc3RjbGlwO1xuICB9O1xuXG4gIHByb2plY3Rpb24uY2xpcEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHByZWNsaXAgPSArXyA/IGNsaXBDaXJjbGUodGhldGEgPSBfICogcmFkaWFucykgOiAodGhldGEgPSBudWxsLCBjbGlwQW50aW1lcmlkaWFuKSwgcmVzZXQoKSkgOiB0aGV0YSAqIGRlZ3JlZXM7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5jbGlwRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBvc3RjbGlwID0gXyA9PSBudWxsID8gKHgwID0geTAgPSB4MSA9IHkxID0gbnVsbCwgaWRlbnRpdHkpIDogY2xpcFJlY3RhbmdsZSh4MCA9ICtfWzBdWzBdLCB5MCA9ICtfWzBdWzFdLCB4MSA9ICtfWzFdWzBdLCB5MSA9ICtfWzFdWzFdKSwgcmVzZXQoKSkgOiB4MCA9PSBudWxsID8gbnVsbCA6IFtbeDAsIHkwXSwgW3gxLCB5MV1dO1xuICB9O1xuXG4gIHByb2plY3Rpb24uc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoayA9ICtfLCByZWNlbnRlcigpKSA6IGs7XG4gIH07XG5cbiAgcHJvamVjdGlvbi50cmFuc2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9ICtfWzBdLCB5ID0gK19bMV0sIHJlY2VudGVyKCkpIDogW3gsIHldO1xuICB9O1xuXG4gIHByb2plY3Rpb24uY2VudGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGxhbWJkYSA9IF9bMF0gJSAzNjAgKiByYWRpYW5zLCBwaGkgPSBfWzFdICUgMzYwICogcmFkaWFucywgcmVjZW50ZXIoKSkgOiBbbGFtYmRhICogZGVncmVlcywgcGhpICogZGVncmVlc107XG4gIH07XG5cbiAgcHJvamVjdGlvbi5yb3RhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZGVsdGFMYW1iZGEgPSBfWzBdICUgMzYwICogcmFkaWFucywgZGVsdGFQaGkgPSBfWzFdICUgMzYwICogcmFkaWFucywgZGVsdGFHYW1tYSA9IF8ubGVuZ3RoID4gMiA/IF9bMl0gJSAzNjAgKiByYWRpYW5zIDogMCwgcmVjZW50ZXIoKSkgOiBbZGVsdGFMYW1iZGEgKiBkZWdyZWVzLCBkZWx0YVBoaSAqIGRlZ3JlZXMsIGRlbHRhR2FtbWEgKiBkZWdyZWVzXTtcbiAgfTtcblxuICBwcm9qZWN0aW9uLmFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGFscGhhID0gXyAlIDM2MCAqIHJhZGlhbnMsIHJlY2VudGVyKCkpIDogYWxwaGEgKiBkZWdyZWVzO1xuICB9O1xuXG4gIHByb2plY3Rpb24ucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHByb2plY3RSZXNhbXBsZSA9IHJlc2FtcGxlKHByb2plY3RUcmFuc2Zvcm0sIGRlbHRhMiA9IF8gKiBfKSwgcmVzZXQoKSkgOiBzcXJ0KGRlbHRhMik7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5maXRFeHRlbnQgPSBmdW5jdGlvbihleHRlbnQsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRFeHRlbnQocHJvamVjdGlvbiwgZXh0ZW50LCBvYmplY3QpO1xuICB9O1xuXG4gIHByb2plY3Rpb24uZml0U2l6ZSA9IGZ1bmN0aW9uKHNpemUsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRTaXplKHByb2plY3Rpb24sIHNpemUsIG9iamVjdCk7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5maXRXaWR0aCA9IGZ1bmN0aW9uKHdpZHRoLCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0V2lkdGgocHJvamVjdGlvbiwgd2lkdGgsIG9iamVjdCk7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5maXRIZWlnaHQgPSBmdW5jdGlvbihoZWlnaHQsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRIZWlnaHQocHJvamVjdGlvbiwgaGVpZ2h0LCBvYmplY3QpO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHJlY2VudGVyKCkge1xuICAgIHZhciBjZW50ZXIgPSBzY2FsZVRyYW5zbGF0ZVJvdGF0ZShrLCAwLCAwLCBhbHBoYSkuYXBwbHkobnVsbCwgcHJvamVjdChsYW1iZGEsIHBoaSkpLFxuICAgICAgICB0cmFuc2Zvcm0gPSAoYWxwaGEgPyBzY2FsZVRyYW5zbGF0ZVJvdGF0ZSA6IHNjYWxlVHJhbnNsYXRlKShrLCB4IC0gY2VudGVyWzBdLCB5IC0gY2VudGVyWzFdLCBhbHBoYSk7XG4gICAgcm90YXRlID0gcm90YXRlUmFkaWFucyhkZWx0YUxhbWJkYSwgZGVsdGFQaGksIGRlbHRhR2FtbWEpO1xuICAgIHByb2plY3RUcmFuc2Zvcm0gPSBjb21wb3NlKHByb2plY3QsIHRyYW5zZm9ybSk7XG4gICAgcHJvamVjdFJvdGF0ZVRyYW5zZm9ybSA9IGNvbXBvc2Uocm90YXRlLCBwcm9qZWN0VHJhbnNmb3JtKTtcbiAgICBwcm9qZWN0UmVzYW1wbGUgPSByZXNhbXBsZShwcm9qZWN0VHJhbnNmb3JtLCBkZWx0YTIpO1xuICAgIHJldHVybiByZXNldCgpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgY2FjaGUgPSBjYWNoZVN0cmVhbSA9IG51bGw7XG4gICAgcmV0dXJuIHByb2plY3Rpb247XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcHJvamVjdCA9IHByb2plY3RBdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIHByb2plY3Rpb24uaW52ZXJ0ID0gcHJvamVjdC5pbnZlcnQgJiYgaW52ZXJ0O1xuICAgIHJldHVybiByZWNlbnRlcigpO1xuICB9O1xufVxuIiwiaW1wb3J0IHthdGFuLCBleHAsIGhhbGZQaSwgbG9nLCBwaSwgdGFuLCB0YXV9IGZyb20gXCIuLi9tYXRoXCI7XG5pbXBvcnQgcm90YXRpb24gZnJvbSBcIi4uL3JvdGF0aW9uXCI7XG5pbXBvcnQgcHJvamVjdGlvbiBmcm9tIFwiLi9pbmRleFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gbWVyY2F0b3JSYXcobGFtYmRhLCBwaGkpIHtcbiAgcmV0dXJuIFtsYW1iZGEsIGxvZyh0YW4oKGhhbGZQaSArIHBoaSkgLyAyKSldO1xufVxuXG5tZXJjYXRvclJhdy5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gIHJldHVybiBbeCwgMiAqIGF0YW4oZXhwKHkpKSAtIGhhbGZQaV07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG1lcmNhdG9yUHJvamVjdGlvbihtZXJjYXRvclJhdylcbiAgICAgIC5zY2FsZSg5NjEgLyB0YXUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWVyY2F0b3JQcm9qZWN0aW9uKHByb2plY3QpIHtcbiAgdmFyIG0gPSBwcm9qZWN0aW9uKHByb2plY3QpLFxuICAgICAgY2VudGVyID0gbS5jZW50ZXIsXG4gICAgICBzY2FsZSA9IG0uc2NhbGUsXG4gICAgICB0cmFuc2xhdGUgPSBtLnRyYW5zbGF0ZSxcbiAgICAgIGNsaXBFeHRlbnQgPSBtLmNsaXBFeHRlbnQsXG4gICAgICB4MCA9IG51bGwsIHkwLCB4MSwgeTE7IC8vIGNsaXAgZXh0ZW50XG5cbiAgbS5zY2FsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzY2FsZShfKSwgcmVjbGlwKCkpIDogc2NhbGUoKTtcbiAgfTtcblxuICBtLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0cmFuc2xhdGUoXyksIHJlY2xpcCgpKSA6IHRyYW5zbGF0ZSgpO1xuICB9O1xuXG4gIG0uY2VudGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNlbnRlcihfKSwgcmVjbGlwKCkpIDogY2VudGVyKCk7XG4gIH07XG5cbiAgbS5jbGlwRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKChfID09IG51bGwgPyB4MCA9IHkwID0geDEgPSB5MSA9IG51bGwgOiAoeDAgPSArX1swXVswXSwgeTAgPSArX1swXVsxXSwgeDEgPSArX1sxXVswXSwgeTEgPSArX1sxXVsxXSkpLCByZWNsaXAoKSkgOiB4MCA9PSBudWxsID8gbnVsbCA6IFtbeDAsIHkwXSwgW3gxLCB5MV1dO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHJlY2xpcCgpIHtcbiAgICB2YXIgayA9IHBpICogc2NhbGUoKSxcbiAgICAgICAgdCA9IG0ocm90YXRpb24obS5yb3RhdGUoKSkuaW52ZXJ0KFswLCAwXSkpO1xuICAgIHJldHVybiBjbGlwRXh0ZW50KHgwID09IG51bGxcbiAgICAgICAgPyBbW3RbMF0gLSBrLCB0WzFdIC0ga10sIFt0WzBdICsgaywgdFsxXSArIGtdXSA6IHByb2plY3QgPT09IG1lcmNhdG9yUmF3XG4gICAgICAgID8gW1tNYXRoLm1heCh0WzBdIC0gaywgeDApLCB5MF0sIFtNYXRoLm1pbih0WzBdICsgaywgeDEpLCB5MV1dXG4gICAgICAgIDogW1t4MCwgTWF0aC5tYXgodFsxXSAtIGssIHkwKV0sIFt4MSwgTWF0aC5taW4odFsxXSArIGssIHkxKV1dKTtcbiAgfVxuXG4gIHJldHVybiByZWNsaXAoKTtcbn1cbiIsImltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4XCI7XG5pbXBvcnQge2FicywgZXBzaWxvbn0gZnJvbSBcIi4uL21hdGhcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG5hdHVyYWxFYXJ0aDFSYXcobGFtYmRhLCBwaGkpIHtcbiAgdmFyIHBoaTIgPSBwaGkgKiBwaGksIHBoaTQgPSBwaGkyICogcGhpMjtcbiAgcmV0dXJuIFtcbiAgICBsYW1iZGEgKiAoMC44NzA3IC0gMC4xMzE5NzkgKiBwaGkyICsgcGhpNCAqICgtMC4wMTM3OTEgKyBwaGk0ICogKDAuMDAzOTcxICogcGhpMiAtIDAuMDAxNTI5ICogcGhpNCkpKSxcbiAgICBwaGkgKiAoMS4wMDcyMjYgKyBwaGkyICogKDAuMDE1MDg1ICsgcGhpNCAqICgtMC4wNDQ0NzUgKyAwLjAyODg3NCAqIHBoaTIgLSAwLjAwNTkxNiAqIHBoaTQpKSlcbiAgXTtcbn1cblxubmF0dXJhbEVhcnRoMVJhdy5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gIHZhciBwaGkgPSB5LCBpID0gMjUsIGRlbHRhO1xuICBkbyB7XG4gICAgdmFyIHBoaTIgPSBwaGkgKiBwaGksIHBoaTQgPSBwaGkyICogcGhpMjtcbiAgICBwaGkgLT0gZGVsdGEgPSAocGhpICogKDEuMDA3MjI2ICsgcGhpMiAqICgwLjAxNTA4NSArIHBoaTQgKiAoLTAuMDQ0NDc1ICsgMC4wMjg4NzQgKiBwaGkyIC0gMC4wMDU5MTYgKiBwaGk0KSkpIC0geSkgL1xuICAgICAgICAoMS4wMDcyMjYgKyBwaGkyICogKDAuMDE1MDg1ICogMyArIHBoaTQgKiAoLTAuMDQ0NDc1ICogNyArIDAuMDI4ODc0ICogOSAqIHBoaTIgLSAwLjAwNTkxNiAqIDExICogcGhpNCkpKTtcbiAgfSB3aGlsZSAoYWJzKGRlbHRhKSA+IGVwc2lsb24gJiYgLS1pID4gMCk7XG4gIHJldHVybiBbXG4gICAgeCAvICgwLjg3MDcgKyAocGhpMiA9IHBoaSAqIHBoaSkgKiAoLTAuMTMxOTc5ICsgcGhpMiAqICgtMC4wMTM3OTEgKyBwaGkyICogcGhpMiAqIHBoaTIgKiAoMC4wMDM5NzEgLSAwLjAwMTUyOSAqIHBoaTIpKSkpLFxuICAgIHBoaVxuICBdO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBwcm9qZWN0aW9uKG5hdHVyYWxFYXJ0aDFSYXcpXG4gICAgICAuc2NhbGUoMTc1LjI5NSk7XG59XG4iLCJpbXBvcnQge2FzaW4sIGNvcywgZXBzaWxvbiwgc2lufSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHthemltdXRoYWxJbnZlcnR9IGZyb20gXCIuL2F6aW11dGhhbFwiO1xuaW1wb3J0IHByb2plY3Rpb24gZnJvbSBcIi4vaW5kZXhcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG9ydGhvZ3JhcGhpY1Jhdyh4LCB5KSB7XG4gIHJldHVybiBbY29zKHkpICogc2luKHgpLCBzaW4oeSldO1xufVxuXG5vcnRob2dyYXBoaWNSYXcuaW52ZXJ0ID0gYXppbXV0aGFsSW52ZXJ0KGFzaW4pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHByb2plY3Rpb24ob3J0aG9ncmFwaGljUmF3KVxuICAgICAgLnNjYWxlKDI0OS41KVxuICAgICAgLmNsaXBBbmdsZSg5MCArIGVwc2lsb24pO1xufVxuIiwiaW1wb3J0IHtjYXJ0ZXNpYW59IGZyb20gXCIuLi9jYXJ0ZXNpYW5cIjtcbmltcG9ydCB7YWJzLCBhc2luLCBhdGFuMiwgY29zLCBlcHNpbG9uLCByYWRpYW5zLCBzcXJ0fSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHt0cmFuc2Zvcm1lcn0gZnJvbSBcIi4uL3RyYW5zZm9ybVwiO1xuXG52YXIgbWF4RGVwdGggPSAxNiwgLy8gbWF4aW11bSBkZXB0aCBvZiBzdWJkaXZpc2lvblxuICAgIGNvc01pbkRpc3RhbmNlID0gY29zKDMwICogcmFkaWFucyk7IC8vIGNvcyhtaW5pbXVtIGFuZ3VsYXIgZGlzdGFuY2UpXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHByb2plY3QsIGRlbHRhMikge1xuICByZXR1cm4gK2RlbHRhMiA/IHJlc2FtcGxlKHByb2plY3QsIGRlbHRhMikgOiByZXNhbXBsZU5vbmUocHJvamVjdCk7XG59XG5cbmZ1bmN0aW9uIHJlc2FtcGxlTm9uZShwcm9qZWN0KSB7XG4gIHJldHVybiB0cmFuc2Zvcm1lcih7XG4gICAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIHggPSBwcm9qZWN0KHgsIHkpO1xuICAgICAgdGhpcy5zdHJlYW0ucG9pbnQoeFswXSwgeFsxXSk7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gcmVzYW1wbGUocHJvamVjdCwgZGVsdGEyKSB7XG5cbiAgZnVuY3Rpb24gcmVzYW1wbGVMaW5lVG8oeDAsIHkwLCBsYW1iZGEwLCBhMCwgYjAsIGMwLCB4MSwgeTEsIGxhbWJkYTEsIGExLCBiMSwgYzEsIGRlcHRoLCBzdHJlYW0pIHtcbiAgICB2YXIgZHggPSB4MSAtIHgwLFxuICAgICAgICBkeSA9IHkxIC0geTAsXG4gICAgICAgIGQyID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgaWYgKGQyID4gNCAqIGRlbHRhMiAmJiBkZXB0aC0tKSB7XG4gICAgICB2YXIgYSA9IGEwICsgYTEsXG4gICAgICAgICAgYiA9IGIwICsgYjEsXG4gICAgICAgICAgYyA9IGMwICsgYzEsXG4gICAgICAgICAgbSA9IHNxcnQoYSAqIGEgKyBiICogYiArIGMgKiBjKSxcbiAgICAgICAgICBwaGkyID0gYXNpbihjIC89IG0pLFxuICAgICAgICAgIGxhbWJkYTIgPSBhYnMoYWJzKGMpIC0gMSkgPCBlcHNpbG9uIHx8IGFicyhsYW1iZGEwIC0gbGFtYmRhMSkgPCBlcHNpbG9uID8gKGxhbWJkYTAgKyBsYW1iZGExKSAvIDIgOiBhdGFuMihiLCBhKSxcbiAgICAgICAgICBwID0gcHJvamVjdChsYW1iZGEyLCBwaGkyKSxcbiAgICAgICAgICB4MiA9IHBbMF0sXG4gICAgICAgICAgeTIgPSBwWzFdLFxuICAgICAgICAgIGR4MiA9IHgyIC0geDAsXG4gICAgICAgICAgZHkyID0geTIgLSB5MCxcbiAgICAgICAgICBkeiA9IGR5ICogZHgyIC0gZHggKiBkeTI7XG4gICAgICBpZiAoZHogKiBkeiAvIGQyID4gZGVsdGEyIC8vIHBlcnBlbmRpY3VsYXIgcHJvamVjdGVkIGRpc3RhbmNlXG4gICAgICAgICAgfHwgYWJzKChkeCAqIGR4MiArIGR5ICogZHkyKSAvIGQyIC0gMC41KSA+IDAuMyAvLyBtaWRwb2ludCBjbG9zZSB0byBhbiBlbmRcbiAgICAgICAgICB8fCBhMCAqIGExICsgYjAgKiBiMSArIGMwICogYzEgPCBjb3NNaW5EaXN0YW5jZSkgeyAvLyBhbmd1bGFyIGRpc3RhbmNlXG4gICAgICAgIHJlc2FtcGxlTGluZVRvKHgwLCB5MCwgbGFtYmRhMCwgYTAsIGIwLCBjMCwgeDIsIHkyLCBsYW1iZGEyLCBhIC89IG0sIGIgLz0gbSwgYywgZGVwdGgsIHN0cmVhbSk7XG4gICAgICAgIHN0cmVhbS5wb2ludCh4MiwgeTIpO1xuICAgICAgICByZXNhbXBsZUxpbmVUbyh4MiwgeTIsIGxhbWJkYTIsIGEsIGIsIGMsIHgxLCB5MSwgbGFtYmRhMSwgYTEsIGIxLCBjMSwgZGVwdGgsIHN0cmVhbSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBmdW5jdGlvbihzdHJlYW0pIHtcbiAgICB2YXIgbGFtYmRhMDAsIHgwMCwgeTAwLCBhMDAsIGIwMCwgYzAwLCAvLyBmaXJzdCBwb2ludFxuICAgICAgICBsYW1iZGEwLCB4MCwgeTAsIGEwLCBiMCwgYzA7IC8vIHByZXZpb3VzIHBvaW50XG5cbiAgICB2YXIgcmVzYW1wbGVTdHJlYW0gPSB7XG4gICAgICBwb2ludDogcG9pbnQsXG4gICAgICBsaW5lU3RhcnQ6IGxpbmVTdGFydCxcbiAgICAgIGxpbmVFbmQ6IGxpbmVFbmQsXG4gICAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkgeyBzdHJlYW0ucG9seWdvblN0YXJ0KCk7IHJlc2FtcGxlU3RyZWFtLmxpbmVTdGFydCA9IHJpbmdTdGFydDsgfSxcbiAgICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkgeyBzdHJlYW0ucG9seWdvbkVuZCgpOyByZXNhbXBsZVN0cmVhbS5saW5lU3RhcnQgPSBsaW5lU3RhcnQ7IH1cbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gcG9pbnQoeCwgeSkge1xuICAgICAgeCA9IHByb2plY3QoeCwgeSk7XG4gICAgICBzdHJlYW0ucG9pbnQoeFswXSwgeFsxXSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbGluZVN0YXJ0KCkge1xuICAgICAgeDAgPSBOYU47XG4gICAgICByZXNhbXBsZVN0cmVhbS5wb2ludCA9IGxpbmVQb2ludDtcbiAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsaW5lUG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgICAgIHZhciBjID0gY2FydGVzaWFuKFtsYW1iZGEsIHBoaV0pLCBwID0gcHJvamVjdChsYW1iZGEsIHBoaSk7XG4gICAgICByZXNhbXBsZUxpbmVUbyh4MCwgeTAsIGxhbWJkYTAsIGEwLCBiMCwgYzAsIHgwID0gcFswXSwgeTAgPSBwWzFdLCBsYW1iZGEwID0gbGFtYmRhLCBhMCA9IGNbMF0sIGIwID0gY1sxXSwgYzAgPSBjWzJdLCBtYXhEZXB0aCwgc3RyZWFtKTtcbiAgICAgIHN0cmVhbS5wb2ludCh4MCwgeTApO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICByZXNhbXBsZVN0cmVhbS5wb2ludCA9IHBvaW50O1xuICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByaW5nU3RhcnQoKSB7XG4gICAgICBsaW5lU3RhcnQoKTtcbiAgICAgIHJlc2FtcGxlU3RyZWFtLnBvaW50ID0gcmluZ1BvaW50O1xuICAgICAgcmVzYW1wbGVTdHJlYW0ubGluZUVuZCA9IHJpbmdFbmQ7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmluZ1BvaW50KGxhbWJkYSwgcGhpKSB7XG4gICAgICBsaW5lUG9pbnQobGFtYmRhMDAgPSBsYW1iZGEsIHBoaSksIHgwMCA9IHgwLCB5MDAgPSB5MCwgYTAwID0gYTAsIGIwMCA9IGIwLCBjMDAgPSBjMDtcbiAgICAgIHJlc2FtcGxlU3RyZWFtLnBvaW50ID0gbGluZVBvaW50O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJpbmdFbmQoKSB7XG4gICAgICByZXNhbXBsZUxpbmVUbyh4MCwgeTAsIGxhbWJkYTAsIGEwLCBiMCwgYzAsIHgwMCwgeTAwLCBsYW1iZGEwMCwgYTAwLCBiMDAsIGMwMCwgbWF4RGVwdGgsIHN0cmVhbSk7XG4gICAgICByZXNhbXBsZVN0cmVhbS5saW5lRW5kID0gbGluZUVuZDtcbiAgICAgIGxpbmVFbmQoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzYW1wbGVTdHJlYW07XG4gIH07XG59XG4iLCJpbXBvcnQge2F0YW4sIGNvcywgc2lufSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHthemltdXRoYWxJbnZlcnR9IGZyb20gXCIuL2F6aW11dGhhbFwiO1xuaW1wb3J0IHByb2plY3Rpb24gZnJvbSBcIi4vaW5kZXhcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHN0ZXJlb2dyYXBoaWNSYXcoeCwgeSkge1xuICB2YXIgY3kgPSBjb3MoeSksIGsgPSAxICsgY29zKHgpICogY3k7XG4gIHJldHVybiBbY3kgKiBzaW4oeCkgLyBrLCBzaW4oeSkgLyBrXTtcbn1cblxuc3RlcmVvZ3JhcGhpY1Jhdy5pbnZlcnQgPSBhemltdXRoYWxJbnZlcnQoZnVuY3Rpb24oeikge1xuICByZXR1cm4gMiAqIGF0YW4oeik7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBwcm9qZWN0aW9uKHN0ZXJlb2dyYXBoaWNSYXcpXG4gICAgICAuc2NhbGUoMjUwKVxuICAgICAgLmNsaXBBbmdsZSgxNDIpO1xufVxuIiwiaW1wb3J0IHthdGFuLCBleHAsIGhhbGZQaSwgbG9nLCB0YW59IGZyb20gXCIuLi9tYXRoXCI7XG5pbXBvcnQge21lcmNhdG9yUHJvamVjdGlvbn0gZnJvbSBcIi4vbWVyY2F0b3JcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zdmVyc2VNZXJjYXRvclJhdyhsYW1iZGEsIHBoaSkge1xuICByZXR1cm4gW2xvZyh0YW4oKGhhbGZQaSArIHBoaSkgLyAyKSksIC1sYW1iZGFdO1xufVxuXG50cmFuc3ZlcnNlTWVyY2F0b3JSYXcuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICByZXR1cm4gWy15LCAyICogYXRhbihleHAoeCkpIC0gaGFsZlBpXTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgbSA9IG1lcmNhdG9yUHJvamVjdGlvbih0cmFuc3ZlcnNlTWVyY2F0b3JSYXcpLFxuICAgICAgY2VudGVyID0gbS5jZW50ZXIsXG4gICAgICByb3RhdGUgPSBtLnJvdGF0ZTtcblxuICBtLmNlbnRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IGNlbnRlcihbLV9bMV0sIF9bMF1dKSA6IChfID0gY2VudGVyKCksIFtfWzFdLCAtX1swXV0pO1xuICB9O1xuXG4gIG0ucm90YXRlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gcm90YXRlKFtfWzBdLCBfWzFdLCBfLmxlbmd0aCA+IDIgPyBfWzJdICsgOTAgOiA5MF0pIDogKF8gPSByb3RhdGUoKSwgW19bMF0sIF9bMV0sIF9bMl0gLSA5MF0pO1xuICB9O1xuXG4gIHJldHVybiByb3RhdGUoWzAsIDAsIDkwXSlcbiAgICAgIC5zY2FsZSgxNTkuMTU1KTtcbn1cbiIsImltcG9ydCBjb21wb3NlIGZyb20gXCIuL2NvbXBvc2VcIjtcbmltcG9ydCB7YWJzLCBhc2luLCBhdGFuMiwgY29zLCBkZWdyZWVzLCBwaSwgcmFkaWFucywgc2luLCB0YXV9IGZyb20gXCIuL21hdGhcIjtcblxuZnVuY3Rpb24gcm90YXRpb25JZGVudGl0eShsYW1iZGEsIHBoaSkge1xuICByZXR1cm4gW2FicyhsYW1iZGEpID4gcGkgPyBsYW1iZGEgKyBNYXRoLnJvdW5kKC1sYW1iZGEgLyB0YXUpICogdGF1IDogbGFtYmRhLCBwaGldO1xufVxuXG5yb3RhdGlvbklkZW50aXR5LmludmVydCA9IHJvdGF0aW9uSWRlbnRpdHk7XG5cbmV4cG9ydCBmdW5jdGlvbiByb3RhdGVSYWRpYW5zKGRlbHRhTGFtYmRhLCBkZWx0YVBoaSwgZGVsdGFHYW1tYSkge1xuICByZXR1cm4gKGRlbHRhTGFtYmRhICU9IHRhdSkgPyAoZGVsdGFQaGkgfHwgZGVsdGFHYW1tYSA/IGNvbXBvc2Uocm90YXRpb25MYW1iZGEoZGVsdGFMYW1iZGEpLCByb3RhdGlvblBoaUdhbW1hKGRlbHRhUGhpLCBkZWx0YUdhbW1hKSlcbiAgICA6IHJvdGF0aW9uTGFtYmRhKGRlbHRhTGFtYmRhKSlcbiAgICA6IChkZWx0YVBoaSB8fCBkZWx0YUdhbW1hID8gcm90YXRpb25QaGlHYW1tYShkZWx0YVBoaSwgZGVsdGFHYW1tYSlcbiAgICA6IHJvdGF0aW9uSWRlbnRpdHkpO1xufVxuXG5mdW5jdGlvbiBmb3J3YXJkUm90YXRpb25MYW1iZGEoZGVsdGFMYW1iZGEpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGxhbWJkYSwgcGhpKSB7XG4gICAgcmV0dXJuIGxhbWJkYSArPSBkZWx0YUxhbWJkYSwgW2xhbWJkYSA+IHBpID8gbGFtYmRhIC0gdGF1IDogbGFtYmRhIDwgLXBpID8gbGFtYmRhICsgdGF1IDogbGFtYmRhLCBwaGldO1xuICB9O1xufVxuXG5mdW5jdGlvbiByb3RhdGlvbkxhbWJkYShkZWx0YUxhbWJkYSkge1xuICB2YXIgcm90YXRpb24gPSBmb3J3YXJkUm90YXRpb25MYW1iZGEoZGVsdGFMYW1iZGEpO1xuICByb3RhdGlvbi5pbnZlcnQgPSBmb3J3YXJkUm90YXRpb25MYW1iZGEoLWRlbHRhTGFtYmRhKTtcbiAgcmV0dXJuIHJvdGF0aW9uO1xufVxuXG5mdW5jdGlvbiByb3RhdGlvblBoaUdhbW1hKGRlbHRhUGhpLCBkZWx0YUdhbW1hKSB7XG4gIHZhciBjb3NEZWx0YVBoaSA9IGNvcyhkZWx0YVBoaSksXG4gICAgICBzaW5EZWx0YVBoaSA9IHNpbihkZWx0YVBoaSksXG4gICAgICBjb3NEZWx0YUdhbW1hID0gY29zKGRlbHRhR2FtbWEpLFxuICAgICAgc2luRGVsdGFHYW1tYSA9IHNpbihkZWx0YUdhbW1hKTtcblxuICBmdW5jdGlvbiByb3RhdGlvbihsYW1iZGEsIHBoaSkge1xuICAgIHZhciBjb3NQaGkgPSBjb3MocGhpKSxcbiAgICAgICAgeCA9IGNvcyhsYW1iZGEpICogY29zUGhpLFxuICAgICAgICB5ID0gc2luKGxhbWJkYSkgKiBjb3NQaGksXG4gICAgICAgIHogPSBzaW4ocGhpKSxcbiAgICAgICAgayA9IHogKiBjb3NEZWx0YVBoaSArIHggKiBzaW5EZWx0YVBoaTtcbiAgICByZXR1cm4gW1xuICAgICAgYXRhbjIoeSAqIGNvc0RlbHRhR2FtbWEgLSBrICogc2luRGVsdGFHYW1tYSwgeCAqIGNvc0RlbHRhUGhpIC0geiAqIHNpbkRlbHRhUGhpKSxcbiAgICAgIGFzaW4oayAqIGNvc0RlbHRhR2FtbWEgKyB5ICogc2luRGVsdGFHYW1tYSlcbiAgICBdO1xuICB9XG5cbiAgcm90YXRpb24uaW52ZXJ0ID0gZnVuY3Rpb24obGFtYmRhLCBwaGkpIHtcbiAgICB2YXIgY29zUGhpID0gY29zKHBoaSksXG4gICAgICAgIHggPSBjb3MobGFtYmRhKSAqIGNvc1BoaSxcbiAgICAgICAgeSA9IHNpbihsYW1iZGEpICogY29zUGhpLFxuICAgICAgICB6ID0gc2luKHBoaSksXG4gICAgICAgIGsgPSB6ICogY29zRGVsdGFHYW1tYSAtIHkgKiBzaW5EZWx0YUdhbW1hO1xuICAgIHJldHVybiBbXG4gICAgICBhdGFuMih5ICogY29zRGVsdGFHYW1tYSArIHogKiBzaW5EZWx0YUdhbW1hLCB4ICogY29zRGVsdGFQaGkgKyBrICogc2luRGVsdGFQaGkpLFxuICAgICAgYXNpbihrICogY29zRGVsdGFQaGkgLSB4ICogc2luRGVsdGFQaGkpXG4gICAgXTtcbiAgfTtcblxuICByZXR1cm4gcm90YXRpb247XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHJvdGF0ZSkge1xuICByb3RhdGUgPSByb3RhdGVSYWRpYW5zKHJvdGF0ZVswXSAqIHJhZGlhbnMsIHJvdGF0ZVsxXSAqIHJhZGlhbnMsIHJvdGF0ZS5sZW5ndGggPiAyID8gcm90YXRlWzJdICogcmFkaWFucyA6IDApO1xuXG4gIGZ1bmN0aW9uIGZvcndhcmQoY29vcmRpbmF0ZXMpIHtcbiAgICBjb29yZGluYXRlcyA9IHJvdGF0ZShjb29yZGluYXRlc1swXSAqIHJhZGlhbnMsIGNvb3JkaW5hdGVzWzFdICogcmFkaWFucyk7XG4gICAgcmV0dXJuIGNvb3JkaW5hdGVzWzBdICo9IGRlZ3JlZXMsIGNvb3JkaW5hdGVzWzFdICo9IGRlZ3JlZXMsIGNvb3JkaW5hdGVzO1xuICB9XG5cbiAgZm9yd2FyZC5pbnZlcnQgPSBmdW5jdGlvbihjb29yZGluYXRlcykge1xuICAgIGNvb3JkaW5hdGVzID0gcm90YXRlLmludmVydChjb29yZGluYXRlc1swXSAqIHJhZGlhbnMsIGNvb3JkaW5hdGVzWzFdICogcmFkaWFucyk7XG4gICAgcmV0dXJuIGNvb3JkaW5hdGVzWzBdICo9IGRlZ3JlZXMsIGNvb3JkaW5hdGVzWzFdICo9IGRlZ3JlZXMsIGNvb3JkaW5hdGVzO1xuICB9O1xuXG4gIHJldHVybiBmb3J3YXJkO1xufVxuIiwiZnVuY3Rpb24gc3RyZWFtR2VvbWV0cnkoZ2VvbWV0cnksIHN0cmVhbSkge1xuICBpZiAoZ2VvbWV0cnkgJiYgc3RyZWFtR2VvbWV0cnlUeXBlLmhhc093blByb3BlcnR5KGdlb21ldHJ5LnR5cGUpKSB7XG4gICAgc3RyZWFtR2VvbWV0cnlUeXBlW2dlb21ldHJ5LnR5cGVdKGdlb21ldHJ5LCBzdHJlYW0pO1xuICB9XG59XG5cbnZhciBzdHJlYW1PYmplY3RUeXBlID0ge1xuICBGZWF0dXJlOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHN0cmVhbUdlb21ldHJ5KG9iamVjdC5nZW9tZXRyeSwgc3RyZWFtKTtcbiAgfSxcbiAgRmVhdHVyZUNvbGxlY3Rpb246IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gICAgdmFyIGZlYXR1cmVzID0gb2JqZWN0LmZlYXR1cmVzLCBpID0gLTEsIG4gPSBmZWF0dXJlcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIHN0cmVhbUdlb21ldHJ5KGZlYXR1cmVzW2ldLmdlb21ldHJ5LCBzdHJlYW0pO1xuICB9XG59O1xuXG52YXIgc3RyZWFtR2VvbWV0cnlUeXBlID0ge1xuICBTcGhlcmU6IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gICAgc3RyZWFtLnNwaGVyZSgpO1xuICB9LFxuICBQb2ludDogZnVuY3Rpb24ob2JqZWN0LCBzdHJlYW0pIHtcbiAgICBvYmplY3QgPSBvYmplY3QuY29vcmRpbmF0ZXM7XG4gICAgc3RyZWFtLnBvaW50KG9iamVjdFswXSwgb2JqZWN0WzFdLCBvYmplY3RbMl0pO1xuICB9LFxuICBNdWx0aVBvaW50OiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHZhciBjb29yZGluYXRlcyA9IG9iamVjdC5jb29yZGluYXRlcywgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBvYmplY3QgPSBjb29yZGluYXRlc1tpXSwgc3RyZWFtLnBvaW50KG9iamVjdFswXSwgb2JqZWN0WzFdLCBvYmplY3RbMl0pO1xuICB9LFxuICBMaW5lU3RyaW5nOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHN0cmVhbUxpbmUob2JqZWN0LmNvb3JkaW5hdGVzLCBzdHJlYW0sIDApO1xuICB9LFxuICBNdWx0aUxpbmVTdHJpbmc6IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gICAgdmFyIGNvb3JkaW5hdGVzID0gb2JqZWN0LmNvb3JkaW5hdGVzLCBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIHN0cmVhbUxpbmUoY29vcmRpbmF0ZXNbaV0sIHN0cmVhbSwgMCk7XG4gIH0sXG4gIFBvbHlnb246IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gICAgc3RyZWFtUG9seWdvbihvYmplY3QuY29vcmRpbmF0ZXMsIHN0cmVhbSk7XG4gIH0sXG4gIE11bHRpUG9seWdvbjogZnVuY3Rpb24ob2JqZWN0LCBzdHJlYW0pIHtcbiAgICB2YXIgY29vcmRpbmF0ZXMgPSBvYmplY3QuY29vcmRpbmF0ZXMsIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgc3RyZWFtUG9seWdvbihjb29yZGluYXRlc1tpXSwgc3RyZWFtKTtcbiAgfSxcbiAgR2VvbWV0cnlDb2xsZWN0aW9uOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHZhciBnZW9tZXRyaWVzID0gb2JqZWN0Lmdlb21ldHJpZXMsIGkgPSAtMSwgbiA9IGdlb21ldHJpZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBzdHJlYW1HZW9tZXRyeShnZW9tZXRyaWVzW2ldLCBzdHJlYW0pO1xuICB9XG59O1xuXG5mdW5jdGlvbiBzdHJlYW1MaW5lKGNvb3JkaW5hdGVzLCBzdHJlYW0sIGNsb3NlZCkge1xuICB2YXIgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoIC0gY2xvc2VkLCBjb29yZGluYXRlO1xuICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gIHdoaWxlICgrK2kgPCBuKSBjb29yZGluYXRlID0gY29vcmRpbmF0ZXNbaV0sIHN0cmVhbS5wb2ludChjb29yZGluYXRlWzBdLCBjb29yZGluYXRlWzFdLCBjb29yZGluYXRlWzJdKTtcbiAgc3RyZWFtLmxpbmVFbmQoKTtcbn1cblxuZnVuY3Rpb24gc3RyZWFtUG9seWdvbihjb29yZGluYXRlcywgc3RyZWFtKSB7XG4gIHZhciBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gIHN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgd2hpbGUgKCsraSA8IG4pIHN0cmVhbUxpbmUoY29vcmRpbmF0ZXNbaV0sIHN0cmVhbSwgMSk7XG4gIHN0cmVhbS5wb2x5Z29uRW5kKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gIGlmIChvYmplY3QgJiYgc3RyZWFtT2JqZWN0VHlwZS5oYXNPd25Qcm9wZXJ0eShvYmplY3QudHlwZSkpIHtcbiAgICBzdHJlYW1PYmplY3RUeXBlW29iamVjdC50eXBlXShvYmplY3QsIHN0cmVhbSk7XG4gIH0gZWxzZSB7XG4gICAgc3RyZWFtR2VvbWV0cnkob2JqZWN0LCBzdHJlYW0pO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihtZXRob2RzKSB7XG4gIHJldHVybiB7XG4gICAgc3RyZWFtOiB0cmFuc2Zvcm1lcihtZXRob2RzKVxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtZXIobWV0aG9kcykge1xuICByZXR1cm4gZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgdmFyIHMgPSBuZXcgVHJhbnNmb3JtU3RyZWFtO1xuICAgIGZvciAodmFyIGtleSBpbiBtZXRob2RzKSBzW2tleV0gPSBtZXRob2RzW2tleV07XG4gICAgcy5zdHJlYW0gPSBzdHJlYW07XG4gICAgcmV0dXJuIHM7XG4gIH07XG59XG5cbmZ1bmN0aW9uIFRyYW5zZm9ybVN0cmVhbSgpIHt9XG5cblRyYW5zZm9ybVN0cmVhbS5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBUcmFuc2Zvcm1TdHJlYW0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7IHRoaXMuc3RyZWFtLnBvaW50KHgsIHkpOyB9LFxuICBzcGhlcmU6IGZ1bmN0aW9uKCkgeyB0aGlzLnN0cmVhbS5zcGhlcmUoKTsgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHsgdGhpcy5zdHJlYW0ubGluZVN0YXJ0KCk7IH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkgeyB0aGlzLnN0cmVhbS5saW5lRW5kKCk7IH0sXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7IHRoaXMuc3RyZWFtLnBvbHlnb25TdGFydCgpOyB9LFxuICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHsgdGhpcy5zdHJlYW0ucG9seWdvbkVuZCgpOyB9XG59O1xuIiwiZXhwb3J0IGZ1bmN0aW9uIG9wdGlvbmFsKGYpIHtcbiAgcmV0dXJuIGYgPT0gbnVsbCA/IG51bGwgOiByZXF1aXJlZChmKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlcXVpcmVkKGYpIHtcbiAgaWYgKHR5cGVvZiBmICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIGY7XG59XG4iLCJleHBvcnQgdmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xuXG5leHBvcnQgZnVuY3Rpb24gc2h1ZmZsZShhcnJheSkge1xuICB2YXIgbSA9IGFycmF5Lmxlbmd0aCxcbiAgICAgIHQsXG4gICAgICBpO1xuXG4gIHdoaWxlIChtKSB7XG4gICAgaSA9IE1hdGgucmFuZG9tKCkgKiBtLS0gfCAwO1xuICAgIHQgPSBhcnJheVttXTtcbiAgICBhcnJheVttXSA9IGFycmF5W2ldO1xuICAgIGFycmF5W2ldID0gdDtcbiAgfVxuXG4gIHJldHVybiBhcnJheTtcbn1cbiIsImZ1bmN0aW9uIGRlZmF1bHRTZXBhcmF0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGEucGFyZW50ID09PSBiLnBhcmVudCA/IDEgOiAyO1xufVxuXG5mdW5jdGlvbiBtZWFuWChjaGlsZHJlbikge1xuICByZXR1cm4gY2hpbGRyZW4ucmVkdWNlKG1lYW5YUmVkdWNlLCAwKSAvIGNoaWxkcmVuLmxlbmd0aDtcbn1cblxuZnVuY3Rpb24gbWVhblhSZWR1Y2UoeCwgYykge1xuICByZXR1cm4geCArIGMueDtcbn1cblxuZnVuY3Rpb24gbWF4WShjaGlsZHJlbikge1xuICByZXR1cm4gMSArIGNoaWxkcmVuLnJlZHVjZShtYXhZUmVkdWNlLCAwKTtcbn1cblxuZnVuY3Rpb24gbWF4WVJlZHVjZSh5LCBjKSB7XG4gIHJldHVybiBNYXRoLm1heCh5LCBjLnkpO1xufVxuXG5mdW5jdGlvbiBsZWFmTGVmdChub2RlKSB7XG4gIHZhciBjaGlsZHJlbjtcbiAgd2hpbGUgKGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbikgbm9kZSA9IGNoaWxkcmVuWzBdO1xuICByZXR1cm4gbm9kZTtcbn1cblxuZnVuY3Rpb24gbGVhZlJpZ2h0KG5vZGUpIHtcbiAgdmFyIGNoaWxkcmVuO1xuICB3aGlsZSAoY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuKSBub2RlID0gY2hpbGRyZW5bY2hpbGRyZW4ubGVuZ3RoIC0gMV07XG4gIHJldHVybiBub2RlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHNlcGFyYXRpb24gPSBkZWZhdWx0U2VwYXJhdGlvbixcbiAgICAgIGR4ID0gMSxcbiAgICAgIGR5ID0gMSxcbiAgICAgIG5vZGVTaXplID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gY2x1c3Rlcihyb290KSB7XG4gICAgdmFyIHByZXZpb3VzTm9kZSxcbiAgICAgICAgeCA9IDA7XG5cbiAgICAvLyBGaXJzdCB3YWxrLCBjb21wdXRpbmcgdGhlIGluaXRpYWwgeCAmIHkgdmFsdWVzLlxuICAgIHJvb3QuZWFjaEFmdGVyKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW47XG4gICAgICBpZiAoY2hpbGRyZW4pIHtcbiAgICAgICAgbm9kZS54ID0gbWVhblgoY2hpbGRyZW4pO1xuICAgICAgICBub2RlLnkgPSBtYXhZKGNoaWxkcmVuKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5vZGUueCA9IHByZXZpb3VzTm9kZSA/IHggKz0gc2VwYXJhdGlvbihub2RlLCBwcmV2aW91c05vZGUpIDogMDtcbiAgICAgICAgbm9kZS55ID0gMDtcbiAgICAgICAgcHJldmlvdXNOb2RlID0gbm9kZTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHZhciBsZWZ0ID0gbGVhZkxlZnQocm9vdCksXG4gICAgICAgIHJpZ2h0ID0gbGVhZlJpZ2h0KHJvb3QpLFxuICAgICAgICB4MCA9IGxlZnQueCAtIHNlcGFyYXRpb24obGVmdCwgcmlnaHQpIC8gMixcbiAgICAgICAgeDEgPSByaWdodC54ICsgc2VwYXJhdGlvbihyaWdodCwgbGVmdCkgLyAyO1xuXG4gICAgLy8gU2Vjb25kIHdhbGssIG5vcm1hbGl6aW5nIHggJiB5IHRvIHRoZSBkZXNpcmVkIHNpemUuXG4gICAgcmV0dXJuIHJvb3QuZWFjaEFmdGVyKG5vZGVTaXplID8gZnVuY3Rpb24obm9kZSkge1xuICAgICAgbm9kZS54ID0gKG5vZGUueCAtIHJvb3QueCkgKiBkeDtcbiAgICAgIG5vZGUueSA9IChyb290LnkgLSBub2RlLnkpICogZHk7XG4gICAgfSA6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIG5vZGUueCA9IChub2RlLnggLSB4MCkgLyAoeDEgLSB4MCkgKiBkeDtcbiAgICAgIG5vZGUueSA9ICgxIC0gKHJvb3QueSA/IG5vZGUueSAvIHJvb3QueSA6IDEpKSAqIGR5O1xuICAgIH0pO1xuICB9XG5cbiAgY2x1c3Rlci5zZXBhcmF0aW9uID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNlcGFyYXRpb24gPSB4LCBjbHVzdGVyKSA6IHNlcGFyYXRpb247XG4gIH07XG5cbiAgY2x1c3Rlci5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG5vZGVTaXplID0gZmFsc2UsIGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIGNsdXN0ZXIpIDogKG5vZGVTaXplID8gbnVsbCA6IFtkeCwgZHldKTtcbiAgfTtcblxuICBjbHVzdGVyLm5vZGVTaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG5vZGVTaXplID0gdHJ1ZSwgZHggPSAreFswXSwgZHkgPSAreFsxXSwgY2x1c3RlcikgOiAobm9kZVNpemUgPyBbZHgsIGR5XSA6IG51bGwpO1xuICB9O1xuXG4gIHJldHVybiBjbHVzdGVyO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGNvbnN0YW50WmVybygpIHtcbiAgcmV0dXJuIDA7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBub2RlID0gdGhpcywgbm9kZXMgPSBbbm9kZV07XG4gIHdoaWxlIChub2RlID0gbm9kZS5wYXJlbnQpIHtcbiAgICBub2Rlcy5wdXNoKG5vZGUpO1xuICB9XG4gIHJldHVybiBub2Rlcztcbn1cbiIsImZ1bmN0aW9uIGNvdW50KG5vZGUpIHtcbiAgdmFyIHN1bSA9IDAsXG4gICAgICBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4sXG4gICAgICBpID0gY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoO1xuICBpZiAoIWkpIHN1bSA9IDE7XG4gIGVsc2Ugd2hpbGUgKC0taSA+PSAwKSBzdW0gKz0gY2hpbGRyZW5baV0udmFsdWU7XG4gIG5vZGUudmFsdWUgPSBzdW07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5lYWNoQWZ0ZXIoY291bnQpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBub2RlcyA9IFtdO1xuICB0aGlzLmVhY2goZnVuY3Rpb24obm9kZSkge1xuICAgIG5vZGVzLnB1c2gobm9kZSk7XG4gIH0pO1xuICByZXR1cm4gbm9kZXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgbm9kZSA9IHRoaXMsIGN1cnJlbnQsIG5leHQgPSBbbm9kZV0sIGNoaWxkcmVuLCBpLCBuO1xuICBkbyB7XG4gICAgY3VycmVudCA9IG5leHQucmV2ZXJzZSgpLCBuZXh0ID0gW107XG4gICAgd2hpbGUgKG5vZGUgPSBjdXJyZW50LnBvcCgpKSB7XG4gICAgICBjYWxsYmFjayhub2RlKSwgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgICAgaWYgKGNoaWxkcmVuKSBmb3IgKGkgPSAwLCBuID0gY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIG5leHQucHVzaChjaGlsZHJlbltpXSk7XG4gICAgICB9XG4gICAgfVxuICB9IHdoaWxlIChuZXh0Lmxlbmd0aCk7XG4gIHJldHVybiB0aGlzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIG5vZGUgPSB0aGlzLCBub2RlcyA9IFtub2RlXSwgbmV4dCA9IFtdLCBjaGlsZHJlbiwgaSwgbjtcbiAgd2hpbGUgKG5vZGUgPSBub2Rlcy5wb3AoKSkge1xuICAgIG5leHQucHVzaChub2RlKSwgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgIGlmIChjaGlsZHJlbikgZm9yIChpID0gMCwgbiA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZXMucHVzaChjaGlsZHJlbltpXSk7XG4gICAgfVxuICB9XG4gIHdoaWxlIChub2RlID0gbmV4dC5wb3AoKSkge1xuICAgIGNhbGxiYWNrKG5vZGUpO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIG5vZGUgPSB0aGlzLCBub2RlcyA9IFtub2RlXSwgY2hpbGRyZW4sIGk7XG4gIHdoaWxlIChub2RlID0gbm9kZXMucG9wKCkpIHtcbiAgICBjYWxsYmFjayhub2RlKSwgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgIGlmIChjaGlsZHJlbikgZm9yIChpID0gY2hpbGRyZW4ubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgIG5vZGVzLnB1c2goY2hpbGRyZW5baV0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbiIsImltcG9ydCBub2RlX2NvdW50IGZyb20gXCIuL2NvdW50XCI7XG5pbXBvcnQgbm9kZV9lYWNoIGZyb20gXCIuL2VhY2hcIjtcbmltcG9ydCBub2RlX2VhY2hCZWZvcmUgZnJvbSBcIi4vZWFjaEJlZm9yZVwiO1xuaW1wb3J0IG5vZGVfZWFjaEFmdGVyIGZyb20gXCIuL2VhY2hBZnRlclwiO1xuaW1wb3J0IG5vZGVfc3VtIGZyb20gXCIuL3N1bVwiO1xuaW1wb3J0IG5vZGVfc29ydCBmcm9tIFwiLi9zb3J0XCI7XG5pbXBvcnQgbm9kZV9wYXRoIGZyb20gXCIuL3BhdGhcIjtcbmltcG9ydCBub2RlX2FuY2VzdG9ycyBmcm9tIFwiLi9hbmNlc3RvcnNcIjtcbmltcG9ydCBub2RlX2Rlc2NlbmRhbnRzIGZyb20gXCIuL2Rlc2NlbmRhbnRzXCI7XG5pbXBvcnQgbm9kZV9sZWF2ZXMgZnJvbSBcIi4vbGVhdmVzXCI7XG5pbXBvcnQgbm9kZV9saW5rcyBmcm9tIFwiLi9saW5rc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoaWVyYXJjaHkoZGF0YSwgY2hpbGRyZW4pIHtcbiAgdmFyIHJvb3QgPSBuZXcgTm9kZShkYXRhKSxcbiAgICAgIHZhbHVlZCA9ICtkYXRhLnZhbHVlICYmIChyb290LnZhbHVlID0gZGF0YS52YWx1ZSksXG4gICAgICBub2RlLFxuICAgICAgbm9kZXMgPSBbcm9vdF0sXG4gICAgICBjaGlsZCxcbiAgICAgIGNoaWxkcyxcbiAgICAgIGksXG4gICAgICBuO1xuXG4gIGlmIChjaGlsZHJlbiA9PSBudWxsKSBjaGlsZHJlbiA9IGRlZmF1bHRDaGlsZHJlbjtcblxuICB3aGlsZSAobm9kZSA9IG5vZGVzLnBvcCgpKSB7XG4gICAgaWYgKHZhbHVlZCkgbm9kZS52YWx1ZSA9ICtub2RlLmRhdGEudmFsdWU7XG4gICAgaWYgKChjaGlsZHMgPSBjaGlsZHJlbihub2RlLmRhdGEpKSAmJiAobiA9IGNoaWxkcy5sZW5ndGgpKSB7XG4gICAgICBub2RlLmNoaWxkcmVuID0gbmV3IEFycmF5KG4pO1xuICAgICAgZm9yIChpID0gbiAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIG5vZGVzLnB1c2goY2hpbGQgPSBub2RlLmNoaWxkcmVuW2ldID0gbmV3IE5vZGUoY2hpbGRzW2ldKSk7XG4gICAgICAgIGNoaWxkLnBhcmVudCA9IG5vZGU7XG4gICAgICAgIGNoaWxkLmRlcHRoID0gbm9kZS5kZXB0aCArIDE7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJvb3QuZWFjaEJlZm9yZShjb21wdXRlSGVpZ2h0KTtcbn1cblxuZnVuY3Rpb24gbm9kZV9jb3B5KCkge1xuICByZXR1cm4gaGllcmFyY2h5KHRoaXMpLmVhY2hCZWZvcmUoY29weURhdGEpO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0Q2hpbGRyZW4oZCkge1xuICByZXR1cm4gZC5jaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY29weURhdGEobm9kZSkge1xuICBub2RlLmRhdGEgPSBub2RlLmRhdGEuZGF0YTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVIZWlnaHQobm9kZSkge1xuICB2YXIgaGVpZ2h0ID0gMDtcbiAgZG8gbm9kZS5oZWlnaHQgPSBoZWlnaHQ7XG4gIHdoaWxlICgobm9kZSA9IG5vZGUucGFyZW50KSAmJiAobm9kZS5oZWlnaHQgPCArK2hlaWdodCkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gTm9kZShkYXRhKSB7XG4gIHRoaXMuZGF0YSA9IGRhdGE7XG4gIHRoaXMuZGVwdGggPVxuICB0aGlzLmhlaWdodCA9IDA7XG4gIHRoaXMucGFyZW50ID0gbnVsbDtcbn1cblxuTm9kZS5wcm90b3R5cGUgPSBoaWVyYXJjaHkucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogTm9kZSxcbiAgY291bnQ6IG5vZGVfY291bnQsXG4gIGVhY2g6IG5vZGVfZWFjaCxcbiAgZWFjaEFmdGVyOiBub2RlX2VhY2hBZnRlcixcbiAgZWFjaEJlZm9yZTogbm9kZV9lYWNoQmVmb3JlLFxuICBzdW06IG5vZGVfc3VtLFxuICBzb3J0OiBub2RlX3NvcnQsXG4gIHBhdGg6IG5vZGVfcGF0aCxcbiAgYW5jZXN0b3JzOiBub2RlX2FuY2VzdG9ycyxcbiAgZGVzY2VuZGFudHM6IG5vZGVfZGVzY2VuZGFudHMsXG4gIGxlYXZlczogbm9kZV9sZWF2ZXMsXG4gIGxpbmtzOiBub2RlX2xpbmtzLFxuICBjb3B5OiBub2RlX2NvcHlcbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGxlYXZlcyA9IFtdO1xuICB0aGlzLmVhY2hCZWZvcmUoZnVuY3Rpb24obm9kZSkge1xuICAgIGlmICghbm9kZS5jaGlsZHJlbikge1xuICAgICAgbGVhdmVzLnB1c2gobm9kZSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGxlYXZlcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgcm9vdCA9IHRoaXMsIGxpbmtzID0gW107XG4gIHJvb3QuZWFjaChmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKG5vZGUgIT09IHJvb3QpIHsgLy8gRG9u4oCZdCBpbmNsdWRlIHRoZSByb2904oCZcyBwYXJlbnQsIGlmIGFueS5cbiAgICAgIGxpbmtzLnB1c2goe3NvdXJjZTogbm9kZS5wYXJlbnQsIHRhcmdldDogbm9kZX0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBsaW5rcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGVuZCkge1xuICB2YXIgc3RhcnQgPSB0aGlzLFxuICAgICAgYW5jZXN0b3IgPSBsZWFzdENvbW1vbkFuY2VzdG9yKHN0YXJ0LCBlbmQpLFxuICAgICAgbm9kZXMgPSBbc3RhcnRdO1xuICB3aGlsZSAoc3RhcnQgIT09IGFuY2VzdG9yKSB7XG4gICAgc3RhcnQgPSBzdGFydC5wYXJlbnQ7XG4gICAgbm9kZXMucHVzaChzdGFydCk7XG4gIH1cbiAgdmFyIGsgPSBub2Rlcy5sZW5ndGg7XG4gIHdoaWxlIChlbmQgIT09IGFuY2VzdG9yKSB7XG4gICAgbm9kZXMuc3BsaWNlKGssIDAsIGVuZCk7XG4gICAgZW5kID0gZW5kLnBhcmVudDtcbiAgfVxuICByZXR1cm4gbm9kZXM7XG59XG5cbmZ1bmN0aW9uIGxlYXN0Q29tbW9uQW5jZXN0b3IoYSwgYikge1xuICBpZiAoYSA9PT0gYikgcmV0dXJuIGE7XG4gIHZhciBhTm9kZXMgPSBhLmFuY2VzdG9ycygpLFxuICAgICAgYk5vZGVzID0gYi5hbmNlc3RvcnMoKSxcbiAgICAgIGMgPSBudWxsO1xuICBhID0gYU5vZGVzLnBvcCgpO1xuICBiID0gYk5vZGVzLnBvcCgpO1xuICB3aGlsZSAoYSA9PT0gYikge1xuICAgIGMgPSBhO1xuICAgIGEgPSBhTm9kZXMucG9wKCk7XG4gICAgYiA9IGJOb2Rlcy5wb3AoKTtcbiAgfVxuICByZXR1cm4gYztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbXBhcmUpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaEJlZm9yZShmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKG5vZGUuY2hpbGRyZW4pIHtcbiAgICAgIG5vZGUuY2hpbGRyZW4uc29ydChjb21wYXJlKTtcbiAgICB9XG4gIH0pO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaEFmdGVyKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICB2YXIgc3VtID0gK3ZhbHVlKG5vZGUuZGF0YSkgfHwgMCxcbiAgICAgICAgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuLFxuICAgICAgICBpID0gY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoO1xuICAgIHdoaWxlICgtLWkgPj0gMCkgc3VtICs9IGNoaWxkcmVuW2ldLnZhbHVlO1xuICAgIG5vZGUudmFsdWUgPSBzdW07XG4gIH0pO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGNsdXN0ZXJ9IGZyb20gXCIuL2NsdXN0ZXJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBoaWVyYXJjaHl9IGZyb20gXCIuL2hpZXJhcmNoeS9pbmRleFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHBhY2t9IGZyb20gXCIuL3BhY2svaW5kZXhcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwYWNrU2libGluZ3N9IGZyb20gXCIuL3BhY2svc2libGluZ3NcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwYWNrRW5jbG9zZX0gZnJvbSBcIi4vcGFjay9lbmNsb3NlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGFydGl0aW9ufSBmcm9tIFwiLi9wYXJ0aXRpb25cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdHJhdGlmeX0gZnJvbSBcIi4vc3RyYXRpZnlcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0cmVlfSBmcm9tIFwiLi90cmVlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJlZW1hcH0gZnJvbSBcIi4vdHJlZW1hcC9pbmRleFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyZWVtYXBCaW5hcnl9IGZyb20gXCIuL3RyZWVtYXAvYmluYXJ5XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJlZW1hcERpY2V9IGZyb20gXCIuL3RyZWVtYXAvZGljZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyZWVtYXBTbGljZX0gZnJvbSBcIi4vdHJlZW1hcC9zbGljZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyZWVtYXBTbGljZURpY2V9IGZyb20gXCIuL3RyZWVtYXAvc2xpY2VEaWNlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJlZW1hcFNxdWFyaWZ5fSBmcm9tIFwiLi90cmVlbWFwL3NxdWFyaWZ5XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJlZW1hcFJlc3F1YXJpZnl9IGZyb20gXCIuL3RyZWVtYXAvcmVzcXVhcmlmeVwiO1xuIiwiaW1wb3J0IHtzaHVmZmxlLCBzbGljZX0gZnJvbSBcIi4uL2FycmF5XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNpcmNsZXMpIHtcbiAgdmFyIGkgPSAwLCBuID0gKGNpcmNsZXMgPSBzaHVmZmxlKHNsaWNlLmNhbGwoY2lyY2xlcykpKS5sZW5ndGgsIEIgPSBbXSwgcCwgZTtcblxuICB3aGlsZSAoaSA8IG4pIHtcbiAgICBwID0gY2lyY2xlc1tpXTtcbiAgICBpZiAoZSAmJiBlbmNsb3Nlc1dlYWsoZSwgcCkpICsraTtcbiAgICBlbHNlIGUgPSBlbmNsb3NlQmFzaXMoQiA9IGV4dGVuZEJhc2lzKEIsIHApKSwgaSA9IDA7XG4gIH1cblxuICByZXR1cm4gZTtcbn1cblxuZnVuY3Rpb24gZXh0ZW5kQmFzaXMoQiwgcCkge1xuICB2YXIgaSwgajtcblxuICBpZiAoZW5jbG9zZXNXZWFrQWxsKHAsIEIpKSByZXR1cm4gW3BdO1xuXG4gIC8vIElmIHdlIGdldCBoZXJlIHRoZW4gQiBtdXN0IGhhdmUgYXQgbGVhc3Qgb25lIGVsZW1lbnQuXG4gIGZvciAoaSA9IDA7IGkgPCBCLmxlbmd0aDsgKytpKSB7XG4gICAgaWYgKGVuY2xvc2VzTm90KHAsIEJbaV0pXG4gICAgICAgICYmIGVuY2xvc2VzV2Vha0FsbChlbmNsb3NlQmFzaXMyKEJbaV0sIHApLCBCKSkge1xuICAgICAgcmV0dXJuIFtCW2ldLCBwXTtcbiAgICB9XG4gIH1cblxuICAvLyBJZiB3ZSBnZXQgaGVyZSB0aGVuIEIgbXVzdCBoYXZlIGF0IGxlYXN0IHR3byBlbGVtZW50cy5cbiAgZm9yIChpID0gMDsgaSA8IEIubGVuZ3RoIC0gMTsgKytpKSB7XG4gICAgZm9yIChqID0gaSArIDE7IGogPCBCLmxlbmd0aDsgKytqKSB7XG4gICAgICBpZiAoZW5jbG9zZXNOb3QoZW5jbG9zZUJhc2lzMihCW2ldLCBCW2pdKSwgcClcbiAgICAgICAgICAmJiBlbmNsb3Nlc05vdChlbmNsb3NlQmFzaXMyKEJbaV0sIHApLCBCW2pdKVxuICAgICAgICAgICYmIGVuY2xvc2VzTm90KGVuY2xvc2VCYXNpczIoQltqXSwgcCksIEJbaV0pXG4gICAgICAgICAgJiYgZW5jbG9zZXNXZWFrQWxsKGVuY2xvc2VCYXNpczMoQltpXSwgQltqXSwgcCksIEIpKSB7XG4gICAgICAgIHJldHVybiBbQltpXSwgQltqXSwgcF07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gSWYgd2UgZ2V0IGhlcmUgdGhlbiBzb21ldGhpbmcgaXMgdmVyeSB3cm9uZy5cbiAgdGhyb3cgbmV3IEVycm9yO1xufVxuXG5mdW5jdGlvbiBlbmNsb3Nlc05vdChhLCBiKSB7XG4gIHZhciBkciA9IGEuciAtIGIuciwgZHggPSBiLnggLSBhLngsIGR5ID0gYi55IC0gYS55O1xuICByZXR1cm4gZHIgPCAwIHx8IGRyICogZHIgPCBkeCAqIGR4ICsgZHkgKiBkeTtcbn1cblxuZnVuY3Rpb24gZW5jbG9zZXNXZWFrKGEsIGIpIHtcbiAgdmFyIGRyID0gYS5yIC0gYi5yICsgMWUtNiwgZHggPSBiLnggLSBhLngsIGR5ID0gYi55IC0gYS55O1xuICByZXR1cm4gZHIgPiAwICYmIGRyICogZHIgPiBkeCAqIGR4ICsgZHkgKiBkeTtcbn1cblxuZnVuY3Rpb24gZW5jbG9zZXNXZWFrQWxsKGEsIEIpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBCLmxlbmd0aDsgKytpKSB7XG4gICAgaWYgKCFlbmNsb3Nlc1dlYWsoYSwgQltpXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIGVuY2xvc2VCYXNpcyhCKSB7XG4gIHN3aXRjaCAoQi5sZW5ndGgpIHtcbiAgICBjYXNlIDE6IHJldHVybiBlbmNsb3NlQmFzaXMxKEJbMF0pO1xuICAgIGNhc2UgMjogcmV0dXJuIGVuY2xvc2VCYXNpczIoQlswXSwgQlsxXSk7XG4gICAgY2FzZSAzOiByZXR1cm4gZW5jbG9zZUJhc2lzMyhCWzBdLCBCWzFdLCBCWzJdKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBlbmNsb3NlQmFzaXMxKGEpIHtcbiAgcmV0dXJuIHtcbiAgICB4OiBhLngsXG4gICAgeTogYS55LFxuICAgIHI6IGEuclxuICB9O1xufVxuXG5mdW5jdGlvbiBlbmNsb3NlQmFzaXMyKGEsIGIpIHtcbiAgdmFyIHgxID0gYS54LCB5MSA9IGEueSwgcjEgPSBhLnIsXG4gICAgICB4MiA9IGIueCwgeTIgPSBiLnksIHIyID0gYi5yLFxuICAgICAgeDIxID0geDIgLSB4MSwgeTIxID0geTIgLSB5MSwgcjIxID0gcjIgLSByMSxcbiAgICAgIGwgPSBNYXRoLnNxcnQoeDIxICogeDIxICsgeTIxICogeTIxKTtcbiAgcmV0dXJuIHtcbiAgICB4OiAoeDEgKyB4MiArIHgyMSAvIGwgKiByMjEpIC8gMixcbiAgICB5OiAoeTEgKyB5MiArIHkyMSAvIGwgKiByMjEpIC8gMixcbiAgICByOiAobCArIHIxICsgcjIpIC8gMlxuICB9O1xufVxuXG5mdW5jdGlvbiBlbmNsb3NlQmFzaXMzKGEsIGIsIGMpIHtcbiAgdmFyIHgxID0gYS54LCB5MSA9IGEueSwgcjEgPSBhLnIsXG4gICAgICB4MiA9IGIueCwgeTIgPSBiLnksIHIyID0gYi5yLFxuICAgICAgeDMgPSBjLngsIHkzID0gYy55LCByMyA9IGMucixcbiAgICAgIGEyID0geDEgLSB4MixcbiAgICAgIGEzID0geDEgLSB4MyxcbiAgICAgIGIyID0geTEgLSB5MixcbiAgICAgIGIzID0geTEgLSB5MyxcbiAgICAgIGMyID0gcjIgLSByMSxcbiAgICAgIGMzID0gcjMgLSByMSxcbiAgICAgIGQxID0geDEgKiB4MSArIHkxICogeTEgLSByMSAqIHIxLFxuICAgICAgZDIgPSBkMSAtIHgyICogeDIgLSB5MiAqIHkyICsgcjIgKiByMixcbiAgICAgIGQzID0gZDEgLSB4MyAqIHgzIC0geTMgKiB5MyArIHIzICogcjMsXG4gICAgICBhYiA9IGEzICogYjIgLSBhMiAqIGIzLFxuICAgICAgeGEgPSAoYjIgKiBkMyAtIGIzICogZDIpIC8gKGFiICogMikgLSB4MSxcbiAgICAgIHhiID0gKGIzICogYzIgLSBiMiAqIGMzKSAvIGFiLFxuICAgICAgeWEgPSAoYTMgKiBkMiAtIGEyICogZDMpIC8gKGFiICogMikgLSB5MSxcbiAgICAgIHliID0gKGEyICogYzMgLSBhMyAqIGMyKSAvIGFiLFxuICAgICAgQSA9IHhiICogeGIgKyB5YiAqIHliIC0gMSxcbiAgICAgIEIgPSAyICogKHIxICsgeGEgKiB4YiArIHlhICogeWIpLFxuICAgICAgQyA9IHhhICogeGEgKyB5YSAqIHlhIC0gcjEgKiByMSxcbiAgICAgIHIgPSAtKEEgPyAoQiArIE1hdGguc3FydChCICogQiAtIDQgKiBBICogQykpIC8gKDIgKiBBKSA6IEMgLyBCKTtcbiAgcmV0dXJuIHtcbiAgICB4OiB4MSArIHhhICsgeGIgKiByLFxuICAgIHk6IHkxICsgeWEgKyB5YiAqIHIsXG4gICAgcjogclxuICB9O1xufVxuIiwiaW1wb3J0IHtwYWNrRW5jbG9zZX0gZnJvbSBcIi4vc2libGluZ3NcIjtcbmltcG9ydCB7b3B0aW9uYWx9IGZyb20gXCIuLi9hY2Nlc3NvcnNcIjtcbmltcG9ydCBjb25zdGFudCwge2NvbnN0YW50WmVyb30gZnJvbSBcIi4uL2NvbnN0YW50XCI7XG5cbmZ1bmN0aW9uIGRlZmF1bHRSYWRpdXMoZCkge1xuICByZXR1cm4gTWF0aC5zcXJ0KGQudmFsdWUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHJhZGl1cyA9IG51bGwsXG4gICAgICBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBwYWRkaW5nID0gY29uc3RhbnRaZXJvO1xuXG4gIGZ1bmN0aW9uIHBhY2socm9vdCkge1xuICAgIHJvb3QueCA9IGR4IC8gMiwgcm9vdC55ID0gZHkgLyAyO1xuICAgIGlmIChyYWRpdXMpIHtcbiAgICAgIHJvb3QuZWFjaEJlZm9yZShyYWRpdXNMZWFmKHJhZGl1cykpXG4gICAgICAgICAgLmVhY2hBZnRlcihwYWNrQ2hpbGRyZW4ocGFkZGluZywgMC41KSlcbiAgICAgICAgICAuZWFjaEJlZm9yZSh0cmFuc2xhdGVDaGlsZCgxKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJvb3QuZWFjaEJlZm9yZShyYWRpdXNMZWFmKGRlZmF1bHRSYWRpdXMpKVxuICAgICAgICAgIC5lYWNoQWZ0ZXIocGFja0NoaWxkcmVuKGNvbnN0YW50WmVybywgMSkpXG4gICAgICAgICAgLmVhY2hBZnRlcihwYWNrQ2hpbGRyZW4ocGFkZGluZywgcm9vdC5yIC8gTWF0aC5taW4oZHgsIGR5KSkpXG4gICAgICAgICAgLmVhY2hCZWZvcmUodHJhbnNsYXRlQ2hpbGQoTWF0aC5taW4oZHgsIGR5KSAvICgyICogcm9vdC5yKSkpO1xuICAgIH1cbiAgICByZXR1cm4gcm9vdDtcbiAgfVxuXG4gIHBhY2sucmFkaXVzID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhZGl1cyA9IG9wdGlvbmFsKHgpLCBwYWNrKSA6IHJhZGl1cztcbiAgfTtcblxuICBwYWNrLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZHggPSAreFswXSwgZHkgPSAreFsxXSwgcGFjaykgOiBbZHgsIGR5XTtcbiAgfTtcblxuICBwYWNrLnBhZGRpbmcgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkZGluZyA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCBwYWNrKSA6IHBhZGRpbmc7XG4gIH07XG5cbiAgcmV0dXJuIHBhY2s7XG59XG5cbmZ1bmN0aW9uIHJhZGl1c0xlYWYocmFkaXVzKSB7XG4gIHJldHVybiBmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKCFub2RlLmNoaWxkcmVuKSB7XG4gICAgICBub2RlLnIgPSBNYXRoLm1heCgwLCArcmFkaXVzKG5vZGUpIHx8IDApO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gcGFja0NoaWxkcmVuKHBhZGRpbmcsIGspIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICBpZiAoY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuKSB7XG4gICAgICB2YXIgY2hpbGRyZW4sXG4gICAgICAgICAgaSxcbiAgICAgICAgICBuID0gY2hpbGRyZW4ubGVuZ3RoLFxuICAgICAgICAgIHIgPSBwYWRkaW5nKG5vZGUpICogayB8fCAwLFxuICAgICAgICAgIGU7XG5cbiAgICAgIGlmIChyKSBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBjaGlsZHJlbltpXS5yICs9IHI7XG4gICAgICBlID0gcGFja0VuY2xvc2UoY2hpbGRyZW4pO1xuICAgICAgaWYgKHIpIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIGNoaWxkcmVuW2ldLnIgLT0gcjtcbiAgICAgIG5vZGUuciA9IGUgKyByO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gdHJhbnNsYXRlQ2hpbGQoaykge1xuICByZXR1cm4gZnVuY3Rpb24obm9kZSkge1xuICAgIHZhciBwYXJlbnQgPSBub2RlLnBhcmVudDtcbiAgICBub2RlLnIgKj0gaztcbiAgICBpZiAocGFyZW50KSB7XG4gICAgICBub2RlLnggPSBwYXJlbnQueCArIGsgKiBub2RlLng7XG4gICAgICBub2RlLnkgPSBwYXJlbnQueSArIGsgKiBub2RlLnk7XG4gICAgfVxuICB9O1xufVxuIiwiaW1wb3J0IGVuY2xvc2UgZnJvbSBcIi4vZW5jbG9zZVwiO1xuXG5mdW5jdGlvbiBwbGFjZShiLCBhLCBjKSB7XG4gIHZhciBkeCA9IGIueCAtIGEueCwgeCwgYTIsXG4gICAgICBkeSA9IGIueSAtIGEueSwgeSwgYjIsXG4gICAgICBkMiA9IGR4ICogZHggKyBkeSAqIGR5O1xuICBpZiAoZDIpIHtcbiAgICBhMiA9IGEuciArIGMuciwgYTIgKj0gYTI7XG4gICAgYjIgPSBiLnIgKyBjLnIsIGIyICo9IGIyO1xuICAgIGlmIChhMiA+IGIyKSB7XG4gICAgICB4ID0gKGQyICsgYjIgLSBhMikgLyAoMiAqIGQyKTtcbiAgICAgIHkgPSBNYXRoLnNxcnQoTWF0aC5tYXgoMCwgYjIgLyBkMiAtIHggKiB4KSk7XG4gICAgICBjLnggPSBiLnggLSB4ICogZHggLSB5ICogZHk7XG4gICAgICBjLnkgPSBiLnkgLSB4ICogZHkgKyB5ICogZHg7XG4gICAgfSBlbHNlIHtcbiAgICAgIHggPSAoZDIgKyBhMiAtIGIyKSAvICgyICogZDIpO1xuICAgICAgeSA9IE1hdGguc3FydChNYXRoLm1heCgwLCBhMiAvIGQyIC0geCAqIHgpKTtcbiAgICAgIGMueCA9IGEueCArIHggKiBkeCAtIHkgKiBkeTtcbiAgICAgIGMueSA9IGEueSArIHggKiBkeSArIHkgKiBkeDtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgYy54ID0gYS54ICsgYy5yO1xuICAgIGMueSA9IGEueTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbnRlcnNlY3RzKGEsIGIpIHtcbiAgdmFyIGRyID0gYS5yICsgYi5yIC0gMWUtNiwgZHggPSBiLnggLSBhLngsIGR5ID0gYi55IC0gYS55O1xuICByZXR1cm4gZHIgPiAwICYmIGRyICogZHIgPiBkeCAqIGR4ICsgZHkgKiBkeTtcbn1cblxuZnVuY3Rpb24gc2NvcmUobm9kZSkge1xuICB2YXIgYSA9IG5vZGUuXyxcbiAgICAgIGIgPSBub2RlLm5leHQuXyxcbiAgICAgIGFiID0gYS5yICsgYi5yLFxuICAgICAgZHggPSAoYS54ICogYi5yICsgYi54ICogYS5yKSAvIGFiLFxuICAgICAgZHkgPSAoYS55ICogYi5yICsgYi55ICogYS5yKSAvIGFiO1xuICByZXR1cm4gZHggKiBkeCArIGR5ICogZHk7XG59XG5cbmZ1bmN0aW9uIE5vZGUoY2lyY2xlKSB7XG4gIHRoaXMuXyA9IGNpcmNsZTtcbiAgdGhpcy5uZXh0ID0gbnVsbDtcbiAgdGhpcy5wcmV2aW91cyA9IG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYWNrRW5jbG9zZShjaXJjbGVzKSB7XG4gIGlmICghKG4gPSBjaXJjbGVzLmxlbmd0aCkpIHJldHVybiAwO1xuXG4gIHZhciBhLCBiLCBjLCBuLCBhYSwgY2EsIGksIGosIGssIHNqLCBzaztcblxuICAvLyBQbGFjZSB0aGUgZmlyc3QgY2lyY2xlLlxuICBhID0gY2lyY2xlc1swXSwgYS54ID0gMCwgYS55ID0gMDtcbiAgaWYgKCEobiA+IDEpKSByZXR1cm4gYS5yO1xuXG4gIC8vIFBsYWNlIHRoZSBzZWNvbmQgY2lyY2xlLlxuICBiID0gY2lyY2xlc1sxXSwgYS54ID0gLWIuciwgYi54ID0gYS5yLCBiLnkgPSAwO1xuICBpZiAoIShuID4gMikpIHJldHVybiBhLnIgKyBiLnI7XG5cbiAgLy8gUGxhY2UgdGhlIHRoaXJkIGNpcmNsZS5cbiAgcGxhY2UoYiwgYSwgYyA9IGNpcmNsZXNbMl0pO1xuXG4gIC8vIEluaXRpYWxpemUgdGhlIGZyb250LWNoYWluIHVzaW5nIHRoZSBmaXJzdCB0aHJlZSBjaXJjbGVzIGEsIGIgYW5kIGMuXG4gIGEgPSBuZXcgTm9kZShhKSwgYiA9IG5ldyBOb2RlKGIpLCBjID0gbmV3IE5vZGUoYyk7XG4gIGEubmV4dCA9IGMucHJldmlvdXMgPSBiO1xuICBiLm5leHQgPSBhLnByZXZpb3VzID0gYztcbiAgYy5uZXh0ID0gYi5wcmV2aW91cyA9IGE7XG5cbiAgLy8gQXR0ZW1wdCB0byBwbGFjZSBlYWNoIHJlbWFpbmluZyBjaXJjbGXigKZcbiAgcGFjazogZm9yIChpID0gMzsgaSA8IG47ICsraSkge1xuICAgIHBsYWNlKGEuXywgYi5fLCBjID0gY2lyY2xlc1tpXSksIGMgPSBuZXcgTm9kZShjKTtcblxuICAgIC8vIEZpbmQgdGhlIGNsb3Nlc3QgaW50ZXJzZWN0aW5nIGNpcmNsZSBvbiB0aGUgZnJvbnQtY2hhaW4sIGlmIGFueS5cbiAgICAvLyDigJxDbG9zZW5lc3PigJ0gaXMgZGV0ZXJtaW5lZCBieSBsaW5lYXIgZGlzdGFuY2UgYWxvbmcgdGhlIGZyb250LWNoYWluLlxuICAgIC8vIOKAnEFoZWFk4oCdIG9yIOKAnGJlaGluZOKAnSBpcyBsaWtld2lzZSBkZXRlcm1pbmVkIGJ5IGxpbmVhciBkaXN0YW5jZS5cbiAgICBqID0gYi5uZXh0LCBrID0gYS5wcmV2aW91cywgc2ogPSBiLl8uciwgc2sgPSBhLl8ucjtcbiAgICBkbyB7XG4gICAgICBpZiAoc2ogPD0gc2spIHtcbiAgICAgICAgaWYgKGludGVyc2VjdHMoai5fLCBjLl8pKSB7XG4gICAgICAgICAgYiA9IGosIGEubmV4dCA9IGIsIGIucHJldmlvdXMgPSBhLCAtLWk7XG4gICAgICAgICAgY29udGludWUgcGFjaztcbiAgICAgICAgfVxuICAgICAgICBzaiArPSBqLl8uciwgaiA9IGoubmV4dDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChpbnRlcnNlY3RzKGsuXywgYy5fKSkge1xuICAgICAgICAgIGEgPSBrLCBhLm5leHQgPSBiLCBiLnByZXZpb3VzID0gYSwgLS1pO1xuICAgICAgICAgIGNvbnRpbnVlIHBhY2s7XG4gICAgICAgIH1cbiAgICAgICAgc2sgKz0gay5fLnIsIGsgPSBrLnByZXZpb3VzO1xuICAgICAgfVxuICAgIH0gd2hpbGUgKGogIT09IGsubmV4dCk7XG5cbiAgICAvLyBTdWNjZXNzISBJbnNlcnQgdGhlIG5ldyBjaXJjbGUgYyBiZXR3ZWVuIGEgYW5kIGIuXG4gICAgYy5wcmV2aW91cyA9IGEsIGMubmV4dCA9IGIsIGEubmV4dCA9IGIucHJldmlvdXMgPSBiID0gYztcblxuICAgIC8vIENvbXB1dGUgdGhlIG5ldyBjbG9zZXN0IGNpcmNsZSBwYWlyIHRvIHRoZSBjZW50cm9pZC5cbiAgICBhYSA9IHNjb3JlKGEpO1xuICAgIHdoaWxlICgoYyA9IGMubmV4dCkgIT09IGIpIHtcbiAgICAgIGlmICgoY2EgPSBzY29yZShjKSkgPCBhYSkge1xuICAgICAgICBhID0gYywgYWEgPSBjYTtcbiAgICAgIH1cbiAgICB9XG4gICAgYiA9IGEubmV4dDtcbiAgfVxuXG4gIC8vIENvbXB1dGUgdGhlIGVuY2xvc2luZyBjaXJjbGUgb2YgdGhlIGZyb250IGNoYWluLlxuICBhID0gW2IuX10sIGMgPSBiOyB3aGlsZSAoKGMgPSBjLm5leHQpICE9PSBiKSBhLnB1c2goYy5fKTsgYyA9IGVuY2xvc2UoYSk7XG5cbiAgLy8gVHJhbnNsYXRlIHRoZSBjaXJjbGVzIHRvIHB1dCB0aGUgZW5jbG9zaW5nIGNpcmNsZSBhcm91bmQgdGhlIG9yaWdpbi5cbiAgZm9yIChpID0gMDsgaSA8IG47ICsraSkgYSA9IGNpcmNsZXNbaV0sIGEueCAtPSBjLngsIGEueSAtPSBjLnk7XG5cbiAgcmV0dXJuIGMucjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2lyY2xlcykge1xuICBwYWNrRW5jbG9zZShjaXJjbGVzKTtcbiAgcmV0dXJuIGNpcmNsZXM7XG59XG4iLCJpbXBvcnQgcm91bmROb2RlIGZyb20gXCIuL3RyZWVtYXAvcm91bmRcIjtcbmltcG9ydCB0cmVlbWFwRGljZSBmcm9tIFwiLi90cmVlbWFwL2RpY2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBwYWRkaW5nID0gMCxcbiAgICAgIHJvdW5kID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gcGFydGl0aW9uKHJvb3QpIHtcbiAgICB2YXIgbiA9IHJvb3QuaGVpZ2h0ICsgMTtcbiAgICByb290LngwID1cbiAgICByb290LnkwID0gcGFkZGluZztcbiAgICByb290LngxID0gZHg7XG4gICAgcm9vdC55MSA9IGR5IC8gbjtcbiAgICByb290LmVhY2hCZWZvcmUocG9zaXRpb25Ob2RlKGR5LCBuKSk7XG4gICAgaWYgKHJvdW5kKSByb290LmVhY2hCZWZvcmUocm91bmROb2RlKTtcbiAgICByZXR1cm4gcm9vdDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBvc2l0aW9uTm9kZShkeSwgbikge1xuICAgIHJldHVybiBmdW5jdGlvbihub2RlKSB7XG4gICAgICBpZiAobm9kZS5jaGlsZHJlbikge1xuICAgICAgICB0cmVlbWFwRGljZShub2RlLCBub2RlLngwLCBkeSAqIChub2RlLmRlcHRoICsgMSkgLyBuLCBub2RlLngxLCBkeSAqIChub2RlLmRlcHRoICsgMikgLyBuKTtcbiAgICAgIH1cbiAgICAgIHZhciB4MCA9IG5vZGUueDAsXG4gICAgICAgICAgeTAgPSBub2RlLnkwLFxuICAgICAgICAgIHgxID0gbm9kZS54MSAtIHBhZGRpbmcsXG4gICAgICAgICAgeTEgPSBub2RlLnkxIC0gcGFkZGluZztcbiAgICAgIGlmICh4MSA8IHgwKSB4MCA9IHgxID0gKHgwICsgeDEpIC8gMjtcbiAgICAgIGlmICh5MSA8IHkwKSB5MCA9IHkxID0gKHkwICsgeTEpIC8gMjtcbiAgICAgIG5vZGUueDAgPSB4MDtcbiAgICAgIG5vZGUueTAgPSB5MDtcbiAgICAgIG5vZGUueDEgPSB4MTtcbiAgICAgIG5vZGUueTEgPSB5MTtcbiAgICB9O1xuICB9XG5cbiAgcGFydGl0aW9uLnJvdW5kID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJvdW5kID0gISF4LCBwYXJ0aXRpb24pIDogcm91bmQ7XG4gIH07XG5cbiAgcGFydGl0aW9uLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZHggPSAreFswXSwgZHkgPSAreFsxXSwgcGFydGl0aW9uKSA6IFtkeCwgZHldO1xuICB9O1xuXG4gIHBhcnRpdGlvbi5wYWRkaW5nID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmcgPSAreCwgcGFydGl0aW9uKSA6IHBhZGRpbmc7XG4gIH07XG5cbiAgcmV0dXJuIHBhcnRpdGlvbjtcbn1cbiIsImltcG9ydCB7cmVxdWlyZWR9IGZyb20gXCIuL2FjY2Vzc29yc1wiO1xuaW1wb3J0IHtOb2RlLCBjb21wdXRlSGVpZ2h0fSBmcm9tIFwiLi9oaWVyYXJjaHkvaW5kZXhcIjtcblxudmFyIGtleVByZWZpeCA9IFwiJFwiLCAvLyBQcm90ZWN0IGFnYWluc3Qga2V5cyBsaWtlIOKAnF9fcHJvdG9fX+KAnS5cbiAgICBwcmVyb290ID0ge2RlcHRoOiAtMX0sXG4gICAgYW1iaWd1b3VzID0ge307XG5cbmZ1bmN0aW9uIGRlZmF1bHRJZChkKSB7XG4gIHJldHVybiBkLmlkO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0UGFyZW50SWQoZCkge1xuICByZXR1cm4gZC5wYXJlbnRJZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBpZCA9IGRlZmF1bHRJZCxcbiAgICAgIHBhcmVudElkID0gZGVmYXVsdFBhcmVudElkO1xuXG4gIGZ1bmN0aW9uIHN0cmF0aWZ5KGRhdGEpIHtcbiAgICB2YXIgZCxcbiAgICAgICAgaSxcbiAgICAgICAgbiA9IGRhdGEubGVuZ3RoLFxuICAgICAgICByb290LFxuICAgICAgICBwYXJlbnQsXG4gICAgICAgIG5vZGUsXG4gICAgICAgIG5vZGVzID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBub2RlSWQsXG4gICAgICAgIG5vZGVLZXksXG4gICAgICAgIG5vZGVCeUtleSA9IHt9O1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgZCA9IGRhdGFbaV0sIG5vZGUgPSBub2Rlc1tpXSA9IG5ldyBOb2RlKGQpO1xuICAgICAgaWYgKChub2RlSWQgPSBpZChkLCBpLCBkYXRhKSkgIT0gbnVsbCAmJiAobm9kZUlkICs9IFwiXCIpKSB7XG4gICAgICAgIG5vZGVLZXkgPSBrZXlQcmVmaXggKyAobm9kZS5pZCA9IG5vZGVJZCk7XG4gICAgICAgIG5vZGVCeUtleVtub2RlS2V5XSA9IG5vZGVLZXkgaW4gbm9kZUJ5S2V5ID8gYW1iaWd1b3VzIDogbm9kZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBub2RlID0gbm9kZXNbaV0sIG5vZGVJZCA9IHBhcmVudElkKGRhdGFbaV0sIGksIGRhdGEpO1xuICAgICAgaWYgKG5vZGVJZCA9PSBudWxsIHx8ICEobm9kZUlkICs9IFwiXCIpKSB7XG4gICAgICAgIGlmIChyb290KSB0aHJvdyBuZXcgRXJyb3IoXCJtdWx0aXBsZSByb290c1wiKTtcbiAgICAgICAgcm9vdCA9IG5vZGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXJlbnQgPSBub2RlQnlLZXlba2V5UHJlZml4ICsgbm9kZUlkXTtcbiAgICAgICAgaWYgKCFwYXJlbnQpIHRocm93IG5ldyBFcnJvcihcIm1pc3Npbmc6IFwiICsgbm9kZUlkKTtcbiAgICAgICAgaWYgKHBhcmVudCA9PT0gYW1iaWd1b3VzKSB0aHJvdyBuZXcgRXJyb3IoXCJhbWJpZ3VvdXM6IFwiICsgbm9kZUlkKTtcbiAgICAgICAgaWYgKHBhcmVudC5jaGlsZHJlbikgcGFyZW50LmNoaWxkcmVuLnB1c2gobm9kZSk7XG4gICAgICAgIGVsc2UgcGFyZW50LmNoaWxkcmVuID0gW25vZGVdO1xuICAgICAgICBub2RlLnBhcmVudCA9IHBhcmVudDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIXJvb3QpIHRocm93IG5ldyBFcnJvcihcIm5vIHJvb3RcIik7XG4gICAgcm9vdC5wYXJlbnQgPSBwcmVyb290O1xuICAgIHJvb3QuZWFjaEJlZm9yZShmdW5jdGlvbihub2RlKSB7IG5vZGUuZGVwdGggPSBub2RlLnBhcmVudC5kZXB0aCArIDE7IC0tbjsgfSkuZWFjaEJlZm9yZShjb21wdXRlSGVpZ2h0KTtcbiAgICByb290LnBhcmVudCA9IG51bGw7XG4gICAgaWYgKG4gPiAwKSB0aHJvdyBuZXcgRXJyb3IoXCJjeWNsZVwiKTtcblxuICAgIHJldHVybiByb290O1xuICB9XG5cbiAgc3RyYXRpZnkuaWQgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaWQgPSByZXF1aXJlZCh4KSwgc3RyYXRpZnkpIDogaWQ7XG4gIH07XG5cbiAgc3RyYXRpZnkucGFyZW50SWQgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFyZW50SWQgPSByZXF1aXJlZCh4KSwgc3RyYXRpZnkpIDogcGFyZW50SWQ7XG4gIH07XG5cbiAgcmV0dXJuIHN0cmF0aWZ5O1xufVxuIiwiaW1wb3J0IHtOb2RlfSBmcm9tIFwiLi9oaWVyYXJjaHkvaW5kZXhcIjtcblxuZnVuY3Rpb24gZGVmYXVsdFNlcGFyYXRpb24oYSwgYikge1xuICByZXR1cm4gYS5wYXJlbnQgPT09IGIucGFyZW50ID8gMSA6IDI7XG59XG5cbi8vIGZ1bmN0aW9uIHJhZGlhbFNlcGFyYXRpb24oYSwgYikge1xuLy8gICByZXR1cm4gKGEucGFyZW50ID09PSBiLnBhcmVudCA/IDEgOiAyKSAvIGEuZGVwdGg7XG4vLyB9XG5cbi8vIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCB0byB0cmF2ZXJzZSB0aGUgbGVmdCBjb250b3VyIG9mIGEgc3VidHJlZSAob3Jcbi8vIHN1YmZvcmVzdCkuIEl0IHJldHVybnMgdGhlIHN1Y2Nlc3NvciBvZiB2IG9uIHRoaXMgY29udG91ci4gVGhpcyBzdWNjZXNzb3IgaXNcbi8vIGVpdGhlciBnaXZlbiBieSB0aGUgbGVmdG1vc3QgY2hpbGQgb2YgdiBvciBieSB0aGUgdGhyZWFkIG9mIHYuIFRoZSBmdW5jdGlvblxuLy8gcmV0dXJucyBudWxsIGlmIGFuZCBvbmx5IGlmIHYgaXMgb24gdGhlIGhpZ2hlc3QgbGV2ZWwgb2YgaXRzIHN1YnRyZWUuXG5mdW5jdGlvbiBuZXh0TGVmdCh2KSB7XG4gIHZhciBjaGlsZHJlbiA9IHYuY2hpbGRyZW47XG4gIHJldHVybiBjaGlsZHJlbiA/IGNoaWxkcmVuWzBdIDogdi50O1xufVxuXG4vLyBUaGlzIGZ1bmN0aW9uIHdvcmtzIGFuYWxvZ291c2x5IHRvIG5leHRMZWZ0LlxuZnVuY3Rpb24gbmV4dFJpZ2h0KHYpIHtcbiAgdmFyIGNoaWxkcmVuID0gdi5jaGlsZHJlbjtcbiAgcmV0dXJuIGNoaWxkcmVuID8gY2hpbGRyZW5bY2hpbGRyZW4ubGVuZ3RoIC0gMV0gOiB2LnQ7XG59XG5cbi8vIFNoaWZ0cyB0aGUgY3VycmVudCBzdWJ0cmVlIHJvb3RlZCBhdCB3Ky4gVGhpcyBpcyBkb25lIGJ5IGluY3JlYXNpbmdcbi8vIHByZWxpbSh3KykgYW5kIG1vZCh3KykgYnkgc2hpZnQuXG5mdW5jdGlvbiBtb3ZlU3VidHJlZSh3bSwgd3AsIHNoaWZ0KSB7XG4gIHZhciBjaGFuZ2UgPSBzaGlmdCAvICh3cC5pIC0gd20uaSk7XG4gIHdwLmMgLT0gY2hhbmdlO1xuICB3cC5zICs9IHNoaWZ0O1xuICB3bS5jICs9IGNoYW5nZTtcbiAgd3AueiArPSBzaGlmdDtcbiAgd3AubSArPSBzaGlmdDtcbn1cblxuLy8gQWxsIG90aGVyIHNoaWZ0cywgYXBwbGllZCB0byB0aGUgc21hbGxlciBzdWJ0cmVlcyBiZXR3ZWVuIHctIGFuZCB3KywgYXJlXG4vLyBwZXJmb3JtZWQgYnkgdGhpcyBmdW5jdGlvbi4gVG8gcHJlcGFyZSB0aGUgc2hpZnRzLCB3ZSBoYXZlIHRvIGFkanVzdFxuLy8gY2hhbmdlKHcrKSwgc2hpZnQodyspLCBhbmQgY2hhbmdlKHctKS5cbmZ1bmN0aW9uIGV4ZWN1dGVTaGlmdHModikge1xuICB2YXIgc2hpZnQgPSAwLFxuICAgICAgY2hhbmdlID0gMCxcbiAgICAgIGNoaWxkcmVuID0gdi5jaGlsZHJlbixcbiAgICAgIGkgPSBjaGlsZHJlbi5sZW5ndGgsXG4gICAgICB3O1xuICB3aGlsZSAoLS1pID49IDApIHtcbiAgICB3ID0gY2hpbGRyZW5baV07XG4gICAgdy56ICs9IHNoaWZ0O1xuICAgIHcubSArPSBzaGlmdDtcbiAgICBzaGlmdCArPSB3LnMgKyAoY2hhbmdlICs9IHcuYyk7XG4gIH1cbn1cblxuLy8gSWYgdmkt4oCZcyBhbmNlc3RvciBpcyBhIHNpYmxpbmcgb2YgdiwgcmV0dXJucyB2aS3igJlzIGFuY2VzdG9yLiBPdGhlcndpc2UsXG4vLyByZXR1cm5zIHRoZSBzcGVjaWZpZWQgKGRlZmF1bHQpIGFuY2VzdG9yLlxuZnVuY3Rpb24gbmV4dEFuY2VzdG9yKHZpbSwgdiwgYW5jZXN0b3IpIHtcbiAgcmV0dXJuIHZpbS5hLnBhcmVudCA9PT0gdi5wYXJlbnQgPyB2aW0uYSA6IGFuY2VzdG9yO1xufVxuXG5mdW5jdGlvbiBUcmVlTm9kZShub2RlLCBpKSB7XG4gIHRoaXMuXyA9IG5vZGU7XG4gIHRoaXMucGFyZW50ID0gbnVsbDtcbiAgdGhpcy5jaGlsZHJlbiA9IG51bGw7XG4gIHRoaXMuQSA9IG51bGw7IC8vIGRlZmF1bHQgYW5jZXN0b3JcbiAgdGhpcy5hID0gdGhpczsgLy8gYW5jZXN0b3JcbiAgdGhpcy56ID0gMDsgLy8gcHJlbGltXG4gIHRoaXMubSA9IDA7IC8vIG1vZFxuICB0aGlzLmMgPSAwOyAvLyBjaGFuZ2VcbiAgdGhpcy5zID0gMDsgLy8gc2hpZnRcbiAgdGhpcy50ID0gbnVsbDsgLy8gdGhyZWFkXG4gIHRoaXMuaSA9IGk7IC8vIG51bWJlclxufVxuXG5UcmVlTm9kZS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKE5vZGUucHJvdG90eXBlKTtcblxuZnVuY3Rpb24gdHJlZVJvb3Qocm9vdCkge1xuICB2YXIgdHJlZSA9IG5ldyBUcmVlTm9kZShyb290LCAwKSxcbiAgICAgIG5vZGUsXG4gICAgICBub2RlcyA9IFt0cmVlXSxcbiAgICAgIGNoaWxkLFxuICAgICAgY2hpbGRyZW4sXG4gICAgICBpLFxuICAgICAgbjtcblxuICB3aGlsZSAobm9kZSA9IG5vZGVzLnBvcCgpKSB7XG4gICAgaWYgKGNoaWxkcmVuID0gbm9kZS5fLmNoaWxkcmVuKSB7XG4gICAgICBub2RlLmNoaWxkcmVuID0gbmV3IEFycmF5KG4gPSBjaGlsZHJlbi5sZW5ndGgpO1xuICAgICAgZm9yIChpID0gbiAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIG5vZGVzLnB1c2goY2hpbGQgPSBub2RlLmNoaWxkcmVuW2ldID0gbmV3IFRyZWVOb2RlKGNoaWxkcmVuW2ldLCBpKSk7XG4gICAgICAgIGNoaWxkLnBhcmVudCA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgKHRyZWUucGFyZW50ID0gbmV3IFRyZWVOb2RlKG51bGwsIDApKS5jaGlsZHJlbiA9IFt0cmVlXTtcbiAgcmV0dXJuIHRyZWU7XG59XG5cbi8vIE5vZGUtbGluayB0cmVlIGRpYWdyYW0gdXNpbmcgdGhlIFJlaW5nb2xkLVRpbGZvcmQgXCJ0aWR5XCIgYWxnb3JpdGhtXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHNlcGFyYXRpb24gPSBkZWZhdWx0U2VwYXJhdGlvbixcbiAgICAgIGR4ID0gMSxcbiAgICAgIGR5ID0gMSxcbiAgICAgIG5vZGVTaXplID0gbnVsbDtcblxuICBmdW5jdGlvbiB0cmVlKHJvb3QpIHtcbiAgICB2YXIgdCA9IHRyZWVSb290KHJvb3QpO1xuXG4gICAgLy8gQ29tcHV0ZSB0aGUgbGF5b3V0IHVzaW5nIEJ1Y2hoZWltIGV0IGFsLuKAmXMgYWxnb3JpdGhtLlxuICAgIHQuZWFjaEFmdGVyKGZpcnN0V2FsayksIHQucGFyZW50Lm0gPSAtdC56O1xuICAgIHQuZWFjaEJlZm9yZShzZWNvbmRXYWxrKTtcblxuICAgIC8vIElmIGEgZml4ZWQgbm9kZSBzaXplIGlzIHNwZWNpZmllZCwgc2NhbGUgeCBhbmQgeS5cbiAgICBpZiAobm9kZVNpemUpIHJvb3QuZWFjaEJlZm9yZShzaXplTm9kZSk7XG5cbiAgICAvLyBJZiBhIGZpeGVkIHRyZWUgc2l6ZSBpcyBzcGVjaWZpZWQsIHNjYWxlIHggYW5kIHkgYmFzZWQgb24gdGhlIGV4dGVudC5cbiAgICAvLyBDb21wdXRlIHRoZSBsZWZ0LW1vc3QsIHJpZ2h0LW1vc3QsIGFuZCBkZXB0aC1tb3N0IG5vZGVzIGZvciBleHRlbnRzLlxuICAgIGVsc2Uge1xuICAgICAgdmFyIGxlZnQgPSByb290LFxuICAgICAgICAgIHJpZ2h0ID0gcm9vdCxcbiAgICAgICAgICBib3R0b20gPSByb290O1xuICAgICAgcm9vdC5lYWNoQmVmb3JlKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgaWYgKG5vZGUueCA8IGxlZnQueCkgbGVmdCA9IG5vZGU7XG4gICAgICAgIGlmIChub2RlLnggPiByaWdodC54KSByaWdodCA9IG5vZGU7XG4gICAgICAgIGlmIChub2RlLmRlcHRoID4gYm90dG9tLmRlcHRoKSBib3R0b20gPSBub2RlO1xuICAgICAgfSk7XG4gICAgICB2YXIgcyA9IGxlZnQgPT09IHJpZ2h0ID8gMSA6IHNlcGFyYXRpb24obGVmdCwgcmlnaHQpIC8gMixcbiAgICAgICAgICB0eCA9IHMgLSBsZWZ0LngsXG4gICAgICAgICAga3ggPSBkeCAvIChyaWdodC54ICsgcyArIHR4KSxcbiAgICAgICAgICBreSA9IGR5IC8gKGJvdHRvbS5kZXB0aCB8fCAxKTtcbiAgICAgIHJvb3QuZWFjaEJlZm9yZShmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIG5vZGUueCA9IChub2RlLnggKyB0eCkgKiBreDtcbiAgICAgICAgbm9kZS55ID0gbm9kZS5kZXB0aCAqIGt5O1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJvb3Q7XG4gIH1cblxuICAvLyBDb21wdXRlcyBhIHByZWxpbWluYXJ5IHgtY29vcmRpbmF0ZSBmb3Igdi4gQmVmb3JlIHRoYXQsIEZJUlNUIFdBTEsgaXNcbiAgLy8gYXBwbGllZCByZWN1cnNpdmVseSB0byB0aGUgY2hpbGRyZW4gb2YgdiwgYXMgd2VsbCBhcyB0aGUgZnVuY3Rpb25cbiAgLy8gQVBQT1JUSU9OLiBBZnRlciBzcGFjaW5nIG91dCB0aGUgY2hpbGRyZW4gYnkgY2FsbGluZyBFWEVDVVRFIFNISUZUUywgdGhlXG4gIC8vIG5vZGUgdiBpcyBwbGFjZWQgdG8gdGhlIG1pZHBvaW50IG9mIGl0cyBvdXRlcm1vc3QgY2hpbGRyZW4uXG4gIGZ1bmN0aW9uIGZpcnN0V2Fsayh2KSB7XG4gICAgdmFyIGNoaWxkcmVuID0gdi5jaGlsZHJlbixcbiAgICAgICAgc2libGluZ3MgPSB2LnBhcmVudC5jaGlsZHJlbixcbiAgICAgICAgdyA9IHYuaSA/IHNpYmxpbmdzW3YuaSAtIDFdIDogbnVsbDtcbiAgICBpZiAoY2hpbGRyZW4pIHtcbiAgICAgIGV4ZWN1dGVTaGlmdHModik7XG4gICAgICB2YXIgbWlkcG9pbnQgPSAoY2hpbGRyZW5bMF0ueiArIGNoaWxkcmVuW2NoaWxkcmVuLmxlbmd0aCAtIDFdLnopIC8gMjtcbiAgICAgIGlmICh3KSB7XG4gICAgICAgIHYueiA9IHcueiArIHNlcGFyYXRpb24odi5fLCB3Ll8pO1xuICAgICAgICB2Lm0gPSB2LnogLSBtaWRwb2ludDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHYueiA9IG1pZHBvaW50O1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodykge1xuICAgICAgdi56ID0gdy56ICsgc2VwYXJhdGlvbih2Ll8sIHcuXyk7XG4gICAgfVxuICAgIHYucGFyZW50LkEgPSBhcHBvcnRpb24odiwgdywgdi5wYXJlbnQuQSB8fCBzaWJsaW5nc1swXSk7XG4gIH1cblxuICAvLyBDb21wdXRlcyBhbGwgcmVhbCB4LWNvb3JkaW5hdGVzIGJ5IHN1bW1pbmcgdXAgdGhlIG1vZGlmaWVycyByZWN1cnNpdmVseS5cbiAgZnVuY3Rpb24gc2Vjb25kV2Fsayh2KSB7XG4gICAgdi5fLnggPSB2LnogKyB2LnBhcmVudC5tO1xuICAgIHYubSArPSB2LnBhcmVudC5tO1xuICB9XG5cbiAgLy8gVGhlIGNvcmUgb2YgdGhlIGFsZ29yaXRobS4gSGVyZSwgYSBuZXcgc3VidHJlZSBpcyBjb21iaW5lZCB3aXRoIHRoZVxuICAvLyBwcmV2aW91cyBzdWJ0cmVlcy4gVGhyZWFkcyBhcmUgdXNlZCB0byB0cmF2ZXJzZSB0aGUgaW5zaWRlIGFuZCBvdXRzaWRlXG4gIC8vIGNvbnRvdXJzIG9mIHRoZSBsZWZ0IGFuZCByaWdodCBzdWJ0cmVlIHVwIHRvIHRoZSBoaWdoZXN0IGNvbW1vbiBsZXZlbC4gVGhlXG4gIC8vIHZlcnRpY2VzIHVzZWQgZm9yIHRoZSB0cmF2ZXJzYWxzIGFyZSB2aSssIHZpLSwgdm8tLCBhbmQgdm8rLCB3aGVyZSB0aGVcbiAgLy8gc3VwZXJzY3JpcHQgbyBtZWFucyBvdXRzaWRlIGFuZCBpIG1lYW5zIGluc2lkZSwgdGhlIHN1YnNjcmlwdCAtIG1lYW5zIGxlZnRcbiAgLy8gc3VidHJlZSBhbmQgKyBtZWFucyByaWdodCBzdWJ0cmVlLiBGb3Igc3VtbWluZyB1cCB0aGUgbW9kaWZpZXJzIGFsb25nIHRoZVxuICAvLyBjb250b3VyLCB3ZSB1c2UgcmVzcGVjdGl2ZSB2YXJpYWJsZXMgc2krLCBzaS0sIHNvLSwgYW5kIHNvKy4gV2hlbmV2ZXIgdHdvXG4gIC8vIG5vZGVzIG9mIHRoZSBpbnNpZGUgY29udG91cnMgY29uZmxpY3QsIHdlIGNvbXB1dGUgdGhlIGxlZnQgb25lIG9mIHRoZVxuICAvLyBncmVhdGVzdCB1bmNvbW1vbiBhbmNlc3RvcnMgdXNpbmcgdGhlIGZ1bmN0aW9uIEFOQ0VTVE9SIGFuZCBjYWxsIE1PVkVcbiAgLy8gU1VCVFJFRSB0byBzaGlmdCB0aGUgc3VidHJlZSBhbmQgcHJlcGFyZSB0aGUgc2hpZnRzIG9mIHNtYWxsZXIgc3VidHJlZXMuXG4gIC8vIEZpbmFsbHksIHdlIGFkZCBhIG5ldyB0aHJlYWQgKGlmIG5lY2Vzc2FyeSkuXG4gIGZ1bmN0aW9uIGFwcG9ydGlvbih2LCB3LCBhbmNlc3Rvcikge1xuICAgIGlmICh3KSB7XG4gICAgICB2YXIgdmlwID0gdixcbiAgICAgICAgICB2b3AgPSB2LFxuICAgICAgICAgIHZpbSA9IHcsXG4gICAgICAgICAgdm9tID0gdmlwLnBhcmVudC5jaGlsZHJlblswXSxcbiAgICAgICAgICBzaXAgPSB2aXAubSxcbiAgICAgICAgICBzb3AgPSB2b3AubSxcbiAgICAgICAgICBzaW0gPSB2aW0ubSxcbiAgICAgICAgICBzb20gPSB2b20ubSxcbiAgICAgICAgICBzaGlmdDtcbiAgICAgIHdoaWxlICh2aW0gPSBuZXh0UmlnaHQodmltKSwgdmlwID0gbmV4dExlZnQodmlwKSwgdmltICYmIHZpcCkge1xuICAgICAgICB2b20gPSBuZXh0TGVmdCh2b20pO1xuICAgICAgICB2b3AgPSBuZXh0UmlnaHQodm9wKTtcbiAgICAgICAgdm9wLmEgPSB2O1xuICAgICAgICBzaGlmdCA9IHZpbS56ICsgc2ltIC0gdmlwLnogLSBzaXAgKyBzZXBhcmF0aW9uKHZpbS5fLCB2aXAuXyk7XG4gICAgICAgIGlmIChzaGlmdCA+IDApIHtcbiAgICAgICAgICBtb3ZlU3VidHJlZShuZXh0QW5jZXN0b3IodmltLCB2LCBhbmNlc3RvciksIHYsIHNoaWZ0KTtcbiAgICAgICAgICBzaXAgKz0gc2hpZnQ7XG4gICAgICAgICAgc29wICs9IHNoaWZ0O1xuICAgICAgICB9XG4gICAgICAgIHNpbSArPSB2aW0ubTtcbiAgICAgICAgc2lwICs9IHZpcC5tO1xuICAgICAgICBzb20gKz0gdm9tLm07XG4gICAgICAgIHNvcCArPSB2b3AubTtcbiAgICAgIH1cbiAgICAgIGlmICh2aW0gJiYgIW5leHRSaWdodCh2b3ApKSB7XG4gICAgICAgIHZvcC50ID0gdmltO1xuICAgICAgICB2b3AubSArPSBzaW0gLSBzb3A7XG4gICAgICB9XG4gICAgICBpZiAodmlwICYmICFuZXh0TGVmdCh2b20pKSB7XG4gICAgICAgIHZvbS50ID0gdmlwO1xuICAgICAgICB2b20ubSArPSBzaXAgLSBzb207XG4gICAgICAgIGFuY2VzdG9yID0gdjtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGFuY2VzdG9yO1xuICB9XG5cbiAgZnVuY3Rpb24gc2l6ZU5vZGUobm9kZSkge1xuICAgIG5vZGUueCAqPSBkeDtcbiAgICBub2RlLnkgPSBub2RlLmRlcHRoICogZHk7XG4gIH1cblxuICB0cmVlLnNlcGFyYXRpb24gPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2VwYXJhdGlvbiA9IHgsIHRyZWUpIDogc2VwYXJhdGlvbjtcbiAgfTtcblxuICB0cmVlLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobm9kZVNpemUgPSBmYWxzZSwgZHggPSAreFswXSwgZHkgPSAreFsxXSwgdHJlZSkgOiAobm9kZVNpemUgPyBudWxsIDogW2R4LCBkeV0pO1xuICB9O1xuXG4gIHRyZWUubm9kZVNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobm9kZVNpemUgPSB0cnVlLCBkeCA9ICt4WzBdLCBkeSA9ICt4WzFdLCB0cmVlKSA6IChub2RlU2l6ZSA/IFtkeCwgZHldIDogbnVsbCk7XG4gIH07XG5cbiAgcmV0dXJuIHRyZWU7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIHZhciBub2RlcyA9IHBhcmVudC5jaGlsZHJlbixcbiAgICAgIGksIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICBzdW0sIHN1bXMgPSBuZXcgQXJyYXkobiArIDEpO1xuXG4gIGZvciAoc3Vtc1swXSA9IHN1bSA9IGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgc3Vtc1tpICsgMV0gPSBzdW0gKz0gbm9kZXNbaV0udmFsdWU7XG4gIH1cblxuICBwYXJ0aXRpb24oMCwgbiwgcGFyZW50LnZhbHVlLCB4MCwgeTAsIHgxLCB5MSk7XG5cbiAgZnVuY3Rpb24gcGFydGl0aW9uKGksIGosIHZhbHVlLCB4MCwgeTAsIHgxLCB5MSkge1xuICAgIGlmIChpID49IGogLSAxKSB7XG4gICAgICB2YXIgbm9kZSA9IG5vZGVzW2ldO1xuICAgICAgbm9kZS54MCA9IHgwLCBub2RlLnkwID0geTA7XG4gICAgICBub2RlLngxID0geDEsIG5vZGUueTEgPSB5MTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgdmFsdWVPZmZzZXQgPSBzdW1zW2ldLFxuICAgICAgICB2YWx1ZVRhcmdldCA9ICh2YWx1ZSAvIDIpICsgdmFsdWVPZmZzZXQsXG4gICAgICAgIGsgPSBpICsgMSxcbiAgICAgICAgaGkgPSBqIC0gMTtcblxuICAgIHdoaWxlIChrIDwgaGkpIHtcbiAgICAgIHZhciBtaWQgPSBrICsgaGkgPj4+IDE7XG4gICAgICBpZiAoc3Vtc1ttaWRdIDwgdmFsdWVUYXJnZXQpIGsgPSBtaWQgKyAxO1xuICAgICAgZWxzZSBoaSA9IG1pZDtcbiAgICB9XG5cbiAgICBpZiAoKHZhbHVlVGFyZ2V0IC0gc3Vtc1trIC0gMV0pIDwgKHN1bXNba10gLSB2YWx1ZVRhcmdldCkgJiYgaSArIDEgPCBrKSAtLWs7XG5cbiAgICB2YXIgdmFsdWVMZWZ0ID0gc3Vtc1trXSAtIHZhbHVlT2Zmc2V0LFxuICAgICAgICB2YWx1ZVJpZ2h0ID0gdmFsdWUgLSB2YWx1ZUxlZnQ7XG5cbiAgICBpZiAoKHgxIC0geDApID4gKHkxIC0geTApKSB7XG4gICAgICB2YXIgeGsgPSAoeDAgKiB2YWx1ZVJpZ2h0ICsgeDEgKiB2YWx1ZUxlZnQpIC8gdmFsdWU7XG4gICAgICBwYXJ0aXRpb24oaSwgaywgdmFsdWVMZWZ0LCB4MCwgeTAsIHhrLCB5MSk7XG4gICAgICBwYXJ0aXRpb24oaywgaiwgdmFsdWVSaWdodCwgeGssIHkwLCB4MSwgeTEpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgeWsgPSAoeTAgKiB2YWx1ZVJpZ2h0ICsgeTEgKiB2YWx1ZUxlZnQpIC8gdmFsdWU7XG4gICAgICBwYXJ0aXRpb24oaSwgaywgdmFsdWVMZWZ0LCB4MCwgeTAsIHgxLCB5ayk7XG4gICAgICBwYXJ0aXRpb24oaywgaiwgdmFsdWVSaWdodCwgeDAsIHlrLCB4MSwgeTEpO1xuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgbm9kZXMgPSBwYXJlbnQuY2hpbGRyZW4sXG4gICAgICBub2RlLFxuICAgICAgaSA9IC0xLFxuICAgICAgbiA9IG5vZGVzLmxlbmd0aCxcbiAgICAgIGsgPSBwYXJlbnQudmFsdWUgJiYgKHgxIC0geDApIC8gcGFyZW50LnZhbHVlO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlLnkwID0geTAsIG5vZGUueTEgPSB5MTtcbiAgICBub2RlLngwID0geDAsIG5vZGUueDEgPSB4MCArPSBub2RlLnZhbHVlICogaztcbiAgfVxufVxuIiwiaW1wb3J0IHJvdW5kTm9kZSBmcm9tIFwiLi9yb3VuZFwiO1xuaW1wb3J0IHNxdWFyaWZ5IGZyb20gXCIuL3NxdWFyaWZ5XCI7XG5pbXBvcnQge3JlcXVpcmVkfSBmcm9tIFwiLi4vYWNjZXNzb3JzXCI7XG5pbXBvcnQgY29uc3RhbnQsIHtjb25zdGFudFplcm99IGZyb20gXCIuLi9jb25zdGFudFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHRpbGUgPSBzcXVhcmlmeSxcbiAgICAgIHJvdW5kID0gZmFsc2UsXG4gICAgICBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBwYWRkaW5nU3RhY2sgPSBbMF0sXG4gICAgICBwYWRkaW5nSW5uZXIgPSBjb25zdGFudFplcm8sXG4gICAgICBwYWRkaW5nVG9wID0gY29uc3RhbnRaZXJvLFxuICAgICAgcGFkZGluZ1JpZ2h0ID0gY29uc3RhbnRaZXJvLFxuICAgICAgcGFkZGluZ0JvdHRvbSA9IGNvbnN0YW50WmVybyxcbiAgICAgIHBhZGRpbmdMZWZ0ID0gY29uc3RhbnRaZXJvO1xuXG4gIGZ1bmN0aW9uIHRyZWVtYXAocm9vdCkge1xuICAgIHJvb3QueDAgPVxuICAgIHJvb3QueTAgPSAwO1xuICAgIHJvb3QueDEgPSBkeDtcbiAgICByb290LnkxID0gZHk7XG4gICAgcm9vdC5lYWNoQmVmb3JlKHBvc2l0aW9uTm9kZSk7XG4gICAgcGFkZGluZ1N0YWNrID0gWzBdO1xuICAgIGlmIChyb3VuZCkgcm9vdC5lYWNoQmVmb3JlKHJvdW5kTm9kZSk7XG4gICAgcmV0dXJuIHJvb3Q7XG4gIH1cblxuICBmdW5jdGlvbiBwb3NpdGlvbk5vZGUobm9kZSkge1xuICAgIHZhciBwID0gcGFkZGluZ1N0YWNrW25vZGUuZGVwdGhdLFxuICAgICAgICB4MCA9IG5vZGUueDAgKyBwLFxuICAgICAgICB5MCA9IG5vZGUueTAgKyBwLFxuICAgICAgICB4MSA9IG5vZGUueDEgLSBwLFxuICAgICAgICB5MSA9IG5vZGUueTEgLSBwO1xuICAgIGlmICh4MSA8IHgwKSB4MCA9IHgxID0gKHgwICsgeDEpIC8gMjtcbiAgICBpZiAoeTEgPCB5MCkgeTAgPSB5MSA9ICh5MCArIHkxKSAvIDI7XG4gICAgbm9kZS54MCA9IHgwO1xuICAgIG5vZGUueTAgPSB5MDtcbiAgICBub2RlLngxID0geDE7XG4gICAgbm9kZS55MSA9IHkxO1xuICAgIGlmIChub2RlLmNoaWxkcmVuKSB7XG4gICAgICBwID0gcGFkZGluZ1N0YWNrW25vZGUuZGVwdGggKyAxXSA9IHBhZGRpbmdJbm5lcihub2RlKSAvIDI7XG4gICAgICB4MCArPSBwYWRkaW5nTGVmdChub2RlKSAtIHA7XG4gICAgICB5MCArPSBwYWRkaW5nVG9wKG5vZGUpIC0gcDtcbiAgICAgIHgxIC09IHBhZGRpbmdSaWdodChub2RlKSAtIHA7XG4gICAgICB5MSAtPSBwYWRkaW5nQm90dG9tKG5vZGUpIC0gcDtcbiAgICAgIGlmICh4MSA8IHgwKSB4MCA9IHgxID0gKHgwICsgeDEpIC8gMjtcbiAgICAgIGlmICh5MSA8IHkwKSB5MCA9IHkxID0gKHkwICsgeTEpIC8gMjtcbiAgICAgIHRpbGUobm9kZSwgeDAsIHkwLCB4MSwgeTEpO1xuICAgIH1cbiAgfVxuXG4gIHRyZWVtYXAucm91bmQgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocm91bmQgPSAhIXgsIHRyZWVtYXApIDogcm91bmQ7XG4gIH07XG5cbiAgdHJlZW1hcC5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIHRyZWVtYXApIDogW2R4LCBkeV07XG4gIH07XG5cbiAgdHJlZW1hcC50aWxlID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpbGUgPSByZXF1aXJlZCh4KSwgdHJlZW1hcCkgOiB0aWxlO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZyA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRyZWVtYXAucGFkZGluZ0lubmVyKHgpLnBhZGRpbmdPdXRlcih4KSA6IHRyZWVtYXAucGFkZGluZ0lubmVyKCk7XG4gIH07XG5cbiAgdHJlZW1hcC5wYWRkaW5nSW5uZXIgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkZGluZ0lubmVyID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiBjb25zdGFudCgreCksIHRyZWVtYXApIDogcGFkZGluZ0lubmVyO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZ091dGVyID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdHJlZW1hcC5wYWRkaW5nVG9wKHgpLnBhZGRpbmdSaWdodCh4KS5wYWRkaW5nQm90dG9tKHgpLnBhZGRpbmdMZWZ0KHgpIDogdHJlZW1hcC5wYWRkaW5nVG9wKCk7XG4gIH07XG5cbiAgdHJlZW1hcC5wYWRkaW5nVG9wID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdUb3AgPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6IGNvbnN0YW50KCt4KSwgdHJlZW1hcCkgOiBwYWRkaW5nVG9wO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZ1JpZ2h0ID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdSaWdodCA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCB0cmVlbWFwKSA6IHBhZGRpbmdSaWdodDtcbiAgfTtcblxuICB0cmVlbWFwLnBhZGRpbmdCb3R0b20gPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkZGluZ0JvdHRvbSA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCB0cmVlbWFwKSA6IHBhZGRpbmdCb3R0b207XG4gIH07XG5cbiAgdHJlZW1hcC5wYWRkaW5nTGVmdCA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nTGVmdCA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCB0cmVlbWFwKSA6IHBhZGRpbmdMZWZ0O1xuICB9O1xuXG4gIHJldHVybiB0cmVlbWFwO1xufVxuIiwiaW1wb3J0IHRyZWVtYXBEaWNlIGZyb20gXCIuL2RpY2VcIjtcbmltcG9ydCB0cmVlbWFwU2xpY2UgZnJvbSBcIi4vc2xpY2VcIjtcbmltcG9ydCB7cGhpLCBzcXVhcmlmeVJhdGlvfSBmcm9tIFwiLi9zcXVhcmlmeVwiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gY3VzdG9tKHJhdGlvKSB7XG5cbiAgZnVuY3Rpb24gcmVzcXVhcmlmeShwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gICAgaWYgKChyb3dzID0gcGFyZW50Ll9zcXVhcmlmeSkgJiYgKHJvd3MucmF0aW8gPT09IHJhdGlvKSkge1xuICAgICAgdmFyIHJvd3MsXG4gICAgICAgICAgcm93LFxuICAgICAgICAgIG5vZGVzLFxuICAgICAgICAgIGksXG4gICAgICAgICAgaiA9IC0xLFxuICAgICAgICAgIG4sXG4gICAgICAgICAgbSA9IHJvd3MubGVuZ3RoLFxuICAgICAgICAgIHZhbHVlID0gcGFyZW50LnZhbHVlO1xuXG4gICAgICB3aGlsZSAoKytqIDwgbSkge1xuICAgICAgICByb3cgPSByb3dzW2pdLCBub2RlcyA9IHJvdy5jaGlsZHJlbjtcbiAgICAgICAgZm9yIChpID0gcm93LnZhbHVlID0gMCwgbiA9IG5vZGVzLmxlbmd0aDsgaSA8IG47ICsraSkgcm93LnZhbHVlICs9IG5vZGVzW2ldLnZhbHVlO1xuICAgICAgICBpZiAocm93LmRpY2UpIHRyZWVtYXBEaWNlKHJvdywgeDAsIHkwLCB4MSwgeTAgKz0gKHkxIC0geTApICogcm93LnZhbHVlIC8gdmFsdWUpO1xuICAgICAgICBlbHNlIHRyZWVtYXBTbGljZShyb3csIHgwLCB5MCwgeDAgKz0gKHgxIC0geDApICogcm93LnZhbHVlIC8gdmFsdWUsIHkxKTtcbiAgICAgICAgdmFsdWUgLT0gcm93LnZhbHVlO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBwYXJlbnQuX3NxdWFyaWZ5ID0gcm93cyA9IHNxdWFyaWZ5UmF0aW8ocmF0aW8sIHBhcmVudCwgeDAsIHkwLCB4MSwgeTEpO1xuICAgICAgcm93cy5yYXRpbyA9IHJhdGlvO1xuICAgIH1cbiAgfVxuXG4gIHJlc3F1YXJpZnkucmF0aW8gPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGN1c3RvbSgoeCA9ICt4KSA+IDEgPyB4IDogMSk7XG4gIH07XG5cbiAgcmV0dXJuIHJlc3F1YXJpZnk7XG59KShwaGkpO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSkge1xuICBub2RlLngwID0gTWF0aC5yb3VuZChub2RlLngwKTtcbiAgbm9kZS55MCA9IE1hdGgucm91bmQobm9kZS55MCk7XG4gIG5vZGUueDEgPSBNYXRoLnJvdW5kKG5vZGUueDEpO1xuICBub2RlLnkxID0gTWF0aC5yb3VuZChub2RlLnkxKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHBhcmVudCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgdmFyIG5vZGVzID0gcGFyZW50LmNoaWxkcmVuLFxuICAgICAgbm9kZSxcbiAgICAgIGkgPSAtMSxcbiAgICAgIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICBrID0gcGFyZW50LnZhbHVlICYmICh5MSAtIHkwKSAvIHBhcmVudC52YWx1ZTtcblxuICB3aGlsZSAoKytpIDwgbikge1xuICAgIG5vZGUgPSBub2Rlc1tpXSwgbm9kZS54MCA9IHgwLCBub2RlLngxID0geDE7XG4gICAgbm9kZS55MCA9IHkwLCBub2RlLnkxID0geTAgKz0gbm9kZS52YWx1ZSAqIGs7XG4gIH1cbn1cbiIsImltcG9ydCBkaWNlIGZyb20gXCIuL2RpY2VcIjtcbmltcG9ydCBzbGljZSBmcm9tIFwiLi9zbGljZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIChwYXJlbnQuZGVwdGggJiAxID8gc2xpY2UgOiBkaWNlKShwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKTtcbn1cbiIsImltcG9ydCB0cmVlbWFwRGljZSBmcm9tIFwiLi9kaWNlXCI7XG5pbXBvcnQgdHJlZW1hcFNsaWNlIGZyb20gXCIuL3NsaWNlXCI7XG5cbmV4cG9ydCB2YXIgcGhpID0gKDEgKyBNYXRoLnNxcnQoNSkpIC8gMjtcblxuZXhwb3J0IGZ1bmN0aW9uIHNxdWFyaWZ5UmF0aW8ocmF0aW8sIHBhcmVudCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgdmFyIHJvd3MgPSBbXSxcbiAgICAgIG5vZGVzID0gcGFyZW50LmNoaWxkcmVuLFxuICAgICAgcm93LFxuICAgICAgbm9kZVZhbHVlLFxuICAgICAgaTAgPSAwLFxuICAgICAgaTEgPSAwLFxuICAgICAgbiA9IG5vZGVzLmxlbmd0aCxcbiAgICAgIGR4LCBkeSxcbiAgICAgIHZhbHVlID0gcGFyZW50LnZhbHVlLFxuICAgICAgc3VtVmFsdWUsXG4gICAgICBtaW5WYWx1ZSxcbiAgICAgIG1heFZhbHVlLFxuICAgICAgbmV3UmF0aW8sXG4gICAgICBtaW5SYXRpbyxcbiAgICAgIGFscGhhLFxuICAgICAgYmV0YTtcblxuICB3aGlsZSAoaTAgPCBuKSB7XG4gICAgZHggPSB4MSAtIHgwLCBkeSA9IHkxIC0geTA7XG5cbiAgICAvLyBGaW5kIHRoZSBuZXh0IG5vbi1lbXB0eSBub2RlLlxuICAgIGRvIHN1bVZhbHVlID0gbm9kZXNbaTErK10udmFsdWU7IHdoaWxlICghc3VtVmFsdWUgJiYgaTEgPCBuKTtcbiAgICBtaW5WYWx1ZSA9IG1heFZhbHVlID0gc3VtVmFsdWU7XG4gICAgYWxwaGEgPSBNYXRoLm1heChkeSAvIGR4LCBkeCAvIGR5KSAvICh2YWx1ZSAqIHJhdGlvKTtcbiAgICBiZXRhID0gc3VtVmFsdWUgKiBzdW1WYWx1ZSAqIGFscGhhO1xuICAgIG1pblJhdGlvID0gTWF0aC5tYXgobWF4VmFsdWUgLyBiZXRhLCBiZXRhIC8gbWluVmFsdWUpO1xuXG4gICAgLy8gS2VlcCBhZGRpbmcgbm9kZXMgd2hpbGUgdGhlIGFzcGVjdCByYXRpbyBtYWludGFpbnMgb3IgaW1wcm92ZXMuXG4gICAgZm9yICg7IGkxIDwgbjsgKytpMSkge1xuICAgICAgc3VtVmFsdWUgKz0gbm9kZVZhbHVlID0gbm9kZXNbaTFdLnZhbHVlO1xuICAgICAgaWYgKG5vZGVWYWx1ZSA8IG1pblZhbHVlKSBtaW5WYWx1ZSA9IG5vZGVWYWx1ZTtcbiAgICAgIGlmIChub2RlVmFsdWUgPiBtYXhWYWx1ZSkgbWF4VmFsdWUgPSBub2RlVmFsdWU7XG4gICAgICBiZXRhID0gc3VtVmFsdWUgKiBzdW1WYWx1ZSAqIGFscGhhO1xuICAgICAgbmV3UmF0aW8gPSBNYXRoLm1heChtYXhWYWx1ZSAvIGJldGEsIGJldGEgLyBtaW5WYWx1ZSk7XG4gICAgICBpZiAobmV3UmF0aW8gPiBtaW5SYXRpbykgeyBzdW1WYWx1ZSAtPSBub2RlVmFsdWU7IGJyZWFrOyB9XG4gICAgICBtaW5SYXRpbyA9IG5ld1JhdGlvO1xuICAgIH1cblxuICAgIC8vIFBvc2l0aW9uIGFuZCByZWNvcmQgdGhlIHJvdyBvcmllbnRhdGlvbi5cbiAgICByb3dzLnB1c2gocm93ID0ge3ZhbHVlOiBzdW1WYWx1ZSwgZGljZTogZHggPCBkeSwgY2hpbGRyZW46IG5vZGVzLnNsaWNlKGkwLCBpMSl9KTtcbiAgICBpZiAocm93LmRpY2UpIHRyZWVtYXBEaWNlKHJvdywgeDAsIHkwLCB4MSwgdmFsdWUgPyB5MCArPSBkeSAqIHN1bVZhbHVlIC8gdmFsdWUgOiB5MSk7XG4gICAgZWxzZSB0cmVlbWFwU2xpY2Uocm93LCB4MCwgeTAsIHZhbHVlID8geDAgKz0gZHggKiBzdW1WYWx1ZSAvIHZhbHVlIDogeDEsIHkxKTtcbiAgICB2YWx1ZSAtPSBzdW1WYWx1ZSwgaTAgPSBpMTtcbiAgfVxuXG4gIHJldHVybiByb3dzO1xufVxuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gY3VzdG9tKHJhdGlvKSB7XG5cbiAgZnVuY3Rpb24gc3F1YXJpZnkocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICAgIHNxdWFyaWZ5UmF0aW8ocmF0aW8sIHBhcmVudCwgeDAsIHkwLCB4MSwgeTEpO1xuICB9XG5cbiAgc3F1YXJpZnkucmF0aW8gPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGN1c3RvbSgoeCA9ICt4KSA+IDEgPyB4IDogMSk7XG4gIH07XG5cbiAgcmV0dXJuIHNxdWFyaWZ5O1xufSkocGhpKTtcbiIsImltcG9ydCB2YWx1ZSBmcm9tIFwiLi92YWx1ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciBuYiA9IGIgPyBiLmxlbmd0aCA6IDAsXG4gICAgICBuYSA9IGEgPyBNYXRoLm1pbihuYiwgYS5sZW5ndGgpIDogMCxcbiAgICAgIHggPSBuZXcgQXJyYXkobmEpLFxuICAgICAgYyA9IG5ldyBBcnJheShuYiksXG4gICAgICBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBuYTsgKytpKSB4W2ldID0gdmFsdWUoYVtpXSwgYltpXSk7XG4gIGZvciAoOyBpIDwgbmI7ICsraSkgY1tpXSA9IGJbaV07XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbmE7ICsraSkgY1tpXSA9IHhbaV0odCk7XG4gICAgcmV0dXJuIGM7XG4gIH07XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gYmFzaXModDEsIHYwLCB2MSwgdjIsIHYzKSB7XG4gIHZhciB0MiA9IHQxICogdDEsIHQzID0gdDIgKiB0MTtcbiAgcmV0dXJuICgoMSAtIDMgKiB0MSArIDMgKiB0MiAtIHQzKSAqIHYwXG4gICAgICArICg0IC0gNiAqIHQyICsgMyAqIHQzKSAqIHYxXG4gICAgICArICgxICsgMyAqIHQxICsgMyAqIHQyIC0gMyAqIHQzKSAqIHYyXG4gICAgICArIHQzICogdjMpIC8gNjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCAtIDE7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdmFyIGkgPSB0IDw9IDAgPyAodCA9IDApIDogdCA+PSAxID8gKHQgPSAxLCBuIC0gMSkgOiBNYXRoLmZsb29yKHQgKiBuKSxcbiAgICAgICAgdjEgPSB2YWx1ZXNbaV0sXG4gICAgICAgIHYyID0gdmFsdWVzW2kgKyAxXSxcbiAgICAgICAgdjAgPSBpID4gMCA/IHZhbHVlc1tpIC0gMV0gOiAyICogdjEgLSB2MixcbiAgICAgICAgdjMgPSBpIDwgbiAtIDEgPyB2YWx1ZXNbaSArIDJdIDogMiAqIHYyIC0gdjE7XG4gICAgcmV0dXJuIGJhc2lzKCh0IC0gaSAvIG4pICogbiwgdjAsIHYxLCB2MiwgdjMpO1xuICB9O1xufVxuIiwiaW1wb3J0IHtiYXNpc30gZnJvbSBcIi4vYmFzaXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aDtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgaSA9IE1hdGguZmxvb3IoKCh0ICU9IDEpIDwgMCA/ICsrdCA6IHQpICogbiksXG4gICAgICAgIHYwID0gdmFsdWVzWyhpICsgbiAtIDEpICUgbl0sXG4gICAgICAgIHYxID0gdmFsdWVzW2kgJSBuXSxcbiAgICAgICAgdjIgPSB2YWx1ZXNbKGkgKyAxKSAlIG5dLFxuICAgICAgICB2MyA9IHZhbHVlc1soaSArIDIpICUgbl07XG4gICAgcmV0dXJuIGJhc2lzKCh0IC0gaSAvIG4pICogbiwgdjAsIHYxLCB2MiwgdjMpO1xuICB9O1xufVxuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5cbmZ1bmN0aW9uIGxpbmVhcihhLCBkKSB7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIGEgKyB0ICogZDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZXhwb25lbnRpYWwoYSwgYiwgeSkge1xuICByZXR1cm4gYSA9IE1hdGgucG93KGEsIHkpLCBiID0gTWF0aC5wb3coYiwgeSkgLSBhLCB5ID0gMSAvIHksIGZ1bmN0aW9uKHQpIHtcbiAgICByZXR1cm4gTWF0aC5wb3coYSArIHQgKiBiLCB5KTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGh1ZShhLCBiKSB7XG4gIHZhciBkID0gYiAtIGE7XG4gIHJldHVybiBkID8gbGluZWFyKGEsIGQgPiAxODAgfHwgZCA8IC0xODAgPyBkIC0gMzYwICogTWF0aC5yb3VuZChkIC8gMzYwKSA6IGQpIDogY29uc3RhbnQoaXNOYU4oYSkgPyBiIDogYSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnYW1tYSh5KSB7XG4gIHJldHVybiAoeSA9ICt5KSA9PT0gMSA/IG5vZ2FtbWEgOiBmdW5jdGlvbihhLCBiKSB7XG4gICAgcmV0dXJuIGIgLSBhID8gZXhwb25lbnRpYWwoYSwgYiwgeSkgOiBjb25zdGFudChpc05hTihhKSA/IGIgOiBhKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbm9nYW1tYShhLCBiKSB7XG4gIHZhciBkID0gYiAtIGE7XG4gIHJldHVybiBkID8gbGluZWFyKGEsIGQpIDogY29uc3RhbnQoaXNOYU4oYSkgPyBiIDogYSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImltcG9ydCB7Y3ViZWhlbGl4IGFzIGNvbG9yQ3ViZWhlbGl4fSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCBjb2xvciwge2h1ZX0gZnJvbSBcIi4vY29sb3JcIjtcblxuZnVuY3Rpb24gY3ViZWhlbGl4KGh1ZSkge1xuICByZXR1cm4gKGZ1bmN0aW9uIGN1YmVoZWxpeEdhbW1hKHkpIHtcbiAgICB5ID0gK3k7XG5cbiAgICBmdW5jdGlvbiBjdWJlaGVsaXgoc3RhcnQsIGVuZCkge1xuICAgICAgdmFyIGggPSBodWUoKHN0YXJ0ID0gY29sb3JDdWJlaGVsaXgoc3RhcnQpKS5oLCAoZW5kID0gY29sb3JDdWJlaGVsaXgoZW5kKSkuaCksXG4gICAgICAgICAgcyA9IGNvbG9yKHN0YXJ0LnMsIGVuZC5zKSxcbiAgICAgICAgICBsID0gY29sb3Ioc3RhcnQubCwgZW5kLmwpLFxuICAgICAgICAgIG9wYWNpdHkgPSBjb2xvcihzdGFydC5vcGFjaXR5LCBlbmQub3BhY2l0eSk7XG4gICAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgICBzdGFydC5oID0gaCh0KTtcbiAgICAgICAgc3RhcnQucyA9IHModCk7XG4gICAgICAgIHN0YXJ0LmwgPSBsKE1hdGgucG93KHQsIHkpKTtcbiAgICAgICAgc3RhcnQub3BhY2l0eSA9IG9wYWNpdHkodCk7XG4gICAgICAgIHJldHVybiBzdGFydCArIFwiXCI7XG4gICAgICB9O1xuICAgIH1cblxuICAgIGN1YmVoZWxpeC5nYW1tYSA9IGN1YmVoZWxpeEdhbW1hO1xuXG4gICAgcmV0dXJuIGN1YmVoZWxpeDtcbiAgfSkoMSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGN1YmVoZWxpeChodWUpO1xuZXhwb3J0IHZhciBjdWJlaGVsaXhMb25nID0gY3ViZWhlbGl4KGNvbG9yKTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIGQgPSBuZXcgRGF0ZTtcbiAgcmV0dXJuIGEgPSArYSwgYiAtPSBhLCBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIGQuc2V0VGltZShhICsgYiAqIHQpLCBkO1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocmFuZ2UpIHtcbiAgdmFyIG4gPSByYW5nZS5sZW5ndGg7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIHJhbmdlW01hdGgubWF4KDAsIE1hdGgubWluKG4gLSAxLCBNYXRoLmZsb29yKHQgKiBuKSkpXTtcbiAgfTtcbn1cbiIsImltcG9ydCB7aGNsIGFzIGNvbG9ySGNsfSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCBjb2xvciwge2h1ZX0gZnJvbSBcIi4vY29sb3JcIjtcblxuZnVuY3Rpb24gaGNsKGh1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgIHZhciBoID0gaHVlKChzdGFydCA9IGNvbG9ySGNsKHN0YXJ0KSkuaCwgKGVuZCA9IGNvbG9ySGNsKGVuZCkpLmgpLFxuICAgICAgICBjID0gY29sb3Ioc3RhcnQuYywgZW5kLmMpLFxuICAgICAgICBsID0gY29sb3Ioc3RhcnQubCwgZW5kLmwpLFxuICAgICAgICBvcGFjaXR5ID0gY29sb3Ioc3RhcnQub3BhY2l0eSwgZW5kLm9wYWNpdHkpO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBzdGFydC5oID0gaCh0KTtcbiAgICAgIHN0YXJ0LmMgPSBjKHQpO1xuICAgICAgc3RhcnQubCA9IGwodCk7XG4gICAgICBzdGFydC5vcGFjaXR5ID0gb3BhY2l0eSh0KTtcbiAgICAgIHJldHVybiBzdGFydCArIFwiXCI7XG4gICAgfTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBoY2woaHVlKTtcbmV4cG9ydCB2YXIgaGNsTG9uZyA9IGhjbChjb2xvcik7XG4iLCJpbXBvcnQge2hzbCBhcyBjb2xvckhzbH0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQgY29sb3IsIHtodWV9IGZyb20gXCIuL2NvbG9yXCI7XG5cbmZ1bmN0aW9uIGhzbChodWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICB2YXIgaCA9IGh1ZSgoc3RhcnQgPSBjb2xvckhzbChzdGFydCkpLmgsIChlbmQgPSBjb2xvckhzbChlbmQpKS5oKSxcbiAgICAgICAgcyA9IGNvbG9yKHN0YXJ0LnMsIGVuZC5zKSxcbiAgICAgICAgbCA9IGNvbG9yKHN0YXJ0LmwsIGVuZC5sKSxcbiAgICAgICAgb3BhY2l0eSA9IGNvbG9yKHN0YXJ0Lm9wYWNpdHksIGVuZC5vcGFjaXR5KTtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgc3RhcnQuaCA9IGgodCk7XG4gICAgICBzdGFydC5zID0gcyh0KTtcbiAgICAgIHN0YXJ0LmwgPSBsKHQpO1xuICAgICAgc3RhcnQub3BhY2l0eSA9IG9wYWNpdHkodCk7XG4gICAgICByZXR1cm4gc3RhcnQgKyBcIlwiO1xuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgaHNsKGh1ZSk7XG5leHBvcnQgdmFyIGhzbExvbmcgPSBoc2woY29sb3IpO1xuIiwiaW1wb3J0IHtodWV9IGZyb20gXCIuL2NvbG9yXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIGkgPSBodWUoK2EsICtiKTtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgeCA9IGkodCk7XG4gICAgcmV0dXJuIHggLSAzNjAgKiBNYXRoLmZsb29yKHggLyAzNjApO1xuICB9O1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlfSBmcm9tIFwiLi92YWx1ZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlQXJyYXl9IGZyb20gXCIuL2FycmF5XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVCYXNpc30gZnJvbSBcIi4vYmFzaXNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUJhc2lzQ2xvc2VkfSBmcm9tIFwiLi9iYXNpc0Nsb3NlZFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlRGF0ZX0gZnJvbSBcIi4vZGF0ZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlRGlzY3JldGV9IGZyb20gXCIuL2Rpc2NyZXRlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVIdWV9IGZyb20gXCIuL2h1ZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlTnVtYmVyfSBmcm9tIFwiLi9udW1iZXJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZU9iamVjdH0gZnJvbSBcIi4vb2JqZWN0XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVSb3VuZH0gZnJvbSBcIi4vcm91bmRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVN0cmluZ30gZnJvbSBcIi4vc3RyaW5nXCI7XG5leHBvcnQge2ludGVycG9sYXRlVHJhbnNmb3JtQ3NzLCBpbnRlcnBvbGF0ZVRyYW5zZm9ybVN2Z30gZnJvbSBcIi4vdHJhbnNmb3JtL2luZGV4XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVab29tfSBmcm9tIFwiLi96b29tXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVSZ2IsIHJnYkJhc2lzIGFzIGludGVycG9sYXRlUmdiQmFzaXMsIHJnYkJhc2lzQ2xvc2VkIGFzIGludGVycG9sYXRlUmdiQmFzaXNDbG9zZWR9IGZyb20gXCIuL3JnYlwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlSHNsLCBoc2xMb25nIGFzIGludGVycG9sYXRlSHNsTG9uZ30gZnJvbSBcIi4vaHNsXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVMYWJ9IGZyb20gXCIuL2xhYlwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlSGNsLCBoY2xMb25nIGFzIGludGVycG9sYXRlSGNsTG9uZ30gZnJvbSBcIi4vaGNsXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVDdWJlaGVsaXgsIGN1YmVoZWxpeExvbmcgYXMgaW50ZXJwb2xhdGVDdWJlaGVsaXhMb25nfSBmcm9tIFwiLi9jdWJlaGVsaXhcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwaWVjZXdpc2V9IGZyb20gXCIuL3BpZWNld2lzZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHF1YW50aXplfSBmcm9tIFwiLi9xdWFudGl6ZVwiO1xuIiwiaW1wb3J0IHtsYWIgYXMgY29sb3JMYWJ9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IGNvbG9yIGZyb20gXCIuL2NvbG9yXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxhYihzdGFydCwgZW5kKSB7XG4gIHZhciBsID0gY29sb3IoKHN0YXJ0ID0gY29sb3JMYWIoc3RhcnQpKS5sLCAoZW5kID0gY29sb3JMYWIoZW5kKSkubCksXG4gICAgICBhID0gY29sb3Ioc3RhcnQuYSwgZW5kLmEpLFxuICAgICAgYiA9IGNvbG9yKHN0YXJ0LmIsIGVuZC5iKSxcbiAgICAgIG9wYWNpdHkgPSBjb2xvcihzdGFydC5vcGFjaXR5LCBlbmQub3BhY2l0eSk7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgc3RhcnQubCA9IGwodCk7XG4gICAgc3RhcnQuYSA9IGEodCk7XG4gICAgc3RhcnQuYiA9IGIodCk7XG4gICAgc3RhcnQub3BhY2l0eSA9IG9wYWNpdHkodCk7XG4gICAgcmV0dXJuIHN0YXJ0ICsgXCJcIjtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGEgPSArYSwgYiAtPSBhLCBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIGEgKyBiICogdDtcbiAgfTtcbn1cbiIsImltcG9ydCB2YWx1ZSBmcm9tIFwiLi92YWx1ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciBpID0ge30sXG4gICAgICBjID0ge30sXG4gICAgICBrO1xuXG4gIGlmIChhID09PSBudWxsIHx8IHR5cGVvZiBhICE9PSBcIm9iamVjdFwiKSBhID0ge307XG4gIGlmIChiID09PSBudWxsIHx8IHR5cGVvZiBiICE9PSBcIm9iamVjdFwiKSBiID0ge307XG5cbiAgZm9yIChrIGluIGIpIHtcbiAgICBpZiAoayBpbiBhKSB7XG4gICAgICBpW2tdID0gdmFsdWUoYVtrXSwgYltrXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNba10gPSBiW2tdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgZm9yIChrIGluIGkpIGNba10gPSBpW2tdKHQpO1xuICAgIHJldHVybiBjO1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGllY2V3aXNlKGludGVycG9sYXRlLCB2YWx1ZXMpIHtcbiAgdmFyIGkgPSAwLCBuID0gdmFsdWVzLmxlbmd0aCAtIDEsIHYgPSB2YWx1ZXNbMF0sIEkgPSBuZXcgQXJyYXkobiA8IDAgPyAwIDogbik7XG4gIHdoaWxlIChpIDwgbikgSVtpXSA9IGludGVycG9sYXRlKHYsIHYgPSB2YWx1ZXNbKytpXSk7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdmFyIGkgPSBNYXRoLm1heCgwLCBNYXRoLm1pbihuIC0gMSwgTWF0aC5mbG9vcih0ICo9IG4pKSk7XG4gICAgcmV0dXJuIElbaV0odCAtIGkpO1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW50ZXJwb2xhdG9yLCBuKSB7XG4gIHZhciBzYW1wbGVzID0gbmV3IEFycmF5KG4pO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IG47ICsraSkgc2FtcGxlc1tpXSA9IGludGVycG9sYXRvcihpIC8gKG4gLSAxKSk7XG4gIHJldHVybiBzYW1wbGVzO1xufVxuIiwiaW1wb3J0IHtyZ2IgYXMgY29sb3JSZ2J9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IGJhc2lzIGZyb20gXCIuL2Jhc2lzXCI7XG5pbXBvcnQgYmFzaXNDbG9zZWQgZnJvbSBcIi4vYmFzaXNDbG9zZWRcIjtcbmltcG9ydCBub2dhbW1hLCB7Z2FtbWF9IGZyb20gXCIuL2NvbG9yXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiByZ2JHYW1tYSh5KSB7XG4gIHZhciBjb2xvciA9IGdhbW1hKHkpO1xuXG4gIGZ1bmN0aW9uIHJnYihzdGFydCwgZW5kKSB7XG4gICAgdmFyIHIgPSBjb2xvcigoc3RhcnQgPSBjb2xvclJnYihzdGFydCkpLnIsIChlbmQgPSBjb2xvclJnYihlbmQpKS5yKSxcbiAgICAgICAgZyA9IGNvbG9yKHN0YXJ0LmcsIGVuZC5nKSxcbiAgICAgICAgYiA9IGNvbG9yKHN0YXJ0LmIsIGVuZC5iKSxcbiAgICAgICAgb3BhY2l0eSA9IG5vZ2FtbWEoc3RhcnQub3BhY2l0eSwgZW5kLm9wYWNpdHkpO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBzdGFydC5yID0gcih0KTtcbiAgICAgIHN0YXJ0LmcgPSBnKHQpO1xuICAgICAgc3RhcnQuYiA9IGIodCk7XG4gICAgICBzdGFydC5vcGFjaXR5ID0gb3BhY2l0eSh0KTtcbiAgICAgIHJldHVybiBzdGFydCArIFwiXCI7XG4gICAgfTtcbiAgfVxuXG4gIHJnYi5nYW1tYSA9IHJnYkdhbW1hO1xuXG4gIHJldHVybiByZ2I7XG59KSgxKTtcblxuZnVuY3Rpb24gcmdiU3BsaW5lKHNwbGluZSkge1xuICByZXR1cm4gZnVuY3Rpb24oY29sb3JzKSB7XG4gICAgdmFyIG4gPSBjb2xvcnMubGVuZ3RoLFxuICAgICAgICByID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBnID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBiID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBpLCBjb2xvcjtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBjb2xvciA9IGNvbG9yUmdiKGNvbG9yc1tpXSk7XG4gICAgICByW2ldID0gY29sb3IuciB8fCAwO1xuICAgICAgZ1tpXSA9IGNvbG9yLmcgfHwgMDtcbiAgICAgIGJbaV0gPSBjb2xvci5iIHx8IDA7XG4gICAgfVxuICAgIHIgPSBzcGxpbmUocik7XG4gICAgZyA9IHNwbGluZShnKTtcbiAgICBiID0gc3BsaW5lKGIpO1xuICAgIGNvbG9yLm9wYWNpdHkgPSAxO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBjb2xvci5yID0gcih0KTtcbiAgICAgIGNvbG9yLmcgPSBnKHQpO1xuICAgICAgY29sb3IuYiA9IGIodCk7XG4gICAgICByZXR1cm4gY29sb3IgKyBcIlwiO1xuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCB2YXIgcmdiQmFzaXMgPSByZ2JTcGxpbmUoYmFzaXMpO1xuZXhwb3J0IHZhciByZ2JCYXNpc0Nsb3NlZCA9IHJnYlNwbGluZShiYXNpc0Nsb3NlZCk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBhID0gK2EsIGIgLT0gYSwgZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKGEgKyBiICogdCk7XG4gIH07XG59XG4iLCJpbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlclwiO1xuXG52YXIgcmVBID0gL1stK10/KD86XFxkK1xcLj9cXGQqfFxcLj9cXGQrKSg/OltlRV1bLStdP1xcZCspPy9nLFxuICAgIHJlQiA9IG5ldyBSZWdFeHAocmVBLnNvdXJjZSwgXCJnXCIpO1xuXG5mdW5jdGlvbiB6ZXJvKGIpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBiO1xuICB9O1xufVxuXG5mdW5jdGlvbiBvbmUoYikge1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBiKHQpICsgXCJcIjtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICB2YXIgYmkgPSByZUEubGFzdEluZGV4ID0gcmVCLmxhc3RJbmRleCA9IDAsIC8vIHNjYW4gaW5kZXggZm9yIG5leHQgbnVtYmVyIGluIGJcbiAgICAgIGFtLCAvLyBjdXJyZW50IG1hdGNoIGluIGFcbiAgICAgIGJtLCAvLyBjdXJyZW50IG1hdGNoIGluIGJcbiAgICAgIGJzLCAvLyBzdHJpbmcgcHJlY2VkaW5nIGN1cnJlbnQgbnVtYmVyIGluIGIsIGlmIGFueVxuICAgICAgaSA9IC0xLCAvLyBpbmRleCBpbiBzXG4gICAgICBzID0gW10sIC8vIHN0cmluZyBjb25zdGFudHMgYW5kIHBsYWNlaG9sZGVyc1xuICAgICAgcSA9IFtdOyAvLyBudW1iZXIgaW50ZXJwb2xhdG9yc1xuXG4gIC8vIENvZXJjZSBpbnB1dHMgdG8gc3RyaW5ncy5cbiAgYSA9IGEgKyBcIlwiLCBiID0gYiArIFwiXCI7XG5cbiAgLy8gSW50ZXJwb2xhdGUgcGFpcnMgb2YgbnVtYmVycyBpbiBhICYgYi5cbiAgd2hpbGUgKChhbSA9IHJlQS5leGVjKGEpKVxuICAgICAgJiYgKGJtID0gcmVCLmV4ZWMoYikpKSB7XG4gICAgaWYgKChicyA9IGJtLmluZGV4KSA+IGJpKSB7IC8vIGEgc3RyaW5nIHByZWNlZGVzIHRoZSBuZXh0IG51bWJlciBpbiBiXG4gICAgICBicyA9IGIuc2xpY2UoYmksIGJzKTtcbiAgICAgIGlmIChzW2ldKSBzW2ldICs9IGJzOyAvLyBjb2FsZXNjZSB3aXRoIHByZXZpb3VzIHN0cmluZ1xuICAgICAgZWxzZSBzWysraV0gPSBicztcbiAgICB9XG4gICAgaWYgKChhbSA9IGFtWzBdKSA9PT0gKGJtID0gYm1bMF0pKSB7IC8vIG51bWJlcnMgaW4gYSAmIGIgbWF0Y2hcbiAgICAgIGlmIChzW2ldKSBzW2ldICs9IGJtOyAvLyBjb2FsZXNjZSB3aXRoIHByZXZpb3VzIHN0cmluZ1xuICAgICAgZWxzZSBzWysraV0gPSBibTtcbiAgICB9IGVsc2UgeyAvLyBpbnRlcnBvbGF0ZSBub24tbWF0Y2hpbmcgbnVtYmVyc1xuICAgICAgc1srK2ldID0gbnVsbDtcbiAgICAgIHEucHVzaCh7aTogaSwgeDogbnVtYmVyKGFtLCBibSl9KTtcbiAgICB9XG4gICAgYmkgPSByZUIubGFzdEluZGV4O1xuICB9XG5cbiAgLy8gQWRkIHJlbWFpbnMgb2YgYi5cbiAgaWYgKGJpIDwgYi5sZW5ndGgpIHtcbiAgICBicyA9IGIuc2xpY2UoYmkpO1xuICAgIGlmIChzW2ldKSBzW2ldICs9IGJzOyAvLyBjb2FsZXNjZSB3aXRoIHByZXZpb3VzIHN0cmluZ1xuICAgIGVsc2Ugc1srK2ldID0gYnM7XG4gIH1cblxuICAvLyBTcGVjaWFsIG9wdGltaXphdGlvbiBmb3Igb25seSBhIHNpbmdsZSBtYXRjaC5cbiAgLy8gT3RoZXJ3aXNlLCBpbnRlcnBvbGF0ZSBlYWNoIG9mIHRoZSBudW1iZXJzIGFuZCByZWpvaW4gdGhlIHN0cmluZy5cbiAgcmV0dXJuIHMubGVuZ3RoIDwgMiA/IChxWzBdXG4gICAgICA/IG9uZShxWzBdLngpXG4gICAgICA6IHplcm8oYikpXG4gICAgICA6IChiID0gcS5sZW5ndGgsIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbzsgaSA8IGI7ICsraSkgc1sobyA9IHFbaV0pLmldID0gby54KHQpO1xuICAgICAgICAgIHJldHVybiBzLmpvaW4oXCJcIik7XG4gICAgICAgIH0pO1xufVxuIiwidmFyIGRlZ3JlZXMgPSAxODAgLyBNYXRoLlBJO1xuXG5leHBvcnQgdmFyIGlkZW50aXR5ID0ge1xuICB0cmFuc2xhdGVYOiAwLFxuICB0cmFuc2xhdGVZOiAwLFxuICByb3RhdGU6IDAsXG4gIHNrZXdYOiAwLFxuICBzY2FsZVg6IDEsXG4gIHNjYWxlWTogMVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYiwgYywgZCwgZSwgZikge1xuICB2YXIgc2NhbGVYLCBzY2FsZVksIHNrZXdYO1xuICBpZiAoc2NhbGVYID0gTWF0aC5zcXJ0KGEgKiBhICsgYiAqIGIpKSBhIC89IHNjYWxlWCwgYiAvPSBzY2FsZVg7XG4gIGlmIChza2V3WCA9IGEgKiBjICsgYiAqIGQpIGMgLT0gYSAqIHNrZXdYLCBkIC09IGIgKiBza2V3WDtcbiAgaWYgKHNjYWxlWSA9IE1hdGguc3FydChjICogYyArIGQgKiBkKSkgYyAvPSBzY2FsZVksIGQgLz0gc2NhbGVZLCBza2V3WCAvPSBzY2FsZVk7XG4gIGlmIChhICogZCA8IGIgKiBjKSBhID0gLWEsIGIgPSAtYiwgc2tld1ggPSAtc2tld1gsIHNjYWxlWCA9IC1zY2FsZVg7XG4gIHJldHVybiB7XG4gICAgdHJhbnNsYXRlWDogZSxcbiAgICB0cmFuc2xhdGVZOiBmLFxuICAgIHJvdGF0ZTogTWF0aC5hdGFuMihiLCBhKSAqIGRlZ3JlZXMsXG4gICAgc2tld1g6IE1hdGguYXRhbihza2V3WCkgKiBkZWdyZWVzLFxuICAgIHNjYWxlWDogc2NhbGVYLFxuICAgIHNjYWxlWTogc2NhbGVZXG4gIH07XG59XG4iLCJpbXBvcnQgbnVtYmVyIGZyb20gXCIuLi9udW1iZXJcIjtcbmltcG9ydCB7cGFyc2VDc3MsIHBhcnNlU3ZnfSBmcm9tIFwiLi9wYXJzZVwiO1xuXG5mdW5jdGlvbiBpbnRlcnBvbGF0ZVRyYW5zZm9ybShwYXJzZSwgcHhDb21tYSwgcHhQYXJlbiwgZGVnUGFyZW4pIHtcblxuICBmdW5jdGlvbiBwb3Aocykge1xuICAgIHJldHVybiBzLmxlbmd0aCA/IHMucG9wKCkgKyBcIiBcIiA6IFwiXCI7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFuc2xhdGUoeGEsIHlhLCB4YiwgeWIsIHMsIHEpIHtcbiAgICBpZiAoeGEgIT09IHhiIHx8IHlhICE9PSB5Yikge1xuICAgICAgdmFyIGkgPSBzLnB1c2goXCJ0cmFuc2xhdGUoXCIsIG51bGwsIHB4Q29tbWEsIG51bGwsIHB4UGFyZW4pO1xuICAgICAgcS5wdXNoKHtpOiBpIC0gNCwgeDogbnVtYmVyKHhhLCB4Yil9LCB7aTogaSAtIDIsIHg6IG51bWJlcih5YSwgeWIpfSk7XG4gICAgfSBlbHNlIGlmICh4YiB8fCB5Yikge1xuICAgICAgcy5wdXNoKFwidHJhbnNsYXRlKFwiICsgeGIgKyBweENvbW1hICsgeWIgKyBweFBhcmVuKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByb3RhdGUoYSwgYiwgcywgcSkge1xuICAgIGlmIChhICE9PSBiKSB7XG4gICAgICBpZiAoYSAtIGIgPiAxODApIGIgKz0gMzYwOyBlbHNlIGlmIChiIC0gYSA+IDE4MCkgYSArPSAzNjA7IC8vIHNob3J0ZXN0IHBhdGhcbiAgICAgIHEucHVzaCh7aTogcy5wdXNoKHBvcChzKSArIFwicm90YXRlKFwiLCBudWxsLCBkZWdQYXJlbikgLSAyLCB4OiBudW1iZXIoYSwgYil9KTtcbiAgICB9IGVsc2UgaWYgKGIpIHtcbiAgICAgIHMucHVzaChwb3AocykgKyBcInJvdGF0ZShcIiArIGIgKyBkZWdQYXJlbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc2tld1goYSwgYiwgcywgcSkge1xuICAgIGlmIChhICE9PSBiKSB7XG4gICAgICBxLnB1c2goe2k6IHMucHVzaChwb3AocykgKyBcInNrZXdYKFwiLCBudWxsLCBkZWdQYXJlbikgLSAyLCB4OiBudW1iZXIoYSwgYil9KTtcbiAgICB9IGVsc2UgaWYgKGIpIHtcbiAgICAgIHMucHVzaChwb3AocykgKyBcInNrZXdYKFwiICsgYiArIGRlZ1BhcmVuKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzY2FsZSh4YSwgeWEsIHhiLCB5YiwgcywgcSkge1xuICAgIGlmICh4YSAhPT0geGIgfHwgeWEgIT09IHliKSB7XG4gICAgICB2YXIgaSA9IHMucHVzaChwb3AocykgKyBcInNjYWxlKFwiLCBudWxsLCBcIixcIiwgbnVsbCwgXCIpXCIpO1xuICAgICAgcS5wdXNoKHtpOiBpIC0gNCwgeDogbnVtYmVyKHhhLCB4Yil9LCB7aTogaSAtIDIsIHg6IG51bWJlcih5YSwgeWIpfSk7XG4gICAgfSBlbHNlIGlmICh4YiAhPT0gMSB8fCB5YiAhPT0gMSkge1xuICAgICAgcy5wdXNoKHBvcChzKSArIFwic2NhbGUoXCIgKyB4YiArIFwiLFwiICsgeWIgKyBcIilcIik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKGEsIGIpIHtcbiAgICB2YXIgcyA9IFtdLCAvLyBzdHJpbmcgY29uc3RhbnRzIGFuZCBwbGFjZWhvbGRlcnNcbiAgICAgICAgcSA9IFtdOyAvLyBudW1iZXIgaW50ZXJwb2xhdG9yc1xuICAgIGEgPSBwYXJzZShhKSwgYiA9IHBhcnNlKGIpO1xuICAgIHRyYW5zbGF0ZShhLnRyYW5zbGF0ZVgsIGEudHJhbnNsYXRlWSwgYi50cmFuc2xhdGVYLCBiLnRyYW5zbGF0ZVksIHMsIHEpO1xuICAgIHJvdGF0ZShhLnJvdGF0ZSwgYi5yb3RhdGUsIHMsIHEpO1xuICAgIHNrZXdYKGEuc2tld1gsIGIuc2tld1gsIHMsIHEpO1xuICAgIHNjYWxlKGEuc2NhbGVYLCBhLnNjYWxlWSwgYi5zY2FsZVgsIGIuc2NhbGVZLCBzLCBxKTtcbiAgICBhID0gYiA9IG51bGw7IC8vIGdjXG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHZhciBpID0gLTEsIG4gPSBxLmxlbmd0aCwgbztcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBzWyhvID0gcVtpXSkuaV0gPSBvLngodCk7XG4gICAgICByZXR1cm4gcy5qb2luKFwiXCIpO1xuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCB2YXIgaW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3MgPSBpbnRlcnBvbGF0ZVRyYW5zZm9ybShwYXJzZUNzcywgXCJweCwgXCIsIFwicHgpXCIsIFwiZGVnKVwiKTtcbmV4cG9ydCB2YXIgaW50ZXJwb2xhdGVUcmFuc2Zvcm1TdmcgPSBpbnRlcnBvbGF0ZVRyYW5zZm9ybShwYXJzZVN2ZywgXCIsIFwiLCBcIilcIiwgXCIpXCIpO1xuIiwiaW1wb3J0IGRlY29tcG9zZSwge2lkZW50aXR5fSBmcm9tIFwiLi9kZWNvbXBvc2VcIjtcblxudmFyIGNzc05vZGUsXG4gICAgY3NzUm9vdCxcbiAgICBjc3NWaWV3LFxuICAgIHN2Z05vZGU7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNzcyh2YWx1ZSkge1xuICBpZiAodmFsdWUgPT09IFwibm9uZVwiKSByZXR1cm4gaWRlbnRpdHk7XG4gIGlmICghY3NzTm9kZSkgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJESVZcIiksIGNzc1Jvb3QgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIGNzc1ZpZXcgPSBkb2N1bWVudC5kZWZhdWx0VmlldztcbiAgY3NzTm9kZS5zdHlsZS50cmFuc2Zvcm0gPSB2YWx1ZTtcbiAgdmFsdWUgPSBjc3NWaWV3LmdldENvbXB1dGVkU3R5bGUoY3NzUm9vdC5hcHBlbmRDaGlsZChjc3NOb2RlKSwgbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShcInRyYW5zZm9ybVwiKTtcbiAgY3NzUm9vdC5yZW1vdmVDaGlsZChjc3NOb2RlKTtcbiAgdmFsdWUgPSB2YWx1ZS5zbGljZSg3LCAtMSkuc3BsaXQoXCIsXCIpO1xuICByZXR1cm4gZGVjb21wb3NlKCt2YWx1ZVswXSwgK3ZhbHVlWzFdLCArdmFsdWVbMl0sICt2YWx1ZVszXSwgK3ZhbHVlWzRdLCArdmFsdWVbNV0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VTdmcodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiBpZGVudGl0eTtcbiAgaWYgKCFzdmdOb2RlKSBzdmdOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJnXCIpO1xuICBzdmdOb2RlLnNldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiLCB2YWx1ZSk7XG4gIGlmICghKHZhbHVlID0gc3ZnTm9kZS50cmFuc2Zvcm0uYmFzZVZhbC5jb25zb2xpZGF0ZSgpKSkgcmV0dXJuIGlkZW50aXR5O1xuICB2YWx1ZSA9IHZhbHVlLm1hdHJpeDtcbiAgcmV0dXJuIGRlY29tcG9zZSh2YWx1ZS5hLCB2YWx1ZS5iLCB2YWx1ZS5jLCB2YWx1ZS5kLCB2YWx1ZS5lLCB2YWx1ZS5mKTtcbn1cbiIsImltcG9ydCB7Y29sb3J9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IHJnYiBmcm9tIFwiLi9yZ2JcIjtcbmltcG9ydCBhcnJheSBmcm9tIFwiLi9hcnJheVwiO1xuaW1wb3J0IGRhdGUgZnJvbSBcIi4vZGF0ZVwiO1xuaW1wb3J0IG51bWJlciBmcm9tIFwiLi9udW1iZXJcIjtcbmltcG9ydCBvYmplY3QgZnJvbSBcIi4vb2JqZWN0XCI7XG5pbXBvcnQgc3RyaW5nIGZyb20gXCIuL3N0cmluZ1wiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIHQgPSB0eXBlb2YgYiwgYztcbiAgcmV0dXJuIGIgPT0gbnVsbCB8fCB0ID09PSBcImJvb2xlYW5cIiA/IGNvbnN0YW50KGIpXG4gICAgICA6ICh0ID09PSBcIm51bWJlclwiID8gbnVtYmVyXG4gICAgICA6IHQgPT09IFwic3RyaW5nXCIgPyAoKGMgPSBjb2xvcihiKSkgPyAoYiA9IGMsIHJnYikgOiBzdHJpbmcpXG4gICAgICA6IGIgaW5zdGFuY2VvZiBjb2xvciA/IHJnYlxuICAgICAgOiBiIGluc3RhbmNlb2YgRGF0ZSA/IGRhdGVcbiAgICAgIDogQXJyYXkuaXNBcnJheShiKSA/IGFycmF5XG4gICAgICA6IHR5cGVvZiBiLnZhbHVlT2YgIT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgYi50b1N0cmluZyAhPT0gXCJmdW5jdGlvblwiIHx8IGlzTmFOKGIpID8gb2JqZWN0XG4gICAgICA6IG51bWJlcikoYSwgYik7XG59XG4iLCJ2YXIgcmhvID0gTWF0aC5TUVJUMixcbiAgICByaG8yID0gMixcbiAgICByaG80ID0gNCxcbiAgICBlcHNpbG9uMiA9IDFlLTEyO1xuXG5mdW5jdGlvbiBjb3NoKHgpIHtcbiAgcmV0dXJuICgoeCA9IE1hdGguZXhwKHgpKSArIDEgLyB4KSAvIDI7XG59XG5cbmZ1bmN0aW9uIHNpbmgoeCkge1xuICByZXR1cm4gKCh4ID0gTWF0aC5leHAoeCkpIC0gMSAvIHgpIC8gMjtcbn1cblxuZnVuY3Rpb24gdGFuaCh4KSB7XG4gIHJldHVybiAoKHggPSBNYXRoLmV4cCgyICogeCkpIC0gMSkgLyAoeCArIDEpO1xufVxuXG4vLyBwMCA9IFt1eDAsIHV5MCwgdzBdXG4vLyBwMSA9IFt1eDEsIHV5MSwgdzFdXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwMCwgcDEpIHtcbiAgdmFyIHV4MCA9IHAwWzBdLCB1eTAgPSBwMFsxXSwgdzAgPSBwMFsyXSxcbiAgICAgIHV4MSA9IHAxWzBdLCB1eTEgPSBwMVsxXSwgdzEgPSBwMVsyXSxcbiAgICAgIGR4ID0gdXgxIC0gdXgwLFxuICAgICAgZHkgPSB1eTEgLSB1eTAsXG4gICAgICBkMiA9IGR4ICogZHggKyBkeSAqIGR5LFxuICAgICAgaSxcbiAgICAgIFM7XG5cbiAgLy8gU3BlY2lhbCBjYXNlIGZvciB1MCDiiYUgdTEuXG4gIGlmIChkMiA8IGVwc2lsb24yKSB7XG4gICAgUyA9IE1hdGgubG9nKHcxIC8gdzApIC8gcmhvO1xuICAgIGkgPSBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gW1xuICAgICAgICB1eDAgKyB0ICogZHgsXG4gICAgICAgIHV5MCArIHQgKiBkeSxcbiAgICAgICAgdzAgKiBNYXRoLmV4cChyaG8gKiB0ICogUylcbiAgICAgIF07XG4gICAgfVxuICB9XG5cbiAgLy8gR2VuZXJhbCBjYXNlLlxuICBlbHNlIHtcbiAgICB2YXIgZDEgPSBNYXRoLnNxcnQoZDIpLFxuICAgICAgICBiMCA9ICh3MSAqIHcxIC0gdzAgKiB3MCArIHJobzQgKiBkMikgLyAoMiAqIHcwICogcmhvMiAqIGQxKSxcbiAgICAgICAgYjEgPSAodzEgKiB3MSAtIHcwICogdzAgLSByaG80ICogZDIpIC8gKDIgKiB3MSAqIHJobzIgKiBkMSksXG4gICAgICAgIHIwID0gTWF0aC5sb2coTWF0aC5zcXJ0KGIwICogYjAgKyAxKSAtIGIwKSxcbiAgICAgICAgcjEgPSBNYXRoLmxvZyhNYXRoLnNxcnQoYjEgKiBiMSArIDEpIC0gYjEpO1xuICAgIFMgPSAocjEgLSByMCkgLyByaG87XG4gICAgaSA9IGZ1bmN0aW9uKHQpIHtcbiAgICAgIHZhciBzID0gdCAqIFMsXG4gICAgICAgICAgY29zaHIwID0gY29zaChyMCksXG4gICAgICAgICAgdSA9IHcwIC8gKHJobzIgKiBkMSkgKiAoY29zaHIwICogdGFuaChyaG8gKiBzICsgcjApIC0gc2luaChyMCkpO1xuICAgICAgcmV0dXJuIFtcbiAgICAgICAgdXgwICsgdSAqIGR4LFxuICAgICAgICB1eTAgKyB1ICogZHksXG4gICAgICAgIHcwICogY29zaHIwIC8gY29zaChyaG8gKiBzICsgcjApXG4gICAgICBdO1xuICAgIH1cbiAgfVxuXG4gIGkuZHVyYXRpb24gPSBTICogMTAwMDtcblxuICByZXR1cm4gaTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBwYXRofSBmcm9tIFwiLi9wYXRoXCI7XG4iLCJ2YXIgcGkgPSBNYXRoLlBJLFxuICAgIHRhdSA9IDIgKiBwaSxcbiAgICBlcHNpbG9uID0gMWUtNixcbiAgICB0YXVFcHNpbG9uID0gdGF1IC0gZXBzaWxvbjtcblxuZnVuY3Rpb24gUGF0aCgpIHtcbiAgdGhpcy5feDAgPSB0aGlzLl95MCA9IC8vIHN0YXJ0IG9mIGN1cnJlbnQgc3VicGF0aFxuICB0aGlzLl94MSA9IHRoaXMuX3kxID0gbnVsbDsgLy8gZW5kIG9mIGN1cnJlbnQgc3VicGF0aFxuICB0aGlzLl8gPSBcIlwiO1xufVxuXG5mdW5jdGlvbiBwYXRoKCkge1xuICByZXR1cm4gbmV3IFBhdGg7XG59XG5cblBhdGgucHJvdG90eXBlID0gcGF0aC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBQYXRoLFxuICBtb3ZlVG86IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB0aGlzLl8gKz0gXCJNXCIgKyAodGhpcy5feDAgPSB0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kwID0gdGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIGNsb3NlUGF0aDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX3gxICE9PSBudWxsKSB7XG4gICAgICB0aGlzLl94MSA9IHRoaXMuX3gwLCB0aGlzLl95MSA9IHRoaXMuX3kwO1xuICAgICAgdGhpcy5fICs9IFwiWlwiO1xuICAgIH1cbiAgfSxcbiAgbGluZVRvOiBmdW5jdGlvbih4LCB5KSB7XG4gICAgdGhpcy5fICs9IFwiTFwiICsgKHRoaXMuX3gxID0gK3gpICsgXCIsXCIgKyAodGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIHF1YWRyYXRpY0N1cnZlVG86IGZ1bmN0aW9uKHgxLCB5MSwgeCwgeSkge1xuICAgIHRoaXMuXyArPSBcIlFcIiArICgreDEpICsgXCIsXCIgKyAoK3kxKSArIFwiLFwiICsgKHRoaXMuX3gxID0gK3gpICsgXCIsXCIgKyAodGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIGJlemllckN1cnZlVG86IGZ1bmN0aW9uKHgxLCB5MSwgeDIsIHkyLCB4LCB5KSB7XG4gICAgdGhpcy5fICs9IFwiQ1wiICsgKCt4MSkgKyBcIixcIiArICgreTEpICsgXCIsXCIgKyAoK3gyKSArIFwiLFwiICsgKCt5MikgKyBcIixcIiArICh0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kxID0gK3kpO1xuICB9LFxuICBhcmNUbzogZnVuY3Rpb24oeDEsIHkxLCB4MiwgeTIsIHIpIHtcbiAgICB4MSA9ICt4MSwgeTEgPSAreTEsIHgyID0gK3gyLCB5MiA9ICt5MiwgciA9ICtyO1xuICAgIHZhciB4MCA9IHRoaXMuX3gxLFxuICAgICAgICB5MCA9IHRoaXMuX3kxLFxuICAgICAgICB4MjEgPSB4MiAtIHgxLFxuICAgICAgICB5MjEgPSB5MiAtIHkxLFxuICAgICAgICB4MDEgPSB4MCAtIHgxLFxuICAgICAgICB5MDEgPSB5MCAtIHkxLFxuICAgICAgICBsMDFfMiA9IHgwMSAqIHgwMSArIHkwMSAqIHkwMTtcblxuICAgIC8vIElzIHRoZSByYWRpdXMgbmVnYXRpdmU/IEVycm9yLlxuICAgIGlmIChyIDwgMCkgdGhyb3cgbmV3IEVycm9yKFwibmVnYXRpdmUgcmFkaXVzOiBcIiArIHIpO1xuXG4gICAgLy8gSXMgdGhpcyBwYXRoIGVtcHR5PyBNb3ZlIHRvICh4MSx5MSkuXG4gICAgaWYgKHRoaXMuX3gxID09PSBudWxsKSB7XG4gICAgICB0aGlzLl8gKz0gXCJNXCIgKyAodGhpcy5feDEgPSB4MSkgKyBcIixcIiArICh0aGlzLl95MSA9IHkxKTtcbiAgICB9XG5cbiAgICAvLyBPciwgaXMgKHgxLHkxKSBjb2luY2lkZW50IHdpdGggKHgwLHkwKT8gRG8gbm90aGluZy5cbiAgICBlbHNlIGlmICghKGwwMV8yID4gZXBzaWxvbikpO1xuXG4gICAgLy8gT3IsIGFyZSAoeDAseTApLCAoeDEseTEpIGFuZCAoeDIseTIpIGNvbGxpbmVhcj9cbiAgICAvLyBFcXVpdmFsZW50bHksIGlzICh4MSx5MSkgY29pbmNpZGVudCB3aXRoICh4Mix5Mik/XG4gICAgLy8gT3IsIGlzIHRoZSByYWRpdXMgemVybz8gTGluZSB0byAoeDEseTEpLlxuICAgIGVsc2UgaWYgKCEoTWF0aC5hYnMoeTAxICogeDIxIC0geTIxICogeDAxKSA+IGVwc2lsb24pIHx8ICFyKSB7XG4gICAgICB0aGlzLl8gKz0gXCJMXCIgKyAodGhpcy5feDEgPSB4MSkgKyBcIixcIiArICh0aGlzLl95MSA9IHkxKTtcbiAgICB9XG5cbiAgICAvLyBPdGhlcndpc2UsIGRyYXcgYW4gYXJjIVxuICAgIGVsc2Uge1xuICAgICAgdmFyIHgyMCA9IHgyIC0geDAsXG4gICAgICAgICAgeTIwID0geTIgLSB5MCxcbiAgICAgICAgICBsMjFfMiA9IHgyMSAqIHgyMSArIHkyMSAqIHkyMSxcbiAgICAgICAgICBsMjBfMiA9IHgyMCAqIHgyMCArIHkyMCAqIHkyMCxcbiAgICAgICAgICBsMjEgPSBNYXRoLnNxcnQobDIxXzIpLFxuICAgICAgICAgIGwwMSA9IE1hdGguc3FydChsMDFfMiksXG4gICAgICAgICAgbCA9IHIgKiBNYXRoLnRhbigocGkgLSBNYXRoLmFjb3MoKGwyMV8yICsgbDAxXzIgLSBsMjBfMikgLyAoMiAqIGwyMSAqIGwwMSkpKSAvIDIpLFxuICAgICAgICAgIHQwMSA9IGwgLyBsMDEsXG4gICAgICAgICAgdDIxID0gbCAvIGwyMTtcblxuICAgICAgLy8gSWYgdGhlIHN0YXJ0IHRhbmdlbnQgaXMgbm90IGNvaW5jaWRlbnQgd2l0aCAoeDAseTApLCBsaW5lIHRvLlxuICAgICAgaWYgKE1hdGguYWJzKHQwMSAtIDEpID4gZXBzaWxvbikge1xuICAgICAgICB0aGlzLl8gKz0gXCJMXCIgKyAoeDEgKyB0MDEgKiB4MDEpICsgXCIsXCIgKyAoeTEgKyB0MDEgKiB5MDEpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl8gKz0gXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIsMCwwLFwiICsgKCsoeTAxICogeDIwID4geDAxICogeTIwKSkgKyBcIixcIiArICh0aGlzLl94MSA9IHgxICsgdDIxICogeDIxKSArIFwiLFwiICsgKHRoaXMuX3kxID0geTEgKyB0MjEgKiB5MjEpO1xuICAgIH1cbiAgfSxcbiAgYXJjOiBmdW5jdGlvbih4LCB5LCByLCBhMCwgYTEsIGNjdykge1xuICAgIHggPSAreCwgeSA9ICt5LCByID0gK3I7XG4gICAgdmFyIGR4ID0gciAqIE1hdGguY29zKGEwKSxcbiAgICAgICAgZHkgPSByICogTWF0aC5zaW4oYTApLFxuICAgICAgICB4MCA9IHggKyBkeCxcbiAgICAgICAgeTAgPSB5ICsgZHksXG4gICAgICAgIGN3ID0gMSBeIGNjdyxcbiAgICAgICAgZGEgPSBjY3cgPyBhMCAtIGExIDogYTEgLSBhMDtcblxuICAgIC8vIElzIHRoZSByYWRpdXMgbmVnYXRpdmU/IEVycm9yLlxuICAgIGlmIChyIDwgMCkgdGhyb3cgbmV3IEVycm9yKFwibmVnYXRpdmUgcmFkaXVzOiBcIiArIHIpO1xuXG4gICAgLy8gSXMgdGhpcyBwYXRoIGVtcHR5PyBNb3ZlIHRvICh4MCx5MCkuXG4gICAgaWYgKHRoaXMuX3gxID09PSBudWxsKSB7XG4gICAgICB0aGlzLl8gKz0gXCJNXCIgKyB4MCArIFwiLFwiICsgeTA7XG4gICAgfVxuXG4gICAgLy8gT3IsIGlzICh4MCx5MCkgbm90IGNvaW5jaWRlbnQgd2l0aCB0aGUgcHJldmlvdXMgcG9pbnQ/IExpbmUgdG8gKHgwLHkwKS5cbiAgICBlbHNlIGlmIChNYXRoLmFicyh0aGlzLl94MSAtIHgwKSA+IGVwc2lsb24gfHwgTWF0aC5hYnModGhpcy5feTEgLSB5MCkgPiBlcHNpbG9uKSB7XG4gICAgICB0aGlzLl8gKz0gXCJMXCIgKyB4MCArIFwiLFwiICsgeTA7XG4gICAgfVxuXG4gICAgLy8gSXMgdGhpcyBhcmMgZW1wdHk/IFdl4oCZcmUgZG9uZS5cbiAgICBpZiAoIXIpIHJldHVybjtcblxuICAgIC8vIERvZXMgdGhlIGFuZ2xlIGdvIHRoZSB3cm9uZyB3YXk/IEZsaXAgdGhlIGRpcmVjdGlvbi5cbiAgICBpZiAoZGEgPCAwKSBkYSA9IGRhICUgdGF1ICsgdGF1O1xuXG4gICAgLy8gSXMgdGhpcyBhIGNvbXBsZXRlIGNpcmNsZT8gRHJhdyB0d28gYXJjcyB0byBjb21wbGV0ZSB0aGUgY2lyY2xlLlxuICAgIGlmIChkYSA+IHRhdUVwc2lsb24pIHtcbiAgICAgIHRoaXMuXyArPSBcIkFcIiArIHIgKyBcIixcIiArIHIgKyBcIiwwLDEsXCIgKyBjdyArIFwiLFwiICsgKHggLSBkeCkgKyBcIixcIiArICh5IC0gZHkpICsgXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIsMCwxLFwiICsgY3cgKyBcIixcIiArICh0aGlzLl94MSA9IHgwKSArIFwiLFwiICsgKHRoaXMuX3kxID0geTApO1xuICAgIH1cblxuICAgIC8vIElzIHRoaXMgYXJjIG5vbi1lbXB0eT8gRHJhdyBhbiBhcmMhXG4gICAgZWxzZSBpZiAoZGEgPiBlcHNpbG9uKSB7XG4gICAgICB0aGlzLl8gKz0gXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIsMCxcIiArICgrKGRhID49IHBpKSkgKyBcIixcIiArIGN3ICsgXCIsXCIgKyAodGhpcy5feDEgPSB4ICsgciAqIE1hdGguY29zKGExKSkgKyBcIixcIiArICh0aGlzLl95MSA9IHkgKyByICogTWF0aC5zaW4oYTEpKTtcbiAgICB9XG4gIH0sXG4gIHJlY3Q6IGZ1bmN0aW9uKHgsIHksIHcsIGgpIHtcbiAgICB0aGlzLl8gKz0gXCJNXCIgKyAodGhpcy5feDAgPSB0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kwID0gdGhpcy5feTEgPSAreSkgKyBcImhcIiArICgrdykgKyBcInZcIiArICgraCkgKyBcImhcIiArICgtdykgKyBcIlpcIjtcbiAgfSxcbiAgdG9TdHJpbmc6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl87XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHBhdGg7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwb2x5Z29uKSB7XG4gIHZhciBpID0gLTEsXG4gICAgICBuID0gcG9seWdvbi5sZW5ndGgsXG4gICAgICBhLFxuICAgICAgYiA9IHBvbHlnb25bbiAtIDFdLFxuICAgICAgYXJlYSA9IDA7XG5cbiAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICBhID0gYjtcbiAgICBiID0gcG9seWdvbltpXTtcbiAgICBhcmVhICs9IGFbMV0gKiBiWzBdIC0gYVswXSAqIGJbMV07XG4gIH1cblxuICByZXR1cm4gYXJlYSAvIDI7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwb2x5Z29uKSB7XG4gIHZhciBpID0gLTEsXG4gICAgICBuID0gcG9seWdvbi5sZW5ndGgsXG4gICAgICB4ID0gMCxcbiAgICAgIHkgPSAwLFxuICAgICAgYSxcbiAgICAgIGIgPSBwb2x5Z29uW24gLSAxXSxcbiAgICAgIGMsXG4gICAgICBrID0gMDtcblxuICB3aGlsZSAoKytpIDwgbikge1xuICAgIGEgPSBiO1xuICAgIGIgPSBwb2x5Z29uW2ldO1xuICAgIGsgKz0gYyA9IGFbMF0gKiBiWzFdIC0gYlswXSAqIGFbMV07XG4gICAgeCArPSAoYVswXSArIGJbMF0pICogYztcbiAgICB5ICs9IChhWzFdICsgYlsxXSkgKiBjO1xuICB9XG5cbiAgcmV0dXJuIGsgKj0gMywgW3ggLyBrLCB5IC8ga107XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwb2x5Z29uLCBwb2ludCkge1xuICB2YXIgbiA9IHBvbHlnb24ubGVuZ3RoLFxuICAgICAgcCA9IHBvbHlnb25bbiAtIDFdLFxuICAgICAgeCA9IHBvaW50WzBdLCB5ID0gcG9pbnRbMV0sXG4gICAgICB4MCA9IHBbMF0sIHkwID0gcFsxXSxcbiAgICAgIHgxLCB5MSxcbiAgICAgIGluc2lkZSA9IGZhbHNlO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgcCA9IHBvbHlnb25baV0sIHgxID0gcFswXSwgeTEgPSBwWzFdO1xuICAgIGlmICgoKHkxID4geSkgIT09ICh5MCA+IHkpKSAmJiAoeCA8ICh4MCAtIHgxKSAqICh5IC0geTEpIC8gKHkwIC0geTEpICsgeDEpKSBpbnNpZGUgPSAhaW5zaWRlO1xuICAgIHgwID0geDEsIHkwID0geTE7XG4gIH1cblxuICByZXR1cm4gaW5zaWRlO1xufVxuIiwiLy8gUmV0dXJucyB0aGUgMkQgY3Jvc3MgcHJvZHVjdCBvZiBBQiBhbmQgQUMgdmVjdG9ycywgaS5lLiwgdGhlIHotY29tcG9uZW50IG9mXG4vLyB0aGUgM0QgY3Jvc3MgcHJvZHVjdCBpbiBhIHF1YWRyYW50IEkgQ2FydGVzaWFuIGNvb3JkaW5hdGUgc3lzdGVtICgreCBpc1xuLy8gcmlnaHQsICt5IGlzIHVwKS4gUmV0dXJucyBhIHBvc2l0aXZlIHZhbHVlIGlmIEFCQyBpcyBjb3VudGVyLWNsb2Nrd2lzZSxcbi8vIG5lZ2F0aXZlIGlmIGNsb2Nrd2lzZSwgYW5kIHplcm8gaWYgdGhlIHBvaW50cyBhcmUgY29sbGluZWFyLlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYiwgYykge1xuICByZXR1cm4gKGJbMF0gLSBhWzBdKSAqIChjWzFdIC0gYVsxXSkgLSAoYlsxXSAtIGFbMV0pICogKGNbMF0gLSBhWzBdKTtcbn1cbiIsImltcG9ydCBjcm9zcyBmcm9tIFwiLi9jcm9zc1wiO1xuXG5mdW5jdGlvbiBsZXhpY29ncmFwaGljT3JkZXIoYSwgYikge1xuICByZXR1cm4gYVswXSAtIGJbMF0gfHwgYVsxXSAtIGJbMV07XG59XG5cbi8vIENvbXB1dGVzIHRoZSB1cHBlciBjb252ZXggaHVsbCBwZXIgdGhlIG1vbm90b25lIGNoYWluIGFsZ29yaXRobS5cbi8vIEFzc3VtZXMgcG9pbnRzLmxlbmd0aCA+PSAzLCBpcyBzb3J0ZWQgYnkgeCwgdW5pcXVlIGluIHkuXG4vLyBSZXR1cm5zIGFuIGFycmF5IG9mIGluZGljZXMgaW50byBwb2ludHMgaW4gbGVmdC10by1yaWdodCBvcmRlci5cbmZ1bmN0aW9uIGNvbXB1dGVVcHBlckh1bGxJbmRleGVzKHBvaW50cykge1xuICB2YXIgbiA9IHBvaW50cy5sZW5ndGgsXG4gICAgICBpbmRleGVzID0gWzAsIDFdLFxuICAgICAgc2l6ZSA9IDI7XG5cbiAgZm9yICh2YXIgaSA9IDI7IGkgPCBuOyArK2kpIHtcbiAgICB3aGlsZSAoc2l6ZSA+IDEgJiYgY3Jvc3MocG9pbnRzW2luZGV4ZXNbc2l6ZSAtIDJdXSwgcG9pbnRzW2luZGV4ZXNbc2l6ZSAtIDFdXSwgcG9pbnRzW2ldKSA8PSAwKSAtLXNpemU7XG4gICAgaW5kZXhlc1tzaXplKytdID0gaTtcbiAgfVxuXG4gIHJldHVybiBpbmRleGVzLnNsaWNlKDAsIHNpemUpOyAvLyByZW1vdmUgcG9wcGVkIHBvaW50c1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwb2ludHMpIHtcbiAgaWYgKChuID0gcG9pbnRzLmxlbmd0aCkgPCAzKSByZXR1cm4gbnVsbDtcblxuICB2YXIgaSxcbiAgICAgIG4sXG4gICAgICBzb3J0ZWRQb2ludHMgPSBuZXcgQXJyYXkobiksXG4gICAgICBmbGlwcGVkUG9pbnRzID0gbmV3IEFycmF5KG4pO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHNvcnRlZFBvaW50c1tpXSA9IFsrcG9pbnRzW2ldWzBdLCArcG9pbnRzW2ldWzFdLCBpXTtcbiAgc29ydGVkUG9pbnRzLnNvcnQobGV4aWNvZ3JhcGhpY09yZGVyKTtcbiAgZm9yIChpID0gMDsgaSA8IG47ICsraSkgZmxpcHBlZFBvaW50c1tpXSA9IFtzb3J0ZWRQb2ludHNbaV1bMF0sIC1zb3J0ZWRQb2ludHNbaV1bMV1dO1xuXG4gIHZhciB1cHBlckluZGV4ZXMgPSBjb21wdXRlVXBwZXJIdWxsSW5kZXhlcyhzb3J0ZWRQb2ludHMpLFxuICAgICAgbG93ZXJJbmRleGVzID0gY29tcHV0ZVVwcGVySHVsbEluZGV4ZXMoZmxpcHBlZFBvaW50cyk7XG5cbiAgLy8gQ29uc3RydWN0IHRoZSBodWxsIHBvbHlnb24sIHJlbW92aW5nIHBvc3NpYmxlIGR1cGxpY2F0ZSBlbmRwb2ludHMuXG4gIHZhciBza2lwTGVmdCA9IGxvd2VySW5kZXhlc1swXSA9PT0gdXBwZXJJbmRleGVzWzBdLFxuICAgICAgc2tpcFJpZ2h0ID0gbG93ZXJJbmRleGVzW2xvd2VySW5kZXhlcy5sZW5ndGggLSAxXSA9PT0gdXBwZXJJbmRleGVzW3VwcGVySW5kZXhlcy5sZW5ndGggLSAxXSxcbiAgICAgIGh1bGwgPSBbXTtcblxuICAvLyBBZGQgdXBwZXIgaHVsbCBpbiByaWdodC10by1sIG9yZGVyLlxuICAvLyBUaGVuIGFkZCBsb3dlciBodWxsIGluIGxlZnQtdG8tcmlnaHQgb3JkZXIuXG4gIGZvciAoaSA9IHVwcGVySW5kZXhlcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgaHVsbC5wdXNoKHBvaW50c1tzb3J0ZWRQb2ludHNbdXBwZXJJbmRleGVzW2ldXVsyXV0pO1xuICBmb3IgKGkgPSArc2tpcExlZnQ7IGkgPCBsb3dlckluZGV4ZXMubGVuZ3RoIC0gc2tpcFJpZ2h0OyArK2kpIGh1bGwucHVzaChwb2ludHNbc29ydGVkUG9pbnRzW2xvd2VySW5kZXhlc1tpXV1bMl1dKTtcblxuICByZXR1cm4gaHVsbDtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBwb2x5Z29uQXJlYX0gZnJvbSBcIi4vYXJlYVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHBvbHlnb25DZW50cm9pZH0gZnJvbSBcIi4vY2VudHJvaWRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwb2x5Z29uSHVsbH0gZnJvbSBcIi4vaHVsbFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHBvbHlnb25Db250YWluc30gZnJvbSBcIi4vY29udGFpbnNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwb2x5Z29uTGVuZ3RofSBmcm9tIFwiLi9sZW5ndGhcIjtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHBvbHlnb24pIHtcbiAgdmFyIGkgPSAtMSxcbiAgICAgIG4gPSBwb2x5Z29uLmxlbmd0aCxcbiAgICAgIGIgPSBwb2x5Z29uW24gLSAxXSxcbiAgICAgIHhhLFxuICAgICAgeWEsXG4gICAgICB4YiA9IGJbMF0sXG4gICAgICB5YiA9IGJbMV0sXG4gICAgICBwZXJpbWV0ZXIgPSAwO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgeGEgPSB4YjtcbiAgICB5YSA9IHliO1xuICAgIGIgPSBwb2x5Z29uW2ldO1xuICAgIHhiID0gYlswXTtcbiAgICB5YiA9IGJbMV07XG4gICAgeGEgLT0geGI7XG4gICAgeWEgLT0geWI7XG4gICAgcGVyaW1ldGVyICs9IE1hdGguc3FydCh4YSAqIHhhICsgeWEgKiB5YSk7XG4gIH1cblxuICByZXR1cm4gcGVyaW1ldGVyO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZCkge1xuICB2YXIgeCA9ICt0aGlzLl94LmNhbGwobnVsbCwgZCksXG4gICAgICB5ID0gK3RoaXMuX3kuY2FsbChudWxsLCBkKTtcbiAgcmV0dXJuIGFkZCh0aGlzLmNvdmVyKHgsIHkpLCB4LCB5LCBkKTtcbn1cblxuZnVuY3Rpb24gYWRkKHRyZWUsIHgsIHksIGQpIHtcbiAgaWYgKGlzTmFOKHgpIHx8IGlzTmFOKHkpKSByZXR1cm4gdHJlZTsgLy8gaWdub3JlIGludmFsaWQgcG9pbnRzXG5cbiAgdmFyIHBhcmVudCxcbiAgICAgIG5vZGUgPSB0cmVlLl9yb290LFxuICAgICAgbGVhZiA9IHtkYXRhOiBkfSxcbiAgICAgIHgwID0gdHJlZS5feDAsXG4gICAgICB5MCA9IHRyZWUuX3kwLFxuICAgICAgeDEgPSB0cmVlLl94MSxcbiAgICAgIHkxID0gdHJlZS5feTEsXG4gICAgICB4bSxcbiAgICAgIHltLFxuICAgICAgeHAsXG4gICAgICB5cCxcbiAgICAgIHJpZ2h0LFxuICAgICAgYm90dG9tLFxuICAgICAgaSxcbiAgICAgIGo7XG5cbiAgLy8gSWYgdGhlIHRyZWUgaXMgZW1wdHksIGluaXRpYWxpemUgdGhlIHJvb3QgYXMgYSBsZWFmLlxuICBpZiAoIW5vZGUpIHJldHVybiB0cmVlLl9yb290ID0gbGVhZiwgdHJlZTtcblxuICAvLyBGaW5kIHRoZSBleGlzdGluZyBsZWFmIGZvciB0aGUgbmV3IHBvaW50LCBvciBhZGQgaXQuXG4gIHdoaWxlIChub2RlLmxlbmd0aCkge1xuICAgIGlmIChyaWdodCA9IHggPj0gKHhtID0gKHgwICsgeDEpIC8gMikpIHgwID0geG07IGVsc2UgeDEgPSB4bTtcbiAgICBpZiAoYm90dG9tID0geSA+PSAoeW0gPSAoeTAgKyB5MSkgLyAyKSkgeTAgPSB5bTsgZWxzZSB5MSA9IHltO1xuICAgIGlmIChwYXJlbnQgPSBub2RlLCAhKG5vZGUgPSBub2RlW2kgPSBib3R0b20gPDwgMSB8IHJpZ2h0XSkpIHJldHVybiBwYXJlbnRbaV0gPSBsZWFmLCB0cmVlO1xuICB9XG5cbiAgLy8gSXMgdGhlIG5ldyBwb2ludCBpcyBleGFjdGx5IGNvaW5jaWRlbnQgd2l0aCB0aGUgZXhpc3RpbmcgcG9pbnQ/XG4gIHhwID0gK3RyZWUuX3guY2FsbChudWxsLCBub2RlLmRhdGEpO1xuICB5cCA9ICt0cmVlLl95LmNhbGwobnVsbCwgbm9kZS5kYXRhKTtcbiAgaWYgKHggPT09IHhwICYmIHkgPT09IHlwKSByZXR1cm4gbGVhZi5uZXh0ID0gbm9kZSwgcGFyZW50ID8gcGFyZW50W2ldID0gbGVhZiA6IHRyZWUuX3Jvb3QgPSBsZWFmLCB0cmVlO1xuXG4gIC8vIE90aGVyd2lzZSwgc3BsaXQgdGhlIGxlYWYgbm9kZSB1bnRpbCB0aGUgb2xkIGFuZCBuZXcgcG9pbnQgYXJlIHNlcGFyYXRlZC5cbiAgZG8ge1xuICAgIHBhcmVudCA9IHBhcmVudCA/IHBhcmVudFtpXSA9IG5ldyBBcnJheSg0KSA6IHRyZWUuX3Jvb3QgPSBuZXcgQXJyYXkoNCk7XG4gICAgaWYgKHJpZ2h0ID0geCA+PSAoeG0gPSAoeDAgKyB4MSkgLyAyKSkgeDAgPSB4bTsgZWxzZSB4MSA9IHhtO1xuICAgIGlmIChib3R0b20gPSB5ID49ICh5bSA9ICh5MCArIHkxKSAvIDIpKSB5MCA9IHltOyBlbHNlIHkxID0geW07XG4gIH0gd2hpbGUgKChpID0gYm90dG9tIDw8IDEgfCByaWdodCkgPT09IChqID0gKHlwID49IHltKSA8PCAxIHwgKHhwID49IHhtKSkpO1xuICByZXR1cm4gcGFyZW50W2pdID0gbm9kZSwgcGFyZW50W2ldID0gbGVhZiwgdHJlZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEFsbChkYXRhKSB7XG4gIHZhciBkLCBpLCBuID0gZGF0YS5sZW5ndGgsXG4gICAgICB4LFxuICAgICAgeSxcbiAgICAgIHh6ID0gbmV3IEFycmF5KG4pLFxuICAgICAgeXogPSBuZXcgQXJyYXkobiksXG4gICAgICB4MCA9IEluZmluaXR5LFxuICAgICAgeTAgPSBJbmZpbml0eSxcbiAgICAgIHgxID0gLUluZmluaXR5LFxuICAgICAgeTEgPSAtSW5maW5pdHk7XG5cbiAgLy8gQ29tcHV0ZSB0aGUgcG9pbnRzIGFuZCB0aGVpciBleHRlbnQuXG4gIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAoaXNOYU4oeCA9ICt0aGlzLl94LmNhbGwobnVsbCwgZCA9IGRhdGFbaV0pKSB8fCBpc05hTih5ID0gK3RoaXMuX3kuY2FsbChudWxsLCBkKSkpIGNvbnRpbnVlO1xuICAgIHh6W2ldID0geDtcbiAgICB5eltpXSA9IHk7XG4gICAgaWYgKHggPCB4MCkgeDAgPSB4O1xuICAgIGlmICh4ID4geDEpIHgxID0geDtcbiAgICBpZiAoeSA8IHkwKSB5MCA9IHk7XG4gICAgaWYgKHkgPiB5MSkgeTEgPSB5O1xuICB9XG5cbiAgLy8gSWYgdGhlcmUgd2VyZSBubyAodmFsaWQpIHBvaW50cywgYWJvcnQuXG4gIGlmICh4MCA+IHgxIHx8IHkwID4geTEpIHJldHVybiB0aGlzO1xuXG4gIC8vIEV4cGFuZCB0aGUgdHJlZSB0byBjb3ZlciB0aGUgbmV3IHBvaW50cy5cbiAgdGhpcy5jb3Zlcih4MCwgeTApLmNvdmVyKHgxLCB5MSk7XG5cbiAgLy8gQWRkIHRoZSBuZXcgcG9pbnRzLlxuICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgYWRkKHRoaXMsIHh6W2ldLCB5eltpXSwgZGF0YVtpXSk7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgsIHkpIHtcbiAgaWYgKGlzTmFOKHggPSAreCkgfHwgaXNOYU4oeSA9ICt5KSkgcmV0dXJuIHRoaXM7IC8vIGlnbm9yZSBpbnZhbGlkIHBvaW50c1xuXG4gIHZhciB4MCA9IHRoaXMuX3gwLFxuICAgICAgeTAgPSB0aGlzLl95MCxcbiAgICAgIHgxID0gdGhpcy5feDEsXG4gICAgICB5MSA9IHRoaXMuX3kxO1xuXG4gIC8vIElmIHRoZSBxdWFkdHJlZSBoYXMgbm8gZXh0ZW50LCBpbml0aWFsaXplIHRoZW0uXG4gIC8vIEludGVnZXIgZXh0ZW50IGFyZSBuZWNlc3Nhcnkgc28gdGhhdCBpZiB3ZSBsYXRlciBkb3VibGUgdGhlIGV4dGVudCxcbiAgLy8gdGhlIGV4aXN0aW5nIHF1YWRyYW50IGJvdW5kYXJpZXMgZG9u4oCZdCBjaGFuZ2UgZHVlIHRvIGZsb2F0aW5nIHBvaW50IGVycm9yIVxuICBpZiAoaXNOYU4oeDApKSB7XG4gICAgeDEgPSAoeDAgPSBNYXRoLmZsb29yKHgpKSArIDE7XG4gICAgeTEgPSAoeTAgPSBNYXRoLmZsb29yKHkpKSArIDE7XG4gIH1cblxuICAvLyBPdGhlcndpc2UsIGRvdWJsZSByZXBlYXRlZGx5IHRvIGNvdmVyLlxuICBlbHNlIHtcbiAgICB2YXIgeiA9IHgxIC0geDAsXG4gICAgICAgIG5vZGUgPSB0aGlzLl9yb290LFxuICAgICAgICBwYXJlbnQsXG4gICAgICAgIGk7XG5cbiAgICB3aGlsZSAoeDAgPiB4IHx8IHggPj0geDEgfHwgeTAgPiB5IHx8IHkgPj0geTEpIHtcbiAgICAgIGkgPSAoeSA8IHkwKSA8PCAxIHwgKHggPCB4MCk7XG4gICAgICBwYXJlbnQgPSBuZXcgQXJyYXkoNCksIHBhcmVudFtpXSA9IG5vZGUsIG5vZGUgPSBwYXJlbnQsIHogKj0gMjtcbiAgICAgIHN3aXRjaCAoaSkge1xuICAgICAgICBjYXNlIDA6IHgxID0geDAgKyB6LCB5MSA9IHkwICsgejsgYnJlYWs7XG4gICAgICAgIGNhc2UgMTogeDAgPSB4MSAtIHosIHkxID0geTAgKyB6OyBicmVhaztcbiAgICAgICAgY2FzZSAyOiB4MSA9IHgwICsgeiwgeTAgPSB5MSAtIHo7IGJyZWFrO1xuICAgICAgICBjYXNlIDM6IHgwID0geDEgLSB6LCB5MCA9IHkxIC0gejsgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX3Jvb3QgJiYgdGhpcy5fcm9vdC5sZW5ndGgpIHRoaXMuX3Jvb3QgPSBub2RlO1xuICB9XG5cbiAgdGhpcy5feDAgPSB4MDtcbiAgdGhpcy5feTAgPSB5MDtcbiAgdGhpcy5feDEgPSB4MTtcbiAgdGhpcy5feTEgPSB5MTtcbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGRhdGEgPSBbXTtcbiAgdGhpcy52aXNpdChmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKCFub2RlLmxlbmd0aCkgZG8gZGF0YS5wdXNoKG5vZGUuZGF0YSk7IHdoaWxlIChub2RlID0gbm9kZS5uZXh0KVxuICB9KTtcbiAgcmV0dXJuIGRhdGE7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihfKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuY292ZXIoK19bMF1bMF0sICtfWzBdWzFdKS5jb3ZlcigrX1sxXVswXSwgK19bMV1bMV0pXG4gICAgICA6IGlzTmFOKHRoaXMuX3gwKSA/IHVuZGVmaW5lZCA6IFtbdGhpcy5feDAsIHRoaXMuX3kwXSwgW3RoaXMuX3gxLCB0aGlzLl95MV1dO1xufVxuIiwiaW1wb3J0IFF1YWQgZnJvbSBcIi4vcXVhZFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4LCB5LCByYWRpdXMpIHtcbiAgdmFyIGRhdGEsXG4gICAgICB4MCA9IHRoaXMuX3gwLFxuICAgICAgeTAgPSB0aGlzLl95MCxcbiAgICAgIHgxLFxuICAgICAgeTEsXG4gICAgICB4MixcbiAgICAgIHkyLFxuICAgICAgeDMgPSB0aGlzLl94MSxcbiAgICAgIHkzID0gdGhpcy5feTEsXG4gICAgICBxdWFkcyA9IFtdLFxuICAgICAgbm9kZSA9IHRoaXMuX3Jvb3QsXG4gICAgICBxLFxuICAgICAgaTtcblxuICBpZiAobm9kZSkgcXVhZHMucHVzaChuZXcgUXVhZChub2RlLCB4MCwgeTAsIHgzLCB5MykpO1xuICBpZiAocmFkaXVzID09IG51bGwpIHJhZGl1cyA9IEluZmluaXR5O1xuICBlbHNlIHtcbiAgICB4MCA9IHggLSByYWRpdXMsIHkwID0geSAtIHJhZGl1cztcbiAgICB4MyA9IHggKyByYWRpdXMsIHkzID0geSArIHJhZGl1cztcbiAgICByYWRpdXMgKj0gcmFkaXVzO1xuICB9XG5cbiAgd2hpbGUgKHEgPSBxdWFkcy5wb3AoKSkge1xuXG4gICAgLy8gU3RvcCBzZWFyY2hpbmcgaWYgdGhpcyBxdWFkcmFudCBjYW7igJl0IGNvbnRhaW4gYSBjbG9zZXIgbm9kZS5cbiAgICBpZiAoIShub2RlID0gcS5ub2RlKVxuICAgICAgICB8fCAoeDEgPSBxLngwKSA+IHgzXG4gICAgICAgIHx8ICh5MSA9IHEueTApID4geTNcbiAgICAgICAgfHwgKHgyID0gcS54MSkgPCB4MFxuICAgICAgICB8fCAoeTIgPSBxLnkxKSA8IHkwKSBjb250aW51ZTtcblxuICAgIC8vIEJpc2VjdCB0aGUgY3VycmVudCBxdWFkcmFudC5cbiAgICBpZiAobm9kZS5sZW5ndGgpIHtcbiAgICAgIHZhciB4bSA9ICh4MSArIHgyKSAvIDIsXG4gICAgICAgICAgeW0gPSAoeTEgKyB5MikgLyAyO1xuXG4gICAgICBxdWFkcy5wdXNoKFxuICAgICAgICBuZXcgUXVhZChub2RlWzNdLCB4bSwgeW0sIHgyLCB5MiksXG4gICAgICAgIG5ldyBRdWFkKG5vZGVbMl0sIHgxLCB5bSwgeG0sIHkyKSxcbiAgICAgICAgbmV3IFF1YWQobm9kZVsxXSwgeG0sIHkxLCB4MiwgeW0pLFxuICAgICAgICBuZXcgUXVhZChub2RlWzBdLCB4MSwgeTEsIHhtLCB5bSlcbiAgICAgICk7XG5cbiAgICAgIC8vIFZpc2l0IHRoZSBjbG9zZXN0IHF1YWRyYW50IGZpcnN0LlxuICAgICAgaWYgKGkgPSAoeSA+PSB5bSkgPDwgMSB8ICh4ID49IHhtKSkge1xuICAgICAgICBxID0gcXVhZHNbcXVhZHMubGVuZ3RoIC0gMV07XG4gICAgICAgIHF1YWRzW3F1YWRzLmxlbmd0aCAtIDFdID0gcXVhZHNbcXVhZHMubGVuZ3RoIC0gMSAtIGldO1xuICAgICAgICBxdWFkc1txdWFkcy5sZW5ndGggLSAxIC0gaV0gPSBxO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFZpc2l0IHRoaXMgcG9pbnQuIChWaXNpdGluZyBjb2luY2lkZW50IHBvaW50cyBpc27igJl0IG5lY2Vzc2FyeSEpXG4gICAgZWxzZSB7XG4gICAgICB2YXIgZHggPSB4IC0gK3RoaXMuX3guY2FsbChudWxsLCBub2RlLmRhdGEpLFxuICAgICAgICAgIGR5ID0geSAtICt0aGlzLl95LmNhbGwobnVsbCwgbm9kZS5kYXRhKSxcbiAgICAgICAgICBkMiA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgICAgaWYgKGQyIDwgcmFkaXVzKSB7XG4gICAgICAgIHZhciBkID0gTWF0aC5zcXJ0KHJhZGl1cyA9IGQyKTtcbiAgICAgICAgeDAgPSB4IC0gZCwgeTAgPSB5IC0gZDtcbiAgICAgICAgeDMgPSB4ICsgZCwgeTMgPSB5ICsgZDtcbiAgICAgICAgZGF0YSA9IG5vZGUuZGF0YTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gZGF0YTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBxdWFkdHJlZX0gZnJvbSBcIi4vcXVhZHRyZWVcIjtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIHRoaXMubm9kZSA9IG5vZGU7XG4gIHRoaXMueDAgPSB4MDtcbiAgdGhpcy55MCA9IHkwO1xuICB0aGlzLngxID0geDE7XG4gIHRoaXMueTEgPSB5MTtcbn1cbiIsImltcG9ydCB0cmVlX2FkZCwge2FkZEFsbCBhcyB0cmVlX2FkZEFsbH0gZnJvbSBcIi4vYWRkXCI7XG5pbXBvcnQgdHJlZV9jb3ZlciBmcm9tIFwiLi9jb3ZlclwiO1xuaW1wb3J0IHRyZWVfZGF0YSBmcm9tIFwiLi9kYXRhXCI7XG5pbXBvcnQgdHJlZV9leHRlbnQgZnJvbSBcIi4vZXh0ZW50XCI7XG5pbXBvcnQgdHJlZV9maW5kIGZyb20gXCIuL2ZpbmRcIjtcbmltcG9ydCB0cmVlX3JlbW92ZSwge3JlbW92ZUFsbCBhcyB0cmVlX3JlbW92ZUFsbH0gZnJvbSBcIi4vcmVtb3ZlXCI7XG5pbXBvcnQgdHJlZV9yb290IGZyb20gXCIuL3Jvb3RcIjtcbmltcG9ydCB0cmVlX3NpemUgZnJvbSBcIi4vc2l6ZVwiO1xuaW1wb3J0IHRyZWVfdmlzaXQgZnJvbSBcIi4vdmlzaXRcIjtcbmltcG9ydCB0cmVlX3Zpc2l0QWZ0ZXIgZnJvbSBcIi4vdmlzaXRBZnRlclwiO1xuaW1wb3J0IHRyZWVfeCwge2RlZmF1bHRYfSBmcm9tIFwiLi94XCI7XG5pbXBvcnQgdHJlZV95LCB7ZGVmYXVsdFl9IGZyb20gXCIuL3lcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcXVhZHRyZWUobm9kZXMsIHgsIHkpIHtcbiAgdmFyIHRyZWUgPSBuZXcgUXVhZHRyZWUoeCA9PSBudWxsID8gZGVmYXVsdFggOiB4LCB5ID09IG51bGwgPyBkZWZhdWx0WSA6IHksIE5hTiwgTmFOLCBOYU4sIE5hTik7XG4gIHJldHVybiBub2RlcyA9PSBudWxsID8gdHJlZSA6IHRyZWUuYWRkQWxsKG5vZGVzKTtcbn1cblxuZnVuY3Rpb24gUXVhZHRyZWUoeCwgeSwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgdGhpcy5feCA9IHg7XG4gIHRoaXMuX3kgPSB5O1xuICB0aGlzLl94MCA9IHgwO1xuICB0aGlzLl95MCA9IHkwO1xuICB0aGlzLl94MSA9IHgxO1xuICB0aGlzLl95MSA9IHkxO1xuICB0aGlzLl9yb290ID0gdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiBsZWFmX2NvcHkobGVhZikge1xuICB2YXIgY29weSA9IHtkYXRhOiBsZWFmLmRhdGF9LCBuZXh0ID0gY29weTtcbiAgd2hpbGUgKGxlYWYgPSBsZWFmLm5leHQpIG5leHQgPSBuZXh0Lm5leHQgPSB7ZGF0YTogbGVhZi5kYXRhfTtcbiAgcmV0dXJuIGNvcHk7XG59XG5cbnZhciB0cmVlUHJvdG8gPSBxdWFkdHJlZS5wcm90b3R5cGUgPSBRdWFkdHJlZS5wcm90b3R5cGU7XG5cbnRyZWVQcm90by5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gIHZhciBjb3B5ID0gbmV3IFF1YWR0cmVlKHRoaXMuX3gsIHRoaXMuX3ksIHRoaXMuX3gwLCB0aGlzLl95MCwgdGhpcy5feDEsIHRoaXMuX3kxKSxcbiAgICAgIG5vZGUgPSB0aGlzLl9yb290LFxuICAgICAgbm9kZXMsXG4gICAgICBjaGlsZDtcblxuICBpZiAoIW5vZGUpIHJldHVybiBjb3B5O1xuXG4gIGlmICghbm9kZS5sZW5ndGgpIHJldHVybiBjb3B5Ll9yb290ID0gbGVhZl9jb3B5KG5vZGUpLCBjb3B5O1xuXG4gIG5vZGVzID0gW3tzb3VyY2U6IG5vZGUsIHRhcmdldDogY29weS5fcm9vdCA9IG5ldyBBcnJheSg0KX1dO1xuICB3aGlsZSAobm9kZSA9IG5vZGVzLnBvcCgpKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCA0OyArK2kpIHtcbiAgICAgIGlmIChjaGlsZCA9IG5vZGUuc291cmNlW2ldKSB7XG4gICAgICAgIGlmIChjaGlsZC5sZW5ndGgpIG5vZGVzLnB1c2goe3NvdXJjZTogY2hpbGQsIHRhcmdldDogbm9kZS50YXJnZXRbaV0gPSBuZXcgQXJyYXkoNCl9KTtcbiAgICAgICAgZWxzZSBub2RlLnRhcmdldFtpXSA9IGxlYWZfY29weShjaGlsZCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNvcHk7XG59O1xuXG50cmVlUHJvdG8uYWRkID0gdHJlZV9hZGQ7XG50cmVlUHJvdG8uYWRkQWxsID0gdHJlZV9hZGRBbGw7XG50cmVlUHJvdG8uY292ZXIgPSB0cmVlX2NvdmVyO1xudHJlZVByb3RvLmRhdGEgPSB0cmVlX2RhdGE7XG50cmVlUHJvdG8uZXh0ZW50ID0gdHJlZV9leHRlbnQ7XG50cmVlUHJvdG8uZmluZCA9IHRyZWVfZmluZDtcbnRyZWVQcm90by5yZW1vdmUgPSB0cmVlX3JlbW92ZTtcbnRyZWVQcm90by5yZW1vdmVBbGwgPSB0cmVlX3JlbW92ZUFsbDtcbnRyZWVQcm90by5yb290ID0gdHJlZV9yb290O1xudHJlZVByb3RvLnNpemUgPSB0cmVlX3NpemU7XG50cmVlUHJvdG8udmlzaXQgPSB0cmVlX3Zpc2l0O1xudHJlZVByb3RvLnZpc2l0QWZ0ZXIgPSB0cmVlX3Zpc2l0QWZ0ZXI7XG50cmVlUHJvdG8ueCA9IHRyZWVfeDtcbnRyZWVQcm90by55ID0gdHJlZV95O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZCkge1xuICBpZiAoaXNOYU4oeCA9ICt0aGlzLl94LmNhbGwobnVsbCwgZCkpIHx8IGlzTmFOKHkgPSArdGhpcy5feS5jYWxsKG51bGwsIGQpKSkgcmV0dXJuIHRoaXM7IC8vIGlnbm9yZSBpbnZhbGlkIHBvaW50c1xuXG4gIHZhciBwYXJlbnQsXG4gICAgICBub2RlID0gdGhpcy5fcm9vdCxcbiAgICAgIHJldGFpbmVyLFxuICAgICAgcHJldmlvdXMsXG4gICAgICBuZXh0LFxuICAgICAgeDAgPSB0aGlzLl94MCxcbiAgICAgIHkwID0gdGhpcy5feTAsXG4gICAgICB4MSA9IHRoaXMuX3gxLFxuICAgICAgeTEgPSB0aGlzLl95MSxcbiAgICAgIHgsXG4gICAgICB5LFxuICAgICAgeG0sXG4gICAgICB5bSxcbiAgICAgIHJpZ2h0LFxuICAgICAgYm90dG9tLFxuICAgICAgaSxcbiAgICAgIGo7XG5cbiAgLy8gSWYgdGhlIHRyZWUgaXMgZW1wdHksIGluaXRpYWxpemUgdGhlIHJvb3QgYXMgYSBsZWFmLlxuICBpZiAoIW5vZGUpIHJldHVybiB0aGlzO1xuXG4gIC8vIEZpbmQgdGhlIGxlYWYgbm9kZSBmb3IgdGhlIHBvaW50LlxuICAvLyBXaGlsZSBkZXNjZW5kaW5nLCBhbHNvIHJldGFpbiB0aGUgZGVlcGVzdCBwYXJlbnQgd2l0aCBhIG5vbi1yZW1vdmVkIHNpYmxpbmcuXG4gIGlmIChub2RlLmxlbmd0aCkgd2hpbGUgKHRydWUpIHtcbiAgICBpZiAocmlnaHQgPSB4ID49ICh4bSA9ICh4MCArIHgxKSAvIDIpKSB4MCA9IHhtOyBlbHNlIHgxID0geG07XG4gICAgaWYgKGJvdHRvbSA9IHkgPj0gKHltID0gKHkwICsgeTEpIC8gMikpIHkwID0geW07IGVsc2UgeTEgPSB5bTtcbiAgICBpZiAoIShwYXJlbnQgPSBub2RlLCBub2RlID0gbm9kZVtpID0gYm90dG9tIDw8IDEgfCByaWdodF0pKSByZXR1cm4gdGhpcztcbiAgICBpZiAoIW5vZGUubGVuZ3RoKSBicmVhaztcbiAgICBpZiAocGFyZW50WyhpICsgMSkgJiAzXSB8fCBwYXJlbnRbKGkgKyAyKSAmIDNdIHx8IHBhcmVudFsoaSArIDMpICYgM10pIHJldGFpbmVyID0gcGFyZW50LCBqID0gaTtcbiAgfVxuXG4gIC8vIEZpbmQgdGhlIHBvaW50IHRvIHJlbW92ZS5cbiAgd2hpbGUgKG5vZGUuZGF0YSAhPT0gZCkgaWYgKCEocHJldmlvdXMgPSBub2RlLCBub2RlID0gbm9kZS5uZXh0KSkgcmV0dXJuIHRoaXM7XG4gIGlmIChuZXh0ID0gbm9kZS5uZXh0KSBkZWxldGUgbm9kZS5uZXh0O1xuXG4gIC8vIElmIHRoZXJlIGFyZSBtdWx0aXBsZSBjb2luY2lkZW50IHBvaW50cywgcmVtb3ZlIGp1c3QgdGhlIHBvaW50LlxuICBpZiAocHJldmlvdXMpIHJldHVybiAobmV4dCA/IHByZXZpb3VzLm5leHQgPSBuZXh0IDogZGVsZXRlIHByZXZpb3VzLm5leHQpLCB0aGlzO1xuXG4gIC8vIElmIHRoaXMgaXMgdGhlIHJvb3QgcG9pbnQsIHJlbW92ZSBpdC5cbiAgaWYgKCFwYXJlbnQpIHJldHVybiB0aGlzLl9yb290ID0gbmV4dCwgdGhpcztcblxuICAvLyBSZW1vdmUgdGhpcyBsZWFmLlxuICBuZXh0ID8gcGFyZW50W2ldID0gbmV4dCA6IGRlbGV0ZSBwYXJlbnRbaV07XG5cbiAgLy8gSWYgdGhlIHBhcmVudCBub3cgY29udGFpbnMgZXhhY3RseSBvbmUgbGVhZiwgY29sbGFwc2Ugc3VwZXJmbHVvdXMgcGFyZW50cy5cbiAgaWYgKChub2RlID0gcGFyZW50WzBdIHx8IHBhcmVudFsxXSB8fCBwYXJlbnRbMl0gfHwgcGFyZW50WzNdKVxuICAgICAgJiYgbm9kZSA9PT0gKHBhcmVudFszXSB8fCBwYXJlbnRbMl0gfHwgcGFyZW50WzFdIHx8IHBhcmVudFswXSlcbiAgICAgICYmICFub2RlLmxlbmd0aCkge1xuICAgIGlmIChyZXRhaW5lcikgcmV0YWluZXJbal0gPSBub2RlO1xuICAgIGVsc2UgdGhpcy5fcm9vdCA9IG5vZGU7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUFsbChkYXRhKSB7XG4gIGZvciAodmFyIGkgPSAwLCBuID0gZGF0YS5sZW5ndGg7IGkgPCBuOyArK2kpIHRoaXMucmVtb3ZlKGRhdGFbaV0pO1xuICByZXR1cm4gdGhpcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5fcm9vdDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgc2l6ZSA9IDA7XG4gIHRoaXMudmlzaXQoZnVuY3Rpb24obm9kZSkge1xuICAgIGlmICghbm9kZS5sZW5ndGgpIGRvICsrc2l6ZTsgd2hpbGUgKG5vZGUgPSBub2RlLm5leHQpXG4gIH0pO1xuICByZXR1cm4gc2l6ZTtcbn1cbiIsImltcG9ydCBRdWFkIGZyb20gXCIuL3F1YWRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHF1YWRzID0gW10sIHEsIG5vZGUgPSB0aGlzLl9yb290LCBjaGlsZCwgeDAsIHkwLCB4MSwgeTE7XG4gIGlmIChub2RlKSBxdWFkcy5wdXNoKG5ldyBRdWFkKG5vZGUsIHRoaXMuX3gwLCB0aGlzLl95MCwgdGhpcy5feDEsIHRoaXMuX3kxKSk7XG4gIHdoaWxlIChxID0gcXVhZHMucG9wKCkpIHtcbiAgICBpZiAoIWNhbGxiYWNrKG5vZGUgPSBxLm5vZGUsIHgwID0gcS54MCwgeTAgPSBxLnkwLCB4MSA9IHEueDEsIHkxID0gcS55MSkgJiYgbm9kZS5sZW5ndGgpIHtcbiAgICAgIHZhciB4bSA9ICh4MCArIHgxKSAvIDIsIHltID0gKHkwICsgeTEpIC8gMjtcbiAgICAgIGlmIChjaGlsZCA9IG5vZGVbM10pIHF1YWRzLnB1c2gobmV3IFF1YWQoY2hpbGQsIHhtLCB5bSwgeDEsIHkxKSk7XG4gICAgICBpZiAoY2hpbGQgPSBub2RlWzJdKSBxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLCB4MCwgeW0sIHhtLCB5MSkpO1xuICAgICAgaWYgKGNoaWxkID0gbm9kZVsxXSkgcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCwgeG0sIHkwLCB4MSwgeW0pKTtcbiAgICAgIGlmIChjaGlsZCA9IG5vZGVbMF0pIHF1YWRzLnB1c2gobmV3IFF1YWQoY2hpbGQsIHgwLCB5MCwgeG0sIHltKSk7XG4gICAgfVxuICB9XG4gIHJldHVybiB0aGlzO1xufVxuIiwiaW1wb3J0IFF1YWQgZnJvbSBcIi4vcXVhZFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgcXVhZHMgPSBbXSwgbmV4dCA9IFtdLCBxO1xuICBpZiAodGhpcy5fcm9vdCkgcXVhZHMucHVzaChuZXcgUXVhZCh0aGlzLl9yb290LCB0aGlzLl94MCwgdGhpcy5feTAsIHRoaXMuX3gxLCB0aGlzLl95MSkpO1xuICB3aGlsZSAocSA9IHF1YWRzLnBvcCgpKSB7XG4gICAgdmFyIG5vZGUgPSBxLm5vZGU7XG4gICAgaWYgKG5vZGUubGVuZ3RoKSB7XG4gICAgICB2YXIgY2hpbGQsIHgwID0gcS54MCwgeTAgPSBxLnkwLCB4MSA9IHEueDEsIHkxID0gcS55MSwgeG0gPSAoeDAgKyB4MSkgLyAyLCB5bSA9ICh5MCArIHkxKSAvIDI7XG4gICAgICBpZiAoY2hpbGQgPSBub2RlWzBdKSBxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLCB4MCwgeTAsIHhtLCB5bSkpO1xuICAgICAgaWYgKGNoaWxkID0gbm9kZVsxXSkgcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCwgeG0sIHkwLCB4MSwgeW0pKTtcbiAgICAgIGlmIChjaGlsZCA9IG5vZGVbMl0pIHF1YWRzLnB1c2gobmV3IFF1YWQoY2hpbGQsIHgwLCB5bSwgeG0sIHkxKSk7XG4gICAgICBpZiAoY2hpbGQgPSBub2RlWzNdKSBxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLCB4bSwgeW0sIHgxLCB5MSkpO1xuICAgIH1cbiAgICBuZXh0LnB1c2gocSk7XG4gIH1cbiAgd2hpbGUgKHEgPSBuZXh0LnBvcCgpKSB7XG4gICAgY2FsbGJhY2socS5ub2RlLCBxLngwLCBxLnkwLCBxLngxLCBxLnkxKTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0WChkKSB7XG4gIHJldHVybiBkWzBdO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihfKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX3ggPSBfLCB0aGlzKSA6IHRoaXMuX3g7XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gZGVmYXVsdFkoZCkge1xuICByZXR1cm4gZFsxXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oXykge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aGlzLl95ID0gXywgdGhpcykgOiB0aGlzLl95O1xufVxuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZVwiO1xuaW1wb3J0IGlyd2luSGFsbCBmcm9tIFwiLi9pcndpbkhhbGxcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIHNvdXJjZVJhbmRvbUJhdGVzKHNvdXJjZSkge1xuICBmdW5jdGlvbiByYW5kb21CYXRlcyhuKSB7XG4gICAgdmFyIHJhbmRvbUlyd2luSGFsbCA9IGlyd2luSGFsbC5zb3VyY2Uoc291cmNlKShuKTtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gcmFuZG9tSXJ3aW5IYWxsKCkgLyBuO1xuICAgIH07XG4gIH1cblxuICByYW5kb21CYXRlcy5zb3VyY2UgPSBzb3VyY2VSYW5kb21CYXRlcztcblxuICByZXR1cm4gcmFuZG9tQmF0ZXM7XG59KShkZWZhdWx0U291cmNlKTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKTtcbn1cbiIsImltcG9ydCBkZWZhdWx0U291cmNlIGZyb20gXCIuL2RlZmF1bHRTb3VyY2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIHNvdXJjZVJhbmRvbUV4cG9uZW50aWFsKHNvdXJjZSkge1xuICBmdW5jdGlvbiByYW5kb21FeHBvbmVudGlhbChsYW1iZGEpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gLU1hdGgubG9nKDEgLSBzb3VyY2UoKSkgLyBsYW1iZGE7XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbUV4cG9uZW50aWFsLnNvdXJjZSA9IHNvdXJjZVJhbmRvbUV4cG9uZW50aWFsO1xuXG4gIHJldHVybiByYW5kb21FeHBvbmVudGlhbDtcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIHJhbmRvbVVuaWZvcm19IGZyb20gXCIuL3VuaWZvcm1cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByYW5kb21Ob3JtYWx9IGZyb20gXCIuL25vcm1hbFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHJhbmRvbUxvZ05vcm1hbH0gZnJvbSBcIi4vbG9nTm9ybWFsXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcmFuZG9tQmF0ZXN9IGZyb20gXCIuL2JhdGVzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcmFuZG9tSXJ3aW5IYWxsfSBmcm9tIFwiLi9pcndpbkhhbGxcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByYW5kb21FeHBvbmVudGlhbH0gZnJvbSBcIi4vZXhwb25lbnRpYWxcIjtcbiIsImltcG9ydCBkZWZhdWx0U291cmNlIGZyb20gXCIuL2RlZmF1bHRTb3VyY2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIHNvdXJjZVJhbmRvbUlyd2luSGFsbChzb3VyY2UpIHtcbiAgZnVuY3Rpb24gcmFuZG9tSXJ3aW5IYWxsKG4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICBmb3IgKHZhciBzdW0gPSAwLCBpID0gMDsgaSA8IG47ICsraSkgc3VtICs9IHNvdXJjZSgpO1xuICAgICAgcmV0dXJuIHN1bTtcbiAgICB9O1xuICB9XG5cbiAgcmFuZG9tSXJ3aW5IYWxsLnNvdXJjZSA9IHNvdXJjZVJhbmRvbUlyd2luSGFsbDtcblxuICByZXR1cm4gcmFuZG9tSXJ3aW5IYWxsO1xufSkoZGVmYXVsdFNvdXJjZSk7XG4iLCJpbXBvcnQgZGVmYXVsdFNvdXJjZSBmcm9tIFwiLi9kZWZhdWx0U291cmNlXCI7XG5pbXBvcnQgbm9ybWFsIGZyb20gXCIuL25vcm1hbFwiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tTG9nTm9ybWFsKHNvdXJjZSkge1xuICBmdW5jdGlvbiByYW5kb21Mb2dOb3JtYWwoKSB7XG4gICAgdmFyIHJhbmRvbU5vcm1hbCA9IG5vcm1hbC5zb3VyY2Uoc291cmNlKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBNYXRoLmV4cChyYW5kb21Ob3JtYWwoKSk7XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbUxvZ05vcm1hbC5zb3VyY2UgPSBzb3VyY2VSYW5kb21Mb2dOb3JtYWw7XG5cbiAgcmV0dXJuIHJhbmRvbUxvZ05vcm1hbDtcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZVwiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tTm9ybWFsKHNvdXJjZSkge1xuICBmdW5jdGlvbiByYW5kb21Ob3JtYWwobXUsIHNpZ21hKSB7XG4gICAgdmFyIHgsIHI7XG4gICAgbXUgPSBtdSA9PSBudWxsID8gMCA6ICttdTtcbiAgICBzaWdtYSA9IHNpZ21hID09IG51bGwgPyAxIDogK3NpZ21hO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB5O1xuXG4gICAgICAvLyBJZiBhdmFpbGFibGUsIHVzZSB0aGUgc2Vjb25kIHByZXZpb3VzbHktZ2VuZXJhdGVkIHVuaWZvcm0gcmFuZG9tLlxuICAgICAgaWYgKHggIT0gbnVsbCkgeSA9IHgsIHggPSBudWxsO1xuXG4gICAgICAvLyBPdGhlcndpc2UsIGdlbmVyYXRlIGEgbmV3IHggYW5kIHkuXG4gICAgICBlbHNlIGRvIHtcbiAgICAgICAgeCA9IHNvdXJjZSgpICogMiAtIDE7XG4gICAgICAgIHkgPSBzb3VyY2UoKSAqIDIgLSAxO1xuICAgICAgICByID0geCAqIHggKyB5ICogeTtcbiAgICAgIH0gd2hpbGUgKCFyIHx8IHIgPiAxKTtcblxuICAgICAgcmV0dXJuIG11ICsgc2lnbWEgKiB5ICogTWF0aC5zcXJ0KC0yICogTWF0aC5sb2cocikgLyByKTtcbiAgICB9O1xuICB9XG5cbiAgcmFuZG9tTm9ybWFsLnNvdXJjZSA9IHNvdXJjZVJhbmRvbU5vcm1hbDtcblxuICByZXR1cm4gcmFuZG9tTm9ybWFsO1xufSkoZGVmYXVsdFNvdXJjZSk7XG4iLCJpbXBvcnQgZGVmYXVsdFNvdXJjZSBmcm9tIFwiLi9kZWZhdWx0U291cmNlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBzb3VyY2VSYW5kb21Vbmlmb3JtKHNvdXJjZSkge1xuICBmdW5jdGlvbiByYW5kb21Vbmlmb3JtKG1pbiwgbWF4KSB7XG4gICAgbWluID0gbWluID09IG51bGwgPyAwIDogK21pbjtcbiAgICBtYXggPSBtYXggPT0gbnVsbCA/IDEgOiArbWF4O1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSBtYXggPSBtaW4sIG1pbiA9IDA7XG4gICAgZWxzZSBtYXggLT0gbWluO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBzb3VyY2UoKSAqIG1heCArIG1pbjtcbiAgICB9O1xuICB9XG5cbiAgcmFuZG9tVW5pZm9ybS5zb3VyY2UgPSBzb3VyY2VSYW5kb21Vbmlmb3JtO1xuXG4gIHJldHVybiByYW5kb21Vbmlmb3JtO1xufSkoZGVmYXVsdFNvdXJjZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY29sb3JzKFwiN2ZjOTdmYmVhZWQ0ZmRjMDg2ZmZmZjk5Mzg2Y2IwZjAwMjdmYmY1YjE3NjY2NjY2XCIpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbG9ycyhcIjFiOWU3N2Q5NWYwMjc1NzBiM2U3Mjk4YTY2YTYxZWU2YWIwMmE2NzYxZDY2NjY2NlwiKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCJhNmNlZTMxZjc4YjRiMmRmOGEzM2EwMmNmYjlhOTllMzFhMWNmZGJmNmZmZjdmMDBjYWIyZDY2YTNkOWFmZmZmOTliMTU5MjhcIik7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY29sb3JzKFwiZmJiNGFlYjNjZGUzY2NlYmM1ZGVjYmU0ZmVkOWE2ZmZmZmNjZTVkOGJkZmRkYWVjZjJmMmYyXCIpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbG9ycyhcImIzZTJjZGZkY2RhY2NiZDVlOGY0Y2FlNGU2ZjVjOWZmZjJhZWYxZTJjY2NjY2NjY1wiKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCJlNDFhMWMzNzdlYjg0ZGFmNGE5ODRlYTNmZjdmMDBmZmZmMzNhNjU2MjhmNzgxYmY5OTk5OTlcIik7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY29sb3JzKFwiNjZjMmE1ZmM4ZDYyOGRhMGNiZTc4YWMzYTZkODU0ZmZkOTJmZTVjNDk0YjNiM2IzXCIpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbG9ycyhcIjhkZDNjN2ZmZmZiM2JlYmFkYWZiODA3MjgwYjFkM2ZkYjQ2MmIzZGU2OWZjY2RlNWQ5ZDlkOWJjODBiZGNjZWJjNWZmZWQ2ZlwiKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCIxZjc3YjRmZjdmMGUyY2EwMmNkNjI3Mjg5NDY3YmQ4YzU2NGJlMzc3YzI3ZjdmN2ZiY2JkMjIxN2JlY2ZcIik7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzcGVjaWZpZXIpIHtcbiAgdmFyIG4gPSBzcGVjaWZpZXIubGVuZ3RoIC8gNiB8IDAsIGNvbG9ycyA9IG5ldyBBcnJheShuKSwgaSA9IDA7XG4gIHdoaWxlIChpIDwgbikgY29sb3JzW2ldID0gXCIjXCIgKyBzcGVjaWZpZXIuc2xpY2UoaSAqIDYsICsraSAqIDYpO1xuICByZXR1cm4gY29sb3JzO1xufVxuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZDhiMzY1ZjVmNWY1NWFiNGFjXCIsXG4gIFwiYTY2MTFhZGZjMjdkODBjZGMxMDE4NTcxXCIsXG4gIFwiYTY2MTFhZGZjMjdkZjVmNWY1ODBjZGMxMDE4NTcxXCIsXG4gIFwiOGM1MTBhZDhiMzY1ZjZlOGMzYzdlYWU1NWFiNGFjMDE2NjVlXCIsXG4gIFwiOGM1MTBhZDhiMzY1ZjZlOGMzZjVmNWY1YzdlYWU1NWFiNGFjMDE2NjVlXCIsXG4gIFwiOGM1MTBhYmY4MTJkZGZjMjdkZjZlOGMzYzdlYWU1ODBjZGMxMzU5NzhmMDE2NjVlXCIsXG4gIFwiOGM1MTBhYmY4MTJkZGZjMjdkZjZlOGMzZjVmNWY1YzdlYWU1ODBjZGMxMzU5NzhmMDE2NjVlXCIsXG4gIFwiNTQzMDA1OGM1MTBhYmY4MTJkZGZjMjdkZjZlOGMzYzdlYWU1ODBjZGMxMzU5NzhmMDE2NjVlMDAzYzMwXCIsXG4gIFwiNTQzMDA1OGM1MTBhYmY4MTJkZGZjMjdkZjZlOGMzZjVmNWY1YzdlYWU1ODBjZGMxMzU5NzhmMDE2NjVlMDAzYzMwXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImFmOGRjM2Y3ZjdmNzdmYmY3YlwiLFxuICBcIjdiMzI5NGMyYTVjZmE2ZGJhMDAwODgzN1wiLFxuICBcIjdiMzI5NGMyYTVjZmY3ZjdmN2E2ZGJhMDAwODgzN1wiLFxuICBcIjc2MmE4M2FmOGRjM2U3ZDRlOGQ5ZjBkMzdmYmY3YjFiNzgzN1wiLFxuICBcIjc2MmE4M2FmOGRjM2U3ZDRlOGY3ZjdmN2Q5ZjBkMzdmYmY3YjFiNzgzN1wiLFxuICBcIjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGQ5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzN1wiLFxuICBcIjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGY3ZjdmN2Q5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzN1wiLFxuICBcIjQwMDA0Yjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGQ5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNzAwNDQxYlwiLFxuICBcIjQwMDA0Yjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGY3ZjdmN2Q5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNzAwNDQxYlwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlOWEzYzlmN2Y3ZjdhMWQ3NmFcIixcbiAgXCJkMDFjOGJmMWI2ZGFiOGUxODY0ZGFjMjZcIixcbiAgXCJkMDFjOGJmMWI2ZGFmN2Y3ZjdiOGUxODY0ZGFjMjZcIixcbiAgXCJjNTFiN2RlOWEzYzlmZGUwZWZlNmY1ZDBhMWQ3NmE0ZDkyMjFcIixcbiAgXCJjNTFiN2RlOWEzYzlmZGUwZWZmN2Y3ZjdlNmY1ZDBhMWQ3NmE0ZDkyMjFcIixcbiAgXCJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjFcIixcbiAgXCJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZmN2Y3ZjdlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjFcIixcbiAgXCI4ZTAxNTJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjEyNzY0MTlcIixcbiAgXCI4ZTAxNTJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZmN2Y3ZjdlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjEyNzY0MTlcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiOTk4ZWMzZjdmN2Y3ZjFhMzQwXCIsXG4gIFwiNWUzYzk5YjJhYmQyZmRiODYzZTY2MTAxXCIsXG4gIFwiNWUzYzk5YjJhYmQyZjdmN2Y3ZmRiODYzZTY2MTAxXCIsXG4gIFwiNTQyNzg4OTk4ZWMzZDhkYWViZmVlMGI2ZjFhMzQwYjM1ODA2XCIsXG4gIFwiNTQyNzg4OTk4ZWMzZDhkYWViZjdmN2Y3ZmVlMGI2ZjFhMzQwYjM1ODA2XCIsXG4gIFwiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2XCIsXG4gIFwiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZjdmN2Y3ZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2XCIsXG4gIFwiMmQwMDRiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2N2YzYjA4XCIsXG4gIFwiMmQwMDRiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZjdmN2Y3ZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2N2YzYjA4XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImVmOGE2MmY3ZjdmNzY3YTljZlwiLFxuICBcImNhMDAyMGY0YTU4MjkyYzVkZTA1NzFiMFwiLFxuICBcImNhMDAyMGY0YTU4MmY3ZjdmNzkyYzVkZTA1NzFiMFwiLFxuICBcImIyMTgyYmVmOGE2MmZkZGJjN2QxZTVmMDY3YTljZjIxNjZhY1wiLFxuICBcImIyMTgyYmVmOGE2MmZkZGJjN2Y3ZjdmN2QxZTVmMDY3YTljZjIxNjZhY1wiLFxuICBcImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhY1wiLFxuICBcImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2Y3ZjdmN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhY1wiLFxuICBcIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYzA1MzA2MVwiLFxuICBcIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2Y3ZjdmN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYzA1MzA2MVwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlZjhhNjJmZmZmZmY5OTk5OTlcIixcbiAgXCJjYTAwMjBmNGE1ODJiYWJhYmE0MDQwNDBcIixcbiAgXCJjYTAwMjBmNGE1ODJmZmZmZmZiYWJhYmE0MDQwNDBcIixcbiAgXCJiMjE4MmJlZjhhNjJmZGRiYzdlMGUwZTA5OTk5OTk0ZDRkNGRcIixcbiAgXCJiMjE4MmJlZjhhNjJmZGRiYzdmZmZmZmZlMGUwZTA5OTk5OTk0ZDRkNGRcIixcbiAgXCJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGRcIixcbiAgXCJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmZmZmZmZlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGRcIixcbiAgXCI2NzAwMWZiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGQxYTFhMWFcIixcbiAgXCI2NzAwMWZiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmZmZmZmZlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGQxYTFhMWFcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmM4ZDU5ZmZmZmJmOTFiZmRiXCIsXG4gIFwiZDcxOTFjZmRhZTYxYWJkOWU5MmM3YmI2XCIsXG4gIFwiZDcxOTFjZmRhZTYxZmZmZmJmYWJkOWU5MmM3YmI2XCIsXG4gIFwiZDczMDI3ZmM4ZDU5ZmVlMDkwZTBmM2Y4OTFiZmRiNDU3NWI0XCIsXG4gIFwiZDczMDI3ZmM4ZDU5ZmVlMDkwZmZmZmJmZTBmM2Y4OTFiZmRiNDU3NWI0XCIsXG4gIFwiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0XCIsXG4gIFwiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZmZmZmJmZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0XCIsXG4gIFwiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0MzEzNjk1XCIsXG4gIFwiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZmZmZmJmZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0MzEzNjk1XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImZjOGQ1OWZmZmZiZjkxY2Y2MFwiLFxuICBcImQ3MTkxY2ZkYWU2MWE2ZDk2YTFhOTY0MVwiLFxuICBcImQ3MTkxY2ZkYWU2MWZmZmZiZmE2ZDk2YTFhOTY0MVwiLFxuICBcImQ3MzAyN2ZjOGQ1OWZlZTA4YmQ5ZWY4YjkxY2Y2MDFhOTg1MFwiLFxuICBcImQ3MzAyN2ZjOGQ1OWZlZTA4YmZmZmZiZmQ5ZWY4YjkxY2Y2MDFhOTg1MFwiLFxuICBcImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MFwiLFxuICBcImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MFwiLFxuICBcImE1MDAyNmQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MDAwNjgzN1wiLFxuICBcImE1MDAyNmQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MDAwNjgzN1wiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJmYzhkNTlmZmZmYmY5OWQ1OTRcIixcbiAgXCJkNzE5MWNmZGFlNjFhYmRkYTQyYjgzYmFcIixcbiAgXCJkNzE5MWNmZGFlNjFmZmZmYmZhYmRkYTQyYjgzYmFcIixcbiAgXCJkNTNlNGZmYzhkNTlmZWUwOGJlNmY1OTg5OWQ1OTQzMjg4YmRcIixcbiAgXCJkNTNlNGZmYzhkNTlmZWUwOGJmZmZmYmZlNmY1OTg5OWQ1OTQzMjg4YmRcIixcbiAgXCJkNTNlNGZmNDZkNDNmZGFlNjFmZWUwOGJlNmY1OThhYmRkYTQ2NmMyYTUzMjg4YmRcIixcbiAgXCJkNTNlNGZmNDZkNDNmZGFlNjFmZWUwOGJmZmZmYmZlNmY1OThhYmRkYTQ2NmMyYTUzMjg4YmRcIixcbiAgXCI5ZTAxNDJkNTNlNGZmNDZkNDNmZGFlNjFmZWUwOGJlNmY1OThhYmRkYTQ2NmMyYTUzMjg4YmQ1ZTRmYTJcIixcbiAgXCI5ZTAxNDJkNTNlNGZmNDZkNDNmZGFlNjFmZWUwOGJmZmZmYmZlNmY1OThhYmRkYTQ2NmMyYTUzMjg4YmQ1ZTRmYTJcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIHNjaGVtZUNhdGVnb3J5MTB9IGZyb20gXCIuL2NhdGVnb3JpY2FsL2NhdGVnb3J5MTBcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzY2hlbWVBY2NlbnR9IGZyb20gXCIuL2NhdGVnb3JpY2FsL0FjY2VudFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNjaGVtZURhcmsyfSBmcm9tIFwiLi9jYXRlZ29yaWNhbC9EYXJrMlwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNjaGVtZVBhaXJlZH0gZnJvbSBcIi4vY2F0ZWdvcmljYWwvUGFpcmVkXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2NoZW1lUGFzdGVsMX0gZnJvbSBcIi4vY2F0ZWdvcmljYWwvUGFzdGVsMVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNjaGVtZVBhc3RlbDJ9IGZyb20gXCIuL2NhdGVnb3JpY2FsL1Bhc3RlbDJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzY2hlbWVTZXQxfSBmcm9tIFwiLi9jYXRlZ29yaWNhbC9TZXQxXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2NoZW1lU2V0Mn0gZnJvbSBcIi4vY2F0ZWdvcmljYWwvU2V0MlwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNjaGVtZVNldDN9IGZyb20gXCIuL2NhdGVnb3JpY2FsL1NldDNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUJyQkcsIHNjaGVtZSBhcyBzY2hlbWVCckJHfSBmcm9tIFwiLi9kaXZlcmdpbmcvQnJCR1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUFJHbiwgc2NoZW1lIGFzIHNjaGVtZVBSR259IGZyb20gXCIuL2RpdmVyZ2luZy9QUkduXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVQaVlHLCBzY2hlbWUgYXMgc2NoZW1lUGlZR30gZnJvbSBcIi4vZGl2ZXJnaW5nL1BpWUdcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVB1T3IsIHNjaGVtZSBhcyBzY2hlbWVQdU9yfSBmcm9tIFwiLi9kaXZlcmdpbmcvUHVPclwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUmRCdSwgc2NoZW1lIGFzIHNjaGVtZVJkQnV9IGZyb20gXCIuL2RpdmVyZ2luZy9SZEJ1XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVSZEd5LCBzY2hlbWUgYXMgc2NoZW1lUmRHeX0gZnJvbSBcIi4vZGl2ZXJnaW5nL1JkR3lcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVJkWWxCdSwgc2NoZW1lIGFzIHNjaGVtZVJkWWxCdX0gZnJvbSBcIi4vZGl2ZXJnaW5nL1JkWWxCdVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUmRZbEduLCBzY2hlbWUgYXMgc2NoZW1lUmRZbEdufSBmcm9tIFwiLi9kaXZlcmdpbmcvUmRZbEduXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVTcGVjdHJhbCwgc2NoZW1lIGFzIHNjaGVtZVNwZWN0cmFsfSBmcm9tIFwiLi9kaXZlcmdpbmcvU3BlY3RyYWxcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUJ1R24sIHNjaGVtZSBhcyBzY2hlbWVCdUdufSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL0J1R25cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUJ1UHUsIHNjaGVtZSBhcyBzY2hlbWVCdVB1fSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL0J1UHVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUduQnUsIHNjaGVtZSBhcyBzY2hlbWVHbkJ1fSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL0duQnVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZU9yUmQsIHNjaGVtZSBhcyBzY2hlbWVPclJkfSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL09yUmRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVB1QnVHbiwgc2NoZW1lIGFzIHNjaGVtZVB1QnVHbn0gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9QdUJ1R25cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVB1QnUsIHNjaGVtZSBhcyBzY2hlbWVQdUJ1fSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL1B1QnVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVB1UmQsIHNjaGVtZSBhcyBzY2hlbWVQdVJkfSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL1B1UmRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVJkUHUsIHNjaGVtZSBhcyBzY2hlbWVSZFB1fSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL1JkUHVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVlsR25CdSwgc2NoZW1lIGFzIHNjaGVtZVlsR25CdX0gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9ZbEduQnVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVlsR24sIHNjaGVtZSBhcyBzY2hlbWVZbEdufSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL1lsR25cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVlsT3JCciwgc2NoZW1lIGFzIHNjaGVtZVlsT3JCcn0gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9ZbE9yQnJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVlsT3JSZCwgc2NoZW1lIGFzIHNjaGVtZVlsT3JSZH0gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9ZbE9yUmRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUJsdWVzLCBzY2hlbWUgYXMgc2NoZW1lQmx1ZXN9IGZyb20gXCIuL3NlcXVlbnRpYWwtc2luZ2xlL0JsdWVzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVHcmVlbnMsIHNjaGVtZSBhcyBzY2hlbWVHcmVlbnN9IGZyb20gXCIuL3NlcXVlbnRpYWwtc2luZ2xlL0dyZWVuc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlR3JleXMsIHNjaGVtZSBhcyBzY2hlbWVHcmV5c30gZnJvbSBcIi4vc2VxdWVudGlhbC1zaW5nbGUvR3JleXNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVB1cnBsZXMsIHNjaGVtZSBhcyBzY2hlbWVQdXJwbGVzfSBmcm9tIFwiLi9zZXF1ZW50aWFsLXNpbmdsZS9QdXJwbGVzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVSZWRzLCBzY2hlbWUgYXMgc2NoZW1lUmVkc30gZnJvbSBcIi4vc2VxdWVudGlhbC1zaW5nbGUvUmVkc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlT3Jhbmdlcywgc2NoZW1lIGFzIHNjaGVtZU9yYW5nZXN9IGZyb20gXCIuL3NlcXVlbnRpYWwtc2luZ2xlL09yYW5nZXNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUN1YmVoZWxpeERlZmF1bHR9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvY3ViZWhlbGl4XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVSYWluYm93LCB3YXJtIGFzIGludGVycG9sYXRlV2FybSwgY29vbCBhcyBpbnRlcnBvbGF0ZUNvb2x9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvcmFpbmJvd1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlU2luZWJvd30gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9zaW5lYm93XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVWaXJpZGlzLCBtYWdtYSBhcyBpbnRlcnBvbGF0ZU1hZ21hLCBpbmZlcm5vIGFzIGludGVycG9sYXRlSW5mZXJubywgcGxhc21hIGFzIGludGVycG9sYXRlUGxhc21hfSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL3ZpcmlkaXNcIjtcbiIsImltcG9ydCB7aW50ZXJwb2xhdGVSZ2JCYXNpc30gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNjaGVtZSkge1xuICByZXR1cm4gaW50ZXJwb2xhdGVSZ2JCYXNpcyhzY2hlbWVbc2NoZW1lLmxlbmd0aCAtIDFdKTtcbn1cbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImU1ZjVmOTk5ZDhjOTJjYTI1ZlwiLFxuICBcImVkZjhmYmIyZTJlMjY2YzJhNDIzOGI0NVwiLFxuICBcImVkZjhmYmIyZTJlMjY2YzJhNDJjYTI1ZjAwNmQyY1wiLFxuICBcImVkZjhmYmNjZWNlNjk5ZDhjOTY2YzJhNDJjYTI1ZjAwNmQyY1wiLFxuICBcImVkZjhmYmNjZWNlNjk5ZDhjOTY2YzJhNDQxYWU3NjIzOGI0NTAwNTgyNFwiLFxuICBcImY3ZmNmZGU1ZjVmOWNjZWNlNjk5ZDhjOTY2YzJhNDQxYWU3NjIzOGI0NTAwNTgyNFwiLFxuICBcImY3ZmNmZGU1ZjVmOWNjZWNlNjk5ZDhjOTY2YzJhNDQxYWU3NjIzOGI0NTAwNmQyYzAwNDQxYlwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlMGVjZjQ5ZWJjZGE4ODU2YTdcIixcbiAgXCJlZGY4ZmJiM2NkZTM4Yzk2YzY4ODQxOWRcIixcbiAgXCJlZGY4ZmJiM2NkZTM4Yzk2YzY4ODU2YTc4MTBmN2NcIixcbiAgXCJlZGY4ZmJiZmQzZTY5ZWJjZGE4Yzk2YzY4ODU2YTc4MTBmN2NcIixcbiAgXCJlZGY4ZmJiZmQzZTY5ZWJjZGE4Yzk2YzY4YzZiYjE4ODQxOWQ2ZTAxNmJcIixcbiAgXCJmN2ZjZmRlMGVjZjRiZmQzZTY5ZWJjZGE4Yzk2YzY4YzZiYjE4ODQxOWQ2ZTAxNmJcIixcbiAgXCJmN2ZjZmRlMGVjZjRiZmQzZTY5ZWJjZGE4Yzk2YzY4YzZiYjE4ODQxOWQ4MTBmN2M0ZDAwNGJcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZTBmM2RiYThkZGI1NDNhMmNhXCIsXG4gIFwiZjBmOWU4YmFlNGJjN2JjY2M0MmI4Y2JlXCIsXG4gIFwiZjBmOWU4YmFlNGJjN2JjY2M0NDNhMmNhMDg2OGFjXCIsXG4gIFwiZjBmOWU4Y2NlYmM1YThkZGI1N2JjY2M0NDNhMmNhMDg2OGFjXCIsXG4gIFwiZjBmOWU4Y2NlYmM1YThkZGI1N2JjY2M0NGViM2QzMmI4Y2JlMDg1ODllXCIsXG4gIFwiZjdmY2YwZTBmM2RiY2NlYmM1YThkZGI1N2JjY2M0NGViM2QzMmI4Y2JlMDg1ODllXCIsXG4gIFwiZjdmY2YwZTBmM2RiY2NlYmM1YThkZGI1N2JjY2M0NGViM2QzMmI4Y2JlMDg2OGFjMDg0MDgxXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImZlZThjOGZkYmI4NGUzNGEzM1wiLFxuICBcImZlZjBkOWZkY2M4YWZjOGQ1OWQ3MzAxZlwiLFxuICBcImZlZjBkOWZkY2M4YWZjOGQ1OWUzNGEzM2IzMDAwMFwiLFxuICBcImZlZjBkOWZkZDQ5ZWZkYmI4NGZjOGQ1OWUzNGEzM2IzMDAwMFwiLFxuICBcImZlZjBkOWZkZDQ5ZWZkYmI4NGZjOGQ1OWVmNjU0OGQ3MzAxZjk5MDAwMFwiLFxuICBcImZmZjdlY2ZlZThjOGZkZDQ5ZWZkYmI4NGZjOGQ1OWVmNjU0OGQ3MzAxZjk5MDAwMFwiLFxuICBcImZmZjdlY2ZlZThjOGZkZDQ5ZWZkYmI4NGZjOGQ1OWVmNjU0OGQ3MzAxZmIzMDAwMDdmMDAwMFwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlY2U3ZjJhNmJkZGIyYjhjYmVcIixcbiAgXCJmMWVlZjZiZGM5ZTE3NGE5Y2YwNTcwYjBcIixcbiAgXCJmMWVlZjZiZGM5ZTE3NGE5Y2YyYjhjYmUwNDVhOGRcIixcbiAgXCJmMWVlZjZkMGQxZTZhNmJkZGI3NGE5Y2YyYjhjYmUwNDVhOGRcIixcbiAgXCJmMWVlZjZkMGQxZTZhNmJkZGI3NGE5Y2YzNjkwYzAwNTcwYjAwMzRlN2JcIixcbiAgXCJmZmY3ZmJlY2U3ZjJkMGQxZTZhNmJkZGI3NGE5Y2YzNjkwYzAwNTcwYjAwMzRlN2JcIixcbiAgXCJmZmY3ZmJlY2U3ZjJkMGQxZTZhNmJkZGI3NGE5Y2YzNjkwYzAwNTcwYjAwNDVhOGQwMjM4NThcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZWNlMmYwYTZiZGRiMWM5MDk5XCIsXG4gIFwiZjZlZmY3YmRjOWUxNjdhOWNmMDI4MThhXCIsXG4gIFwiZjZlZmY3YmRjOWUxNjdhOWNmMWM5MDk5MDE2YzU5XCIsXG4gIFwiZjZlZmY3ZDBkMWU2YTZiZGRiNjdhOWNmMWM5MDk5MDE2YzU5XCIsXG4gIFwiZjZlZmY3ZDBkMWU2YTZiZGRiNjdhOWNmMzY5MGMwMDI4MThhMDE2NDUwXCIsXG4gIFwiZmZmN2ZiZWNlMmYwZDBkMWU2YTZiZGRiNjdhOWNmMzY5MGMwMDI4MThhMDE2NDUwXCIsXG4gIFwiZmZmN2ZiZWNlMmYwZDBkMWU2YTZiZGRiNjdhOWNmMzY5MGMwMDI4MThhMDE2YzU5MDE0NjM2XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImU3ZTFlZmM5OTRjN2RkMWM3N1wiLFxuICBcImYxZWVmNmQ3YjVkOGRmNjViMGNlMTI1NlwiLFxuICBcImYxZWVmNmQ3YjVkOGRmNjViMGRkMWM3Nzk4MDA0M1wiLFxuICBcImYxZWVmNmQ0YjlkYWM5OTRjN2RmNjViMGRkMWM3Nzk4MDA0M1wiLFxuICBcImYxZWVmNmQ0YjlkYWM5OTRjN2RmNjViMGU3Mjk4YWNlMTI1NjkxMDAzZlwiLFxuICBcImY3ZjRmOWU3ZTFlZmQ0YjlkYWM5OTRjN2RmNjViMGU3Mjk4YWNlMTI1NjkxMDAzZlwiLFxuICBcImY3ZjRmOWU3ZTFlZmQ0YjlkYWM5OTRjN2RmNjViMGU3Mjk4YWNlMTI1Njk4MDA0MzY3MDAxZlwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJmZGUwZGRmYTlmYjVjNTFiOGFcIixcbiAgXCJmZWViZTJmYmI0YjlmNzY4YTFhZTAxN2VcIixcbiAgXCJmZWViZTJmYmI0YjlmNzY4YTFjNTFiOGE3YTAxNzdcIixcbiAgXCJmZWViZTJmY2M1YzBmYTlmYjVmNzY4YTFjNTFiOGE3YTAxNzdcIixcbiAgXCJmZWViZTJmY2M1YzBmYTlmYjVmNzY4YTFkZDM0OTdhZTAxN2U3YTAxNzdcIixcbiAgXCJmZmY3ZjNmZGUwZGRmY2M1YzBmYTlmYjVmNzY4YTFkZDM0OTdhZTAxN2U3YTAxNzdcIixcbiAgXCJmZmY3ZjNmZGUwZGRmY2M1YzBmYTlmYjVmNzY4YTFkZDM0OTdhZTAxN2U3YTAxNzc0OTAwNmFcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZjdmY2I5YWRkZDhlMzFhMzU0XCIsXG4gIFwiZmZmZmNjYzJlNjk5NzhjNjc5MjM4NDQzXCIsXG4gIFwiZmZmZmNjYzJlNjk5NzhjNjc5MzFhMzU0MDA2ODM3XCIsXG4gIFwiZmZmZmNjZDlmMGEzYWRkZDhlNzhjNjc5MzFhMzU0MDA2ODM3XCIsXG4gIFwiZmZmZmNjZDlmMGEzYWRkZDhlNzhjNjc5NDFhYjVkMjM4NDQzMDA1YTMyXCIsXG4gIFwiZmZmZmU1ZjdmY2I5ZDlmMGEzYWRkZDhlNzhjNjc5NDFhYjVkMjM4NDQzMDA1YTMyXCIsXG4gIFwiZmZmZmU1ZjdmY2I5ZDlmMGEzYWRkZDhlNzhjNjc5NDFhYjVkMjM4NDQzMDA2ODM3MDA0NTI5XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImVkZjhiMTdmY2RiYjJjN2ZiOFwiLFxuICBcImZmZmZjY2ExZGFiNDQxYjZjNDIyNWVhOFwiLFxuICBcImZmZmZjY2ExZGFiNDQxYjZjNDJjN2ZiODI1MzQ5NFwiLFxuICBcImZmZmZjY2M3ZTliNDdmY2RiYjQxYjZjNDJjN2ZiODI1MzQ5NFwiLFxuICBcImZmZmZjY2M3ZTliNDdmY2RiYjQxYjZjNDFkOTFjMDIyNWVhODBjMmM4NFwiLFxuICBcImZmZmZkOWVkZjhiMWM3ZTliNDdmY2RiYjQxYjZjNDFkOTFjMDIyNWVhODBjMmM4NFwiLFxuICBcImZmZmZkOWVkZjhiMWM3ZTliNDdmY2RiYjQxYjZjNDFkOTFjMDIyNWVhODI1MzQ5NDA4MWQ1OFwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJmZmY3YmNmZWM0NGZkOTVmMGVcIixcbiAgXCJmZmZmZDRmZWQ5OGVmZTk5MjljYzRjMDJcIixcbiAgXCJmZmZmZDRmZWQ5OGVmZTk5MjlkOTVmMGU5OTM0MDRcIixcbiAgXCJmZmZmZDRmZWUzOTFmZWM0NGZmZTk5MjlkOTVmMGU5OTM0MDRcIixcbiAgXCJmZmZmZDRmZWUzOTFmZWM0NGZmZTk5MjllYzcwMTRjYzRjMDI4YzJkMDRcIixcbiAgXCJmZmZmZTVmZmY3YmNmZWUzOTFmZWM0NGZmZTk5MjllYzcwMTRjYzRjMDI4YzJkMDRcIixcbiAgXCJmZmZmZTVmZmY3YmNmZWUzOTFmZWM0NGZmZTk5MjllYzcwMTRjYzRjMDI5OTM0MDQ2NjI1MDZcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmZlZGEwZmViMjRjZjAzYjIwXCIsXG4gIFwiZmZmZmIyZmVjYzVjZmQ4ZDNjZTMxYTFjXCIsXG4gIFwiZmZmZmIyZmVjYzVjZmQ4ZDNjZjAzYjIwYmQwMDI2XCIsXG4gIFwiZmZmZmIyZmVkOTc2ZmViMjRjZmQ4ZDNjZjAzYjIwYmQwMDI2XCIsXG4gIFwiZmZmZmIyZmVkOTc2ZmViMjRjZmQ4ZDNjZmM0ZTJhZTMxYTFjYjEwMDI2XCIsXG4gIFwiZmZmZmNjZmZlZGEwZmVkOTc2ZmViMjRjZmQ4ZDNjZmM0ZTJhZTMxYTFjYjEwMDI2XCIsXG4gIFwiZmZmZmNjZmZlZGEwZmVkOTc2ZmViMjRjZmQ4ZDNjZmM0ZTJhZTMxYTFjYmQwMDI2ODAwMDI2XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCB7Y3ViZWhlbGl4fSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCB7aW50ZXJwb2xhdGVDdWJlaGVsaXhMb25nfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgaW50ZXJwb2xhdGVDdWJlaGVsaXhMb25nKGN1YmVoZWxpeCgzMDAsIDAuNSwgMC4wKSwgY3ViZWhlbGl4KC0yNDAsIDAuNSwgMS4wKSk7XG4iLCJpbXBvcnQge2N1YmVoZWxpeH0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQge2ludGVycG9sYXRlQ3ViZWhlbGl4TG9uZ30gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5cbmV4cG9ydCB2YXIgd2FybSA9IGludGVycG9sYXRlQ3ViZWhlbGl4TG9uZyhjdWJlaGVsaXgoLTEwMCwgMC43NSwgMC4zNSksIGN1YmVoZWxpeCg4MCwgMS41MCwgMC44KSk7XG5cbmV4cG9ydCB2YXIgY29vbCA9IGludGVycG9sYXRlQ3ViZWhlbGl4TG9uZyhjdWJlaGVsaXgoMjYwLCAwLjc1LCAwLjM1KSwgY3ViZWhlbGl4KDgwLCAxLjUwLCAwLjgpKTtcblxudmFyIGMgPSBjdWJlaGVsaXgoKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odCkge1xuICBpZiAodCA8IDAgfHwgdCA+IDEpIHQgLT0gTWF0aC5mbG9vcih0KTtcbiAgdmFyIHRzID0gTWF0aC5hYnModCAtIDAuNSk7XG4gIGMuaCA9IDM2MCAqIHQgLSAxMDA7XG4gIGMucyA9IDEuNSAtIDEuNSAqIHRzO1xuICBjLmwgPSAwLjggLSAwLjkgKiB0cztcbiAgcmV0dXJuIGMgKyBcIlwiO1xufVxuIiwiaW1wb3J0IHtyZ2J9IGZyb20gXCJkMy1jb2xvclwiO1xuXG52YXIgYyA9IHJnYigpLFxuICAgIHBpXzFfMyA9IE1hdGguUEkgLyAzLFxuICAgIHBpXzJfMyA9IE1hdGguUEkgKiAyIC8gMztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odCkge1xuICB2YXIgeDtcbiAgdCA9ICgwLjUgLSB0KSAqIE1hdGguUEk7XG4gIGMuciA9IDI1NSAqICh4ID0gTWF0aC5zaW4odCkpICogeDtcbiAgYy5nID0gMjU1ICogKHggPSBNYXRoLnNpbih0ICsgcGlfMV8zKSkgKiB4O1xuICBjLmIgPSAyNTUgKiAoeCA9IE1hdGguc2luKHQgKyBwaV8yXzMpKSAqIHg7XG4gIHJldHVybiBjICsgXCJcIjtcbn1cbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuXG5mdW5jdGlvbiByYW1wKHJhbmdlKSB7XG4gIHZhciBuID0gcmFuZ2UubGVuZ3RoO1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHJldHVybiByYW5nZVtNYXRoLm1heCgwLCBNYXRoLm1pbihuIC0gMSwgTWF0aC5mbG9vcih0ICogbikpKV07XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoY29sb3JzKFwiNDQwMTU0NDQwMjU2NDUwNDU3NDUwNTU5NDYwNzVhNDYwODVjNDYwYTVkNDYwYjVlNDcwZDYwNDcwZTYxNDcxMDYzNDcxMTY0NDcxMzY1NDgxNDY3NDgxNjY4NDgxNzY5NDgxODZhNDgxYTZjNDgxYjZkNDgxYzZlNDgxZDZmNDgxZjcwNDgyMDcxNDgyMTczNDgyMzc0NDgyNDc1NDgyNTc2NDgyNjc3NDgyODc4NDgyOTc5NDcyYTdhNDcyYzdhNDcyZDdiNDcyZTdjNDcyZjdkNDYzMDdlNDYzMjdlNDYzMzdmNDYzNDgwNDUzNTgxNDUzNzgxNDUzODgyNDQzOTgzNDQzYTgzNDQzYjg0NDMzZDg0NDMzZTg1NDIzZjg1NDI0MDg2NDI0MTg2NDE0Mjg3NDE0NDg3NDA0NTg4NDA0Njg4M2Y0Nzg4M2Y0ODg5M2U0OTg5M2U0YTg5M2U0YzhhM2Q0ZDhhM2Q0ZThhM2M0ZjhhM2M1MDhiM2I1MThiM2I1MjhiM2E1MzhiM2E1NDhjMzk1NThjMzk1NjhjMzg1ODhjMzg1OThjMzc1YThjMzc1YjhkMzY1YzhkMzY1ZDhkMzU1ZThkMzU1ZjhkMzQ2MDhkMzQ2MThkMzM2MjhkMzM2MzhkMzI2NDhlMzI2NThlMzE2NjhlMzE2NzhlMzE2ODhlMzA2OThlMzA2YThlMmY2YjhlMmY2YzhlMmU2ZDhlMmU2ZThlMmU2ZjhlMmQ3MDhlMmQ3MThlMmM3MThlMmM3MjhlMmM3MzhlMmI3NDhlMmI3NThlMmE3NjhlMmE3NzhlMmE3ODhlMjk3OThlMjk3YThlMjk3YjhlMjg3YzhlMjg3ZDhlMjc3ZThlMjc3ZjhlMjc4MDhlMjY4MThlMjY4MjhlMjY4MjhlMjU4MzhlMjU4NDhlMjU4NThlMjQ4NjhlMjQ4NzhlMjM4ODhlMjM4OThlMjM4YThkMjI4YjhkMjI4YzhkMjI4ZDhkMjE4ZThkMjE4ZjhkMjE5MDhkMjE5MThjMjA5MjhjMjA5MjhjMjA5MzhjMWY5NDhjMWY5NThiMWY5NjhiMWY5NzhiMWY5ODhiMWY5OThhMWY5YThhMWU5YjhhMWU5Yzg5MWU5ZDg5MWY5ZTg5MWY5Zjg4MWZhMDg4MWZhMTg4MWZhMTg3MWZhMjg3MjBhMzg2MjBhNDg2MjFhNTg1MjFhNjg1MjJhNzg1MjJhODg0MjNhOTgzMjRhYTgzMjVhYjgyMjVhYzgyMjZhZDgxMjdhZDgxMjhhZTgwMjlhZjdmMmFiMDdmMmNiMTdlMmRiMjdkMmViMzdjMmZiNDdjMzFiNTdiMzJiNjdhMzRiNjc5MzViNzc5MzdiODc4MzhiOTc3M2FiYTc2M2JiYjc1M2RiYzc0M2ZiYzczNDBiZDcyNDJiZTcxNDRiZjcwNDZjMDZmNDhjMTZlNGFjMTZkNGNjMjZjNGVjMzZiNTBjNDZhNTJjNTY5NTRjNTY4NTZjNjY3NThjNzY1NWFjODY0NWNjODYzNWVjOTYyNjBjYTYwNjNjYjVmNjVjYjVlNjdjYzVjNjljZDViNmNjZDVhNmVjZTU4NzBjZjU3NzNkMDU2NzVkMDU0NzdkMTUzN2FkMTUxN2NkMjUwN2ZkMzRlODFkMzRkODRkNDRiODZkNTQ5ODlkNTQ4OGJkNjQ2OGVkNjQ1OTBkNzQzOTNkNzQxOTVkODQwOThkODNlOWJkOTNjOWRkOTNiYTBkYTM5YTJkYTM3YTVkYjM2YThkYjM0YWFkYzMyYWRkYzMwYjBkZDJmYjJkZDJkYjVkZTJiYjhkZTI5YmFkZTI4YmRkZjI2YzBkZjI1YzJkZjIzYzVlMDIxYzhlMDIwY2FlMTFmY2RlMTFkZDBlMTFjZDJlMjFiZDVlMjFhZDhlMjE5ZGFlMzE5ZGRlMzE4ZGZlMzE4ZTJlNDE4ZTVlNDE5ZTdlNDE5ZWFlNTFhZWNlNTFiZWZlNTFjZjFlNTFkZjRlNjFlZjZlNjIwZjhlNjIxZmJlNzIzZmRlNzI1XCIpKTtcblxuZXhwb3J0IHZhciBtYWdtYSA9IHJhbXAoY29sb3JzKFwiMDAwMDA0MDEwMDA1MDEwMTA2MDEwMTA4MDIwMTA5MDIwMjBiMDIwMjBkMDMwMzBmMDMwMzEyMDQwNDE0MDUwNDE2MDYwNTE4MDYwNTFhMDcwNjFjMDgwNzFlMDkwNzIwMGEwODIyMGIwOTI0MGMwOTI2MGQwYTI5MGUwYjJiMTAwYjJkMTEwYzJmMTIwZDMxMTMwZDM0MTQwZTM2MTUwZTM4MTYwZjNiMTgwZjNkMTkxMDNmMWExMDQyMWMxMDQ0MWQxMTQ3MWUxMTQ5MjAxMTRiMjExMTRlMjIxMTUwMjQxMjUzMjUxMjU1MjcxMjU4MjkxMTVhMmExMTVjMmMxMTVmMmQxMTYxMmYxMTYzMzExMTY1MzMxMDY3MzQxMDY5MzYxMDZiMzgxMDZjMzkwZjZlM2IwZjcwM2QwZjcxM2YwZjcyNDAwZjc0NDIwZjc1NDQwZjc2NDUxMDc3NDcxMDc4NDkxMDc4NGExMDc5NGMxMTdhNGUxMTdiNGYxMjdiNTExMjdjNTIxMzdjNTQxMzdkNTYxNDdkNTcxNTdlNTkxNTdlNWExNjdlNWMxNjdmNWQxNzdmNWYxODdmNjAxODgwNjIxOTgwNjQxYTgwNjUxYTgwNjcxYjgwNjgxYzgxNmExYzgxNmIxZDgxNmQxZDgxNmUxZTgxNzAxZjgxNzIxZjgxNzMyMDgxNzUyMTgxNzYyMTgxNzgyMjgxNzkyMjgyN2IyMzgyN2MyMzgyN2UyNDgyODAyNTgyODEyNTgxODMyNjgxODQyNjgxODYyNzgxODgyNzgxODkyODgxOGIyOTgxOGMyOTgxOGUyYTgxOTAyYTgxOTEyYjgxOTMyYjgwOTQyYzgwOTYyYzgwOTgyZDgwOTkyZDgwOWIyZTdmOWMyZTdmOWUyZjdmYTAyZjdmYTEzMDdlYTMzMDdlYTUzMTdlYTYzMTdkYTgzMjdkYWEzMzdkYWIzMzdjYWQzNDdjYWUzNDdiYjAzNTdiYjIzNTdiYjMzNjdhYjUzNjdhYjczNzc5YjgzNzc5YmEzODc4YmMzOTc4YmQzOTc3YmYzYTc3YzAzYTc2YzIzYjc1YzQzYzc1YzUzYzc0YzczZDczYzgzZTczY2EzZTcyY2MzZjcxY2Q0MDcxY2Y0MDcwZDA0MTZmZDI0MjZmZDM0MzZlZDU0NDZkZDY0NTZjZDg0NTZjZDk0NjZiZGI0NzZhZGM0ODY5ZGU0OTY4ZGY0YTY4ZTA0YzY3ZTI0ZDY2ZTM0ZTY1ZTQ0ZjY0ZTU1MDY0ZTc1MjYzZTg1MzYyZTk1NDYyZWE1NjYxZWI1NzYwZWM1ODYwZWQ1YTVmZWU1YjVlZWY1ZDVlZjA1ZjVlZjE2MDVkZjI2MjVkZjI2NDVjZjM2NTVjZjQ2NzVjZjQ2OTVjZjU2YjVjZjY2YzVjZjY2ZTVjZjc3MDVjZjc3MjVjZjg3NDVjZjg3NjVjZjk3ODVkZjk3OTVkZjk3YjVkZmE3ZDVlZmE3ZjVlZmE4MTVmZmI4MzVmZmI4NTYwZmI4NzYxZmM4OTYxZmM4YTYyZmM4YzYzZmM4ZTY0ZmM5MDY1ZmQ5MjY2ZmQ5NDY3ZmQ5NjY4ZmQ5ODY5ZmQ5YTZhZmQ5YjZiZmU5ZDZjZmU5ZjZkZmVhMTZlZmVhMzZmZmVhNTcxZmVhNzcyZmVhOTczZmVhYTc0ZmVhYzc2ZmVhZTc3ZmViMDc4ZmViMjdhZmViNDdiZmViNjdjZmViNzdlZmViOTdmZmViYjgxZmViZDgyZmViZjg0ZmVjMTg1ZmVjMjg3ZmVjNDg4ZmVjNjhhZmVjODhjZmVjYThkZmVjYzhmZmVjZDkwZmVjZjkyZmVkMTk0ZmVkMzk1ZmVkNTk3ZmVkNzk5ZmVkODlhZmRkYTljZmRkYzllZmRkZWEwZmRlMGExZmRlMmEzZmRlM2E1ZmRlNWE3ZmRlN2E5ZmRlOWFhZmRlYmFjZmNlY2FlZmNlZWIwZmNmMGIyZmNmMmI0ZmNmNGI2ZmNmNmI4ZmNmN2I5ZmNmOWJiZmNmYmJkZmNmZGJmXCIpKTtcblxuZXhwb3J0IHZhciBpbmZlcm5vID0gcmFtcChjb2xvcnMoXCIwMDAwMDQwMTAwMDUwMTAxMDYwMTAxMDgwMjAxMGEwMjAyMGMwMjAyMGUwMzAyMTAwNDAzMTIwNDAzMTQwNTA0MTcwNjA0MTkwNzA1MWIwODA1MWQwOTA2MWYwYTA3MjIwYjA3MjQwYzA4MjYwZDA4MjkwZTA5MmIxMDA5MmQxMTBhMzAxMjBhMzIxNDBiMzQxNTBiMzcxNjBiMzkxODBjM2MxOTBjM2UxYjBjNDExYzBjNDMxZTBjNDUxZjBjNDgyMTBjNGEyMzBjNGMyNDBjNGYyNjBjNTEyODBiNTMyOTBiNTUyYjBiNTcyZDBiNTkyZjBhNWIzMTBhNWMzMjBhNWUzNDBhNWYzNjA5NjEzODA5NjIzOTA5NjMzYjA5NjQzZDA5NjUzZTA5NjY0MDBhNjc0MjBhNjg0NDBhNjg0NTBhNjk0NzBiNmE0OTBiNmE0YTBjNmI0YzBjNmI0ZDBkNmM0ZjBkNmM1MTBlNmM1MjBlNmQ1NDBmNmQ1NTBmNmQ1NzEwNmU1OTEwNmU1YTExNmU1YzEyNmU1ZDEyNmU1ZjEzNmU2MTEzNmU2MjE0NmU2NDE1NmU2NTE1NmU2NzE2NmU2OTE2NmU2YTE3NmU2YzE4NmU2ZDE4NmU2ZjE5NmU3MTE5NmU3MjFhNmU3NDFhNmU3NTFiNmU3NzFjNmQ3ODFjNmQ3YTFkNmQ3YzFkNmQ3ZDFlNmQ3ZjFlNmM4MDFmNmM4MjIwNmM4NDIwNmI4NTIxNmI4NzIxNmI4ODIyNmE4YTIyNmE4YzIzNjk4ZDIzNjk4ZjI0Njk5MDI1Njg5MjI1Njg5MzI2Njc5NTI2Njc5NzI3NjY5ODI3NjY5YTI4NjU5YjI5NjQ5ZDI5NjQ5ZjJhNjNhMDJhNjNhMjJiNjJhMzJjNjFhNTJjNjBhNjJkNjBhODJlNWZhOTJlNWVhYjJmNWVhZDMwNWRhZTMwNWNiMDMxNWJiMTMyNWFiMzMyNWFiNDMzNTliNjM0NThiNzM1NTdiOTM1NTZiYTM2NTViYzM3NTRiZDM4NTNiZjM5NTJjMDNhNTFjMTNhNTBjMzNiNGZjNDNjNGVjNjNkNGRjNzNlNGNjODNmNGJjYTQwNGFjYjQxNDljYzQyNDhjZTQzNDdjZjQ0NDZkMDQ1NDVkMjQ2NDRkMzQ3NDNkNDQ4NDJkNTRhNDFkNzRiM2ZkODRjM2VkOTRkM2RkYTRlM2NkYjUwM2JkZDUxM2FkZTUyMzhkZjUzMzdlMDU1MzZlMTU2MzVlMjU3MzRlMzU5MzNlNDVhMzFlNTVjMzBlNjVkMmZlNzVlMmVlODYwMmRlOTYxMmJlYTYzMmFlYjY0MjllYjY2MjhlYzY3MjZlZDY5MjVlZTZhMjRlZjZjMjNlZjZlMjFmMDZmMjBmMTcxMWZmMTczMWRmMjc0MWNmMzc2MWJmMzc4MTlmNDc5MThmNTdiMTdmNTdkMTVmNjdlMTRmNjgwMTNmNzgyMTJmNzg0MTBmODg1MGZmODg3MGVmODg5MGNmOThiMGJmOThjMGFmOThlMDlmYTkwMDhmYTkyMDdmYTk0MDdmYjk2MDZmYjk3MDZmYjk5MDZmYjliMDZmYjlkMDdmYzlmMDdmY2ExMDhmY2EzMDlmY2E1MGFmY2E2MGNmY2E4MGRmY2FhMGZmY2FjMTFmY2FlMTJmY2IwMTRmY2IyMTZmY2I0MThmYmI2MWFmYmI4MWRmYmJhMWZmYmJjMjFmYmJlMjNmYWMwMjZmYWMyMjhmYWM0MmFmYWM2MmRmOWM3MmZmOWM5MzJmOWNiMzVmOGNkMzdmOGNmM2FmN2QxM2RmN2QzNDBmNmQ1NDNmNmQ3NDZmNWQ5NDlmNWRiNGNmNGRkNGZmNGRmNTNmNGUxNTZmM2UzNWFmM2U1NWRmMmU2NjFmMmU4NjVmMmVhNjlmMWVjNmRmMWVkNzFmMWVmNzVmMWYxNzlmMmYyN2RmMmY0ODJmM2Y1ODZmM2Y2OGFmNGY4OGVmNWY5OTJmNmZhOTZmOGZiOWFmOWZjOWRmYWZkYTFmY2ZmYTRcIikpO1xuXG5leHBvcnQgdmFyIHBsYXNtYSA9IHJhbXAoY29sb3JzKFwiMGQwODg3MTAwNzg4MTMwNzg5MTYwNzhhMTkwNjhjMWIwNjhkMWQwNjhlMjAwNjhmMjIwNjkwMjQwNjkxMjYwNTkxMjgwNTkyMmEwNTkzMmMwNTk0MmUwNTk1MmYwNTk2MzEwNTk3MzMwNTk3MzUwNDk4MzcwNDk5MzgwNDlhM2EwNDlhM2MwNDliM2UwNDljM2YwNDljNDEwNDlkNDMwMzllNDQwMzllNDYwMzlmNDgwMzlmNDkwM2EwNGIwM2ExNGMwMmExNGUwMmEyNTAwMmEyNTEwMmEzNTMwMmEzNTUwMmE0NTYwMWE0NTgwMWE0NTkwMWE1NWIwMWE1NWMwMWE2NWUwMWE2NjAwMWE2NjEwMGE3NjMwMGE3NjQwMGE3NjYwMGE3NjcwMGE4NjkwMGE4NmEwMGE4NmMwMGE4NmUwMGE4NmYwMGE4NzEwMGE4NzIwMWE4NzQwMWE4NzUwMWE4NzcwMWE4NzgwMWE4N2EwMmE4N2IwMmE4N2QwM2E4N2UwM2E4ODAwNGE4ODEwNGE3ODMwNWE3ODQwNWE3ODYwNmE2ODcwN2E2ODgwOGE2OGEwOWE1OGIwYWE1OGQwYmE1OGUwY2E0OGYwZGE0OTEwZWEzOTIwZmEzOTQxMGEyOTUxMWExOTYxM2ExOTgxNGEwOTkxNTlmOWExNjlmOWMxNzllOWQxODlkOWUxOTlkYTAxYTljYTExYjliYTIxZDlhYTMxZTlhYTUxZjk5YTYyMDk4YTcyMTk3YTgyMjk2YWEyMzk1YWIyNDk0YWMyNjk0YWQyNzkzYWUyODkyYjAyOTkxYjEyYTkwYjIyYjhmYjMyYzhlYjQyZThkYjUyZjhjYjYzMDhiYjczMThhYjgzMjg5YmEzMzg4YmIzNDg4YmMzNTg3YmQzNzg2YmUzODg1YmYzOTg0YzAzYTgzYzEzYjgyYzIzYzgxYzMzZDgwYzQzZTdmYzU0MDdlYzY0MTdkYzc0MjdjYzg0MzdiYzk0NDdhY2E0NTdhY2I0Njc5Y2M0Nzc4Y2M0OTc3Y2Q0YTc2Y2U0Yjc1Y2Y0Yzc0ZDA0ZDczZDE0ZTcyZDI0ZjcxZDM1MTcxZDQ1MjcwZDU1MzZmZDU1NDZlZDY1NTZkZDc1NjZjZDg1NzZiZDk1ODZhZGE1YTZhZGE1YjY5ZGI1YzY4ZGM1ZDY3ZGQ1ZTY2ZGU1ZjY1ZGU2MTY0ZGY2MjYzZTA2MzYzZTE2NDYyZTI2NTYxZTI2NjYwZTM2ODVmZTQ2OTVlZTU2YTVkZTU2YjVkZTY2YzVjZTc2ZTViZTc2ZjVhZTg3MDU5ZTk3MTU4ZTk3MjU3ZWE3NDU3ZWI3NTU2ZWI3NjU1ZWM3NzU0ZWQ3OTUzZWQ3YTUyZWU3YjUxZWY3YzUxZWY3ZTUwZjA3ZjRmZjA4MDRlZjE4MTRkZjE4MzRjZjI4NDRiZjM4NTRiZjM4NzRhZjQ4ODQ5ZjQ4OTQ4ZjU4YjQ3ZjU4YzQ2ZjY4ZDQ1ZjY4ZjQ0Zjc5MDQ0Zjc5MTQzZjc5MzQyZjg5NDQxZjg5NTQwZjk5NzNmZjk5ODNlZjk5YTNlZmE5YjNkZmE5YzNjZmE5ZTNiZmI5ZjNhZmJhMTM5ZmJhMjM4ZmNhMzM4ZmNhNTM3ZmNhNjM2ZmNhODM1ZmNhOTM0ZmRhYjMzZmRhYzMzZmRhZTMyZmRhZjMxZmRiMTMwZmRiMjJmZmRiNDJmZmRiNTJlZmViNzJkZmViODJjZmViYTJjZmViYjJiZmViZDJhZmViZTJhZmVjMDI5ZmRjMjI5ZmRjMzI4ZmRjNTI3ZmRjNjI3ZmRjODI3ZmRjYTI2ZmRjYjI2ZmNjZDI1ZmNjZTI1ZmNkMDI1ZmNkMjI1ZmJkMzI0ZmJkNTI0ZmJkNzI0ZmFkODI0ZmFkYTI0ZjlkYzI0ZjlkZDI1ZjhkZjI1ZjhlMTI1ZjdlMjI1ZjdlNDI1ZjZlNjI2ZjZlODI2ZjVlOTI2ZjVlYjI3ZjRlZDI3ZjNlZTI3ZjNmMDI3ZjJmMjI3ZjFmNDI2ZjFmNTI1ZjBmNzI0ZjBmOTIxXCIpKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImRlZWJmNzllY2FlMTMxODJiZFwiLFxuICBcImVmZjNmZmJkZDdlNzZiYWVkNjIxNzFiNVwiLFxuICBcImVmZjNmZmJkZDdlNzZiYWVkNjMxODJiZDA4NTE5Y1wiLFxuICBcImVmZjNmZmM2ZGJlZjllY2FlMTZiYWVkNjMxODJiZDA4NTE5Y1wiLFxuICBcImVmZjNmZmM2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NDU5NFwiLFxuICBcImY3ZmJmZmRlZWJmN2M2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NDU5NFwiLFxuICBcImY3ZmJmZmRlZWJmN2M2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NTE5YzA4MzA2YlwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlNWY1ZTBhMWQ5OWIzMWEzNTRcIixcbiAgXCJlZGY4ZTliYWU0YjM3NGM0NzYyMzhiNDVcIixcbiAgXCJlZGY4ZTliYWU0YjM3NGM0NzYzMWEzNTQwMDZkMmNcIixcbiAgXCJlZGY4ZTljN2U5YzBhMWQ5OWI3NGM0NzYzMWEzNTQwMDZkMmNcIixcbiAgXCJlZGY4ZTljN2U5YzBhMWQ5OWI3NGM0NzY0MWFiNWQyMzhiNDUwMDVhMzJcIixcbiAgXCJmN2ZjZjVlNWY1ZTBjN2U5YzBhMWQ5OWI3NGM0NzY0MWFiNWQyMzhiNDUwMDVhMzJcIixcbiAgXCJmN2ZjZjVlNWY1ZTBjN2U5YzBhMWQ5OWI3NGM0NzY0MWFiNWQyMzhiNDUwMDZkMmMwMDQ0MWJcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZjBmMGYwYmRiZGJkNjM2MzYzXCIsXG4gIFwiZjdmN2Y3Y2NjY2NjOTY5Njk2NTI1MjUyXCIsXG4gIFwiZjdmN2Y3Y2NjY2NjOTY5Njk2NjM2MzYzMjUyNTI1XCIsXG4gIFwiZjdmN2Y3ZDlkOWQ5YmRiZGJkOTY5Njk2NjM2MzYzMjUyNTI1XCIsXG4gIFwiZjdmN2Y3ZDlkOWQ5YmRiZGJkOTY5Njk2NzM3MzczNTI1MjUyMjUyNTI1XCIsXG4gIFwiZmZmZmZmZjBmMGYwZDlkOWQ5YmRiZGJkOTY5Njk2NzM3MzczNTI1MjUyMjUyNTI1XCIsXG4gIFwiZmZmZmZmZjBmMGYwZDlkOWQ5YmRiZGJkOTY5Njk2NzM3MzczNTI1MjUyMjUyNTI1MDAwMDAwXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9yc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXBcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImZlZTZjZWZkYWU2YmU2NTUwZFwiLFxuICBcImZlZWRkZWZkYmU4NWZkOGQzY2Q5NDcwMVwiLFxuICBcImZlZWRkZWZkYmU4NWZkOGQzY2U2NTUwZGE2MzYwM1wiLFxuICBcImZlZWRkZWZkZDBhMmZkYWU2YmZkOGQzY2U2NTUwZGE2MzYwM1wiLFxuICBcImZlZWRkZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMThjMmQwNFwiLFxuICBcImZmZjVlYmZlZTZjZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMThjMmQwNFwiLFxuICBcImZmZjVlYmZlZTZjZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMWE2MzYwMzdmMjcwNFwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlZmVkZjViY2JkZGM3NTZiYjFcIixcbiAgXCJmMmYwZjdjYmM5ZTI5ZTlhYzg2YTUxYTNcIixcbiAgXCJmMmYwZjdjYmM5ZTI5ZTlhYzg3NTZiYjE1NDI3OGZcIixcbiAgXCJmMmYwZjdkYWRhZWJiY2JkZGM5ZTlhYzg3NTZiYjE1NDI3OGZcIixcbiAgXCJmMmYwZjdkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM0YTE0ODZcIixcbiAgXCJmY2ZiZmRlZmVkZjVkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM0YTE0ODZcIixcbiAgXCJmY2ZiZmRlZmVkZjVkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM1NDI3OGYzZjAwN2RcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcFwiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmVlMGQyZmM5MjcyZGUyZDI2XCIsXG4gIFwiZmVlNWQ5ZmNhZTkxZmI2YTRhY2IxODFkXCIsXG4gIFwiZmVlNWQ5ZmNhZTkxZmI2YTRhZGUyZDI2YTUwZjE1XCIsXG4gIFwiZmVlNWQ5ZmNiYmExZmM5MjcyZmI2YTRhZGUyZDI2YTUwZjE1XCIsXG4gIFwiZmVlNWQ5ZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkOTkwMDBkXCIsXG4gIFwiZmZmNWYwZmVlMGQyZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkOTkwMDBkXCIsXG4gIFwiZmZmNWYwZmVlMGQyZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkYTUwZjE1NjcwMDBkXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsInZhciBhcnJheSA9IEFycmF5LnByb3RvdHlwZTtcblxuZXhwb3J0IHZhciBtYXAgPSBhcnJheS5tYXA7XG5leHBvcnQgdmFyIHNsaWNlID0gYXJyYXkuc2xpY2U7XG4iLCJpbXBvcnQge3JhbmdlIGFzIHNlcXVlbmNlfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7aW5pdFJhbmdlfSBmcm9tIFwiLi9pbml0XCI7XG5pbXBvcnQgb3JkaW5hbCBmcm9tIFwiLi9vcmRpbmFsXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJhbmQoKSB7XG4gIHZhciBzY2FsZSA9IG9yZGluYWwoKS51bmtub3duKHVuZGVmaW5lZCksXG4gICAgICBkb21haW4gPSBzY2FsZS5kb21haW4sXG4gICAgICBvcmRpbmFsUmFuZ2UgPSBzY2FsZS5yYW5nZSxcbiAgICAgIHJhbmdlID0gWzAsIDFdLFxuICAgICAgc3RlcCxcbiAgICAgIGJhbmR3aWR0aCxcbiAgICAgIHJvdW5kID0gZmFsc2UsXG4gICAgICBwYWRkaW5nSW5uZXIgPSAwLFxuICAgICAgcGFkZGluZ091dGVyID0gMCxcbiAgICAgIGFsaWduID0gMC41O1xuXG4gIGRlbGV0ZSBzY2FsZS51bmtub3duO1xuXG4gIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgdmFyIG4gPSBkb21haW4oKS5sZW5ndGgsXG4gICAgICAgIHJldmVyc2UgPSByYW5nZVsxXSA8IHJhbmdlWzBdLFxuICAgICAgICBzdGFydCA9IHJhbmdlW3JldmVyc2UgLSAwXSxcbiAgICAgICAgc3RvcCA9IHJhbmdlWzEgLSByZXZlcnNlXTtcbiAgICBzdGVwID0gKHN0b3AgLSBzdGFydCkgLyBNYXRoLm1heCgxLCBuIC0gcGFkZGluZ0lubmVyICsgcGFkZGluZ091dGVyICogMik7XG4gICAgaWYgKHJvdW5kKSBzdGVwID0gTWF0aC5mbG9vcihzdGVwKTtcbiAgICBzdGFydCArPSAoc3RvcCAtIHN0YXJ0IC0gc3RlcCAqIChuIC0gcGFkZGluZ0lubmVyKSkgKiBhbGlnbjtcbiAgICBiYW5kd2lkdGggPSBzdGVwICogKDEgLSBwYWRkaW5nSW5uZXIpO1xuICAgIGlmIChyb3VuZCkgc3RhcnQgPSBNYXRoLnJvdW5kKHN0YXJ0KSwgYmFuZHdpZHRoID0gTWF0aC5yb3VuZChiYW5kd2lkdGgpO1xuICAgIHZhciB2YWx1ZXMgPSBzZXF1ZW5jZShuKS5tYXAoZnVuY3Rpb24oaSkgeyByZXR1cm4gc3RhcnQgKyBzdGVwICogaTsgfSk7XG4gICAgcmV0dXJuIG9yZGluYWxSYW5nZShyZXZlcnNlID8gdmFsdWVzLnJldmVyc2UoKSA6IHZhbHVlcyk7XG4gIH1cblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZG9tYWluKF8pLCByZXNjYWxlKCkpIDogZG9tYWluKCk7XG4gIH07XG5cbiAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocmFuZ2UgPSBbK19bMF0sICtfWzFdXSwgcmVzY2FsZSgpKSA6IHJhbmdlLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUucmFuZ2VSb3VuZCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gcmFuZ2UgPSBbK19bMF0sICtfWzFdXSwgcm91bmQgPSB0cnVlLCByZXNjYWxlKCk7XG4gIH07XG5cbiAgc2NhbGUuYmFuZHdpZHRoID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGJhbmR3aWR0aDtcbiAgfTtcblxuICBzY2FsZS5zdGVwID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHN0ZXA7XG4gIH07XG5cbiAgc2NhbGUucm91bmQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocm91bmQgPSAhIV8sIHJlc2NhbGUoKSkgOiByb3VuZDtcbiAgfTtcblxuICBzY2FsZS5wYWRkaW5nID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdJbm5lciA9IE1hdGgubWluKDEsIHBhZGRpbmdPdXRlciA9ICtfKSwgcmVzY2FsZSgpKSA6IHBhZGRpbmdJbm5lcjtcbiAgfTtcblxuICBzY2FsZS5wYWRkaW5nSW5uZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkZGluZ0lubmVyID0gTWF0aC5taW4oMSwgXyksIHJlc2NhbGUoKSkgOiBwYWRkaW5nSW5uZXI7XG4gIH07XG5cbiAgc2NhbGUucGFkZGluZ091dGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdPdXRlciA9ICtfLCByZXNjYWxlKCkpIDogcGFkZGluZ091dGVyO1xuICB9O1xuXG4gIHNjYWxlLmFsaWduID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGFsaWduID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgXykpLCByZXNjYWxlKCkpIDogYWxpZ247XG4gIH07XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBiYW5kKGRvbWFpbigpLCByYW5nZSlcbiAgICAgICAgLnJvdW5kKHJvdW5kKVxuICAgICAgICAucGFkZGluZ0lubmVyKHBhZGRpbmdJbm5lcilcbiAgICAgICAgLnBhZGRpbmdPdXRlcihwYWRkaW5nT3V0ZXIpXG4gICAgICAgIC5hbGlnbihhbGlnbik7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShyZXNjYWxlKCksIGFyZ3VtZW50cyk7XG59XG5cbmZ1bmN0aW9uIHBvaW50aXNoKHNjYWxlKSB7XG4gIHZhciBjb3B5ID0gc2NhbGUuY29weTtcblxuICBzY2FsZS5wYWRkaW5nID0gc2NhbGUucGFkZGluZ091dGVyO1xuICBkZWxldGUgc2NhbGUucGFkZGluZ0lubmVyO1xuICBkZWxldGUgc2NhbGUucGFkZGluZ091dGVyO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gcG9pbnRpc2goY29weSgpKTtcbiAgfTtcblxuICByZXR1cm4gc2NhbGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwb2ludCgpIHtcbiAgcmV0dXJuIHBvaW50aXNoKGJhbmQuYXBwbHkobnVsbCwgYXJndW1lbnRzKS5wYWRkaW5nSW5uZXIoMSkpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJpbXBvcnQge2Jpc2VjdH0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge2ludGVycG9sYXRlIGFzIGludGVycG9sYXRlVmFsdWUsIGludGVycG9sYXRlTnVtYmVyLCBpbnRlcnBvbGF0ZVJvdW5kfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcbmltcG9ydCB7bWFwLCBzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IG51bWJlciBmcm9tIFwiLi9udW1iZXJcIjtcblxudmFyIHVuaXQgPSBbMCwgMV07XG5cbmV4cG9ydCBmdW5jdGlvbiBpZGVudGl0eSh4KSB7XG4gIHJldHVybiB4O1xufVxuXG5mdW5jdGlvbiBub3JtYWxpemUoYSwgYikge1xuICByZXR1cm4gKGIgLT0gKGEgPSArYSkpXG4gICAgICA/IGZ1bmN0aW9uKHgpIHsgcmV0dXJuICh4IC0gYSkgLyBiOyB9XG4gICAgICA6IGNvbnN0YW50KGlzTmFOKGIpID8gTmFOIDogMC41KTtcbn1cblxuZnVuY3Rpb24gY2xhbXBlcihkb21haW4pIHtcbiAgdmFyIGEgPSBkb21haW5bMF0sIGIgPSBkb21haW5bZG9tYWluLmxlbmd0aCAtIDFdLCB0O1xuICBpZiAoYSA+IGIpIHQgPSBhLCBhID0gYiwgYiA9IHQ7XG4gIHJldHVybiBmdW5jdGlvbih4KSB7IHJldHVybiBNYXRoLm1heChhLCBNYXRoLm1pbihiLCB4KSk7IH07XG59XG5cbi8vIG5vcm1hbGl6ZShhLCBiKSh4KSB0YWtlcyBhIGRvbWFpbiB2YWx1ZSB4IGluIFthLGJdIGFuZCByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIHBhcmFtZXRlciB0IGluIFswLDFdLlxuLy8gaW50ZXJwb2xhdGUoYSwgYikodCkgdGFrZXMgYSBwYXJhbWV0ZXIgdCBpbiBbMCwxXSBhbmQgcmV0dXJucyB0aGUgY29ycmVzcG9uZGluZyByYW5nZSB2YWx1ZSB4IGluIFthLGJdLlxuZnVuY3Rpb24gYmltYXAoZG9tYWluLCByYW5nZSwgaW50ZXJwb2xhdGUpIHtcbiAgdmFyIGQwID0gZG9tYWluWzBdLCBkMSA9IGRvbWFpblsxXSwgcjAgPSByYW5nZVswXSwgcjEgPSByYW5nZVsxXTtcbiAgaWYgKGQxIDwgZDApIGQwID0gbm9ybWFsaXplKGQxLCBkMCksIHIwID0gaW50ZXJwb2xhdGUocjEsIHIwKTtcbiAgZWxzZSBkMCA9IG5vcm1hbGl6ZShkMCwgZDEpLCByMCA9IGludGVycG9sYXRlKHIwLCByMSk7XG4gIHJldHVybiBmdW5jdGlvbih4KSB7IHJldHVybiByMChkMCh4KSk7IH07XG59XG5cbmZ1bmN0aW9uIHBvbHltYXAoZG9tYWluLCByYW5nZSwgaW50ZXJwb2xhdGUpIHtcbiAgdmFyIGogPSBNYXRoLm1pbihkb21haW4ubGVuZ3RoLCByYW5nZS5sZW5ndGgpIC0gMSxcbiAgICAgIGQgPSBuZXcgQXJyYXkoaiksXG4gICAgICByID0gbmV3IEFycmF5KGopLFxuICAgICAgaSA9IC0xO1xuXG4gIC8vIFJldmVyc2UgZGVzY2VuZGluZyBkb21haW5zLlxuICBpZiAoZG9tYWluW2pdIDwgZG9tYWluWzBdKSB7XG4gICAgZG9tYWluID0gZG9tYWluLnNsaWNlKCkucmV2ZXJzZSgpO1xuICAgIHJhbmdlID0gcmFuZ2Uuc2xpY2UoKS5yZXZlcnNlKCk7XG4gIH1cblxuICB3aGlsZSAoKytpIDwgaikge1xuICAgIGRbaV0gPSBub3JtYWxpemUoZG9tYWluW2ldLCBkb21haW5baSArIDFdKTtcbiAgICByW2ldID0gaW50ZXJwb2xhdGUocmFuZ2VbaV0sIHJhbmdlW2kgKyAxXSk7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgIHZhciBpID0gYmlzZWN0KGRvbWFpbiwgeCwgMSwgaikgLSAxO1xuICAgIHJldHVybiByW2ldKGRbaV0oeCkpO1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29weShzb3VyY2UsIHRhcmdldCkge1xuICByZXR1cm4gdGFyZ2V0XG4gICAgICAuZG9tYWluKHNvdXJjZS5kb21haW4oKSlcbiAgICAgIC5yYW5nZShzb3VyY2UucmFuZ2UoKSlcbiAgICAgIC5pbnRlcnBvbGF0ZShzb3VyY2UuaW50ZXJwb2xhdGUoKSlcbiAgICAgIC5jbGFtcChzb3VyY2UuY2xhbXAoKSlcbiAgICAgIC51bmtub3duKHNvdXJjZS51bmtub3duKCkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtZXIoKSB7XG4gIHZhciBkb21haW4gPSB1bml0LFxuICAgICAgcmFuZ2UgPSB1bml0LFxuICAgICAgaW50ZXJwb2xhdGUgPSBpbnRlcnBvbGF0ZVZhbHVlLFxuICAgICAgdHJhbnNmb3JtLFxuICAgICAgdW50cmFuc2Zvcm0sXG4gICAgICB1bmtub3duLFxuICAgICAgY2xhbXAgPSBpZGVudGl0eSxcbiAgICAgIHBpZWNld2lzZSxcbiAgICAgIG91dHB1dCxcbiAgICAgIGlucHV0O1xuXG4gIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgcGllY2V3aXNlID0gTWF0aC5taW4oZG9tYWluLmxlbmd0aCwgcmFuZ2UubGVuZ3RoKSA+IDIgPyBwb2x5bWFwIDogYmltYXA7XG4gICAgb3V0cHV0ID0gaW5wdXQgPSBudWxsO1xuICAgIHJldHVybiBzY2FsZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICByZXR1cm4gaXNOYU4oeCA9ICt4KSA/IHVua25vd24gOiAob3V0cHV0IHx8IChvdXRwdXQgPSBwaWVjZXdpc2UoZG9tYWluLm1hcCh0cmFuc2Zvcm0pLCByYW5nZSwgaW50ZXJwb2xhdGUpKSkodHJhbnNmb3JtKGNsYW1wKHgpKSk7XG4gIH1cblxuICBzY2FsZS5pbnZlcnQgPSBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIGNsYW1wKHVudHJhbnNmb3JtKChpbnB1dCB8fCAoaW5wdXQgPSBwaWVjZXdpc2UocmFuZ2UsIGRvbWFpbi5tYXAodHJhbnNmb3JtKSwgaW50ZXJwb2xhdGVOdW1iZXIpKSkoeSkpKTtcbiAgfTtcblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZG9tYWluID0gbWFwLmNhbGwoXywgbnVtYmVyKSwgY2xhbXAgPT09IGlkZW50aXR5IHx8IChjbGFtcCA9IGNsYW1wZXIoZG9tYWluKSksIHJlc2NhbGUoKSkgOiBkb21haW4uc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYW5nZSA9IHNsaWNlLmNhbGwoXyksIHJlc2NhbGUoKSkgOiByYW5nZS5zbGljZSgpO1xuICB9O1xuXG4gIHNjYWxlLnJhbmdlUm91bmQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIHJhbmdlID0gc2xpY2UuY2FsbChfKSwgaW50ZXJwb2xhdGUgPSBpbnRlcnBvbGF0ZVJvdW5kLCByZXNjYWxlKCk7XG4gIH07XG5cbiAgc2NhbGUuY2xhbXAgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY2xhbXAgPSBfID8gY2xhbXBlcihkb21haW4pIDogaWRlbnRpdHksIHNjYWxlKSA6IGNsYW1wICE9PSBpZGVudGl0eTtcbiAgfTtcblxuICBzY2FsZS5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpbnRlcnBvbGF0ZSA9IF8sIHJlc2NhbGUoKSkgOiBpbnRlcnBvbGF0ZTtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHJldHVybiBmdW5jdGlvbih0LCB1KSB7XG4gICAgdHJhbnNmb3JtID0gdCwgdW50cmFuc2Zvcm0gPSB1O1xuICAgIHJldHVybiByZXNjYWxlKCk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbnRpbnVvdXModHJhbnNmb3JtLCB1bnRyYW5zZm9ybSkge1xuICByZXR1cm4gdHJhbnNmb3JtZXIoKSh0cmFuc2Zvcm0sIHVudHJhbnNmb3JtKTtcbn1cbiIsImltcG9ydCB7aWRlbnRpdHl9IGZyb20gXCIuL2NvbnRpbnVvdXNcIjtcbmltcG9ydCB7aW5pdEludGVycG9sYXRvcn0gZnJvbSBcIi4vaW5pdFwiO1xuaW1wb3J0IHtsaW5lYXJpc2h9IGZyb20gXCIuL2xpbmVhclwiO1xuaW1wb3J0IHtsb2dnaXNofSBmcm9tIFwiLi9sb2dcIjtcbmltcG9ydCB7Y29weX0gZnJvbSBcIi4vc2VxdWVudGlhbFwiO1xuaW1wb3J0IHtzeW1sb2dpc2h9IGZyb20gXCIuL3N5bWxvZ1wiO1xuaW1wb3J0IHtwb3dpc2h9IGZyb20gXCIuL3Bvd1wiO1xuXG5mdW5jdGlvbiB0cmFuc2Zvcm1lcigpIHtcbiAgdmFyIHgwID0gMCxcbiAgICAgIHgxID0gMC41LFxuICAgICAgeDIgPSAxLFxuICAgICAgdDAsXG4gICAgICB0MSxcbiAgICAgIHQyLFxuICAgICAgazEwLFxuICAgICAgazIxLFxuICAgICAgaW50ZXJwb2xhdG9yID0gaWRlbnRpdHksXG4gICAgICB0cmFuc2Zvcm0sXG4gICAgICBjbGFtcCA9IGZhbHNlLFxuICAgICAgdW5rbm93bjtcblxuICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgcmV0dXJuIGlzTmFOKHggPSAreCkgPyB1bmtub3duIDogKHggPSAwLjUgKyAoKHggPSArdHJhbnNmb3JtKHgpKSAtIHQxKSAqICh4IDwgdDEgPyBrMTAgOiBrMjEpLCBpbnRlcnBvbGF0b3IoY2xhbXAgPyBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB4KSkgOiB4KSk7XG4gIH1cblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodDAgPSB0cmFuc2Zvcm0oeDAgPSArX1swXSksIHQxID0gdHJhbnNmb3JtKHgxID0gK19bMV0pLCB0MiA9IHRyYW5zZm9ybSh4MiA9ICtfWzJdKSwgazEwID0gdDAgPT09IHQxID8gMCA6IDAuNSAvICh0MSAtIHQwKSwgazIxID0gdDEgPT09IHQyID8gMCA6IDAuNSAvICh0MiAtIHQxKSwgc2NhbGUpIDogW3gwLCB4MSwgeDJdO1xuICB9O1xuXG4gIHNjYWxlLmNsYW1wID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNsYW1wID0gISFfLCBzY2FsZSkgOiBjbGFtcDtcbiAgfTtcblxuICBzY2FsZS5pbnRlcnBvbGF0b3IgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaW50ZXJwb2xhdG9yID0gXywgc2NhbGUpIDogaW50ZXJwb2xhdG9yO1xuICB9O1xuXG4gIHNjYWxlLnVua25vd24gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodW5rbm93biA9IF8sIHNjYWxlKSA6IHVua25vd247XG4gIH07XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB0cmFuc2Zvcm0gPSB0LCB0MCA9IHQoeDApLCB0MSA9IHQoeDEpLCB0MiA9IHQoeDIpLCBrMTAgPSB0MCA9PT0gdDEgPyAwIDogMC41IC8gKHQxIC0gdDApLCBrMjEgPSB0MSA9PT0gdDIgPyAwIDogMC41IC8gKHQyIC0gdDEpO1xuICAgIHJldHVybiBzY2FsZTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGl2ZXJnaW5nKCkge1xuICB2YXIgc2NhbGUgPSBsaW5lYXJpc2godHJhbnNmb3JtZXIoKShpZGVudGl0eSkpO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgZGl2ZXJnaW5nKCkpO1xuICB9O1xuXG4gIHJldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGl2ZXJnaW5nTG9nKCkge1xuICB2YXIgc2NhbGUgPSBsb2dnaXNoKHRyYW5zZm9ybWVyKCkpLmRvbWFpbihbMC4xLCAxLCAxMF0pO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgZGl2ZXJnaW5nTG9nKCkpLmJhc2Uoc2NhbGUuYmFzZSgpKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdEludGVycG9sYXRvci5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpdmVyZ2luZ1N5bWxvZygpIHtcbiAgdmFyIHNjYWxlID0gc3ltbG9naXNoKHRyYW5zZm9ybWVyKCkpO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgZGl2ZXJnaW5nU3ltbG9nKCkpLmNvbnN0YW50KHNjYWxlLmNvbnN0YW50KCkpO1xuICB9O1xuXG4gIHJldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGl2ZXJnaW5nUG93KCkge1xuICB2YXIgc2NhbGUgPSBwb3dpc2godHJhbnNmb3JtZXIoKSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBkaXZlcmdpbmdQb3coKSkuZXhwb25lbnQoc2NhbGUuZXhwb25lbnQoKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXZlcmdpbmdTcXJ0KCkge1xuICByZXR1cm4gZGl2ZXJnaW5nUG93LmFwcGx5KG51bGwsIGFyZ3VtZW50cykuZXhwb25lbnQoMC41KTtcbn1cbiIsImltcG9ydCB7bWFwfSBmcm9tIFwiLi9hcnJheVwiO1xuaW1wb3J0IHtsaW5lYXJpc2h9IGZyb20gXCIuL2xpbmVhclwiO1xuaW1wb3J0IG51bWJlciBmcm9tIFwiLi9udW1iZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaWRlbnRpdHkoZG9tYWluKSB7XG4gIHZhciB1bmtub3duO1xuXG4gIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICByZXR1cm4gaXNOYU4oeCA9ICt4KSA/IHVua25vd24gOiB4O1xuICB9XG5cbiAgc2NhbGUuaW52ZXJ0ID0gc2NhbGU7XG5cbiAgc2NhbGUuZG9tYWluID0gc2NhbGUucmFuZ2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZG9tYWluID0gbWFwLmNhbGwoXywgbnVtYmVyKSwgc2NhbGUpIDogZG9tYWluLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUudW5rbm93biA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1bmtub3duID0gXywgc2NhbGUpIDogdW5rbm93bjtcbiAgfTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGlkZW50aXR5KGRvbWFpbikudW5rbm93bih1bmtub3duKTtcbiAgfTtcblxuICBkb21haW4gPSBhcmd1bWVudHMubGVuZ3RoID8gbWFwLmNhbGwoZG9tYWluLCBudW1iZXIpIDogWzAsIDFdO1xuXG4gIHJldHVybiBsaW5lYXJpc2goc2NhbGUpO1xufVxuIiwiZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZUJhbmQsXG4gIHBvaW50IGFzIHNjYWxlUG9pbnRcbn0gZnJvbSBcIi4vYmFuZFwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHNjYWxlSWRlbnRpdHlcbn0gZnJvbSBcIi4vaWRlbnRpdHlcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZUxpbmVhclxufSBmcm9tIFwiLi9saW5lYXJcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZUxvZ1xufSBmcm9tIFwiLi9sb2dcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZVN5bWxvZ1xufSBmcm9tIFwiLi9zeW1sb2dcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZU9yZGluYWwsXG4gIGltcGxpY2l0IGFzIHNjYWxlSW1wbGljaXRcbn0gZnJvbSBcIi4vb3JkaW5hbFwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHNjYWxlUG93LFxuICBzcXJ0IGFzIHNjYWxlU3FydFxufSBmcm9tIFwiLi9wb3dcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZVF1YW50aWxlXG59IGZyb20gXCIuL3F1YW50aWxlXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVRdWFudGl6ZVxufSBmcm9tIFwiLi9xdWFudGl6ZVwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHNjYWxlVGhyZXNob2xkXG59IGZyb20gXCIuL3RocmVzaG9sZFwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHNjYWxlVGltZVxufSBmcm9tIFwiLi90aW1lXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVVdGNcbn0gZnJvbSBcIi4vdXRjVGltZVwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHNjYWxlU2VxdWVudGlhbCxcbiAgc2VxdWVudGlhbExvZyBhcyBzY2FsZVNlcXVlbnRpYWxMb2csXG4gIHNlcXVlbnRpYWxQb3cgYXMgc2NhbGVTZXF1ZW50aWFsUG93LFxuICBzZXF1ZW50aWFsU3FydCBhcyBzY2FsZVNlcXVlbnRpYWxTcXJ0LFxuICBzZXF1ZW50aWFsU3ltbG9nIGFzIHNjYWxlU2VxdWVudGlhbFN5bWxvZ1xufSBmcm9tIFwiLi9zZXF1ZW50aWFsXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVTZXF1ZW50aWFsUXVhbnRpbGVcbn0gZnJvbSBcIi4vc2VxdWVudGlhbFF1YW50aWxlXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVEaXZlcmdpbmcsXG4gIGRpdmVyZ2luZ0xvZyBhcyBzY2FsZURpdmVyZ2luZ0xvZyxcbiAgZGl2ZXJnaW5nUG93IGFzIHNjYWxlRGl2ZXJnaW5nUG93LFxuICBkaXZlcmdpbmdTcXJ0IGFzIHNjYWxlRGl2ZXJnaW5nU3FydCxcbiAgZGl2ZXJnaW5nU3ltbG9nIGFzIHNjYWxlRGl2ZXJnaW5nU3ltbG9nXG59IGZyb20gXCIuL2RpdmVyZ2luZ1wiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpY2tGb3JtYXRcbn0gZnJvbSBcIi4vdGlja0Zvcm1hdFwiO1xuIiwiZXhwb3J0IGZ1bmN0aW9uIGluaXRSYW5nZShkb21haW4sIHJhbmdlKSB7XG4gIHN3aXRjaCAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgIGNhc2UgMDogYnJlYWs7XG4gICAgY2FzZSAxOiB0aGlzLnJhbmdlKGRvbWFpbik7IGJyZWFrO1xuICAgIGRlZmF1bHQ6IHRoaXMucmFuZ2UocmFuZ2UpLmRvbWFpbihkb21haW4pOyBicmVhaztcbiAgfVxuICByZXR1cm4gdGhpcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluaXRJbnRlcnBvbGF0b3IoZG9tYWluLCBpbnRlcnBvbGF0b3IpIHtcbiAgc3dpdGNoIChhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgY2FzZSAwOiBicmVhaztcbiAgICBjYXNlIDE6IHRoaXMuaW50ZXJwb2xhdG9yKGRvbWFpbik7IGJyZWFrO1xuICAgIGRlZmF1bHQ6IHRoaXMuaW50ZXJwb2xhdG9yKGludGVycG9sYXRvcikuZG9tYWluKGRvbWFpbik7IGJyZWFrO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuIiwiaW1wb3J0IHt0aWNrcywgdGlja0luY3JlbWVudH0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQgY29udGludW91cywge2NvcHksIGlkZW50aXR5fSBmcm9tIFwiLi9jb250aW51b3VzXCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuaW1wb3J0IHRpY2tGb3JtYXQgZnJvbSBcIi4vdGlja0Zvcm1hdFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gbGluZWFyaXNoKHNjYWxlKSB7XG4gIHZhciBkb21haW4gPSBzY2FsZS5kb21haW47XG5cbiAgc2NhbGUudGlja3MgPSBmdW5jdGlvbihjb3VudCkge1xuICAgIHZhciBkID0gZG9tYWluKCk7XG4gICAgcmV0dXJuIHRpY2tzKGRbMF0sIGRbZC5sZW5ndGggLSAxXSwgY291bnQgPT0gbnVsbCA/IDEwIDogY291bnQpO1xuICB9O1xuXG4gIHNjYWxlLnRpY2tGb3JtYXQgPSBmdW5jdGlvbihjb3VudCwgc3BlY2lmaWVyKSB7XG4gICAgdmFyIGQgPSBkb21haW4oKTtcbiAgICByZXR1cm4gdGlja0Zvcm1hdChkWzBdLCBkW2QubGVuZ3RoIC0gMV0sIGNvdW50ID09IG51bGwgPyAxMCA6IGNvdW50LCBzcGVjaWZpZXIpO1xuICB9O1xuXG4gIHNjYWxlLm5pY2UgPSBmdW5jdGlvbihjb3VudCkge1xuICAgIGlmIChjb3VudCA9PSBudWxsKSBjb3VudCA9IDEwO1xuXG4gICAgdmFyIGQgPSBkb21haW4oKSxcbiAgICAgICAgaTAgPSAwLFxuICAgICAgICBpMSA9IGQubGVuZ3RoIC0gMSxcbiAgICAgICAgc3RhcnQgPSBkW2kwXSxcbiAgICAgICAgc3RvcCA9IGRbaTFdLFxuICAgICAgICBzdGVwO1xuXG4gICAgaWYgKHN0b3AgPCBzdGFydCkge1xuICAgICAgc3RlcCA9IHN0YXJ0LCBzdGFydCA9IHN0b3AsIHN0b3AgPSBzdGVwO1xuICAgICAgc3RlcCA9IGkwLCBpMCA9IGkxLCBpMSA9IHN0ZXA7XG4gICAgfVxuXG4gICAgc3RlcCA9IHRpY2tJbmNyZW1lbnQoc3RhcnQsIHN0b3AsIGNvdW50KTtcblxuICAgIGlmIChzdGVwID4gMCkge1xuICAgICAgc3RhcnQgPSBNYXRoLmZsb29yKHN0YXJ0IC8gc3RlcCkgKiBzdGVwO1xuICAgICAgc3RvcCA9IE1hdGguY2VpbChzdG9wIC8gc3RlcCkgKiBzdGVwO1xuICAgICAgc3RlcCA9IHRpY2tJbmNyZW1lbnQoc3RhcnQsIHN0b3AsIGNvdW50KTtcbiAgICB9IGVsc2UgaWYgKHN0ZXAgPCAwKSB7XG4gICAgICBzdGFydCA9IE1hdGguY2VpbChzdGFydCAqIHN0ZXApIC8gc3RlcDtcbiAgICAgIHN0b3AgPSBNYXRoLmZsb29yKHN0b3AgKiBzdGVwKSAvIHN0ZXA7XG4gICAgICBzdGVwID0gdGlja0luY3JlbWVudChzdGFydCwgc3RvcCwgY291bnQpO1xuICAgIH1cblxuICAgIGlmIChzdGVwID4gMCkge1xuICAgICAgZFtpMF0gPSBNYXRoLmZsb29yKHN0YXJ0IC8gc3RlcCkgKiBzdGVwO1xuICAgICAgZFtpMV0gPSBNYXRoLmNlaWwoc3RvcCAvIHN0ZXApICogc3RlcDtcbiAgICAgIGRvbWFpbihkKTtcbiAgICB9IGVsc2UgaWYgKHN0ZXAgPCAwKSB7XG4gICAgICBkW2kwXSA9IE1hdGguY2VpbChzdGFydCAqIHN0ZXApIC8gc3RlcDtcbiAgICAgIGRbaTFdID0gTWF0aC5mbG9vcihzdG9wICogc3RlcCkgLyBzdGVwO1xuICAgICAgZG9tYWluKGQpO1xuICAgIH1cblxuICAgIHJldHVybiBzY2FsZTtcbiAgfTtcblxuICByZXR1cm4gc2NhbGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxpbmVhcigpIHtcbiAgdmFyIHNjYWxlID0gY29udGludW91cyhpZGVudGl0eSwgaWRlbnRpdHkpO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgbGluZWFyKCkpO1xuICB9O1xuXG4gIGluaXRSYW5nZS5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcblxuICByZXR1cm4gbGluZWFyaXNoKHNjYWxlKTtcbn1cbiIsImltcG9ydCB7dGlja3N9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtmb3JtYXR9IGZyb20gXCJkMy1mb3JtYXRcIjtcbmltcG9ydCBuaWNlIGZyb20gXCIuL25pY2VcIjtcbmltcG9ydCB7Y29weSwgdHJhbnNmb3JtZXJ9IGZyb20gXCIuL2NvbnRpbnVvdXNcIjtcbmltcG9ydCB7aW5pdFJhbmdlfSBmcm9tIFwiLi9pbml0XCI7XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybUxvZyh4KSB7XG4gIHJldHVybiBNYXRoLmxvZyh4KTtcbn1cblxuZnVuY3Rpb24gdHJhbnNmb3JtRXhwKHgpIHtcbiAgcmV0dXJuIE1hdGguZXhwKHgpO1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1Mb2duKHgpIHtcbiAgcmV0dXJuIC1NYXRoLmxvZygteCk7XG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybUV4cG4oeCkge1xuICByZXR1cm4gLU1hdGguZXhwKC14KTtcbn1cblxuZnVuY3Rpb24gcG93MTAoeCkge1xuICByZXR1cm4gaXNGaW5pdGUoeCkgPyArKFwiMWVcIiArIHgpIDogeCA8IDAgPyAwIDogeDtcbn1cblxuZnVuY3Rpb24gcG93cChiYXNlKSB7XG4gIHJldHVybiBiYXNlID09PSAxMCA/IHBvdzEwXG4gICAgICA6IGJhc2UgPT09IE1hdGguRSA/IE1hdGguZXhwXG4gICAgICA6IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIE1hdGgucG93KGJhc2UsIHgpOyB9O1xufVxuXG5mdW5jdGlvbiBsb2dwKGJhc2UpIHtcbiAgcmV0dXJuIGJhc2UgPT09IE1hdGguRSA/IE1hdGgubG9nXG4gICAgICA6IGJhc2UgPT09IDEwICYmIE1hdGgubG9nMTBcbiAgICAgIHx8IGJhc2UgPT09IDIgJiYgTWF0aC5sb2cyXG4gICAgICB8fCAoYmFzZSA9IE1hdGgubG9nKGJhc2UpLCBmdW5jdGlvbih4KSB7IHJldHVybiBNYXRoLmxvZyh4KSAvIGJhc2U7IH0pO1xufVxuXG5mdW5jdGlvbiByZWZsZWN0KGYpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gLWYoLXgpO1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbG9nZ2lzaCh0cmFuc2Zvcm0pIHtcbiAgdmFyIHNjYWxlID0gdHJhbnNmb3JtKHRyYW5zZm9ybUxvZywgdHJhbnNmb3JtRXhwKSxcbiAgICAgIGRvbWFpbiA9IHNjYWxlLmRvbWFpbixcbiAgICAgIGJhc2UgPSAxMCxcbiAgICAgIGxvZ3MsXG4gICAgICBwb3dzO1xuXG4gIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgbG9ncyA9IGxvZ3AoYmFzZSksIHBvd3MgPSBwb3dwKGJhc2UpO1xuICAgIGlmIChkb21haW4oKVswXSA8IDApIHtcbiAgICAgIGxvZ3MgPSByZWZsZWN0KGxvZ3MpLCBwb3dzID0gcmVmbGVjdChwb3dzKTtcbiAgICAgIHRyYW5zZm9ybSh0cmFuc2Zvcm1Mb2duLCB0cmFuc2Zvcm1FeHBuKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdHJhbnNmb3JtKHRyYW5zZm9ybUxvZywgdHJhbnNmb3JtRXhwKTtcbiAgICB9XG4gICAgcmV0dXJuIHNjYWxlO1xuICB9XG5cbiAgc2NhbGUuYmFzZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChiYXNlID0gK18sIHJlc2NhbGUoKSkgOiBiYXNlO1xuICB9O1xuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkb21haW4oXyksIHJlc2NhbGUoKSkgOiBkb21haW4oKTtcbiAgfTtcblxuICBzY2FsZS50aWNrcyA9IGZ1bmN0aW9uKGNvdW50KSB7XG4gICAgdmFyIGQgPSBkb21haW4oKSxcbiAgICAgICAgdSA9IGRbMF0sXG4gICAgICAgIHYgPSBkW2QubGVuZ3RoIC0gMV0sXG4gICAgICAgIHI7XG5cbiAgICBpZiAociA9IHYgPCB1KSBpID0gdSwgdSA9IHYsIHYgPSBpO1xuXG4gICAgdmFyIGkgPSBsb2dzKHUpLFxuICAgICAgICBqID0gbG9ncyh2KSxcbiAgICAgICAgcCxcbiAgICAgICAgayxcbiAgICAgICAgdCxcbiAgICAgICAgbiA9IGNvdW50ID09IG51bGwgPyAxMCA6ICtjb3VudCxcbiAgICAgICAgeiA9IFtdO1xuXG4gICAgaWYgKCEoYmFzZSAlIDEpICYmIGogLSBpIDwgbikge1xuICAgICAgaSA9IE1hdGgucm91bmQoaSkgLSAxLCBqID0gTWF0aC5yb3VuZChqKSArIDE7XG4gICAgICBpZiAodSA+IDApIGZvciAoOyBpIDwgajsgKytpKSB7XG4gICAgICAgIGZvciAoayA9IDEsIHAgPSBwb3dzKGkpOyBrIDwgYmFzZTsgKytrKSB7XG4gICAgICAgICAgdCA9IHAgKiBrO1xuICAgICAgICAgIGlmICh0IDwgdSkgY29udGludWU7XG4gICAgICAgICAgaWYgKHQgPiB2KSBicmVhaztcbiAgICAgICAgICB6LnB1c2godCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBmb3IgKDsgaSA8IGo7ICsraSkge1xuICAgICAgICBmb3IgKGsgPSBiYXNlIC0gMSwgcCA9IHBvd3MoaSk7IGsgPj0gMTsgLS1rKSB7XG4gICAgICAgICAgdCA9IHAgKiBrO1xuICAgICAgICAgIGlmICh0IDwgdSkgY29udGludWU7XG4gICAgICAgICAgaWYgKHQgPiB2KSBicmVhaztcbiAgICAgICAgICB6LnB1c2godCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgeiA9IHRpY2tzKGksIGosIE1hdGgubWluKGogLSBpLCBuKSkubWFwKHBvd3MpO1xuICAgIH1cblxuICAgIHJldHVybiByID8gei5yZXZlcnNlKCkgOiB6O1xuICB9O1xuXG4gIHNjYWxlLnRpY2tGb3JtYXQgPSBmdW5jdGlvbihjb3VudCwgc3BlY2lmaWVyKSB7XG4gICAgaWYgKHNwZWNpZmllciA9PSBudWxsKSBzcGVjaWZpZXIgPSBiYXNlID09PSAxMCA/IFwiLjBlXCIgOiBcIixcIjtcbiAgICBpZiAodHlwZW9mIHNwZWNpZmllciAhPT0gXCJmdW5jdGlvblwiKSBzcGVjaWZpZXIgPSBmb3JtYXQoc3BlY2lmaWVyKTtcbiAgICBpZiAoY291bnQgPT09IEluZmluaXR5KSByZXR1cm4gc3BlY2lmaWVyO1xuICAgIGlmIChjb3VudCA9PSBudWxsKSBjb3VudCA9IDEwO1xuICAgIHZhciBrID0gTWF0aC5tYXgoMSwgYmFzZSAqIGNvdW50IC8gc2NhbGUudGlja3MoKS5sZW5ndGgpOyAvLyBUT0RPIGZhc3QgZXN0aW1hdGU/XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGQpIHtcbiAgICAgIHZhciBpID0gZCAvIHBvd3MoTWF0aC5yb3VuZChsb2dzKGQpKSk7XG4gICAgICBpZiAoaSAqIGJhc2UgPCBiYXNlIC0gMC41KSBpICo9IGJhc2U7XG4gICAgICByZXR1cm4gaSA8PSBrID8gc3BlY2lmaWVyKGQpIDogXCJcIjtcbiAgICB9O1xuICB9O1xuXG4gIHNjYWxlLm5pY2UgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZG9tYWluKG5pY2UoZG9tYWluKCksIHtcbiAgICAgIGZsb29yOiBmdW5jdGlvbih4KSB7IHJldHVybiBwb3dzKE1hdGguZmxvb3IobG9ncyh4KSkpOyB9LFxuICAgICAgY2VpbDogZnVuY3Rpb24oeCkgeyByZXR1cm4gcG93cyhNYXRoLmNlaWwobG9ncyh4KSkpOyB9XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBzY2FsZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbG9nKCkge1xuICB2YXIgc2NhbGUgPSBsb2dnaXNoKHRyYW5zZm9ybWVyKCkpLmRvbWFpbihbMSwgMTBdKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIGxvZygpKS5iYXNlKHNjYWxlLmJhc2UoKSk7XG4gIH07XG5cbiAgaW5pdFJhbmdlLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xuXG4gIHJldHVybiBzY2FsZTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGRvbWFpbiwgaW50ZXJ2YWwpIHtcbiAgZG9tYWluID0gZG9tYWluLnNsaWNlKCk7XG5cbiAgdmFyIGkwID0gMCxcbiAgICAgIGkxID0gZG9tYWluLmxlbmd0aCAtIDEsXG4gICAgICB4MCA9IGRvbWFpbltpMF0sXG4gICAgICB4MSA9IGRvbWFpbltpMV0sXG4gICAgICB0O1xuXG4gIGlmICh4MSA8IHgwKSB7XG4gICAgdCA9IGkwLCBpMCA9IGkxLCBpMSA9IHQ7XG4gICAgdCA9IHgwLCB4MCA9IHgxLCB4MSA9IHQ7XG4gIH1cblxuICBkb21haW5baTBdID0gaW50ZXJ2YWwuZmxvb3IoeDApO1xuICBkb21haW5baTFdID0gaW50ZXJ2YWwuY2VpbCh4MSk7XG4gIHJldHVybiBkb21haW47XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiAreDtcbn1cbiIsImltcG9ydCB7bWFwfSBmcm9tIFwiZDMtY29sbGVjdGlvblwiO1xuaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCB7aW5pdFJhbmdlfSBmcm9tIFwiLi9pbml0XCI7XG5cbmV4cG9ydCB2YXIgaW1wbGljaXQgPSB7bmFtZTogXCJpbXBsaWNpdFwifTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gb3JkaW5hbCgpIHtcbiAgdmFyIGluZGV4ID0gbWFwKCksXG4gICAgICBkb21haW4gPSBbXSxcbiAgICAgIHJhbmdlID0gW10sXG4gICAgICB1bmtub3duID0gaW1wbGljaXQ7XG5cbiAgZnVuY3Rpb24gc2NhbGUoZCkge1xuICAgIHZhciBrZXkgPSBkICsgXCJcIiwgaSA9IGluZGV4LmdldChrZXkpO1xuICAgIGlmICghaSkge1xuICAgICAgaWYgKHVua25vd24gIT09IGltcGxpY2l0KSByZXR1cm4gdW5rbm93bjtcbiAgICAgIGluZGV4LnNldChrZXksIGkgPSBkb21haW4ucHVzaChkKSk7XG4gICAgfVxuICAgIHJldHVybiByYW5nZVsoaSAtIDEpICUgcmFuZ2UubGVuZ3RoXTtcbiAgfVxuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW4uc2xpY2UoKTtcbiAgICBkb21haW4gPSBbXSwgaW5kZXggPSBtYXAoKTtcbiAgICB2YXIgaSA9IC0xLCBuID0gXy5sZW5ndGgsIGQsIGtleTtcbiAgICB3aGlsZSAoKytpIDwgbikgaWYgKCFpbmRleC5oYXMoa2V5ID0gKGQgPSBfW2ldKSArIFwiXCIpKSBpbmRleC5zZXQoa2V5LCBkb21haW4ucHVzaChkKSk7XG4gICAgcmV0dXJuIHNjYWxlO1xuICB9O1xuXG4gIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhbmdlID0gc2xpY2UuY2FsbChfKSwgc2NhbGUpIDogcmFuZ2Uuc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gb3JkaW5hbChkb21haW4sIHJhbmdlKS51bmtub3duKHVua25vd24pO1xuICB9O1xuXG4gIGluaXRSYW5nZS5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcblxuICByZXR1cm4gc2NhbGU7XG59XG4iLCJpbXBvcnQge2xpbmVhcmlzaH0gZnJvbSBcIi4vbGluZWFyXCI7XG5pbXBvcnQge2NvcHksIGlkZW50aXR5LCB0cmFuc2Zvcm1lcn0gZnJvbSBcIi4vY29udGludW91c1wiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXRcIjtcblxuZnVuY3Rpb24gdHJhbnNmb3JtUG93KGV4cG9uZW50KSB7XG4gIHJldHVybiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIHggPCAwID8gLU1hdGgucG93KC14LCBleHBvbmVudCkgOiBNYXRoLnBvdyh4LCBleHBvbmVudCk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybVNxcnQoeCkge1xuICByZXR1cm4geCA8IDAgPyAtTWF0aC5zcXJ0KC14KSA6IE1hdGguc3FydCh4KTtcbn1cblxuZnVuY3Rpb24gdHJhbnNmb3JtU3F1YXJlKHgpIHtcbiAgcmV0dXJuIHggPCAwID8gLXggKiB4IDogeCAqIHg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwb3dpc2godHJhbnNmb3JtKSB7XG4gIHZhciBzY2FsZSA9IHRyYW5zZm9ybShpZGVudGl0eSwgaWRlbnRpdHkpLFxuICAgICAgZXhwb25lbnQgPSAxO1xuXG4gIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgcmV0dXJuIGV4cG9uZW50ID09PSAxID8gdHJhbnNmb3JtKGlkZW50aXR5LCBpZGVudGl0eSlcbiAgICAgICAgOiBleHBvbmVudCA9PT0gMC41ID8gdHJhbnNmb3JtKHRyYW5zZm9ybVNxcnQsIHRyYW5zZm9ybVNxdWFyZSlcbiAgICAgICAgOiB0cmFuc2Zvcm0odHJhbnNmb3JtUG93KGV4cG9uZW50KSwgdHJhbnNmb3JtUG93KDEgLyBleHBvbmVudCkpO1xuICB9XG5cbiAgc2NhbGUuZXhwb25lbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZXhwb25lbnQgPSArXywgcmVzY2FsZSgpKSA6IGV4cG9uZW50O1xuICB9O1xuXG4gIHJldHVybiBsaW5lYXJpc2goc2NhbGUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwb3coKSB7XG4gIHZhciBzY2FsZSA9IHBvd2lzaCh0cmFuc2Zvcm1lcigpKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIHBvdygpKS5leHBvbmVudChzY2FsZS5leHBvbmVudCgpKTtcbiAgfTtcblxuICBpbml0UmFuZ2UuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG5cbiAgcmV0dXJuIHNjYWxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3FydCgpIHtcbiAgcmV0dXJuIHBvdy5hcHBseShudWxsLCBhcmd1bWVudHMpLmV4cG9uZW50KDAuNSk7XG59XG4iLCJpbXBvcnQge2FzY2VuZGluZywgYmlzZWN0LCBxdWFudGlsZSBhcyB0aHJlc2hvbGR9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCB7aW5pdFJhbmdlfSBmcm9tIFwiLi9pbml0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHF1YW50aWxlKCkge1xuICB2YXIgZG9tYWluID0gW10sXG4gICAgICByYW5nZSA9IFtdLFxuICAgICAgdGhyZXNob2xkcyA9IFtdLFxuICAgICAgdW5rbm93bjtcblxuICBmdW5jdGlvbiByZXNjYWxlKCkge1xuICAgIHZhciBpID0gMCwgbiA9IE1hdGgubWF4KDEsIHJhbmdlLmxlbmd0aCk7XG4gICAgdGhyZXNob2xkcyA9IG5ldyBBcnJheShuIC0gMSk7XG4gICAgd2hpbGUgKCsraSA8IG4pIHRocmVzaG9sZHNbaSAtIDFdID0gdGhyZXNob2xkKGRvbWFpbiwgaSAvIG4pO1xuICAgIHJldHVybiBzY2FsZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICByZXR1cm4gaXNOYU4oeCA9ICt4KSA/IHVua25vd24gOiByYW5nZVtiaXNlY3QodGhyZXNob2xkcywgeCldO1xuICB9XG5cbiAgc2NhbGUuaW52ZXJ0RXh0ZW50ID0gZnVuY3Rpb24oeSkge1xuICAgIHZhciBpID0gcmFuZ2UuaW5kZXhPZih5KTtcbiAgICByZXR1cm4gaSA8IDAgPyBbTmFOLCBOYU5dIDogW1xuICAgICAgaSA+IDAgPyB0aHJlc2hvbGRzW2kgLSAxXSA6IGRvbWFpblswXSxcbiAgICAgIGkgPCB0aHJlc2hvbGRzLmxlbmd0aCA/IHRocmVzaG9sZHNbaV0gOiBkb21haW5bZG9tYWluLmxlbmd0aCAtIDFdXG4gICAgXTtcbiAgfTtcblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluLnNsaWNlKCk7XG4gICAgZG9tYWluID0gW107XG4gICAgZm9yICh2YXIgaSA9IDAsIG4gPSBfLmxlbmd0aCwgZDsgaSA8IG47ICsraSkgaWYgKGQgPSBfW2ldLCBkICE9IG51bGwgJiYgIWlzTmFOKGQgPSArZCkpIGRvbWFpbi5wdXNoKGQpO1xuICAgIGRvbWFpbi5zb3J0KGFzY2VuZGluZyk7XG4gICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgfTtcblxuICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYW5nZSA9IHNsaWNlLmNhbGwoXyksIHJlc2NhbGUoKSkgOiByYW5nZS5zbGljZSgpO1xuICB9O1xuXG4gIHNjYWxlLnVua25vd24gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodW5rbm93biA9IF8sIHNjYWxlKSA6IHVua25vd247XG4gIH07XG5cbiAgc2NhbGUucXVhbnRpbGVzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRocmVzaG9sZHMuc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHF1YW50aWxlKClcbiAgICAgICAgLmRvbWFpbihkb21haW4pXG4gICAgICAgIC5yYW5nZShyYW5nZSlcbiAgICAgICAgLnVua25vd24odW5rbm93bik7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cbiIsImltcG9ydCB7YmlzZWN0fSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7c2xpY2V9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQge2xpbmVhcmlzaH0gZnJvbSBcIi4vbGluZWFyXCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBxdWFudGl6ZSgpIHtcbiAgdmFyIHgwID0gMCxcbiAgICAgIHgxID0gMSxcbiAgICAgIG4gPSAxLFxuICAgICAgZG9tYWluID0gWzAuNV0sXG4gICAgICByYW5nZSA9IFswLCAxXSxcbiAgICAgIHVua25vd247XG5cbiAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgIHJldHVybiB4IDw9IHggPyByYW5nZVtiaXNlY3QoZG9tYWluLCB4LCAwLCBuKV0gOiB1bmtub3duO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzY2FsZSgpIHtcbiAgICB2YXIgaSA9IC0xO1xuICAgIGRvbWFpbiA9IG5ldyBBcnJheShuKTtcbiAgICB3aGlsZSAoKytpIDwgbikgZG9tYWluW2ldID0gKChpICsgMSkgKiB4MSAtIChpIC0gbikgKiB4MCkgLyAobiArIDEpO1xuICAgIHJldHVybiBzY2FsZTtcbiAgfVxuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4MCA9ICtfWzBdLCB4MSA9ICtfWzFdLCByZXNjYWxlKCkpIDogW3gwLCB4MV07XG4gIH07XG5cbiAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9IChyYW5nZSA9IHNsaWNlLmNhbGwoXykpLmxlbmd0aCAtIDEsIHJlc2NhbGUoKSkgOiByYW5nZS5zbGljZSgpO1xuICB9O1xuXG4gIHNjYWxlLmludmVydEV4dGVudCA9IGZ1bmN0aW9uKHkpIHtcbiAgICB2YXIgaSA9IHJhbmdlLmluZGV4T2YoeSk7XG4gICAgcmV0dXJuIGkgPCAwID8gW05hTiwgTmFOXVxuICAgICAgICA6IGkgPCAxID8gW3gwLCBkb21haW5bMF1dXG4gICAgICAgIDogaSA+PSBuID8gW2RvbWFpbltuIC0gMV0sIHgxXVxuICAgICAgICA6IFtkb21haW5baSAtIDFdLCBkb21haW5baV1dO1xuICB9O1xuXG4gIHNjYWxlLnVua25vd24gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodW5rbm93biA9IF8sIHNjYWxlKSA6IHNjYWxlO1xuICB9O1xuXG4gIHNjYWxlLnRocmVzaG9sZHMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZG9tYWluLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBxdWFudGl6ZSgpXG4gICAgICAgIC5kb21haW4oW3gwLCB4MV0pXG4gICAgICAgIC5yYW5nZShyYW5nZSlcbiAgICAgICAgLnVua25vd24odW5rbm93bik7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShsaW5lYXJpc2goc2NhbGUpLCBhcmd1bWVudHMpO1xufVxuIiwiaW1wb3J0IHtpZGVudGl0eX0gZnJvbSBcIi4vY29udGludW91c1wiO1xuaW1wb3J0IHtpbml0SW50ZXJwb2xhdG9yfSBmcm9tIFwiLi9pbml0XCI7XG5pbXBvcnQge2xpbmVhcmlzaH0gZnJvbSBcIi4vbGluZWFyXCI7XG5pbXBvcnQge2xvZ2dpc2h9IGZyb20gXCIuL2xvZ1wiO1xuaW1wb3J0IHtzeW1sb2dpc2h9IGZyb20gXCIuL3N5bWxvZ1wiO1xuaW1wb3J0IHtwb3dpc2h9IGZyb20gXCIuL3Bvd1wiO1xuXG5mdW5jdGlvbiB0cmFuc2Zvcm1lcigpIHtcbiAgdmFyIHgwID0gMCxcbiAgICAgIHgxID0gMSxcbiAgICAgIHQwLFxuICAgICAgdDEsXG4gICAgICBrMTAsXG4gICAgICB0cmFuc2Zvcm0sXG4gICAgICBpbnRlcnBvbGF0b3IgPSBpZGVudGl0eSxcbiAgICAgIGNsYW1wID0gZmFsc2UsXG4gICAgICB1bmtub3duO1xuXG4gIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICByZXR1cm4gaXNOYU4oeCA9ICt4KSA/IHVua25vd24gOiBpbnRlcnBvbGF0b3IoazEwID09PSAwID8gMC41IDogKHggPSAodHJhbnNmb3JtKHgpIC0gdDApICogazEwLCBjbGFtcCA/IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIHgpKSA6IHgpKTtcbiAgfVxuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0MCA9IHRyYW5zZm9ybSh4MCA9ICtfWzBdKSwgdDEgPSB0cmFuc2Zvcm0oeDEgPSArX1sxXSksIGsxMCA9IHQwID09PSB0MSA/IDAgOiAxIC8gKHQxIC0gdDApLCBzY2FsZSkgOiBbeDAsIHgxXTtcbiAgfTtcblxuICBzY2FsZS5jbGFtcCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjbGFtcCA9ICEhXywgc2NhbGUpIDogY2xhbXA7XG4gIH07XG5cbiAgc2NhbGUuaW50ZXJwb2xhdG9yID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGludGVycG9sYXRvciA9IF8sIHNjYWxlKSA6IGludGVycG9sYXRvcjtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdHJhbnNmb3JtID0gdCwgdDAgPSB0KHgwKSwgdDEgPSB0KHgxKSwgazEwID0gdDAgPT09IHQxID8gMCA6IDEgLyAodDEgLSB0MCk7XG4gICAgcmV0dXJuIHNjYWxlO1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29weShzb3VyY2UsIHRhcmdldCkge1xuICByZXR1cm4gdGFyZ2V0XG4gICAgICAuZG9tYWluKHNvdXJjZS5kb21haW4oKSlcbiAgICAgIC5pbnRlcnBvbGF0b3Ioc291cmNlLmludGVycG9sYXRvcigpKVxuICAgICAgLmNsYW1wKHNvdXJjZS5jbGFtcCgpKVxuICAgICAgLnVua25vd24oc291cmNlLnVua25vd24oKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNlcXVlbnRpYWwoKSB7XG4gIHZhciBzY2FsZSA9IGxpbmVhcmlzaCh0cmFuc2Zvcm1lcigpKGlkZW50aXR5KSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBzZXF1ZW50aWFsKCkpO1xuICB9O1xuXG4gIHJldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VxdWVudGlhbExvZygpIHtcbiAgdmFyIHNjYWxlID0gbG9nZ2lzaCh0cmFuc2Zvcm1lcigpKS5kb21haW4oWzEsIDEwXSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBzZXF1ZW50aWFsTG9nKCkpLmJhc2Uoc2NhbGUuYmFzZSgpKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdEludGVycG9sYXRvci5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlcXVlbnRpYWxTeW1sb2coKSB7XG4gIHZhciBzY2FsZSA9IHN5bWxvZ2lzaCh0cmFuc2Zvcm1lcigpKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIHNlcXVlbnRpYWxTeW1sb2coKSkuY29uc3RhbnQoc2NhbGUuY29uc3RhbnQoKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXF1ZW50aWFsUG93KCkge1xuICB2YXIgc2NhbGUgPSBwb3dpc2godHJhbnNmb3JtZXIoKSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBzZXF1ZW50aWFsUG93KCkpLmV4cG9uZW50KHNjYWxlLmV4cG9uZW50KCkpO1xuICB9O1xuXG4gIHJldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VxdWVudGlhbFNxcnQoKSB7XG4gIHJldHVybiBzZXF1ZW50aWFsUG93LmFwcGx5KG51bGwsIGFyZ3VtZW50cykuZXhwb25lbnQoMC41KTtcbn1cbiIsImltcG9ydCB7YXNjZW5kaW5nLCBiaXNlY3R9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtpZGVudGl0eX0gZnJvbSBcIi4vY29udGludW91c1wiO1xuaW1wb3J0IHtpbml0SW50ZXJwb2xhdG9yfSBmcm9tIFwiLi9pbml0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNlcXVlbnRpYWxRdWFudGlsZSgpIHtcbiAgdmFyIGRvbWFpbiA9IFtdLFxuICAgICAgaW50ZXJwb2xhdG9yID0gaWRlbnRpdHk7XG5cbiAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgIGlmICghaXNOYU4oeCA9ICt4KSkgcmV0dXJuIGludGVycG9sYXRvcigoYmlzZWN0KGRvbWFpbiwgeCkgLSAxKSAvIChkb21haW4ubGVuZ3RoIC0gMSkpO1xuICB9XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRvbWFpbi5zbGljZSgpO1xuICAgIGRvbWFpbiA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwLCBuID0gXy5sZW5ndGgsIGQ7IGkgPCBuOyArK2kpIGlmIChkID0gX1tpXSwgZCAhPSBudWxsICYmICFpc05hTihkID0gK2QpKSBkb21haW4ucHVzaChkKTtcbiAgICBkb21haW4uc29ydChhc2NlbmRpbmcpO1xuICAgIHJldHVybiBzY2FsZTtcbiAgfTtcblxuICBzY2FsZS5pbnRlcnBvbGF0b3IgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaW50ZXJwb2xhdG9yID0gXywgc2NhbGUpIDogaW50ZXJwb2xhdG9yO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gc2VxdWVudGlhbFF1YW50aWxlKGludGVycG9sYXRvcikuZG9tYWluKGRvbWFpbik7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG4iLCJpbXBvcnQge2xpbmVhcmlzaH0gZnJvbSBcIi4vbGluZWFyXCI7XG5pbXBvcnQge2NvcHksIHRyYW5zZm9ybWVyfSBmcm9tIFwiLi9jb250aW51b3VzXCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuXG5mdW5jdGlvbiB0cmFuc2Zvcm1TeW1sb2coYykge1xuICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBNYXRoLnNpZ24oeCkgKiBNYXRoLmxvZzFwKE1hdGguYWJzKHggLyBjKSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybVN5bWV4cChjKSB7XG4gIHJldHVybiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIE1hdGguc2lnbih4KSAqIE1hdGguZXhwbTEoTWF0aC5hYnMoeCkpICogYztcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN5bWxvZ2lzaCh0cmFuc2Zvcm0pIHtcbiAgdmFyIGMgPSAxLCBzY2FsZSA9IHRyYW5zZm9ybSh0cmFuc2Zvcm1TeW1sb2coYyksIHRyYW5zZm9ybVN5bWV4cChjKSk7XG5cbiAgc2NhbGUuY29uc3RhbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0cmFuc2Zvcm0odHJhbnNmb3JtU3ltbG9nKGMgPSArXyksIHRyYW5zZm9ybVN5bWV4cChjKSkgOiBjO1xuICB9O1xuXG4gIHJldHVybiBsaW5lYXJpc2goc2NhbGUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzeW1sb2coKSB7XG4gIHZhciBzY2FsZSA9IHN5bWxvZ2lzaCh0cmFuc2Zvcm1lcigpKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIHN5bWxvZygpKS5jb25zdGFudChzY2FsZS5jb25zdGFudCgpKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdFJhbmdlLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuIiwiaW1wb3J0IHtiaXNlY3R9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCB7aW5pdFJhbmdlfSBmcm9tIFwiLi9pbml0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRocmVzaG9sZCgpIHtcbiAgdmFyIGRvbWFpbiA9IFswLjVdLFxuICAgICAgcmFuZ2UgPSBbMCwgMV0sXG4gICAgICB1bmtub3duLFxuICAgICAgbiA9IDE7XG5cbiAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgIHJldHVybiB4IDw9IHggPyByYW5nZVtiaXNlY3QoZG9tYWluLCB4LCAwLCBuKV0gOiB1bmtub3duO1xuICB9XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRvbWFpbiA9IHNsaWNlLmNhbGwoXyksIG4gPSBNYXRoLm1pbihkb21haW4ubGVuZ3RoLCByYW5nZS5sZW5ndGggLSAxKSwgc2NhbGUpIDogZG9tYWluLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocmFuZ2UgPSBzbGljZS5jYWxsKF8pLCBuID0gTWF0aC5taW4oZG9tYWluLmxlbmd0aCwgcmFuZ2UubGVuZ3RoIC0gMSksIHNjYWxlKSA6IHJhbmdlLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUuaW52ZXJ0RXh0ZW50ID0gZnVuY3Rpb24oeSkge1xuICAgIHZhciBpID0gcmFuZ2UuaW5kZXhPZih5KTtcbiAgICByZXR1cm4gW2RvbWFpbltpIC0gMV0sIGRvbWFpbltpXV07XG4gIH07XG5cbiAgc2NhbGUudW5rbm93biA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1bmtub3duID0gXywgc2NhbGUpIDogdW5rbm93bjtcbiAgfTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRocmVzaG9sZCgpXG4gICAgICAgIC5kb21haW4oZG9tYWluKVxuICAgICAgICAucmFuZ2UocmFuZ2UpXG4gICAgICAgIC51bmtub3duKHVua25vd24pO1xuICB9O1xuXG4gIHJldHVybiBpbml0UmFuZ2UuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG4iLCJpbXBvcnQge3RpY2tTdGVwfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7Zm9ybWF0LCBmb3JtYXRQcmVmaXgsIGZvcm1hdFNwZWNpZmllciwgcHJlY2lzaW9uRml4ZWQsIHByZWNpc2lvblByZWZpeCwgcHJlY2lzaW9uUm91bmR9IGZyb20gXCJkMy1mb3JtYXRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RhcnQsIHN0b3AsIGNvdW50LCBzcGVjaWZpZXIpIHtcbiAgdmFyIHN0ZXAgPSB0aWNrU3RlcChzdGFydCwgc3RvcCwgY291bnQpLFxuICAgICAgcHJlY2lzaW9uO1xuICBzcGVjaWZpZXIgPSBmb3JtYXRTcGVjaWZpZXIoc3BlY2lmaWVyID09IG51bGwgPyBcIixmXCIgOiBzcGVjaWZpZXIpO1xuICBzd2l0Y2ggKHNwZWNpZmllci50eXBlKSB7XG4gICAgY2FzZSBcInNcIjoge1xuICAgICAgdmFyIHZhbHVlID0gTWF0aC5tYXgoTWF0aC5hYnMoc3RhcnQpLCBNYXRoLmFicyhzdG9wKSk7XG4gICAgICBpZiAoc3BlY2lmaWVyLnByZWNpc2lvbiA9PSBudWxsICYmICFpc05hTihwcmVjaXNpb24gPSBwcmVjaXNpb25QcmVmaXgoc3RlcCwgdmFsdWUpKSkgc3BlY2lmaWVyLnByZWNpc2lvbiA9IHByZWNpc2lvbjtcbiAgICAgIHJldHVybiBmb3JtYXRQcmVmaXgoc3BlY2lmaWVyLCB2YWx1ZSk7XG4gICAgfVxuICAgIGNhc2UgXCJcIjpcbiAgICBjYXNlIFwiZVwiOlxuICAgIGNhc2UgXCJnXCI6XG4gICAgY2FzZSBcInBcIjpcbiAgICBjYXNlIFwiclwiOiB7XG4gICAgICBpZiAoc3BlY2lmaWVyLnByZWNpc2lvbiA9PSBudWxsICYmICFpc05hTihwcmVjaXNpb24gPSBwcmVjaXNpb25Sb3VuZChzdGVwLCBNYXRoLm1heChNYXRoLmFicyhzdGFydCksIE1hdGguYWJzKHN0b3ApKSkpKSBzcGVjaWZpZXIucHJlY2lzaW9uID0gcHJlY2lzaW9uIC0gKHNwZWNpZmllci50eXBlID09PSBcImVcIik7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgY2FzZSBcImZcIjpcbiAgICBjYXNlIFwiJVwiOiB7XG4gICAgICBpZiAoc3BlY2lmaWVyLnByZWNpc2lvbiA9PSBudWxsICYmICFpc05hTihwcmVjaXNpb24gPSBwcmVjaXNpb25GaXhlZChzdGVwKSkpIHNwZWNpZmllci5wcmVjaXNpb24gPSBwcmVjaXNpb24gLSAoc3BlY2lmaWVyLnR5cGUgPT09IFwiJVwiKSAqIDI7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZvcm1hdChzcGVjaWZpZXIpO1xufVxuIiwiaW1wb3J0IHtiaXNlY3RvciwgdGlja1N0ZXB9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHt0aW1lWWVhciwgdGltZU1vbnRoLCB0aW1lV2VlaywgdGltZURheSwgdGltZUhvdXIsIHRpbWVNaW51dGUsIHRpbWVTZWNvbmQsIHRpbWVNaWxsaXNlY29uZH0gZnJvbSBcImQzLXRpbWVcIjtcbmltcG9ydCB7dGltZUZvcm1hdH0gZnJvbSBcImQzLXRpbWUtZm9ybWF0XCI7XG5pbXBvcnQge21hcH0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCBjb250aW51b3VzLCB7Y29weSwgaWRlbnRpdHl9IGZyb20gXCIuL2NvbnRpbnVvdXNcIjtcbmltcG9ydCB7aW5pdFJhbmdlfSBmcm9tIFwiLi9pbml0XCI7XG5pbXBvcnQgbmljZSBmcm9tIFwiLi9uaWNlXCI7XG5cbnZhciBkdXJhdGlvblNlY29uZCA9IDEwMDAsXG4gICAgZHVyYXRpb25NaW51dGUgPSBkdXJhdGlvblNlY29uZCAqIDYwLFxuICAgIGR1cmF0aW9uSG91ciA9IGR1cmF0aW9uTWludXRlICogNjAsXG4gICAgZHVyYXRpb25EYXkgPSBkdXJhdGlvbkhvdXIgKiAyNCxcbiAgICBkdXJhdGlvbldlZWsgPSBkdXJhdGlvbkRheSAqIDcsXG4gICAgZHVyYXRpb25Nb250aCA9IGR1cmF0aW9uRGF5ICogMzAsXG4gICAgZHVyYXRpb25ZZWFyID0gZHVyYXRpb25EYXkgKiAzNjU7XG5cbmZ1bmN0aW9uIGRhdGUodCkge1xuICByZXR1cm4gbmV3IERhdGUodCk7XG59XG5cbmZ1bmN0aW9uIG51bWJlcih0KSB7XG4gIHJldHVybiB0IGluc3RhbmNlb2YgRGF0ZSA/ICt0IDogK25ldyBEYXRlKCt0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhbGVuZGFyKHllYXIsIG1vbnRoLCB3ZWVrLCBkYXksIGhvdXIsIG1pbnV0ZSwgc2Vjb25kLCBtaWxsaXNlY29uZCwgZm9ybWF0KSB7XG4gIHZhciBzY2FsZSA9IGNvbnRpbnVvdXMoaWRlbnRpdHksIGlkZW50aXR5KSxcbiAgICAgIGludmVydCA9IHNjYWxlLmludmVydCxcbiAgICAgIGRvbWFpbiA9IHNjYWxlLmRvbWFpbjtcblxuICB2YXIgZm9ybWF0TWlsbGlzZWNvbmQgPSBmb3JtYXQoXCIuJUxcIiksXG4gICAgICBmb3JtYXRTZWNvbmQgPSBmb3JtYXQoXCI6JVNcIiksXG4gICAgICBmb3JtYXRNaW51dGUgPSBmb3JtYXQoXCIlSTolTVwiKSxcbiAgICAgIGZvcm1hdEhvdXIgPSBmb3JtYXQoXCIlSSAlcFwiKSxcbiAgICAgIGZvcm1hdERheSA9IGZvcm1hdChcIiVhICVkXCIpLFxuICAgICAgZm9ybWF0V2VlayA9IGZvcm1hdChcIiViICVkXCIpLFxuICAgICAgZm9ybWF0TW9udGggPSBmb3JtYXQoXCIlQlwiKSxcbiAgICAgIGZvcm1hdFllYXIgPSBmb3JtYXQoXCIlWVwiKTtcblxuICB2YXIgdGlja0ludGVydmFscyA9IFtcbiAgICBbc2Vjb25kLCAgMSwgICAgICBkdXJhdGlvblNlY29uZF0sXG4gICAgW3NlY29uZCwgIDUsICA1ICogZHVyYXRpb25TZWNvbmRdLFxuICAgIFtzZWNvbmQsIDE1LCAxNSAqIGR1cmF0aW9uU2Vjb25kXSxcbiAgICBbc2Vjb25kLCAzMCwgMzAgKiBkdXJhdGlvblNlY29uZF0sXG4gICAgW21pbnV0ZSwgIDEsICAgICAgZHVyYXRpb25NaW51dGVdLFxuICAgIFttaW51dGUsICA1LCAgNSAqIGR1cmF0aW9uTWludXRlXSxcbiAgICBbbWludXRlLCAxNSwgMTUgKiBkdXJhdGlvbk1pbnV0ZV0sXG4gICAgW21pbnV0ZSwgMzAsIDMwICogZHVyYXRpb25NaW51dGVdLFxuICAgIFsgIGhvdXIsICAxLCAgICAgIGR1cmF0aW9uSG91ciAgXSxcbiAgICBbICBob3VyLCAgMywgIDMgKiBkdXJhdGlvbkhvdXIgIF0sXG4gICAgWyAgaG91ciwgIDYsICA2ICogZHVyYXRpb25Ib3VyICBdLFxuICAgIFsgIGhvdXIsIDEyLCAxMiAqIGR1cmF0aW9uSG91ciAgXSxcbiAgICBbICAgZGF5LCAgMSwgICAgICBkdXJhdGlvbkRheSAgIF0sXG4gICAgWyAgIGRheSwgIDIsICAyICogZHVyYXRpb25EYXkgICBdLFxuICAgIFsgIHdlZWssICAxLCAgICAgIGR1cmF0aW9uV2VlayAgXSxcbiAgICBbIG1vbnRoLCAgMSwgICAgICBkdXJhdGlvbk1vbnRoIF0sXG4gICAgWyBtb250aCwgIDMsICAzICogZHVyYXRpb25Nb250aCBdLFxuICAgIFsgIHllYXIsICAxLCAgICAgIGR1cmF0aW9uWWVhciAgXVxuICBdO1xuXG4gIGZ1bmN0aW9uIHRpY2tGb3JtYXQoZGF0ZSkge1xuICAgIHJldHVybiAoc2Vjb25kKGRhdGUpIDwgZGF0ZSA/IGZvcm1hdE1pbGxpc2Vjb25kXG4gICAgICAgIDogbWludXRlKGRhdGUpIDwgZGF0ZSA/IGZvcm1hdFNlY29uZFxuICAgICAgICA6IGhvdXIoZGF0ZSkgPCBkYXRlID8gZm9ybWF0TWludXRlXG4gICAgICAgIDogZGF5KGRhdGUpIDwgZGF0ZSA/IGZvcm1hdEhvdXJcbiAgICAgICAgOiBtb250aChkYXRlKSA8IGRhdGUgPyAod2VlayhkYXRlKSA8IGRhdGUgPyBmb3JtYXREYXkgOiBmb3JtYXRXZWVrKVxuICAgICAgICA6IHllYXIoZGF0ZSkgPCBkYXRlID8gZm9ybWF0TW9udGhcbiAgICAgICAgOiBmb3JtYXRZZWFyKShkYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRpY2tJbnRlcnZhbChpbnRlcnZhbCwgc3RhcnQsIHN0b3AsIHN0ZXApIHtcbiAgICBpZiAoaW50ZXJ2YWwgPT0gbnVsbCkgaW50ZXJ2YWwgPSAxMDtcblxuICAgIC8vIElmIGEgZGVzaXJlZCB0aWNrIGNvdW50IGlzIHNwZWNpZmllZCwgcGljayBhIHJlYXNvbmFibGUgdGljayBpbnRlcnZhbFxuICAgIC8vIGJhc2VkIG9uIHRoZSBleHRlbnQgb2YgdGhlIGRvbWFpbiBhbmQgYSByb3VnaCBlc3RpbWF0ZSBvZiB0aWNrIHNpemUuXG4gICAgLy8gT3RoZXJ3aXNlLCBhc3N1bWUgaW50ZXJ2YWwgaXMgYWxyZWFkeSBhIHRpbWUgaW50ZXJ2YWwgYW5kIHVzZSBpdC5cbiAgICBpZiAodHlwZW9mIGludGVydmFsID09PSBcIm51bWJlclwiKSB7XG4gICAgICB2YXIgdGFyZ2V0ID0gTWF0aC5hYnMoc3RvcCAtIHN0YXJ0KSAvIGludGVydmFsLFxuICAgICAgICAgIGkgPSBiaXNlY3RvcihmdW5jdGlvbihpKSB7IHJldHVybiBpWzJdOyB9KS5yaWdodCh0aWNrSW50ZXJ2YWxzLCB0YXJnZXQpO1xuICAgICAgaWYgKGkgPT09IHRpY2tJbnRlcnZhbHMubGVuZ3RoKSB7XG4gICAgICAgIHN0ZXAgPSB0aWNrU3RlcChzdGFydCAvIGR1cmF0aW9uWWVhciwgc3RvcCAvIGR1cmF0aW9uWWVhciwgaW50ZXJ2YWwpO1xuICAgICAgICBpbnRlcnZhbCA9IHllYXI7XG4gICAgICB9IGVsc2UgaWYgKGkpIHtcbiAgICAgICAgaSA9IHRpY2tJbnRlcnZhbHNbdGFyZ2V0IC8gdGlja0ludGVydmFsc1tpIC0gMV1bMl0gPCB0aWNrSW50ZXJ2YWxzW2ldWzJdIC8gdGFyZ2V0ID8gaSAtIDEgOiBpXTtcbiAgICAgICAgc3RlcCA9IGlbMV07XG4gICAgICAgIGludGVydmFsID0gaVswXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0ZXAgPSBNYXRoLm1heCh0aWNrU3RlcChzdGFydCwgc3RvcCwgaW50ZXJ2YWwpLCAxKTtcbiAgICAgICAgaW50ZXJ2YWwgPSBtaWxsaXNlY29uZDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc3RlcCA9PSBudWxsID8gaW50ZXJ2YWwgOiBpbnRlcnZhbC5ldmVyeShzdGVwKTtcbiAgfVxuXG4gIHNjYWxlLmludmVydCA9IGZ1bmN0aW9uKHkpIHtcbiAgICByZXR1cm4gbmV3IERhdGUoaW52ZXJ0KHkpKTtcbiAgfTtcblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBkb21haW4obWFwLmNhbGwoXywgbnVtYmVyKSkgOiBkb21haW4oKS5tYXAoZGF0ZSk7XG4gIH07XG5cbiAgc2NhbGUudGlja3MgPSBmdW5jdGlvbihpbnRlcnZhbCwgc3RlcCkge1xuICAgIHZhciBkID0gZG9tYWluKCksXG4gICAgICAgIHQwID0gZFswXSxcbiAgICAgICAgdDEgPSBkW2QubGVuZ3RoIC0gMV0sXG4gICAgICAgIHIgPSB0MSA8IHQwLFxuICAgICAgICB0O1xuICAgIGlmIChyKSB0ID0gdDAsIHQwID0gdDEsIHQxID0gdDtcbiAgICB0ID0gdGlja0ludGVydmFsKGludGVydmFsLCB0MCwgdDEsIHN0ZXApO1xuICAgIHQgPSB0ID8gdC5yYW5nZSh0MCwgdDEgKyAxKSA6IFtdOyAvLyBpbmNsdXNpdmUgc3RvcFxuICAgIHJldHVybiByID8gdC5yZXZlcnNlKCkgOiB0O1xuICB9O1xuXG4gIHNjYWxlLnRpY2tGb3JtYXQgPSBmdW5jdGlvbihjb3VudCwgc3BlY2lmaWVyKSB7XG4gICAgcmV0dXJuIHNwZWNpZmllciA9PSBudWxsID8gdGlja0Zvcm1hdCA6IGZvcm1hdChzcGVjaWZpZXIpO1xuICB9O1xuXG4gIHNjYWxlLm5pY2UgPSBmdW5jdGlvbihpbnRlcnZhbCwgc3RlcCkge1xuICAgIHZhciBkID0gZG9tYWluKCk7XG4gICAgcmV0dXJuIChpbnRlcnZhbCA9IHRpY2tJbnRlcnZhbChpbnRlcnZhbCwgZFswXSwgZFtkLmxlbmd0aCAtIDFdLCBzdGVwKSlcbiAgICAgICAgPyBkb21haW4obmljZShkLCBpbnRlcnZhbCkpXG4gICAgICAgIDogc2NhbGU7XG4gIH07XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBjYWxlbmRhcih5ZWFyLCBtb250aCwgd2VlaywgZGF5LCBob3VyLCBtaW51dGUsIHNlY29uZCwgbWlsbGlzZWNvbmQsIGZvcm1hdCkpO1xuICB9O1xuXG4gIHJldHVybiBzY2FsZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBpbml0UmFuZ2UuYXBwbHkoY2FsZW5kYXIodGltZVllYXIsIHRpbWVNb250aCwgdGltZVdlZWssIHRpbWVEYXksIHRpbWVIb3VyLCB0aW1lTWludXRlLCB0aW1lU2Vjb25kLCB0aW1lTWlsbGlzZWNvbmQsIHRpbWVGb3JtYXQpLmRvbWFpbihbbmV3IERhdGUoMjAwMCwgMCwgMSksIG5ldyBEYXRlKDIwMDAsIDAsIDIpXSksIGFyZ3VtZW50cyk7XG59XG4iLCJpbXBvcnQge2NhbGVuZGFyfSBmcm9tIFwiLi90aW1lXCI7XG5pbXBvcnQge3V0Y0Zvcm1hdH0gZnJvbSBcImQzLXRpbWUtZm9ybWF0XCI7XG5pbXBvcnQge3V0Y1llYXIsIHV0Y01vbnRoLCB1dGNXZWVrLCB1dGNEYXksIHV0Y0hvdXIsIHV0Y01pbnV0ZSwgdXRjU2Vjb25kLCB1dGNNaWxsaXNlY29uZH0gZnJvbSBcImQzLXRpbWVcIjtcbmltcG9ydCB7aW5pdFJhbmdlfSBmcm9tIFwiLi9pbml0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gaW5pdFJhbmdlLmFwcGx5KGNhbGVuZGFyKHV0Y1llYXIsIHV0Y01vbnRoLCB1dGNXZWVrLCB1dGNEYXksIHV0Y0hvdXIsIHV0Y01pbnV0ZSwgdXRjU2Vjb25kLCB1dGNNaWxsaXNlY29uZCwgdXRjRm9ybWF0KS5kb21haW4oW0RhdGUuVVRDKDIwMDAsIDAsIDEpLCBEYXRlLlVUQygyMDAwLCAwLCAyKV0pLCBhcmd1bWVudHMpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJpbXBvcnQgY3JlYXRvciBmcm9tIFwiLi9jcmVhdG9yXCI7XG5pbXBvcnQgc2VsZWN0IGZyb20gXCIuL3NlbGVjdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lKSB7XG4gIHJldHVybiBzZWxlY3QoY3JlYXRvcihuYW1lKS5jYWxsKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkpO1xufVxuIiwiaW1wb3J0IG5hbWVzcGFjZSBmcm9tIFwiLi9uYW1lc3BhY2VcIjtcbmltcG9ydCB7eGh0bWx9IGZyb20gXCIuL25hbWVzcGFjZXNcIjtcblxuZnVuY3Rpb24gY3JlYXRvckluaGVyaXQobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGRvY3VtZW50ID0gdGhpcy5vd25lckRvY3VtZW50LFxuICAgICAgICB1cmkgPSB0aGlzLm5hbWVzcGFjZVVSSTtcbiAgICByZXR1cm4gdXJpID09PSB4aHRtbCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQubmFtZXNwYWNlVVJJID09PSB4aHRtbFxuICAgICAgICA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQobmFtZSlcbiAgICAgICAgOiBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlModXJpLCBuYW1lKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRvckZpeGVkKGZ1bGxuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lKSB7XG4gIHZhciBmdWxsbmFtZSA9IG5hbWVzcGFjZShuYW1lKTtcbiAgcmV0dXJuIChmdWxsbmFtZS5sb2NhbFxuICAgICAgPyBjcmVhdG9yRml4ZWRcbiAgICAgIDogY3JlYXRvckluaGVyaXQpKGZ1bGxuYW1lKTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBjcmVhdGV9IGZyb20gXCIuL2NyZWF0ZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGNyZWF0b3J9IGZyb20gXCIuL2NyZWF0b3JcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBsb2NhbH0gZnJvbSBcIi4vbG9jYWxcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBtYXRjaGVyfSBmcm9tIFwiLi9tYXRjaGVyXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbW91c2V9IGZyb20gXCIuL21vdXNlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbmFtZXNwYWNlfSBmcm9tIFwiLi9uYW1lc3BhY2VcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBuYW1lc3BhY2VzfSBmcm9tIFwiLi9uYW1lc3BhY2VzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY2xpZW50UG9pbnR9IGZyb20gXCIuL3BvaW50XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2VsZWN0fSBmcm9tIFwiLi9zZWxlY3RcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzZWxlY3RBbGx9IGZyb20gXCIuL3NlbGVjdEFsbFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNlbGVjdGlvbn0gZnJvbSBcIi4vc2VsZWN0aW9uL2luZGV4XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2VsZWN0b3J9IGZyb20gXCIuL3NlbGVjdG9yXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2VsZWN0b3JBbGx9IGZyb20gXCIuL3NlbGVjdG9yQWxsXCI7XG5leHBvcnQge3N0eWxlVmFsdWUgYXMgc3R5bGV9IGZyb20gXCIuL3NlbGVjdGlvbi9zdHlsZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRvdWNofSBmcm9tIFwiLi90b3VjaFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRvdWNoZXN9IGZyb20gXCIuL3RvdWNoZXNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB3aW5kb3d9IGZyb20gXCIuL3dpbmRvd1wiO1xuZXhwb3J0IHtldmVudCwgY3VzdG9tRXZlbnR9IGZyb20gXCIuL3NlbGVjdGlvbi9vblwiO1xuIiwidmFyIG5leHRJZCA9IDA7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxvY2FsKCkge1xuICByZXR1cm4gbmV3IExvY2FsO1xufVxuXG5mdW5jdGlvbiBMb2NhbCgpIHtcbiAgdGhpcy5fID0gXCJAXCIgKyAoKytuZXh0SWQpLnRvU3RyaW5nKDM2KTtcbn1cblxuTG9jYWwucHJvdG90eXBlID0gbG9jYWwucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogTG9jYWwsXG4gIGdldDogZnVuY3Rpb24obm9kZSkge1xuICAgIHZhciBpZCA9IHRoaXMuXztcbiAgICB3aGlsZSAoIShpZCBpbiBub2RlKSkgaWYgKCEobm9kZSA9IG5vZGUucGFyZW50Tm9kZSkpIHJldHVybjtcbiAgICByZXR1cm4gbm9kZVtpZF07XG4gIH0sXG4gIHNldDogZnVuY3Rpb24obm9kZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gbm9kZVt0aGlzLl9dID0gdmFsdWU7XG4gIH0sXG4gIHJlbW92ZTogZnVuY3Rpb24obm9kZSkge1xuICAgIHJldHVybiB0aGlzLl8gaW4gbm9kZSAmJiBkZWxldGUgbm9kZVt0aGlzLl9dO1xuICB9LFxuICB0b1N0cmluZzogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuXztcbiAgfVxufTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5tYXRjaGVzKHNlbGVjdG9yKTtcbiAgfTtcbn1cbiIsImltcG9ydCBzb3VyY2VFdmVudCBmcm9tIFwiLi9zb3VyY2VFdmVudFwiO1xuaW1wb3J0IHBvaW50IGZyb20gXCIuL3BvaW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUpIHtcbiAgdmFyIGV2ZW50ID0gc291cmNlRXZlbnQoKTtcbiAgaWYgKGV2ZW50LmNoYW5nZWRUb3VjaGVzKSBldmVudCA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdO1xuICByZXR1cm4gcG9pbnQobm9kZSwgZXZlbnQpO1xufVxuIiwiaW1wb3J0IG5hbWVzcGFjZXMgZnJvbSBcIi4vbmFtZXNwYWNlc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lKSB7XG4gIHZhciBwcmVmaXggPSBuYW1lICs9IFwiXCIsIGkgPSBwcmVmaXguaW5kZXhPZihcIjpcIik7XG4gIGlmIChpID49IDAgJiYgKHByZWZpeCA9IG5hbWUuc2xpY2UoMCwgaSkpICE9PSBcInhtbG5zXCIpIG5hbWUgPSBuYW1lLnNsaWNlKGkgKyAxKTtcbiAgcmV0dXJuIG5hbWVzcGFjZXMuaGFzT3duUHJvcGVydHkocHJlZml4KSA/IHtzcGFjZTogbmFtZXNwYWNlc1twcmVmaXhdLCBsb2NhbDogbmFtZX0gOiBuYW1lO1xufVxuIiwiZXhwb3J0IHZhciB4aHRtbCA9IFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHN2ZzogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICB4aHRtbDogeGh0bWwsXG4gIHhsaW5rOiBcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIixcbiAgeG1sOiBcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLFxuICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3htbG5zL1wiXG59O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSwgZXZlbnQpIHtcbiAgdmFyIHN2ZyA9IG5vZGUub3duZXJTVkdFbGVtZW50IHx8IG5vZGU7XG5cbiAgaWYgKHN2Zy5jcmVhdGVTVkdQb2ludCkge1xuICAgIHZhciBwb2ludCA9IHN2Zy5jcmVhdGVTVkdQb2ludCgpO1xuICAgIHBvaW50LnggPSBldmVudC5jbGllbnRYLCBwb2ludC55ID0gZXZlbnQuY2xpZW50WTtcbiAgICBwb2ludCA9IHBvaW50Lm1hdHJpeFRyYW5zZm9ybShub2RlLmdldFNjcmVlbkNUTSgpLmludmVyc2UoKSk7XG4gICAgcmV0dXJuIFtwb2ludC54LCBwb2ludC55XTtcbiAgfVxuXG4gIHZhciByZWN0ID0gbm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgcmV0dXJuIFtldmVudC5jbGllbnRYIC0gcmVjdC5sZWZ0IC0gbm9kZS5jbGllbnRMZWZ0LCBldmVudC5jbGllbnRZIC0gcmVjdC50b3AgLSBub2RlLmNsaWVudFRvcF07XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbiwgcm9vdH0gZnJvbSBcIi4vc2VsZWN0aW9uL2luZGV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gIHJldHVybiB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCJcbiAgICAgID8gbmV3IFNlbGVjdGlvbihbW2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpXV0sIFtkb2N1bWVudC5kb2N1bWVudEVsZW1lbnRdKVxuICAgICAgOiBuZXcgU2VsZWN0aW9uKFtbc2VsZWN0b3JdXSwgcm9vdCk7XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbiwgcm9vdH0gZnJvbSBcIi4vc2VsZWN0aW9uL2luZGV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gIHJldHVybiB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCJcbiAgICAgID8gbmV3IFNlbGVjdGlvbihbZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvcildLCBbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XSlcbiAgICAgIDogbmV3IFNlbGVjdGlvbihbc2VsZWN0b3IgPT0gbnVsbCA/IFtdIDogc2VsZWN0b3JdLCByb290KTtcbn1cbiIsImltcG9ydCBjcmVhdG9yIGZyb20gXCIuLi9jcmVhdG9yXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUpIHtcbiAgdmFyIGNyZWF0ZSA9IHR5cGVvZiBuYW1lID09PSBcImZ1bmN0aW9uXCIgPyBuYW1lIDogY3JlYXRvcihuYW1lKTtcbiAgcmV0dXJuIHRoaXMuc2VsZWN0KGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmFwcGVuZENoaWxkKGNyZWF0ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfSk7XG59XG4iLCJpbXBvcnQgbmFtZXNwYWNlIGZyb20gXCIuLi9uYW1lc3BhY2VcIjtcblxuZnVuY3Rpb24gYXR0clJlbW92ZShuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0clJlbW92ZU5TKGZ1bGxuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJDb25zdGFudChuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyQ29uc3RhbnROUyhmdWxsbmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuc2V0QXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsLCB2YWx1ZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJGdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmICh2ID09IG51bGwpIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICAgIGVsc2UgdGhpcy5zZXRBdHRyaWJ1dGUobmFtZSwgdik7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJGdW5jdGlvbk5TKGZ1bGxuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmICh2ID09IG51bGwpIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgICBlbHNlIHRoaXMuc2V0QXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsLCB2KTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgdmFyIGZ1bGxuYW1lID0gbmFtZXNwYWNlKG5hbWUpO1xuXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgIHZhciBub2RlID0gdGhpcy5ub2RlKCk7XG4gICAgcmV0dXJuIGZ1bGxuYW1lLmxvY2FsXG4gICAgICAgID8gbm9kZS5nZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpXG4gICAgICAgIDogbm9kZS5nZXRBdHRyaWJ1dGUoZnVsbG5hbWUpO1xuICB9XG5cbiAgcmV0dXJuIHRoaXMuZWFjaCgodmFsdWUgPT0gbnVsbFxuICAgICAgPyAoZnVsbG5hbWUubG9jYWwgPyBhdHRyUmVtb3ZlTlMgOiBhdHRyUmVtb3ZlKSA6ICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyAoZnVsbG5hbWUubG9jYWwgPyBhdHRyRnVuY3Rpb25OUyA6IGF0dHJGdW5jdGlvbilcbiAgICAgIDogKGZ1bGxuYW1lLmxvY2FsID8gYXR0ckNvbnN0YW50TlMgOiBhdHRyQ29uc3RhbnQpKSkoZnVsbG5hbWUsIHZhbHVlKSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGNhbGxiYWNrID0gYXJndW1lbnRzWzBdO1xuICBhcmd1bWVudHNbMF0gPSB0aGlzO1xuICBjYWxsYmFjay5hcHBseShudWxsLCBhcmd1bWVudHMpO1xuICByZXR1cm4gdGhpcztcbn1cbiIsImZ1bmN0aW9uIGNsYXNzQXJyYXkoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcudHJpbSgpLnNwbGl0KC9efFxccysvKTtcbn1cblxuZnVuY3Rpb24gY2xhc3NMaXN0KG5vZGUpIHtcbiAgcmV0dXJuIG5vZGUuY2xhc3NMaXN0IHx8IG5ldyBDbGFzc0xpc3Qobm9kZSk7XG59XG5cbmZ1bmN0aW9uIENsYXNzTGlzdChub2RlKSB7XG4gIHRoaXMuX25vZGUgPSBub2RlO1xuICB0aGlzLl9uYW1lcyA9IGNsYXNzQXJyYXkobm9kZS5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKSB8fCBcIlwiKTtcbn1cblxuQ2xhc3NMaXN0LnByb3RvdHlwZSA9IHtcbiAgYWRkOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIGkgPSB0aGlzLl9uYW1lcy5pbmRleE9mKG5hbWUpO1xuICAgIGlmIChpIDwgMCkge1xuICAgICAgdGhpcy5fbmFtZXMucHVzaChuYW1lKTtcbiAgICAgIHRoaXMuX25vZGUuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgdGhpcy5fbmFtZXMuam9pbihcIiBcIikpO1xuICAgIH1cbiAgfSxcbiAgcmVtb3ZlOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIGkgPSB0aGlzLl9uYW1lcy5pbmRleE9mKG5hbWUpO1xuICAgIGlmIChpID49IDApIHtcbiAgICAgIHRoaXMuX25hbWVzLnNwbGljZShpLCAxKTtcbiAgICAgIHRoaXMuX25vZGUuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgdGhpcy5fbmFtZXMuam9pbihcIiBcIikpO1xuICAgIH1cbiAgfSxcbiAgY29udGFpbnM6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICByZXR1cm4gdGhpcy5fbmFtZXMuaW5kZXhPZihuYW1lKSA+PSAwO1xuICB9XG59O1xuXG5mdW5jdGlvbiBjbGFzc2VkQWRkKG5vZGUsIG5hbWVzKSB7XG4gIHZhciBsaXN0ID0gY2xhc3NMaXN0KG5vZGUpLCBpID0gLTEsIG4gPSBuYW1lcy5sZW5ndGg7XG4gIHdoaWxlICgrK2kgPCBuKSBsaXN0LmFkZChuYW1lc1tpXSk7XG59XG5cbmZ1bmN0aW9uIGNsYXNzZWRSZW1vdmUobm9kZSwgbmFtZXMpIHtcbiAgdmFyIGxpc3QgPSBjbGFzc0xpc3Qobm9kZSksIGkgPSAtMSwgbiA9IG5hbWVzLmxlbmd0aDtcbiAgd2hpbGUgKCsraSA8IG4pIGxpc3QucmVtb3ZlKG5hbWVzW2ldKTtcbn1cblxuZnVuY3Rpb24gY2xhc3NlZFRydWUobmFtZXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIGNsYXNzZWRBZGQodGhpcywgbmFtZXMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBjbGFzc2VkRmFsc2UobmFtZXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIGNsYXNzZWRSZW1vdmUodGhpcywgbmFtZXMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBjbGFzc2VkRnVuY3Rpb24obmFtZXMsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAodmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKSA/IGNsYXNzZWRBZGQgOiBjbGFzc2VkUmVtb3ZlKSh0aGlzLCBuYW1lcyk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBuYW1lcyA9IGNsYXNzQXJyYXkobmFtZSArIFwiXCIpO1xuXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgIHZhciBsaXN0ID0gY2xhc3NMaXN0KHRoaXMubm9kZSgpKSwgaSA9IC0xLCBuID0gbmFtZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoIWxpc3QuY29udGFpbnMobmFtZXNbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICByZXR1cm4gdGhpcy5lYWNoKCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyBjbGFzc2VkRnVuY3Rpb24gOiB2YWx1ZVxuICAgICAgPyBjbGFzc2VkVHJ1ZVxuICAgICAgOiBjbGFzc2VkRmFsc2UpKG5hbWVzLCB2YWx1ZSkpO1xufVxuIiwiZnVuY3Rpb24gc2VsZWN0aW9uX2Nsb25lU2hhbGxvdygpIHtcbiAgcmV0dXJuIHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcy5jbG9uZU5vZGUoZmFsc2UpLCB0aGlzLm5leHRTaWJsaW5nKTtcbn1cblxuZnVuY3Rpb24gc2VsZWN0aW9uX2Nsb25lRGVlcCgpIHtcbiAgcmV0dXJuIHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcy5jbG9uZU5vZGUodHJ1ZSksIHRoaXMubmV4dFNpYmxpbmcpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihkZWVwKSB7XG4gIHJldHVybiB0aGlzLnNlbGVjdChkZWVwID8gc2VsZWN0aW9uX2Nsb25lRGVlcCA6IHNlbGVjdGlvbl9jbG9uZVNoYWxsb3cpO1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4XCI7XG5pbXBvcnQge0VudGVyTm9kZX0gZnJvbSBcIi4vZW50ZXJcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi4vY29uc3RhbnRcIjtcblxudmFyIGtleVByZWZpeCA9IFwiJFwiOyAvLyBQcm90ZWN0IGFnYWluc3Qga2V5cyBsaWtlIOKAnF9fcHJvdG9fX+KAnS5cblxuZnVuY3Rpb24gYmluZEluZGV4KHBhcmVudCwgZ3JvdXAsIGVudGVyLCB1cGRhdGUsIGV4aXQsIGRhdGEpIHtcbiAgdmFyIGkgPSAwLFxuICAgICAgbm9kZSxcbiAgICAgIGdyb3VwTGVuZ3RoID0gZ3JvdXAubGVuZ3RoLFxuICAgICAgZGF0YUxlbmd0aCA9IGRhdGEubGVuZ3RoO1xuXG4gIC8vIFB1dCBhbnkgbm9uLW51bGwgbm9kZXMgdGhhdCBmaXQgaW50byB1cGRhdGUuXG4gIC8vIFB1dCBhbnkgbnVsbCBub2RlcyBpbnRvIGVudGVyLlxuICAvLyBQdXQgYW55IHJlbWFpbmluZyBkYXRhIGludG8gZW50ZXIuXG4gIGZvciAoOyBpIDwgZGF0YUxlbmd0aDsgKytpKSB7XG4gICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgbm9kZS5fX2RhdGFfXyA9IGRhdGFbaV07XG4gICAgICB1cGRhdGVbaV0gPSBub2RlO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbnRlcltpXSA9IG5ldyBFbnRlck5vZGUocGFyZW50LCBkYXRhW2ldKTtcbiAgICB9XG4gIH1cblxuICAvLyBQdXQgYW55IG5vbi1udWxsIG5vZGVzIHRoYXQgZG9u4oCZdCBmaXQgaW50byBleGl0LlxuICBmb3IgKDsgaSA8IGdyb3VwTGVuZ3RoOyArK2kpIHtcbiAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICBleGl0W2ldID0gbm9kZTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYmluZEtleShwYXJlbnQsIGdyb3VwLCBlbnRlciwgdXBkYXRlLCBleGl0LCBkYXRhLCBrZXkpIHtcbiAgdmFyIGksXG4gICAgICBub2RlLFxuICAgICAgbm9kZUJ5S2V5VmFsdWUgPSB7fSxcbiAgICAgIGdyb3VwTGVuZ3RoID0gZ3JvdXAubGVuZ3RoLFxuICAgICAgZGF0YUxlbmd0aCA9IGRhdGEubGVuZ3RoLFxuICAgICAga2V5VmFsdWVzID0gbmV3IEFycmF5KGdyb3VwTGVuZ3RoKSxcbiAgICAgIGtleVZhbHVlO1xuXG4gIC8vIENvbXB1dGUgdGhlIGtleSBmb3IgZWFjaCBub2RlLlxuICAvLyBJZiBtdWx0aXBsZSBub2RlcyBoYXZlIHRoZSBzYW1lIGtleSwgdGhlIGR1cGxpY2F0ZXMgYXJlIGFkZGVkIHRvIGV4aXQuXG4gIGZvciAoaSA9IDA7IGkgPCBncm91cExlbmd0aDsgKytpKSB7XG4gICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAga2V5VmFsdWVzW2ldID0ga2V5VmFsdWUgPSBrZXlQcmVmaXggKyBrZXkuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCk7XG4gICAgICBpZiAoa2V5VmFsdWUgaW4gbm9kZUJ5S2V5VmFsdWUpIHtcbiAgICAgICAgZXhpdFtpXSA9IG5vZGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub2RlQnlLZXlWYWx1ZVtrZXlWYWx1ZV0gPSBub2RlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIENvbXB1dGUgdGhlIGtleSBmb3IgZWFjaCBkYXR1bS5cbiAgLy8gSWYgdGhlcmUgYSBub2RlIGFzc29jaWF0ZWQgd2l0aCB0aGlzIGtleSwgam9pbiBhbmQgYWRkIGl0IHRvIHVwZGF0ZS5cbiAgLy8gSWYgdGhlcmUgaXMgbm90IChvciB0aGUga2V5IGlzIGEgZHVwbGljYXRlKSwgYWRkIGl0IHRvIGVudGVyLlxuICBmb3IgKGkgPSAwOyBpIDwgZGF0YUxlbmd0aDsgKytpKSB7XG4gICAga2V5VmFsdWUgPSBrZXlQcmVmaXggKyBrZXkuY2FsbChwYXJlbnQsIGRhdGFbaV0sIGksIGRhdGEpO1xuICAgIGlmIChub2RlID0gbm9kZUJ5S2V5VmFsdWVba2V5VmFsdWVdKSB7XG4gICAgICB1cGRhdGVbaV0gPSBub2RlO1xuICAgICAgbm9kZS5fX2RhdGFfXyA9IGRhdGFbaV07XG4gICAgICBub2RlQnlLZXlWYWx1ZVtrZXlWYWx1ZV0gPSBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbnRlcltpXSA9IG5ldyBFbnRlck5vZGUocGFyZW50LCBkYXRhW2ldKTtcbiAgICB9XG4gIH1cblxuICAvLyBBZGQgYW55IHJlbWFpbmluZyBub2RlcyB0aGF0IHdlcmUgbm90IGJvdW5kIHRvIGRhdGEgdG8gZXhpdC5cbiAgZm9yIChpID0gMDsgaSA8IGdyb3VwTGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgKG5vZGVCeUtleVZhbHVlW2tleVZhbHVlc1tpXV0gPT09IG5vZGUpKSB7XG4gICAgICBleGl0W2ldID0gbm9kZTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUsIGtleSkge1xuICBpZiAoIXZhbHVlKSB7XG4gICAgZGF0YSA9IG5ldyBBcnJheSh0aGlzLnNpemUoKSksIGogPSAtMTtcbiAgICB0aGlzLmVhY2goZnVuY3Rpb24oZCkgeyBkYXRhWysral0gPSBkOyB9KTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIHZhciBiaW5kID0ga2V5ID8gYmluZEtleSA6IGJpbmRJbmRleCxcbiAgICAgIHBhcmVudHMgPSB0aGlzLl9wYXJlbnRzLFxuICAgICAgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzO1xuXG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdmFsdWUgPSBjb25zdGFudCh2YWx1ZSk7XG5cbiAgZm9yICh2YXIgbSA9IGdyb3Vwcy5sZW5ndGgsIHVwZGF0ZSA9IG5ldyBBcnJheShtKSwgZW50ZXIgPSBuZXcgQXJyYXkobSksIGV4aXQgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgdmFyIHBhcmVudCA9IHBhcmVudHNbal0sXG4gICAgICAgIGdyb3VwID0gZ3JvdXBzW2pdLFxuICAgICAgICBncm91cExlbmd0aCA9IGdyb3VwLmxlbmd0aCxcbiAgICAgICAgZGF0YSA9IHZhbHVlLmNhbGwocGFyZW50LCBwYXJlbnQgJiYgcGFyZW50Ll9fZGF0YV9fLCBqLCBwYXJlbnRzKSxcbiAgICAgICAgZGF0YUxlbmd0aCA9IGRhdGEubGVuZ3RoLFxuICAgICAgICBlbnRlckdyb3VwID0gZW50ZXJbal0gPSBuZXcgQXJyYXkoZGF0YUxlbmd0aCksXG4gICAgICAgIHVwZGF0ZUdyb3VwID0gdXBkYXRlW2pdID0gbmV3IEFycmF5KGRhdGFMZW5ndGgpLFxuICAgICAgICBleGl0R3JvdXAgPSBleGl0W2pdID0gbmV3IEFycmF5KGdyb3VwTGVuZ3RoKTtcblxuICAgIGJpbmQocGFyZW50LCBncm91cCwgZW50ZXJHcm91cCwgdXBkYXRlR3JvdXAsIGV4aXRHcm91cCwgZGF0YSwga2V5KTtcblxuICAgIC8vIE5vdyBjb25uZWN0IHRoZSBlbnRlciBub2RlcyB0byB0aGVpciBmb2xsb3dpbmcgdXBkYXRlIG5vZGUsIHN1Y2ggdGhhdFxuICAgIC8vIGFwcGVuZENoaWxkIGNhbiBpbnNlcnQgdGhlIG1hdGVyaWFsaXplZCBlbnRlciBub2RlIGJlZm9yZSB0aGlzIG5vZGUsXG4gICAgLy8gcmF0aGVyIHRoYW4gYXQgdGhlIGVuZCBvZiB0aGUgcGFyZW50IG5vZGUuXG4gICAgZm9yICh2YXIgaTAgPSAwLCBpMSA9IDAsIHByZXZpb3VzLCBuZXh0OyBpMCA8IGRhdGFMZW5ndGg7ICsraTApIHtcbiAgICAgIGlmIChwcmV2aW91cyA9IGVudGVyR3JvdXBbaTBdKSB7XG4gICAgICAgIGlmIChpMCA+PSBpMSkgaTEgPSBpMCArIDE7XG4gICAgICAgIHdoaWxlICghKG5leHQgPSB1cGRhdGVHcm91cFtpMV0pICYmICsraTEgPCBkYXRhTGVuZ3RoKTtcbiAgICAgICAgcHJldmlvdXMuX25leHQgPSBuZXh0IHx8IG51bGw7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlID0gbmV3IFNlbGVjdGlvbih1cGRhdGUsIHBhcmVudHMpO1xuICB1cGRhdGUuX2VudGVyID0gZW50ZXI7XG4gIHVwZGF0ZS5fZXhpdCA9IGV4aXQ7XG4gIHJldHVybiB1cGRhdGU7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgPyB0aGlzLnByb3BlcnR5KFwiX19kYXRhX19cIiwgdmFsdWUpXG4gICAgICA6IHRoaXMubm9kZSgpLl9fZGF0YV9fO1xufVxuIiwiaW1wb3J0IGRlZmF1bHRWaWV3IGZyb20gXCIuLi93aW5kb3dcIjtcblxuZnVuY3Rpb24gZGlzcGF0Y2hFdmVudChub2RlLCB0eXBlLCBwYXJhbXMpIHtcbiAgdmFyIHdpbmRvdyA9IGRlZmF1bHRWaWV3KG5vZGUpLFxuICAgICAgZXZlbnQgPSB3aW5kb3cuQ3VzdG9tRXZlbnQ7XG5cbiAgaWYgKHR5cGVvZiBldmVudCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZXZlbnQgPSBuZXcgZXZlbnQodHlwZSwgcGFyYW1zKTtcbiAgfSBlbHNlIHtcbiAgICBldmVudCA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFdmVudChcIkV2ZW50XCIpO1xuICAgIGlmIChwYXJhbXMpIGV2ZW50LmluaXRFdmVudCh0eXBlLCBwYXJhbXMuYnViYmxlcywgcGFyYW1zLmNhbmNlbGFibGUpLCBldmVudC5kZXRhaWwgPSBwYXJhbXMuZGV0YWlsO1xuICAgIGVsc2UgZXZlbnQuaW5pdEV2ZW50KHR5cGUsIGZhbHNlLCBmYWxzZSk7XG4gIH1cblxuICBub2RlLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xufVxuXG5mdW5jdGlvbiBkaXNwYXRjaENvbnN0YW50KHR5cGUsIHBhcmFtcykge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGRpc3BhdGNoRXZlbnQodGhpcywgdHlwZSwgcGFyYW1zKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZGlzcGF0Y2hGdW5jdGlvbih0eXBlLCBwYXJhbXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkaXNwYXRjaEV2ZW50KHRoaXMsIHR5cGUsIHBhcmFtcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odHlwZSwgcGFyYW1zKSB7XG4gIHJldHVybiB0aGlzLmVhY2goKHR5cGVvZiBwYXJhbXMgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyBkaXNwYXRjaEZ1bmN0aW9uXG4gICAgICA6IGRpc3BhdGNoQ29uc3RhbnQpKHR5cGUsIHBhcmFtcykpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2spIHtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIGogPSAwLCBtID0gZ3JvdXBzLmxlbmd0aDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBpID0gMCwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZTsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkgY2FsbGJhY2suY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuICF0aGlzLm5vZGUoKTtcbn1cbiIsImltcG9ydCBzcGFyc2UgZnJvbSBcIi4vc3BhcnNlXCI7XG5pbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHRoaXMuX2VudGVyIHx8IHRoaXMuX2dyb3Vwcy5tYXAoc3BhcnNlKSwgdGhpcy5fcGFyZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBFbnRlck5vZGUocGFyZW50LCBkYXR1bSkge1xuICB0aGlzLm93bmVyRG9jdW1lbnQgPSBwYXJlbnQub3duZXJEb2N1bWVudDtcbiAgdGhpcy5uYW1lc3BhY2VVUkkgPSBwYXJlbnQubmFtZXNwYWNlVVJJO1xuICB0aGlzLl9uZXh0ID0gbnVsbDtcbiAgdGhpcy5fcGFyZW50ID0gcGFyZW50O1xuICB0aGlzLl9fZGF0YV9fID0gZGF0dW07XG59XG5cbkVudGVyTm9kZS5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBFbnRlck5vZGUsXG4gIGFwcGVuZENoaWxkOiBmdW5jdGlvbihjaGlsZCkgeyByZXR1cm4gdGhpcy5fcGFyZW50Lmluc2VydEJlZm9yZShjaGlsZCwgdGhpcy5fbmV4dCk7IH0sXG4gIGluc2VydEJlZm9yZTogZnVuY3Rpb24oY2hpbGQsIG5leHQpIHsgcmV0dXJuIHRoaXMuX3BhcmVudC5pbnNlcnRCZWZvcmUoY2hpbGQsIG5leHQpOyB9LFxuICBxdWVyeVNlbGVjdG9yOiBmdW5jdGlvbihzZWxlY3RvcikgeyByZXR1cm4gdGhpcy5fcGFyZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpOyB9LFxuICBxdWVyeVNlbGVjdG9yQWxsOiBmdW5jdGlvbihzZWxlY3RvcikgeyByZXR1cm4gdGhpcy5fcGFyZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpOyB9XG59O1xuIiwiaW1wb3J0IHNwYXJzZSBmcm9tIFwiLi9zcGFyc2VcIjtcbmltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24odGhpcy5fZXhpdCB8fCB0aGlzLl9ncm91cHMubWFwKHNwYXJzZSksIHRoaXMuX3BhcmVudHMpO1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4XCI7XG5pbXBvcnQgbWF0Y2hlciBmcm9tIFwiLi4vbWF0Y2hlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihtYXRjaCkge1xuICBpZiAodHlwZW9mIG1hdGNoICE9PSBcImZ1bmN0aW9uXCIpIG1hdGNoID0gbWF0Y2hlcihtYXRjaCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBzdWJncm91cCA9IHN1Ymdyb3Vwc1tqXSA9IFtdLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIG1hdGNoLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApKSB7XG4gICAgICAgIHN1Ymdyb3VwLnB1c2gobm9kZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24oc3ViZ3JvdXBzLCB0aGlzLl9wYXJlbnRzKTtcbn1cbiIsImZ1bmN0aW9uIGh0bWxSZW1vdmUoKSB7XG4gIHRoaXMuaW5uZXJIVE1MID0gXCJcIjtcbn1cblxuZnVuY3Rpb24gaHRtbENvbnN0YW50KHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmlubmVySFRNTCA9IHZhbHVlO1xuICB9O1xufVxuXG5mdW5jdGlvbiBodG1sRnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB0aGlzLmlubmVySFRNTCA9IHYgPT0gbnVsbCA/IFwiXCIgOiB2O1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgPyB0aGlzLmVhY2godmFsdWUgPT0gbnVsbFxuICAgICAgICAgID8gaHRtbFJlbW92ZSA6ICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gaHRtbEZ1bmN0aW9uXG4gICAgICAgICAgOiBodG1sQ29uc3RhbnQpKHZhbHVlKSlcbiAgICAgIDogdGhpcy5ub2RlKCkuaW5uZXJIVE1MO1xufVxuIiwiaW1wb3J0IHNlbGVjdGlvbl9zZWxlY3QgZnJvbSBcIi4vc2VsZWN0XCI7XG5pbXBvcnQgc2VsZWN0aW9uX3NlbGVjdEFsbCBmcm9tIFwiLi9zZWxlY3RBbGxcIjtcbmltcG9ydCBzZWxlY3Rpb25fZmlsdGVyIGZyb20gXCIuL2ZpbHRlclwiO1xuaW1wb3J0IHNlbGVjdGlvbl9kYXRhIGZyb20gXCIuL2RhdGFcIjtcbmltcG9ydCBzZWxlY3Rpb25fZW50ZXIgZnJvbSBcIi4vZW50ZXJcIjtcbmltcG9ydCBzZWxlY3Rpb25fZXhpdCBmcm9tIFwiLi9leGl0XCI7XG5pbXBvcnQgc2VsZWN0aW9uX2pvaW4gZnJvbSBcIi4vam9pblwiO1xuaW1wb3J0IHNlbGVjdGlvbl9tZXJnZSBmcm9tIFwiLi9tZXJnZVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9vcmRlciBmcm9tIFwiLi9vcmRlclwiO1xuaW1wb3J0IHNlbGVjdGlvbl9zb3J0IGZyb20gXCIuL3NvcnRcIjtcbmltcG9ydCBzZWxlY3Rpb25fY2FsbCBmcm9tIFwiLi9jYWxsXCI7XG5pbXBvcnQgc2VsZWN0aW9uX25vZGVzIGZyb20gXCIuL25vZGVzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX25vZGUgZnJvbSBcIi4vbm9kZVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9zaXplIGZyb20gXCIuL3NpemVcIjtcbmltcG9ydCBzZWxlY3Rpb25fZW1wdHkgZnJvbSBcIi4vZW1wdHlcIjtcbmltcG9ydCBzZWxlY3Rpb25fZWFjaCBmcm9tIFwiLi9lYWNoXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2F0dHIgZnJvbSBcIi4vYXR0clwiO1xuaW1wb3J0IHNlbGVjdGlvbl9zdHlsZSBmcm9tIFwiLi9zdHlsZVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9wcm9wZXJ0eSBmcm9tIFwiLi9wcm9wZXJ0eVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9jbGFzc2VkIGZyb20gXCIuL2NsYXNzZWRcIjtcbmltcG9ydCBzZWxlY3Rpb25fdGV4dCBmcm9tIFwiLi90ZXh0XCI7XG5pbXBvcnQgc2VsZWN0aW9uX2h0bWwgZnJvbSBcIi4vaHRtbFwiO1xuaW1wb3J0IHNlbGVjdGlvbl9yYWlzZSBmcm9tIFwiLi9yYWlzZVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9sb3dlciBmcm9tIFwiLi9sb3dlclwiO1xuaW1wb3J0IHNlbGVjdGlvbl9hcHBlbmQgZnJvbSBcIi4vYXBwZW5kXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2luc2VydCBmcm9tIFwiLi9pbnNlcnRcIjtcbmltcG9ydCBzZWxlY3Rpb25fcmVtb3ZlIGZyb20gXCIuL3JlbW92ZVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9jbG9uZSBmcm9tIFwiLi9jbG9uZVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9kYXR1bSBmcm9tIFwiLi9kYXR1bVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9vbiBmcm9tIFwiLi9vblwiO1xuaW1wb3J0IHNlbGVjdGlvbl9kaXNwYXRjaCBmcm9tIFwiLi9kaXNwYXRjaFwiO1xuXG5leHBvcnQgdmFyIHJvb3QgPSBbbnVsbF07XG5cbmV4cG9ydCBmdW5jdGlvbiBTZWxlY3Rpb24oZ3JvdXBzLCBwYXJlbnRzKSB7XG4gIHRoaXMuX2dyb3VwcyA9IGdyb3VwcztcbiAgdGhpcy5fcGFyZW50cyA9IHBhcmVudHM7XG59XG5cbmZ1bmN0aW9uIHNlbGVjdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24oW1tkb2N1bWVudC5kb2N1bWVudEVsZW1lbnRdXSwgcm9vdCk7XG59XG5cblNlbGVjdGlvbi5wcm90b3R5cGUgPSBzZWxlY3Rpb24ucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogU2VsZWN0aW9uLFxuICBzZWxlY3Q6IHNlbGVjdGlvbl9zZWxlY3QsXG4gIHNlbGVjdEFsbDogc2VsZWN0aW9uX3NlbGVjdEFsbCxcbiAgZmlsdGVyOiBzZWxlY3Rpb25fZmlsdGVyLFxuICBkYXRhOiBzZWxlY3Rpb25fZGF0YSxcbiAgZW50ZXI6IHNlbGVjdGlvbl9lbnRlcixcbiAgZXhpdDogc2VsZWN0aW9uX2V4aXQsXG4gIGpvaW46IHNlbGVjdGlvbl9qb2luLFxuICBtZXJnZTogc2VsZWN0aW9uX21lcmdlLFxuICBvcmRlcjogc2VsZWN0aW9uX29yZGVyLFxuICBzb3J0OiBzZWxlY3Rpb25fc29ydCxcbiAgY2FsbDogc2VsZWN0aW9uX2NhbGwsXG4gIG5vZGVzOiBzZWxlY3Rpb25fbm9kZXMsXG4gIG5vZGU6IHNlbGVjdGlvbl9ub2RlLFxuICBzaXplOiBzZWxlY3Rpb25fc2l6ZSxcbiAgZW1wdHk6IHNlbGVjdGlvbl9lbXB0eSxcbiAgZWFjaDogc2VsZWN0aW9uX2VhY2gsXG4gIGF0dHI6IHNlbGVjdGlvbl9hdHRyLFxuICBzdHlsZTogc2VsZWN0aW9uX3N0eWxlLFxuICBwcm9wZXJ0eTogc2VsZWN0aW9uX3Byb3BlcnR5LFxuICBjbGFzc2VkOiBzZWxlY3Rpb25fY2xhc3NlZCxcbiAgdGV4dDogc2VsZWN0aW9uX3RleHQsXG4gIGh0bWw6IHNlbGVjdGlvbl9odG1sLFxuICByYWlzZTogc2VsZWN0aW9uX3JhaXNlLFxuICBsb3dlcjogc2VsZWN0aW9uX2xvd2VyLFxuICBhcHBlbmQ6IHNlbGVjdGlvbl9hcHBlbmQsXG4gIGluc2VydDogc2VsZWN0aW9uX2luc2VydCxcbiAgcmVtb3ZlOiBzZWxlY3Rpb25fcmVtb3ZlLFxuICBjbG9uZTogc2VsZWN0aW9uX2Nsb25lLFxuICBkYXR1bTogc2VsZWN0aW9uX2RhdHVtLFxuICBvbjogc2VsZWN0aW9uX29uLFxuICBkaXNwYXRjaDogc2VsZWN0aW9uX2Rpc3BhdGNoXG59O1xuXG5leHBvcnQgZGVmYXVsdCBzZWxlY3Rpb247XG4iLCJpbXBvcnQgY3JlYXRvciBmcm9tIFwiLi4vY3JlYXRvclwiO1xuaW1wb3J0IHNlbGVjdG9yIGZyb20gXCIuLi9zZWxlY3RvclwiO1xuXG5mdW5jdGlvbiBjb25zdGFudE51bGwoKSB7XG4gIHJldHVybiBudWxsO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCBiZWZvcmUpIHtcbiAgdmFyIGNyZWF0ZSA9IHR5cGVvZiBuYW1lID09PSBcImZ1bmN0aW9uXCIgPyBuYW1lIDogY3JlYXRvcihuYW1lKSxcbiAgICAgIHNlbGVjdCA9IGJlZm9yZSA9PSBudWxsID8gY29uc3RhbnROdWxsIDogdHlwZW9mIGJlZm9yZSA9PT0gXCJmdW5jdGlvblwiID8gYmVmb3JlIDogc2VsZWN0b3IoYmVmb3JlKTtcbiAgcmV0dXJuIHRoaXMuc2VsZWN0KGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmluc2VydEJlZm9yZShjcmVhdGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgc2VsZWN0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgbnVsbCk7XG4gIH0pO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob25lbnRlciwgb251cGRhdGUsIG9uZXhpdCkge1xuICB2YXIgZW50ZXIgPSB0aGlzLmVudGVyKCksIHVwZGF0ZSA9IHRoaXMsIGV4aXQgPSB0aGlzLmV4aXQoKTtcbiAgZW50ZXIgPSB0eXBlb2Ygb25lbnRlciA9PT0gXCJmdW5jdGlvblwiID8gb25lbnRlcihlbnRlcikgOiBlbnRlci5hcHBlbmQob25lbnRlciArIFwiXCIpO1xuICBpZiAob251cGRhdGUgIT0gbnVsbCkgdXBkYXRlID0gb251cGRhdGUodXBkYXRlKTtcbiAgaWYgKG9uZXhpdCA9PSBudWxsKSBleGl0LnJlbW92ZSgpOyBlbHNlIG9uZXhpdChleGl0KTtcbiAgcmV0dXJuIGVudGVyICYmIHVwZGF0ZSA/IGVudGVyLm1lcmdlKHVwZGF0ZSkub3JkZXIoKSA6IHVwZGF0ZTtcbn1cbiIsImZ1bmN0aW9uIGxvd2VyKCkge1xuICBpZiAodGhpcy5wcmV2aW91c1NpYmxpbmcpIHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcywgdGhpcy5wYXJlbnROb2RlLmZpcnN0Q2hpbGQpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaChsb3dlcik7XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0aW9uKSB7XG5cbiAgZm9yICh2YXIgZ3JvdXBzMCA9IHRoaXMuX2dyb3VwcywgZ3JvdXBzMSA9IHNlbGVjdGlvbi5fZ3JvdXBzLCBtMCA9IGdyb3VwczAubGVuZ3RoLCBtMSA9IGdyb3VwczEubGVuZ3RoLCBtID0gTWF0aC5taW4obTAsIG0xKSwgbWVyZ2VzID0gbmV3IEFycmF5KG0wKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cDAgPSBncm91cHMwW2pdLCBncm91cDEgPSBncm91cHMxW2pdLCBuID0gZ3JvdXAwLmxlbmd0aCwgbWVyZ2UgPSBtZXJnZXNbal0gPSBuZXcgQXJyYXkobiksIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwMFtpXSB8fCBncm91cDFbaV0pIHtcbiAgICAgICAgbWVyZ2VbaV0gPSBub2RlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBqIDwgbTA7ICsraikge1xuICAgIG1lcmdlc1tqXSA9IGdyb3VwczBbal07XG4gIH1cblxuICByZXR1cm4gbmV3IFNlbGVjdGlvbihtZXJnZXMsIHRoaXMuX3BhcmVudHMpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBqID0gMCwgbSA9IGdyb3Vwcy5sZW5ndGg7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgaSA9IDAsIG4gPSBncm91cC5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgIHZhciBub2RlID0gZ3JvdXBbaV07XG4gICAgICBpZiAobm9kZSkgcmV0dXJuIG5vZGU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIG5vZGVzID0gbmV3IEFycmF5KHRoaXMuc2l6ZSgpKSwgaSA9IC0xO1xuICB0aGlzLmVhY2goZnVuY3Rpb24oKSB7IG5vZGVzWysraV0gPSB0aGlzOyB9KTtcbiAgcmV0dXJuIG5vZGVzO1xufVxuIiwidmFyIGZpbHRlckV2ZW50cyA9IHt9O1xuXG5leHBvcnQgdmFyIGV2ZW50ID0gbnVsbDtcblxuaWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiAgaWYgKCEoXCJvbm1vdXNlZW50ZXJcIiBpbiBlbGVtZW50KSkge1xuICAgIGZpbHRlckV2ZW50cyA9IHttb3VzZWVudGVyOiBcIm1vdXNlb3ZlclwiLCBtb3VzZWxlYXZlOiBcIm1vdXNlb3V0XCJ9O1xuICB9XG59XG5cbmZ1bmN0aW9uIGZpbHRlckNvbnRleHRMaXN0ZW5lcihsaXN0ZW5lciwgaW5kZXgsIGdyb3VwKSB7XG4gIGxpc3RlbmVyID0gY29udGV4dExpc3RlbmVyKGxpc3RlbmVyLCBpbmRleCwgZ3JvdXApO1xuICByZXR1cm4gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICB2YXIgcmVsYXRlZCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQ7XG4gICAgaWYgKCFyZWxhdGVkIHx8IChyZWxhdGVkICE9PSB0aGlzICYmICEocmVsYXRlZC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbih0aGlzKSAmIDgpKSkge1xuICAgICAgbGlzdGVuZXIuY2FsbCh0aGlzLCBldmVudCk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBjb250ZXh0TGlzdGVuZXIobGlzdGVuZXIsIGluZGV4LCBncm91cCkge1xuICByZXR1cm4gZnVuY3Rpb24oZXZlbnQxKSB7XG4gICAgdmFyIGV2ZW50MCA9IGV2ZW50OyAvLyBFdmVudHMgY2FuIGJlIHJlZW50cmFudCAoZS5nLiwgZm9jdXMpLlxuICAgIGV2ZW50ID0gZXZlbnQxO1xuICAgIHRyeSB7XG4gICAgICBsaXN0ZW5lci5jYWxsKHRoaXMsIHRoaXMuX19kYXRhX18sIGluZGV4LCBncm91cCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGV2ZW50ID0gZXZlbnQwO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gcGFyc2VUeXBlbmFtZXModHlwZW5hbWVzKSB7XG4gIHJldHVybiB0eXBlbmFtZXMudHJpbSgpLnNwbGl0KC9efFxccysvKS5tYXAoZnVuY3Rpb24odCkge1xuICAgIHZhciBuYW1lID0gXCJcIiwgaSA9IHQuaW5kZXhPZihcIi5cIik7XG4gICAgaWYgKGkgPj0gMCkgbmFtZSA9IHQuc2xpY2UoaSArIDEpLCB0ID0gdC5zbGljZSgwLCBpKTtcbiAgICByZXR1cm4ge3R5cGU6IHQsIG5hbWU6IG5hbWV9O1xuICB9KTtcbn1cblxuZnVuY3Rpb24gb25SZW1vdmUodHlwZW5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBvbiA9IHRoaXMuX19vbjtcbiAgICBpZiAoIW9uKSByZXR1cm47XG4gICAgZm9yICh2YXIgaiA9IDAsIGkgPSAtMSwgbSA9IG9uLmxlbmd0aCwgbzsgaiA8IG07ICsraikge1xuICAgICAgaWYgKG8gPSBvbltqXSwgKCF0eXBlbmFtZS50eXBlIHx8IG8udHlwZSA9PT0gdHlwZW5hbWUudHlwZSkgJiYgby5uYW1lID09PSB0eXBlbmFtZS5uYW1lKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihvLnR5cGUsIG8ubGlzdGVuZXIsIG8uY2FwdHVyZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvblsrK2ldID0gbztcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKCsraSkgb24ubGVuZ3RoID0gaTtcbiAgICBlbHNlIGRlbGV0ZSB0aGlzLl9fb247XG4gIH07XG59XG5cbmZ1bmN0aW9uIG9uQWRkKHR5cGVuYW1lLCB2YWx1ZSwgY2FwdHVyZSkge1xuICB2YXIgd3JhcCA9IGZpbHRlckV2ZW50cy5oYXNPd25Qcm9wZXJ0eSh0eXBlbmFtZS50eXBlKSA/IGZpbHRlckNvbnRleHRMaXN0ZW5lciA6IGNvbnRleHRMaXN0ZW5lcjtcbiAgcmV0dXJuIGZ1bmN0aW9uKGQsIGksIGdyb3VwKSB7XG4gICAgdmFyIG9uID0gdGhpcy5fX29uLCBvLCBsaXN0ZW5lciA9IHdyYXAodmFsdWUsIGksIGdyb3VwKTtcbiAgICBpZiAob24pIGZvciAodmFyIGogPSAwLCBtID0gb24ubGVuZ3RoOyBqIDwgbTsgKytqKSB7XG4gICAgICBpZiAoKG8gPSBvbltqXSkudHlwZSA9PT0gdHlwZW5hbWUudHlwZSAmJiBvLm5hbWUgPT09IHR5cGVuYW1lLm5hbWUpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKG8udHlwZSwgby5saXN0ZW5lciwgby5jYXB0dXJlKTtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKG8udHlwZSwgby5saXN0ZW5lciA9IGxpc3RlbmVyLCBvLmNhcHR1cmUgPSBjYXB0dXJlKTtcbiAgICAgICAgby52YWx1ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcih0eXBlbmFtZS50eXBlLCBsaXN0ZW5lciwgY2FwdHVyZSk7XG4gICAgbyA9IHt0eXBlOiB0eXBlbmFtZS50eXBlLCBuYW1lOiB0eXBlbmFtZS5uYW1lLCB2YWx1ZTogdmFsdWUsIGxpc3RlbmVyOiBsaXN0ZW5lciwgY2FwdHVyZTogY2FwdHVyZX07XG4gICAgaWYgKCFvbikgdGhpcy5fX29uID0gW29dO1xuICAgIGVsc2Ugb24ucHVzaChvKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odHlwZW5hbWUsIHZhbHVlLCBjYXB0dXJlKSB7XG4gIHZhciB0eXBlbmFtZXMgPSBwYXJzZVR5cGVuYW1lcyh0eXBlbmFtZSArIFwiXCIpLCBpLCBuID0gdHlwZW5hbWVzLmxlbmd0aCwgdDtcblxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB2YXIgb24gPSB0aGlzLm5vZGUoKS5fX29uO1xuICAgIGlmIChvbikgZm9yICh2YXIgaiA9IDAsIG0gPSBvbi5sZW5ndGgsIG87IGogPCBtOyArK2opIHtcbiAgICAgIGZvciAoaSA9IDAsIG8gPSBvbltqXTsgaSA8IG47ICsraSkge1xuICAgICAgICBpZiAoKHQgPSB0eXBlbmFtZXNbaV0pLnR5cGUgPT09IG8udHlwZSAmJiB0Lm5hbWUgPT09IG8ubmFtZSkge1xuICAgICAgICAgIHJldHVybiBvLnZhbHVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybjtcbiAgfVxuXG4gIG9uID0gdmFsdWUgPyBvbkFkZCA6IG9uUmVtb3ZlO1xuICBpZiAoY2FwdHVyZSA9PSBudWxsKSBjYXB0dXJlID0gZmFsc2U7XG4gIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHRoaXMuZWFjaChvbih0eXBlbmFtZXNbaV0sIHZhbHVlLCBjYXB0dXJlKSk7XG4gIHJldHVybiB0aGlzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3VzdG9tRXZlbnQoZXZlbnQxLCBsaXN0ZW5lciwgdGhhdCwgYXJncykge1xuICB2YXIgZXZlbnQwID0gZXZlbnQ7XG4gIGV2ZW50MS5zb3VyY2VFdmVudCA9IGV2ZW50O1xuICBldmVudCA9IGV2ZW50MTtcbiAgdHJ5IHtcbiAgICByZXR1cm4gbGlzdGVuZXIuYXBwbHkodGhhdCwgYXJncyk7XG4gIH0gZmluYWxseSB7XG4gICAgZXZlbnQgPSBldmVudDA7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgaiA9IC0xLCBtID0gZ3JvdXBzLmxlbmd0aDsgKytqIDwgbTspIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgaSA9IGdyb3VwLmxlbmd0aCAtIDEsIG5leHQgPSBncm91cFtpXSwgbm9kZTsgLS1pID49IDA7KSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgIGlmIChuZXh0ICYmIG5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24obmV4dCkgXiA0KSBuZXh0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5vZGUsIG5leHQpO1xuICAgICAgICBuZXh0ID0gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cbiIsImZ1bmN0aW9uIHByb3BlcnR5UmVtb3ZlKG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIGRlbGV0ZSB0aGlzW25hbWVdO1xuICB9O1xufVxuXG5mdW5jdGlvbiBwcm9wZXJ0eUNvbnN0YW50KG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzW25hbWVdID0gdmFsdWU7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHByb3BlcnR5RnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAodiA9PSBudWxsKSBkZWxldGUgdGhpc1tuYW1lXTtcbiAgICBlbHNlIHRoaXNbbmFtZV0gPSB2O1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDFcbiAgICAgID8gdGhpcy5lYWNoKCh2YWx1ZSA9PSBudWxsXG4gICAgICAgICAgPyBwcm9wZXJ0eVJlbW92ZSA6IHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgPyBwcm9wZXJ0eUZ1bmN0aW9uXG4gICAgICAgICAgOiBwcm9wZXJ0eUNvbnN0YW50KShuYW1lLCB2YWx1ZSkpXG4gICAgICA6IHRoaXMubm9kZSgpW25hbWVdO1xufVxuIiwiZnVuY3Rpb24gcmFpc2UoKSB7XG4gIGlmICh0aGlzLm5leHRTaWJsaW5nKSB0aGlzLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQodGhpcyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5lYWNoKHJhaXNlKTtcbn1cbiIsImZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgdmFyIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcbiAgaWYgKHBhcmVudCkgcGFyZW50LnJlbW92ZUNoaWxkKHRoaXMpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaChyZW1vdmUpO1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4XCI7XG5pbXBvcnQgc2VsZWN0b3IgZnJvbSBcIi4uL3NlbGVjdG9yXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdCkge1xuICBpZiAodHlwZW9mIHNlbGVjdCAhPT0gXCJmdW5jdGlvblwiKSBzZWxlY3QgPSBzZWxlY3RvcihzZWxlY3QpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc3ViZ3JvdXAgPSBzdWJncm91cHNbal0gPSBuZXcgQXJyYXkobiksIG5vZGUsIHN1Ym5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgKHN1Ym5vZGUgPSBzZWxlY3QuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCkpKSB7XG4gICAgICAgIGlmIChcIl9fZGF0YV9fXCIgaW4gbm9kZSkgc3Vibm9kZS5fX2RhdGFfXyA9IG5vZGUuX19kYXRhX187XG4gICAgICAgIHN1Ymdyb3VwW2ldID0gc3Vibm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFNlbGVjdGlvbihzdWJncm91cHMsIHRoaXMuX3BhcmVudHMpO1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4XCI7XG5pbXBvcnQgc2VsZWN0b3JBbGwgZnJvbSBcIi4uL3NlbGVjdG9yQWxsXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdCkge1xuICBpZiAodHlwZW9mIHNlbGVjdCAhPT0gXCJmdW5jdGlvblwiKSBzZWxlY3QgPSBzZWxlY3RvckFsbChzZWxlY3QpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IFtdLCBwYXJlbnRzID0gW10sIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgIHN1Ymdyb3Vwcy5wdXNoKHNlbGVjdC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSk7XG4gICAgICAgIHBhcmVudHMucHVzaChub2RlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFNlbGVjdGlvbihzdWJncm91cHMsIHBhcmVudHMpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBzaXplID0gMDtcbiAgdGhpcy5lYWNoKGZ1bmN0aW9uKCkgeyArK3NpemU7IH0pO1xuICByZXR1cm4gc2l6ZTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb21wYXJlKSB7XG4gIGlmICghY29tcGFyZSkgY29tcGFyZSA9IGFzY2VuZGluZztcblxuICBmdW5jdGlvbiBjb21wYXJlTm9kZShhLCBiKSB7XG4gICAgcmV0dXJuIGEgJiYgYiA/IGNvbXBhcmUoYS5fX2RhdGFfXywgYi5fX2RhdGFfXykgOiAhYSAtICFiO1xuICB9XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc29ydGdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc29ydGdyb3VwID0gc29ydGdyb3Vwc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgc29ydGdyb3VwW2ldID0gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gICAgc29ydGdyb3VwLnNvcnQoY29tcGFyZU5vZGUpO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24oc29ydGdyb3VwcywgdGhpcy5fcGFyZW50cykub3JkZXIoKTtcbn1cblxuZnVuY3Rpb24gYXNjZW5kaW5nKGEsIGIpIHtcbiAgcmV0dXJuIGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiBhID49IGIgPyAwIDogTmFOO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odXBkYXRlKSB7XG4gIHJldHVybiBuZXcgQXJyYXkodXBkYXRlLmxlbmd0aCk7XG59XG4iLCJpbXBvcnQgZGVmYXVsdFZpZXcgZnJvbSBcIi4uL3dpbmRvd1wiO1xuXG5mdW5jdGlvbiBzdHlsZVJlbW92ZShuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUNvbnN0YW50KG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmICh2ID09IG51bGwpIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7XG4gICAgZWxzZSB0aGlzLnN0eWxlLnNldFByb3BlcnR5KG5hbWUsIHYsIHByaW9yaXR5KTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMVxuICAgICAgPyB0aGlzLmVhY2goKHZhbHVlID09IG51bGxcbiAgICAgICAgICAgID8gc3R5bGVSZW1vdmUgOiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgICAgPyBzdHlsZUZ1bmN0aW9uXG4gICAgICAgICAgICA6IHN0eWxlQ29uc3RhbnQpKG5hbWUsIHZhbHVlLCBwcmlvcml0eSA9PSBudWxsID8gXCJcIiA6IHByaW9yaXR5KSlcbiAgICAgIDogc3R5bGVWYWx1ZSh0aGlzLm5vZGUoKSwgbmFtZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdHlsZVZhbHVlKG5vZGUsIG5hbWUpIHtcbiAgcmV0dXJuIG5vZGUuc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShuYW1lKVxuICAgICAgfHwgZGVmYXVsdFZpZXcobm9kZSkuZ2V0Q29tcHV0ZWRTdHlsZShub2RlLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpO1xufVxuIiwiZnVuY3Rpb24gdGV4dFJlbW92ZSgpIHtcbiAgdGhpcy50ZXh0Q29udGVudCA9IFwiXCI7XG59XG5cbmZ1bmN0aW9uIHRleHRDb25zdGFudCh2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy50ZXh0Q29udGVudCA9IHZhbHVlO1xuICB9O1xufVxuXG5mdW5jdGlvbiB0ZXh0RnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB0aGlzLnRleHRDb250ZW50ID0gdiA9PSBudWxsID8gXCJcIiA6IHY7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuZWFjaCh2YWx1ZSA9PSBudWxsXG4gICAgICAgICAgPyB0ZXh0UmVtb3ZlIDogKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgPyB0ZXh0RnVuY3Rpb25cbiAgICAgICAgICA6IHRleHRDb25zdGFudCkodmFsdWUpKVxuICAgICAgOiB0aGlzLm5vZGUoKS50ZXh0Q29udGVudDtcbn1cbiIsImZ1bmN0aW9uIG5vbmUoKSB7fVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3Rvcikge1xuICByZXR1cm4gc2VsZWN0b3IgPT0gbnVsbCA/IG5vbmUgOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcbiAgfTtcbn1cbiIsImZ1bmN0aW9uIGVtcHR5KCkge1xuICByZXR1cm4gW107XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gIHJldHVybiBzZWxlY3RvciA9PSBudWxsID8gZW1wdHkgOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcbiAgfTtcbn1cbiIsImltcG9ydCB7ZXZlbnR9IGZyb20gXCIuL3NlbGVjdGlvbi9vblwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGN1cnJlbnQgPSBldmVudCwgc291cmNlO1xuICB3aGlsZSAoc291cmNlID0gY3VycmVudC5zb3VyY2VFdmVudCkgY3VycmVudCA9IHNvdXJjZTtcbiAgcmV0dXJuIGN1cnJlbnQ7XG59XG4iLCJpbXBvcnQgc291cmNlRXZlbnQgZnJvbSBcIi4vc291cmNlRXZlbnRcIjtcbmltcG9ydCBwb2ludCBmcm9tIFwiLi9wb2ludFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlLCB0b3VjaGVzLCBpZGVudGlmaWVyKSB7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykgaWRlbnRpZmllciA9IHRvdWNoZXMsIHRvdWNoZXMgPSBzb3VyY2VFdmVudCgpLmNoYW5nZWRUb3VjaGVzO1xuXG4gIGZvciAodmFyIGkgPSAwLCBuID0gdG91Y2hlcyA/IHRvdWNoZXMubGVuZ3RoIDogMCwgdG91Y2g7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAoKHRvdWNoID0gdG91Y2hlc1tpXSkuaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmV0dXJuIHBvaW50KG5vZGUsIHRvdWNoKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cbiIsImltcG9ydCBzb3VyY2VFdmVudCBmcm9tIFwiLi9zb3VyY2VFdmVudFwiO1xuaW1wb3J0IHBvaW50IGZyb20gXCIuL3BvaW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUsIHRvdWNoZXMpIHtcbiAgaWYgKHRvdWNoZXMgPT0gbnVsbCkgdG91Y2hlcyA9IHNvdXJjZUV2ZW50KCkudG91Y2hlcztcblxuICBmb3IgKHZhciBpID0gMCwgbiA9IHRvdWNoZXMgPyB0b3VjaGVzLmxlbmd0aCA6IDAsIHBvaW50cyA9IG5ldyBBcnJheShuKTsgaSA8IG47ICsraSkge1xuICAgIHBvaW50c1tpXSA9IHBvaW50KG5vZGUsIHRvdWNoZXNbaV0pO1xuICB9XG5cbiAgcmV0dXJuIHBvaW50cztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUpIHtcbiAgcmV0dXJuIChub2RlLm93bmVyRG9jdW1lbnQgJiYgbm9kZS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3KSAvLyBub2RlIGlzIGEgTm9kZVxuICAgICAgfHwgKG5vZGUuZG9jdW1lbnQgJiYgbm9kZSkgLy8gbm9kZSBpcyBhIFdpbmRvd1xuICAgICAgfHwgbm9kZS5kZWZhdWx0VmlldzsgLy8gbm9kZSBpcyBhIERvY3VtZW50XG59XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCB7YWJzLCBhY29zLCBhc2luLCBhdGFuMiwgY29zLCBlcHNpbG9uLCBoYWxmUGksIG1heCwgbWluLCBwaSwgc2luLCBzcXJ0LCB0YXV9IGZyb20gXCIuL21hdGhcIjtcblxuZnVuY3Rpb24gYXJjSW5uZXJSYWRpdXMoZCkge1xuICByZXR1cm4gZC5pbm5lclJhZGl1cztcbn1cblxuZnVuY3Rpb24gYXJjT3V0ZXJSYWRpdXMoZCkge1xuICByZXR1cm4gZC5vdXRlclJhZGl1cztcbn1cblxuZnVuY3Rpb24gYXJjU3RhcnRBbmdsZShkKSB7XG4gIHJldHVybiBkLnN0YXJ0QW5nbGU7XG59XG5cbmZ1bmN0aW9uIGFyY0VuZEFuZ2xlKGQpIHtcbiAgcmV0dXJuIGQuZW5kQW5nbGU7XG59XG5cbmZ1bmN0aW9uIGFyY1BhZEFuZ2xlKGQpIHtcbiAgcmV0dXJuIGQgJiYgZC5wYWRBbmdsZTsgLy8gTm90ZTogb3B0aW9uYWwhXG59XG5cbmZ1bmN0aW9uIGludGVyc2VjdCh4MCwgeTAsIHgxLCB5MSwgeDIsIHkyLCB4MywgeTMpIHtcbiAgdmFyIHgxMCA9IHgxIC0geDAsIHkxMCA9IHkxIC0geTAsXG4gICAgICB4MzIgPSB4MyAtIHgyLCB5MzIgPSB5MyAtIHkyLFxuICAgICAgdCA9IHkzMiAqIHgxMCAtIHgzMiAqIHkxMDtcbiAgaWYgKHQgKiB0IDwgZXBzaWxvbikgcmV0dXJuO1xuICB0ID0gKHgzMiAqICh5MCAtIHkyKSAtIHkzMiAqICh4MCAtIHgyKSkgLyB0O1xuICByZXR1cm4gW3gwICsgdCAqIHgxMCwgeTAgKyB0ICogeTEwXTtcbn1cblxuLy8gQ29tcHV0ZSBwZXJwZW5kaWN1bGFyIG9mZnNldCBsaW5lIG9mIGxlbmd0aCByYy5cbi8vIGh0dHA6Ly9tYXRod29ybGQud29sZnJhbS5jb20vQ2lyY2xlLUxpbmVJbnRlcnNlY3Rpb24uaHRtbFxuZnVuY3Rpb24gY29ybmVyVGFuZ2VudHMoeDAsIHkwLCB4MSwgeTEsIHIxLCByYywgY3cpIHtcbiAgdmFyIHgwMSA9IHgwIC0geDEsXG4gICAgICB5MDEgPSB5MCAtIHkxLFxuICAgICAgbG8gPSAoY3cgPyByYyA6IC1yYykgLyBzcXJ0KHgwMSAqIHgwMSArIHkwMSAqIHkwMSksXG4gICAgICBveCA9IGxvICogeTAxLFxuICAgICAgb3kgPSAtbG8gKiB4MDEsXG4gICAgICB4MTEgPSB4MCArIG94LFxuICAgICAgeTExID0geTAgKyBveSxcbiAgICAgIHgxMCA9IHgxICsgb3gsXG4gICAgICB5MTAgPSB5MSArIG95LFxuICAgICAgeDAwID0gKHgxMSArIHgxMCkgLyAyLFxuICAgICAgeTAwID0gKHkxMSArIHkxMCkgLyAyLFxuICAgICAgZHggPSB4MTAgLSB4MTEsXG4gICAgICBkeSA9IHkxMCAtIHkxMSxcbiAgICAgIGQyID0gZHggKiBkeCArIGR5ICogZHksXG4gICAgICByID0gcjEgLSByYyxcbiAgICAgIEQgPSB4MTEgKiB5MTAgLSB4MTAgKiB5MTEsXG4gICAgICBkID0gKGR5IDwgMCA/IC0xIDogMSkgKiBzcXJ0KG1heCgwLCByICogciAqIGQyIC0gRCAqIEQpKSxcbiAgICAgIGN4MCA9IChEICogZHkgLSBkeCAqIGQpIC8gZDIsXG4gICAgICBjeTAgPSAoLUQgKiBkeCAtIGR5ICogZCkgLyBkMixcbiAgICAgIGN4MSA9IChEICogZHkgKyBkeCAqIGQpIC8gZDIsXG4gICAgICBjeTEgPSAoLUQgKiBkeCArIGR5ICogZCkgLyBkMixcbiAgICAgIGR4MCA9IGN4MCAtIHgwMCxcbiAgICAgIGR5MCA9IGN5MCAtIHkwMCxcbiAgICAgIGR4MSA9IGN4MSAtIHgwMCxcbiAgICAgIGR5MSA9IGN5MSAtIHkwMDtcblxuICAvLyBQaWNrIHRoZSBjbG9zZXIgb2YgdGhlIHR3byBpbnRlcnNlY3Rpb24gcG9pbnRzLlxuICAvLyBUT0RPIElzIHRoZXJlIGEgZmFzdGVyIHdheSB0byBkZXRlcm1pbmUgd2hpY2ggaW50ZXJzZWN0aW9uIHRvIHVzZT9cbiAgaWYgKGR4MCAqIGR4MCArIGR5MCAqIGR5MCA+IGR4MSAqIGR4MSArIGR5MSAqIGR5MSkgY3gwID0gY3gxLCBjeTAgPSBjeTE7XG5cbiAgcmV0dXJuIHtcbiAgICBjeDogY3gwLFxuICAgIGN5OiBjeTAsXG4gICAgeDAxOiAtb3gsXG4gICAgeTAxOiAtb3ksXG4gICAgeDExOiBjeDAgKiAocjEgLyByIC0gMSksXG4gICAgeTExOiBjeTAgKiAocjEgLyByIC0gMSlcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBpbm5lclJhZGl1cyA9IGFyY0lubmVyUmFkaXVzLFxuICAgICAgb3V0ZXJSYWRpdXMgPSBhcmNPdXRlclJhZGl1cyxcbiAgICAgIGNvcm5lclJhZGl1cyA9IGNvbnN0YW50KDApLFxuICAgICAgcGFkUmFkaXVzID0gbnVsbCxcbiAgICAgIHN0YXJ0QW5nbGUgPSBhcmNTdGFydEFuZ2xlLFxuICAgICAgZW5kQW5nbGUgPSBhcmNFbmRBbmdsZSxcbiAgICAgIHBhZEFuZ2xlID0gYXJjUGFkQW5nbGUsXG4gICAgICBjb250ZXh0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBhcmMoKSB7XG4gICAgdmFyIGJ1ZmZlcixcbiAgICAgICAgcixcbiAgICAgICAgcjAgPSAraW5uZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgcjEgPSArb3V0ZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgYTAgPSBzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgLSBoYWxmUGksXG4gICAgICAgIGExID0gZW5kQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSAtIGhhbGZQaSxcbiAgICAgICAgZGEgPSBhYnMoYTEgLSBhMCksXG4gICAgICAgIGN3ID0gYTEgPiBhMDtcblxuICAgIGlmICghY29udGV4dCkgY29udGV4dCA9IGJ1ZmZlciA9IHBhdGgoKTtcblxuICAgIC8vIEVuc3VyZSB0aGF0IHRoZSBvdXRlciByYWRpdXMgaXMgYWx3YXlzIGxhcmdlciB0aGFuIHRoZSBpbm5lciByYWRpdXMuXG4gICAgaWYgKHIxIDwgcjApIHIgPSByMSwgcjEgPSByMCwgcjAgPSByO1xuXG4gICAgLy8gSXMgaXQgYSBwb2ludD9cbiAgICBpZiAoIShyMSA+IGVwc2lsb24pKSBjb250ZXh0Lm1vdmVUbygwLCAwKTtcblxuICAgIC8vIE9yIGlzIGl0IGEgY2lyY2xlIG9yIGFubnVsdXM/XG4gICAgZWxzZSBpZiAoZGEgPiB0YXUgLSBlcHNpbG9uKSB7XG4gICAgICBjb250ZXh0Lm1vdmVUbyhyMSAqIGNvcyhhMCksIHIxICogc2luKGEwKSk7XG4gICAgICBjb250ZXh0LmFyYygwLCAwLCByMSwgYTAsIGExLCAhY3cpO1xuICAgICAgaWYgKHIwID4gZXBzaWxvbikge1xuICAgICAgICBjb250ZXh0Lm1vdmVUbyhyMCAqIGNvcyhhMSksIHIwICogc2luKGExKSk7XG4gICAgICAgIGNvbnRleHQuYXJjKDAsIDAsIHIwLCBhMSwgYTAsIGN3KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBPciBpcyBpdCBhIGNpcmN1bGFyIG9yIGFubnVsYXIgc2VjdG9yP1xuICAgIGVsc2Uge1xuICAgICAgdmFyIGEwMSA9IGEwLFxuICAgICAgICAgIGExMSA9IGExLFxuICAgICAgICAgIGEwMCA9IGEwLFxuICAgICAgICAgIGExMCA9IGExLFxuICAgICAgICAgIGRhMCA9IGRhLFxuICAgICAgICAgIGRhMSA9IGRhLFxuICAgICAgICAgIGFwID0gcGFkQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSAvIDIsXG4gICAgICAgICAgcnAgPSAoYXAgPiBlcHNpbG9uKSAmJiAocGFkUmFkaXVzID8gK3BhZFJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogc3FydChyMCAqIHIwICsgcjEgKiByMSkpLFxuICAgICAgICAgIHJjID0gbWluKGFicyhyMSAtIHIwKSAvIDIsICtjb3JuZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSksXG4gICAgICAgICAgcmMwID0gcmMsXG4gICAgICAgICAgcmMxID0gcmMsXG4gICAgICAgICAgdDAsXG4gICAgICAgICAgdDE7XG5cbiAgICAgIC8vIEFwcGx5IHBhZGRpbmc/IE5vdGUgdGhhdCBzaW5jZSByMSDiiaUgcjAsIGRhMSDiiaUgZGEwLlxuICAgICAgaWYgKHJwID4gZXBzaWxvbikge1xuICAgICAgICB2YXIgcDAgPSBhc2luKHJwIC8gcjAgKiBzaW4oYXApKSxcbiAgICAgICAgICAgIHAxID0gYXNpbihycCAvIHIxICogc2luKGFwKSk7XG4gICAgICAgIGlmICgoZGEwIC09IHAwICogMikgPiBlcHNpbG9uKSBwMCAqPSAoY3cgPyAxIDogLTEpLCBhMDAgKz0gcDAsIGExMCAtPSBwMDtcbiAgICAgICAgZWxzZSBkYTAgPSAwLCBhMDAgPSBhMTAgPSAoYTAgKyBhMSkgLyAyO1xuICAgICAgICBpZiAoKGRhMSAtPSBwMSAqIDIpID4gZXBzaWxvbikgcDEgKj0gKGN3ID8gMSA6IC0xKSwgYTAxICs9IHAxLCBhMTEgLT0gcDE7XG4gICAgICAgIGVsc2UgZGExID0gMCwgYTAxID0gYTExID0gKGEwICsgYTEpIC8gMjtcbiAgICAgIH1cblxuICAgICAgdmFyIHgwMSA9IHIxICogY29zKGEwMSksXG4gICAgICAgICAgeTAxID0gcjEgKiBzaW4oYTAxKSxcbiAgICAgICAgICB4MTAgPSByMCAqIGNvcyhhMTApLFxuICAgICAgICAgIHkxMCA9IHIwICogc2luKGExMCk7XG5cbiAgICAgIC8vIEFwcGx5IHJvdW5kZWQgY29ybmVycz9cbiAgICAgIGlmIChyYyA+IGVwc2lsb24pIHtcbiAgICAgICAgdmFyIHgxMSA9IHIxICogY29zKGExMSksXG4gICAgICAgICAgICB5MTEgPSByMSAqIHNpbihhMTEpLFxuICAgICAgICAgICAgeDAwID0gcjAgKiBjb3MoYTAwKSxcbiAgICAgICAgICAgIHkwMCA9IHIwICogc2luKGEwMCksXG4gICAgICAgICAgICBvYztcblxuICAgICAgICAvLyBSZXN0cmljdCB0aGUgY29ybmVyIHJhZGl1cyBhY2NvcmRpbmcgdG8gdGhlIHNlY3RvciBhbmdsZS5cbiAgICAgICAgaWYgKGRhIDwgcGkgJiYgKG9jID0gaW50ZXJzZWN0KHgwMSwgeTAxLCB4MDAsIHkwMCwgeDExLCB5MTEsIHgxMCwgeTEwKSkpIHtcbiAgICAgICAgICB2YXIgYXggPSB4MDEgLSBvY1swXSxcbiAgICAgICAgICAgICAgYXkgPSB5MDEgLSBvY1sxXSxcbiAgICAgICAgICAgICAgYnggPSB4MTEgLSBvY1swXSxcbiAgICAgICAgICAgICAgYnkgPSB5MTEgLSBvY1sxXSxcbiAgICAgICAgICAgICAga2MgPSAxIC8gc2luKGFjb3MoKGF4ICogYnggKyBheSAqIGJ5KSAvIChzcXJ0KGF4ICogYXggKyBheSAqIGF5KSAqIHNxcnQoYnggKiBieCArIGJ5ICogYnkpKSkgLyAyKSxcbiAgICAgICAgICAgICAgbGMgPSBzcXJ0KG9jWzBdICogb2NbMF0gKyBvY1sxXSAqIG9jWzFdKTtcbiAgICAgICAgICByYzAgPSBtaW4ocmMsIChyMCAtIGxjKSAvIChrYyAtIDEpKTtcbiAgICAgICAgICByYzEgPSBtaW4ocmMsIChyMSAtIGxjKSAvIChrYyArIDEpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBJcyB0aGUgc2VjdG9yIGNvbGxhcHNlZCB0byBhIGxpbmU/XG4gICAgICBpZiAoIShkYTEgPiBlcHNpbG9uKSkgY29udGV4dC5tb3ZlVG8oeDAxLCB5MDEpO1xuXG4gICAgICAvLyBEb2VzIHRoZSBzZWN0b3LigJlzIG91dGVyIHJpbmcgaGF2ZSByb3VuZGVkIGNvcm5lcnM/XG4gICAgICBlbHNlIGlmIChyYzEgPiBlcHNpbG9uKSB7XG4gICAgICAgIHQwID0gY29ybmVyVGFuZ2VudHMoeDAwLCB5MDAsIHgwMSwgeTAxLCByMSwgcmMxLCBjdyk7XG4gICAgICAgIHQxID0gY29ybmVyVGFuZ2VudHMoeDExLCB5MTEsIHgxMCwgeTEwLCByMSwgcmMxLCBjdyk7XG5cbiAgICAgICAgY29udGV4dC5tb3ZlVG8odDAuY3ggKyB0MC54MDEsIHQwLmN5ICsgdDAueTAxKTtcblxuICAgICAgICAvLyBIYXZlIHRoZSBjb3JuZXJzIG1lcmdlZD9cbiAgICAgICAgaWYgKHJjMSA8IHJjKSBjb250ZXh0LmFyYyh0MC5jeCwgdDAuY3ksIHJjMSwgYXRhbjIodDAueTAxLCB0MC54MDEpLCBhdGFuMih0MS55MDEsIHQxLngwMSksICFjdyk7XG5cbiAgICAgICAgLy8gT3RoZXJ3aXNlLCBkcmF3IHRoZSB0d28gY29ybmVycyBhbmQgdGhlIHJpbmcuXG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGNvbnRleHQuYXJjKHQwLmN4LCB0MC5jeSwgcmMxLCBhdGFuMih0MC55MDEsIHQwLngwMSksIGF0YW4yKHQwLnkxMSwgdDAueDExKSwgIWN3KTtcbiAgICAgICAgICBjb250ZXh0LmFyYygwLCAwLCByMSwgYXRhbjIodDAuY3kgKyB0MC55MTEsIHQwLmN4ICsgdDAueDExKSwgYXRhbjIodDEuY3kgKyB0MS55MTEsIHQxLmN4ICsgdDEueDExKSwgIWN3KTtcbiAgICAgICAgICBjb250ZXh0LmFyYyh0MS5jeCwgdDEuY3ksIHJjMSwgYXRhbjIodDEueTExLCB0MS54MTEpLCBhdGFuMih0MS55MDEsIHQxLngwMSksICFjdyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gT3IgaXMgdGhlIG91dGVyIHJpbmcganVzdCBhIGNpcmN1bGFyIGFyYz9cbiAgICAgIGVsc2UgY29udGV4dC5tb3ZlVG8oeDAxLCB5MDEpLCBjb250ZXh0LmFyYygwLCAwLCByMSwgYTAxLCBhMTEsICFjdyk7XG5cbiAgICAgIC8vIElzIHRoZXJlIG5vIGlubmVyIHJpbmcsIGFuZCBpdOKAmXMgYSBjaXJjdWxhciBzZWN0b3I/XG4gICAgICAvLyBPciBwZXJoYXBzIGl04oCZcyBhbiBhbm51bGFyIHNlY3RvciBjb2xsYXBzZWQgZHVlIHRvIHBhZGRpbmc/XG4gICAgICBpZiAoIShyMCA+IGVwc2lsb24pIHx8ICEoZGEwID4gZXBzaWxvbikpIGNvbnRleHQubGluZVRvKHgxMCwgeTEwKTtcblxuICAgICAgLy8gRG9lcyB0aGUgc2VjdG9y4oCZcyBpbm5lciByaW5nIChvciBwb2ludCkgaGF2ZSByb3VuZGVkIGNvcm5lcnM/XG4gICAgICBlbHNlIGlmIChyYzAgPiBlcHNpbG9uKSB7XG4gICAgICAgIHQwID0gY29ybmVyVGFuZ2VudHMoeDEwLCB5MTAsIHgxMSwgeTExLCByMCwgLXJjMCwgY3cpO1xuICAgICAgICB0MSA9IGNvcm5lclRhbmdlbnRzKHgwMSwgeTAxLCB4MDAsIHkwMCwgcjAsIC1yYzAsIGN3KTtcblxuICAgICAgICBjb250ZXh0LmxpbmVUbyh0MC5jeCArIHQwLngwMSwgdDAuY3kgKyB0MC55MDEpO1xuXG4gICAgICAgIC8vIEhhdmUgdGhlIGNvcm5lcnMgbWVyZ2VkP1xuICAgICAgICBpZiAocmMwIDwgcmMpIGNvbnRleHQuYXJjKHQwLmN4LCB0MC5jeSwgcmMwLCBhdGFuMih0MC55MDEsIHQwLngwMSksIGF0YW4yKHQxLnkwMSwgdDEueDAxKSwgIWN3KTtcblxuICAgICAgICAvLyBPdGhlcndpc2UsIGRyYXcgdGhlIHR3byBjb3JuZXJzIGFuZCB0aGUgcmluZy5cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgY29udGV4dC5hcmModDAuY3gsIHQwLmN5LCByYzAsIGF0YW4yKHQwLnkwMSwgdDAueDAxKSwgYXRhbjIodDAueTExLCB0MC54MTEpLCAhY3cpO1xuICAgICAgICAgIGNvbnRleHQuYXJjKDAsIDAsIHIwLCBhdGFuMih0MC5jeSArIHQwLnkxMSwgdDAuY3ggKyB0MC54MTEpLCBhdGFuMih0MS5jeSArIHQxLnkxMSwgdDEuY3ggKyB0MS54MTEpLCBjdyk7XG4gICAgICAgICAgY29udGV4dC5hcmModDEuY3gsIHQxLmN5LCByYzAsIGF0YW4yKHQxLnkxMSwgdDEueDExKSwgYXRhbjIodDEueTAxLCB0MS54MDEpLCAhY3cpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIE9yIGlzIHRoZSBpbm5lciByaW5nIGp1c3QgYSBjaXJjdWxhciBhcmM/XG4gICAgICBlbHNlIGNvbnRleHQuYXJjKDAsIDAsIHIwLCBhMTAsIGEwMCwgY3cpO1xuICAgIH1cblxuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG5cbiAgICBpZiAoYnVmZmVyKSByZXR1cm4gY29udGV4dCA9IG51bGwsIGJ1ZmZlciArIFwiXCIgfHwgbnVsbDtcbiAgfVxuXG4gIGFyYy5jZW50cm9pZCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciByID0gKCtpbm5lclJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpICsgK291dGVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIC8gMixcbiAgICAgICAgYSA9ICgrc3RhcnRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpICsgK2VuZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIC8gMiAtIHBpIC8gMjtcbiAgICByZXR1cm4gW2NvcyhhKSAqIHIsIHNpbihhKSAqIHJdO1xuICB9O1xuXG4gIGFyYy5pbm5lclJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpbm5lclJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmMpIDogaW5uZXJSYWRpdXM7XG4gIH07XG5cbiAgYXJjLm91dGVyUmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG91dGVyUmFkaXVzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyYykgOiBvdXRlclJhZGl1cztcbiAgfTtcblxuICBhcmMuY29ybmVyUmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNvcm5lclJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmMpIDogY29ybmVyUmFkaXVzO1xuICB9O1xuXG4gIGFyYy5wYWRSYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkUmFkaXVzID0gXyA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmMpIDogcGFkUmFkaXVzO1xuICB9O1xuXG4gIGFyYy5zdGFydEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0YXJ0QW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJjKSA6IHN0YXJ0QW5nbGU7XG4gIH07XG5cbiAgYXJjLmVuZEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGVuZEFuZ2xlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyYykgOiBlbmRBbmdsZTtcbiAgfTtcblxuICBhcmMucGFkQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkQW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJjKSA6IHBhZEFuZ2xlO1xuICB9O1xuXG4gIGFyYy5jb250ZXh0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKChjb250ZXh0ID0gXyA9PSBudWxsID8gbnVsbCA6IF8pLCBhcmMpIDogY29udGV4dDtcbiAgfTtcblxuICByZXR1cm4gYXJjO1xufVxuIiwiaW1wb3J0IHtwYXRofSBmcm9tIFwiZDMtcGF0aFwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQgY3VydmVMaW5lYXIgZnJvbSBcIi4vY3VydmUvbGluZWFyXCI7XG5pbXBvcnQgbGluZSBmcm9tIFwiLi9saW5lXCI7XG5pbXBvcnQge3ggYXMgcG9pbnRYLCB5IGFzIHBvaW50WX0gZnJvbSBcIi4vcG9pbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciB4MCA9IHBvaW50WCxcbiAgICAgIHgxID0gbnVsbCxcbiAgICAgIHkwID0gY29uc3RhbnQoMCksXG4gICAgICB5MSA9IHBvaW50WSxcbiAgICAgIGRlZmluZWQgPSBjb25zdGFudCh0cnVlKSxcbiAgICAgIGNvbnRleHQgPSBudWxsLFxuICAgICAgY3VydmUgPSBjdXJ2ZUxpbmVhcixcbiAgICAgIG91dHB1dCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gYXJlYShkYXRhKSB7XG4gICAgdmFyIGksXG4gICAgICAgIGosXG4gICAgICAgIGssXG4gICAgICAgIG4gPSBkYXRhLmxlbmd0aCxcbiAgICAgICAgZCxcbiAgICAgICAgZGVmaW5lZDAgPSBmYWxzZSxcbiAgICAgICAgYnVmZmVyLFxuICAgICAgICB4MHogPSBuZXcgQXJyYXkobiksXG4gICAgICAgIHkweiA9IG5ldyBBcnJheShuKTtcblxuICAgIGlmIChjb250ZXh0ID09IG51bGwpIG91dHB1dCA9IGN1cnZlKGJ1ZmZlciA9IHBhdGgoKSk7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDw9IG47ICsraSkge1xuICAgICAgaWYgKCEoaSA8IG4gJiYgZGVmaW5lZChkID0gZGF0YVtpXSwgaSwgZGF0YSkpID09PSBkZWZpbmVkMCkge1xuICAgICAgICBpZiAoZGVmaW5lZDAgPSAhZGVmaW5lZDApIHtcbiAgICAgICAgICBqID0gaTtcbiAgICAgICAgICBvdXRwdXQuYXJlYVN0YXJ0KCk7XG4gICAgICAgICAgb3V0cHV0LmxpbmVTdGFydCgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG91dHB1dC5saW5lRW5kKCk7XG4gICAgICAgICAgb3V0cHV0LmxpbmVTdGFydCgpO1xuICAgICAgICAgIGZvciAoayA9IGkgLSAxOyBrID49IGo7IC0taykge1xuICAgICAgICAgICAgb3V0cHV0LnBvaW50KHgweltrXSwgeTB6W2tdKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgb3V0cHV0LmxpbmVFbmQoKTtcbiAgICAgICAgICBvdXRwdXQuYXJlYUVuZCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoZGVmaW5lZDApIHtcbiAgICAgICAgeDB6W2ldID0gK3gwKGQsIGksIGRhdGEpLCB5MHpbaV0gPSAreTAoZCwgaSwgZGF0YSk7XG4gICAgICAgIG91dHB1dC5wb2ludCh4MSA/ICt4MShkLCBpLCBkYXRhKSA6IHgweltpXSwgeTEgPyAreTEoZCwgaSwgZGF0YSkgOiB5MHpbaV0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChidWZmZXIpIHJldHVybiBvdXRwdXQgPSBudWxsLCBidWZmZXIgKyBcIlwiIHx8IG51bGw7XG4gIH1cblxuICBmdW5jdGlvbiBhcmVhbGluZSgpIHtcbiAgICByZXR1cm4gbGluZSgpLmRlZmluZWQoZGVmaW5lZCkuY3VydmUoY3VydmUpLmNvbnRleHQoY29udGV4dCk7XG4gIH1cblxuICBhcmVhLnggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeDAgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgeDEgPSBudWxsLCBhcmVhKSA6IHgwO1xuICB9O1xuXG4gIGFyZWEueDAgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeDAgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJlYSkgOiB4MDtcbiAgfTtcblxuICBhcmVhLngxID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHgxID0gXyA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmVhKSA6IHgxO1xuICB9O1xuXG4gIGFyZWEueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5MCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCB5MSA9IG51bGwsIGFyZWEpIDogeTA7XG4gIH07XG5cbiAgYXJlYS55MCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5MCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmVhKSA6IHkwO1xuICB9O1xuXG4gIGFyZWEueTEgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeTEgPSBfID09IG51bGwgPyBudWxsIDogdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyZWEpIDogeTE7XG4gIH07XG5cbiAgYXJlYS5saW5lWDAgPVxuICBhcmVhLmxpbmVZMCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBhcmVhbGluZSgpLngoeDApLnkoeTApO1xuICB9O1xuXG4gIGFyZWEubGluZVkxID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGFyZWFsaW5lKCkueCh4MCkueSh5MSk7XG4gIH07XG5cbiAgYXJlYS5saW5lWDEgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gYXJlYWxpbmUoKS54KHgxKS55KHkwKTtcbiAgfTtcblxuICBhcmVhLmRlZmluZWQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZGVmaW5lZCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgYXJlYSkgOiBkZWZpbmVkO1xuICB9O1xuXG4gIGFyZWEuY3VydmUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY3VydmUgPSBfLCBjb250ZXh0ICE9IG51bGwgJiYgKG91dHB1dCA9IGN1cnZlKGNvbnRleHQpKSwgYXJlYSkgOiBjdXJ2ZTtcbiAgfTtcblxuICBhcmVhLmNvbnRleHQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoXyA9PSBudWxsID8gY29udGV4dCA9IG91dHB1dCA9IG51bGwgOiBvdXRwdXQgPSBjdXJ2ZShjb250ZXh0ID0gXyksIGFyZWEpIDogY29udGV4dDtcbiAgfTtcblxuICByZXR1cm4gYXJlYTtcbn1cbiIsImltcG9ydCBjdXJ2ZVJhZGlhbCwge2N1cnZlUmFkaWFsTGluZWFyfSBmcm9tIFwiLi9jdXJ2ZS9yYWRpYWxcIjtcbmltcG9ydCBhcmVhIGZyb20gXCIuL2FyZWFcIjtcbmltcG9ydCB7bGluZVJhZGlhbH0gZnJvbSBcIi4vbGluZVJhZGlhbFwiXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgYSA9IGFyZWEoKS5jdXJ2ZShjdXJ2ZVJhZGlhbExpbmVhciksXG4gICAgICBjID0gYS5jdXJ2ZSxcbiAgICAgIHgwID0gYS5saW5lWDAsXG4gICAgICB4MSA9IGEubGluZVgxLFxuICAgICAgeTAgPSBhLmxpbmVZMCxcbiAgICAgIHkxID0gYS5saW5lWTE7XG5cbiAgYS5hbmdsZSA9IGEueCwgZGVsZXRlIGEueDtcbiAgYS5zdGFydEFuZ2xlID0gYS54MCwgZGVsZXRlIGEueDA7XG4gIGEuZW5kQW5nbGUgPSBhLngxLCBkZWxldGUgYS54MTtcbiAgYS5yYWRpdXMgPSBhLnksIGRlbGV0ZSBhLnk7XG4gIGEuaW5uZXJSYWRpdXMgPSBhLnkwLCBkZWxldGUgYS55MDtcbiAgYS5vdXRlclJhZGl1cyA9IGEueTEsIGRlbGV0ZSBhLnkxO1xuICBhLmxpbmVTdGFydEFuZ2xlID0gZnVuY3Rpb24oKSB7IHJldHVybiBsaW5lUmFkaWFsKHgwKCkpOyB9LCBkZWxldGUgYS5saW5lWDA7XG4gIGEubGluZUVuZEFuZ2xlID0gZnVuY3Rpb24oKSB7IHJldHVybiBsaW5lUmFkaWFsKHgxKCkpOyB9LCBkZWxldGUgYS5saW5lWDE7XG4gIGEubGluZUlubmVyUmFkaXVzID0gZnVuY3Rpb24oKSB7IHJldHVybiBsaW5lUmFkaWFsKHkwKCkpOyB9LCBkZWxldGUgYS5saW5lWTA7XG4gIGEubGluZU91dGVyUmFkaXVzID0gZnVuY3Rpb24oKSB7IHJldHVybiBsaW5lUmFkaWFsKHkxKCkpOyB9LCBkZWxldGUgYS5saW5lWTE7XG5cbiAgYS5jdXJ2ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IGMoY3VydmVSYWRpYWwoXykpIDogYygpLl9jdXJ2ZTtcbiAgfTtcblxuICByZXR1cm4gYTtcbn1cbiIsImV4cG9ydCB2YXIgc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbiBjb25zdGFudCgpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBwb2ludCh0aGF0LCB4LCB5KSB7XG4gIHRoYXQuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyhcbiAgICAoMiAqIHRoYXQuX3gwICsgdGhhdC5feDEpIC8gMyxcbiAgICAoMiAqIHRoYXQuX3kwICsgdGhhdC5feTEpIC8gMyxcbiAgICAodGhhdC5feDAgKyAyICogdGhhdC5feDEpIC8gMyxcbiAgICAodGhhdC5feTAgKyAyICogdGhhdC5feTEpIC8gMyxcbiAgICAodGhhdC5feDAgKyA0ICogdGhhdC5feDEgKyB4KSAvIDYsXG4gICAgKHRoYXQuX3kwICsgNCAqIHRoYXQuX3kxICsgeSkgLyA2XG4gICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBCYXNpcyhjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5CYXNpcy5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9IE5hTjtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMzogcG9pbnQodGhpcywgdGhpcy5feDEsIHRoaXMuX3kxKTsgLy8gcHJvY2VlZFxuICAgICAgY2FzZSAyOiB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MSwgdGhpcy5feTEpOyBicmVhaztcbiAgICB9XG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgdGhpcy5fcG9pbnQgPT09IDEpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeCwgeSk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHRoaXMuX2NvbnRleHQubGluZVRvKCg1ICogdGhpcy5feDAgKyB0aGlzLl94MSkgLyA2LCAoNSAqIHRoaXMuX3kwICsgdGhpcy5feTEpIC8gNik7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29udGV4dCkge1xuICByZXR1cm4gbmV3IEJhc2lzKGNvbnRleHQpO1xufVxuIiwiaW1wb3J0IG5vb3AgZnJvbSBcIi4uL25vb3BcIjtcbmltcG9ydCB7cG9pbnR9IGZyb20gXCIuL2Jhc2lzXCI7XG5cbmZ1bmN0aW9uIEJhc2lzQ2xvc2VkKGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cbkJhc2lzQ2xvc2VkLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBub29wLFxuICBhcmVhRW5kOiBub29wLFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl94MiA9IHRoaXMuX3gzID0gdGhpcy5feDQgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IHRoaXMuX3kzID0gdGhpcy5feTQgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDE6IHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDIsIHRoaXMuX3kyKTtcbiAgICAgICAgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIDI6IHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5tb3ZlVG8oKHRoaXMuX3gyICsgMiAqIHRoaXMuX3gzKSAvIDMsICh0aGlzLl95MiArIDIgKiB0aGlzLl95MykgLyAzKTtcbiAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8oKHRoaXMuX3gzICsgMiAqIHRoaXMuX3gyKSAvIDMsICh0aGlzLl95MyArIDIgKiB0aGlzLl95MikgLyAzKTtcbiAgICAgICAgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIDM6IHtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94MiwgdGhpcy5feTIpO1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3gzLCB0aGlzLl95Myk7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDQsIHRoaXMuX3k0KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyB0aGlzLl94MiA9IHgsIHRoaXMuX3kyID0geTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgdGhpcy5feDMgPSB4LCB0aGlzLl95MyA9IHk7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHRoaXMuX3g0ID0geCwgdGhpcy5feTQgPSB5OyB0aGlzLl9jb250ZXh0Lm1vdmVUbygodGhpcy5feDAgKyA0ICogdGhpcy5feDEgKyB4KSAvIDYsICh0aGlzLl95MCArIDQgKiB0aGlzLl95MSArIHkpIC8gNik7IGJyZWFrO1xuICAgICAgZGVmYXVsdDogcG9pbnQodGhpcywgeCwgeSk7IGJyZWFrO1xuICAgIH1cbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHg7XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB5O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgQmFzaXNDbG9zZWQoY29udGV4dCk7XG59XG4iLCJpbXBvcnQge3BvaW50fSBmcm9tIFwiLi9iYXNpc1wiO1xuXG5mdW5jdGlvbiBCYXNpc09wZW4oY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuQmFzaXNPcGVuLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gTmFOO1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgdGhpcy5fcG9pbnQgPT09IDMpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgYnJlYWs7XG4gICAgICBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgdmFyIHgwID0gKHRoaXMuX3gwICsgNCAqIHRoaXMuX3gxICsgeCkgLyA2LCB5MCA9ICh0aGlzLl95MCArIDQgKiB0aGlzLl95MSArIHkpIC8gNjsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHgwLCB5MCkgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4MCwgeTApOyBicmVhaztcbiAgICAgIGNhc2UgMzogdGhpcy5fcG9pbnQgPSA0OyAvLyBwcm9jZWVkXG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB4LCB5KTsgYnJlYWs7XG4gICAgfVxuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBCYXNpc09wZW4oY29udGV4dCk7XG59XG4iLCJpbXBvcnQge0Jhc2lzfSBmcm9tIFwiLi9iYXNpc1wiO1xuXG5mdW5jdGlvbiBCdW5kbGUoY29udGV4dCwgYmV0YSkge1xuICB0aGlzLl9iYXNpcyA9IG5ldyBCYXNpcyhjb250ZXh0KTtcbiAgdGhpcy5fYmV0YSA9IGJldGE7XG59XG5cbkJ1bmRsZS5wcm90b3R5cGUgPSB7XG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feCA9IFtdO1xuICAgIHRoaXMuX3kgPSBbXTtcbiAgICB0aGlzLl9iYXNpcy5saW5lU3RhcnQoKTtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdmFyIHggPSB0aGlzLl94LFxuICAgICAgICB5ID0gdGhpcy5feSxcbiAgICAgICAgaiA9IHgubGVuZ3RoIC0gMTtcblxuICAgIGlmIChqID4gMCkge1xuICAgICAgdmFyIHgwID0geFswXSxcbiAgICAgICAgICB5MCA9IHlbMF0sXG4gICAgICAgICAgZHggPSB4W2pdIC0geDAsXG4gICAgICAgICAgZHkgPSB5W2pdIC0geTAsXG4gICAgICAgICAgaSA9IC0xLFxuICAgICAgICAgIHQ7XG5cbiAgICAgIHdoaWxlICgrK2kgPD0gaikge1xuICAgICAgICB0ID0gaSAvIGo7XG4gICAgICAgIHRoaXMuX2Jhc2lzLnBvaW50KFxuICAgICAgICAgIHRoaXMuX2JldGEgKiB4W2ldICsgKDEgLSB0aGlzLl9iZXRhKSAqICh4MCArIHQgKiBkeCksXG4gICAgICAgICAgdGhpcy5fYmV0YSAqIHlbaV0gKyAoMSAtIHRoaXMuX2JldGEpICogKHkwICsgdCAqIGR5KVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuX3ggPSB0aGlzLl95ID0gbnVsbDtcbiAgICB0aGlzLl9iYXNpcy5saW5lRW5kKCk7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgdGhpcy5feC5wdXNoKCt4KTtcbiAgICB0aGlzLl95LnB1c2goK3kpO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gY3VzdG9tKGJldGEpIHtcblxuICBmdW5jdGlvbiBidW5kbGUoY29udGV4dCkge1xuICAgIHJldHVybiBiZXRhID09PSAxID8gbmV3IEJhc2lzKGNvbnRleHQpIDogbmV3IEJ1bmRsZShjb250ZXh0LCBiZXRhKTtcbiAgfVxuXG4gIGJ1bmRsZS5iZXRhID0gZnVuY3Rpb24oYmV0YSkge1xuICAgIHJldHVybiBjdXN0b20oK2JldGEpO1xuICB9O1xuXG4gIHJldHVybiBidW5kbGU7XG59KSgwLjg1KTtcbiIsImV4cG9ydCBmdW5jdGlvbiBwb2ludCh0aGF0LCB4LCB5KSB7XG4gIHRoYXQuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyhcbiAgICB0aGF0Ll94MSArIHRoYXQuX2sgKiAodGhhdC5feDIgLSB0aGF0Ll94MCksXG4gICAgdGhhdC5feTEgKyB0aGF0Ll9rICogKHRoYXQuX3kyIC0gdGhhdC5feTApLFxuICAgIHRoYXQuX3gyICsgdGhhdC5fayAqICh0aGF0Ll94MSAtIHgpLFxuICAgIHRoYXQuX3kyICsgdGhhdC5fayAqICh0aGF0Ll95MSAtIHkpLFxuICAgIHRoYXQuX3gyLFxuICAgIHRoYXQuX3kyXG4gICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBDYXJkaW5hbChjb250ZXh0LCB0ZW5zaW9uKSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLl9rID0gKDEgLSB0ZW5zaW9uKSAvIDY7XG59XG5cbkNhcmRpbmFsLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IE5hTjtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMjogdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDIsIHRoaXMuX3kyKTsgYnJlYWs7XG4gICAgICBjYXNlIDM6IHBvaW50KHRoaXMsIHRoaXMuX3gxLCB0aGlzLl95MSk7IGJyZWFrO1xuICAgIH1cbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMSkpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSkgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LCB5KTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgdGhpcy5feDEgPSB4LCB0aGlzLl95MSA9IHk7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbSh0ZW5zaW9uKSB7XG5cbiAgZnVuY3Rpb24gY2FyZGluYWwoY29udGV4dCkge1xuICAgIHJldHVybiBuZXcgQ2FyZGluYWwoY29udGV4dCwgdGVuc2lvbik7XG4gIH1cblxuICBjYXJkaW5hbC50ZW5zaW9uID0gZnVuY3Rpb24odGVuc2lvbikge1xuICAgIHJldHVybiBjdXN0b20oK3RlbnNpb24pO1xuICB9O1xuXG4gIHJldHVybiBjYXJkaW5hbDtcbn0pKDApO1xuIiwiaW1wb3J0IG5vb3AgZnJvbSBcIi4uL25vb3BcIjtcbmltcG9ydCB7cG9pbnR9IGZyb20gXCIuL2NhcmRpbmFsXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBDYXJkaW5hbENsb3NlZChjb250ZXh0LCB0ZW5zaW9uKSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLl9rID0gKDEgLSB0ZW5zaW9uKSAvIDY7XG59XG5cbkNhcmRpbmFsQ2xvc2VkLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBub29wLFxuICBhcmVhRW5kOiBub29wLFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl94MiA9IHRoaXMuX3gzID0gdGhpcy5feDQgPSB0aGlzLl94NSA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3kyID0gdGhpcy5feTMgPSB0aGlzLl95NCA9IHRoaXMuX3k1ID0gTmFOO1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAxOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gzLCB0aGlzLl95Myk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAyOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gzLCB0aGlzLl95Myk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAzOiB7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDMsIHRoaXMuX3kzKTtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94NCwgdGhpcy5feTQpO1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3g1LCB0aGlzLl95NSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5feDMgPSB4LCB0aGlzLl95MyA9IHk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3g0ID0geCwgdGhpcy5feTQgPSB5KTsgYnJlYWs7XG4gICAgICBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgdGhpcy5feDUgPSB4LCB0aGlzLl95NSA9IHk7IGJyZWFrO1xuICAgICAgZGVmYXVsdDogcG9pbnQodGhpcywgeCwgeSk7IGJyZWFrO1xuICAgIH1cbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHRoaXMuX3gyLCB0aGlzLl94MiA9IHg7XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB0aGlzLl95MiwgdGhpcy5feTIgPSB5O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gY3VzdG9tKHRlbnNpb24pIHtcblxuICBmdW5jdGlvbiBjYXJkaW5hbChjb250ZXh0KSB7XG4gICAgcmV0dXJuIG5ldyBDYXJkaW5hbENsb3NlZChjb250ZXh0LCB0ZW5zaW9uKTtcbiAgfVxuXG4gIGNhcmRpbmFsLnRlbnNpb24gPSBmdW5jdGlvbih0ZW5zaW9uKSB7XG4gICAgcmV0dXJuIGN1c3RvbSgrdGVuc2lvbik7XG4gIH07XG5cbiAgcmV0dXJuIGNhcmRpbmFsO1xufSkoMCk7XG4iLCJpbXBvcnQge3BvaW50fSBmcm9tIFwiLi9jYXJkaW5hbFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gQ2FyZGluYWxPcGVuKGNvbnRleHQsIHRlbnNpb24pIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG4gIHRoaXMuX2sgPSAoMSAtIHRlbnNpb24pIC8gNjtcbn1cblxuQ2FyZGluYWxPcGVuLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IE5hTjtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAzKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MiwgdGhpcy5feTIpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDIsIHRoaXMuX3kyKTsgYnJlYWs7XG4gICAgICBjYXNlIDM6IHRoaXMuX3BvaW50ID0gNDsgLy8gcHJvY2VlZFxuICAgICAgZGVmYXVsdDogcG9pbnQodGhpcywgeCwgeSk7IGJyZWFrO1xuICAgIH1cbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHRoaXMuX3gyLCB0aGlzLl94MiA9IHg7XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB0aGlzLl95MiwgdGhpcy5feTIgPSB5O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gY3VzdG9tKHRlbnNpb24pIHtcblxuICBmdW5jdGlvbiBjYXJkaW5hbChjb250ZXh0KSB7XG4gICAgcmV0dXJuIG5ldyBDYXJkaW5hbE9wZW4oY29udGV4dCwgdGVuc2lvbik7XG4gIH1cblxuICBjYXJkaW5hbC50ZW5zaW9uID0gZnVuY3Rpb24odGVuc2lvbikge1xuICAgIHJldHVybiBjdXN0b20oK3RlbnNpb24pO1xuICB9O1xuXG4gIHJldHVybiBjYXJkaW5hbDtcbn0pKDApO1xuIiwiaW1wb3J0IHtlcHNpbG9ufSBmcm9tIFwiLi4vbWF0aFwiO1xuaW1wb3J0IHtDYXJkaW5hbH0gZnJvbSBcIi4vY2FyZGluYWxcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHBvaW50KHRoYXQsIHgsIHkpIHtcbiAgdmFyIHgxID0gdGhhdC5feDEsXG4gICAgICB5MSA9IHRoYXQuX3kxLFxuICAgICAgeDIgPSB0aGF0Ll94MixcbiAgICAgIHkyID0gdGhhdC5feTI7XG5cbiAgaWYgKHRoYXQuX2wwMV9hID4gZXBzaWxvbikge1xuICAgIHZhciBhID0gMiAqIHRoYXQuX2wwMV8yYSArIDMgKiB0aGF0Ll9sMDFfYSAqIHRoYXQuX2wxMl9hICsgdGhhdC5fbDEyXzJhLFxuICAgICAgICBuID0gMyAqIHRoYXQuX2wwMV9hICogKHRoYXQuX2wwMV9hICsgdGhhdC5fbDEyX2EpO1xuICAgIHgxID0gKHgxICogYSAtIHRoYXQuX3gwICogdGhhdC5fbDEyXzJhICsgdGhhdC5feDIgKiB0aGF0Ll9sMDFfMmEpIC8gbjtcbiAgICB5MSA9ICh5MSAqIGEgLSB0aGF0Ll95MCAqIHRoYXQuX2wxMl8yYSArIHRoYXQuX3kyICogdGhhdC5fbDAxXzJhKSAvIG47XG4gIH1cblxuICBpZiAodGhhdC5fbDIzX2EgPiBlcHNpbG9uKSB7XG4gICAgdmFyIGIgPSAyICogdGhhdC5fbDIzXzJhICsgMyAqIHRoYXQuX2wyM19hICogdGhhdC5fbDEyX2EgKyB0aGF0Ll9sMTJfMmEsXG4gICAgICAgIG0gPSAzICogdGhhdC5fbDIzX2EgKiAodGhhdC5fbDIzX2EgKyB0aGF0Ll9sMTJfYSk7XG4gICAgeDIgPSAoeDIgKiBiICsgdGhhdC5feDEgKiB0aGF0Ll9sMjNfMmEgLSB4ICogdGhhdC5fbDEyXzJhKSAvIG07XG4gICAgeTIgPSAoeTIgKiBiICsgdGhhdC5feTEgKiB0aGF0Ll9sMjNfMmEgLSB5ICogdGhhdC5fbDEyXzJhKSAvIG07XG4gIH1cblxuICB0aGF0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oeDEsIHkxLCB4MiwgeTIsIHRoYXQuX3gyLCB0aGF0Ll95Mik7XG59XG5cbmZ1bmN0aW9uIENhdG11bGxSb20oY29udGV4dCwgYWxwaGEpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG4gIHRoaXMuX2FscGhhID0gYWxwaGE7XG59XG5cbkNhdG11bGxSb20ucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl94MiA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3kyID0gTmFOO1xuICAgIHRoaXMuX2wwMV9hID0gdGhpcy5fbDEyX2EgPSB0aGlzLl9sMjNfYSA9XG4gICAgdGhpcy5fbDAxXzJhID0gdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhID1cbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMjogdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDIsIHRoaXMuX3kyKTsgYnJlYWs7XG4gICAgICBjYXNlIDM6IHRoaXMucG9pbnQodGhpcy5feDIsIHRoaXMuX3kyKTsgYnJlYWs7XG4gICAgfVxuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAxKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG5cbiAgICBpZiAodGhpcy5fcG9pbnQpIHtcbiAgICAgIHZhciB4MjMgPSB0aGlzLl94MiAtIHgsXG4gICAgICAgICAgeTIzID0gdGhpcy5feTIgLSB5O1xuICAgICAgdGhpcy5fbDIzX2EgPSBNYXRoLnNxcnQodGhpcy5fbDIzXzJhID0gTWF0aC5wb3coeDIzICogeDIzICsgeTIzICogeTIzLCB0aGlzLl9hbHBoYSkpO1xuICAgIH1cblxuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSkgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LCB5KTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgYnJlYWs7XG4gICAgICBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgLy8gcHJvY2VlZFxuICAgICAgZGVmYXVsdDogcG9pbnQodGhpcywgeCwgeSk7IGJyZWFrO1xuICAgIH1cblxuICAgIHRoaXMuX2wwMV9hID0gdGhpcy5fbDEyX2EsIHRoaXMuX2wxMl9hID0gdGhpcy5fbDIzX2E7XG4gICAgdGhpcy5fbDAxXzJhID0gdGhpcy5fbDEyXzJhLCB0aGlzLl9sMTJfMmEgPSB0aGlzLl9sMjNfMmE7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbShhbHBoYSkge1xuXG4gIGZ1bmN0aW9uIGNhdG11bGxSb20oY29udGV4dCkge1xuICAgIHJldHVybiBhbHBoYSA/IG5ldyBDYXRtdWxsUm9tKGNvbnRleHQsIGFscGhhKSA6IG5ldyBDYXJkaW5hbChjb250ZXh0LCAwKTtcbiAgfVxuXG4gIGNhdG11bGxSb20uYWxwaGEgPSBmdW5jdGlvbihhbHBoYSkge1xuICAgIHJldHVybiBjdXN0b20oK2FscGhhKTtcbiAgfTtcblxuICByZXR1cm4gY2F0bXVsbFJvbTtcbn0pKDAuNSk7XG4iLCJpbXBvcnQge0NhcmRpbmFsQ2xvc2VkfSBmcm9tIFwiLi9jYXJkaW5hbENsb3NlZFwiO1xuaW1wb3J0IG5vb3AgZnJvbSBcIi4uL25vb3BcIjtcbmltcG9ydCB7cG9pbnR9IGZyb20gXCIuL2NhdG11bGxSb21cIjtcblxuZnVuY3Rpb24gQ2F0bXVsbFJvbUNsb3NlZChjb250ZXh0LCBhbHBoYSkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5fYWxwaGEgPSBhbHBoYTtcbn1cblxuQ2F0bXVsbFJvbUNsb3NlZC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogbm9vcCxcbiAgYXJlYUVuZDogbm9vcCxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPSB0aGlzLl94MyA9IHRoaXMuX3g0ID0gdGhpcy5feDUgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IHRoaXMuX3kzID0gdGhpcy5feTQgPSB0aGlzLl95NSA9IE5hTjtcbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hID0gdGhpcy5fbDIzX2EgPVxuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSA9IHRoaXMuX2wyM18yYSA9XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDE6IHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDMsIHRoaXMuX3kzKTtcbiAgICAgICAgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIDI6IHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDMsIHRoaXMuX3kzKTtcbiAgICAgICAgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIDM6IHtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94MywgdGhpcy5feTMpO1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3g0LCB0aGlzLl95NCk7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDUsIHRoaXMuX3k1KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuXG4gICAgaWYgKHRoaXMuX3BvaW50KSB7XG4gICAgICB2YXIgeDIzID0gdGhpcy5feDIgLSB4LFxuICAgICAgICAgIHkyMyA9IHRoaXMuX3kyIC0geTtcbiAgICAgIHRoaXMuX2wyM19hID0gTWF0aC5zcXJ0KHRoaXMuX2wyM18yYSA9IE1hdGgucG93KHgyMyAqIHgyMyArIHkyMyAqIHkyMywgdGhpcy5fYWxwaGEpKTtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5feDMgPSB4LCB0aGlzLl95MyA9IHk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3g0ID0geCwgdGhpcy5feTQgPSB5KTsgYnJlYWs7XG4gICAgICBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgdGhpcy5feDUgPSB4LCB0aGlzLl95NSA9IHk7IGJyZWFrO1xuICAgICAgZGVmYXVsdDogcG9pbnQodGhpcywgeCwgeSk7IGJyZWFrO1xuICAgIH1cblxuICAgIHRoaXMuX2wwMV9hID0gdGhpcy5fbDEyX2EsIHRoaXMuX2wxMl9hID0gdGhpcy5fbDIzX2E7XG4gICAgdGhpcy5fbDAxXzJhID0gdGhpcy5fbDEyXzJhLCB0aGlzLl9sMTJfMmEgPSB0aGlzLl9sMjNfMmE7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbShhbHBoYSkge1xuXG4gIGZ1bmN0aW9uIGNhdG11bGxSb20oY29udGV4dCkge1xuICAgIHJldHVybiBhbHBoYSA/IG5ldyBDYXRtdWxsUm9tQ2xvc2VkKGNvbnRleHQsIGFscGhhKSA6IG5ldyBDYXJkaW5hbENsb3NlZChjb250ZXh0LCAwKTtcbiAgfVxuXG4gIGNhdG11bGxSb20uYWxwaGEgPSBmdW5jdGlvbihhbHBoYSkge1xuICAgIHJldHVybiBjdXN0b20oK2FscGhhKTtcbiAgfTtcblxuICByZXR1cm4gY2F0bXVsbFJvbTtcbn0pKDAuNSk7XG4iLCJpbXBvcnQge0NhcmRpbmFsT3Blbn0gZnJvbSBcIi4vY2FyZGluYWxPcGVuXCI7XG5pbXBvcnQge3BvaW50fSBmcm9tIFwiLi9jYXRtdWxsUm9tXCI7XG5cbmZ1bmN0aW9uIENhdG11bGxSb21PcGVuKGNvbnRleHQsIGFscGhhKSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLl9hbHBoYSA9IGFscGhhO1xufVxuXG5DYXRtdWxsUm9tT3Blbi5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSBOYU47XG4gICAgdGhpcy5fbDAxX2EgPSB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hID1cbiAgICB0aGlzLl9sMDFfMmEgPSB0aGlzLl9sMTJfMmEgPSB0aGlzLl9sMjNfMmEgPVxuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgdGhpcy5fcG9pbnQgPT09IDMpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcblxuICAgIGlmICh0aGlzLl9wb2ludCkge1xuICAgICAgdmFyIHgyMyA9IHRoaXMuX3gyIC0geCxcbiAgICAgICAgICB5MjMgPSB0aGlzLl95MiAtIHk7XG4gICAgICB0aGlzLl9sMjNfYSA9IE1hdGguc3FydCh0aGlzLl9sMjNfMmEgPSBNYXRoLnBvdyh4MjMgKiB4MjMgKyB5MjMgKiB5MjMsIHRoaXMuX2FscGhhKSk7XG4gICAgfVxuXG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MiwgdGhpcy5feTIpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDIsIHRoaXMuX3kyKTsgYnJlYWs7XG4gICAgICBjYXNlIDM6IHRoaXMuX3BvaW50ID0gNDsgLy8gcHJvY2VlZFxuICAgICAgZGVmYXVsdDogcG9pbnQodGhpcywgeCwgeSk7IGJyZWFrO1xuICAgIH1cblxuICAgIHRoaXMuX2wwMV9hID0gdGhpcy5fbDEyX2EsIHRoaXMuX2wxMl9hID0gdGhpcy5fbDIzX2E7XG4gICAgdGhpcy5fbDAxXzJhID0gdGhpcy5fbDEyXzJhLCB0aGlzLl9sMTJfMmEgPSB0aGlzLl9sMjNfMmE7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbShhbHBoYSkge1xuXG4gIGZ1bmN0aW9uIGNhdG11bGxSb20oY29udGV4dCkge1xuICAgIHJldHVybiBhbHBoYSA/IG5ldyBDYXRtdWxsUm9tT3Blbihjb250ZXh0LCBhbHBoYSkgOiBuZXcgQ2FyZGluYWxPcGVuKGNvbnRleHQsIDApO1xuICB9XG5cbiAgY2F0bXVsbFJvbS5hbHBoYSA9IGZ1bmN0aW9uKGFscGhhKSB7XG4gICAgcmV0dXJuIGN1c3RvbSgrYWxwaGEpO1xuICB9O1xuXG4gIHJldHVybiBjYXRtdWxsUm9tO1xufSkoMC41KTtcbiIsImZ1bmN0aW9uIExpbmVhcihjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5MaW5lYXIucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgdGhpcy5fcG9pbnQgPT09IDEpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeCwgeSk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpOyBicmVhaztcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBMaW5lYXIoY29udGV4dCk7XG59XG4iLCJpbXBvcnQgbm9vcCBmcm9tIFwiLi4vbm9vcFwiO1xuXG5mdW5jdGlvbiBMaW5lYXJDbG9zZWQoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuTGluZWFyQ2xvc2VkLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBub29wLFxuICBhcmVhRW5kOiBub29wLFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX3BvaW50KSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIGlmICh0aGlzLl9wb2ludCkgdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSk7XG4gICAgZWxzZSB0aGlzLl9wb2ludCA9IDEsIHRoaXMuX2NvbnRleHQubW92ZVRvKHgsIHkpO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgTGluZWFyQ2xvc2VkKGNvbnRleHQpO1xufVxuIiwiZnVuY3Rpb24gc2lnbih4KSB7XG4gIHJldHVybiB4IDwgMCA/IC0xIDogMTtcbn1cblxuLy8gQ2FsY3VsYXRlIHRoZSBzbG9wZXMgb2YgdGhlIHRhbmdlbnRzIChIZXJtaXRlLXR5cGUgaW50ZXJwb2xhdGlvbikgYmFzZWQgb25cbi8vIHRoZSBmb2xsb3dpbmcgcGFwZXI6IFN0ZWZmZW4sIE0uIDE5OTAuIEEgU2ltcGxlIE1ldGhvZCBmb3IgTW9ub3RvbmljXG4vLyBJbnRlcnBvbGF0aW9uIGluIE9uZSBEaW1lbnNpb24uIEFzdHJvbm9teSBhbmQgQXN0cm9waHlzaWNzLCBWb2wuIDIzOSwgTk8uXG4vLyBOT1YoSUkpLCBQLiA0NDMsIDE5OTAuXG5mdW5jdGlvbiBzbG9wZTModGhhdCwgeDIsIHkyKSB7XG4gIHZhciBoMCA9IHRoYXQuX3gxIC0gdGhhdC5feDAsXG4gICAgICBoMSA9IHgyIC0gdGhhdC5feDEsXG4gICAgICBzMCA9ICh0aGF0Ll95MSAtIHRoYXQuX3kwKSAvIChoMCB8fCBoMSA8IDAgJiYgLTApLFxuICAgICAgczEgPSAoeTIgLSB0aGF0Ll95MSkgLyAoaDEgfHwgaDAgPCAwICYmIC0wKSxcbiAgICAgIHAgPSAoczAgKiBoMSArIHMxICogaDApIC8gKGgwICsgaDEpO1xuICByZXR1cm4gKHNpZ24oczApICsgc2lnbihzMSkpICogTWF0aC5taW4oTWF0aC5hYnMoczApLCBNYXRoLmFicyhzMSksIDAuNSAqIE1hdGguYWJzKHApKSB8fCAwO1xufVxuXG4vLyBDYWxjdWxhdGUgYSBvbmUtc2lkZWQgc2xvcGUuXG5mdW5jdGlvbiBzbG9wZTIodGhhdCwgdCkge1xuICB2YXIgaCA9IHRoYXQuX3gxIC0gdGhhdC5feDA7XG4gIHJldHVybiBoID8gKDMgKiAodGhhdC5feTEgLSB0aGF0Ll95MCkgLyBoIC0gdCkgLyAyIDogdDtcbn1cblxuLy8gQWNjb3JkaW5nIHRvIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0N1YmljX0hlcm1pdGVfc3BsaW5lI1JlcHJlc2VudGF0aW9uc1xuLy8gXCJ5b3UgY2FuIGV4cHJlc3MgY3ViaWMgSGVybWl0ZSBpbnRlcnBvbGF0aW9uIGluIHRlcm1zIG9mIGN1YmljIELDqXppZXIgY3VydmVzXG4vLyB3aXRoIHJlc3BlY3QgdG8gdGhlIGZvdXIgdmFsdWVzIHAwLCBwMCArIG0wIC8gMywgcDEgLSBtMSAvIDMsIHAxXCIuXG5mdW5jdGlvbiBwb2ludCh0aGF0LCB0MCwgdDEpIHtcbiAgdmFyIHgwID0gdGhhdC5feDAsXG4gICAgICB5MCA9IHRoYXQuX3kwLFxuICAgICAgeDEgPSB0aGF0Ll94MSxcbiAgICAgIHkxID0gdGhhdC5feTEsXG4gICAgICBkeCA9ICh4MSAtIHgwKSAvIDM7XG4gIHRoYXQuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyh4MCArIGR4LCB5MCArIGR4ICogdDAsIHgxIC0gZHgsIHkxIC0gZHggKiB0MSwgeDEsIHkxKTtcbn1cblxuZnVuY3Rpb24gTW9ub3RvbmVYKGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cbk1vbm90b25lWC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9XG4gICAgdGhpcy5fdDAgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDI6IHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gxLCB0aGlzLl95MSk7IGJyZWFrO1xuICAgICAgY2FzZSAzOiBwb2ludCh0aGlzLCB0aGlzLl90MCwgc2xvcGUyKHRoaXMsIHRoaXMuX3QwKSk7IGJyZWFrO1xuICAgIH1cbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMSkpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHZhciB0MSA9IE5hTjtcblxuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIGlmICh4ID09PSB0aGlzLl94MSAmJiB5ID09PSB0aGlzLl95MSkgcmV0dXJuOyAvLyBJZ25vcmUgY29pbmNpZGVudCBwb2ludHMuXG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHgsIHkpOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyBwb2ludCh0aGlzLCBzbG9wZTIodGhpcywgdDEgPSBzbG9wZTModGhpcywgeCwgeSkpLCB0MSk7IGJyZWFrO1xuICAgICAgZGVmYXVsdDogcG9pbnQodGhpcywgdGhpcy5fdDAsIHQxID0gc2xvcGUzKHRoaXMsIHgsIHkpKTsgYnJlYWs7XG4gICAgfVxuXG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0geTtcbiAgICB0aGlzLl90MCA9IHQxO1xuICB9XG59XG5cbmZ1bmN0aW9uIE1vbm90b25lWShjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBuZXcgUmVmbGVjdENvbnRleHQoY29udGV4dCk7XG59XG5cbihNb25vdG9uZVkucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShNb25vdG9uZVgucHJvdG90eXBlKSkucG9pbnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gIE1vbm90b25lWC5wcm90b3R5cGUucG9pbnQuY2FsbCh0aGlzLCB5LCB4KTtcbn07XG5cbmZ1bmN0aW9uIFJlZmxlY3RDb250ZXh0KGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cblJlZmxlY3RDb250ZXh0LnByb3RvdHlwZSA9IHtcbiAgbW92ZVRvOiBmdW5jdGlvbih4LCB5KSB7IHRoaXMuX2NvbnRleHQubW92ZVRvKHksIHgpOyB9LFxuICBjbG9zZVBhdGg6IGZ1bmN0aW9uKCkgeyB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpOyB9LFxuICBsaW5lVG86IGZ1bmN0aW9uKHgsIHkpIHsgdGhpcy5fY29udGV4dC5saW5lVG8oeSwgeCk7IH0sXG4gIGJlemllckN1cnZlVG86IGZ1bmN0aW9uKHgxLCB5MSwgeDIsIHkyLCB4LCB5KSB7IHRoaXMuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyh5MSwgeDEsIHkyLCB4MiwgeSwgeCk7IH1cbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBtb25vdG9uZVgoY29udGV4dCkge1xuICByZXR1cm4gbmV3IE1vbm90b25lWChjb250ZXh0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1vbm90b25lWShjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgTW9ub3RvbmVZKGNvbnRleHQpO1xufVxuIiwiZnVuY3Rpb24gTmF0dXJhbChjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5OYXR1cmFsLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94ID0gW107XG4gICAgdGhpcy5feSA9IFtdO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgeCA9IHRoaXMuX3gsXG4gICAgICAgIHkgPSB0aGlzLl95LFxuICAgICAgICBuID0geC5sZW5ndGg7XG5cbiAgICBpZiAobikge1xuICAgICAgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHhbMF0sIHlbMF0pIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeFswXSwgeVswXSk7XG4gICAgICBpZiAobiA9PT0gMikge1xuICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyh4WzFdLCB5WzFdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBweCA9IGNvbnRyb2xQb2ludHMoeCksXG4gICAgICAgICAgICBweSA9IGNvbnRyb2xQb2ludHMoeSk7XG4gICAgICAgIGZvciAodmFyIGkwID0gMCwgaTEgPSAxOyBpMSA8IG47ICsraTAsICsraTEpIHtcbiAgICAgICAgICB0aGlzLl9jb250ZXh0LmJlemllckN1cnZlVG8ocHhbMF1baTBdLCBweVswXVtpMF0sIHB4WzFdW2kwXSwgcHlbMV1baTBdLCB4W2kxXSwgeVtpMV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgbiA9PT0gMSkpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICAgIHRoaXMuX3ggPSB0aGlzLl95ID0gbnVsbDtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB0aGlzLl94LnB1c2goK3gpO1xuICAgIHRoaXMuX3kucHVzaCgreSk7XG4gIH1cbn07XG5cbi8vIFNlZSBodHRwczovL3d3dy5wYXJ0aWNsZWluY2VsbC5jb20vMjAxMi9iZXppZXItc3BsaW5lcy8gZm9yIGRlcml2YXRpb24uXG5mdW5jdGlvbiBjb250cm9sUG9pbnRzKHgpIHtcbiAgdmFyIGksXG4gICAgICBuID0geC5sZW5ndGggLSAxLFxuICAgICAgbSxcbiAgICAgIGEgPSBuZXcgQXJyYXkobiksXG4gICAgICBiID0gbmV3IEFycmF5KG4pLFxuICAgICAgciA9IG5ldyBBcnJheShuKTtcbiAgYVswXSA9IDAsIGJbMF0gPSAyLCByWzBdID0geFswXSArIDIgKiB4WzFdO1xuICBmb3IgKGkgPSAxOyBpIDwgbiAtIDE7ICsraSkgYVtpXSA9IDEsIGJbaV0gPSA0LCByW2ldID0gNCAqIHhbaV0gKyAyICogeFtpICsgMV07XG4gIGFbbiAtIDFdID0gMiwgYltuIC0gMV0gPSA3LCByW24gLSAxXSA9IDggKiB4W24gLSAxXSArIHhbbl07XG4gIGZvciAoaSA9IDE7IGkgPCBuOyArK2kpIG0gPSBhW2ldIC8gYltpIC0gMV0sIGJbaV0gLT0gbSwgcltpXSAtPSBtICogcltpIC0gMV07XG4gIGFbbiAtIDFdID0gcltuIC0gMV0gLyBiW24gLSAxXTtcbiAgZm9yIChpID0gbiAtIDI7IGkgPj0gMDsgLS1pKSBhW2ldID0gKHJbaV0gLSBhW2kgKyAxXSkgLyBiW2ldO1xuICBiW24gLSAxXSA9ICh4W25dICsgYVtuIC0gMV0pIC8gMjtcbiAgZm9yIChpID0gMDsgaSA8IG4gLSAxOyArK2kpIGJbaV0gPSAyICogeFtpICsgMV0gLSBhW2kgKyAxXTtcbiAgcmV0dXJuIFthLCBiXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29udGV4dCkge1xuICByZXR1cm4gbmV3IE5hdHVyYWwoY29udGV4dCk7XG59XG4iLCJpbXBvcnQgY3VydmVMaW5lYXIgZnJvbSBcIi4vbGluZWFyXCI7XG5cbmV4cG9ydCB2YXIgY3VydmVSYWRpYWxMaW5lYXIgPSBjdXJ2ZVJhZGlhbChjdXJ2ZUxpbmVhcik7XG5cbmZ1bmN0aW9uIFJhZGlhbChjdXJ2ZSkge1xuICB0aGlzLl9jdXJ2ZSA9IGN1cnZlO1xufVxuXG5SYWRpYWwucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2N1cnZlLmFyZWFTdGFydCgpO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9jdXJ2ZS5hcmVhRW5kKCk7XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fY3VydmUubGluZVN0YXJ0KCk7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2N1cnZlLmxpbmVFbmQoKTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKGEsIHIpIHtcbiAgICB0aGlzLl9jdXJ2ZS5wb2ludChyICogTWF0aC5zaW4oYSksIHIgKiAtTWF0aC5jb3MoYSkpO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjdXJ2ZVJhZGlhbChjdXJ2ZSkge1xuXG4gIGZ1bmN0aW9uIHJhZGlhbChjb250ZXh0KSB7XG4gICAgcmV0dXJuIG5ldyBSYWRpYWwoY3VydmUoY29udGV4dCkpO1xuICB9XG5cbiAgcmFkaWFsLl9jdXJ2ZSA9IGN1cnZlO1xuXG4gIHJldHVybiByYWRpYWw7XG59XG4iLCJmdW5jdGlvbiBTdGVwKGNvbnRleHQsIHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG4gIHRoaXMuX3QgPSB0O1xufVxuXG5TdGVwLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94ID0gdGhpcy5feSA9IE5hTjtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICgwIDwgdGhpcy5fdCAmJiB0aGlzLl90IDwgMSAmJiB0aGlzLl9wb2ludCA9PT0gMikgdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feCwgdGhpcy5feSk7XG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgdGhpcy5fcG9pbnQgPT09IDEpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIGlmICh0aGlzLl9saW5lID49IDApIHRoaXMuX3QgPSAxIC0gdGhpcy5fdCwgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSkgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LCB5KTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgLy8gcHJvY2VlZFxuICAgICAgZGVmYXVsdDoge1xuICAgICAgICBpZiAodGhpcy5fdCA8PSAwKSB7XG4gICAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feCwgeSk7XG4gICAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHgxID0gdGhpcy5feCAqICgxIC0gdGhpcy5fdCkgKyB4ICogdGhpcy5fdDtcbiAgICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyh4MSwgdGhpcy5feSk7XG4gICAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8oeDEsIHkpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLl94ID0geCwgdGhpcy5feSA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBTdGVwKGNvbnRleHQsIDAuNSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdGVwQmVmb3JlKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBTdGVwKGNvbnRleHQsIDApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RlcEFmdGVyKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBTdGVwKGNvbnRleHQsIDEpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICByZXR1cm4gYiA8IGEgPyAtMSA6IGIgPiBhID8gMSA6IGIgPj0gYSA/IDAgOiBOYU47XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihkKSB7XG4gIHJldHVybiBkO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGFyY30gZnJvbSBcIi4vYXJjXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgYXJlYX0gZnJvbSBcIi4vYXJlYVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGxpbmV9IGZyb20gXCIuL2xpbmVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwaWV9IGZyb20gXCIuL3BpZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGFyZWFSYWRpYWwsIGRlZmF1bHQgYXMgcmFkaWFsQXJlYX0gZnJvbSBcIi4vYXJlYVJhZGlhbFwiOyAvLyBOb3RlOiByYWRpYWxBcmVhIGlzIGRlcHJlY2F0ZWQhXG5leHBvcnQge2RlZmF1bHQgYXMgbGluZVJhZGlhbCwgZGVmYXVsdCBhcyByYWRpYWxMaW5lfSBmcm9tIFwiLi9saW5lUmFkaWFsXCI7IC8vIE5vdGU6IHJhZGlhbExpbmUgaXMgZGVwcmVjYXRlZCFcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwb2ludFJhZGlhbH0gZnJvbSBcIi4vcG9pbnRSYWRpYWxcIjtcbmV4cG9ydCB7bGlua0hvcml6b250YWwsIGxpbmtWZXJ0aWNhbCwgbGlua1JhZGlhbH0gZnJvbSBcIi4vbGluay9pbmRleFwiO1xuXG5leHBvcnQge2RlZmF1bHQgYXMgc3ltYm9sLCBzeW1ib2xzfSBmcm9tIFwiLi9zeW1ib2xcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzeW1ib2xDaXJjbGV9IGZyb20gXCIuL3N5bWJvbC9jaXJjbGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzeW1ib2xDcm9zc30gZnJvbSBcIi4vc3ltYm9sL2Nyb3NzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3ltYm9sRGlhbW9uZH0gZnJvbSBcIi4vc3ltYm9sL2RpYW1vbmRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzeW1ib2xTcXVhcmV9IGZyb20gXCIuL3N5bWJvbC9zcXVhcmVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzeW1ib2xTdGFyfSBmcm9tIFwiLi9zeW1ib2wvc3RhclwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN5bWJvbFRyaWFuZ2xlfSBmcm9tIFwiLi9zeW1ib2wvdHJpYW5nbGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzeW1ib2xXeWV9IGZyb20gXCIuL3N5bWJvbC93eWVcIjtcblxuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQmFzaXNDbG9zZWR9IGZyb20gXCIuL2N1cnZlL2Jhc2lzQ2xvc2VkXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVCYXNpc09wZW59IGZyb20gXCIuL2N1cnZlL2Jhc2lzT3BlblwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQmFzaXN9IGZyb20gXCIuL2N1cnZlL2Jhc2lzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVCdW5kbGV9IGZyb20gXCIuL2N1cnZlL2J1bmRsZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQ2FyZGluYWxDbG9zZWR9IGZyb20gXCIuL2N1cnZlL2NhcmRpbmFsQ2xvc2VkXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVDYXJkaW5hbE9wZW59IGZyb20gXCIuL2N1cnZlL2NhcmRpbmFsT3BlblwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQ2FyZGluYWx9IGZyb20gXCIuL2N1cnZlL2NhcmRpbmFsXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVDYXRtdWxsUm9tQ2xvc2VkfSBmcm9tIFwiLi9jdXJ2ZS9jYXRtdWxsUm9tQ2xvc2VkXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVDYXRtdWxsUm9tT3Blbn0gZnJvbSBcIi4vY3VydmUvY2F0bXVsbFJvbU9wZW5cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUNhdG11bGxSb219IGZyb20gXCIuL2N1cnZlL2NhdG11bGxSb21cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUxpbmVhckNsb3NlZH0gZnJvbSBcIi4vY3VydmUvbGluZWFyQ2xvc2VkXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVMaW5lYXJ9IGZyb20gXCIuL2N1cnZlL2xpbmVhclwiO1xuZXhwb3J0IHttb25vdG9uZVggYXMgY3VydmVNb25vdG9uZVgsIG1vbm90b25lWSBhcyBjdXJ2ZU1vbm90b25lWX0gZnJvbSBcIi4vY3VydmUvbW9ub3RvbmVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZU5hdHVyYWx9IGZyb20gXCIuL2N1cnZlL25hdHVyYWxcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZVN0ZXAsIHN0ZXBBZnRlciBhcyBjdXJ2ZVN0ZXBBZnRlciwgc3RlcEJlZm9yZSBhcyBjdXJ2ZVN0ZXBCZWZvcmV9IGZyb20gXCIuL2N1cnZlL3N0ZXBcIjtcblxuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrfSBmcm9tIFwiLi9zdGFja1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT2Zmc2V0RXhwYW5kfSBmcm9tIFwiLi9vZmZzZXQvZXhwYW5kXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPZmZzZXREaXZlcmdpbmd9IGZyb20gXCIuL29mZnNldC9kaXZlcmdpbmdcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09mZnNldE5vbmV9IGZyb20gXCIuL29mZnNldC9ub25lXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPZmZzZXRTaWxob3VldHRlfSBmcm9tIFwiLi9vZmZzZXQvc2lsaG91ZXR0ZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT2Zmc2V0V2lnZ2xlfSBmcm9tIFwiLi9vZmZzZXQvd2lnZ2xlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPcmRlckFwcGVhcmFuY2V9IGZyb20gXCIuL29yZGVyL2FwcGVhcmFuY2VcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09yZGVyQXNjZW5kaW5nfSBmcm9tIFwiLi9vcmRlci9hc2NlbmRpbmdcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09yZGVyRGVzY2VuZGluZ30gZnJvbSBcIi4vb3JkZXIvZGVzY2VuZGluZ1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT3JkZXJJbnNpZGVPdXR9IGZyb20gXCIuL29yZGVyL2luc2lkZU91dFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT3JkZXJOb25lfSBmcm9tIFwiLi9vcmRlci9ub25lXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPcmRlclJldmVyc2V9IGZyb20gXCIuL29yZGVyL3JldmVyc2VcIjtcbiIsImltcG9ydCB7cGF0aH0gZnJvbSBcImQzLXBhdGhcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IGN1cnZlTGluZWFyIGZyb20gXCIuL2N1cnZlL2xpbmVhclwiO1xuaW1wb3J0IHt4IGFzIHBvaW50WCwgeSBhcyBwb2ludFl9IGZyb20gXCIuL3BvaW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgeCA9IHBvaW50WCxcbiAgICAgIHkgPSBwb2ludFksXG4gICAgICBkZWZpbmVkID0gY29uc3RhbnQodHJ1ZSksXG4gICAgICBjb250ZXh0ID0gbnVsbCxcbiAgICAgIGN1cnZlID0gY3VydmVMaW5lYXIsXG4gICAgICBvdXRwdXQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGxpbmUoZGF0YSkge1xuICAgIHZhciBpLFxuICAgICAgICBuID0gZGF0YS5sZW5ndGgsXG4gICAgICAgIGQsXG4gICAgICAgIGRlZmluZWQwID0gZmFsc2UsXG4gICAgICAgIGJ1ZmZlcjtcblxuICAgIGlmIChjb250ZXh0ID09IG51bGwpIG91dHB1dCA9IGN1cnZlKGJ1ZmZlciA9IHBhdGgoKSk7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDw9IG47ICsraSkge1xuICAgICAgaWYgKCEoaSA8IG4gJiYgZGVmaW5lZChkID0gZGF0YVtpXSwgaSwgZGF0YSkpID09PSBkZWZpbmVkMCkge1xuICAgICAgICBpZiAoZGVmaW5lZDAgPSAhZGVmaW5lZDApIG91dHB1dC5saW5lU3RhcnQoKTtcbiAgICAgICAgZWxzZSBvdXRwdXQubGluZUVuZCgpO1xuICAgICAgfVxuICAgICAgaWYgKGRlZmluZWQwKSBvdXRwdXQucG9pbnQoK3goZCwgaSwgZGF0YSksICt5KGQsIGksIGRhdGEpKTtcbiAgICB9XG5cbiAgICBpZiAoYnVmZmVyKSByZXR1cm4gb3V0cHV0ID0gbnVsbCwgYnVmZmVyICsgXCJcIiB8fCBudWxsO1xuICB9XG5cbiAgbGluZS54ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgbGluZSkgOiB4O1xuICB9O1xuXG4gIGxpbmUueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGxpbmUpIDogeTtcbiAgfTtcblxuICBsaW5lLmRlZmluZWQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZGVmaW5lZCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgbGluZSkgOiBkZWZpbmVkO1xuICB9O1xuXG4gIGxpbmUuY3VydmUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY3VydmUgPSBfLCBjb250ZXh0ICE9IG51bGwgJiYgKG91dHB1dCA9IGN1cnZlKGNvbnRleHQpKSwgbGluZSkgOiBjdXJ2ZTtcbiAgfTtcblxuICBsaW5lLmNvbnRleHQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoXyA9PSBudWxsID8gY29udGV4dCA9IG91dHB1dCA9IG51bGwgOiBvdXRwdXQgPSBjdXJ2ZShjb250ZXh0ID0gXyksIGxpbmUpIDogY29udGV4dDtcbiAgfTtcblxuICByZXR1cm4gbGluZTtcbn1cbiIsImltcG9ydCBjdXJ2ZVJhZGlhbCwge2N1cnZlUmFkaWFsTGluZWFyfSBmcm9tIFwiLi9jdXJ2ZS9yYWRpYWxcIjtcbmltcG9ydCBsaW5lIGZyb20gXCIuL2xpbmVcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGxpbmVSYWRpYWwobCkge1xuICB2YXIgYyA9IGwuY3VydmU7XG5cbiAgbC5hbmdsZSA9IGwueCwgZGVsZXRlIGwueDtcbiAgbC5yYWRpdXMgPSBsLnksIGRlbGV0ZSBsLnk7XG5cbiAgbC5jdXJ2ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IGMoY3VydmVSYWRpYWwoXykpIDogYygpLl9jdXJ2ZTtcbiAgfTtcblxuICByZXR1cm4gbDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBsaW5lUmFkaWFsKGxpbmUoKS5jdXJ2ZShjdXJ2ZVJhZGlhbExpbmVhcikpO1xufVxuIiwiaW1wb3J0IHtwYXRofSBmcm9tIFwiZDMtcGF0aFwiO1xuaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4uL2FycmF5XCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4uL2NvbnN0YW50XCI7XG5pbXBvcnQge3ggYXMgcG9pbnRYLCB5IGFzIHBvaW50WX0gZnJvbSBcIi4uL3BvaW50XCI7XG5pbXBvcnQgcG9pbnRSYWRpYWwgZnJvbSBcIi4uL3BvaW50UmFkaWFsXCI7XG5cbmZ1bmN0aW9uIGxpbmtTb3VyY2UoZCkge1xuICByZXR1cm4gZC5zb3VyY2U7XG59XG5cbmZ1bmN0aW9uIGxpbmtUYXJnZXQoZCkge1xuICByZXR1cm4gZC50YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIGxpbmsoY3VydmUpIHtcbiAgdmFyIHNvdXJjZSA9IGxpbmtTb3VyY2UsXG4gICAgICB0YXJnZXQgPSBsaW5rVGFyZ2V0LFxuICAgICAgeCA9IHBvaW50WCxcbiAgICAgIHkgPSBwb2ludFksXG4gICAgICBjb250ZXh0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBsaW5rKCkge1xuICAgIHZhciBidWZmZXIsIGFyZ3YgPSBzbGljZS5jYWxsKGFyZ3VtZW50cyksIHMgPSBzb3VyY2UuYXBwbHkodGhpcywgYXJndiksIHQgPSB0YXJnZXQuYXBwbHkodGhpcywgYXJndik7XG4gICAgaWYgKCFjb250ZXh0KSBjb250ZXh0ID0gYnVmZmVyID0gcGF0aCgpO1xuICAgIGN1cnZlKGNvbnRleHQsICt4LmFwcGx5KHRoaXMsIChhcmd2WzBdID0gcywgYXJndikpLCAreS5hcHBseSh0aGlzLCBhcmd2KSwgK3guYXBwbHkodGhpcywgKGFyZ3ZbMF0gPSB0LCBhcmd2KSksICt5LmFwcGx5KHRoaXMsIGFyZ3YpKTtcbiAgICBpZiAoYnVmZmVyKSByZXR1cm4gY29udGV4dCA9IG51bGwsIGJ1ZmZlciArIFwiXCIgfHwgbnVsbDtcbiAgfVxuXG4gIGxpbmsuc291cmNlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNvdXJjZSA9IF8sIGxpbmspIDogc291cmNlO1xuICB9O1xuXG4gIGxpbmsudGFyZ2V0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRhcmdldCA9IF8sIGxpbmspIDogdGFyZ2V0O1xuICB9O1xuXG4gIGxpbmsueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGxpbmspIDogeDtcbiAgfTtcblxuICBsaW5rLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBsaW5rKSA6IHk7XG4gIH07XG5cbiAgbGluay5jb250ZXh0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKChjb250ZXh0ID0gXyA9PSBudWxsID8gbnVsbCA6IF8pLCBsaW5rKSA6IGNvbnRleHQ7XG4gIH07XG5cbiAgcmV0dXJuIGxpbms7XG59XG5cbmZ1bmN0aW9uIGN1cnZlSG9yaXpvbnRhbChjb250ZXh0LCB4MCwgeTAsIHgxLCB5MSkge1xuICBjb250ZXh0Lm1vdmVUbyh4MCwgeTApO1xuICBjb250ZXh0LmJlemllckN1cnZlVG8oeDAgPSAoeDAgKyB4MSkgLyAyLCB5MCwgeDAsIHkxLCB4MSwgeTEpO1xufVxuXG5mdW5jdGlvbiBjdXJ2ZVZlcnRpY2FsKGNvbnRleHQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIGNvbnRleHQubW92ZVRvKHgwLCB5MCk7XG4gIGNvbnRleHQuYmV6aWVyQ3VydmVUbyh4MCwgeTAgPSAoeTAgKyB5MSkgLyAyLCB4MSwgeTAsIHgxLCB5MSk7XG59XG5cbmZ1bmN0aW9uIGN1cnZlUmFkaWFsKGNvbnRleHQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIHZhciBwMCA9IHBvaW50UmFkaWFsKHgwLCB5MCksXG4gICAgICBwMSA9IHBvaW50UmFkaWFsKHgwLCB5MCA9ICh5MCArIHkxKSAvIDIpLFxuICAgICAgcDIgPSBwb2ludFJhZGlhbCh4MSwgeTApLFxuICAgICAgcDMgPSBwb2ludFJhZGlhbCh4MSwgeTEpO1xuICBjb250ZXh0Lm1vdmVUbyhwMFswXSwgcDBbMV0pO1xuICBjb250ZXh0LmJlemllckN1cnZlVG8ocDFbMF0sIHAxWzFdLCBwMlswXSwgcDJbMV0sIHAzWzBdLCBwM1sxXSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsaW5rSG9yaXpvbnRhbCgpIHtcbiAgcmV0dXJuIGxpbmsoY3VydmVIb3Jpem9udGFsKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxpbmtWZXJ0aWNhbCgpIHtcbiAgcmV0dXJuIGxpbmsoY3VydmVWZXJ0aWNhbCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsaW5rUmFkaWFsKCkge1xuICB2YXIgbCA9IGxpbmsoY3VydmVSYWRpYWwpO1xuICBsLmFuZ2xlID0gbC54LCBkZWxldGUgbC54O1xuICBsLnJhZGl1cyA9IGwueSwgZGVsZXRlIGwueTtcbiAgcmV0dXJuIGw7XG59XG4iLCJleHBvcnQgdmFyIGFicyA9IE1hdGguYWJzO1xuZXhwb3J0IHZhciBhdGFuMiA9IE1hdGguYXRhbjI7XG5leHBvcnQgdmFyIGNvcyA9IE1hdGguY29zO1xuZXhwb3J0IHZhciBtYXggPSBNYXRoLm1heDtcbmV4cG9ydCB2YXIgbWluID0gTWF0aC5taW47XG5leHBvcnQgdmFyIHNpbiA9IE1hdGguc2luO1xuZXhwb3J0IHZhciBzcXJ0ID0gTWF0aC5zcXJ0O1xuXG5leHBvcnQgdmFyIGVwc2lsb24gPSAxZS0xMjtcbmV4cG9ydCB2YXIgcGkgPSBNYXRoLlBJO1xuZXhwb3J0IHZhciBoYWxmUGkgPSBwaSAvIDI7XG5leHBvcnQgdmFyIHRhdSA9IDIgKiBwaTtcblxuZXhwb3J0IGZ1bmN0aW9uIGFjb3MoeCkge1xuICByZXR1cm4geCA+IDEgPyAwIDogeCA8IC0xID8gcGkgOiBNYXRoLmFjb3MoeCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc2luKHgpIHtcbiAgcmV0dXJuIHggPj0gMSA/IGhhbGZQaSA6IHggPD0gLTEgPyAtaGFsZlBpIDogTWF0aC5hc2luKHgpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7fVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzLCBvcmRlcikge1xuICBpZiAoISgobiA9IHNlcmllcy5sZW5ndGgpID4gMCkpIHJldHVybjtcbiAgZm9yICh2YXIgaSwgaiA9IDAsIGQsIGR5LCB5cCwgeW4sIG4sIG0gPSBzZXJpZXNbb3JkZXJbMF1dLmxlbmd0aDsgaiA8IG07ICsraikge1xuICAgIGZvciAoeXAgPSB5biA9IDAsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKGR5ID0gKGQgPSBzZXJpZXNbb3JkZXJbaV1dW2pdKVsxXSAtIGRbMF0pID49IDApIHtcbiAgICAgICAgZFswXSA9IHlwLCBkWzFdID0geXAgKz0gZHk7XG4gICAgICB9IGVsc2UgaWYgKGR5IDwgMCkge1xuICAgICAgICBkWzFdID0geW4sIGRbMF0gPSB5biArPSBkeTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRbMF0gPSB5cDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCBub25lIGZyb20gXCIuL25vbmVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzLCBvcmRlcikge1xuICBpZiAoISgobiA9IHNlcmllcy5sZW5ndGgpID4gMCkpIHJldHVybjtcbiAgZm9yICh2YXIgaSwgbiwgaiA9IDAsIG0gPSBzZXJpZXNbMF0ubGVuZ3RoLCB5OyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh5ID0gaSA9IDA7IGkgPCBuOyArK2kpIHkgKz0gc2VyaWVzW2ldW2pdWzFdIHx8IDA7XG4gICAgaWYgKHkpIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHNlcmllc1tpXVtqXVsxXSAvPSB5O1xuICB9XG4gIG5vbmUoc2VyaWVzLCBvcmRlcik7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMsIG9yZGVyKSB7XG4gIGlmICghKChuID0gc2VyaWVzLmxlbmd0aCkgPiAxKSkgcmV0dXJuO1xuICBmb3IgKHZhciBpID0gMSwgaiwgczAsIHMxID0gc2VyaWVzW29yZGVyWzBdXSwgbiwgbSA9IHMxLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgIHMwID0gczEsIHMxID0gc2VyaWVzW29yZGVyW2ldXTtcbiAgICBmb3IgKGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgICBzMVtqXVsxXSArPSBzMVtqXVswXSA9IGlzTmFOKHMwW2pdWzFdKSA/IHMwW2pdWzBdIDogczBbal1bMV07XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgbm9uZSBmcm9tIFwiLi9ub25lXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcywgb3JkZXIpIHtcbiAgaWYgKCEoKG4gPSBzZXJpZXMubGVuZ3RoKSA+IDApKSByZXR1cm47XG4gIGZvciAodmFyIGogPSAwLCBzMCA9IHNlcmllc1tvcmRlclswXV0sIG4sIG0gPSBzMC5sZW5ndGg7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBpID0gMCwgeSA9IDA7IGkgPCBuOyArK2kpIHkgKz0gc2VyaWVzW2ldW2pdWzFdIHx8IDA7XG4gICAgczBbal1bMV0gKz0gczBbal1bMF0gPSAteSAvIDI7XG4gIH1cbiAgbm9uZShzZXJpZXMsIG9yZGVyKTtcbn1cbiIsImltcG9ydCBub25lIGZyb20gXCIuL25vbmVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzLCBvcmRlcikge1xuICBpZiAoISgobiA9IHNlcmllcy5sZW5ndGgpID4gMCkgfHwgISgobSA9IChzMCA9IHNlcmllc1tvcmRlclswXV0pLmxlbmd0aCkgPiAwKSkgcmV0dXJuO1xuICBmb3IgKHZhciB5ID0gMCwgaiA9IDEsIHMwLCBtLCBuOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIHMxID0gMCwgczIgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICB2YXIgc2kgPSBzZXJpZXNbb3JkZXJbaV1dLFxuICAgICAgICAgIHNpajAgPSBzaVtqXVsxXSB8fCAwLFxuICAgICAgICAgIHNpajEgPSBzaVtqIC0gMV1bMV0gfHwgMCxcbiAgICAgICAgICBzMyA9IChzaWowIC0gc2lqMSkgLyAyO1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCBpOyArK2spIHtcbiAgICAgICAgdmFyIHNrID0gc2VyaWVzW29yZGVyW2tdXSxcbiAgICAgICAgICAgIHNrajAgPSBza1tqXVsxXSB8fCAwLFxuICAgICAgICAgICAgc2tqMSA9IHNrW2ogLSAxXVsxXSB8fCAwO1xuICAgICAgICBzMyArPSBza2owIC0gc2tqMTtcbiAgICAgIH1cbiAgICAgIHMxICs9IHNpajAsIHMyICs9IHMzICogc2lqMDtcbiAgICB9XG4gICAgczBbaiAtIDFdWzFdICs9IHMwW2ogLSAxXVswXSA9IHk7XG4gICAgaWYgKHMxKSB5IC09IHMyIC8gczE7XG4gIH1cbiAgczBbaiAtIDFdWzFdICs9IHMwW2ogLSAxXVswXSA9IHk7XG4gIG5vbmUoc2VyaWVzLCBvcmRlcik7XG59XG4iLCJpbXBvcnQgbm9uZSBmcm9tIFwiLi9ub25lXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcykge1xuICB2YXIgcGVha3MgPSBzZXJpZXMubWFwKHBlYWspO1xuICByZXR1cm4gbm9uZShzZXJpZXMpLnNvcnQoZnVuY3Rpb24oYSwgYikgeyByZXR1cm4gcGVha3NbYV0gLSBwZWFrc1tiXTsgfSk7XG59XG5cbmZ1bmN0aW9uIHBlYWsoc2VyaWVzKSB7XG4gIHZhciBpID0gLTEsIGogPSAwLCBuID0gc2VyaWVzLmxlbmd0aCwgdmksIHZqID0gLUluZmluaXR5O1xuICB3aGlsZSAoKytpIDwgbikgaWYgKCh2aSA9ICtzZXJpZXNbaV1bMV0pID4gdmopIHZqID0gdmksIGogPSBpO1xuICByZXR1cm4gajtcbn1cbiIsImltcG9ydCBub25lIGZyb20gXCIuL25vbmVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzKSB7XG4gIHZhciBzdW1zID0gc2VyaWVzLm1hcChzdW0pO1xuICByZXR1cm4gbm9uZShzZXJpZXMpLnNvcnQoZnVuY3Rpb24oYSwgYikgeyByZXR1cm4gc3Vtc1thXSAtIHN1bXNbYl07IH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3VtKHNlcmllcykge1xuICB2YXIgcyA9IDAsIGkgPSAtMSwgbiA9IHNlcmllcy5sZW5ndGgsIHY7XG4gIHdoaWxlICgrK2kgPCBuKSBpZiAodiA9ICtzZXJpZXNbaV1bMV0pIHMgKz0gdjtcbiAgcmV0dXJuIHM7XG59XG4iLCJpbXBvcnQgYXNjZW5kaW5nIGZyb20gXCIuL2FzY2VuZGluZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMpIHtcbiAgcmV0dXJuIGFzY2VuZGluZyhzZXJpZXMpLnJldmVyc2UoKTtcbn1cbiIsImltcG9ydCBhcHBlYXJhbmNlIGZyb20gXCIuL2FwcGVhcmFuY2VcIjtcbmltcG9ydCB7c3VtfSBmcm9tIFwiLi9hc2NlbmRpbmdcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzKSB7XG4gIHZhciBuID0gc2VyaWVzLmxlbmd0aCxcbiAgICAgIGksXG4gICAgICBqLFxuICAgICAgc3VtcyA9IHNlcmllcy5tYXAoc3VtKSxcbiAgICAgIG9yZGVyID0gYXBwZWFyYW5jZShzZXJpZXMpLFxuICAgICAgdG9wID0gMCxcbiAgICAgIGJvdHRvbSA9IDAsXG4gICAgICB0b3BzID0gW10sXG4gICAgICBib3R0b21zID0gW107XG5cbiAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgIGogPSBvcmRlcltpXTtcbiAgICBpZiAodG9wIDwgYm90dG9tKSB7XG4gICAgICB0b3AgKz0gc3Vtc1tqXTtcbiAgICAgIHRvcHMucHVzaChqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYm90dG9tICs9IHN1bXNbal07XG4gICAgICBib3R0b21zLnB1c2goaik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGJvdHRvbXMucmV2ZXJzZSgpLmNvbmNhdCh0b3BzKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcykge1xuICB2YXIgbiA9IHNlcmllcy5sZW5ndGgsIG8gPSBuZXcgQXJyYXkobik7XG4gIHdoaWxlICgtLW4gPj0gMCkgb1tuXSA9IG47XG4gIHJldHVybiBvO1xufVxuIiwiaW1wb3J0IG5vbmUgZnJvbSBcIi4vbm9uZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMpIHtcbiAgcmV0dXJuIG5vbmUoc2VyaWVzKS5yZXZlcnNlKCk7XG59XG4iLCJpbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBkZXNjZW5kaW5nIGZyb20gXCIuL2Rlc2NlbmRpbmdcIjtcbmltcG9ydCBpZGVudGl0eSBmcm9tIFwiLi9pZGVudGl0eVwiO1xuaW1wb3J0IHt0YXV9IGZyb20gXCIuL21hdGhcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciB2YWx1ZSA9IGlkZW50aXR5LFxuICAgICAgc29ydFZhbHVlcyA9IGRlc2NlbmRpbmcsXG4gICAgICBzb3J0ID0gbnVsbCxcbiAgICAgIHN0YXJ0QW5nbGUgPSBjb25zdGFudCgwKSxcbiAgICAgIGVuZEFuZ2xlID0gY29uc3RhbnQodGF1KSxcbiAgICAgIHBhZEFuZ2xlID0gY29uc3RhbnQoMCk7XG5cbiAgZnVuY3Rpb24gcGllKGRhdGEpIHtcbiAgICB2YXIgaSxcbiAgICAgICAgbiA9IGRhdGEubGVuZ3RoLFxuICAgICAgICBqLFxuICAgICAgICBrLFxuICAgICAgICBzdW0gPSAwLFxuICAgICAgICBpbmRleCA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgYXJjcyA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgYTAgPSArc3RhcnRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICBkYSA9IE1hdGgubWluKHRhdSwgTWF0aC5tYXgoLXRhdSwgZW5kQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSAtIGEwKSksXG4gICAgICAgIGExLFxuICAgICAgICBwID0gTWF0aC5taW4oTWF0aC5hYnMoZGEpIC8gbiwgcGFkQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSksXG4gICAgICAgIHBhID0gcCAqIChkYSA8IDAgPyAtMSA6IDEpLFxuICAgICAgICB2O1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKCh2ID0gYXJjc1tpbmRleFtpXSA9IGldID0gK3ZhbHVlKGRhdGFbaV0sIGksIGRhdGEpKSA+IDApIHtcbiAgICAgICAgc3VtICs9IHY7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gT3B0aW9uYWxseSBzb3J0IHRoZSBhcmNzIGJ5IHByZXZpb3VzbHktY29tcHV0ZWQgdmFsdWVzIG9yIGJ5IGRhdGEuXG4gICAgaWYgKHNvcnRWYWx1ZXMgIT0gbnVsbCkgaW5kZXguc29ydChmdW5jdGlvbihpLCBqKSB7IHJldHVybiBzb3J0VmFsdWVzKGFyY3NbaV0sIGFyY3Nbal0pOyB9KTtcbiAgICBlbHNlIGlmIChzb3J0ICE9IG51bGwpIGluZGV4LnNvcnQoZnVuY3Rpb24oaSwgaikgeyByZXR1cm4gc29ydChkYXRhW2ldLCBkYXRhW2pdKTsgfSk7XG5cbiAgICAvLyBDb21wdXRlIHRoZSBhcmNzISBUaGV5IGFyZSBzdG9yZWQgaW4gdGhlIG9yaWdpbmFsIGRhdGEncyBvcmRlci5cbiAgICBmb3IgKGkgPSAwLCBrID0gc3VtID8gKGRhIC0gbiAqIHBhKSAvIHN1bSA6IDA7IGkgPCBuOyArK2ksIGEwID0gYTEpIHtcbiAgICAgIGogPSBpbmRleFtpXSwgdiA9IGFyY3Nbal0sIGExID0gYTAgKyAodiA+IDAgPyB2ICogayA6IDApICsgcGEsIGFyY3Nbal0gPSB7XG4gICAgICAgIGRhdGE6IGRhdGFbal0sXG4gICAgICAgIGluZGV4OiBpLFxuICAgICAgICB2YWx1ZTogdixcbiAgICAgICAgc3RhcnRBbmdsZTogYTAsXG4gICAgICAgIGVuZEFuZ2xlOiBhMSxcbiAgICAgICAgcGFkQW5nbGU6IHBcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIGFyY3M7XG4gIH1cblxuICBwaWUudmFsdWUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodmFsdWUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgcGllKSA6IHZhbHVlO1xuICB9O1xuXG4gIHBpZS5zb3J0VmFsdWVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNvcnRWYWx1ZXMgPSBfLCBzb3J0ID0gbnVsbCwgcGllKSA6IHNvcnRWYWx1ZXM7XG4gIH07XG5cbiAgcGllLnNvcnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc29ydCA9IF8sIHNvcnRWYWx1ZXMgPSBudWxsLCBwaWUpIDogc29ydDtcbiAgfTtcblxuICBwaWUuc3RhcnRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzdGFydEFuZ2xlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHBpZSkgOiBzdGFydEFuZ2xlO1xuICB9O1xuXG4gIHBpZS5lbmRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlbmRBbmdsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBwaWUpIDogZW5kQW5nbGU7XG4gIH07XG5cbiAgcGllLnBhZEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZEFuZ2xlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHBpZSkgOiBwYWRBbmdsZTtcbiAgfTtcblxuICByZXR1cm4gcGllO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIHgocCkge1xuICByZXR1cm4gcFswXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHkocCkge1xuICByZXR1cm4gcFsxXTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgsIHkpIHtcbiAgcmV0dXJuIFsoeSA9ICt5KSAqIE1hdGguY29zKHggLT0gTWF0aC5QSSAvIDIpLCB5ICogTWF0aC5zaW4oeCldO1xufVxuIiwiaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IG9mZnNldE5vbmUgZnJvbSBcIi4vb2Zmc2V0L25vbmVcIjtcbmltcG9ydCBvcmRlck5vbmUgZnJvbSBcIi4vb3JkZXIvbm9uZVwiO1xuXG5mdW5jdGlvbiBzdGFja1ZhbHVlKGQsIGtleSkge1xuICByZXR1cm4gZFtrZXldO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGtleXMgPSBjb25zdGFudChbXSksXG4gICAgICBvcmRlciA9IG9yZGVyTm9uZSxcbiAgICAgIG9mZnNldCA9IG9mZnNldE5vbmUsXG4gICAgICB2YWx1ZSA9IHN0YWNrVmFsdWU7XG5cbiAgZnVuY3Rpb24gc3RhY2soZGF0YSkge1xuICAgIHZhciBreiA9IGtleXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgaSxcbiAgICAgICAgbSA9IGRhdGEubGVuZ3RoLFxuICAgICAgICBuID0ga3oubGVuZ3RoLFxuICAgICAgICBzeiA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgb3o7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBmb3IgKHZhciBraSA9IGt6W2ldLCBzaSA9IHN6W2ldID0gbmV3IEFycmF5KG0pLCBqID0gMCwgc2lqOyBqIDwgbTsgKytqKSB7XG4gICAgICAgIHNpW2pdID0gc2lqID0gWzAsICt2YWx1ZShkYXRhW2pdLCBraSwgaiwgZGF0YSldO1xuICAgICAgICBzaWouZGF0YSA9IGRhdGFbal07XG4gICAgICB9XG4gICAgICBzaS5rZXkgPSBraTtcbiAgICB9XG5cbiAgICBmb3IgKGkgPSAwLCBveiA9IG9yZGVyKHN6KTsgaSA8IG47ICsraSkge1xuICAgICAgc3pbb3pbaV1dLmluZGV4ID0gaTtcbiAgICB9XG5cbiAgICBvZmZzZXQoc3osIG96KTtcbiAgICByZXR1cm4gc3o7XG4gIH1cblxuICBzdGFjay5rZXlzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGtleXMgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KHNsaWNlLmNhbGwoXykpLCBzdGFjaykgOiBrZXlzO1xuICB9O1xuXG4gIHN0YWNrLnZhbHVlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHZhbHVlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHN0YWNrKSA6IHZhbHVlO1xuICB9O1xuXG4gIHN0YWNrLm9yZGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG9yZGVyID0gXyA9PSBudWxsID8gb3JkZXJOb25lIDogdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChzbGljZS5jYWxsKF8pKSwgc3RhY2spIDogb3JkZXI7XG4gIH07XG5cbiAgc3RhY2sub2Zmc2V0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG9mZnNldCA9IF8gPT0gbnVsbCA/IG9mZnNldE5vbmUgOiBfLCBzdGFjaykgOiBvZmZzZXQ7XG4gIH07XG5cbiAgcmV0dXJuIHN0YWNrO1xufVxuIiwiaW1wb3J0IHtwYXRofSBmcm9tIFwiZDMtcGF0aFwiO1xuaW1wb3J0IGNpcmNsZSBmcm9tIFwiLi9zeW1ib2wvY2lyY2xlXCI7XG5pbXBvcnQgY3Jvc3MgZnJvbSBcIi4vc3ltYm9sL2Nyb3NzXCI7XG5pbXBvcnQgZGlhbW9uZCBmcm9tIFwiLi9zeW1ib2wvZGlhbW9uZFwiO1xuaW1wb3J0IHN0YXIgZnJvbSBcIi4vc3ltYm9sL3N0YXJcIjtcbmltcG9ydCBzcXVhcmUgZnJvbSBcIi4vc3ltYm9sL3NxdWFyZVwiO1xuaW1wb3J0IHRyaWFuZ2xlIGZyb20gXCIuL3N5bWJvbC90cmlhbmdsZVwiO1xuaW1wb3J0IHd5ZSBmcm9tIFwiLi9zeW1ib2wvd3llXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcblxuZXhwb3J0IHZhciBzeW1ib2xzID0gW1xuICBjaXJjbGUsXG4gIGNyb3NzLFxuICBkaWFtb25kLFxuICBzcXVhcmUsXG4gIHN0YXIsXG4gIHRyaWFuZ2xlLFxuICB3eWVcbl07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgdHlwZSA9IGNvbnN0YW50KGNpcmNsZSksXG4gICAgICBzaXplID0gY29uc3RhbnQoNjQpLFxuICAgICAgY29udGV4dCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gc3ltYm9sKCkge1xuICAgIHZhciBidWZmZXI7XG4gICAgaWYgKCFjb250ZXh0KSBjb250ZXh0ID0gYnVmZmVyID0gcGF0aCgpO1xuICAgIHR5cGUuYXBwbHkodGhpcywgYXJndW1lbnRzKS5kcmF3KGNvbnRleHQsICtzaXplLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICAgIGlmIChidWZmZXIpIHJldHVybiBjb250ZXh0ID0gbnVsbCwgYnVmZmVyICsgXCJcIiB8fCBudWxsO1xuICB9XG5cbiAgc3ltYm9sLnR5cGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodHlwZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoXyksIHN5bWJvbCkgOiB0eXBlO1xuICB9O1xuXG4gIHN5bWJvbC5zaXplID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNpemUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgc3ltYm9sKSA6IHNpemU7XG4gIH07XG5cbiAgc3ltYm9sLmNvbnRleHQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY29udGV4dCA9IF8gPT0gbnVsbCA/IG51bGwgOiBfLCBzeW1ib2wpIDogY29udGV4dDtcbiAgfTtcblxuICByZXR1cm4gc3ltYm9sO1xufVxuIiwiaW1wb3J0IHtwaSwgdGF1fSBmcm9tIFwiLi4vbWF0aFwiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgciA9IE1hdGguc3FydChzaXplIC8gcGkpO1xuICAgIGNvbnRleHQubW92ZVRvKHIsIDApO1xuICAgIGNvbnRleHQuYXJjKDAsIDAsIHIsIDAsIHRhdSk7XG4gIH1cbn07XG4iLCJleHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgciA9IE1hdGguc3FydChzaXplIC8gNSkgLyAyO1xuICAgIGNvbnRleHQubW92ZVRvKC0zICogciwgLXIpO1xuICAgIGNvbnRleHQubGluZVRvKC1yLCAtcik7XG4gICAgY29udGV4dC5saW5lVG8oLXIsIC0zICogcik7XG4gICAgY29udGV4dC5saW5lVG8ociwgLTMgKiByKTtcbiAgICBjb250ZXh0LmxpbmVUbyhyLCAtcik7XG4gICAgY29udGV4dC5saW5lVG8oMyAqIHIsIC1yKTtcbiAgICBjb250ZXh0LmxpbmVUbygzICogciwgcik7XG4gICAgY29udGV4dC5saW5lVG8ociwgcik7XG4gICAgY29udGV4dC5saW5lVG8ociwgMyAqIHIpO1xuICAgIGNvbnRleHQubGluZVRvKC1yLCAzICogcik7XG4gICAgY29udGV4dC5saW5lVG8oLXIsIHIpO1xuICAgIGNvbnRleHQubGluZVRvKC0zICogciwgcik7XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgfVxufTtcbiIsInZhciB0YW4zMCA9IE1hdGguc3FydCgxIC8gMyksXG4gICAgdGFuMzBfMiA9IHRhbjMwICogMjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBkcmF3OiBmdW5jdGlvbihjb250ZXh0LCBzaXplKSB7XG4gICAgdmFyIHkgPSBNYXRoLnNxcnQoc2l6ZSAvIHRhbjMwXzIpLFxuICAgICAgICB4ID0geSAqIHRhbjMwO1xuICAgIGNvbnRleHQubW92ZVRvKDAsIC15KTtcbiAgICBjb250ZXh0LmxpbmVUbyh4LCAwKTtcbiAgICBjb250ZXh0LmxpbmVUbygwLCB5KTtcbiAgICBjb250ZXh0LmxpbmVUbygteCwgMCk7XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgfVxufTtcbiIsImV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciB3ID0gTWF0aC5zcXJ0KHNpemUpLFxuICAgICAgICB4ID0gLXcgLyAyO1xuICAgIGNvbnRleHQucmVjdCh4LCB4LCB3LCB3KTtcbiAgfVxufTtcbiIsImltcG9ydCB7cGksIHRhdX0gZnJvbSBcIi4uL21hdGhcIjtcblxudmFyIGthID0gMC44OTA4MTMwOTE1MjkyODUyMjgxMCxcbiAgICBrciA9IE1hdGguc2luKHBpIC8gMTApIC8gTWF0aC5zaW4oNyAqIHBpIC8gMTApLFxuICAgIGt4ID0gTWF0aC5zaW4odGF1IC8gMTApICoga3IsXG4gICAga3kgPSAtTWF0aC5jb3ModGF1IC8gMTApICoga3I7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgKiBrYSksXG4gICAgICAgIHggPSBreCAqIHIsXG4gICAgICAgIHkgPSBreSAqIHI7XG4gICAgY29udGV4dC5tb3ZlVG8oMCwgLXIpO1xuICAgIGNvbnRleHQubGluZVRvKHgsIHkpO1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgNTsgKytpKSB7XG4gICAgICB2YXIgYSA9IHRhdSAqIGkgLyA1LFxuICAgICAgICAgIGMgPSBNYXRoLmNvcyhhKSxcbiAgICAgICAgICBzID0gTWF0aC5zaW4oYSk7XG4gICAgICBjb250ZXh0LmxpbmVUbyhzICogciwgLWMgKiByKTtcbiAgICAgIGNvbnRleHQubGluZVRvKGMgKiB4IC0gcyAqIHksIHMgKiB4ICsgYyAqIHkpO1xuICAgIH1cbiAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICB9XG59O1xuIiwidmFyIHNxcnQzID0gTWF0aC5zcXJ0KDMpO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgeSA9IC1NYXRoLnNxcnQoc2l6ZSAvIChzcXJ0MyAqIDMpKTtcbiAgICBjb250ZXh0Lm1vdmVUbygwLCB5ICogMik7XG4gICAgY29udGV4dC5saW5lVG8oLXNxcnQzICogeSwgLXkpO1xuICAgIGNvbnRleHQubGluZVRvKHNxcnQzICogeSwgLXkpO1xuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gIH1cbn07XG4iLCJ2YXIgYyA9IC0wLjUsXG4gICAgcyA9IE1hdGguc3FydCgzKSAvIDIsXG4gICAgayA9IDEgLyBNYXRoLnNxcnQoMTIpLFxuICAgIGEgPSAoayAvIDIgKyAxKSAqIDM7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgLyBhKSxcbiAgICAgICAgeDAgPSByIC8gMixcbiAgICAgICAgeTAgPSByICogayxcbiAgICAgICAgeDEgPSB4MCxcbiAgICAgICAgeTEgPSByICogayArIHIsXG4gICAgICAgIHgyID0gLXgxLFxuICAgICAgICB5MiA9IHkxO1xuICAgIGNvbnRleHQubW92ZVRvKHgwLCB5MCk7XG4gICAgY29udGV4dC5saW5lVG8oeDEsIHkxKTtcbiAgICBjb250ZXh0LmxpbmVUbyh4MiwgeTIpO1xuICAgIGNvbnRleHQubGluZVRvKGMgKiB4MCAtIHMgKiB5MCwgcyAqIHgwICsgYyAqIHkwKTtcbiAgICBjb250ZXh0LmxpbmVUbyhjICogeDEgLSBzICogeTEsIHMgKiB4MSArIGMgKiB5MSk7XG4gICAgY29udGV4dC5saW5lVG8oYyAqIHgyIC0gcyAqIHkyLCBzICogeDIgKyBjICogeTIpO1xuICAgIGNvbnRleHQubGluZVRvKGMgKiB4MCArIHMgKiB5MCwgYyAqIHkwIC0gcyAqIHgwKTtcbiAgICBjb250ZXh0LmxpbmVUbyhjICogeDEgKyBzICogeTEsIGMgKiB5MSAtIHMgKiB4MSk7XG4gICAgY29udGV4dC5saW5lVG8oYyAqIHgyICsgcyAqIHkyLCBjICogeTIgLSBzICogeDIpO1xuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gIH1cbn07XG4iLCJpbXBvcnQgZm9ybWF0TG9jYWxlIGZyb20gXCIuL2xvY2FsZVwiO1xuXG52YXIgbG9jYWxlO1xuZXhwb3J0IHZhciB0aW1lRm9ybWF0O1xuZXhwb3J0IHZhciB0aW1lUGFyc2U7XG5leHBvcnQgdmFyIHV0Y0Zvcm1hdDtcbmV4cG9ydCB2YXIgdXRjUGFyc2U7XG5cbmRlZmF1bHRMb2NhbGUoe1xuICBkYXRlVGltZTogXCIleCwgJVhcIixcbiAgZGF0ZTogXCIlLW0vJS1kLyVZXCIsXG4gIHRpbWU6IFwiJS1JOiVNOiVTICVwXCIsXG4gIHBlcmlvZHM6IFtcIkFNXCIsIFwiUE1cIl0sXG4gIGRheXM6IFtcIlN1bmRheVwiLCBcIk1vbmRheVwiLCBcIlR1ZXNkYXlcIiwgXCJXZWRuZXNkYXlcIiwgXCJUaHVyc2RheVwiLCBcIkZyaWRheVwiLCBcIlNhdHVyZGF5XCJdLFxuICBzaG9ydERheXM6IFtcIlN1blwiLCBcIk1vblwiLCBcIlR1ZVwiLCBcIldlZFwiLCBcIlRodVwiLCBcIkZyaVwiLCBcIlNhdFwiXSxcbiAgbW9udGhzOiBbXCJKYW51YXJ5XCIsIFwiRmVicnVhcnlcIiwgXCJNYXJjaFwiLCBcIkFwcmlsXCIsIFwiTWF5XCIsIFwiSnVuZVwiLCBcIkp1bHlcIiwgXCJBdWd1c3RcIiwgXCJTZXB0ZW1iZXJcIiwgXCJPY3RvYmVyXCIsIFwiTm92ZW1iZXJcIiwgXCJEZWNlbWJlclwiXSxcbiAgc2hvcnRNb250aHM6IFtcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1heVwiLCBcIkp1blwiLCBcIkp1bFwiLCBcIkF1Z1wiLCBcIlNlcFwiLCBcIk9jdFwiLCBcIk5vdlwiLCBcIkRlY1wiXVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRlZmF1bHRMb2NhbGUoZGVmaW5pdGlvbikge1xuICBsb2NhbGUgPSBmb3JtYXRMb2NhbGUoZGVmaW5pdGlvbik7XG4gIHRpbWVGb3JtYXQgPSBsb2NhbGUuZm9ybWF0O1xuICB0aW1lUGFyc2UgPSBsb2NhbGUucGFyc2U7XG4gIHV0Y0Zvcm1hdCA9IGxvY2FsZS51dGNGb3JtYXQ7XG4gIHV0Y1BhcnNlID0gbG9jYWxlLnV0Y1BhcnNlO1xuICByZXR1cm4gbG9jYWxlO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIHRpbWVGb3JtYXREZWZhdWx0TG9jYWxlLCB0aW1lRm9ybWF0LCB0aW1lUGFyc2UsIHV0Y0Zvcm1hdCwgdXRjUGFyc2V9IGZyb20gXCIuL2RlZmF1bHRMb2NhbGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0aW1lRm9ybWF0TG9jYWxlfSBmcm9tIFwiLi9sb2NhbGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpc29Gb3JtYXR9IGZyb20gXCIuL2lzb0Zvcm1hdFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGlzb1BhcnNlfSBmcm9tIFwiLi9pc29QYXJzZVwiO1xuIiwiaW1wb3J0IHt1dGNGb3JtYXR9IGZyb20gXCIuL2RlZmF1bHRMb2NhbGVcIjtcblxuZXhwb3J0IHZhciBpc29TcGVjaWZpZXIgPSBcIiVZLSVtLSVkVCVIOiVNOiVTLiVMWlwiO1xuXG5mdW5jdGlvbiBmb3JtYXRJc29OYXRpdmUoZGF0ZSkge1xuICByZXR1cm4gZGF0ZS50b0lTT1N0cmluZygpO1xufVxuXG52YXIgZm9ybWF0SXNvID0gRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmdcbiAgICA/IGZvcm1hdElzb05hdGl2ZVxuICAgIDogdXRjRm9ybWF0KGlzb1NwZWNpZmllcik7XG5cbmV4cG9ydCBkZWZhdWx0IGZvcm1hdElzbztcbiIsImltcG9ydCB7aXNvU3BlY2lmaWVyfSBmcm9tIFwiLi9pc29Gb3JtYXRcIjtcbmltcG9ydCB7dXRjUGFyc2V9IGZyb20gXCIuL2RlZmF1bHRMb2NhbGVcIjtcblxuZnVuY3Rpb24gcGFyc2VJc29OYXRpdmUoc3RyaW5nKSB7XG4gIHZhciBkYXRlID0gbmV3IERhdGUoc3RyaW5nKTtcbiAgcmV0dXJuIGlzTmFOKGRhdGUpID8gbnVsbCA6IGRhdGU7XG59XG5cbnZhciBwYXJzZUlzbyA9ICtuZXcgRGF0ZShcIjIwMDAtMDEtMDFUMDA6MDA6MDAuMDAwWlwiKVxuICAgID8gcGFyc2VJc29OYXRpdmVcbiAgICA6IHV0Y1BhcnNlKGlzb1NwZWNpZmllcik7XG5cbmV4cG9ydCBkZWZhdWx0IHBhcnNlSXNvO1xuIiwiaW1wb3J0IHtcbiAgdGltZURheSxcbiAgdGltZVN1bmRheSxcbiAgdGltZU1vbmRheSxcbiAgdGltZVRodXJzZGF5LFxuICB0aW1lWWVhcixcbiAgdXRjRGF5LFxuICB1dGNTdW5kYXksXG4gIHV0Y01vbmRheSxcbiAgdXRjVGh1cnNkYXksXG4gIHV0Y1llYXJcbn0gZnJvbSBcImQzLXRpbWVcIjtcblxuZnVuY3Rpb24gbG9jYWxEYXRlKGQpIHtcbiAgaWYgKDAgPD0gZC55ICYmIGQueSA8IDEwMCkge1xuICAgIHZhciBkYXRlID0gbmV3IERhdGUoLTEsIGQubSwgZC5kLCBkLkgsIGQuTSwgZC5TLCBkLkwpO1xuICAgIGRhdGUuc2V0RnVsbFllYXIoZC55KTtcbiAgICByZXR1cm4gZGF0ZTtcbiAgfVxuICByZXR1cm4gbmV3IERhdGUoZC55LCBkLm0sIGQuZCwgZC5ILCBkLk0sIGQuUywgZC5MKTtcbn1cblxuZnVuY3Rpb24gdXRjRGF0ZShkKSB7XG4gIGlmICgwIDw9IGQueSAmJiBkLnkgPCAxMDApIHtcbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKERhdGUuVVRDKC0xLCBkLm0sIGQuZCwgZC5ILCBkLk0sIGQuUywgZC5MKSk7XG4gICAgZGF0ZS5zZXRVVENGdWxsWWVhcihkLnkpO1xuICAgIHJldHVybiBkYXRlO1xuICB9XG4gIHJldHVybiBuZXcgRGF0ZShEYXRlLlVUQyhkLnksIGQubSwgZC5kLCBkLkgsIGQuTSwgZC5TLCBkLkwpKTtcbn1cblxuZnVuY3Rpb24gbmV3WWVhcih5KSB7XG4gIHJldHVybiB7eTogeSwgbTogMCwgZDogMSwgSDogMCwgTTogMCwgUzogMCwgTDogMH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZvcm1hdExvY2FsZShsb2NhbGUpIHtcbiAgdmFyIGxvY2FsZV9kYXRlVGltZSA9IGxvY2FsZS5kYXRlVGltZSxcbiAgICAgIGxvY2FsZV9kYXRlID0gbG9jYWxlLmRhdGUsXG4gICAgICBsb2NhbGVfdGltZSA9IGxvY2FsZS50aW1lLFxuICAgICAgbG9jYWxlX3BlcmlvZHMgPSBsb2NhbGUucGVyaW9kcyxcbiAgICAgIGxvY2FsZV93ZWVrZGF5cyA9IGxvY2FsZS5kYXlzLFxuICAgICAgbG9jYWxlX3Nob3J0V2Vla2RheXMgPSBsb2NhbGUuc2hvcnREYXlzLFxuICAgICAgbG9jYWxlX21vbnRocyA9IGxvY2FsZS5tb250aHMsXG4gICAgICBsb2NhbGVfc2hvcnRNb250aHMgPSBsb2NhbGUuc2hvcnRNb250aHM7XG5cbiAgdmFyIHBlcmlvZFJlID0gZm9ybWF0UmUobG9jYWxlX3BlcmlvZHMpLFxuICAgICAgcGVyaW9kTG9va3VwID0gZm9ybWF0TG9va3VwKGxvY2FsZV9wZXJpb2RzKSxcbiAgICAgIHdlZWtkYXlSZSA9IGZvcm1hdFJlKGxvY2FsZV93ZWVrZGF5cyksXG4gICAgICB3ZWVrZGF5TG9va3VwID0gZm9ybWF0TG9va3VwKGxvY2FsZV93ZWVrZGF5cyksXG4gICAgICBzaG9ydFdlZWtkYXlSZSA9IGZvcm1hdFJlKGxvY2FsZV9zaG9ydFdlZWtkYXlzKSxcbiAgICAgIHNob3J0V2Vla2RheUxvb2t1cCA9IGZvcm1hdExvb2t1cChsb2NhbGVfc2hvcnRXZWVrZGF5cyksXG4gICAgICBtb250aFJlID0gZm9ybWF0UmUobG9jYWxlX21vbnRocyksXG4gICAgICBtb250aExvb2t1cCA9IGZvcm1hdExvb2t1cChsb2NhbGVfbW9udGhzKSxcbiAgICAgIHNob3J0TW9udGhSZSA9IGZvcm1hdFJlKGxvY2FsZV9zaG9ydE1vbnRocyksXG4gICAgICBzaG9ydE1vbnRoTG9va3VwID0gZm9ybWF0TG9va3VwKGxvY2FsZV9zaG9ydE1vbnRocyk7XG5cbiAgdmFyIGZvcm1hdHMgPSB7XG4gICAgXCJhXCI6IGZvcm1hdFNob3J0V2Vla2RheSxcbiAgICBcIkFcIjogZm9ybWF0V2Vla2RheSxcbiAgICBcImJcIjogZm9ybWF0U2hvcnRNb250aCxcbiAgICBcIkJcIjogZm9ybWF0TW9udGgsXG4gICAgXCJjXCI6IG51bGwsXG4gICAgXCJkXCI6IGZvcm1hdERheU9mTW9udGgsXG4gICAgXCJlXCI6IGZvcm1hdERheU9mTW9udGgsXG4gICAgXCJmXCI6IGZvcm1hdE1pY3Jvc2Vjb25kcyxcbiAgICBcIkhcIjogZm9ybWF0SG91cjI0LFxuICAgIFwiSVwiOiBmb3JtYXRIb3VyMTIsXG4gICAgXCJqXCI6IGZvcm1hdERheU9mWWVhcixcbiAgICBcIkxcIjogZm9ybWF0TWlsbGlzZWNvbmRzLFxuICAgIFwibVwiOiBmb3JtYXRNb250aE51bWJlcixcbiAgICBcIk1cIjogZm9ybWF0TWludXRlcyxcbiAgICBcInBcIjogZm9ybWF0UGVyaW9kLFxuICAgIFwiUVwiOiBmb3JtYXRVbml4VGltZXN0YW1wLFxuICAgIFwic1wiOiBmb3JtYXRVbml4VGltZXN0YW1wU2Vjb25kcyxcbiAgICBcIlNcIjogZm9ybWF0U2Vjb25kcyxcbiAgICBcInVcIjogZm9ybWF0V2Vla2RheU51bWJlck1vbmRheSxcbiAgICBcIlVcIjogZm9ybWF0V2Vla051bWJlclN1bmRheSxcbiAgICBcIlZcIjogZm9ybWF0V2Vla051bWJlcklTTyxcbiAgICBcIndcIjogZm9ybWF0V2Vla2RheU51bWJlclN1bmRheSxcbiAgICBcIldcIjogZm9ybWF0V2Vla051bWJlck1vbmRheSxcbiAgICBcInhcIjogbnVsbCxcbiAgICBcIlhcIjogbnVsbCxcbiAgICBcInlcIjogZm9ybWF0WWVhcixcbiAgICBcIllcIjogZm9ybWF0RnVsbFllYXIsXG4gICAgXCJaXCI6IGZvcm1hdFpvbmUsXG4gICAgXCIlXCI6IGZvcm1hdExpdGVyYWxQZXJjZW50XG4gIH07XG5cbiAgdmFyIHV0Y0Zvcm1hdHMgPSB7XG4gICAgXCJhXCI6IGZvcm1hdFVUQ1Nob3J0V2Vla2RheSxcbiAgICBcIkFcIjogZm9ybWF0VVRDV2Vla2RheSxcbiAgICBcImJcIjogZm9ybWF0VVRDU2hvcnRNb250aCxcbiAgICBcIkJcIjogZm9ybWF0VVRDTW9udGgsXG4gICAgXCJjXCI6IG51bGwsXG4gICAgXCJkXCI6IGZvcm1hdFVUQ0RheU9mTW9udGgsXG4gICAgXCJlXCI6IGZvcm1hdFVUQ0RheU9mTW9udGgsXG4gICAgXCJmXCI6IGZvcm1hdFVUQ01pY3Jvc2Vjb25kcyxcbiAgICBcIkhcIjogZm9ybWF0VVRDSG91cjI0LFxuICAgIFwiSVwiOiBmb3JtYXRVVENIb3VyMTIsXG4gICAgXCJqXCI6IGZvcm1hdFVUQ0RheU9mWWVhcixcbiAgICBcIkxcIjogZm9ybWF0VVRDTWlsbGlzZWNvbmRzLFxuICAgIFwibVwiOiBmb3JtYXRVVENNb250aE51bWJlcixcbiAgICBcIk1cIjogZm9ybWF0VVRDTWludXRlcyxcbiAgICBcInBcIjogZm9ybWF0VVRDUGVyaW9kLFxuICAgIFwiUVwiOiBmb3JtYXRVbml4VGltZXN0YW1wLFxuICAgIFwic1wiOiBmb3JtYXRVbml4VGltZXN0YW1wU2Vjb25kcyxcbiAgICBcIlNcIjogZm9ybWF0VVRDU2Vjb25kcyxcbiAgICBcInVcIjogZm9ybWF0VVRDV2Vla2RheU51bWJlck1vbmRheSxcbiAgICBcIlVcIjogZm9ybWF0VVRDV2Vla051bWJlclN1bmRheSxcbiAgICBcIlZcIjogZm9ybWF0VVRDV2Vla051bWJlcklTTyxcbiAgICBcIndcIjogZm9ybWF0VVRDV2Vla2RheU51bWJlclN1bmRheSxcbiAgICBcIldcIjogZm9ybWF0VVRDV2Vla051bWJlck1vbmRheSxcbiAgICBcInhcIjogbnVsbCxcbiAgICBcIlhcIjogbnVsbCxcbiAgICBcInlcIjogZm9ybWF0VVRDWWVhcixcbiAgICBcIllcIjogZm9ybWF0VVRDRnVsbFllYXIsXG4gICAgXCJaXCI6IGZvcm1hdFVUQ1pvbmUsXG4gICAgXCIlXCI6IGZvcm1hdExpdGVyYWxQZXJjZW50XG4gIH07XG5cbiAgdmFyIHBhcnNlcyA9IHtcbiAgICBcImFcIjogcGFyc2VTaG9ydFdlZWtkYXksXG4gICAgXCJBXCI6IHBhcnNlV2Vla2RheSxcbiAgICBcImJcIjogcGFyc2VTaG9ydE1vbnRoLFxuICAgIFwiQlwiOiBwYXJzZU1vbnRoLFxuICAgIFwiY1wiOiBwYXJzZUxvY2FsZURhdGVUaW1lLFxuICAgIFwiZFwiOiBwYXJzZURheU9mTW9udGgsXG4gICAgXCJlXCI6IHBhcnNlRGF5T2ZNb250aCxcbiAgICBcImZcIjogcGFyc2VNaWNyb3NlY29uZHMsXG4gICAgXCJIXCI6IHBhcnNlSG91cjI0LFxuICAgIFwiSVwiOiBwYXJzZUhvdXIyNCxcbiAgICBcImpcIjogcGFyc2VEYXlPZlllYXIsXG4gICAgXCJMXCI6IHBhcnNlTWlsbGlzZWNvbmRzLFxuICAgIFwibVwiOiBwYXJzZU1vbnRoTnVtYmVyLFxuICAgIFwiTVwiOiBwYXJzZU1pbnV0ZXMsXG4gICAgXCJwXCI6IHBhcnNlUGVyaW9kLFxuICAgIFwiUVwiOiBwYXJzZVVuaXhUaW1lc3RhbXAsXG4gICAgXCJzXCI6IHBhcnNlVW5peFRpbWVzdGFtcFNlY29uZHMsXG4gICAgXCJTXCI6IHBhcnNlU2Vjb25kcyxcbiAgICBcInVcIjogcGFyc2VXZWVrZGF5TnVtYmVyTW9uZGF5LFxuICAgIFwiVVwiOiBwYXJzZVdlZWtOdW1iZXJTdW5kYXksXG4gICAgXCJWXCI6IHBhcnNlV2Vla051bWJlcklTTyxcbiAgICBcIndcIjogcGFyc2VXZWVrZGF5TnVtYmVyU3VuZGF5LFxuICAgIFwiV1wiOiBwYXJzZVdlZWtOdW1iZXJNb25kYXksXG4gICAgXCJ4XCI6IHBhcnNlTG9jYWxlRGF0ZSxcbiAgICBcIlhcIjogcGFyc2VMb2NhbGVUaW1lLFxuICAgIFwieVwiOiBwYXJzZVllYXIsXG4gICAgXCJZXCI6IHBhcnNlRnVsbFllYXIsXG4gICAgXCJaXCI6IHBhcnNlWm9uZSxcbiAgICBcIiVcIjogcGFyc2VMaXRlcmFsUGVyY2VudFxuICB9O1xuXG4gIC8vIFRoZXNlIHJlY3Vyc2l2ZSBkaXJlY3RpdmUgZGVmaW5pdGlvbnMgbXVzdCBiZSBkZWZlcnJlZC5cbiAgZm9ybWF0cy54ID0gbmV3Rm9ybWF0KGxvY2FsZV9kYXRlLCBmb3JtYXRzKTtcbiAgZm9ybWF0cy5YID0gbmV3Rm9ybWF0KGxvY2FsZV90aW1lLCBmb3JtYXRzKTtcbiAgZm9ybWF0cy5jID0gbmV3Rm9ybWF0KGxvY2FsZV9kYXRlVGltZSwgZm9ybWF0cyk7XG4gIHV0Y0Zvcm1hdHMueCA9IG5ld0Zvcm1hdChsb2NhbGVfZGF0ZSwgdXRjRm9ybWF0cyk7XG4gIHV0Y0Zvcm1hdHMuWCA9IG5ld0Zvcm1hdChsb2NhbGVfdGltZSwgdXRjRm9ybWF0cyk7XG4gIHV0Y0Zvcm1hdHMuYyA9IG5ld0Zvcm1hdChsb2NhbGVfZGF0ZVRpbWUsIHV0Y0Zvcm1hdHMpO1xuXG4gIGZ1bmN0aW9uIG5ld0Zvcm1hdChzcGVjaWZpZXIsIGZvcm1hdHMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgdmFyIHN0cmluZyA9IFtdLFxuICAgICAgICAgIGkgPSAtMSxcbiAgICAgICAgICBqID0gMCxcbiAgICAgICAgICBuID0gc3BlY2lmaWVyLmxlbmd0aCxcbiAgICAgICAgICBjLFxuICAgICAgICAgIHBhZCxcbiAgICAgICAgICBmb3JtYXQ7XG5cbiAgICAgIGlmICghKGRhdGUgaW5zdGFuY2VvZiBEYXRlKSkgZGF0ZSA9IG5ldyBEYXRlKCtkYXRlKTtcblxuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKHNwZWNpZmllci5jaGFyQ29kZUF0KGkpID09PSAzNykge1xuICAgICAgICAgIHN0cmluZy5wdXNoKHNwZWNpZmllci5zbGljZShqLCBpKSk7XG4gICAgICAgICAgaWYgKChwYWQgPSBwYWRzW2MgPSBzcGVjaWZpZXIuY2hhckF0KCsraSldKSAhPSBudWxsKSBjID0gc3BlY2lmaWVyLmNoYXJBdCgrK2kpO1xuICAgICAgICAgIGVsc2UgcGFkID0gYyA9PT0gXCJlXCIgPyBcIiBcIiA6IFwiMFwiO1xuICAgICAgICAgIGlmIChmb3JtYXQgPSBmb3JtYXRzW2NdKSBjID0gZm9ybWF0KGRhdGUsIHBhZCk7XG4gICAgICAgICAgc3RyaW5nLnB1c2goYyk7XG4gICAgICAgICAgaiA9IGkgKyAxO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHN0cmluZy5wdXNoKHNwZWNpZmllci5zbGljZShqLCBpKSk7XG4gICAgICByZXR1cm4gc3RyaW5nLmpvaW4oXCJcIik7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5ld1BhcnNlKHNwZWNpZmllciwgbmV3RGF0ZSkge1xuICAgIHJldHVybiBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICAgIHZhciBkID0gbmV3WWVhcigxOTAwKSxcbiAgICAgICAgICBpID0gcGFyc2VTcGVjaWZpZXIoZCwgc3BlY2lmaWVyLCBzdHJpbmcgKz0gXCJcIiwgMCksXG4gICAgICAgICAgd2VlaywgZGF5O1xuICAgICAgaWYgKGkgIT0gc3RyaW5nLmxlbmd0aCkgcmV0dXJuIG51bGw7XG5cbiAgICAgIC8vIElmIGEgVU5JWCB0aW1lc3RhbXAgaXMgc3BlY2lmaWVkLCByZXR1cm4gaXQuXG4gICAgICBpZiAoXCJRXCIgaW4gZCkgcmV0dXJuIG5ldyBEYXRlKGQuUSk7XG5cbiAgICAgIC8vIFRoZSBhbS1wbSBmbGFnIGlzIDAgZm9yIEFNLCBhbmQgMSBmb3IgUE0uXG4gICAgICBpZiAoXCJwXCIgaW4gZCkgZC5IID0gZC5IICUgMTIgKyBkLnAgKiAxMjtcblxuICAgICAgLy8gQ29udmVydCBkYXktb2Ytd2VlayBhbmQgd2Vlay1vZi15ZWFyIHRvIGRheS1vZi15ZWFyLlxuICAgICAgaWYgKFwiVlwiIGluIGQpIHtcbiAgICAgICAgaWYgKGQuViA8IDEgfHwgZC5WID4gNTMpIHJldHVybiBudWxsO1xuICAgICAgICBpZiAoIShcIndcIiBpbiBkKSkgZC53ID0gMTtcbiAgICAgICAgaWYgKFwiWlwiIGluIGQpIHtcbiAgICAgICAgICB3ZWVrID0gdXRjRGF0ZShuZXdZZWFyKGQueSkpLCBkYXkgPSB3ZWVrLmdldFVUQ0RheSgpO1xuICAgICAgICAgIHdlZWsgPSBkYXkgPiA0IHx8IGRheSA9PT0gMCA/IHV0Y01vbmRheS5jZWlsKHdlZWspIDogdXRjTW9uZGF5KHdlZWspO1xuICAgICAgICAgIHdlZWsgPSB1dGNEYXkub2Zmc2V0KHdlZWssIChkLlYgLSAxKSAqIDcpO1xuICAgICAgICAgIGQueSA9IHdlZWsuZ2V0VVRDRnVsbFllYXIoKTtcbiAgICAgICAgICBkLm0gPSB3ZWVrLmdldFVUQ01vbnRoKCk7XG4gICAgICAgICAgZC5kID0gd2Vlay5nZXRVVENEYXRlKCkgKyAoZC53ICsgNikgJSA3O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHdlZWsgPSBuZXdEYXRlKG5ld1llYXIoZC55KSksIGRheSA9IHdlZWsuZ2V0RGF5KCk7XG4gICAgICAgICAgd2VlayA9IGRheSA+IDQgfHwgZGF5ID09PSAwID8gdGltZU1vbmRheS5jZWlsKHdlZWspIDogdGltZU1vbmRheSh3ZWVrKTtcbiAgICAgICAgICB3ZWVrID0gdGltZURheS5vZmZzZXQod2VlaywgKGQuViAtIDEpICogNyk7XG4gICAgICAgICAgZC55ID0gd2Vlay5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgIGQubSA9IHdlZWsuZ2V0TW9udGgoKTtcbiAgICAgICAgICBkLmQgPSB3ZWVrLmdldERhdGUoKSArIChkLncgKyA2KSAlIDc7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoXCJXXCIgaW4gZCB8fCBcIlVcIiBpbiBkKSB7XG4gICAgICAgIGlmICghKFwid1wiIGluIGQpKSBkLncgPSBcInVcIiBpbiBkID8gZC51ICUgNyA6IFwiV1wiIGluIGQgPyAxIDogMDtcbiAgICAgICAgZGF5ID0gXCJaXCIgaW4gZCA/IHV0Y0RhdGUobmV3WWVhcihkLnkpKS5nZXRVVENEYXkoKSA6IG5ld0RhdGUobmV3WWVhcihkLnkpKS5nZXREYXkoKTtcbiAgICAgICAgZC5tID0gMDtcbiAgICAgICAgZC5kID0gXCJXXCIgaW4gZCA/IChkLncgKyA2KSAlIDcgKyBkLlcgKiA3IC0gKGRheSArIDUpICUgNyA6IGQudyArIGQuVSAqIDcgLSAoZGF5ICsgNikgJSA3O1xuICAgICAgfVxuXG4gICAgICAvLyBJZiBhIHRpbWUgem9uZSBpcyBzcGVjaWZpZWQsIGFsbCBmaWVsZHMgYXJlIGludGVycHJldGVkIGFzIFVUQyBhbmQgdGhlblxuICAgICAgLy8gb2Zmc2V0IGFjY29yZGluZyB0byB0aGUgc3BlY2lmaWVkIHRpbWUgem9uZS5cbiAgICAgIGlmIChcIlpcIiBpbiBkKSB7XG4gICAgICAgIGQuSCArPSBkLlogLyAxMDAgfCAwO1xuICAgICAgICBkLk0gKz0gZC5aICUgMTAwO1xuICAgICAgICByZXR1cm4gdXRjRGF0ZShkKTtcbiAgICAgIH1cblxuICAgICAgLy8gT3RoZXJ3aXNlLCBhbGwgZmllbGRzIGFyZSBpbiBsb2NhbCB0aW1lLlxuICAgICAgcmV0dXJuIG5ld0RhdGUoZCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlU3BlY2lmaWVyKGQsIHNwZWNpZmllciwgc3RyaW5nLCBqKSB7XG4gICAgdmFyIGkgPSAwLFxuICAgICAgICBuID0gc3BlY2lmaWVyLmxlbmd0aCxcbiAgICAgICAgbSA9IHN0cmluZy5sZW5ndGgsXG4gICAgICAgIGMsXG4gICAgICAgIHBhcnNlO1xuXG4gICAgd2hpbGUgKGkgPCBuKSB7XG4gICAgICBpZiAoaiA+PSBtKSByZXR1cm4gLTE7XG4gICAgICBjID0gc3BlY2lmaWVyLmNoYXJDb2RlQXQoaSsrKTtcbiAgICAgIGlmIChjID09PSAzNykge1xuICAgICAgICBjID0gc3BlY2lmaWVyLmNoYXJBdChpKyspO1xuICAgICAgICBwYXJzZSA9IHBhcnNlc1tjIGluIHBhZHMgPyBzcGVjaWZpZXIuY2hhckF0KGkrKykgOiBjXTtcbiAgICAgICAgaWYgKCFwYXJzZSB8fCAoKGogPSBwYXJzZShkLCBzdHJpbmcsIGopKSA8IDApKSByZXR1cm4gLTE7XG4gICAgICB9IGVsc2UgaWYgKGMgIT0gc3RyaW5nLmNoYXJDb2RlQXQoaisrKSkge1xuICAgICAgICByZXR1cm4gLTE7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGo7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZVBlcmlvZChkLCBzdHJpbmcsIGkpIHtcbiAgICB2YXIgbiA9IHBlcmlvZFJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgICByZXR1cm4gbiA/IChkLnAgPSBwZXJpb2RMb29rdXBbblswXS50b0xvd2VyQ2FzZSgpXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG5cbiAgZnVuY3Rpb24gcGFyc2VTaG9ydFdlZWtkYXkoZCwgc3RyaW5nLCBpKSB7XG4gICAgdmFyIG4gPSBzaG9ydFdlZWtkYXlSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gICAgcmV0dXJuIG4gPyAoZC53ID0gc2hvcnRXZWVrZGF5TG9va3VwW25bMF0udG9Mb3dlckNhc2UoKV0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlV2Vla2RheShkLCBzdHJpbmcsIGkpIHtcbiAgICB2YXIgbiA9IHdlZWtkYXlSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gICAgcmV0dXJuIG4gPyAoZC53ID0gd2Vla2RheUxvb2t1cFtuWzBdLnRvTG93ZXJDYXNlKCldLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZVNob3J0TW9udGgoZCwgc3RyaW5nLCBpKSB7XG4gICAgdmFyIG4gPSBzaG9ydE1vbnRoUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICAgIHJldHVybiBuID8gKGQubSA9IHNob3J0TW9udGhMb29rdXBbblswXS50b0xvd2VyQ2FzZSgpXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG5cbiAgZnVuY3Rpb24gcGFyc2VNb250aChkLCBzdHJpbmcsIGkpIHtcbiAgICB2YXIgbiA9IG1vbnRoUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICAgIHJldHVybiBuID8gKGQubSA9IG1vbnRoTG9va3VwW25bMF0udG9Mb3dlckNhc2UoKV0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlTG9jYWxlRGF0ZVRpbWUoZCwgc3RyaW5nLCBpKSB7XG4gICAgcmV0dXJuIHBhcnNlU3BlY2lmaWVyKGQsIGxvY2FsZV9kYXRlVGltZSwgc3RyaW5nLCBpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlTG9jYWxlRGF0ZShkLCBzdHJpbmcsIGkpIHtcbiAgICByZXR1cm4gcGFyc2VTcGVjaWZpZXIoZCwgbG9jYWxlX2RhdGUsIHN0cmluZywgaSk7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZUxvY2FsZVRpbWUoZCwgc3RyaW5nLCBpKSB7XG4gICAgcmV0dXJuIHBhcnNlU3BlY2lmaWVyKGQsIGxvY2FsZV90aW1lLCBzdHJpbmcsIGkpO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0U2hvcnRXZWVrZGF5KGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX3Nob3J0V2Vla2RheXNbZC5nZXREYXkoKV07XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRXZWVrZGF5KGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX3dlZWtkYXlzW2QuZ2V0RGF5KCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0U2hvcnRNb250aChkKSB7XG4gICAgcmV0dXJuIGxvY2FsZV9zaG9ydE1vbnRoc1tkLmdldE1vbnRoKCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0TW9udGgoZCkge1xuICAgIHJldHVybiBsb2NhbGVfbW9udGhzW2QuZ2V0TW9udGgoKV07XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRQZXJpb2QoZCkge1xuICAgIHJldHVybiBsb2NhbGVfcGVyaW9kc1srKGQuZ2V0SG91cnMoKSA+PSAxMildO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0VVRDU2hvcnRXZWVrZGF5KGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX3Nob3J0V2Vla2RheXNbZC5nZXRVVENEYXkoKV07XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRVVENXZWVrZGF5KGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX3dlZWtkYXlzW2QuZ2V0VVRDRGF5KCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0VVRDU2hvcnRNb250aChkKSB7XG4gICAgcmV0dXJuIGxvY2FsZV9zaG9ydE1vbnRoc1tkLmdldFVUQ01vbnRoKCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0VVRDTW9udGgoZCkge1xuICAgIHJldHVybiBsb2NhbGVfbW9udGhzW2QuZ2V0VVRDTW9udGgoKV07XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRVVENQZXJpb2QoZCkge1xuICAgIHJldHVybiBsb2NhbGVfcGVyaW9kc1srKGQuZ2V0VVRDSG91cnMoKSA+PSAxMildO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBmb3JtYXQ6IGZ1bmN0aW9uKHNwZWNpZmllcikge1xuICAgICAgdmFyIGYgPSBuZXdGb3JtYXQoc3BlY2lmaWVyICs9IFwiXCIsIGZvcm1hdHMpO1xuICAgICAgZi50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gc3BlY2lmaWVyOyB9O1xuICAgICAgcmV0dXJuIGY7XG4gICAgfSxcbiAgICBwYXJzZTogZnVuY3Rpb24oc3BlY2lmaWVyKSB7XG4gICAgICB2YXIgcCA9IG5ld1BhcnNlKHNwZWNpZmllciArPSBcIlwiLCBsb2NhbERhdGUpO1xuICAgICAgcC50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gc3BlY2lmaWVyOyB9O1xuICAgICAgcmV0dXJuIHA7XG4gICAgfSxcbiAgICB1dGNGb3JtYXQ6IGZ1bmN0aW9uKHNwZWNpZmllcikge1xuICAgICAgdmFyIGYgPSBuZXdGb3JtYXQoc3BlY2lmaWVyICs9IFwiXCIsIHV0Y0Zvcm1hdHMpO1xuICAgICAgZi50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gc3BlY2lmaWVyOyB9O1xuICAgICAgcmV0dXJuIGY7XG4gICAgfSxcbiAgICB1dGNQYXJzZTogZnVuY3Rpb24oc3BlY2lmaWVyKSB7XG4gICAgICB2YXIgcCA9IG5ld1BhcnNlKHNwZWNpZmllciwgdXRjRGF0ZSk7XG4gICAgICBwLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiBzcGVjaWZpZXI7IH07XG4gICAgICByZXR1cm4gcDtcbiAgICB9XG4gIH07XG59XG5cbnZhciBwYWRzID0ge1wiLVwiOiBcIlwiLCBcIl9cIjogXCIgXCIsIFwiMFwiOiBcIjBcIn0sXG4gICAgbnVtYmVyUmUgPSAvXlxccypcXGQrLywgLy8gbm90ZTogaWdub3JlcyBuZXh0IGRpcmVjdGl2ZVxuICAgIHBlcmNlbnRSZSA9IC9eJS8sXG4gICAgcmVxdW90ZVJlID0gL1tcXFxcXiQqKz98W1xcXSgpLnt9XS9nO1xuXG5mdW5jdGlvbiBwYWQodmFsdWUsIGZpbGwsIHdpZHRoKSB7XG4gIHZhciBzaWduID0gdmFsdWUgPCAwID8gXCItXCIgOiBcIlwiLFxuICAgICAgc3RyaW5nID0gKHNpZ24gPyAtdmFsdWUgOiB2YWx1ZSkgKyBcIlwiLFxuICAgICAgbGVuZ3RoID0gc3RyaW5nLmxlbmd0aDtcbiAgcmV0dXJuIHNpZ24gKyAobGVuZ3RoIDwgd2lkdGggPyBuZXcgQXJyYXkod2lkdGggLSBsZW5ndGggKyAxKS5qb2luKGZpbGwpICsgc3RyaW5nIDogc3RyaW5nKTtcbn1cblxuZnVuY3Rpb24gcmVxdW90ZShzKSB7XG4gIHJldHVybiBzLnJlcGxhY2UocmVxdW90ZVJlLCBcIlxcXFwkJlwiKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0UmUobmFtZXMpIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoXCJeKD86XCIgKyBuYW1lcy5tYXAocmVxdW90ZSkuam9pbihcInxcIikgKyBcIilcIiwgXCJpXCIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRMb29rdXAobmFtZXMpIHtcbiAgdmFyIG1hcCA9IHt9LCBpID0gLTEsIG4gPSBuYW1lcy5sZW5ndGg7XG4gIHdoaWxlICgrK2kgPCBuKSBtYXBbbmFtZXNbaV0udG9Mb3dlckNhc2UoKV0gPSBpO1xuICByZXR1cm4gbWFwO1xufVxuXG5mdW5jdGlvbiBwYXJzZVdlZWtkYXlOdW1iZXJTdW5kYXkoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDEpKTtcbiAgcmV0dXJuIG4gPyAoZC53ID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VXZWVrZGF5TnVtYmVyTW9uZGF5KGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAxKSk7XG4gIHJldHVybiBuID8gKGQudSA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlV2Vla051bWJlclN1bmRheShkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICByZXR1cm4gbiA/IChkLlUgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZVdlZWtOdW1iZXJJU08oZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgcmV0dXJuIG4gPyAoZC5WID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VXZWVrTnVtYmVyTW9uZGF5KGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gIHJldHVybiBuID8gKGQuVyA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlRnVsbFllYXIoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDQpKTtcbiAgcmV0dXJuIG4gPyAoZC55ID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VZZWFyKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gIHJldHVybiBuID8gKGQueSA9ICtuWzBdICsgKCtuWzBdID4gNjggPyAxOTAwIDogMjAwMCksIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2Vab25lKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IC9eKFopfChbKy1dXFxkXFxkKSg/Ojo/KFxcZFxcZCkpPy8uZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDYpKTtcbiAgcmV0dXJuIG4gPyAoZC5aID0gblsxXSA/IDAgOiAtKG5bMl0gKyAoblszXSB8fCBcIjAwXCIpKSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZU1vbnRoTnVtYmVyKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gIHJldHVybiBuID8gKGQubSA9IG5bMF0gLSAxLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlRGF5T2ZNb250aChkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICByZXR1cm4gbiA/IChkLmQgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZURheU9mWWVhcihkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMykpO1xuICByZXR1cm4gbiA/IChkLm0gPSAwLCBkLmQgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZUhvdXIyNChkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICByZXR1cm4gbiA/IChkLkggPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZU1pbnV0ZXMoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgcmV0dXJuIG4gPyAoZC5NID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VTZWNvbmRzKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gIHJldHVybiBuID8gKGQuUyA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlTWlsbGlzZWNvbmRzKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAzKSk7XG4gIHJldHVybiBuID8gKGQuTCA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlTWljcm9zZWNvbmRzKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyA2KSk7XG4gIHJldHVybiBuID8gKGQuTCA9IE1hdGguZmxvb3IoblswXSAvIDEwMDApLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlTGl0ZXJhbFBlcmNlbnQoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gcGVyY2VudFJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAxKSk7XG4gIHJldHVybiBuID8gaSArIG5bMF0ubGVuZ3RoIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVW5peFRpbWVzdGFtcChkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gIHJldHVybiBuID8gKGQuUSA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVW5peFRpbWVzdGFtcFNlY29uZHMoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICByZXR1cm4gbiA/IChkLlEgPSAoK25bMF0pICogMTAwMCwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBmb3JtYXREYXlPZk1vbnRoKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldERhdGUoKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdEhvdXIyNChkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRIb3VycygpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0SG91cjEyKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldEhvdXJzKCkgJSAxMiB8fCAxMiwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdERheU9mWWVhcihkLCBwKSB7XG4gIHJldHVybiBwYWQoMSArIHRpbWVEYXkuY291bnQodGltZVllYXIoZCksIGQpLCBwLCAzKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0TWlsbGlzZWNvbmRzKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldE1pbGxpc2Vjb25kcygpLCBwLCAzKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0TWljcm9zZWNvbmRzKGQsIHApIHtcbiAgcmV0dXJuIGZvcm1hdE1pbGxpc2Vjb25kcyhkLCBwKSArIFwiMDAwXCI7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdE1vbnRoTnVtYmVyKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldE1vbnRoKCkgKyAxLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0TWludXRlcyhkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRNaW51dGVzKCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRTZWNvbmRzKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldFNlY29uZHMoKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFdlZWtkYXlOdW1iZXJNb25kYXkoZCkge1xuICB2YXIgZGF5ID0gZC5nZXREYXkoKTtcbiAgcmV0dXJuIGRheSA9PT0gMCA/IDcgOiBkYXk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFdlZWtOdW1iZXJTdW5kYXkoZCwgcCkge1xuICByZXR1cm4gcGFkKHRpbWVTdW5kYXkuY291bnQodGltZVllYXIoZCksIGQpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0V2Vla051bWJlcklTTyhkLCBwKSB7XG4gIHZhciBkYXkgPSBkLmdldERheSgpO1xuICBkID0gKGRheSA+PSA0IHx8IGRheSA9PT0gMCkgPyB0aW1lVGh1cnNkYXkoZCkgOiB0aW1lVGh1cnNkYXkuY2VpbChkKTtcbiAgcmV0dXJuIHBhZCh0aW1lVGh1cnNkYXkuY291bnQodGltZVllYXIoZCksIGQpICsgKHRpbWVZZWFyKGQpLmdldERheSgpID09PSA0KSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFdlZWtkYXlOdW1iZXJTdW5kYXkoZCkge1xuICByZXR1cm4gZC5nZXREYXkoKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0V2Vla051bWJlck1vbmRheShkLCBwKSB7XG4gIHJldHVybiBwYWQodGltZU1vbmRheS5jb3VudCh0aW1lWWVhcihkKSwgZCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRZZWFyKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldEZ1bGxZZWFyKCkgJSAxMDAsIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRGdWxsWWVhcihkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRGdWxsWWVhcigpICUgMTAwMDAsIHAsIDQpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRab25lKGQpIHtcbiAgdmFyIHogPSBkLmdldFRpbWV6b25lT2Zmc2V0KCk7XG4gIHJldHVybiAoeiA+IDAgPyBcIi1cIiA6ICh6ICo9IC0xLCBcIitcIikpXG4gICAgICArIHBhZCh6IC8gNjAgfCAwLCBcIjBcIiwgMilcbiAgICAgICsgcGFkKHogJSA2MCwgXCIwXCIsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENEYXlPZk1vbnRoKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldFVUQ0RhdGUoKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ0hvdXIyNChkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRVVENIb3VycygpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDSG91cjEyKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldFVUQ0hvdXJzKCkgJSAxMiB8fCAxMiwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ0RheU9mWWVhcihkLCBwKSB7XG4gIHJldHVybiBwYWQoMSArIHV0Y0RheS5jb3VudCh1dGNZZWFyKGQpLCBkKSwgcCwgMyk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ01pbGxpc2Vjb25kcyhkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRVVENNaWxsaXNlY29uZHMoKSwgcCwgMyk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ01pY3Jvc2Vjb25kcyhkLCBwKSB7XG4gIHJldHVybiBmb3JtYXRVVENNaWxsaXNlY29uZHMoZCwgcCkgKyBcIjAwMFwiO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENNb250aE51bWJlcihkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRVVENNb250aCgpICsgMSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ01pbnV0ZXMoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0VVRDTWludXRlcygpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDU2Vjb25kcyhkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRVVENTZWNvbmRzKCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENXZWVrZGF5TnVtYmVyTW9uZGF5KGQpIHtcbiAgdmFyIGRvdyA9IGQuZ2V0VVRDRGF5KCk7XG4gIHJldHVybiBkb3cgPT09IDAgPyA3IDogZG93O1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENXZWVrTnVtYmVyU3VuZGF5KGQsIHApIHtcbiAgcmV0dXJuIHBhZCh1dGNTdW5kYXkuY291bnQodXRjWWVhcihkKSwgZCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENXZWVrTnVtYmVySVNPKGQsIHApIHtcbiAgdmFyIGRheSA9IGQuZ2V0VVRDRGF5KCk7XG4gIGQgPSAoZGF5ID49IDQgfHwgZGF5ID09PSAwKSA/IHV0Y1RodXJzZGF5KGQpIDogdXRjVGh1cnNkYXkuY2VpbChkKTtcbiAgcmV0dXJuIHBhZCh1dGNUaHVyc2RheS5jb3VudCh1dGNZZWFyKGQpLCBkKSArICh1dGNZZWFyKGQpLmdldFVUQ0RheSgpID09PSA0KSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1dlZWtkYXlOdW1iZXJTdW5kYXkoZCkge1xuICByZXR1cm4gZC5nZXRVVENEYXkoKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDV2Vla051bWJlck1vbmRheShkLCBwKSB7XG4gIHJldHVybiBwYWQodXRjTW9uZGF5LmNvdW50KHV0Y1llYXIoZCksIGQpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDWWVhcihkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRVVENGdWxsWWVhcigpICUgMTAwLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDRnVsbFllYXIoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0VVRDRnVsbFllYXIoKSAlIDEwMDAwLCBwLCA0KTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDWm9uZSgpIHtcbiAgcmV0dXJuIFwiKzAwMDBcIjtcbn1cblxuZnVuY3Rpb24gZm9ybWF0TGl0ZXJhbFBlcmNlbnQoKSB7XG4gIHJldHVybiBcIiVcIjtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VW5peFRpbWVzdGFtcChkKSB7XG4gIHJldHVybiArZDtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VW5peFRpbWVzdGFtcFNlY29uZHMoZCkge1xuICByZXR1cm4gTWF0aC5mbG9vcigrZCAvIDEwMDApO1xufVxuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5pbXBvcnQge2R1cmF0aW9uRGF5LCBkdXJhdGlvbk1pbnV0ZX0gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxudmFyIGRheSA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQgLSAoZW5kLmdldFRpbWV6b25lT2Zmc2V0KCkgLSBzdGFydC5nZXRUaW1lem9uZU9mZnNldCgpKSAqIGR1cmF0aW9uTWludXRlKSAvIGR1cmF0aW9uRGF5O1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXREYXRlKCkgLSAxO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGRheTtcbmV4cG9ydCB2YXIgZGF5cyA9IGRheS5yYW5nZTtcbiIsImV4cG9ydCB2YXIgZHVyYXRpb25TZWNvbmQgPSAxZTM7XG5leHBvcnQgdmFyIGR1cmF0aW9uTWludXRlID0gNmU0O1xuZXhwb3J0IHZhciBkdXJhdGlvbkhvdXIgPSAzNmU1O1xuZXhwb3J0IHZhciBkdXJhdGlvbkRheSA9IDg2NGU1O1xuZXhwb3J0IHZhciBkdXJhdGlvbldlZWsgPSA2MDQ4ZTU7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcbmltcG9ydCB7ZHVyYXRpb25Ib3VyLCBkdXJhdGlvbk1pbnV0ZSwgZHVyYXRpb25TZWNvbmR9IGZyb20gXCIuL2R1cmF0aW9uXCI7XG5cbnZhciBob3VyID0gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldFRpbWUoZGF0ZSAtIGRhdGUuZ2V0TWlsbGlzZWNvbmRzKCkgLSBkYXRlLmdldFNlY29uZHMoKSAqIGR1cmF0aW9uU2Vjb25kIC0gZGF0ZS5nZXRNaW51dGVzKCkgKiBkdXJhdGlvbk1pbnV0ZSk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXAgKiBkdXJhdGlvbkhvdXIpO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uSG91cjtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0SG91cnMoKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBob3VyO1xuZXhwb3J0IHZhciBob3VycyA9IGhvdXIucmFuZ2U7XG4iLCJleHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVJbnRlcnZhbFxufSBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVNaWxsaXNlY29uZCxcbiAgbWlsbGlzZWNvbmRzIGFzIHRpbWVNaWxsaXNlY29uZHMsXG4gIGRlZmF1bHQgYXMgdXRjTWlsbGlzZWNvbmQsXG4gIG1pbGxpc2Vjb25kcyBhcyB1dGNNaWxsaXNlY29uZHNcbn0gZnJvbSBcIi4vbWlsbGlzZWNvbmRcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB0aW1lU2Vjb25kLFxuICBzZWNvbmRzIGFzIHRpbWVTZWNvbmRzLFxuICBkZWZhdWx0IGFzIHV0Y1NlY29uZCxcbiAgc2Vjb25kcyBhcyB1dGNTZWNvbmRzXG59IGZyb20gXCIuL3NlY29uZFwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVNaW51dGUsXG4gIG1pbnV0ZXMgYXMgdGltZU1pbnV0ZXNcbn0gZnJvbSBcIi4vbWludXRlXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgdGltZUhvdXIsXG4gIGhvdXJzIGFzIHRpbWVIb3Vyc1xufSBmcm9tIFwiLi9ob3VyXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgdGltZURheSxcbiAgZGF5cyBhcyB0aW1lRGF5c1xufSBmcm9tIFwiLi9kYXlcIjtcblxuZXhwb3J0IHtcbiAgc3VuZGF5IGFzIHRpbWVXZWVrLFxuICBzdW5kYXlzIGFzIHRpbWVXZWVrcyxcbiAgc3VuZGF5IGFzIHRpbWVTdW5kYXksXG4gIHN1bmRheXMgYXMgdGltZVN1bmRheXMsXG4gIG1vbmRheSBhcyB0aW1lTW9uZGF5LFxuICBtb25kYXlzIGFzIHRpbWVNb25kYXlzLFxuICB0dWVzZGF5IGFzIHRpbWVUdWVzZGF5LFxuICB0dWVzZGF5cyBhcyB0aW1lVHVlc2RheXMsXG4gIHdlZG5lc2RheSBhcyB0aW1lV2VkbmVzZGF5LFxuICB3ZWRuZXNkYXlzIGFzIHRpbWVXZWRuZXNkYXlzLFxuICB0aHVyc2RheSBhcyB0aW1lVGh1cnNkYXksXG4gIHRodXJzZGF5cyBhcyB0aW1lVGh1cnNkYXlzLFxuICBmcmlkYXkgYXMgdGltZUZyaWRheSxcbiAgZnJpZGF5cyBhcyB0aW1lRnJpZGF5cyxcbiAgc2F0dXJkYXkgYXMgdGltZVNhdHVyZGF5LFxuICBzYXR1cmRheXMgYXMgdGltZVNhdHVyZGF5c1xufSBmcm9tIFwiLi93ZWVrXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgdGltZU1vbnRoLFxuICBtb250aHMgYXMgdGltZU1vbnRoc1xufSBmcm9tIFwiLi9tb250aFwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVZZWFyLFxuICB5ZWFycyBhcyB0aW1lWWVhcnNcbn0gZnJvbSBcIi4veWVhclwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHV0Y01pbnV0ZSxcbiAgdXRjTWludXRlcyBhcyB1dGNNaW51dGVzXG59IGZyb20gXCIuL3V0Y01pbnV0ZVwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHV0Y0hvdXIsXG4gIHV0Y0hvdXJzIGFzIHV0Y0hvdXJzXG59IGZyb20gXCIuL3V0Y0hvdXJcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB1dGNEYXksXG4gIHV0Y0RheXMgYXMgdXRjRGF5c1xufSBmcm9tIFwiLi91dGNEYXlcIjtcblxuZXhwb3J0IHtcbiAgdXRjU3VuZGF5IGFzIHV0Y1dlZWssXG4gIHV0Y1N1bmRheXMgYXMgdXRjV2Vla3MsXG4gIHV0Y1N1bmRheSBhcyB1dGNTdW5kYXksXG4gIHV0Y1N1bmRheXMgYXMgdXRjU3VuZGF5cyxcbiAgdXRjTW9uZGF5IGFzIHV0Y01vbmRheSxcbiAgdXRjTW9uZGF5cyBhcyB1dGNNb25kYXlzLFxuICB1dGNUdWVzZGF5IGFzIHV0Y1R1ZXNkYXksXG4gIHV0Y1R1ZXNkYXlzIGFzIHV0Y1R1ZXNkYXlzLFxuICB1dGNXZWRuZXNkYXkgYXMgdXRjV2VkbmVzZGF5LFxuICB1dGNXZWRuZXNkYXlzIGFzIHV0Y1dlZG5lc2RheXMsXG4gIHV0Y1RodXJzZGF5IGFzIHV0Y1RodXJzZGF5LFxuICB1dGNUaHVyc2RheXMgYXMgdXRjVGh1cnNkYXlzLFxuICB1dGNGcmlkYXkgYXMgdXRjRnJpZGF5LFxuICB1dGNGcmlkYXlzIGFzIHV0Y0ZyaWRheXMsXG4gIHV0Y1NhdHVyZGF5IGFzIHV0Y1NhdHVyZGF5LFxuICB1dGNTYXR1cmRheXMgYXMgdXRjU2F0dXJkYXlzXG59IGZyb20gXCIuL3V0Y1dlZWtcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB1dGNNb250aCxcbiAgdXRjTW9udGhzIGFzIHV0Y01vbnRoc1xufSBmcm9tIFwiLi91dGNNb250aFwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHV0Y1llYXIsXG4gIHV0Y1llYXJzIGFzIHV0Y1llYXJzXG59IGZyb20gXCIuL3V0Y1llYXJcIjtcbiIsInZhciB0MCA9IG5ldyBEYXRlLFxuICAgIHQxID0gbmV3IERhdGU7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5ld0ludGVydmFsKGZsb29yaSwgb2Zmc2V0aSwgY291bnQsIGZpZWxkKSB7XG5cbiAgZnVuY3Rpb24gaW50ZXJ2YWwoZGF0ZSkge1xuICAgIHJldHVybiBmbG9vcmkoZGF0ZSA9IG5ldyBEYXRlKCtkYXRlKSksIGRhdGU7XG4gIH1cblxuICBpbnRlcnZhbC5mbG9vciA9IGludGVydmFsO1xuXG4gIGludGVydmFsLmNlaWwgPSBmdW5jdGlvbihkYXRlKSB7XG4gICAgcmV0dXJuIGZsb29yaShkYXRlID0gbmV3IERhdGUoZGF0ZSAtIDEpKSwgb2Zmc2V0aShkYXRlLCAxKSwgZmxvb3JpKGRhdGUpLCBkYXRlO1xuICB9O1xuXG4gIGludGVydmFsLnJvdW5kID0gZnVuY3Rpb24oZGF0ZSkge1xuICAgIHZhciBkMCA9IGludGVydmFsKGRhdGUpLFxuICAgICAgICBkMSA9IGludGVydmFsLmNlaWwoZGF0ZSk7XG4gICAgcmV0dXJuIGRhdGUgLSBkMCA8IGQxIC0gZGF0ZSA/IGQwIDogZDE7XG4gIH07XG5cbiAgaW50ZXJ2YWwub2Zmc2V0ID0gZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgIHJldHVybiBvZmZzZXRpKGRhdGUgPSBuZXcgRGF0ZSgrZGF0ZSksIHN0ZXAgPT0gbnVsbCA/IDEgOiBNYXRoLmZsb29yKHN0ZXApKSwgZGF0ZTtcbiAgfTtcblxuICBpbnRlcnZhbC5yYW5nZSA9IGZ1bmN0aW9uKHN0YXJ0LCBzdG9wLCBzdGVwKSB7XG4gICAgdmFyIHJhbmdlID0gW10sIHByZXZpb3VzO1xuICAgIHN0YXJ0ID0gaW50ZXJ2YWwuY2VpbChzdGFydCk7XG4gICAgc3RlcCA9IHN0ZXAgPT0gbnVsbCA/IDEgOiBNYXRoLmZsb29yKHN0ZXApO1xuICAgIGlmICghKHN0YXJ0IDwgc3RvcCkgfHwgIShzdGVwID4gMCkpIHJldHVybiByYW5nZTsgLy8gYWxzbyBoYW5kbGVzIEludmFsaWQgRGF0ZVxuICAgIGRvIHJhbmdlLnB1c2gocHJldmlvdXMgPSBuZXcgRGF0ZSgrc3RhcnQpKSwgb2Zmc2V0aShzdGFydCwgc3RlcCksIGZsb29yaShzdGFydCk7XG4gICAgd2hpbGUgKHByZXZpb3VzIDwgc3RhcnQgJiYgc3RhcnQgPCBzdG9wKTtcbiAgICByZXR1cm4gcmFuZ2U7XG4gIH07XG5cbiAgaW50ZXJ2YWwuZmlsdGVyID0gZnVuY3Rpb24odGVzdCkge1xuICAgIHJldHVybiBuZXdJbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgICBpZiAoZGF0ZSA+PSBkYXRlKSB3aGlsZSAoZmxvb3JpKGRhdGUpLCAhdGVzdChkYXRlKSkgZGF0ZS5zZXRUaW1lKGRhdGUgLSAxKTtcbiAgICB9LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gICAgICBpZiAoZGF0ZSA+PSBkYXRlKSB7XG4gICAgICAgIGlmIChzdGVwIDwgMCkgd2hpbGUgKCsrc3RlcCA8PSAwKSB7XG4gICAgICAgICAgd2hpbGUgKG9mZnNldGkoZGF0ZSwgLTEpLCAhdGVzdChkYXRlKSkge30gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eVxuICAgICAgICB9IGVsc2Ugd2hpbGUgKC0tc3RlcCA+PSAwKSB7XG4gICAgICAgICAgd2hpbGUgKG9mZnNldGkoZGF0ZSwgKzEpLCAhdGVzdChkYXRlKSkge30gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgaWYgKGNvdW50KSB7XG4gICAgaW50ZXJ2YWwuY291bnQgPSBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gICAgICB0MC5zZXRUaW1lKCtzdGFydCksIHQxLnNldFRpbWUoK2VuZCk7XG4gICAgICBmbG9vcmkodDApLCBmbG9vcmkodDEpO1xuICAgICAgcmV0dXJuIE1hdGguZmxvb3IoY291bnQodDAsIHQxKSk7XG4gICAgfTtcblxuICAgIGludGVydmFsLmV2ZXJ5ID0gZnVuY3Rpb24oc3RlcCkge1xuICAgICAgc3RlcCA9IE1hdGguZmxvb3Ioc3RlcCk7XG4gICAgICByZXR1cm4gIWlzRmluaXRlKHN0ZXApIHx8ICEoc3RlcCA+IDApID8gbnVsbFxuICAgICAgICAgIDogIShzdGVwID4gMSkgPyBpbnRlcnZhbFxuICAgICAgICAgIDogaW50ZXJ2YWwuZmlsdGVyKGZpZWxkXG4gICAgICAgICAgICAgID8gZnVuY3Rpb24oZCkgeyByZXR1cm4gZmllbGQoZCkgJSBzdGVwID09PSAwOyB9XG4gICAgICAgICAgICAgIDogZnVuY3Rpb24oZCkgeyByZXR1cm4gaW50ZXJ2YWwuY291bnQoMCwgZCkgJSBzdGVwID09PSAwOyB9KTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGludGVydmFsO1xufVxuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5cbnZhciBtaWxsaXNlY29uZCA9IGludGVydmFsKGZ1bmN0aW9uKCkge1xuICAvLyBub29wXG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gZW5kIC0gc3RhcnQ7XG59KTtcblxuLy8gQW4gb3B0aW1pemVkIGltcGxlbWVudGF0aW9uIGZvciB0aGlzIHNpbXBsZSBjYXNlLlxubWlsbGlzZWNvbmQuZXZlcnkgPSBmdW5jdGlvbihrKSB7XG4gIGsgPSBNYXRoLmZsb29yKGspO1xuICBpZiAoIWlzRmluaXRlKGspIHx8ICEoayA+IDApKSByZXR1cm4gbnVsbDtcbiAgaWYgKCEoayA+IDEpKSByZXR1cm4gbWlsbGlzZWNvbmQ7XG4gIHJldHVybiBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZS5zZXRUaW1lKE1hdGguZmxvb3IoZGF0ZSAvIGspICogayk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogayk7XG4gIH0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGs7XG4gIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbWlsbGlzZWNvbmQ7XG5leHBvcnQgdmFyIG1pbGxpc2Vjb25kcyA9IG1pbGxpc2Vjb25kLnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5pbXBvcnQge2R1cmF0aW9uTWludXRlLCBkdXJhdGlvblNlY29uZH0gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxudmFyIG1pbnV0ZSA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRUaW1lKGRhdGUgLSBkYXRlLmdldE1pbGxpc2Vjb25kcygpIC0gZGF0ZS5nZXRTZWNvbmRzKCkgKiBkdXJhdGlvblNlY29uZCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXAgKiBkdXJhdGlvbk1pbnV0ZSk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25NaW51dGU7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldE1pbnV0ZXMoKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBtaW51dGU7XG5leHBvcnQgdmFyIG1pbnV0ZXMgPSBtaW51dGUucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcblxudmFyIG1vbnRoID0gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldERhdGUoMSk7XG4gIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0TW9udGgoZGF0ZS5nZXRNb250aCgpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiBlbmQuZ2V0TW9udGgoKSAtIHN0YXJ0LmdldE1vbnRoKCkgKyAoZW5kLmdldEZ1bGxZZWFyKCkgLSBzdGFydC5nZXRGdWxsWWVhcigpKSAqIDEyO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRNb250aCgpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1vbnRoO1xuZXhwb3J0IHZhciBtb250aHMgPSBtb250aC5yYW5nZTtcbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuaW1wb3J0IHtkdXJhdGlvblNlY29uZH0gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxudmFyIHNlY29uZCA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRUaW1lKGRhdGUgLSBkYXRlLmdldE1pbGxpc2Vjb25kcygpKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRUaW1lKCtkYXRlICsgc3RlcCAqIGR1cmF0aW9uU2Vjb25kKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBkdXJhdGlvblNlY29uZDtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0VVRDU2Vjb25kcygpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHNlY29uZDtcbmV4cG9ydCB2YXIgc2Vjb25kcyA9IHNlY29uZC5yYW5nZTtcbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuaW1wb3J0IHtkdXJhdGlvbkRheX0gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxudmFyIHV0Y0RheSA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRVVENEYXRlKGRhdGUuZ2V0VVRDRGF0ZSgpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25EYXk7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFVUQ0RhdGUoKSAtIDE7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgdXRjRGF5O1xuZXhwb3J0IHZhciB1dGNEYXlzID0gdXRjRGF5LnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5pbXBvcnQge2R1cmF0aW9uSG91cn0gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxudmFyIHV0Y0hvdXIgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VVRDTWludXRlcygwLCAwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRUaW1lKCtkYXRlICsgc3RlcCAqIGR1cmF0aW9uSG91cik7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25Ib3VyO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRVVENIb3VycygpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHV0Y0hvdXI7XG5leHBvcnQgdmFyIHV0Y0hvdXJzID0gdXRjSG91ci5yYW5nZTtcbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuaW1wb3J0IHtkdXJhdGlvbk1pbnV0ZX0gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxudmFyIHV0Y01pbnV0ZSA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENTZWNvbmRzKDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogZHVyYXRpb25NaW51dGUpO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uTWludXRlO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRVVENNaW51dGVzKCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgdXRjTWludXRlO1xuZXhwb3J0IHZhciB1dGNNaW51dGVzID0gdXRjTWludXRlLnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5cbnZhciB1dGNNb250aCA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENEYXRlKDEpO1xuICBkYXRlLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFVUQ01vbnRoKGRhdGUuZ2V0VVRDTW9udGgoKSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gZW5kLmdldFVUQ01vbnRoKCkgLSBzdGFydC5nZXRVVENNb250aCgpICsgKGVuZC5nZXRVVENGdWxsWWVhcigpIC0gc3RhcnQuZ2V0VVRDRnVsbFllYXIoKSkgKiAxMjtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0VVRDTW9udGgoKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB1dGNNb250aDtcbmV4cG9ydCB2YXIgdXRjTW9udGhzID0gdXRjTW9udGgucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcbmltcG9ydCB7ZHVyYXRpb25XZWVrfSBmcm9tIFwiLi9kdXJhdGlvblwiO1xuXG5mdW5jdGlvbiB1dGNXZWVrZGF5KGkpIHtcbiAgcmV0dXJuIGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgLSAoZGF0ZS5nZXRVVENEYXkoKSArIDcgLSBpKSAlIDcpO1xuICAgIGRhdGUuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgKyBzdGVwICogNyk7XG4gIH0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uV2VlaztcbiAgfSk7XG59XG5cbmV4cG9ydCB2YXIgdXRjU3VuZGF5ID0gdXRjV2Vla2RheSgwKTtcbmV4cG9ydCB2YXIgdXRjTW9uZGF5ID0gdXRjV2Vla2RheSgxKTtcbmV4cG9ydCB2YXIgdXRjVHVlc2RheSA9IHV0Y1dlZWtkYXkoMik7XG5leHBvcnQgdmFyIHV0Y1dlZG5lc2RheSA9IHV0Y1dlZWtkYXkoMyk7XG5leHBvcnQgdmFyIHV0Y1RodXJzZGF5ID0gdXRjV2Vla2RheSg0KTtcbmV4cG9ydCB2YXIgdXRjRnJpZGF5ID0gdXRjV2Vla2RheSg1KTtcbmV4cG9ydCB2YXIgdXRjU2F0dXJkYXkgPSB1dGNXZWVrZGF5KDYpO1xuXG5leHBvcnQgdmFyIHV0Y1N1bmRheXMgPSB1dGNTdW5kYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y01vbmRheXMgPSB1dGNNb25kYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y1R1ZXNkYXlzID0gdXRjVHVlc2RheS5yYW5nZTtcbmV4cG9ydCB2YXIgdXRjV2VkbmVzZGF5cyA9IHV0Y1dlZG5lc2RheS5yYW5nZTtcbmV4cG9ydCB2YXIgdXRjVGh1cnNkYXlzID0gdXRjVGh1cnNkYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y0ZyaWRheXMgPSB1dGNGcmlkYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y1NhdHVyZGF5cyA9IHV0Y1NhdHVyZGF5LnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5cbnZhciB1dGNZZWFyID0gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldFVUQ01vbnRoKDAsIDEpO1xuICBkYXRlLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFVUQ0Z1bGxZZWFyKGRhdGUuZ2V0VVRDRnVsbFllYXIoKSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gZW5kLmdldFVUQ0Z1bGxZZWFyKCkgLSBzdGFydC5nZXRVVENGdWxsWWVhcigpO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRVVENGdWxsWWVhcigpO1xufSk7XG5cbi8vIEFuIG9wdGltaXplZCBpbXBsZW1lbnRhdGlvbiBmb3IgdGhpcyBzaW1wbGUgY2FzZS5cbnV0Y1llYXIuZXZlcnkgPSBmdW5jdGlvbihrKSB7XG4gIHJldHVybiAhaXNGaW5pdGUoayA9IE1hdGguZmxvb3IoaykpIHx8ICEoayA+IDApID8gbnVsbCA6IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICBkYXRlLnNldFVUQ0Z1bGxZZWFyKE1hdGguZmxvb3IoZGF0ZS5nZXRVVENGdWxsWWVhcigpIC8gaykgKiBrKTtcbiAgICBkYXRlLnNldFVUQ01vbnRoKDAsIDEpO1xuICAgIGRhdGUuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICBkYXRlLnNldFVUQ0Z1bGxZZWFyKGRhdGUuZ2V0VVRDRnVsbFllYXIoKSArIHN0ZXAgKiBrKTtcbiAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1dGNZZWFyO1xuZXhwb3J0IHZhciB1dGNZZWFycyA9IHV0Y1llYXIucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcbmltcG9ydCB7ZHVyYXRpb25NaW51dGUsIGR1cmF0aW9uV2Vla30gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxuZnVuY3Rpb24gd2Vla2RheShpKSB7XG4gIHJldHVybiBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpIC0gKGRhdGUuZ2V0RGF5KCkgKyA3IC0gaSkgJSA3KTtcbiAgICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICB9LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgc3RlcCAqIDcpO1xuICB9LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gICAgcmV0dXJuIChlbmQgLSBzdGFydCAtIChlbmQuZ2V0VGltZXpvbmVPZmZzZXQoKSAtIHN0YXJ0LmdldFRpbWV6b25lT2Zmc2V0KCkpICogZHVyYXRpb25NaW51dGUpIC8gZHVyYXRpb25XZWVrO1xuICB9KTtcbn1cblxuZXhwb3J0IHZhciBzdW5kYXkgPSB3ZWVrZGF5KDApO1xuZXhwb3J0IHZhciBtb25kYXkgPSB3ZWVrZGF5KDEpO1xuZXhwb3J0IHZhciB0dWVzZGF5ID0gd2Vla2RheSgyKTtcbmV4cG9ydCB2YXIgd2VkbmVzZGF5ID0gd2Vla2RheSgzKTtcbmV4cG9ydCB2YXIgdGh1cnNkYXkgPSB3ZWVrZGF5KDQpO1xuZXhwb3J0IHZhciBmcmlkYXkgPSB3ZWVrZGF5KDUpO1xuZXhwb3J0IHZhciBzYXR1cmRheSA9IHdlZWtkYXkoNik7XG5cbmV4cG9ydCB2YXIgc3VuZGF5cyA9IHN1bmRheS5yYW5nZTtcbmV4cG9ydCB2YXIgbW9uZGF5cyA9IG1vbmRheS5yYW5nZTtcbmV4cG9ydCB2YXIgdHVlc2RheXMgPSB0dWVzZGF5LnJhbmdlO1xuZXhwb3J0IHZhciB3ZWRuZXNkYXlzID0gd2VkbmVzZGF5LnJhbmdlO1xuZXhwb3J0IHZhciB0aHVyc2RheXMgPSB0aHVyc2RheS5yYW5nZTtcbmV4cG9ydCB2YXIgZnJpZGF5cyA9IGZyaWRheS5yYW5nZTtcbmV4cG9ydCB2YXIgc2F0dXJkYXlzID0gc2F0dXJkYXkucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcblxudmFyIHllYXIgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0TW9udGgoMCwgMSk7XG4gIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0RnVsbFllYXIoZGF0ZS5nZXRGdWxsWWVhcigpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiBlbmQuZ2V0RnVsbFllYXIoKSAtIHN0YXJ0LmdldEZ1bGxZZWFyKCk7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldEZ1bGxZZWFyKCk7XG59KTtcblxuLy8gQW4gb3B0aW1pemVkIGltcGxlbWVudGF0aW9uIGZvciB0aGlzIHNpbXBsZSBjYXNlLlxueWVhci5ldmVyeSA9IGZ1bmN0aW9uKGspIHtcbiAgcmV0dXJuICFpc0Zpbml0ZShrID0gTWF0aC5mbG9vcihrKSkgfHwgIShrID4gMCkgPyBudWxsIDogaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIGRhdGUuc2V0RnVsbFllYXIoTWF0aC5mbG9vcihkYXRlLmdldEZ1bGxZZWFyKCkgLyBrKSAqIGspO1xuICAgIGRhdGUuc2V0TW9udGgoMCwgMSk7XG4gICAgZGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgIGRhdGUuc2V0RnVsbFllYXIoZGF0ZS5nZXRGdWxsWWVhcigpICsgc3RlcCAqIGspO1xuICB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHllYXI7XG5leHBvcnQgdmFyIHllYXJzID0geWVhci5yYW5nZTtcbiIsImV4cG9ydCB7XG4gIG5vdyxcbiAgdGltZXIsXG4gIHRpbWVyRmx1c2hcbn0gZnJvbSBcIi4vdGltZXJcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB0aW1lb3V0XG59IGZyb20gXCIuL3RpbWVvdXRcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBpbnRlcnZhbFxufSBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuIiwiaW1wb3J0IHtUaW1lciwgbm93fSBmcm9tIFwiLi90aW1lclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaywgZGVsYXksIHRpbWUpIHtcbiAgdmFyIHQgPSBuZXcgVGltZXIsIHRvdGFsID0gZGVsYXk7XG4gIGlmIChkZWxheSA9PSBudWxsKSByZXR1cm4gdC5yZXN0YXJ0KGNhbGxiYWNrLCBkZWxheSwgdGltZSksIHQ7XG4gIGRlbGF5ID0gK2RlbGF5LCB0aW1lID0gdGltZSA9PSBudWxsID8gbm93KCkgOiArdGltZTtcbiAgdC5yZXN0YXJ0KGZ1bmN0aW9uIHRpY2soZWxhcHNlZCkge1xuICAgIGVsYXBzZWQgKz0gdG90YWw7XG4gICAgdC5yZXN0YXJ0KHRpY2ssIHRvdGFsICs9IGRlbGF5LCB0aW1lKTtcbiAgICBjYWxsYmFjayhlbGFwc2VkKTtcbiAgfSwgZGVsYXksIHRpbWUpO1xuICByZXR1cm4gdDtcbn1cbiIsImltcG9ydCB7VGltZXJ9IGZyb20gXCIuL3RpbWVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrLCBkZWxheSwgdGltZSkge1xuICB2YXIgdCA9IG5ldyBUaW1lcjtcbiAgZGVsYXkgPSBkZWxheSA9PSBudWxsID8gMCA6ICtkZWxheTtcbiAgdC5yZXN0YXJ0KGZ1bmN0aW9uKGVsYXBzZWQpIHtcbiAgICB0LnN0b3AoKTtcbiAgICBjYWxsYmFjayhlbGFwc2VkICsgZGVsYXkpO1xuICB9LCBkZWxheSwgdGltZSk7XG4gIHJldHVybiB0O1xufVxuIiwidmFyIGZyYW1lID0gMCwgLy8gaXMgYW4gYW5pbWF0aW9uIGZyYW1lIHBlbmRpbmc/XG4gICAgdGltZW91dCA9IDAsIC8vIGlzIGEgdGltZW91dCBwZW5kaW5nP1xuICAgIGludGVydmFsID0gMCwgLy8gYXJlIGFueSB0aW1lcnMgYWN0aXZlP1xuICAgIHBva2VEZWxheSA9IDEwMDAsIC8vIGhvdyBmcmVxdWVudGx5IHdlIGNoZWNrIGZvciBjbG9jayBza2V3XG4gICAgdGFza0hlYWQsXG4gICAgdGFza1RhaWwsXG4gICAgY2xvY2tMYXN0ID0gMCxcbiAgICBjbG9ja05vdyA9IDAsXG4gICAgY2xvY2tTa2V3ID0gMCxcbiAgICBjbG9jayA9IHR5cGVvZiBwZXJmb3JtYW5jZSA9PT0gXCJvYmplY3RcIiAmJiBwZXJmb3JtYW5jZS5ub3cgPyBwZXJmb3JtYW5jZSA6IERhdGUsXG4gICAgc2V0RnJhbWUgPSB0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiICYmIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPyB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lLmJpbmQod2luZG93KSA6IGZ1bmN0aW9uKGYpIHsgc2V0VGltZW91dChmLCAxNyk7IH07XG5cbmV4cG9ydCBmdW5jdGlvbiBub3coKSB7XG4gIHJldHVybiBjbG9ja05vdyB8fCAoc2V0RnJhbWUoY2xlYXJOb3cpLCBjbG9ja05vdyA9IGNsb2NrLm5vdygpICsgY2xvY2tTa2V3KTtcbn1cblxuZnVuY3Rpb24gY2xlYXJOb3coKSB7XG4gIGNsb2NrTm93ID0gMDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFRpbWVyKCkge1xuICB0aGlzLl9jYWxsID1cbiAgdGhpcy5fdGltZSA9XG4gIHRoaXMuX25leHQgPSBudWxsO1xufVxuXG5UaW1lci5wcm90b3R5cGUgPSB0aW1lci5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBUaW1lcixcbiAgcmVzdGFydDogZnVuY3Rpb24oY2FsbGJhY2ssIGRlbGF5LCB0aW1lKSB7XG4gICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiY2FsbGJhY2sgaXMgbm90IGEgZnVuY3Rpb25cIik7XG4gICAgdGltZSA9ICh0aW1lID09IG51bGwgPyBub3coKSA6ICt0aW1lKSArIChkZWxheSA9PSBudWxsID8gMCA6ICtkZWxheSk7XG4gICAgaWYgKCF0aGlzLl9uZXh0ICYmIHRhc2tUYWlsICE9PSB0aGlzKSB7XG4gICAgICBpZiAodGFza1RhaWwpIHRhc2tUYWlsLl9uZXh0ID0gdGhpcztcbiAgICAgIGVsc2UgdGFza0hlYWQgPSB0aGlzO1xuICAgICAgdGFza1RhaWwgPSB0aGlzO1xuICAgIH1cbiAgICB0aGlzLl9jYWxsID0gY2FsbGJhY2s7XG4gICAgdGhpcy5fdGltZSA9IHRpbWU7XG4gICAgc2xlZXAoKTtcbiAgfSxcbiAgc3RvcDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX2NhbGwpIHtcbiAgICAgIHRoaXMuX2NhbGwgPSBudWxsO1xuICAgICAgdGhpcy5fdGltZSA9IEluZmluaXR5O1xuICAgICAgc2xlZXAoKTtcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydCBmdW5jdGlvbiB0aW1lcihjYWxsYmFjaywgZGVsYXksIHRpbWUpIHtcbiAgdmFyIHQgPSBuZXcgVGltZXI7XG4gIHQucmVzdGFydChjYWxsYmFjaywgZGVsYXksIHRpbWUpO1xuICByZXR1cm4gdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRpbWVyRmx1c2goKSB7XG4gIG5vdygpOyAvLyBHZXQgdGhlIGN1cnJlbnQgdGltZSwgaWYgbm90IGFscmVhZHkgc2V0LlxuICArK2ZyYW1lOyAvLyBQcmV0ZW5kIHdl4oCZdmUgc2V0IGFuIGFsYXJtLCBpZiB3ZSBoYXZlbuKAmXQgYWxyZWFkeS5cbiAgdmFyIHQgPSB0YXNrSGVhZCwgZTtcbiAgd2hpbGUgKHQpIHtcbiAgICBpZiAoKGUgPSBjbG9ja05vdyAtIHQuX3RpbWUpID49IDApIHQuX2NhbGwuY2FsbChudWxsLCBlKTtcbiAgICB0ID0gdC5fbmV4dDtcbiAgfVxuICAtLWZyYW1lO1xufVxuXG5mdW5jdGlvbiB3YWtlKCkge1xuICBjbG9ja05vdyA9IChjbG9ja0xhc3QgPSBjbG9jay5ub3coKSkgKyBjbG9ja1NrZXc7XG4gIGZyYW1lID0gdGltZW91dCA9IDA7XG4gIHRyeSB7XG4gICAgdGltZXJGbHVzaCgpO1xuICB9IGZpbmFsbHkge1xuICAgIGZyYW1lID0gMDtcbiAgICBuYXAoKTtcbiAgICBjbG9ja05vdyA9IDA7XG4gIH1cbn1cblxuZnVuY3Rpb24gcG9rZSgpIHtcbiAgdmFyIG5vdyA9IGNsb2NrLm5vdygpLCBkZWxheSA9IG5vdyAtIGNsb2NrTGFzdDtcbiAgaWYgKGRlbGF5ID4gcG9rZURlbGF5KSBjbG9ja1NrZXcgLT0gZGVsYXksIGNsb2NrTGFzdCA9IG5vdztcbn1cblxuZnVuY3Rpb24gbmFwKCkge1xuICB2YXIgdDAsIHQxID0gdGFza0hlYWQsIHQyLCB0aW1lID0gSW5maW5pdHk7XG4gIHdoaWxlICh0MSkge1xuICAgIGlmICh0MS5fY2FsbCkge1xuICAgICAgaWYgKHRpbWUgPiB0MS5fdGltZSkgdGltZSA9IHQxLl90aW1lO1xuICAgICAgdDAgPSB0MSwgdDEgPSB0MS5fbmV4dDtcbiAgICB9IGVsc2Uge1xuICAgICAgdDIgPSB0MS5fbmV4dCwgdDEuX25leHQgPSBudWxsO1xuICAgICAgdDEgPSB0MCA/IHQwLl9uZXh0ID0gdDIgOiB0YXNrSGVhZCA9IHQyO1xuICAgIH1cbiAgfVxuICB0YXNrVGFpbCA9IHQwO1xuICBzbGVlcCh0aW1lKTtcbn1cblxuZnVuY3Rpb24gc2xlZXAodGltZSkge1xuICBpZiAoZnJhbWUpIHJldHVybjsgLy8gU29vbmVzdCBhbGFybSBhbHJlYWR5IHNldCwgb3Igd2lsbCBiZS5cbiAgaWYgKHRpbWVvdXQpIHRpbWVvdXQgPSBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gIHZhciBkZWxheSA9IHRpbWUgLSBjbG9ja05vdzsgLy8gU3RyaWN0bHkgbGVzcyB0aGFuIGlmIHdlIHJlY29tcHV0ZWQgY2xvY2tOb3cuXG4gIGlmIChkZWxheSA+IDI0KSB7XG4gICAgaWYgKHRpbWUgPCBJbmZpbml0eSkgdGltZW91dCA9IHNldFRpbWVvdXQod2FrZSwgdGltZSAtIGNsb2NrLm5vdygpIC0gY2xvY2tTa2V3KTtcbiAgICBpZiAoaW50ZXJ2YWwpIGludGVydmFsID0gY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKCFpbnRlcnZhbCkgY2xvY2tMYXN0ID0gY2xvY2subm93KCksIGludGVydmFsID0gc2V0SW50ZXJ2YWwocG9rZSwgcG9rZURlbGF5KTtcbiAgICBmcmFtZSA9IDEsIHNldEZyYW1lKHdha2UpO1xuICB9XG59XG4iLCJpbXBvcnQge1RyYW5zaXRpb259IGZyb20gXCIuL3RyYW5zaXRpb24vaW5kZXhcIjtcbmltcG9ydCB7U0NIRURVTEVEfSBmcm9tIFwiLi90cmFuc2l0aW9uL3NjaGVkdWxlXCI7XG5cbnZhciByb290ID0gW251bGxdO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlLCBuYW1lKSB7XG4gIHZhciBzY2hlZHVsZXMgPSBub2RlLl9fdHJhbnNpdGlvbixcbiAgICAgIHNjaGVkdWxlLFxuICAgICAgaTtcblxuICBpZiAoc2NoZWR1bGVzKSB7XG4gICAgbmFtZSA9IG5hbWUgPT0gbnVsbCA/IG51bGwgOiBuYW1lICsgXCJcIjtcbiAgICBmb3IgKGkgaW4gc2NoZWR1bGVzKSB7XG4gICAgICBpZiAoKHNjaGVkdWxlID0gc2NoZWR1bGVzW2ldKS5zdGF0ZSA+IFNDSEVEVUxFRCAmJiBzY2hlZHVsZS5uYW1lID09PSBuYW1lKSB7XG4gICAgICAgIHJldHVybiBuZXcgVHJhbnNpdGlvbihbW25vZGVdXSwgcm9vdCwgbmFtZSwgK2kpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuIiwiaW1wb3J0IFwiLi9zZWxlY3Rpb24vaW5kZXhcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0cmFuc2l0aW9ufSBmcm9tIFwiLi90cmFuc2l0aW9uL2luZGV4XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgYWN0aXZlfSBmcm9tIFwiLi9hY3RpdmVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnJ1cHR9IGZyb20gXCIuL2ludGVycnVwdFwiO1xuIiwiaW1wb3J0IHtTVEFSVElORywgRU5ESU5HLCBFTkRFRH0gZnJvbSBcIi4vdHJhbnNpdGlvbi9zY2hlZHVsZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlLCBuYW1lKSB7XG4gIHZhciBzY2hlZHVsZXMgPSBub2RlLl9fdHJhbnNpdGlvbixcbiAgICAgIHNjaGVkdWxlLFxuICAgICAgYWN0aXZlLFxuICAgICAgZW1wdHkgPSB0cnVlLFxuICAgICAgaTtcblxuICBpZiAoIXNjaGVkdWxlcykgcmV0dXJuO1xuXG4gIG5hbWUgPSBuYW1lID09IG51bGwgPyBudWxsIDogbmFtZSArIFwiXCI7XG5cbiAgZm9yIChpIGluIHNjaGVkdWxlcykge1xuICAgIGlmICgoc2NoZWR1bGUgPSBzY2hlZHVsZXNbaV0pLm5hbWUgIT09IG5hbWUpIHsgZW1wdHkgPSBmYWxzZTsgY29udGludWU7IH1cbiAgICBhY3RpdmUgPSBzY2hlZHVsZS5zdGF0ZSA+IFNUQVJUSU5HICYmIHNjaGVkdWxlLnN0YXRlIDwgRU5ESU5HO1xuICAgIHNjaGVkdWxlLnN0YXRlID0gRU5ERUQ7XG4gICAgc2NoZWR1bGUudGltZXIuc3RvcCgpO1xuICAgIHNjaGVkdWxlLm9uLmNhbGwoYWN0aXZlID8gXCJpbnRlcnJ1cHRcIiA6IFwiY2FuY2VsXCIsIG5vZGUsIG5vZGUuX19kYXRhX18sIHNjaGVkdWxlLmluZGV4LCBzY2hlZHVsZS5ncm91cCk7XG4gICAgZGVsZXRlIHNjaGVkdWxlc1tpXTtcbiAgfVxuXG4gIGlmIChlbXB0eSkgZGVsZXRlIG5vZGUuX190cmFuc2l0aW9uO1xufVxuIiwiaW1wb3J0IHtzZWxlY3Rpb259IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCBzZWxlY3Rpb25faW50ZXJydXB0IGZyb20gXCIuL2ludGVycnVwdFwiO1xuaW1wb3J0IHNlbGVjdGlvbl90cmFuc2l0aW9uIGZyb20gXCIuL3RyYW5zaXRpb25cIjtcblxuc2VsZWN0aW9uLnByb3RvdHlwZS5pbnRlcnJ1cHQgPSBzZWxlY3Rpb25faW50ZXJydXB0O1xuc2VsZWN0aW9uLnByb3RvdHlwZS50cmFuc2l0aW9uID0gc2VsZWN0aW9uX3RyYW5zaXRpb247XG4iLCJpbXBvcnQgaW50ZXJydXB0IGZyb20gXCIuLi9pbnRlcnJ1cHRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgIGludGVycnVwdCh0aGlzLCBuYW1lKTtcbiAgfSk7XG59XG4iLCJpbXBvcnQge1RyYW5zaXRpb24sIG5ld0lkfSBmcm9tIFwiLi4vdHJhbnNpdGlvbi9pbmRleFwiO1xuaW1wb3J0IHNjaGVkdWxlIGZyb20gXCIuLi90cmFuc2l0aW9uL3NjaGVkdWxlXCI7XG5pbXBvcnQge2Vhc2VDdWJpY0luT3V0fSBmcm9tIFwiZDMtZWFzZVwiO1xuaW1wb3J0IHtub3d9IGZyb20gXCJkMy10aW1lclwiO1xuXG52YXIgZGVmYXVsdFRpbWluZyA9IHtcbiAgdGltZTogbnVsbCwgLy8gU2V0IG9uIHVzZS5cbiAgZGVsYXk6IDAsXG4gIGR1cmF0aW9uOiAyNTAsXG4gIGVhc2U6IGVhc2VDdWJpY0luT3V0XG59O1xuXG5mdW5jdGlvbiBpbmhlcml0KG5vZGUsIGlkKSB7XG4gIHZhciB0aW1pbmc7XG4gIHdoaWxlICghKHRpbWluZyA9IG5vZGUuX190cmFuc2l0aW9uKSB8fCAhKHRpbWluZyA9IHRpbWluZ1tpZF0pKSB7XG4gICAgaWYgKCEobm9kZSA9IG5vZGUucGFyZW50Tm9kZSkpIHtcbiAgICAgIHJldHVybiBkZWZhdWx0VGltaW5nLnRpbWUgPSBub3coKSwgZGVmYXVsdFRpbWluZztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRpbWluZztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICB2YXIgaWQsXG4gICAgICB0aW1pbmc7XG5cbiAgaWYgKG5hbWUgaW5zdGFuY2VvZiBUcmFuc2l0aW9uKSB7XG4gICAgaWQgPSBuYW1lLl9pZCwgbmFtZSA9IG5hbWUuX25hbWU7XG4gIH0gZWxzZSB7XG4gICAgaWQgPSBuZXdJZCgpLCAodGltaW5nID0gZGVmYXVsdFRpbWluZykudGltZSA9IG5vdygpLCBuYW1lID0gbmFtZSA9PSBudWxsID8gbnVsbCA6IG5hbWUgKyBcIlwiO1xuICB9XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgc2NoZWR1bGUobm9kZSwgbmFtZSwgaWQsIGksIGdyb3VwLCB0aW1pbmcgfHwgaW5oZXJpdChub2RlLCBpZCkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihncm91cHMsIHRoaXMuX3BhcmVudHMsIG5hbWUsIGlkKTtcbn1cbiIsImltcG9ydCB7aW50ZXJwb2xhdGVUcmFuc2Zvcm1TdmcgYXMgaW50ZXJwb2xhdGVUcmFuc2Zvcm19IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuaW1wb3J0IHtuYW1lc3BhY2V9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB7dHdlZW5WYWx1ZX0gZnJvbSBcIi4vdHdlZW5cIjtcbmltcG9ydCBpbnRlcnBvbGF0ZSBmcm9tIFwiLi9pbnRlcnBvbGF0ZVwiO1xuXG5mdW5jdGlvbiBhdHRyUmVtb3ZlKG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyUmVtb3ZlTlMoZnVsbG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckNvbnN0YW50KG5hbWUsIGludGVycG9sYXRlLCB2YWx1ZTEpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMSA9IHZhbHVlMSArIFwiXCIsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCA9IHRoaXMuZ2V0QXR0cmlidXRlKG5hbWUpO1xuICAgIHJldHVybiBzdHJpbmcwID09PSBzdHJpbmcxID8gbnVsbFxuICAgICAgICA6IHN0cmluZzAgPT09IHN0cmluZzAwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUoc3RyaW5nMDAgPSBzdHJpbmcwLCB2YWx1ZTEpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyQ29uc3RhbnROUyhmdWxsbmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlMSkge1xuICB2YXIgc3RyaW5nMDAsXG4gICAgICBzdHJpbmcxID0gdmFsdWUxICsgXCJcIixcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdHJpbmcwID0gdGhpcy5nZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICAgIHJldHVybiBzdHJpbmcwID09PSBzdHJpbmcxID8gbnVsbFxuICAgICAgICA6IHN0cmluZzAgPT09IHN0cmluZzAwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUoc3RyaW5nMDAgPSBzdHJpbmcwLCB2YWx1ZTEpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyRnVuY3Rpb24obmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEwLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAsIHZhbHVlMSA9IHZhbHVlKHRoaXMpLCBzdHJpbmcxO1xuICAgIGlmICh2YWx1ZTEgPT0gbnVsbCkgcmV0dXJuIHZvaWQgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgc3RyaW5nMCA9IHRoaXMuZ2V0QXR0cmlidXRlKG5hbWUpO1xuICAgIHN0cmluZzEgPSB2YWx1ZTEgKyBcIlwiO1xuICAgIHJldHVybiBzdHJpbmcwID09PSBzdHJpbmcxID8gbnVsbFxuICAgICAgICA6IHN0cmluZzAgPT09IHN0cmluZzAwICYmIHN0cmluZzEgPT09IHN0cmluZzEwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogKHN0cmluZzEwID0gc3RyaW5nMSwgaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUoc3RyaW5nMDAgPSBzdHJpbmcwLCB2YWx1ZTEpKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckZ1bmN0aW9uTlMoZnVsbG5hbWUsIGludGVycG9sYXRlLCB2YWx1ZSkge1xuICB2YXIgc3RyaW5nMDAsXG4gICAgICBzdHJpbmcxMCxcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdHJpbmcwLCB2YWx1ZTEgPSB2YWx1ZSh0aGlzKSwgc3RyaW5nMTtcbiAgICBpZiAodmFsdWUxID09IG51bGwpIHJldHVybiB2b2lkIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgICBzdHJpbmcwID0gdGhpcy5nZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICAgIHN0cmluZzEgPSB2YWx1ZTEgKyBcIlwiO1xuICAgIHJldHVybiBzdHJpbmcwID09PSBzdHJpbmcxID8gbnVsbFxuICAgICAgICA6IHN0cmluZzAgPT09IHN0cmluZzAwICYmIHN0cmluZzEgPT09IHN0cmluZzEwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogKHN0cmluZzEwID0gc3RyaW5nMSwgaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUoc3RyaW5nMDAgPSBzdHJpbmcwLCB2YWx1ZTEpKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgdmFyIGZ1bGxuYW1lID0gbmFtZXNwYWNlKG5hbWUpLCBpID0gZnVsbG5hbWUgPT09IFwidHJhbnNmb3JtXCIgPyBpbnRlcnBvbGF0ZVRyYW5zZm9ybSA6IGludGVycG9sYXRlO1xuICByZXR1cm4gdGhpcy5hdHRyVHdlZW4obmFtZSwgdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgID8gKGZ1bGxuYW1lLmxvY2FsID8gYXR0ckZ1bmN0aW9uTlMgOiBhdHRyRnVuY3Rpb24pKGZ1bGxuYW1lLCBpLCB0d2VlblZhbHVlKHRoaXMsIFwiYXR0ci5cIiArIG5hbWUsIHZhbHVlKSlcbiAgICAgIDogdmFsdWUgPT0gbnVsbCA/IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJSZW1vdmVOUyA6IGF0dHJSZW1vdmUpKGZ1bGxuYW1lKVxuICAgICAgOiAoZnVsbG5hbWUubG9jYWwgPyBhdHRyQ29uc3RhbnROUyA6IGF0dHJDb25zdGFudCkoZnVsbG5hbWUsIGksIHZhbHVlKSk7XG59XG4iLCJpbXBvcnQge25hbWVzcGFjZX0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuXG5mdW5jdGlvbiBhdHRySW50ZXJwb2xhdGUobmFtZSwgaSkge1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsIGkodCkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRySW50ZXJwb2xhdGVOUyhmdWxsbmFtZSwgaSkge1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHRoaXMuc2V0QXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsLCBpKHQpKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0clR3ZWVuTlMoZnVsbG5hbWUsIHZhbHVlKSB7XG4gIHZhciB0MCwgaTA7XG4gIGZ1bmN0aW9uIHR3ZWVuKCkge1xuICAgIHZhciBpID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAoaSAhPT0gaTApIHQwID0gKGkwID0gaSkgJiYgYXR0ckludGVycG9sYXRlTlMoZnVsbG5hbWUsIGkpO1xuICAgIHJldHVybiB0MDtcbiAgfVxuICB0d2Vlbi5fdmFsdWUgPSB2YWx1ZTtcbiAgcmV0dXJuIHR3ZWVuO1xufVxuXG5mdW5jdGlvbiBhdHRyVHdlZW4obmFtZSwgdmFsdWUpIHtcbiAgdmFyIHQwLCBpMDtcbiAgZnVuY3Rpb24gdHdlZW4oKSB7XG4gICAgdmFyIGkgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmIChpICE9PSBpMCkgdDAgPSAoaTAgPSBpKSAmJiBhdHRySW50ZXJwb2xhdGUobmFtZSwgaSk7XG4gICAgcmV0dXJuIHQwO1xuICB9XG4gIHR3ZWVuLl92YWx1ZSA9IHZhbHVlO1xuICByZXR1cm4gdHdlZW47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBrZXkgPSBcImF0dHIuXCIgKyBuYW1lO1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiAoa2V5ID0gdGhpcy50d2VlbihrZXkpKSAmJiBrZXkuX3ZhbHVlO1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCBudWxsKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gIHZhciBmdWxsbmFtZSA9IG5hbWVzcGFjZShuYW1lKTtcbiAgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCAoZnVsbG5hbWUubG9jYWwgPyBhdHRyVHdlZW5OUyA6IGF0dHJUd2VlbikoZnVsbG5hbWUsIHZhbHVlKSk7XG59XG4iLCJpbXBvcnQge2dldCwgaW5pdH0gZnJvbSBcIi4vc2NoZWR1bGVcIjtcblxuZnVuY3Rpb24gZGVsYXlGdW5jdGlvbihpZCwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIGluaXQodGhpcywgaWQpLmRlbGF5ID0gK3ZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGRlbGF5Q29uc3RhbnQoaWQsIHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA9ICt2YWx1ZSwgZnVuY3Rpb24oKSB7XG4gICAgaW5pdCh0aGlzLCBpZCkuZGVsYXkgPSB2YWx1ZTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gZGVsYXlGdW5jdGlvblxuICAgICAgICAgIDogZGVsYXlDb25zdGFudCkoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZGVsYXk7XG59XG4iLCJpbXBvcnQge2dldCwgc2V0fSBmcm9tIFwiLi9zY2hlZHVsZVwiO1xuXG5mdW5jdGlvbiBkdXJhdGlvbkZ1bmN0aW9uKGlkLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgc2V0KHRoaXMsIGlkKS5kdXJhdGlvbiA9ICt2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBkdXJhdGlvbkNvbnN0YW50KGlkLCB2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPSArdmFsdWUsIGZ1bmN0aW9uKCkge1xuICAgIHNldCh0aGlzLCBpZCkuZHVyYXRpb24gPSB2YWx1ZTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gZHVyYXRpb25GdW5jdGlvblxuICAgICAgICAgIDogZHVyYXRpb25Db25zdGFudCkoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZHVyYXRpb247XG59XG4iLCJpbXBvcnQge2dldCwgc2V0fSBmcm9tIFwiLi9zY2hlZHVsZVwiO1xuXG5mdW5jdGlvbiBlYXNlQ29uc3RhbnQoaWQsIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgc2V0KHRoaXMsIGlkKS5lYXNlID0gdmFsdWU7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuZWFjaChlYXNlQ29uc3RhbnQoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZWFzZTtcbn1cbiIsImltcG9ydCB7c2V0fSBmcm9tIFwiLi9zY2hlZHVsZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIG9uMCwgb24xLCB0aGF0ID0gdGhpcywgaWQgPSB0aGF0Ll9pZCwgc2l6ZSA9IHRoYXQuc2l6ZSgpO1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdmFyIGNhbmNlbCA9IHt2YWx1ZTogcmVqZWN0fSxcbiAgICAgICAgZW5kID0ge3ZhbHVlOiBmdW5jdGlvbigpIHsgaWYgKC0tc2l6ZSA9PT0gMCkgcmVzb2x2ZSgpOyB9fTtcblxuICAgIHRoYXQuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCksXG4gICAgICAgICAgb24gPSBzY2hlZHVsZS5vbjtcblxuICAgICAgLy8gSWYgdGhpcyBub2RlIHNoYXJlZCBhIGRpc3BhdGNoIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsXG4gICAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgZGlzcGF0Y2ggYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAgIC8vIE90aGVyd2lzZSwgY29weS1vbi13cml0ZS5cbiAgICAgIGlmIChvbiAhPT0gb24wKSB7XG4gICAgICAgIG9uMSA9IChvbjAgPSBvbikuY29weSgpO1xuICAgICAgICBvbjEuXy5jYW5jZWwucHVzaChjYW5jZWwpO1xuICAgICAgICBvbjEuXy5pbnRlcnJ1cHQucHVzaChjYW5jZWwpO1xuICAgICAgICBvbjEuXy5lbmQucHVzaChlbmQpO1xuICAgICAgfVxuXG4gICAgICBzY2hlZHVsZS5vbiA9IG9uMTtcbiAgICB9KTtcbiAgfSk7XG59XG4iLCJpbXBvcnQge21hdGNoZXJ9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB7VHJhbnNpdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWF0Y2gpIHtcbiAgaWYgKHR5cGVvZiBtYXRjaCAhPT0gXCJmdW5jdGlvblwiKSBtYXRjaCA9IG1hdGNoZXIobWF0Y2gpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc3ViZ3JvdXAgPSBzdWJncm91cHNbal0gPSBbXSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiBtYXRjaC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSkge1xuICAgICAgICBzdWJncm91cC5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihzdWJncm91cHMsIHRoaXMuX3BhcmVudHMsIHRoaXMuX25hbWUsIHRoaXMuX2lkKTtcbn1cbiIsImltcG9ydCB7c2VsZWN0aW9ufSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9hdHRyIGZyb20gXCIuL2F0dHJcIjtcbmltcG9ydCB0cmFuc2l0aW9uX2F0dHJUd2VlbiBmcm9tIFwiLi9hdHRyVHdlZW5cIjtcbmltcG9ydCB0cmFuc2l0aW9uX2RlbGF5IGZyb20gXCIuL2RlbGF5XCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9kdXJhdGlvbiBmcm9tIFwiLi9kdXJhdGlvblwiO1xuaW1wb3J0IHRyYW5zaXRpb25fZWFzZSBmcm9tIFwiLi9lYXNlXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9maWx0ZXIgZnJvbSBcIi4vZmlsdGVyXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9tZXJnZSBmcm9tIFwiLi9tZXJnZVwiO1xuaW1wb3J0IHRyYW5zaXRpb25fb24gZnJvbSBcIi4vb25cIjtcbmltcG9ydCB0cmFuc2l0aW9uX3JlbW92ZSBmcm9tIFwiLi9yZW1vdmVcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3NlbGVjdCBmcm9tIFwiLi9zZWxlY3RcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3NlbGVjdEFsbCBmcm9tIFwiLi9zZWxlY3RBbGxcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3NlbGVjdGlvbiBmcm9tIFwiLi9zZWxlY3Rpb25cIjtcbmltcG9ydCB0cmFuc2l0aW9uX3N0eWxlIGZyb20gXCIuL3N0eWxlXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9zdHlsZVR3ZWVuIGZyb20gXCIuL3N0eWxlVHdlZW5cIjtcbmltcG9ydCB0cmFuc2l0aW9uX3RleHQgZnJvbSBcIi4vdGV4dFwiO1xuaW1wb3J0IHRyYW5zaXRpb25fdHJhbnNpdGlvbiBmcm9tIFwiLi90cmFuc2l0aW9uXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl90d2VlbiBmcm9tIFwiLi90d2VlblwiO1xuaW1wb3J0IHRyYW5zaXRpb25fZW5kIGZyb20gXCIuL2VuZFwiO1xuXG52YXIgaWQgPSAwO1xuXG5leHBvcnQgZnVuY3Rpb24gVHJhbnNpdGlvbihncm91cHMsIHBhcmVudHMsIG5hbWUsIGlkKSB7XG4gIHRoaXMuX2dyb3VwcyA9IGdyb3VwcztcbiAgdGhpcy5fcGFyZW50cyA9IHBhcmVudHM7XG4gIHRoaXMuX25hbWUgPSBuYW1lO1xuICB0aGlzLl9pZCA9IGlkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmFuc2l0aW9uKG5hbWUpIHtcbiAgcmV0dXJuIHNlbGVjdGlvbigpLnRyYW5zaXRpb24obmFtZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBuZXdJZCgpIHtcbiAgcmV0dXJuICsraWQ7XG59XG5cbnZhciBzZWxlY3Rpb25fcHJvdG90eXBlID0gc2VsZWN0aW9uLnByb3RvdHlwZTtcblxuVHJhbnNpdGlvbi5wcm90b3R5cGUgPSB0cmFuc2l0aW9uLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFRyYW5zaXRpb24sXG4gIHNlbGVjdDogdHJhbnNpdGlvbl9zZWxlY3QsXG4gIHNlbGVjdEFsbDogdHJhbnNpdGlvbl9zZWxlY3RBbGwsXG4gIGZpbHRlcjogdHJhbnNpdGlvbl9maWx0ZXIsXG4gIG1lcmdlOiB0cmFuc2l0aW9uX21lcmdlLFxuICBzZWxlY3Rpb246IHRyYW5zaXRpb25fc2VsZWN0aW9uLFxuICB0cmFuc2l0aW9uOiB0cmFuc2l0aW9uX3RyYW5zaXRpb24sXG4gIGNhbGw6IHNlbGVjdGlvbl9wcm90b3R5cGUuY2FsbCxcbiAgbm9kZXM6IHNlbGVjdGlvbl9wcm90b3R5cGUubm9kZXMsXG4gIG5vZGU6IHNlbGVjdGlvbl9wcm90b3R5cGUubm9kZSxcbiAgc2l6ZTogc2VsZWN0aW9uX3Byb3RvdHlwZS5zaXplLFxuICBlbXB0eTogc2VsZWN0aW9uX3Byb3RvdHlwZS5lbXB0eSxcbiAgZWFjaDogc2VsZWN0aW9uX3Byb3RvdHlwZS5lYWNoLFxuICBvbjogdHJhbnNpdGlvbl9vbixcbiAgYXR0cjogdHJhbnNpdGlvbl9hdHRyLFxuICBhdHRyVHdlZW46IHRyYW5zaXRpb25fYXR0clR3ZWVuLFxuICBzdHlsZTogdHJhbnNpdGlvbl9zdHlsZSxcbiAgc3R5bGVUd2VlbjogdHJhbnNpdGlvbl9zdHlsZVR3ZWVuLFxuICB0ZXh0OiB0cmFuc2l0aW9uX3RleHQsXG4gIHJlbW92ZTogdHJhbnNpdGlvbl9yZW1vdmUsXG4gIHR3ZWVuOiB0cmFuc2l0aW9uX3R3ZWVuLFxuICBkZWxheTogdHJhbnNpdGlvbl9kZWxheSxcbiAgZHVyYXRpb246IHRyYW5zaXRpb25fZHVyYXRpb24sXG4gIGVhc2U6IHRyYW5zaXRpb25fZWFzZSxcbiAgZW5kOiB0cmFuc2l0aW9uX2VuZFxufTtcbiIsImltcG9ydCB7Y29sb3J9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IHtpbnRlcnBvbGF0ZU51bWJlciwgaW50ZXJwb2xhdGVSZ2IsIGludGVycG9sYXRlU3RyaW5nfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICB2YXIgYztcbiAgcmV0dXJuICh0eXBlb2YgYiA9PT0gXCJudW1iZXJcIiA/IGludGVycG9sYXRlTnVtYmVyXG4gICAgICA6IGIgaW5zdGFuY2VvZiBjb2xvciA/IGludGVycG9sYXRlUmdiXG4gICAgICA6IChjID0gY29sb3IoYikpID8gKGIgPSBjLCBpbnRlcnBvbGF0ZVJnYilcbiAgICAgIDogaW50ZXJwb2xhdGVTdHJpbmcpKGEsIGIpO1xufVxuIiwiaW1wb3J0IHtUcmFuc2l0aW9ufSBmcm9tIFwiLi9pbmRleFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0cmFuc2l0aW9uKSB7XG4gIGlmICh0cmFuc2l0aW9uLl9pZCAhPT0gdGhpcy5faWQpIHRocm93IG5ldyBFcnJvcjtcblxuICBmb3IgKHZhciBncm91cHMwID0gdGhpcy5fZ3JvdXBzLCBncm91cHMxID0gdHJhbnNpdGlvbi5fZ3JvdXBzLCBtMCA9IGdyb3VwczAubGVuZ3RoLCBtMSA9IGdyb3VwczEubGVuZ3RoLCBtID0gTWF0aC5taW4obTAsIG0xKSwgbWVyZ2VzID0gbmV3IEFycmF5KG0wKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cDAgPSBncm91cHMwW2pdLCBncm91cDEgPSBncm91cHMxW2pdLCBuID0gZ3JvdXAwLmxlbmd0aCwgbWVyZ2UgPSBtZXJnZXNbal0gPSBuZXcgQXJyYXkobiksIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwMFtpXSB8fCBncm91cDFbaV0pIHtcbiAgICAgICAgbWVyZ2VbaV0gPSBub2RlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBqIDwgbTA7ICsraikge1xuICAgIG1lcmdlc1tqXSA9IGdyb3VwczBbal07XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24obWVyZ2VzLCB0aGlzLl9wYXJlbnRzLCB0aGlzLl9uYW1lLCB0aGlzLl9pZCk7XG59XG4iLCJpbXBvcnQge2dldCwgc2V0LCBpbml0fSBmcm9tIFwiLi9zY2hlZHVsZVwiO1xuXG5mdW5jdGlvbiBzdGFydChuYW1lKSB7XG4gIHJldHVybiAobmFtZSArIFwiXCIpLnRyaW0oKS5zcGxpdCgvXnxcXHMrLykuZXZlcnkoZnVuY3Rpb24odCkge1xuICAgIHZhciBpID0gdC5pbmRleE9mKFwiLlwiKTtcbiAgICBpZiAoaSA+PSAwKSB0ID0gdC5zbGljZSgwLCBpKTtcbiAgICByZXR1cm4gIXQgfHwgdCA9PT0gXCJzdGFydFwiO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gb25GdW5jdGlvbihpZCwgbmFtZSwgbGlzdGVuZXIpIHtcbiAgdmFyIG9uMCwgb24xLCBzaXQgPSBzdGFydChuYW1lKSA/IGluaXQgOiBzZXQ7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc2NoZWR1bGUgPSBzaXQodGhpcywgaWQpLFxuICAgICAgICBvbiA9IHNjaGVkdWxlLm9uO1xuXG4gICAgLy8gSWYgdGhpcyBub2RlIHNoYXJlZCBhIGRpc3BhdGNoIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsXG4gICAgLy8ganVzdCBhc3NpZ24gdGhlIHVwZGF0ZWQgc2hhcmVkIGRpc3BhdGNoIGFuZCB3ZeKAmXJlIGRvbmUhXG4gICAgLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLlxuICAgIGlmIChvbiAhPT0gb24wKSAob24xID0gKG9uMCA9IG9uKS5jb3B5KCkpLm9uKG5hbWUsIGxpc3RlbmVyKTtcblxuICAgIHNjaGVkdWxlLm9uID0gb24xO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCBsaXN0ZW5lcikge1xuICB2YXIgaWQgPSB0aGlzLl9pZDtcblxuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA8IDJcbiAgICAgID8gZ2V0KHRoaXMubm9kZSgpLCBpZCkub24ub24obmFtZSlcbiAgICAgIDogdGhpcy5lYWNoKG9uRnVuY3Rpb24oaWQsIG5hbWUsIGxpc3RlbmVyKSk7XG59XG4iLCJmdW5jdGlvbiByZW1vdmVGdW5jdGlvbihpZCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcbiAgICBmb3IgKHZhciBpIGluIHRoaXMuX190cmFuc2l0aW9uKSBpZiAoK2kgIT09IGlkKSByZXR1cm47XG4gICAgaWYgKHBhcmVudCkgcGFyZW50LnJlbW92ZUNoaWxkKHRoaXMpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMub24oXCJlbmQucmVtb3ZlXCIsIHJlbW92ZUZ1bmN0aW9uKHRoaXMuX2lkKSk7XG59XG4iLCJpbXBvcnQge2Rpc3BhdGNofSBmcm9tIFwiZDMtZGlzcGF0Y2hcIjtcbmltcG9ydCB7dGltZXIsIHRpbWVvdXR9IGZyb20gXCJkMy10aW1lclwiO1xuXG52YXIgZW1wdHlPbiA9IGRpc3BhdGNoKFwic3RhcnRcIiwgXCJlbmRcIiwgXCJjYW5jZWxcIiwgXCJpbnRlcnJ1cHRcIik7XG52YXIgZW1wdHlUd2VlbiA9IFtdO1xuXG5leHBvcnQgdmFyIENSRUFURUQgPSAwO1xuZXhwb3J0IHZhciBTQ0hFRFVMRUQgPSAxO1xuZXhwb3J0IHZhciBTVEFSVElORyA9IDI7XG5leHBvcnQgdmFyIFNUQVJURUQgPSAzO1xuZXhwb3J0IHZhciBSVU5OSU5HID0gNDtcbmV4cG9ydCB2YXIgRU5ESU5HID0gNTtcbmV4cG9ydCB2YXIgRU5ERUQgPSA2O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlLCBuYW1lLCBpZCwgaW5kZXgsIGdyb3VwLCB0aW1pbmcpIHtcbiAgdmFyIHNjaGVkdWxlcyA9IG5vZGUuX190cmFuc2l0aW9uO1xuICBpZiAoIXNjaGVkdWxlcykgbm9kZS5fX3RyYW5zaXRpb24gPSB7fTtcbiAgZWxzZSBpZiAoaWQgaW4gc2NoZWR1bGVzKSByZXR1cm47XG4gIGNyZWF0ZShub2RlLCBpZCwge1xuICAgIG5hbWU6IG5hbWUsXG4gICAgaW5kZXg6IGluZGV4LCAvLyBGb3IgY29udGV4dCBkdXJpbmcgY2FsbGJhY2suXG4gICAgZ3JvdXA6IGdyb3VwLCAvLyBGb3IgY29udGV4dCBkdXJpbmcgY2FsbGJhY2suXG4gICAgb246IGVtcHR5T24sXG4gICAgdHdlZW46IGVtcHR5VHdlZW4sXG4gICAgdGltZTogdGltaW5nLnRpbWUsXG4gICAgZGVsYXk6IHRpbWluZy5kZWxheSxcbiAgICBkdXJhdGlvbjogdGltaW5nLmR1cmF0aW9uLFxuICAgIGVhc2U6IHRpbWluZy5lYXNlLFxuICAgIHRpbWVyOiBudWxsLFxuICAgIHN0YXRlOiBDUkVBVEVEXG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5pdChub2RlLCBpZCkge1xuICB2YXIgc2NoZWR1bGUgPSBnZXQobm9kZSwgaWQpO1xuICBpZiAoc2NoZWR1bGUuc3RhdGUgPiBDUkVBVEVEKSB0aHJvdyBuZXcgRXJyb3IoXCJ0b28gbGF0ZTsgYWxyZWFkeSBzY2hlZHVsZWRcIik7XG4gIHJldHVybiBzY2hlZHVsZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldChub2RlLCBpZCkge1xuICB2YXIgc2NoZWR1bGUgPSBnZXQobm9kZSwgaWQpO1xuICBpZiAoc2NoZWR1bGUuc3RhdGUgPiBTVEFSVEVEKSB0aHJvdyBuZXcgRXJyb3IoXCJ0b28gbGF0ZTsgYWxyZWFkeSBydW5uaW5nXCIpO1xuICByZXR1cm4gc2NoZWR1bGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXQobm9kZSwgaWQpIHtcbiAgdmFyIHNjaGVkdWxlID0gbm9kZS5fX3RyYW5zaXRpb247XG4gIGlmICghc2NoZWR1bGUgfHwgIShzY2hlZHVsZSA9IHNjaGVkdWxlW2lkXSkpIHRocm93IG5ldyBFcnJvcihcInRyYW5zaXRpb24gbm90IGZvdW5kXCIpO1xuICByZXR1cm4gc2NoZWR1bGU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZShub2RlLCBpZCwgc2VsZikge1xuICB2YXIgc2NoZWR1bGVzID0gbm9kZS5fX3RyYW5zaXRpb24sXG4gICAgICB0d2VlbjtcblxuICAvLyBJbml0aWFsaXplIHRoZSBzZWxmIHRpbWVyIHdoZW4gdGhlIHRyYW5zaXRpb24gaXMgY3JlYXRlZC5cbiAgLy8gTm90ZSB0aGUgYWN0dWFsIGRlbGF5IGlzIG5vdCBrbm93biB1bnRpbCB0aGUgZmlyc3QgY2FsbGJhY2shXG4gIHNjaGVkdWxlc1tpZF0gPSBzZWxmO1xuICBzZWxmLnRpbWVyID0gdGltZXIoc2NoZWR1bGUsIDAsIHNlbGYudGltZSk7XG5cbiAgZnVuY3Rpb24gc2NoZWR1bGUoZWxhcHNlZCkge1xuICAgIHNlbGYuc3RhdGUgPSBTQ0hFRFVMRUQ7XG4gICAgc2VsZi50aW1lci5yZXN0YXJ0KHN0YXJ0LCBzZWxmLmRlbGF5LCBzZWxmLnRpbWUpO1xuXG4gICAgLy8gSWYgdGhlIGVsYXBzZWQgZGVsYXkgaXMgbGVzcyB0aGFuIG91ciBmaXJzdCBzbGVlcCwgc3RhcnQgaW1tZWRpYXRlbHkuXG4gICAgaWYgKHNlbGYuZGVsYXkgPD0gZWxhcHNlZCkgc3RhcnQoZWxhcHNlZCAtIHNlbGYuZGVsYXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gc3RhcnQoZWxhcHNlZCkge1xuICAgIHZhciBpLCBqLCBuLCBvO1xuXG4gICAgLy8gSWYgdGhlIHN0YXRlIGlzIG5vdCBTQ0hFRFVMRUQsIHRoZW4gd2UgcHJldmlvdXNseSBlcnJvcmVkIG9uIHN0YXJ0LlxuICAgIGlmIChzZWxmLnN0YXRlICE9PSBTQ0hFRFVMRUQpIHJldHVybiBzdG9wKCk7XG5cbiAgICBmb3IgKGkgaW4gc2NoZWR1bGVzKSB7XG4gICAgICBvID0gc2NoZWR1bGVzW2ldO1xuICAgICAgaWYgKG8ubmFtZSAhPT0gc2VsZi5uYW1lKSBjb250aW51ZTtcblxuICAgICAgLy8gV2hpbGUgdGhpcyBlbGVtZW50IGFscmVhZHkgaGFzIGEgc3RhcnRpbmcgdHJhbnNpdGlvbiBkdXJpbmcgdGhpcyBmcmFtZSxcbiAgICAgIC8vIGRlZmVyIHN0YXJ0aW5nIGFuIGludGVycnVwdGluZyB0cmFuc2l0aW9uIHVudGlsIHRoYXQgdHJhbnNpdGlvbiBoYXMgYVxuICAgICAgLy8gY2hhbmNlIHRvIHRpY2sgKGFuZCBwb3NzaWJseSBlbmQpOyBzZWUgZDMvZDMtdHJhbnNpdGlvbiM1NCFcbiAgICAgIGlmIChvLnN0YXRlID09PSBTVEFSVEVEKSByZXR1cm4gdGltZW91dChzdGFydCk7XG5cbiAgICAgIC8vIEludGVycnVwdCB0aGUgYWN0aXZlIHRyYW5zaXRpb24sIGlmIGFueS5cbiAgICAgIGlmIChvLnN0YXRlID09PSBSVU5OSU5HKSB7XG4gICAgICAgIG8uc3RhdGUgPSBFTkRFRDtcbiAgICAgICAgby50aW1lci5zdG9wKCk7XG4gICAgICAgIG8ub24uY2FsbChcImludGVycnVwdFwiLCBub2RlLCBub2RlLl9fZGF0YV9fLCBvLmluZGV4LCBvLmdyb3VwKTtcbiAgICAgICAgZGVsZXRlIHNjaGVkdWxlc1tpXTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2FuY2VsIGFueSBwcmUtZW1wdGVkIHRyYW5zaXRpb25zLlxuICAgICAgZWxzZSBpZiAoK2kgPCBpZCkge1xuICAgICAgICBvLnN0YXRlID0gRU5ERUQ7XG4gICAgICAgIG8udGltZXIuc3RvcCgpO1xuICAgICAgICBvLm9uLmNhbGwoXCJjYW5jZWxcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgby5pbmRleCwgby5ncm91cCk7XG4gICAgICAgIGRlbGV0ZSBzY2hlZHVsZXNbaV07XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gRGVmZXIgdGhlIGZpcnN0IHRpY2sgdG8gZW5kIG9mIHRoZSBjdXJyZW50IGZyYW1lOyBzZWUgZDMvZDMjMTU3Ni5cbiAgICAvLyBOb3RlIHRoZSB0cmFuc2l0aW9uIG1heSBiZSBjYW5jZWxlZCBhZnRlciBzdGFydCBhbmQgYmVmb3JlIHRoZSBmaXJzdCB0aWNrIVxuICAgIC8vIE5vdGUgdGhpcyBtdXN0IGJlIHNjaGVkdWxlZCBiZWZvcmUgdGhlIHN0YXJ0IGV2ZW50OyBzZWUgZDMvZDMtdHJhbnNpdGlvbiMxNiFcbiAgICAvLyBBc3N1bWluZyB0aGlzIGlzIHN1Y2Nlc3NmdWwsIHN1YnNlcXVlbnQgY2FsbGJhY2tzIGdvIHN0cmFpZ2h0IHRvIHRpY2suXG4gICAgdGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIGlmIChzZWxmLnN0YXRlID09PSBTVEFSVEVEKSB7XG4gICAgICAgIHNlbGYuc3RhdGUgPSBSVU5OSU5HO1xuICAgICAgICBzZWxmLnRpbWVyLnJlc3RhcnQodGljaywgc2VsZi5kZWxheSwgc2VsZi50aW1lKTtcbiAgICAgICAgdGljayhlbGFwc2VkKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIERpc3BhdGNoIHRoZSBzdGFydCBldmVudC5cbiAgICAvLyBOb3RlIHRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSB0aGUgdHdlZW4gYXJlIGluaXRpYWxpemVkLlxuICAgIHNlbGYuc3RhdGUgPSBTVEFSVElORztcbiAgICBzZWxmLm9uLmNhbGwoXCJzdGFydFwiLCBub2RlLCBub2RlLl9fZGF0YV9fLCBzZWxmLmluZGV4LCBzZWxmLmdyb3VwKTtcbiAgICBpZiAoc2VsZi5zdGF0ZSAhPT0gU1RBUlRJTkcpIHJldHVybjsgLy8gaW50ZXJydXB0ZWRcbiAgICBzZWxmLnN0YXRlID0gU1RBUlRFRDtcblxuICAgIC8vIEluaXRpYWxpemUgdGhlIHR3ZWVuLCBkZWxldGluZyBudWxsIHR3ZWVuLlxuICAgIHR3ZWVuID0gbmV3IEFycmF5KG4gPSBzZWxmLnR3ZWVuLmxlbmd0aCk7XG4gICAgZm9yIChpID0gMCwgaiA9IC0xOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobyA9IHNlbGYudHdlZW5baV0udmFsdWUuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBzZWxmLmluZGV4LCBzZWxmLmdyb3VwKSkge1xuICAgICAgICB0d2VlblsrK2pdID0gbztcbiAgICAgIH1cbiAgICB9XG4gICAgdHdlZW4ubGVuZ3RoID0gaiArIDE7XG4gIH1cblxuICBmdW5jdGlvbiB0aWNrKGVsYXBzZWQpIHtcbiAgICB2YXIgdCA9IGVsYXBzZWQgPCBzZWxmLmR1cmF0aW9uID8gc2VsZi5lYXNlLmNhbGwobnVsbCwgZWxhcHNlZCAvIHNlbGYuZHVyYXRpb24pIDogKHNlbGYudGltZXIucmVzdGFydChzdG9wKSwgc2VsZi5zdGF0ZSA9IEVORElORywgMSksXG4gICAgICAgIGkgPSAtMSxcbiAgICAgICAgbiA9IHR3ZWVuLmxlbmd0aDtcblxuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICB0d2VlbltpXS5jYWxsKG5vZGUsIHQpO1xuICAgIH1cblxuICAgIC8vIERpc3BhdGNoIHRoZSBlbmQgZXZlbnQuXG4gICAgaWYgKHNlbGYuc3RhdGUgPT09IEVORElORykge1xuICAgICAgc2VsZi5vbi5jYWxsKFwiZW5kXCIsIG5vZGUsIG5vZGUuX19kYXRhX18sIHNlbGYuaW5kZXgsIHNlbGYuZ3JvdXApO1xuICAgICAgc3RvcCgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgc2VsZi5zdGF0ZSA9IEVOREVEO1xuICAgIHNlbGYudGltZXIuc3RvcCgpO1xuICAgIGRlbGV0ZSBzY2hlZHVsZXNbaWRdO1xuICAgIGZvciAodmFyIGkgaW4gc2NoZWR1bGVzKSByZXR1cm47IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICBkZWxldGUgbm9kZS5fX3RyYW5zaXRpb247XG4gIH1cbn1cbiIsImltcG9ydCB7c2VsZWN0b3J9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB7VHJhbnNpdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCBzY2hlZHVsZSwge2dldH0gZnJvbSBcIi4vc2NoZWR1bGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0KSB7XG4gIHZhciBuYW1lID0gdGhpcy5fbmFtZSxcbiAgICAgIGlkID0gdGhpcy5faWQ7XG5cbiAgaWYgKHR5cGVvZiBzZWxlY3QgIT09IFwiZnVuY3Rpb25cIikgc2VsZWN0ID0gc2VsZWN0b3Ioc2VsZWN0KTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIHN1Ymdyb3VwID0gc3ViZ3JvdXBzW2pdID0gbmV3IEFycmF5KG4pLCBub2RlLCBzdWJub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIChzdWJub2RlID0gc2VsZWN0LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApKSkge1xuICAgICAgICBpZiAoXCJfX2RhdGFfX1wiIGluIG5vZGUpIHN1Ym5vZGUuX19kYXRhX18gPSBub2RlLl9fZGF0YV9fO1xuICAgICAgICBzdWJncm91cFtpXSA9IHN1Ym5vZGU7XG4gICAgICAgIHNjaGVkdWxlKHN1Ymdyb3VwW2ldLCBuYW1lLCBpZCwgaSwgc3ViZ3JvdXAsIGdldChub2RlLCBpZCkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihzdWJncm91cHMsIHRoaXMuX3BhcmVudHMsIG5hbWUsIGlkKTtcbn1cbiIsImltcG9ydCB7c2VsZWN0b3JBbGx9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB7VHJhbnNpdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCBzY2hlZHVsZSwge2dldH0gZnJvbSBcIi4vc2NoZWR1bGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0KSB7XG4gIHZhciBuYW1lID0gdGhpcy5fbmFtZSxcbiAgICAgIGlkID0gdGhpcy5faWQ7XG5cbiAgaWYgKHR5cGVvZiBzZWxlY3QgIT09IFwiZnVuY3Rpb25cIikgc2VsZWN0ID0gc2VsZWN0b3JBbGwoc2VsZWN0KTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBbXSwgcGFyZW50cyA9IFtdLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICBmb3IgKHZhciBjaGlsZHJlbiA9IHNlbGVjdC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSwgY2hpbGQsIGluaGVyaXQgPSBnZXQobm9kZSwgaWQpLCBrID0gMCwgbCA9IGNoaWxkcmVuLmxlbmd0aDsgayA8IGw7ICsraykge1xuICAgICAgICAgIGlmIChjaGlsZCA9IGNoaWxkcmVuW2tdKSB7XG4gICAgICAgICAgICBzY2hlZHVsZShjaGlsZCwgbmFtZSwgaWQsIGssIGNoaWxkcmVuLCBpbmhlcml0KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc3ViZ3JvdXBzLnB1c2goY2hpbGRyZW4pO1xuICAgICAgICBwYXJlbnRzLnB1c2gobm9kZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBUcmFuc2l0aW9uKHN1Ymdyb3VwcywgcGFyZW50cywgbmFtZSwgaWQpO1xufVxuIiwiaW1wb3J0IHtzZWxlY3Rpb259IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcblxudmFyIFNlbGVjdGlvbiA9IHNlbGVjdGlvbi5wcm90b3R5cGUuY29uc3RydWN0b3I7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFNlbGVjdGlvbih0aGlzLl9ncm91cHMsIHRoaXMuX3BhcmVudHMpO1xufVxuIiwiaW1wb3J0IHtpbnRlcnBvbGF0ZVRyYW5zZm9ybUNzcyBhcyBpbnRlcnBvbGF0ZVRyYW5zZm9ybX0gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5pbXBvcnQge3N0eWxlfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge3NldH0gZnJvbSBcIi4vc2NoZWR1bGVcIjtcbmltcG9ydCB7dHdlZW5WYWx1ZX0gZnJvbSBcIi4vdHdlZW5cIjtcbmltcG9ydCBpbnRlcnBvbGF0ZSBmcm9tIFwiLi9pbnRlcnBvbGF0ZVwiO1xuXG5mdW5jdGlvbiBzdHlsZU51bGwobmFtZSwgaW50ZXJwb2xhdGUpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMTAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCA9IHN0eWxlKHRoaXMsIG5hbWUpLFxuICAgICAgICBzdHJpbmcxID0gKHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSksIHN0eWxlKHRoaXMsIG5hbWUpKTtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCAmJiBzdHJpbmcxID09PSBzdHJpbmcxMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgc3RyaW5nMTAgPSBzdHJpbmcxKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3R5bGVSZW1vdmUobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3R5bGVDb25zdGFudChuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUxKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEgPSB2YWx1ZTEgKyBcIlwiLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAgPSBzdHlsZSh0aGlzLCBuYW1lKTtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgdmFsdWUxKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3R5bGVGdW5jdGlvbihuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMTAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCA9IHN0eWxlKHRoaXMsIG5hbWUpLFxuICAgICAgICB2YWx1ZTEgPSB2YWx1ZSh0aGlzKSxcbiAgICAgICAgc3RyaW5nMSA9IHZhbHVlMSArIFwiXCI7XG4gICAgaWYgKHZhbHVlMSA9PSBudWxsKSBzdHJpbmcxID0gdmFsdWUxID0gKHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSksIHN0eWxlKHRoaXMsIG5hbWUpKTtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCAmJiBzdHJpbmcxID09PSBzdHJpbmcxMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IChzdHJpbmcxMCA9IHN0cmluZzEsIGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgdmFsdWUxKSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlTWF5YmVSZW1vdmUoaWQsIG5hbWUpIHtcbiAgdmFyIG9uMCwgb24xLCBsaXN0ZW5lcjAsIGtleSA9IFwic3R5bGUuXCIgKyBuYW1lLCBldmVudCA9IFwiZW5kLlwiICsga2V5LCByZW1vdmU7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc2NoZWR1bGUgPSBzZXQodGhpcywgaWQpLFxuICAgICAgICBvbiA9IHNjaGVkdWxlLm9uLFxuICAgICAgICBsaXN0ZW5lciA9IHNjaGVkdWxlLnZhbHVlW2tleV0gPT0gbnVsbCA/IHJlbW92ZSB8fCAocmVtb3ZlID0gc3R5bGVSZW1vdmUobmFtZSkpIDogdW5kZWZpbmVkO1xuXG4gICAgLy8gSWYgdGhpcyBub2RlIHNoYXJlZCBhIGRpc3BhdGNoIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsXG4gICAgLy8ganVzdCBhc3NpZ24gdGhlIHVwZGF0ZWQgc2hhcmVkIGRpc3BhdGNoIGFuZCB3ZeKAmXJlIGRvbmUhXG4gICAgLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLlxuICAgIGlmIChvbiAhPT0gb24wIHx8IGxpc3RlbmVyMCAhPT0gbGlzdGVuZXIpIChvbjEgPSAob24wID0gb24pLmNvcHkoKSkub24oZXZlbnQsIGxpc3RlbmVyMCA9IGxpc3RlbmVyKTtcblxuICAgIHNjaGVkdWxlLm9uID0gb24xO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgdmFyIGkgPSAobmFtZSArPSBcIlwiKSA9PT0gXCJ0cmFuc2Zvcm1cIiA/IGludGVycG9sYXRlVHJhbnNmb3JtIDogaW50ZXJwb2xhdGU7XG4gIHJldHVybiB2YWx1ZSA9PSBudWxsID8gdGhpc1xuICAgICAgLnN0eWxlVHdlZW4obmFtZSwgc3R5bGVOdWxsKG5hbWUsIGkpKVxuICAgICAgLm9uKFwiZW5kLnN0eWxlLlwiICsgbmFtZSwgc3R5bGVSZW1vdmUobmFtZSkpXG4gICAgOiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IHRoaXNcbiAgICAgIC5zdHlsZVR3ZWVuKG5hbWUsIHN0eWxlRnVuY3Rpb24obmFtZSwgaSwgdHdlZW5WYWx1ZSh0aGlzLCBcInN0eWxlLlwiICsgbmFtZSwgdmFsdWUpKSlcbiAgICAgIC5lYWNoKHN0eWxlTWF5YmVSZW1vdmUodGhpcy5faWQsIG5hbWUpKVxuICAgIDogdGhpc1xuICAgICAgLnN0eWxlVHdlZW4obmFtZSwgc3R5bGVDb25zdGFudChuYW1lLCBpLCB2YWx1ZSksIHByaW9yaXR5KVxuICAgICAgLm9uKFwiZW5kLnN0eWxlLlwiICsgbmFtZSwgbnVsbCk7XG59XG4iLCJmdW5jdGlvbiBzdHlsZUludGVycG9sYXRlKG5hbWUsIGksIHByaW9yaXR5KSB7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCBpKHQpLCBwcmlvcml0eSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlVHdlZW4obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHZhciB0LCBpMDtcbiAgZnVuY3Rpb24gdHdlZW4oKSB7XG4gICAgdmFyIGkgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmIChpICE9PSBpMCkgdCA9IChpMCA9IGkpICYmIHN0eWxlSW50ZXJwb2xhdGUobmFtZSwgaSwgcHJpb3JpdHkpO1xuICAgIHJldHVybiB0O1xuICB9XG4gIHR3ZWVuLl92YWx1ZSA9IHZhbHVlO1xuICByZXR1cm4gdHdlZW47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICB2YXIga2V5ID0gXCJzdHlsZS5cIiArIChuYW1lICs9IFwiXCIpO1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiAoa2V5ID0gdGhpcy50d2VlbihrZXkpKSAmJiBrZXkuX3ZhbHVlO1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCBudWxsKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gIHJldHVybiB0aGlzLnR3ZWVuKGtleSwgc3R5bGVUd2VlbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkgPT0gbnVsbCA/IFwiXCIgOiBwcmlvcml0eSkpO1xufVxuIiwiaW1wb3J0IHt0d2VlblZhbHVlfSBmcm9tIFwiLi90d2VlblwiO1xuXG5mdW5jdGlvbiB0ZXh0Q29uc3RhbnQodmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdGV4dEZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUxID0gdmFsdWUodGhpcyk7XG4gICAgdGhpcy50ZXh0Q29udGVudCA9IHZhbHVlMSA9PSBudWxsID8gXCJcIiA6IHZhbHVlMTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIHRoaXMudHdlZW4oXCJ0ZXh0XCIsIHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICA/IHRleHRGdW5jdGlvbih0d2VlblZhbHVlKHRoaXMsIFwidGV4dFwiLCB2YWx1ZSkpXG4gICAgICA6IHRleHRDb25zdGFudCh2YWx1ZSA9PSBudWxsID8gXCJcIiA6IHZhbHVlICsgXCJcIikpO1xufVxuIiwiaW1wb3J0IHtUcmFuc2l0aW9uLCBuZXdJZH0gZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCBzY2hlZHVsZSwge2dldH0gZnJvbSBcIi4vc2NoZWR1bGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBuYW1lID0gdGhpcy5fbmFtZSxcbiAgICAgIGlkMCA9IHRoaXMuX2lkLFxuICAgICAgaWQxID0gbmV3SWQoKTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICB2YXIgaW5oZXJpdCA9IGdldChub2RlLCBpZDApO1xuICAgICAgICBzY2hlZHVsZShub2RlLCBuYW1lLCBpZDEsIGksIGdyb3VwLCB7XG4gICAgICAgICAgdGltZTogaW5oZXJpdC50aW1lICsgaW5oZXJpdC5kZWxheSArIGluaGVyaXQuZHVyYXRpb24sXG4gICAgICAgICAgZGVsYXk6IDAsXG4gICAgICAgICAgZHVyYXRpb246IGluaGVyaXQuZHVyYXRpb24sXG4gICAgICAgICAgZWFzZTogaW5oZXJpdC5lYXNlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihncm91cHMsIHRoaXMuX3BhcmVudHMsIG5hbWUsIGlkMSk7XG59XG4iLCJpbXBvcnQge2dldCwgc2V0fSBmcm9tIFwiLi9zY2hlZHVsZVwiO1xuXG5mdW5jdGlvbiB0d2VlblJlbW92ZShpZCwgbmFtZSkge1xuICB2YXIgdHdlZW4wLCB0d2VlbjE7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc2NoZWR1bGUgPSBzZXQodGhpcywgaWQpLFxuICAgICAgICB0d2VlbiA9IHNjaGVkdWxlLnR3ZWVuO1xuXG4gICAgLy8gSWYgdGhpcyBub2RlIHNoYXJlZCB0d2VlbiB3aXRoIHRoZSBwcmV2aW91cyBub2RlLFxuICAgIC8vIGp1c3QgYXNzaWduIHRoZSB1cGRhdGVkIHNoYXJlZCB0d2VlbiBhbmQgd2XigJlyZSBkb25lIVxuICAgIC8vIE90aGVyd2lzZSwgY29weS1vbi13cml0ZS5cbiAgICBpZiAodHdlZW4gIT09IHR3ZWVuMCkge1xuICAgICAgdHdlZW4xID0gdHdlZW4wID0gdHdlZW47XG4gICAgICBmb3IgKHZhciBpID0gMCwgbiA9IHR3ZWVuMS5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgaWYgKHR3ZWVuMVtpXS5uYW1lID09PSBuYW1lKSB7XG4gICAgICAgICAgdHdlZW4xID0gdHdlZW4xLnNsaWNlKCk7XG4gICAgICAgICAgdHdlZW4xLnNwbGljZShpLCAxKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHNjaGVkdWxlLnR3ZWVuID0gdHdlZW4xO1xuICB9O1xufVxuXG5mdW5jdGlvbiB0d2VlbkZ1bmN0aW9uKGlkLCBuYW1lLCB2YWx1ZSkge1xuICB2YXIgdHdlZW4wLCB0d2VlbjE7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjaGVkdWxlID0gc2V0KHRoaXMsIGlkKSxcbiAgICAgICAgdHdlZW4gPSBzY2hlZHVsZS50d2VlbjtcblxuICAgIC8vIElmIHRoaXMgbm9kZSBzaGFyZWQgdHdlZW4gd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgdHdlZW4gYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKHR3ZWVuICE9PSB0d2VlbjApIHtcbiAgICAgIHR3ZWVuMSA9ICh0d2VlbjAgPSB0d2Vlbikuc2xpY2UoKTtcbiAgICAgIGZvciAodmFyIHQgPSB7bmFtZTogbmFtZSwgdmFsdWU6IHZhbHVlfSwgaSA9IDAsIG4gPSB0d2VlbjEubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmICh0d2VlbjFbaV0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICAgIHR3ZWVuMVtpXSA9IHQ7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChpID09PSBuKSB0d2VlbjEucHVzaCh0KTtcbiAgICB9XG5cbiAgICBzY2hlZHVsZS50d2VlbiA9IHR3ZWVuMTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgbmFtZSArPSBcIlwiO1xuXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgIHZhciB0d2VlbiA9IGdldCh0aGlzLm5vZGUoKSwgaWQpLnR3ZWVuO1xuICAgIGZvciAodmFyIGkgPSAwLCBuID0gdHdlZW4ubGVuZ3RoLCB0OyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKHQgPSB0d2VlbltpXSkubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICByZXR1cm4gdC52YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gdGhpcy5lYWNoKCh2YWx1ZSA9PSBudWxsID8gdHdlZW5SZW1vdmUgOiB0d2VlbkZ1bmN0aW9uKShpZCwgbmFtZSwgdmFsdWUpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHR3ZWVuVmFsdWUodHJhbnNpdGlvbiwgbmFtZSwgdmFsdWUpIHtcbiAgdmFyIGlkID0gdHJhbnNpdGlvbi5faWQ7XG5cbiAgdHJhbnNpdGlvbi5lYWNoKGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCk7XG4gICAgKHNjaGVkdWxlLnZhbHVlIHx8IChzY2hlZHVsZS52YWx1ZSA9IHt9KSlbbmFtZV0gPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9KTtcblxuICByZXR1cm4gZnVuY3Rpb24obm9kZSkge1xuICAgIHJldHVybiBnZXQobm9kZSwgaWQpLnZhbHVlW25hbWVdO1xuICB9O1xufVxuIiwiaW1wb3J0IHtSZWRCbGFja05vZGV9IGZyb20gXCIuL1JlZEJsYWNrVHJlZVwiO1xuaW1wb3J0IHtjcmVhdGVDZWxsfSBmcm9tIFwiLi9DZWxsXCI7XG5pbXBvcnQge2F0dGFjaENpcmNsZSwgZGV0YWNoQ2lyY2xlfSBmcm9tIFwiLi9DaXJjbGVcIjtcbmltcG9ydCB7Y3JlYXRlRWRnZSwgc2V0RWRnZUVuZH0gZnJvbSBcIi4vRWRnZVwiO1xuaW1wb3J0IHtiZWFjaGVzLCBlcHNpbG9ufSBmcm9tIFwiLi9EaWFncmFtXCI7XG5cbnZhciBiZWFjaFBvb2wgPSBbXTtcblxuZnVuY3Rpb24gQmVhY2goKSB7XG4gIFJlZEJsYWNrTm9kZSh0aGlzKTtcbiAgdGhpcy5lZGdlID1cbiAgdGhpcy5zaXRlID1cbiAgdGhpcy5jaXJjbGUgPSBudWxsO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVCZWFjaChzaXRlKSB7XG4gIHZhciBiZWFjaCA9IGJlYWNoUG9vbC5wb3AoKSB8fCBuZXcgQmVhY2g7XG4gIGJlYWNoLnNpdGUgPSBzaXRlO1xuICByZXR1cm4gYmVhY2g7XG59XG5cbmZ1bmN0aW9uIGRldGFjaEJlYWNoKGJlYWNoKSB7XG4gIGRldGFjaENpcmNsZShiZWFjaCk7XG4gIGJlYWNoZXMucmVtb3ZlKGJlYWNoKTtcbiAgYmVhY2hQb29sLnB1c2goYmVhY2gpO1xuICBSZWRCbGFja05vZGUoYmVhY2gpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlQmVhY2goYmVhY2gpIHtcbiAgdmFyIGNpcmNsZSA9IGJlYWNoLmNpcmNsZSxcbiAgICAgIHggPSBjaXJjbGUueCxcbiAgICAgIHkgPSBjaXJjbGUuY3ksXG4gICAgICB2ZXJ0ZXggPSBbeCwgeV0sXG4gICAgICBwcmV2aW91cyA9IGJlYWNoLlAsXG4gICAgICBuZXh0ID0gYmVhY2guTixcbiAgICAgIGRpc2FwcGVhcmluZyA9IFtiZWFjaF07XG5cbiAgZGV0YWNoQmVhY2goYmVhY2gpO1xuXG4gIHZhciBsQXJjID0gcHJldmlvdXM7XG4gIHdoaWxlIChsQXJjLmNpcmNsZVxuICAgICAgJiYgTWF0aC5hYnMoeCAtIGxBcmMuY2lyY2xlLngpIDwgZXBzaWxvblxuICAgICAgJiYgTWF0aC5hYnMoeSAtIGxBcmMuY2lyY2xlLmN5KSA8IGVwc2lsb24pIHtcbiAgICBwcmV2aW91cyA9IGxBcmMuUDtcbiAgICBkaXNhcHBlYXJpbmcudW5zaGlmdChsQXJjKTtcbiAgICBkZXRhY2hCZWFjaChsQXJjKTtcbiAgICBsQXJjID0gcHJldmlvdXM7XG4gIH1cblxuICBkaXNhcHBlYXJpbmcudW5zaGlmdChsQXJjKTtcbiAgZGV0YWNoQ2lyY2xlKGxBcmMpO1xuXG4gIHZhciByQXJjID0gbmV4dDtcbiAgd2hpbGUgKHJBcmMuY2lyY2xlXG4gICAgICAmJiBNYXRoLmFicyh4IC0gckFyYy5jaXJjbGUueCkgPCBlcHNpbG9uXG4gICAgICAmJiBNYXRoLmFicyh5IC0gckFyYy5jaXJjbGUuY3kpIDwgZXBzaWxvbikge1xuICAgIG5leHQgPSByQXJjLk47XG4gICAgZGlzYXBwZWFyaW5nLnB1c2gockFyYyk7XG4gICAgZGV0YWNoQmVhY2gockFyYyk7XG4gICAgckFyYyA9IG5leHQ7XG4gIH1cblxuICBkaXNhcHBlYXJpbmcucHVzaChyQXJjKTtcbiAgZGV0YWNoQ2lyY2xlKHJBcmMpO1xuXG4gIHZhciBuQXJjcyA9IGRpc2FwcGVhcmluZy5sZW5ndGgsXG4gICAgICBpQXJjO1xuICBmb3IgKGlBcmMgPSAxOyBpQXJjIDwgbkFyY3M7ICsraUFyYykge1xuICAgIHJBcmMgPSBkaXNhcHBlYXJpbmdbaUFyY107XG4gICAgbEFyYyA9IGRpc2FwcGVhcmluZ1tpQXJjIC0gMV07XG4gICAgc2V0RWRnZUVuZChyQXJjLmVkZ2UsIGxBcmMuc2l0ZSwgckFyYy5zaXRlLCB2ZXJ0ZXgpO1xuICB9XG5cbiAgbEFyYyA9IGRpc2FwcGVhcmluZ1swXTtcbiAgckFyYyA9IGRpc2FwcGVhcmluZ1tuQXJjcyAtIDFdO1xuICByQXJjLmVkZ2UgPSBjcmVhdGVFZGdlKGxBcmMuc2l0ZSwgckFyYy5zaXRlLCBudWxsLCB2ZXJ0ZXgpO1xuXG4gIGF0dGFjaENpcmNsZShsQXJjKTtcbiAgYXR0YWNoQ2lyY2xlKHJBcmMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkQmVhY2goc2l0ZSkge1xuICB2YXIgeCA9IHNpdGVbMF0sXG4gICAgICBkaXJlY3RyaXggPSBzaXRlWzFdLFxuICAgICAgbEFyYyxcbiAgICAgIHJBcmMsXG4gICAgICBkeGwsXG4gICAgICBkeHIsXG4gICAgICBub2RlID0gYmVhY2hlcy5fO1xuXG4gIHdoaWxlIChub2RlKSB7XG4gICAgZHhsID0gbGVmdEJyZWFrUG9pbnQobm9kZSwgZGlyZWN0cml4KSAtIHg7XG4gICAgaWYgKGR4bCA+IGVwc2lsb24pIG5vZGUgPSBub2RlLkw7IGVsc2Uge1xuICAgICAgZHhyID0geCAtIHJpZ2h0QnJlYWtQb2ludChub2RlLCBkaXJlY3RyaXgpO1xuICAgICAgaWYgKGR4ciA+IGVwc2lsb24pIHtcbiAgICAgICAgaWYgKCFub2RlLlIpIHtcbiAgICAgICAgICBsQXJjID0gbm9kZTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBub2RlID0gbm9kZS5SO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGR4bCA+IC1lcHNpbG9uKSB7XG4gICAgICAgICAgbEFyYyA9IG5vZGUuUDtcbiAgICAgICAgICByQXJjID0gbm9kZTtcbiAgICAgICAgfSBlbHNlIGlmIChkeHIgPiAtZXBzaWxvbikge1xuICAgICAgICAgIGxBcmMgPSBub2RlO1xuICAgICAgICAgIHJBcmMgPSBub2RlLk47XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbEFyYyA9IHJBcmMgPSBub2RlO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNyZWF0ZUNlbGwoc2l0ZSk7XG4gIHZhciBuZXdBcmMgPSBjcmVhdGVCZWFjaChzaXRlKTtcbiAgYmVhY2hlcy5pbnNlcnQobEFyYywgbmV3QXJjKTtcblxuICBpZiAoIWxBcmMgJiYgIXJBcmMpIHJldHVybjtcblxuICBpZiAobEFyYyA9PT0gckFyYykge1xuICAgIGRldGFjaENpcmNsZShsQXJjKTtcbiAgICByQXJjID0gY3JlYXRlQmVhY2gobEFyYy5zaXRlKTtcbiAgICBiZWFjaGVzLmluc2VydChuZXdBcmMsIHJBcmMpO1xuICAgIG5ld0FyYy5lZGdlID0gckFyYy5lZGdlID0gY3JlYXRlRWRnZShsQXJjLnNpdGUsIG5ld0FyYy5zaXRlKTtcbiAgICBhdHRhY2hDaXJjbGUobEFyYyk7XG4gICAgYXR0YWNoQ2lyY2xlKHJBcmMpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICghckFyYykgeyAvLyAmJiBsQXJjXG4gICAgbmV3QXJjLmVkZ2UgPSBjcmVhdGVFZGdlKGxBcmMuc2l0ZSwgbmV3QXJjLnNpdGUpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIGVsc2UgbEFyYyAhPT0gckFyY1xuICBkZXRhY2hDaXJjbGUobEFyYyk7XG4gIGRldGFjaENpcmNsZShyQXJjKTtcblxuICB2YXIgbFNpdGUgPSBsQXJjLnNpdGUsXG4gICAgICBheCA9IGxTaXRlWzBdLFxuICAgICAgYXkgPSBsU2l0ZVsxXSxcbiAgICAgIGJ4ID0gc2l0ZVswXSAtIGF4LFxuICAgICAgYnkgPSBzaXRlWzFdIC0gYXksXG4gICAgICByU2l0ZSA9IHJBcmMuc2l0ZSxcbiAgICAgIGN4ID0gclNpdGVbMF0gLSBheCxcbiAgICAgIGN5ID0gclNpdGVbMV0gLSBheSxcbiAgICAgIGQgPSAyICogKGJ4ICogY3kgLSBieSAqIGN4KSxcbiAgICAgIGhiID0gYnggKiBieCArIGJ5ICogYnksXG4gICAgICBoYyA9IGN4ICogY3ggKyBjeSAqIGN5LFxuICAgICAgdmVydGV4ID0gWyhjeSAqIGhiIC0gYnkgKiBoYykgLyBkICsgYXgsIChieCAqIGhjIC0gY3ggKiBoYikgLyBkICsgYXldO1xuXG4gIHNldEVkZ2VFbmQockFyYy5lZGdlLCBsU2l0ZSwgclNpdGUsIHZlcnRleCk7XG4gIG5ld0FyYy5lZGdlID0gY3JlYXRlRWRnZShsU2l0ZSwgc2l0ZSwgbnVsbCwgdmVydGV4KTtcbiAgckFyYy5lZGdlID0gY3JlYXRlRWRnZShzaXRlLCByU2l0ZSwgbnVsbCwgdmVydGV4KTtcbiAgYXR0YWNoQ2lyY2xlKGxBcmMpO1xuICBhdHRhY2hDaXJjbGUockFyYyk7XG59XG5cbmZ1bmN0aW9uIGxlZnRCcmVha1BvaW50KGFyYywgZGlyZWN0cml4KSB7XG4gIHZhciBzaXRlID0gYXJjLnNpdGUsXG4gICAgICByZm9jeCA9IHNpdGVbMF0sXG4gICAgICByZm9jeSA9IHNpdGVbMV0sXG4gICAgICBwYnkyID0gcmZvY3kgLSBkaXJlY3RyaXg7XG5cbiAgaWYgKCFwYnkyKSByZXR1cm4gcmZvY3g7XG5cbiAgdmFyIGxBcmMgPSBhcmMuUDtcbiAgaWYgKCFsQXJjKSByZXR1cm4gLUluZmluaXR5O1xuXG4gIHNpdGUgPSBsQXJjLnNpdGU7XG4gIHZhciBsZm9jeCA9IHNpdGVbMF0sXG4gICAgICBsZm9jeSA9IHNpdGVbMV0sXG4gICAgICBwbGJ5MiA9IGxmb2N5IC0gZGlyZWN0cml4O1xuXG4gIGlmICghcGxieTIpIHJldHVybiBsZm9jeDtcblxuICB2YXIgaGwgPSBsZm9jeCAtIHJmb2N4LFxuICAgICAgYWJ5MiA9IDEgLyBwYnkyIC0gMSAvIHBsYnkyLFxuICAgICAgYiA9IGhsIC8gcGxieTI7XG5cbiAgaWYgKGFieTIpIHJldHVybiAoLWIgKyBNYXRoLnNxcnQoYiAqIGIgLSAyICogYWJ5MiAqIChobCAqIGhsIC8gKC0yICogcGxieTIpIC0gbGZvY3kgKyBwbGJ5MiAvIDIgKyByZm9jeSAtIHBieTIgLyAyKSkpIC8gYWJ5MiArIHJmb2N4O1xuXG4gIHJldHVybiAocmZvY3ggKyBsZm9jeCkgLyAyO1xufVxuXG5mdW5jdGlvbiByaWdodEJyZWFrUG9pbnQoYXJjLCBkaXJlY3RyaXgpIHtcbiAgdmFyIHJBcmMgPSBhcmMuTjtcbiAgaWYgKHJBcmMpIHJldHVybiBsZWZ0QnJlYWtQb2ludChyQXJjLCBkaXJlY3RyaXgpO1xuICB2YXIgc2l0ZSA9IGFyYy5zaXRlO1xuICByZXR1cm4gc2l0ZVsxXSA9PT0gZGlyZWN0cml4ID8gc2l0ZVswXSA6IEluZmluaXR5O1xufVxuIiwiaW1wb3J0IHtjcmVhdGVCb3JkZXJFZGdlfSBmcm9tIFwiLi9FZGdlXCI7XG5pbXBvcnQge2NlbGxzLCBlZGdlcywgZXBzaWxvbn0gZnJvbSBcIi4vRGlhZ3JhbVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ2VsbChzaXRlKSB7XG4gIHJldHVybiBjZWxsc1tzaXRlLmluZGV4XSA9IHtcbiAgICBzaXRlOiBzaXRlLFxuICAgIGhhbGZlZGdlczogW11cbiAgfTtcbn1cblxuZnVuY3Rpb24gY2VsbEhhbGZlZGdlQW5nbGUoY2VsbCwgZWRnZSkge1xuICB2YXIgc2l0ZSA9IGNlbGwuc2l0ZSxcbiAgICAgIHZhID0gZWRnZS5sZWZ0LFxuICAgICAgdmIgPSBlZGdlLnJpZ2h0O1xuICBpZiAoc2l0ZSA9PT0gdmIpIHZiID0gdmEsIHZhID0gc2l0ZTtcbiAgaWYgKHZiKSByZXR1cm4gTWF0aC5hdGFuMih2YlsxXSAtIHZhWzFdLCB2YlswXSAtIHZhWzBdKTtcbiAgaWYgKHNpdGUgPT09IHZhKSB2YSA9IGVkZ2VbMV0sIHZiID0gZWRnZVswXTtcbiAgZWxzZSB2YSA9IGVkZ2VbMF0sIHZiID0gZWRnZVsxXTtcbiAgcmV0dXJuIE1hdGguYXRhbjIodmFbMF0gLSB2YlswXSwgdmJbMV0gLSB2YVsxXSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjZWxsSGFsZmVkZ2VTdGFydChjZWxsLCBlZGdlKSB7XG4gIHJldHVybiBlZGdlWysoZWRnZS5sZWZ0ICE9PSBjZWxsLnNpdGUpXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNlbGxIYWxmZWRnZUVuZChjZWxsLCBlZGdlKSB7XG4gIHJldHVybiBlZGdlWysoZWRnZS5sZWZ0ID09PSBjZWxsLnNpdGUpXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRDZWxsSGFsZmVkZ2VzKCkge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IGNlbGxzLmxlbmd0aCwgY2VsbCwgaGFsZmVkZ2VzLCBqLCBtOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKChjZWxsID0gY2VsbHNbaV0pICYmIChtID0gKGhhbGZlZGdlcyA9IGNlbGwuaGFsZmVkZ2VzKS5sZW5ndGgpKSB7XG4gICAgICB2YXIgaW5kZXggPSBuZXcgQXJyYXkobSksXG4gICAgICAgICAgYXJyYXkgPSBuZXcgQXJyYXkobSk7XG4gICAgICBmb3IgKGogPSAwOyBqIDwgbTsgKytqKSBpbmRleFtqXSA9IGosIGFycmF5W2pdID0gY2VsbEhhbGZlZGdlQW5nbGUoY2VsbCwgZWRnZXNbaGFsZmVkZ2VzW2pdXSk7XG4gICAgICBpbmRleC5zb3J0KGZ1bmN0aW9uKGksIGopIHsgcmV0dXJuIGFycmF5W2pdIC0gYXJyYXlbaV07IH0pO1xuICAgICAgZm9yIChqID0gMDsgaiA8IG07ICsraikgYXJyYXlbal0gPSBoYWxmZWRnZXNbaW5kZXhbal1dO1xuICAgICAgZm9yIChqID0gMDsgaiA8IG07ICsraikgaGFsZmVkZ2VzW2pdID0gYXJyYXlbal07XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGlwQ2VsbHMoeDAsIHkwLCB4MSwgeTEpIHtcbiAgdmFyIG5DZWxscyA9IGNlbGxzLmxlbmd0aCxcbiAgICAgIGlDZWxsLFxuICAgICAgY2VsbCxcbiAgICAgIHNpdGUsXG4gICAgICBpSGFsZmVkZ2UsXG4gICAgICBoYWxmZWRnZXMsXG4gICAgICBuSGFsZmVkZ2VzLFxuICAgICAgc3RhcnQsXG4gICAgICBzdGFydFgsXG4gICAgICBzdGFydFksXG4gICAgICBlbmQsXG4gICAgICBlbmRYLFxuICAgICAgZW5kWSxcbiAgICAgIGNvdmVyID0gdHJ1ZTtcblxuICBmb3IgKGlDZWxsID0gMDsgaUNlbGwgPCBuQ2VsbHM7ICsraUNlbGwpIHtcbiAgICBpZiAoY2VsbCA9IGNlbGxzW2lDZWxsXSkge1xuICAgICAgc2l0ZSA9IGNlbGwuc2l0ZTtcbiAgICAgIGhhbGZlZGdlcyA9IGNlbGwuaGFsZmVkZ2VzO1xuICAgICAgaUhhbGZlZGdlID0gaGFsZmVkZ2VzLmxlbmd0aDtcblxuICAgICAgLy8gUmVtb3ZlIGFueSBkYW5nbGluZyBjbGlwcGVkIGVkZ2VzLlxuICAgICAgd2hpbGUgKGlIYWxmZWRnZS0tKSB7XG4gICAgICAgIGlmICghZWRnZXNbaGFsZmVkZ2VzW2lIYWxmZWRnZV1dKSB7XG4gICAgICAgICAgaGFsZmVkZ2VzLnNwbGljZShpSGFsZmVkZ2UsIDEpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIEluc2VydCBhbnkgYm9yZGVyIGVkZ2VzIGFzIG5lY2Vzc2FyeS5cbiAgICAgIGlIYWxmZWRnZSA9IDAsIG5IYWxmZWRnZXMgPSBoYWxmZWRnZXMubGVuZ3RoO1xuICAgICAgd2hpbGUgKGlIYWxmZWRnZSA8IG5IYWxmZWRnZXMpIHtcbiAgICAgICAgZW5kID0gY2VsbEhhbGZlZGdlRW5kKGNlbGwsIGVkZ2VzW2hhbGZlZGdlc1tpSGFsZmVkZ2VdXSksIGVuZFggPSBlbmRbMF0sIGVuZFkgPSBlbmRbMV07XG4gICAgICAgIHN0YXJ0ID0gY2VsbEhhbGZlZGdlU3RhcnQoY2VsbCwgZWRnZXNbaGFsZmVkZ2VzWysraUhhbGZlZGdlICUgbkhhbGZlZGdlc11dKSwgc3RhcnRYID0gc3RhcnRbMF0sIHN0YXJ0WSA9IHN0YXJ0WzFdO1xuICAgICAgICBpZiAoTWF0aC5hYnMoZW5kWCAtIHN0YXJ0WCkgPiBlcHNpbG9uIHx8IE1hdGguYWJzKGVuZFkgLSBzdGFydFkpID4gZXBzaWxvbikge1xuICAgICAgICAgIGhhbGZlZGdlcy5zcGxpY2UoaUhhbGZlZGdlLCAwLCBlZGdlcy5wdXNoKGNyZWF0ZUJvcmRlckVkZ2Uoc2l0ZSwgZW5kLFxuICAgICAgICAgICAgICBNYXRoLmFicyhlbmRYIC0geDApIDwgZXBzaWxvbiAmJiB5MSAtIGVuZFkgPiBlcHNpbG9uID8gW3gwLCBNYXRoLmFicyhzdGFydFggLSB4MCkgPCBlcHNpbG9uID8gc3RhcnRZIDogeTFdXG4gICAgICAgICAgICAgIDogTWF0aC5hYnMoZW5kWSAtIHkxKSA8IGVwc2lsb24gJiYgeDEgLSBlbmRYID4gZXBzaWxvbiA/IFtNYXRoLmFicyhzdGFydFkgLSB5MSkgPCBlcHNpbG9uID8gc3RhcnRYIDogeDEsIHkxXVxuICAgICAgICAgICAgICA6IE1hdGguYWJzKGVuZFggLSB4MSkgPCBlcHNpbG9uICYmIGVuZFkgLSB5MCA+IGVwc2lsb24gPyBbeDEsIE1hdGguYWJzKHN0YXJ0WCAtIHgxKSA8IGVwc2lsb24gPyBzdGFydFkgOiB5MF1cbiAgICAgICAgICAgICAgOiBNYXRoLmFicyhlbmRZIC0geTApIDwgZXBzaWxvbiAmJiBlbmRYIC0geDAgPiBlcHNpbG9uID8gW01hdGguYWJzKHN0YXJ0WSAtIHkwKSA8IGVwc2lsb24gPyBzdGFydFggOiB4MCwgeTBdXG4gICAgICAgICAgICAgIDogbnVsbCkpIC0gMSk7XG4gICAgICAgICAgKytuSGFsZmVkZ2VzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChuSGFsZmVkZ2VzKSBjb3ZlciA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIC8vIElmIHRoZXJlIHdlcmVu4oCZdCBhbnkgZWRnZXMsIGhhdmUgdGhlIGNsb3Nlc3Qgc2l0ZSBjb3ZlciB0aGUgZXh0ZW50LlxuICAvLyBJdCBkb2VzbuKAmXQgbWF0dGVyIHdoaWNoIGNvcm5lciBvZiB0aGUgZXh0ZW50IHdlIG1lYXN1cmUhXG4gIGlmIChjb3Zlcikge1xuICAgIHZhciBkeCwgZHksIGQyLCBkYyA9IEluZmluaXR5O1xuXG4gICAgZm9yIChpQ2VsbCA9IDAsIGNvdmVyID0gbnVsbDsgaUNlbGwgPCBuQ2VsbHM7ICsraUNlbGwpIHtcbiAgICAgIGlmIChjZWxsID0gY2VsbHNbaUNlbGxdKSB7XG4gICAgICAgIHNpdGUgPSBjZWxsLnNpdGU7XG4gICAgICAgIGR4ID0gc2l0ZVswXSAtIHgwO1xuICAgICAgICBkeSA9IHNpdGVbMV0gLSB5MDtcbiAgICAgICAgZDIgPSBkeCAqIGR4ICsgZHkgKiBkeTtcbiAgICAgICAgaWYgKGQyIDwgZGMpIGRjID0gZDIsIGNvdmVyID0gY2VsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoY292ZXIpIHtcbiAgICAgIHZhciB2MDAgPSBbeDAsIHkwXSwgdjAxID0gW3gwLCB5MV0sIHYxMSA9IFt4MSwgeTFdLCB2MTAgPSBbeDEsIHkwXTtcbiAgICAgIGNvdmVyLmhhbGZlZGdlcy5wdXNoKFxuICAgICAgICBlZGdlcy5wdXNoKGNyZWF0ZUJvcmRlckVkZ2Uoc2l0ZSA9IGNvdmVyLnNpdGUsIHYwMCwgdjAxKSkgLSAxLFxuICAgICAgICBlZGdlcy5wdXNoKGNyZWF0ZUJvcmRlckVkZ2Uoc2l0ZSwgdjAxLCB2MTEpKSAtIDEsXG4gICAgICAgIGVkZ2VzLnB1c2goY3JlYXRlQm9yZGVyRWRnZShzaXRlLCB2MTEsIHYxMCkpIC0gMSxcbiAgICAgICAgZWRnZXMucHVzaChjcmVhdGVCb3JkZXJFZGdlKHNpdGUsIHYxMCwgdjAwKSkgLSAxXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIC8vIExhc3RseSBkZWxldGUgYW55IGNlbGxzIHdpdGggbm8gZWRnZXM7IHRoZXNlIHdlcmUgZW50aXJlbHkgY2xpcHBlZC5cbiAgZm9yIChpQ2VsbCA9IDA7IGlDZWxsIDwgbkNlbGxzOyArK2lDZWxsKSB7XG4gICAgaWYgKGNlbGwgPSBjZWxsc1tpQ2VsbF0pIHtcbiAgICAgIGlmICghY2VsbC5oYWxmZWRnZXMubGVuZ3RoKSB7XG4gICAgICAgIGRlbGV0ZSBjZWxsc1tpQ2VsbF07XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQge1JlZEJsYWNrTm9kZX0gZnJvbSBcIi4vUmVkQmxhY2tUcmVlXCI7XG5pbXBvcnQge2NpcmNsZXMsIGVwc2lsb24yfSBmcm9tIFwiLi9EaWFncmFtXCI7XG5cbnZhciBjaXJjbGVQb29sID0gW107XG5cbmV4cG9ydCB2YXIgZmlyc3RDaXJjbGU7XG5cbmZ1bmN0aW9uIENpcmNsZSgpIHtcbiAgUmVkQmxhY2tOb2RlKHRoaXMpO1xuICB0aGlzLnggPVxuICB0aGlzLnkgPVxuICB0aGlzLmFyYyA9XG4gIHRoaXMuc2l0ZSA9XG4gIHRoaXMuY3kgPSBudWxsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXR0YWNoQ2lyY2xlKGFyYykge1xuICB2YXIgbEFyYyA9IGFyYy5QLFxuICAgICAgckFyYyA9IGFyYy5OO1xuXG4gIGlmICghbEFyYyB8fCAhckFyYykgcmV0dXJuO1xuXG4gIHZhciBsU2l0ZSA9IGxBcmMuc2l0ZSxcbiAgICAgIGNTaXRlID0gYXJjLnNpdGUsXG4gICAgICByU2l0ZSA9IHJBcmMuc2l0ZTtcblxuICBpZiAobFNpdGUgPT09IHJTaXRlKSByZXR1cm47XG5cbiAgdmFyIGJ4ID0gY1NpdGVbMF0sXG4gICAgICBieSA9IGNTaXRlWzFdLFxuICAgICAgYXggPSBsU2l0ZVswXSAtIGJ4LFxuICAgICAgYXkgPSBsU2l0ZVsxXSAtIGJ5LFxuICAgICAgY3ggPSByU2l0ZVswXSAtIGJ4LFxuICAgICAgY3kgPSByU2l0ZVsxXSAtIGJ5O1xuXG4gIHZhciBkID0gMiAqIChheCAqIGN5IC0gYXkgKiBjeCk7XG4gIGlmIChkID49IC1lcHNpbG9uMikgcmV0dXJuO1xuXG4gIHZhciBoYSA9IGF4ICogYXggKyBheSAqIGF5LFxuICAgICAgaGMgPSBjeCAqIGN4ICsgY3kgKiBjeSxcbiAgICAgIHggPSAoY3kgKiBoYSAtIGF5ICogaGMpIC8gZCxcbiAgICAgIHkgPSAoYXggKiBoYyAtIGN4ICogaGEpIC8gZDtcblxuICB2YXIgY2lyY2xlID0gY2lyY2xlUG9vbC5wb3AoKSB8fCBuZXcgQ2lyY2xlO1xuICBjaXJjbGUuYXJjID0gYXJjO1xuICBjaXJjbGUuc2l0ZSA9IGNTaXRlO1xuICBjaXJjbGUueCA9IHggKyBieDtcbiAgY2lyY2xlLnkgPSAoY2lyY2xlLmN5ID0geSArIGJ5KSArIE1hdGguc3FydCh4ICogeCArIHkgKiB5KTsgLy8geSBib3R0b21cblxuICBhcmMuY2lyY2xlID0gY2lyY2xlO1xuXG4gIHZhciBiZWZvcmUgPSBudWxsLFxuICAgICAgbm9kZSA9IGNpcmNsZXMuXztcblxuICB3aGlsZSAobm9kZSkge1xuICAgIGlmIChjaXJjbGUueSA8IG5vZGUueSB8fCAoY2lyY2xlLnkgPT09IG5vZGUueSAmJiBjaXJjbGUueCA8PSBub2RlLngpKSB7XG4gICAgICBpZiAobm9kZS5MKSBub2RlID0gbm9kZS5MO1xuICAgICAgZWxzZSB7IGJlZm9yZSA9IG5vZGUuUDsgYnJlYWs7IH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKG5vZGUuUikgbm9kZSA9IG5vZGUuUjtcbiAgICAgIGVsc2UgeyBiZWZvcmUgPSBub2RlOyBicmVhazsgfVxuICAgIH1cbiAgfVxuXG4gIGNpcmNsZXMuaW5zZXJ0KGJlZm9yZSwgY2lyY2xlKTtcbiAgaWYgKCFiZWZvcmUpIGZpcnN0Q2lyY2xlID0gY2lyY2xlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGV0YWNoQ2lyY2xlKGFyYykge1xuICB2YXIgY2lyY2xlID0gYXJjLmNpcmNsZTtcbiAgaWYgKGNpcmNsZSkge1xuICAgIGlmICghY2lyY2xlLlApIGZpcnN0Q2lyY2xlID0gY2lyY2xlLk47XG4gICAgY2lyY2xlcy5yZW1vdmUoY2lyY2xlKTtcbiAgICBjaXJjbGVQb29sLnB1c2goY2lyY2xlKTtcbiAgICBSZWRCbGFja05vZGUoY2lyY2xlKTtcbiAgICBhcmMuY2lyY2xlID0gbnVsbDtcbiAgfVxufVxuIiwiaW1wb3J0IHthZGRCZWFjaCwgcmVtb3ZlQmVhY2h9IGZyb20gXCIuL0JlYWNoXCI7XG5pbXBvcnQge3NvcnRDZWxsSGFsZmVkZ2VzLCBjZWxsSGFsZmVkZ2VTdGFydCwgY2xpcENlbGxzfSBmcm9tIFwiLi9DZWxsXCI7XG5pbXBvcnQge2ZpcnN0Q2lyY2xlfSBmcm9tIFwiLi9DaXJjbGVcIjtcbmltcG9ydCB7Y2xpcEVkZ2VzfSBmcm9tIFwiLi9FZGdlXCI7XG5pbXBvcnQgUmVkQmxhY2tUcmVlIGZyb20gXCIuL1JlZEJsYWNrVHJlZVwiO1xuXG5leHBvcnQgdmFyIGVwc2lsb24gPSAxZS02O1xuZXhwb3J0IHZhciBlcHNpbG9uMiA9IDFlLTEyO1xuZXhwb3J0IHZhciBiZWFjaGVzO1xuZXhwb3J0IHZhciBjZWxscztcbmV4cG9ydCB2YXIgY2lyY2xlcztcbmV4cG9ydCB2YXIgZWRnZXM7XG5cbmZ1bmN0aW9uIHRyaWFuZ2xlQXJlYShhLCBiLCBjKSB7XG4gIHJldHVybiAoYVswXSAtIGNbMF0pICogKGJbMV0gLSBhWzFdKSAtIChhWzBdIC0gYlswXSkgKiAoY1sxXSAtIGFbMV0pO1xufVxuXG5mdW5jdGlvbiBsZXhpY29ncmFwaGljKGEsIGIpIHtcbiAgcmV0dXJuIGJbMV0gLSBhWzFdXG4gICAgICB8fCBiWzBdIC0gYVswXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRGlhZ3JhbShzaXRlcywgZXh0ZW50KSB7XG4gIHZhciBzaXRlID0gc2l0ZXMuc29ydChsZXhpY29ncmFwaGljKS5wb3AoKSxcbiAgICAgIHgsXG4gICAgICB5LFxuICAgICAgY2lyY2xlO1xuXG4gIGVkZ2VzID0gW107XG4gIGNlbGxzID0gbmV3IEFycmF5KHNpdGVzLmxlbmd0aCk7XG4gIGJlYWNoZXMgPSBuZXcgUmVkQmxhY2tUcmVlO1xuICBjaXJjbGVzID0gbmV3IFJlZEJsYWNrVHJlZTtcblxuICB3aGlsZSAodHJ1ZSkge1xuICAgIGNpcmNsZSA9IGZpcnN0Q2lyY2xlO1xuICAgIGlmIChzaXRlICYmICghY2lyY2xlIHx8IHNpdGVbMV0gPCBjaXJjbGUueSB8fCAoc2l0ZVsxXSA9PT0gY2lyY2xlLnkgJiYgc2l0ZVswXSA8IGNpcmNsZS54KSkpIHtcbiAgICAgIGlmIChzaXRlWzBdICE9PSB4IHx8IHNpdGVbMV0gIT09IHkpIHtcbiAgICAgICAgYWRkQmVhY2goc2l0ZSk7XG4gICAgICAgIHggPSBzaXRlWzBdLCB5ID0gc2l0ZVsxXTtcbiAgICAgIH1cbiAgICAgIHNpdGUgPSBzaXRlcy5wb3AoKTtcbiAgICB9IGVsc2UgaWYgKGNpcmNsZSkge1xuICAgICAgcmVtb3ZlQmVhY2goY2lyY2xlLmFyYyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHNvcnRDZWxsSGFsZmVkZ2VzKCk7XG5cbiAgaWYgKGV4dGVudCkge1xuICAgIHZhciB4MCA9ICtleHRlbnRbMF1bMF0sXG4gICAgICAgIHkwID0gK2V4dGVudFswXVsxXSxcbiAgICAgICAgeDEgPSArZXh0ZW50WzFdWzBdLFxuICAgICAgICB5MSA9ICtleHRlbnRbMV1bMV07XG4gICAgY2xpcEVkZ2VzKHgwLCB5MCwgeDEsIHkxKTtcbiAgICBjbGlwQ2VsbHMoeDAsIHkwLCB4MSwgeTEpO1xuICB9XG5cbiAgdGhpcy5lZGdlcyA9IGVkZ2VzO1xuICB0aGlzLmNlbGxzID0gY2VsbHM7XG5cbiAgYmVhY2hlcyA9XG4gIGNpcmNsZXMgPVxuICBlZGdlcyA9XG4gIGNlbGxzID0gbnVsbDtcbn1cblxuRGlhZ3JhbS5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBEaWFncmFtLFxuXG4gIHBvbHlnb25zOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgZWRnZXMgPSB0aGlzLmVkZ2VzO1xuXG4gICAgcmV0dXJuIHRoaXMuY2VsbHMubWFwKGZ1bmN0aW9uKGNlbGwpIHtcbiAgICAgIHZhciBwb2x5Z29uID0gY2VsbC5oYWxmZWRnZXMubWFwKGZ1bmN0aW9uKGkpIHsgcmV0dXJuIGNlbGxIYWxmZWRnZVN0YXJ0KGNlbGwsIGVkZ2VzW2ldKTsgfSk7XG4gICAgICBwb2x5Z29uLmRhdGEgPSBjZWxsLnNpdGUuZGF0YTtcbiAgICAgIHJldHVybiBwb2x5Z29uO1xuICAgIH0pO1xuICB9LFxuXG4gIHRyaWFuZ2xlczogZnVuY3Rpb24oKSB7XG4gICAgdmFyIHRyaWFuZ2xlcyA9IFtdLFxuICAgICAgICBlZGdlcyA9IHRoaXMuZWRnZXM7XG5cbiAgICB0aGlzLmNlbGxzLmZvckVhY2goZnVuY3Rpb24oY2VsbCwgaSkge1xuICAgICAgaWYgKCEobSA9IChoYWxmZWRnZXMgPSBjZWxsLmhhbGZlZGdlcykubGVuZ3RoKSkgcmV0dXJuO1xuICAgICAgdmFyIHNpdGUgPSBjZWxsLnNpdGUsXG4gICAgICAgICAgaGFsZmVkZ2VzLFxuICAgICAgICAgIGogPSAtMSxcbiAgICAgICAgICBtLFxuICAgICAgICAgIHMwLFxuICAgICAgICAgIGUxID0gZWRnZXNbaGFsZmVkZ2VzW20gLSAxXV0sXG4gICAgICAgICAgczEgPSBlMS5sZWZ0ID09PSBzaXRlID8gZTEucmlnaHQgOiBlMS5sZWZ0O1xuXG4gICAgICB3aGlsZSAoKytqIDwgbSkge1xuICAgICAgICBzMCA9IHMxO1xuICAgICAgICBlMSA9IGVkZ2VzW2hhbGZlZGdlc1tqXV07XG4gICAgICAgIHMxID0gZTEubGVmdCA9PT0gc2l0ZSA/IGUxLnJpZ2h0IDogZTEubGVmdDtcbiAgICAgICAgaWYgKHMwICYmIHMxICYmIGkgPCBzMC5pbmRleCAmJiBpIDwgczEuaW5kZXggJiYgdHJpYW5nbGVBcmVhKHNpdGUsIHMwLCBzMSkgPCAwKSB7XG4gICAgICAgICAgdHJpYW5nbGVzLnB1c2goW3NpdGUuZGF0YSwgczAuZGF0YSwgczEuZGF0YV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdHJpYW5nbGVzO1xuICB9LFxuXG4gIGxpbmtzOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5lZGdlcy5maWx0ZXIoZnVuY3Rpb24oZWRnZSkge1xuICAgICAgcmV0dXJuIGVkZ2UucmlnaHQ7XG4gICAgfSkubWFwKGZ1bmN0aW9uKGVkZ2UpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHNvdXJjZTogZWRnZS5sZWZ0LmRhdGEsXG4gICAgICAgIHRhcmdldDogZWRnZS5yaWdodC5kYXRhXG4gICAgICB9O1xuICAgIH0pO1xuICB9LFxuXG4gIGZpbmQ6IGZ1bmN0aW9uKHgsIHksIHJhZGl1cykge1xuICAgIHZhciB0aGF0ID0gdGhpcywgaTAsIGkxID0gdGhhdC5fZm91bmQgfHwgMCwgbiA9IHRoYXQuY2VsbHMubGVuZ3RoLCBjZWxsO1xuXG4gICAgLy8gVXNlIHRoZSBwcmV2aW91c2x5LWZvdW5kIGNlbGwsIG9yIHN0YXJ0IHdpdGggYW4gYXJiaXRyYXJ5IG9uZS5cbiAgICB3aGlsZSAoIShjZWxsID0gdGhhdC5jZWxsc1tpMV0pKSBpZiAoKytpMSA+PSBuKSByZXR1cm4gbnVsbDtcbiAgICB2YXIgZHggPSB4IC0gY2VsbC5zaXRlWzBdLCBkeSA9IHkgLSBjZWxsLnNpdGVbMV0sIGQyID0gZHggKiBkeCArIGR5ICogZHk7XG5cbiAgICAvLyBUcmF2ZXJzZSB0aGUgaGFsZi1lZGdlcyB0byBmaW5kIGEgY2xvc2VyIGNlbGwsIGlmIGFueS5cbiAgICBkbyB7XG4gICAgICBjZWxsID0gdGhhdC5jZWxsc1tpMCA9IGkxXSwgaTEgPSBudWxsO1xuICAgICAgY2VsbC5oYWxmZWRnZXMuZm9yRWFjaChmdW5jdGlvbihlKSB7XG4gICAgICAgIHZhciBlZGdlID0gdGhhdC5lZGdlc1tlXSwgdiA9IGVkZ2UubGVmdDtcbiAgICAgICAgaWYgKCh2ID09PSBjZWxsLnNpdGUgfHwgIXYpICYmICEodiA9IGVkZ2UucmlnaHQpKSByZXR1cm47XG4gICAgICAgIHZhciB2eCA9IHggLSB2WzBdLCB2eSA9IHkgLSB2WzFdLCB2MiA9IHZ4ICogdnggKyB2eSAqIHZ5O1xuICAgICAgICBpZiAodjIgPCBkMikgZDIgPSB2MiwgaTEgPSB2LmluZGV4O1xuICAgICAgfSk7XG4gICAgfSB3aGlsZSAoaTEgIT09IG51bGwpO1xuXG4gICAgdGhhdC5fZm91bmQgPSBpMDtcblxuICAgIHJldHVybiByYWRpdXMgPT0gbnVsbCB8fCBkMiA8PSByYWRpdXMgKiByYWRpdXMgPyBjZWxsLnNpdGUgOiBudWxsO1xuICB9XG59XG4iLCJpbXBvcnQge2NlbGxzLCBlZGdlcywgZXBzaWxvbn0gZnJvbSBcIi4vRGlhZ3JhbVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRWRnZShsZWZ0LCByaWdodCwgdjAsIHYxKSB7XG4gIHZhciBlZGdlID0gW251bGwsIG51bGxdLFxuICAgICAgaW5kZXggPSBlZGdlcy5wdXNoKGVkZ2UpIC0gMTtcbiAgZWRnZS5sZWZ0ID0gbGVmdDtcbiAgZWRnZS5yaWdodCA9IHJpZ2h0O1xuICBpZiAodjApIHNldEVkZ2VFbmQoZWRnZSwgbGVmdCwgcmlnaHQsIHYwKTtcbiAgaWYgKHYxKSBzZXRFZGdlRW5kKGVkZ2UsIHJpZ2h0LCBsZWZ0LCB2MSk7XG4gIGNlbGxzW2xlZnQuaW5kZXhdLmhhbGZlZGdlcy5wdXNoKGluZGV4KTtcbiAgY2VsbHNbcmlnaHQuaW5kZXhdLmhhbGZlZGdlcy5wdXNoKGluZGV4KTtcbiAgcmV0dXJuIGVkZ2U7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCb3JkZXJFZGdlKGxlZnQsIHYwLCB2MSkge1xuICB2YXIgZWRnZSA9IFt2MCwgdjFdO1xuICBlZGdlLmxlZnQgPSBsZWZ0O1xuICByZXR1cm4gZWRnZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldEVkZ2VFbmQoZWRnZSwgbGVmdCwgcmlnaHQsIHZlcnRleCkge1xuICBpZiAoIWVkZ2VbMF0gJiYgIWVkZ2VbMV0pIHtcbiAgICBlZGdlWzBdID0gdmVydGV4O1xuICAgIGVkZ2UubGVmdCA9IGxlZnQ7XG4gICAgZWRnZS5yaWdodCA9IHJpZ2h0O1xuICB9IGVsc2UgaWYgKGVkZ2UubGVmdCA9PT0gcmlnaHQpIHtcbiAgICBlZGdlWzFdID0gdmVydGV4O1xuICB9IGVsc2Uge1xuICAgIGVkZ2VbMF0gPSB2ZXJ0ZXg7XG4gIH1cbn1cblxuLy8gTGlhbmfigJNCYXJza3kgbGluZSBjbGlwcGluZy5cbmZ1bmN0aW9uIGNsaXBFZGdlKGVkZ2UsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIHZhciBhID0gZWRnZVswXSxcbiAgICAgIGIgPSBlZGdlWzFdLFxuICAgICAgYXggPSBhWzBdLFxuICAgICAgYXkgPSBhWzFdLFxuICAgICAgYnggPSBiWzBdLFxuICAgICAgYnkgPSBiWzFdLFxuICAgICAgdDAgPSAwLFxuICAgICAgdDEgPSAxLFxuICAgICAgZHggPSBieCAtIGF4LFxuICAgICAgZHkgPSBieSAtIGF5LFxuICAgICAgcjtcblxuICByID0geDAgLSBheDtcbiAgaWYgKCFkeCAmJiByID4gMCkgcmV0dXJuO1xuICByIC89IGR4O1xuICBpZiAoZHggPCAwKSB7XG4gICAgaWYgKHIgPCB0MCkgcmV0dXJuO1xuICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgfSBlbHNlIGlmIChkeCA+IDApIHtcbiAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICB9XG5cbiAgciA9IHgxIC0gYXg7XG4gIGlmICghZHggJiYgciA8IDApIHJldHVybjtcbiAgciAvPSBkeDtcbiAgaWYgKGR4IDwgMCkge1xuICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICBpZiAociA+IHQwKSB0MCA9IHI7XG4gIH0gZWxzZSBpZiAoZHggPiAwKSB7XG4gICAgaWYgKHIgPCB0MCkgcmV0dXJuO1xuICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgfVxuXG4gIHIgPSB5MCAtIGF5O1xuICBpZiAoIWR5ICYmIHIgPiAwKSByZXR1cm47XG4gIHIgLz0gZHk7XG4gIGlmIChkeSA8IDApIHtcbiAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICB9IGVsc2UgaWYgKGR5ID4gMCkge1xuICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICBpZiAociA+IHQwKSB0MCA9IHI7XG4gIH1cblxuICByID0geTEgLSBheTtcbiAgaWYgKCFkeSAmJiByIDwgMCkgcmV0dXJuO1xuICByIC89IGR5O1xuICBpZiAoZHkgPCAwKSB7XG4gICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgfSBlbHNlIGlmIChkeSA+IDApIHtcbiAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICB9XG5cbiAgaWYgKCEodDAgPiAwKSAmJiAhKHQxIDwgMSkpIHJldHVybiB0cnVlOyAvLyBUT0RPIEJldHRlciBjaGVjaz9cblxuICBpZiAodDAgPiAwKSBlZGdlWzBdID0gW2F4ICsgdDAgKiBkeCwgYXkgKyB0MCAqIGR5XTtcbiAgaWYgKHQxIDwgMSkgZWRnZVsxXSA9IFtheCArIHQxICogZHgsIGF5ICsgdDEgKiBkeV07XG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBjb25uZWN0RWRnZShlZGdlLCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgdjEgPSBlZGdlWzFdO1xuICBpZiAodjEpIHJldHVybiB0cnVlO1xuXG4gIHZhciB2MCA9IGVkZ2VbMF0sXG4gICAgICBsZWZ0ID0gZWRnZS5sZWZ0LFxuICAgICAgcmlnaHQgPSBlZGdlLnJpZ2h0LFxuICAgICAgbHggPSBsZWZ0WzBdLFxuICAgICAgbHkgPSBsZWZ0WzFdLFxuICAgICAgcnggPSByaWdodFswXSxcbiAgICAgIHJ5ID0gcmlnaHRbMV0sXG4gICAgICBmeCA9IChseCArIHJ4KSAvIDIsXG4gICAgICBmeSA9IChseSArIHJ5KSAvIDIsXG4gICAgICBmbSxcbiAgICAgIGZiO1xuXG4gIGlmIChyeSA9PT0gbHkpIHtcbiAgICBpZiAoZnggPCB4MCB8fCBmeCA+PSB4MSkgcmV0dXJuO1xuICAgIGlmIChseCA+IHJ4KSB7XG4gICAgICBpZiAoIXYwKSB2MCA9IFtmeCwgeTBdO1xuICAgICAgZWxzZSBpZiAodjBbMV0gPj0geTEpIHJldHVybjtcbiAgICAgIHYxID0gW2Z4LCB5MV07XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICghdjApIHYwID0gW2Z4LCB5MV07XG4gICAgICBlbHNlIGlmICh2MFsxXSA8IHkwKSByZXR1cm47XG4gICAgICB2MSA9IFtmeCwgeTBdO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBmbSA9IChseCAtIHJ4KSAvIChyeSAtIGx5KTtcbiAgICBmYiA9IGZ5IC0gZm0gKiBmeDtcbiAgICBpZiAoZm0gPCAtMSB8fCBmbSA+IDEpIHtcbiAgICAgIGlmIChseCA+IHJ4KSB7XG4gICAgICAgIGlmICghdjApIHYwID0gWyh5MCAtIGZiKSAvIGZtLCB5MF07XG4gICAgICAgIGVsc2UgaWYgKHYwWzFdID49IHkxKSByZXR1cm47XG4gICAgICAgIHYxID0gWyh5MSAtIGZiKSAvIGZtLCB5MV07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoIXYwKSB2MCA9IFsoeTEgLSBmYikgLyBmbSwgeTFdO1xuICAgICAgICBlbHNlIGlmICh2MFsxXSA8IHkwKSByZXR1cm47XG4gICAgICAgIHYxID0gWyh5MCAtIGZiKSAvIGZtLCB5MF07XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChseSA8IHJ5KSB7XG4gICAgICAgIGlmICghdjApIHYwID0gW3gwLCBmbSAqIHgwICsgZmJdO1xuICAgICAgICBlbHNlIGlmICh2MFswXSA+PSB4MSkgcmV0dXJuO1xuICAgICAgICB2MSA9IFt4MSwgZm0gKiB4MSArIGZiXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghdjApIHYwID0gW3gxLCBmbSAqIHgxICsgZmJdO1xuICAgICAgICBlbHNlIGlmICh2MFswXSA8IHgwKSByZXR1cm47XG4gICAgICAgIHYxID0gW3gwLCBmbSAqIHgwICsgZmJdO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGVkZ2VbMF0gPSB2MDtcbiAgZWRnZVsxXSA9IHYxO1xuICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsaXBFZGdlcyh4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgaSA9IGVkZ2VzLmxlbmd0aCxcbiAgICAgIGVkZ2U7XG5cbiAgd2hpbGUgKGktLSkge1xuICAgIGlmICghY29ubmVjdEVkZ2UoZWRnZSA9IGVkZ2VzW2ldLCB4MCwgeTAsIHgxLCB5MSlcbiAgICAgICAgfHwgIWNsaXBFZGdlKGVkZ2UsIHgwLCB5MCwgeDEsIHkxKVxuICAgICAgICB8fCAhKE1hdGguYWJzKGVkZ2VbMF1bMF0gLSBlZGdlWzFdWzBdKSA+IGVwc2lsb25cbiAgICAgICAgICAgIHx8IE1hdGguYWJzKGVkZ2VbMF1bMV0gLSBlZGdlWzFdWzFdKSA+IGVwc2lsb24pKSB7XG4gICAgICBkZWxldGUgZWRnZXNbaV07XG4gICAgfVxuICB9XG59XG4iLCJmdW5jdGlvbiBSZWRCbGFja1RyZWUoKSB7XG4gIHRoaXMuXyA9IG51bGw7IC8vIHJvb3Qgbm9kZVxufVxuXG5leHBvcnQgZnVuY3Rpb24gUmVkQmxhY2tOb2RlKG5vZGUpIHtcbiAgbm9kZS5VID0gLy8gcGFyZW50IG5vZGVcbiAgbm9kZS5DID0gLy8gY29sb3IgLSB0cnVlIGZvciByZWQsIGZhbHNlIGZvciBibGFja1xuICBub2RlLkwgPSAvLyBsZWZ0IG5vZGVcbiAgbm9kZS5SID0gLy8gcmlnaHQgbm9kZVxuICBub2RlLlAgPSAvLyBwcmV2aW91cyBub2RlXG4gIG5vZGUuTiA9IG51bGw7IC8vIG5leHQgbm9kZVxufVxuXG5SZWRCbGFja1RyZWUucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogUmVkQmxhY2tUcmVlLFxuXG4gIGluc2VydDogZnVuY3Rpb24oYWZ0ZXIsIG5vZGUpIHtcbiAgICB2YXIgcGFyZW50LCBncmFuZHBhLCB1bmNsZTtcblxuICAgIGlmIChhZnRlcikge1xuICAgICAgbm9kZS5QID0gYWZ0ZXI7XG4gICAgICBub2RlLk4gPSBhZnRlci5OO1xuICAgICAgaWYgKGFmdGVyLk4pIGFmdGVyLk4uUCA9IG5vZGU7XG4gICAgICBhZnRlci5OID0gbm9kZTtcbiAgICAgIGlmIChhZnRlci5SKSB7XG4gICAgICAgIGFmdGVyID0gYWZ0ZXIuUjtcbiAgICAgICAgd2hpbGUgKGFmdGVyLkwpIGFmdGVyID0gYWZ0ZXIuTDtcbiAgICAgICAgYWZ0ZXIuTCA9IG5vZGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhZnRlci5SID0gbm9kZTtcbiAgICAgIH1cbiAgICAgIHBhcmVudCA9IGFmdGVyO1xuICAgIH0gZWxzZSBpZiAodGhpcy5fKSB7XG4gICAgICBhZnRlciA9IFJlZEJsYWNrRmlyc3QodGhpcy5fKTtcbiAgICAgIG5vZGUuUCA9IG51bGw7XG4gICAgICBub2RlLk4gPSBhZnRlcjtcbiAgICAgIGFmdGVyLlAgPSBhZnRlci5MID0gbm9kZTtcbiAgICAgIHBhcmVudCA9IGFmdGVyO1xuICAgIH0gZWxzZSB7XG4gICAgICBub2RlLlAgPSBub2RlLk4gPSBudWxsO1xuICAgICAgdGhpcy5fID0gbm9kZTtcbiAgICAgIHBhcmVudCA9IG51bGw7XG4gICAgfVxuICAgIG5vZGUuTCA9IG5vZGUuUiA9IG51bGw7XG4gICAgbm9kZS5VID0gcGFyZW50O1xuICAgIG5vZGUuQyA9IHRydWU7XG5cbiAgICBhZnRlciA9IG5vZGU7XG4gICAgd2hpbGUgKHBhcmVudCAmJiBwYXJlbnQuQykge1xuICAgICAgZ3JhbmRwYSA9IHBhcmVudC5VO1xuICAgICAgaWYgKHBhcmVudCA9PT0gZ3JhbmRwYS5MKSB7XG4gICAgICAgIHVuY2xlID0gZ3JhbmRwYS5SO1xuICAgICAgICBpZiAodW5jbGUgJiYgdW5jbGUuQykge1xuICAgICAgICAgIHBhcmVudC5DID0gdW5jbGUuQyA9IGZhbHNlO1xuICAgICAgICAgIGdyYW5kcGEuQyA9IHRydWU7XG4gICAgICAgICAgYWZ0ZXIgPSBncmFuZHBhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChhZnRlciA9PT0gcGFyZW50LlIpIHtcbiAgICAgICAgICAgIFJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBwYXJlbnQpO1xuICAgICAgICAgICAgYWZ0ZXIgPSBwYXJlbnQ7XG4gICAgICAgICAgICBwYXJlbnQgPSBhZnRlci5VO1xuICAgICAgICAgIH1cbiAgICAgICAgICBwYXJlbnQuQyA9IGZhbHNlO1xuICAgICAgICAgIGdyYW5kcGEuQyA9IHRydWU7XG4gICAgICAgICAgUmVkQmxhY2tSb3RhdGVSaWdodCh0aGlzLCBncmFuZHBhKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdW5jbGUgPSBncmFuZHBhLkw7XG4gICAgICAgIGlmICh1bmNsZSAmJiB1bmNsZS5DKSB7XG4gICAgICAgICAgcGFyZW50LkMgPSB1bmNsZS5DID0gZmFsc2U7XG4gICAgICAgICAgZ3JhbmRwYS5DID0gdHJ1ZTtcbiAgICAgICAgICBhZnRlciA9IGdyYW5kcGE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKGFmdGVyID09PSBwYXJlbnQuTCkge1xuICAgICAgICAgICAgUmVkQmxhY2tSb3RhdGVSaWdodCh0aGlzLCBwYXJlbnQpO1xuICAgICAgICAgICAgYWZ0ZXIgPSBwYXJlbnQ7XG4gICAgICAgICAgICBwYXJlbnQgPSBhZnRlci5VO1xuICAgICAgICAgIH1cbiAgICAgICAgICBwYXJlbnQuQyA9IGZhbHNlO1xuICAgICAgICAgIGdyYW5kcGEuQyA9IHRydWU7XG4gICAgICAgICAgUmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMsIGdyYW5kcGEpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBwYXJlbnQgPSBhZnRlci5VO1xuICAgIH1cbiAgICB0aGlzLl8uQyA9IGZhbHNlO1xuICB9LFxuXG4gIHJlbW92ZTogZnVuY3Rpb24obm9kZSkge1xuICAgIGlmIChub2RlLk4pIG5vZGUuTi5QID0gbm9kZS5QO1xuICAgIGlmIChub2RlLlApIG5vZGUuUC5OID0gbm9kZS5OO1xuICAgIG5vZGUuTiA9IG5vZGUuUCA9IG51bGw7XG5cbiAgICB2YXIgcGFyZW50ID0gbm9kZS5VLFxuICAgICAgICBzaWJsaW5nLFxuICAgICAgICBsZWZ0ID0gbm9kZS5MLFxuICAgICAgICByaWdodCA9IG5vZGUuUixcbiAgICAgICAgbmV4dCxcbiAgICAgICAgcmVkO1xuXG4gICAgaWYgKCFsZWZ0KSBuZXh0ID0gcmlnaHQ7XG4gICAgZWxzZSBpZiAoIXJpZ2h0KSBuZXh0ID0gbGVmdDtcbiAgICBlbHNlIG5leHQgPSBSZWRCbGFja0ZpcnN0KHJpZ2h0KTtcblxuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgIGlmIChwYXJlbnQuTCA9PT0gbm9kZSkgcGFyZW50LkwgPSBuZXh0O1xuICAgICAgZWxzZSBwYXJlbnQuUiA9IG5leHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuXyA9IG5leHQ7XG4gICAgfVxuXG4gICAgaWYgKGxlZnQgJiYgcmlnaHQpIHtcbiAgICAgIHJlZCA9IG5leHQuQztcbiAgICAgIG5leHQuQyA9IG5vZGUuQztcbiAgICAgIG5leHQuTCA9IGxlZnQ7XG4gICAgICBsZWZ0LlUgPSBuZXh0O1xuICAgICAgaWYgKG5leHQgIT09IHJpZ2h0KSB7XG4gICAgICAgIHBhcmVudCA9IG5leHQuVTtcbiAgICAgICAgbmV4dC5VID0gbm9kZS5VO1xuICAgICAgICBub2RlID0gbmV4dC5SO1xuICAgICAgICBwYXJlbnQuTCA9IG5vZGU7XG4gICAgICAgIG5leHQuUiA9IHJpZ2h0O1xuICAgICAgICByaWdodC5VID0gbmV4dDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHQuVSA9IHBhcmVudDtcbiAgICAgICAgcGFyZW50ID0gbmV4dDtcbiAgICAgICAgbm9kZSA9IG5leHQuUjtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcmVkID0gbm9kZS5DO1xuICAgICAgbm9kZSA9IG5leHQ7XG4gICAgfVxuXG4gICAgaWYgKG5vZGUpIG5vZGUuVSA9IHBhcmVudDtcbiAgICBpZiAocmVkKSByZXR1cm47XG4gICAgaWYgKG5vZGUgJiYgbm9kZS5DKSB7IG5vZGUuQyA9IGZhbHNlOyByZXR1cm47IH1cblxuICAgIGRvIHtcbiAgICAgIGlmIChub2RlID09PSB0aGlzLl8pIGJyZWFrO1xuICAgICAgaWYgKG5vZGUgPT09IHBhcmVudC5MKSB7XG4gICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuUjtcbiAgICAgICAgaWYgKHNpYmxpbmcuQykge1xuICAgICAgICAgIHNpYmxpbmcuQyA9IGZhbHNlO1xuICAgICAgICAgIHBhcmVudC5DID0gdHJ1ZTtcbiAgICAgICAgICBSZWRCbGFja1JvdGF0ZUxlZnQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICBzaWJsaW5nID0gcGFyZW50LlI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChzaWJsaW5nLkwgJiYgc2libGluZy5MLkMpXG4gICAgICAgICAgICB8fCAoc2libGluZy5SICYmIHNpYmxpbmcuUi5DKSkge1xuICAgICAgICAgIGlmICghc2libGluZy5SIHx8ICFzaWJsaW5nLlIuQykge1xuICAgICAgICAgICAgc2libGluZy5MLkMgPSBmYWxzZTtcbiAgICAgICAgICAgIHNpYmxpbmcuQyA9IHRydWU7XG4gICAgICAgICAgICBSZWRCbGFja1JvdGF0ZVJpZ2h0KHRoaXMsIHNpYmxpbmcpO1xuICAgICAgICAgICAgc2libGluZyA9IHBhcmVudC5SO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzaWJsaW5nLkMgPSBwYXJlbnQuQztcbiAgICAgICAgICBwYXJlbnQuQyA9IHNpYmxpbmcuUi5DID0gZmFsc2U7XG4gICAgICAgICAgUmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMsIHBhcmVudCk7XG4gICAgICAgICAgbm9kZSA9IHRoaXMuXztcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2libGluZyA9IHBhcmVudC5MO1xuICAgICAgICBpZiAoc2libGluZy5DKSB7XG4gICAgICAgICAgc2libGluZy5DID0gZmFsc2U7XG4gICAgICAgICAgcGFyZW50LkMgPSB0cnVlO1xuICAgICAgICAgIFJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICBzaWJsaW5nID0gcGFyZW50Lkw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChzaWJsaW5nLkwgJiYgc2libGluZy5MLkMpXG4gICAgICAgICAgfHwgKHNpYmxpbmcuUiAmJiBzaWJsaW5nLlIuQykpIHtcbiAgICAgICAgICBpZiAoIXNpYmxpbmcuTCB8fCAhc2libGluZy5MLkMpIHtcbiAgICAgICAgICAgIHNpYmxpbmcuUi5DID0gZmFsc2U7XG4gICAgICAgICAgICBzaWJsaW5nLkMgPSB0cnVlO1xuICAgICAgICAgICAgUmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMsIHNpYmxpbmcpO1xuICAgICAgICAgICAgc2libGluZyA9IHBhcmVudC5MO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzaWJsaW5nLkMgPSBwYXJlbnQuQztcbiAgICAgICAgICBwYXJlbnQuQyA9IHNpYmxpbmcuTC5DID0gZmFsc2U7XG4gICAgICAgICAgUmVkQmxhY2tSb3RhdGVSaWdodCh0aGlzLCBwYXJlbnQpO1xuICAgICAgICAgIG5vZGUgPSB0aGlzLl87XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHNpYmxpbmcuQyA9IHRydWU7XG4gICAgICBub2RlID0gcGFyZW50O1xuICAgICAgcGFyZW50ID0gcGFyZW50LlU7XG4gICAgfSB3aGlsZSAoIW5vZGUuQyk7XG5cbiAgICBpZiAobm9kZSkgbm9kZS5DID0gZmFsc2U7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIFJlZEJsYWNrUm90YXRlTGVmdCh0cmVlLCBub2RlKSB7XG4gIHZhciBwID0gbm9kZSxcbiAgICAgIHEgPSBub2RlLlIsXG4gICAgICBwYXJlbnQgPSBwLlU7XG5cbiAgaWYgKHBhcmVudCkge1xuICAgIGlmIChwYXJlbnQuTCA9PT0gcCkgcGFyZW50LkwgPSBxO1xuICAgIGVsc2UgcGFyZW50LlIgPSBxO1xuICB9IGVsc2Uge1xuICAgIHRyZWUuXyA9IHE7XG4gIH1cblxuICBxLlUgPSBwYXJlbnQ7XG4gIHAuVSA9IHE7XG4gIHAuUiA9IHEuTDtcbiAgaWYgKHAuUikgcC5SLlUgPSBwO1xuICBxLkwgPSBwO1xufVxuXG5mdW5jdGlvbiBSZWRCbGFja1JvdGF0ZVJpZ2h0KHRyZWUsIG5vZGUpIHtcbiAgdmFyIHAgPSBub2RlLFxuICAgICAgcSA9IG5vZGUuTCxcbiAgICAgIHBhcmVudCA9IHAuVTtcblxuICBpZiAocGFyZW50KSB7XG4gICAgaWYgKHBhcmVudC5MID09PSBwKSBwYXJlbnQuTCA9IHE7XG4gICAgZWxzZSBwYXJlbnQuUiA9IHE7XG4gIH0gZWxzZSB7XG4gICAgdHJlZS5fID0gcTtcbiAgfVxuXG4gIHEuVSA9IHBhcmVudDtcbiAgcC5VID0gcTtcbiAgcC5MID0gcS5SO1xuICBpZiAocC5MKSBwLkwuVSA9IHA7XG4gIHEuUiA9IHA7XG59XG5cbmZ1bmN0aW9uIFJlZEJsYWNrRmlyc3Qobm9kZSkge1xuICB3aGlsZSAobm9kZS5MKSBub2RlID0gbm9kZS5MO1xuICByZXR1cm4gbm9kZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVkQmxhY2tUcmVlO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgdm9yb25vaX0gZnJvbSBcIi4vdm9yb25vaVwiO1xuIiwiZXhwb3J0IGZ1bmN0aW9uIHgoZCkge1xuICByZXR1cm4gZFswXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHkoZCkge1xuICByZXR1cm4gZFsxXTtcbn1cbiIsImltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IHt4IGFzIHBvaW50WCwgeSBhcyBwb2ludFl9IGZyb20gXCIuL3BvaW50XCI7XG5pbXBvcnQgRGlhZ3JhbSwge2Vwc2lsb259IGZyb20gXCIuL0RpYWdyYW1cIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciB4ID0gcG9pbnRYLFxuICAgICAgeSA9IHBvaW50WSxcbiAgICAgIGV4dGVudCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gdm9yb25vaShkYXRhKSB7XG4gICAgcmV0dXJuIG5ldyBEaWFncmFtKGRhdGEubWFwKGZ1bmN0aW9uKGQsIGkpIHtcbiAgICAgIHZhciBzID0gW01hdGgucm91bmQoeChkLCBpLCBkYXRhKSAvIGVwc2lsb24pICogZXBzaWxvbiwgTWF0aC5yb3VuZCh5KGQsIGksIGRhdGEpIC8gZXBzaWxvbikgKiBlcHNpbG9uXTtcbiAgICAgIHMuaW5kZXggPSBpO1xuICAgICAgcy5kYXRhID0gZDtcbiAgICAgIHJldHVybiBzO1xuICAgIH0pLCBleHRlbnQpO1xuICB9XG5cbiAgdm9yb25vaS5wb2x5Z29ucyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICByZXR1cm4gdm9yb25vaShkYXRhKS5wb2x5Z29ucygpO1xuICB9O1xuXG4gIHZvcm9ub2kubGlua3MgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgcmV0dXJuIHZvcm9ub2koZGF0YSkubGlua3MoKTtcbiAgfTtcblxuICB2b3Jvbm9pLnRyaWFuZ2xlcyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICByZXR1cm4gdm9yb25vaShkYXRhKS50cmlhbmdsZXMoKTtcbiAgfTtcblxuICB2b3Jvbm9pLnggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCB2b3Jvbm9pKSA6IHg7XG4gIH07XG5cbiAgdm9yb25vaS55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgdm9yb25vaSkgOiB5O1xuICB9O1xuXG4gIHZvcm9ub2kuZXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGV4dGVudCA9IF8gPT0gbnVsbCA/IG51bGwgOiBbWytfWzBdWzBdLCArX1swXVsxXV0sIFsrX1sxXVswXSwgK19bMV1bMV1dXSwgdm9yb25vaSkgOiBleHRlbnQgJiYgW1tleHRlbnRbMF1bMF0sIGV4dGVudFswXVsxXV0sIFtleHRlbnRbMV1bMF0sIGV4dGVudFsxXVsxXV1dO1xuICB9O1xuXG4gIHZvcm9ub2kuc2l6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChleHRlbnQgPSBfID09IG51bGwgPyBudWxsIDogW1swLCAwXSwgWytfWzBdLCArX1sxXV1dLCB2b3Jvbm9pKSA6IGV4dGVudCAmJiBbZXh0ZW50WzFdWzBdIC0gZXh0ZW50WzBdWzBdLCBleHRlbnRbMV1bMV0gLSBleHRlbnRbMF1bMV1dO1xuICB9O1xuXG4gIHJldHVybiB2b3Jvbm9pO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBab29tRXZlbnQodGFyZ2V0LCB0eXBlLCB0cmFuc2Zvcm0pIHtcbiAgdGhpcy50YXJnZXQgPSB0YXJnZXQ7XG4gIHRoaXMudHlwZSA9IHR5cGU7XG4gIHRoaXMudHJhbnNmb3JtID0gdHJhbnNmb3JtO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIHpvb219IGZyb20gXCIuL3pvb21cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB6b29tVHJhbnNmb3JtLCBpZGVudGl0eSBhcyB6b29tSWRlbnRpdHl9IGZyb20gXCIuL3RyYW5zZm9ybVwiO1xuIiwiaW1wb3J0IHtldmVudH0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuXG5leHBvcnQgZnVuY3Rpb24gbm9wcm9wYWdhdGlvbigpIHtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBUcmFuc2Zvcm0oaywgeCwgeSkge1xuICB0aGlzLmsgPSBrO1xuICB0aGlzLnggPSB4O1xuICB0aGlzLnkgPSB5O1xufVxuXG5UcmFuc2Zvcm0ucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogVHJhbnNmb3JtLFxuICBzY2FsZTogZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBrID09PSAxID8gdGhpcyA6IG5ldyBUcmFuc2Zvcm0odGhpcy5rICogaywgdGhpcy54LCB0aGlzLnkpO1xuICB9LFxuICB0cmFuc2xhdGU6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICByZXR1cm4geCA9PT0gMCAmIHkgPT09IDAgPyB0aGlzIDogbmV3IFRyYW5zZm9ybSh0aGlzLmssIHRoaXMueCArIHRoaXMuayAqIHgsIHRoaXMueSArIHRoaXMuayAqIHkpO1xuICB9LFxuICBhcHBseTogZnVuY3Rpb24ocG9pbnQpIHtcbiAgICByZXR1cm4gW3BvaW50WzBdICogdGhpcy5rICsgdGhpcy54LCBwb2ludFsxXSAqIHRoaXMuayArIHRoaXMueV07XG4gIH0sXG4gIGFwcGx5WDogZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiB4ICogdGhpcy5rICsgdGhpcy54O1xuICB9LFxuICBhcHBseVk6IGZ1bmN0aW9uKHkpIHtcbiAgICByZXR1cm4geSAqIHRoaXMuayArIHRoaXMueTtcbiAgfSxcbiAgaW52ZXJ0OiBmdW5jdGlvbihsb2NhdGlvbikge1xuICAgIHJldHVybiBbKGxvY2F0aW9uWzBdIC0gdGhpcy54KSAvIHRoaXMuaywgKGxvY2F0aW9uWzFdIC0gdGhpcy55KSAvIHRoaXMua107XG4gIH0sXG4gIGludmVydFg6IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gKHggLSB0aGlzLngpIC8gdGhpcy5rO1xuICB9LFxuICBpbnZlcnRZOiBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuICh5IC0gdGhpcy55KSAvIHRoaXMuaztcbiAgfSxcbiAgcmVzY2FsZVg6IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4geC5jb3B5KCkuZG9tYWluKHgucmFuZ2UoKS5tYXAodGhpcy5pbnZlcnRYLCB0aGlzKS5tYXAoeC5pbnZlcnQsIHgpKTtcbiAgfSxcbiAgcmVzY2FsZVk6IGZ1bmN0aW9uKHkpIHtcbiAgICByZXR1cm4geS5jb3B5KCkuZG9tYWluKHkucmFuZ2UoKS5tYXAodGhpcy5pbnZlcnRZLCB0aGlzKS5tYXAoeS5pbnZlcnQsIHkpKTtcbiAgfSxcbiAgdG9TdHJpbmc6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBcInRyYW5zbGF0ZShcIiArIHRoaXMueCArIFwiLFwiICsgdGhpcy55ICsgXCIpIHNjYWxlKFwiICsgdGhpcy5rICsgXCIpXCI7XG4gIH1cbn07XG5cbmV4cG9ydCB2YXIgaWRlbnRpdHkgPSBuZXcgVHJhbnNmb3JtKDEsIDAsIDApO1xuXG50cmFuc2Zvcm0ucHJvdG90eXBlID0gVHJhbnNmb3JtLnByb3RvdHlwZTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdHJhbnNmb3JtKG5vZGUpIHtcbiAgcmV0dXJuIG5vZGUuX196b29tIHx8IGlkZW50aXR5O1xufVxuIiwiaW1wb3J0IHtkaXNwYXRjaH0gZnJvbSBcImQzLWRpc3BhdGNoXCI7XG5pbXBvcnQge2RyYWdEaXNhYmxlLCBkcmFnRW5hYmxlfSBmcm9tIFwiZDMtZHJhZ1wiO1xuaW1wb3J0IHtpbnRlcnBvbGF0ZVpvb219IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuaW1wb3J0IHtldmVudCwgY3VzdG9tRXZlbnQsIHNlbGVjdCwgbW91c2UsIHRvdWNofSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge2ludGVycnVwdH0gZnJvbSBcImQzLXRyYW5zaXRpb25cIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IFpvb21FdmVudCBmcm9tIFwiLi9ldmVudFwiO1xuaW1wb3J0IHtUcmFuc2Zvcm0sIGlkZW50aXR5fSBmcm9tIFwiLi90cmFuc2Zvcm1cIjtcbmltcG9ydCBub2V2ZW50LCB7bm9wcm9wYWdhdGlvbn0gZnJvbSBcIi4vbm9ldmVudFwiO1xuXG4vLyBJZ25vcmUgcmlnaHQtY2xpY2ssIHNpbmNlIHRoYXQgc2hvdWxkIG9wZW4gdGhlIGNvbnRleHQgbWVudS5cbmZ1bmN0aW9uIGRlZmF1bHRGaWx0ZXIoKSB7XG4gIHJldHVybiAhZXZlbnQuYnV0dG9uO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0RXh0ZW50KCkge1xuICB2YXIgZSA9IHRoaXMsIHcsIGg7XG4gIGlmIChlIGluc3RhbmNlb2YgU1ZHRWxlbWVudCkge1xuICAgIGUgPSBlLm93bmVyU1ZHRWxlbWVudCB8fCBlO1xuICAgIHcgPSBlLndpZHRoLmJhc2VWYWwudmFsdWU7XG4gICAgaCA9IGUuaGVpZ2h0LmJhc2VWYWwudmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgdyA9IGUuY2xpZW50V2lkdGg7XG4gICAgaCA9IGUuY2xpZW50SGVpZ2h0O1xuICB9XG4gIHJldHVybiBbWzAsIDBdLCBbdywgaF1dO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0VHJhbnNmb3JtKCkge1xuICByZXR1cm4gdGhpcy5fX3pvb20gfHwgaWRlbnRpdHk7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRXaGVlbERlbHRhKCkge1xuICByZXR1cm4gLWV2ZW50LmRlbHRhWSAqIChldmVudC5kZWx0YU1vZGUgPyAxMjAgOiAxKSAvIDUwMDtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFRvdWNoYWJsZSgpIHtcbiAgcmV0dXJuIFwib250b3VjaHN0YXJ0XCIgaW4gdGhpcztcbn1cblxuZnVuY3Rpb24gZGVmYXVsdENvbnN0cmFpbih0cmFuc2Zvcm0sIGV4dGVudCwgdHJhbnNsYXRlRXh0ZW50KSB7XG4gIHZhciBkeDAgPSB0cmFuc2Zvcm0uaW52ZXJ0WChleHRlbnRbMF1bMF0pIC0gdHJhbnNsYXRlRXh0ZW50WzBdWzBdLFxuICAgICAgZHgxID0gdHJhbnNmb3JtLmludmVydFgoZXh0ZW50WzFdWzBdKSAtIHRyYW5zbGF0ZUV4dGVudFsxXVswXSxcbiAgICAgIGR5MCA9IHRyYW5zZm9ybS5pbnZlcnRZKGV4dGVudFswXVsxXSkgLSB0cmFuc2xhdGVFeHRlbnRbMF1bMV0sXG4gICAgICBkeTEgPSB0cmFuc2Zvcm0uaW52ZXJ0WShleHRlbnRbMV1bMV0pIC0gdHJhbnNsYXRlRXh0ZW50WzFdWzFdO1xuICByZXR1cm4gdHJhbnNmb3JtLnRyYW5zbGF0ZShcbiAgICBkeDEgPiBkeDAgPyAoZHgwICsgZHgxKSAvIDIgOiBNYXRoLm1pbigwLCBkeDApIHx8IE1hdGgubWF4KDAsIGR4MSksXG4gICAgZHkxID4gZHkwID8gKGR5MCArIGR5MSkgLyAyIDogTWF0aC5taW4oMCwgZHkwKSB8fCBNYXRoLm1heCgwLCBkeTEpXG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgZmlsdGVyID0gZGVmYXVsdEZpbHRlcixcbiAgICAgIGV4dGVudCA9IGRlZmF1bHRFeHRlbnQsXG4gICAgICBjb25zdHJhaW4gPSBkZWZhdWx0Q29uc3RyYWluLFxuICAgICAgd2hlZWxEZWx0YSA9IGRlZmF1bHRXaGVlbERlbHRhLFxuICAgICAgdG91Y2hhYmxlID0gZGVmYXVsdFRvdWNoYWJsZSxcbiAgICAgIHNjYWxlRXh0ZW50ID0gWzAsIEluZmluaXR5XSxcbiAgICAgIHRyYW5zbGF0ZUV4dGVudCA9IFtbLUluZmluaXR5LCAtSW5maW5pdHldLCBbSW5maW5pdHksIEluZmluaXR5XV0sXG4gICAgICBkdXJhdGlvbiA9IDI1MCxcbiAgICAgIGludGVycG9sYXRlID0gaW50ZXJwb2xhdGVab29tLFxuICAgICAgZ2VzdHVyZXMgPSBbXSxcbiAgICAgIGxpc3RlbmVycyA9IGRpc3BhdGNoKFwic3RhcnRcIiwgXCJ6b29tXCIsIFwiZW5kXCIpLFxuICAgICAgdG91Y2hzdGFydGluZyxcbiAgICAgIHRvdWNoZW5kaW5nLFxuICAgICAgdG91Y2hEZWxheSA9IDUwMCxcbiAgICAgIHdoZWVsRGVsYXkgPSAxNTAsXG4gICAgICBjbGlja0Rpc3RhbmNlMiA9IDA7XG5cbiAgZnVuY3Rpb24gem9vbShzZWxlY3Rpb24pIHtcbiAgICBzZWxlY3Rpb25cbiAgICAgICAgLnByb3BlcnR5KFwiX196b29tXCIsIGRlZmF1bHRUcmFuc2Zvcm0pXG4gICAgICAgIC5vbihcIndoZWVsLnpvb21cIiwgd2hlZWxlZClcbiAgICAgICAgLm9uKFwibW91c2Vkb3duLnpvb21cIiwgbW91c2Vkb3duZWQpXG4gICAgICAgIC5vbihcImRibGNsaWNrLnpvb21cIiwgZGJsY2xpY2tlZClcbiAgICAgIC5maWx0ZXIodG91Y2hhYmxlKVxuICAgICAgICAub24oXCJ0b3VjaHN0YXJ0Lnpvb21cIiwgdG91Y2hzdGFydGVkKVxuICAgICAgICAub24oXCJ0b3VjaG1vdmUuem9vbVwiLCB0b3VjaG1vdmVkKVxuICAgICAgICAub24oXCJ0b3VjaGVuZC56b29tIHRvdWNoY2FuY2VsLnpvb21cIiwgdG91Y2hlbmRlZClcbiAgICAgICAgLnN0eWxlKFwidG91Y2gtYWN0aW9uXCIsIFwibm9uZVwiKVxuICAgICAgICAuc3R5bGUoXCItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3JcIiwgXCJyZ2JhKDAsMCwwLDApXCIpO1xuICB9XG5cbiAgem9vbS50cmFuc2Zvcm0gPSBmdW5jdGlvbihjb2xsZWN0aW9uLCB0cmFuc2Zvcm0pIHtcbiAgICB2YXIgc2VsZWN0aW9uID0gY29sbGVjdGlvbi5zZWxlY3Rpb24gPyBjb2xsZWN0aW9uLnNlbGVjdGlvbigpIDogY29sbGVjdGlvbjtcbiAgICBzZWxlY3Rpb24ucHJvcGVydHkoXCJfX3pvb21cIiwgZGVmYXVsdFRyYW5zZm9ybSk7XG4gICAgaWYgKGNvbGxlY3Rpb24gIT09IHNlbGVjdGlvbikge1xuICAgICAgc2NoZWR1bGUoY29sbGVjdGlvbiwgdHJhbnNmb3JtKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2VsZWN0aW9uLmludGVycnVwdCgpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIGdlc3R1cmUodGhpcywgYXJndW1lbnRzKVxuICAgICAgICAgICAgLnN0YXJ0KClcbiAgICAgICAgICAgIC56b29tKG51bGwsIHR5cGVvZiB0cmFuc2Zvcm0gPT09IFwiZnVuY3Rpb25cIiA/IHRyYW5zZm9ybS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogdHJhbnNmb3JtKVxuICAgICAgICAgICAgLmVuZCgpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHpvb20uc2NhbGVCeSA9IGZ1bmN0aW9uKHNlbGVjdGlvbiwgaykge1xuICAgIHpvb20uc2NhbGVUbyhzZWxlY3Rpb24sIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGswID0gdGhpcy5fX3pvb20uayxcbiAgICAgICAgICBrMSA9IHR5cGVvZiBrID09PSBcImZ1bmN0aW9uXCIgPyBrLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBrO1xuICAgICAgcmV0dXJuIGswICogazE7XG4gICAgfSk7XG4gIH07XG5cbiAgem9vbS5zY2FsZVRvID0gZnVuY3Rpb24oc2VsZWN0aW9uLCBrKSB7XG4gICAgem9vbS50cmFuc2Zvcm0oc2VsZWN0aW9uLCBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBlID0gZXh0ZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgICAgdDAgPSB0aGlzLl9fem9vbSxcbiAgICAgICAgICBwMCA9IGNlbnRyb2lkKGUpLFxuICAgICAgICAgIHAxID0gdDAuaW52ZXJ0KHAwKSxcbiAgICAgICAgICBrMSA9IHR5cGVvZiBrID09PSBcImZ1bmN0aW9uXCIgPyBrLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBrO1xuICAgICAgcmV0dXJuIGNvbnN0cmFpbih0cmFuc2xhdGUoc2NhbGUodDAsIGsxKSwgcDAsIHAxKSwgZSwgdHJhbnNsYXRlRXh0ZW50KTtcbiAgICB9KTtcbiAgfTtcblxuICB6b29tLnRyYW5zbGF0ZUJ5ID0gZnVuY3Rpb24oc2VsZWN0aW9uLCB4LCB5KSB7XG4gICAgem9vbS50cmFuc2Zvcm0oc2VsZWN0aW9uLCBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBjb25zdHJhaW4odGhpcy5fX3pvb20udHJhbnNsYXRlKFxuICAgICAgICB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogeCxcbiAgICAgICAgdHlwZW9mIHkgPT09IFwiZnVuY3Rpb25cIiA/IHkuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IHlcbiAgICAgICksIGV4dGVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCB0cmFuc2xhdGVFeHRlbnQpO1xuICAgIH0pO1xuICB9O1xuXG4gIHpvb20udHJhbnNsYXRlVG8gPSBmdW5jdGlvbihzZWxlY3Rpb24sIHgsIHkpIHtcbiAgICB6b29tLnRyYW5zZm9ybShzZWxlY3Rpb24sIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGUgPSBleHRlbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgICB0ID0gdGhpcy5fX3pvb20sXG4gICAgICAgICAgcCA9IGNlbnRyb2lkKGUpO1xuICAgICAgcmV0dXJuIGNvbnN0cmFpbihpZGVudGl0eS50cmFuc2xhdGUocFswXSwgcFsxXSkuc2NhbGUodC5rKS50cmFuc2xhdGUoXG4gICAgICAgIHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyAteC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogLXgsXG4gICAgICAgIHR5cGVvZiB5ID09PSBcImZ1bmN0aW9uXCIgPyAteS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogLXlcbiAgICAgICksIGUsIHRyYW5zbGF0ZUV4dGVudCk7XG4gICAgfSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gc2NhbGUodHJhbnNmb3JtLCBrKSB7XG4gICAgayA9IE1hdGgubWF4KHNjYWxlRXh0ZW50WzBdLCBNYXRoLm1pbihzY2FsZUV4dGVudFsxXSwgaykpO1xuICAgIHJldHVybiBrID09PSB0cmFuc2Zvcm0uayA/IHRyYW5zZm9ybSA6IG5ldyBUcmFuc2Zvcm0oaywgdHJhbnNmb3JtLngsIHRyYW5zZm9ybS55KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyYW5zbGF0ZSh0cmFuc2Zvcm0sIHAwLCBwMSkge1xuICAgIHZhciB4ID0gcDBbMF0gLSBwMVswXSAqIHRyYW5zZm9ybS5rLCB5ID0gcDBbMV0gLSBwMVsxXSAqIHRyYW5zZm9ybS5rO1xuICAgIHJldHVybiB4ID09PSB0cmFuc2Zvcm0ueCAmJiB5ID09PSB0cmFuc2Zvcm0ueSA/IHRyYW5zZm9ybSA6IG5ldyBUcmFuc2Zvcm0odHJhbnNmb3JtLmssIHgsIHkpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2VudHJvaWQoZXh0ZW50KSB7XG4gICAgcmV0dXJuIFsoK2V4dGVudFswXVswXSArICtleHRlbnRbMV1bMF0pIC8gMiwgKCtleHRlbnRbMF1bMV0gKyArZXh0ZW50WzFdWzFdKSAvIDJdO1xuICB9XG5cbiAgZnVuY3Rpb24gc2NoZWR1bGUodHJhbnNpdGlvbiwgdHJhbnNmb3JtLCBjZW50ZXIpIHtcbiAgICB0cmFuc2l0aW9uXG4gICAgICAgIC5vbihcInN0YXJ0Lnpvb21cIiwgZnVuY3Rpb24oKSB7IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKS5zdGFydCgpOyB9KVxuICAgICAgICAub24oXCJpbnRlcnJ1cHQuem9vbSBlbmQuem9vbVwiLCBmdW5jdGlvbigpIHsgZ2VzdHVyZSh0aGlzLCBhcmd1bWVudHMpLmVuZCgpOyB9KVxuICAgICAgICAudHdlZW4oXCJ6b29tXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciB0aGF0ID0gdGhpcyxcbiAgICAgICAgICAgICAgYXJncyA9IGFyZ3VtZW50cyxcbiAgICAgICAgICAgICAgZyA9IGdlc3R1cmUodGhhdCwgYXJncyksXG4gICAgICAgICAgICAgIGUgPSBleHRlbnQuYXBwbHkodGhhdCwgYXJncyksXG4gICAgICAgICAgICAgIHAgPSBjZW50ZXIgfHwgY2VudHJvaWQoZSksXG4gICAgICAgICAgICAgIHcgPSBNYXRoLm1heChlWzFdWzBdIC0gZVswXVswXSwgZVsxXVsxXSAtIGVbMF1bMV0pLFxuICAgICAgICAgICAgICBhID0gdGhhdC5fX3pvb20sXG4gICAgICAgICAgICAgIGIgPSB0eXBlb2YgdHJhbnNmb3JtID09PSBcImZ1bmN0aW9uXCIgPyB0cmFuc2Zvcm0uYXBwbHkodGhhdCwgYXJncykgOiB0cmFuc2Zvcm0sXG4gICAgICAgICAgICAgIGkgPSBpbnRlcnBvbGF0ZShhLmludmVydChwKS5jb25jYXQodyAvIGEuayksIGIuaW52ZXJ0KHApLmNvbmNhdCh3IC8gYi5rKSk7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICAgIGlmICh0ID09PSAxKSB0ID0gYjsgLy8gQXZvaWQgcm91bmRpbmcgZXJyb3Igb24gZW5kLlxuICAgICAgICAgICAgZWxzZSB7IHZhciBsID0gaSh0KSwgayA9IHcgLyBsWzJdOyB0ID0gbmV3IFRyYW5zZm9ybShrLCBwWzBdIC0gbFswXSAqIGssIHBbMV0gLSBsWzFdICogayk7IH1cbiAgICAgICAgICAgIGcuem9vbShudWxsLCB0KTtcbiAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdlc3R1cmUodGhhdCwgYXJncykge1xuICAgIGZvciAodmFyIGkgPSAwLCBuID0gZ2VzdHVyZXMubGVuZ3RoLCBnOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKGcgPSBnZXN0dXJlc1tpXSkudGhhdCA9PT0gdGhhdCkge1xuICAgICAgICByZXR1cm4gZztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ldyBHZXN0dXJlKHRoYXQsIGFyZ3MpO1xuICB9XG5cbiAgZnVuY3Rpb24gR2VzdHVyZSh0aGF0LCBhcmdzKSB7XG4gICAgdGhpcy50aGF0ID0gdGhhdDtcbiAgICB0aGlzLmFyZ3MgPSBhcmdzO1xuICAgIHRoaXMuaW5kZXggPSAtMTtcbiAgICB0aGlzLmFjdGl2ZSA9IDA7XG4gICAgdGhpcy5leHRlbnQgPSBleHRlbnQuYXBwbHkodGhhdCwgYXJncyk7XG4gIH1cblxuICBHZXN0dXJlLnByb3RvdHlwZSA9IHtcbiAgICBzdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoKyt0aGlzLmFjdGl2ZSA9PT0gMSkge1xuICAgICAgICB0aGlzLmluZGV4ID0gZ2VzdHVyZXMucHVzaCh0aGlzKSAtIDE7XG4gICAgICAgIHRoaXMuZW1pdChcInN0YXJ0XCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICB6b29tOiBmdW5jdGlvbihrZXksIHRyYW5zZm9ybSkge1xuICAgICAgaWYgKHRoaXMubW91c2UgJiYga2V5ICE9PSBcIm1vdXNlXCIpIHRoaXMubW91c2VbMV0gPSB0cmFuc2Zvcm0uaW52ZXJ0KHRoaXMubW91c2VbMF0pO1xuICAgICAgaWYgKHRoaXMudG91Y2gwICYmIGtleSAhPT0gXCJ0b3VjaFwiKSB0aGlzLnRvdWNoMFsxXSA9IHRyYW5zZm9ybS5pbnZlcnQodGhpcy50b3VjaDBbMF0pO1xuICAgICAgaWYgKHRoaXMudG91Y2gxICYmIGtleSAhPT0gXCJ0b3VjaFwiKSB0aGlzLnRvdWNoMVsxXSA9IHRyYW5zZm9ybS5pbnZlcnQodGhpcy50b3VjaDFbMF0pO1xuICAgICAgdGhpcy50aGF0Ll9fem9vbSA9IHRyYW5zZm9ybTtcbiAgICAgIHRoaXMuZW1pdChcInpvb21cIik7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIGVuZDogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoLS10aGlzLmFjdGl2ZSA9PT0gMCkge1xuICAgICAgICBnZXN0dXJlcy5zcGxpY2UodGhpcy5pbmRleCwgMSk7XG4gICAgICAgIHRoaXMuaW5kZXggPSAtMTtcbiAgICAgICAgdGhpcy5lbWl0KFwiZW5kXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBlbWl0OiBmdW5jdGlvbih0eXBlKSB7XG4gICAgICBjdXN0b21FdmVudChuZXcgWm9vbUV2ZW50KHpvb20sIHR5cGUsIHRoaXMudGhhdC5fX3pvb20pLCBsaXN0ZW5lcnMuYXBwbHksIGxpc3RlbmVycywgW3R5cGUsIHRoaXMudGhhdCwgdGhpcy5hcmdzXSk7XG4gICAgfVxuICB9O1xuXG4gIGZ1bmN0aW9uIHdoZWVsZWQoKSB7XG4gICAgaWYgKCFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciBnID0gZ2VzdHVyZSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICB0ID0gdGhpcy5fX3pvb20sXG4gICAgICAgIGsgPSBNYXRoLm1heChzY2FsZUV4dGVudFswXSwgTWF0aC5taW4oc2NhbGVFeHRlbnRbMV0sIHQuayAqIE1hdGgucG93KDIsIHdoZWVsRGVsdGEuYXBwbHkodGhpcywgYXJndW1lbnRzKSkpKSxcbiAgICAgICAgcCA9IG1vdXNlKHRoaXMpO1xuXG4gICAgLy8gSWYgdGhlIG1vdXNlIGlzIGluIHRoZSBzYW1lIGxvY2F0aW9uIGFzIGJlZm9yZSwgcmV1c2UgaXQuXG4gICAgLy8gSWYgdGhlcmUgd2VyZSByZWNlbnQgd2hlZWwgZXZlbnRzLCByZXNldCB0aGUgd2hlZWwgaWRsZSB0aW1lb3V0LlxuICAgIGlmIChnLndoZWVsKSB7XG4gICAgICBpZiAoZy5tb3VzZVswXVswXSAhPT0gcFswXSB8fCBnLm1vdXNlWzBdWzFdICE9PSBwWzFdKSB7XG4gICAgICAgIGcubW91c2VbMV0gPSB0LmludmVydChnLm1vdXNlWzBdID0gcCk7XG4gICAgICB9XG4gICAgICBjbGVhclRpbWVvdXQoZy53aGVlbCk7XG4gICAgfVxuXG4gICAgLy8gSWYgdGhpcyB3aGVlbCBldmVudCB3b27igJl0IHRyaWdnZXIgYSB0cmFuc2Zvcm0gY2hhbmdlLCBpZ25vcmUgaXQuXG4gICAgZWxzZSBpZiAodC5rID09PSBrKSByZXR1cm47XG5cbiAgICAvLyBPdGhlcndpc2UsIGNhcHR1cmUgdGhlIG1vdXNlIHBvaW50IGFuZCBsb2NhdGlvbiBhdCB0aGUgc3RhcnQuXG4gICAgZWxzZSB7XG4gICAgICBnLm1vdXNlID0gW3AsIHQuaW52ZXJ0KHApXTtcbiAgICAgIGludGVycnVwdCh0aGlzKTtcbiAgICAgIGcuc3RhcnQoKTtcbiAgICB9XG5cbiAgICBub2V2ZW50KCk7XG4gICAgZy53aGVlbCA9IHNldFRpbWVvdXQod2hlZWxpZGxlZCwgd2hlZWxEZWxheSk7XG4gICAgZy56b29tKFwibW91c2VcIiwgY29uc3RyYWluKHRyYW5zbGF0ZShzY2FsZSh0LCBrKSwgZy5tb3VzZVswXSwgZy5tb3VzZVsxXSksIGcuZXh0ZW50LCB0cmFuc2xhdGVFeHRlbnQpKTtcblxuICAgIGZ1bmN0aW9uIHdoZWVsaWRsZWQoKSB7XG4gICAgICBnLndoZWVsID0gbnVsbDtcbiAgICAgIGcuZW5kKCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gbW91c2Vkb3duZWQoKSB7XG4gICAgaWYgKHRvdWNoZW5kaW5nIHx8ICFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciBnID0gZ2VzdHVyZSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICB2ID0gc2VsZWN0KGV2ZW50LnZpZXcpLm9uKFwibW91c2Vtb3ZlLnpvb21cIiwgbW91c2Vtb3ZlZCwgdHJ1ZSkub24oXCJtb3VzZXVwLnpvb21cIiwgbW91c2V1cHBlZCwgdHJ1ZSksXG4gICAgICAgIHAgPSBtb3VzZSh0aGlzKSxcbiAgICAgICAgeDAgPSBldmVudC5jbGllbnRYLFxuICAgICAgICB5MCA9IGV2ZW50LmNsaWVudFk7XG5cbiAgICBkcmFnRGlzYWJsZShldmVudC52aWV3KTtcbiAgICBub3Byb3BhZ2F0aW9uKCk7XG4gICAgZy5tb3VzZSA9IFtwLCB0aGlzLl9fem9vbS5pbnZlcnQocCldO1xuICAgIGludGVycnVwdCh0aGlzKTtcbiAgICBnLnN0YXJ0KCk7XG5cbiAgICBmdW5jdGlvbiBtb3VzZW1vdmVkKCkge1xuICAgICAgbm9ldmVudCgpO1xuICAgICAgaWYgKCFnLm1vdmVkKSB7XG4gICAgICAgIHZhciBkeCA9IGV2ZW50LmNsaWVudFggLSB4MCwgZHkgPSBldmVudC5jbGllbnRZIC0geTA7XG4gICAgICAgIGcubW92ZWQgPSBkeCAqIGR4ICsgZHkgKiBkeSA+IGNsaWNrRGlzdGFuY2UyO1xuICAgICAgfVxuICAgICAgZy56b29tKFwibW91c2VcIiwgY29uc3RyYWluKHRyYW5zbGF0ZShnLnRoYXQuX196b29tLCBnLm1vdXNlWzBdID0gbW91c2UoZy50aGF0KSwgZy5tb3VzZVsxXSksIGcuZXh0ZW50LCB0cmFuc2xhdGVFeHRlbnQpKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBtb3VzZXVwcGVkKCkge1xuICAgICAgdi5vbihcIm1vdXNlbW92ZS56b29tIG1vdXNldXAuem9vbVwiLCBudWxsKTtcbiAgICAgIGRyYWdFbmFibGUoZXZlbnQudmlldywgZy5tb3ZlZCk7XG4gICAgICBub2V2ZW50KCk7XG4gICAgICBnLmVuZCgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGRibGNsaWNrZWQoKSB7XG4gICAgaWYgKCFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciB0MCA9IHRoaXMuX196b29tLFxuICAgICAgICBwMCA9IG1vdXNlKHRoaXMpLFxuICAgICAgICBwMSA9IHQwLmludmVydChwMCksXG4gICAgICAgIGsxID0gdDAuayAqIChldmVudC5zaGlmdEtleSA/IDAuNSA6IDIpLFxuICAgICAgICB0MSA9IGNvbnN0cmFpbih0cmFuc2xhdGUoc2NhbGUodDAsIGsxKSwgcDAsIHAxKSwgZXh0ZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHRyYW5zbGF0ZUV4dGVudCk7XG5cbiAgICBub2V2ZW50KCk7XG4gICAgaWYgKGR1cmF0aW9uID4gMCkgc2VsZWN0KHRoaXMpLnRyYW5zaXRpb24oKS5kdXJhdGlvbihkdXJhdGlvbikuY2FsbChzY2hlZHVsZSwgdDEsIHAwKTtcbiAgICBlbHNlIHNlbGVjdCh0aGlzKS5jYWxsKHpvb20udHJhbnNmb3JtLCB0MSk7XG4gIH1cblxuICBmdW5jdGlvbiB0b3VjaHN0YXJ0ZWQoKSB7XG4gICAgaWYgKCFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciBnID0gZ2VzdHVyZSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICB0b3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXMsXG4gICAgICAgIHN0YXJ0ZWQsXG4gICAgICAgIG4gPSB0b3VjaGVzLmxlbmd0aCwgaSwgdCwgcDtcblxuICAgIG5vcHJvcGFnYXRpb24oKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICB0ID0gdG91Y2hlc1tpXSwgcCA9IHRvdWNoKHRoaXMsIHRvdWNoZXMsIHQuaWRlbnRpZmllcik7XG4gICAgICBwID0gW3AsIHRoaXMuX196b29tLmludmVydChwKSwgdC5pZGVudGlmaWVyXTtcbiAgICAgIGlmICghZy50b3VjaDApIGcudG91Y2gwID0gcCwgc3RhcnRlZCA9IHRydWU7XG4gICAgICBlbHNlIGlmICghZy50b3VjaDEpIGcudG91Y2gxID0gcDtcbiAgICB9XG5cbiAgICAvLyBJZiB0aGlzIGlzIGEgZGJsdGFwLCByZXJvdXRlIHRvIHRoZSAob3B0aW9uYWwpIGRibGNsaWNrLnpvb20gaGFuZGxlci5cbiAgICBpZiAodG91Y2hzdGFydGluZykge1xuICAgICAgdG91Y2hzdGFydGluZyA9IGNsZWFyVGltZW91dCh0b3VjaHN0YXJ0aW5nKTtcbiAgICAgIGlmICghZy50b3VjaDEpIHtcbiAgICAgICAgZy5lbmQoKTtcbiAgICAgICAgcCA9IHNlbGVjdCh0aGlzKS5vbihcImRibGNsaWNrLnpvb21cIik7XG4gICAgICAgIGlmIChwKSBwLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoc3RhcnRlZCkge1xuICAgICAgdG91Y2hzdGFydGluZyA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IHRvdWNoc3RhcnRpbmcgPSBudWxsOyB9LCB0b3VjaERlbGF5KTtcbiAgICAgIGludGVycnVwdCh0aGlzKTtcbiAgICAgIGcuc3RhcnQoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB0b3VjaG1vdmVkKCkge1xuICAgIHZhciBnID0gZ2VzdHVyZSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICB0b3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXMsXG4gICAgICAgIG4gPSB0b3VjaGVzLmxlbmd0aCwgaSwgdCwgcCwgbDtcblxuICAgIG5vZXZlbnQoKTtcbiAgICBpZiAodG91Y2hzdGFydGluZykgdG91Y2hzdGFydGluZyA9IGNsZWFyVGltZW91dCh0b3VjaHN0YXJ0aW5nKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICB0ID0gdG91Y2hlc1tpXSwgcCA9IHRvdWNoKHRoaXMsIHRvdWNoZXMsIHQuaWRlbnRpZmllcik7XG4gICAgICBpZiAoZy50b3VjaDAgJiYgZy50b3VjaDBbMl0gPT09IHQuaWRlbnRpZmllcikgZy50b3VjaDBbMF0gPSBwO1xuICAgICAgZWxzZSBpZiAoZy50b3VjaDEgJiYgZy50b3VjaDFbMl0gPT09IHQuaWRlbnRpZmllcikgZy50b3VjaDFbMF0gPSBwO1xuICAgIH1cbiAgICB0ID0gZy50aGF0Ll9fem9vbTtcbiAgICBpZiAoZy50b3VjaDEpIHtcbiAgICAgIHZhciBwMCA9IGcudG91Y2gwWzBdLCBsMCA9IGcudG91Y2gwWzFdLFxuICAgICAgICAgIHAxID0gZy50b3VjaDFbMF0sIGwxID0gZy50b3VjaDFbMV0sXG4gICAgICAgICAgZHAgPSAoZHAgPSBwMVswXSAtIHAwWzBdKSAqIGRwICsgKGRwID0gcDFbMV0gLSBwMFsxXSkgKiBkcCxcbiAgICAgICAgICBkbCA9IChkbCA9IGwxWzBdIC0gbDBbMF0pICogZGwgKyAoZGwgPSBsMVsxXSAtIGwwWzFdKSAqIGRsO1xuICAgICAgdCA9IHNjYWxlKHQsIE1hdGguc3FydChkcCAvIGRsKSk7XG4gICAgICBwID0gWyhwMFswXSArIHAxWzBdKSAvIDIsIChwMFsxXSArIHAxWzFdKSAvIDJdO1xuICAgICAgbCA9IFsobDBbMF0gKyBsMVswXSkgLyAyLCAobDBbMV0gKyBsMVsxXSkgLyAyXTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZy50b3VjaDApIHAgPSBnLnRvdWNoMFswXSwgbCA9IGcudG91Y2gwWzFdO1xuICAgIGVsc2UgcmV0dXJuO1xuICAgIGcuem9vbShcInRvdWNoXCIsIGNvbnN0cmFpbih0cmFuc2xhdGUodCwgcCwgbCksIGcuZXh0ZW50LCB0cmFuc2xhdGVFeHRlbnQpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRvdWNoZW5kZWQoKSB7XG4gICAgdmFyIGcgPSBnZXN0dXJlKHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgIHRvdWNoZXMgPSBldmVudC5jaGFuZ2VkVG91Y2hlcyxcbiAgICAgICAgbiA9IHRvdWNoZXMubGVuZ3RoLCBpLCB0O1xuXG4gICAgbm9wcm9wYWdhdGlvbigpO1xuICAgIGlmICh0b3VjaGVuZGluZykgY2xlYXJUaW1lb3V0KHRvdWNoZW5kaW5nKTtcbiAgICB0b3VjaGVuZGluZyA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IHRvdWNoZW5kaW5nID0gbnVsbDsgfSwgdG91Y2hEZWxheSk7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgdCA9IHRvdWNoZXNbaV07XG4gICAgICBpZiAoZy50b3VjaDAgJiYgZy50b3VjaDBbMl0gPT09IHQuaWRlbnRpZmllcikgZGVsZXRlIGcudG91Y2gwO1xuICAgICAgZWxzZSBpZiAoZy50b3VjaDEgJiYgZy50b3VjaDFbMl0gPT09IHQuaWRlbnRpZmllcikgZGVsZXRlIGcudG91Y2gxO1xuICAgIH1cbiAgICBpZiAoZy50b3VjaDEgJiYgIWcudG91Y2gwKSBnLnRvdWNoMCA9IGcudG91Y2gxLCBkZWxldGUgZy50b3VjaDE7XG4gICAgaWYgKGcudG91Y2gwKSBnLnRvdWNoMFsxXSA9IHRoaXMuX196b29tLmludmVydChnLnRvdWNoMFswXSk7XG4gICAgZWxzZSBnLmVuZCgpO1xuICB9XG5cbiAgem9vbS53aGVlbERlbHRhID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHdoZWVsRGVsdGEgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgem9vbSkgOiB3aGVlbERlbHRhO1xuICB9O1xuXG4gIHpvb20uZmlsdGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGZpbHRlciA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgem9vbSkgOiBmaWx0ZXI7XG4gIH07XG5cbiAgem9vbS50b3VjaGFibGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodG91Y2hhYmxlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCghIV8pLCB6b29tKSA6IHRvdWNoYWJsZTtcbiAgfTtcblxuICB6b29tLmV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChleHRlbnQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KFtbK19bMF1bMF0sICtfWzBdWzFdXSwgWytfWzFdWzBdLCArX1sxXVsxXV1dKSwgem9vbSkgOiBleHRlbnQ7XG4gIH07XG5cbiAgem9vbS5zY2FsZUV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzY2FsZUV4dGVudFswXSA9ICtfWzBdLCBzY2FsZUV4dGVudFsxXSA9ICtfWzFdLCB6b29tKSA6IFtzY2FsZUV4dGVudFswXSwgc2NhbGVFeHRlbnRbMV1dO1xuICB9O1xuXG4gIHpvb20udHJhbnNsYXRlRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRyYW5zbGF0ZUV4dGVudFswXVswXSA9ICtfWzBdWzBdLCB0cmFuc2xhdGVFeHRlbnRbMV1bMF0gPSArX1sxXVswXSwgdHJhbnNsYXRlRXh0ZW50WzBdWzFdID0gK19bMF1bMV0sIHRyYW5zbGF0ZUV4dGVudFsxXVsxXSA9ICtfWzFdWzFdLCB6b29tKSA6IFtbdHJhbnNsYXRlRXh0ZW50WzBdWzBdLCB0cmFuc2xhdGVFeHRlbnRbMF1bMV1dLCBbdHJhbnNsYXRlRXh0ZW50WzFdWzBdLCB0cmFuc2xhdGVFeHRlbnRbMV1bMV1dXTtcbiAgfTtcblxuICB6b29tLmNvbnN0cmFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjb25zdHJhaW4gPSBfLCB6b29tKSA6IGNvbnN0cmFpbjtcbiAgfTtcblxuICB6b29tLmR1cmF0aW9uID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGR1cmF0aW9uID0gK18sIHpvb20pIDogZHVyYXRpb247XG4gIH07XG5cbiAgem9vbS5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpbnRlcnBvbGF0ZSA9IF8sIHpvb20pIDogaW50ZXJwb2xhdGU7XG4gIH07XG5cbiAgem9vbS5vbiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZSA9IGxpc3RlbmVycy5vbi5hcHBseShsaXN0ZW5lcnMsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIHZhbHVlID09PSBsaXN0ZW5lcnMgPyB6b29tIDogdmFsdWU7XG4gIH07XG5cbiAgem9vbS5jbGlja0Rpc3RhbmNlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNsaWNrRGlzdGFuY2UyID0gKF8gPSArXykgKiBfLCB6b29tKSA6IE1hdGguc3FydChjbGlja0Rpc3RhbmNlMik7XG4gIH07XG5cbiAgcmV0dXJuIHpvb207XG59XG4iLCJleHBvcnQgdmFyIG5hbWUgPSBcImQzXCI7XG5leHBvcnQgdmFyIHZlcnNpb24gPSBcIjUuOS4yXCI7XG5leHBvcnQgdmFyIGRlc2NyaXB0aW9uID0gXCJEYXRhLURyaXZlbiBEb2N1bWVudHNcIjtcbmV4cG9ydCB2YXIga2V5d29yZHMgPSBbXCJkb21cIixcInZpc3VhbGl6YXRpb25cIixcInN2Z1wiLFwiYW5pbWF0aW9uXCIsXCJjYW52YXNcIl07XG5leHBvcnQgdmFyIGhvbWVwYWdlID0gXCJodHRwczovL2QzanMub3JnXCI7XG5leHBvcnQgdmFyIGxpY2Vuc2UgPSBcIkJTRC0zLUNsYXVzZVwiO1xuZXhwb3J0IHZhciBhdXRob3IgPSB7XCJuYW1lXCI6XCJNaWtlIEJvc3RvY2tcIixcInVybFwiOlwiaHR0cHM6Ly9ib3N0Lm9ja3Mub3JnL21pa2VcIn07XG5leHBvcnQgdmFyIG1haW4gPSBcImRpc3QvZDMubm9kZS5qc1wiO1xuZXhwb3J0IHZhciB1bnBrZyA9IFwiZGlzdC9kMy5taW4uanNcIjtcbmV4cG9ydCB2YXIganNkZWxpdnIgPSBcImRpc3QvZDMubWluLmpzXCI7XG5leHBvcnQgdmFyIG1vZHVsZSA9IFwiaW5kZXguanNcIjtcbmV4cG9ydCB2YXIgcmVwb3NpdG9yeSA9IHtcInR5cGVcIjpcImdpdFwiLFwidXJsXCI6XCJodHRwczovL2dpdGh1Yi5jb20vZDMvZDMuZ2l0XCJ9O1xuZXhwb3J0IHZhciBzY3JpcHRzID0ge1wicHJldGVzdFwiOlwicmltcmFmIGRpc3QgJiYgbWtkaXIgZGlzdCAmJiBqc29uMm1vZHVsZSBwYWNrYWdlLmpzb24gPiBkaXN0L3BhY2thZ2UuanMgJiYgbm9kZSByb2xsdXAubm9kZVwiLFwidGVzdFwiOlwidGFwZSAndGVzdC8qKi8qLXRlc3QuanMnXCIsXCJwcmVwdWJsaXNoT25seVwiOlwieWFybiB0ZXN0ICYmIHJvbGx1cCAtY1wiLFwicG9zdHB1Ymxpc2hcIjpcImdpdCBwdXNoICYmIGdpdCBwdXNoIC0tdGFncyAmJiBjZCAuLi9kMy5naXRodWIuY29tICYmIGdpdCBwdWxsICYmIGNwIC4uL2QzL2Rpc3QvZDMuanMgZDMudjUuanMgJiYgY3AgLi4vZDMvZGlzdC9kMy5taW4uanMgZDMudjUubWluLmpzICYmIGdpdCBhZGQgZDMudjUuanMgZDMudjUubWluLmpzICYmIGdpdCBjb21taXQgLW0gXFxcImQzICR7bnBtX3BhY2thZ2VfdmVyc2lvbn1cXFwiICYmIGdpdCBwdXNoICYmIGNkIC0gJiYgY2QgLi4vZDMtYm93ZXIgJiYgZ2l0IHB1bGwgJiYgY3AgLi4vZDMvTElDRU5TRSAuLi9kMy9SRUFETUUubWQgLi4vZDMvZGlzdC9kMy5qcyAuLi9kMy9kaXN0L2QzLm1pbi5qcyAuICYmIGdpdCBhZGQgLS0gTElDRU5TRSBSRUFETUUubWQgZDMuanMgZDMubWluLmpzICYmIGdpdCBjb21taXQgLW0gXFxcIiR7bnBtX3BhY2thZ2VfdmVyc2lvbn1cXFwiICYmIGdpdCB0YWcgLWFtIFxcXCIke25wbV9wYWNrYWdlX3ZlcnNpb259XFxcIiB2JHtucG1fcGFja2FnZV92ZXJzaW9ufSAmJiBnaXQgcHVzaCAmJiBnaXQgcHVzaCAtLXRhZ3MgJiYgY2QgLSAmJiB6aXAgLWogZGlzdC9kMy56aXAgLS0gTElDRU5TRSBSRUFETUUubWQgQVBJLm1kIENIQU5HRVMubWQgZGlzdC9kMy5qcyBkaXN0L2QzLm1pbi5qc1wifTtcbmV4cG9ydCB2YXIgZGV2RGVwZW5kZW5jaWVzID0ge1wianNvbjJtb2R1bGVcIjpcIjAuMFwiLFwicmltcmFmXCI6XCIyXCIsXCJyb2xsdXBcIjpcIjAuNjRcIixcInJvbGx1cC1wbHVnaW4tYXNjaWlcIjpcIjAuMFwiLFwicm9sbHVwLXBsdWdpbi1ub2RlLXJlc29sdmVcIjpcIjNcIixcInJvbGx1cC1wbHVnaW4tdGVyc2VyXCI6XCIxXCIsXCJ0YXBlXCI6XCI0XCJ9O1xuZXhwb3J0IHZhciBkZXBlbmRlbmNpZXMgPSB7XCJkMy1hcnJheVwiOlwiMVwiLFwiZDMtYXhpc1wiOlwiMVwiLFwiZDMtYnJ1c2hcIjpcIjFcIixcImQzLWNob3JkXCI6XCIxXCIsXCJkMy1jb2xsZWN0aW9uXCI6XCIxXCIsXCJkMy1jb2xvclwiOlwiMVwiLFwiZDMtY29udG91clwiOlwiMVwiLFwiZDMtZGlzcGF0Y2hcIjpcIjFcIixcImQzLWRyYWdcIjpcIjFcIixcImQzLWRzdlwiOlwiMVwiLFwiZDMtZWFzZVwiOlwiMVwiLFwiZDMtZmV0Y2hcIjpcIjFcIixcImQzLWZvcmNlXCI6XCIxXCIsXCJkMy1mb3JtYXRcIjpcIjFcIixcImQzLWdlb1wiOlwiMVwiLFwiZDMtaGllcmFyY2h5XCI6XCIxXCIsXCJkMy1pbnRlcnBvbGF0ZVwiOlwiMVwiLFwiZDMtcGF0aFwiOlwiMVwiLFwiZDMtcG9seWdvblwiOlwiMVwiLFwiZDMtcXVhZHRyZWVcIjpcIjFcIixcImQzLXJhbmRvbVwiOlwiMVwiLFwiZDMtc2NhbGVcIjpcIjJcIixcImQzLXNjYWxlLWNocm9tYXRpY1wiOlwiMVwiLFwiZDMtc2VsZWN0aW9uXCI6XCIxXCIsXCJkMy1zaGFwZVwiOlwiMVwiLFwiZDMtdGltZVwiOlwiMVwiLFwiZDMtdGltZS1mb3JtYXRcIjpcIjJcIixcImQzLXRpbWVyXCI6XCIxXCIsXCJkMy10cmFuc2l0aW9uXCI6XCIxXCIsXCJkMy12b3Jvbm9pXCI6XCIxXCIsXCJkMy16b29tXCI6XCIxXCJ9O1xuIiwiZXhwb3J0IHt2ZXJzaW9ufSBmcm9tIFwiLi9kaXN0L3BhY2thZ2VcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1hcnJheVwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWF4aXNcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1icnVzaFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWNob3JkXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtY29sbGVjdGlvblwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWNvbG9yXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtY29udG91clwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWRpc3BhdGNoXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtZHJhZ1wiO1xuZXhwb3J0ICogZnJvbSBcImQzLWRzdlwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWVhc2VcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1mZXRjaFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWZvcmNlXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtZm9ybWF0XCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtZ2VvXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtaGllcmFyY2h5XCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1wYXRoXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtcG9seWdvblwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXF1YWR0cmVlXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtcmFuZG9tXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtc2NhbGVcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1zY2FsZS1jaHJvbWF0aWNcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1zaGFwZVwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXRpbWVcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy10aW1lLWZvcm1hdFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXRpbWVyXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtdHJhbnNpdGlvblwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXZvcm9ub2lcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy16b29tXCI7XG4iLCJpbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbm5lY3Rpb24ge1xuXG4gIC8vIC8vZGV0ZWN0IHdoZXRoZXIgc2VsZWN0ZWQgbm9kZSBtYXRjaCBvciBub3QsIGFuZCBpZiBtYXRjaGVkLCBtb3ZlIHRvIHNlbGVjdGVkIG5vZGUuXG4gIC8vIHN0YXRpYyBnb1RvTWF0Y2hlZE5vZGUoc2VsZWN0ZWROYW1lKSB7XG4gIC8vICAgbGV0IHNlbGVjdE5vZGUgPSBkMy5zZWxlY3RBbGwoXCJjaXJjbGVcIilbXCJfZ3JvdXBzXCJdWzBdXG4gIC8vICAgZm9yIChsZXQgaSA9IDAsIGwgPSBkYXRhU2V0Lm5vZGVzLmxlbmd0aDsgbCA+IGk7IGkrKykge1xuICAvLyAgICAgaWYgKGRhdGFTZXQubm9kZXNbaV0uaWQgPT09IHNlbGVjdGVkTmFtZSkge1xuICAvLyAgICAgICBzZWxlY3ROb2RlID0gc2VsZWN0Tm9kZVtpXTtcbiAgLy8gICAgICAgbGV0IHNlbGVjdE5vZGVYID0gc2VsZWN0Tm9kZS5jeC5hbmltVmFsLnZhbHVlO1xuICAvLyAgICAgICBsZXQgc2VsZWN0Tm9kZVkgPSBzZWxlY3ROb2RlLmN5LmFuaW1WYWwudmFsdWU7XG4gIC8vXG4gIC8vICAgICAgIC8vbW92ZSB0byBzZWxlY3RlZCBub2RlXG4gIC8vICAgICAgIC8vdHJhbnNsYXRlKDEwMCw1MCk65Y6f54K544KSMTAwLDUw56e75YuV44GZ44KL44Go44GE44GG5oSP5ZGzXG4gIC8vICAgICAgIC8vbGV0IHNlcmNoZWRUcmFuc2Zvcm0gPSBkMy56b29tSWRlbnRpdHlcbiAgLy8gICAgICAgLy8gICAgLnRyYW5zbGF0ZSgtc2VsZWN0Tm9kZVgrd2lkdGgvMiwgLXNlbGVjdE5vZGVZK2hlaWdodC8yKVxuICAvLyAgICAgICAvLyAgICAuc2NhbGUoMSk7XG4gIC8vXG4gIC8vICAgICAgIGxldCBzY2FsZVZhbCA9IDAuMjtcbiAgLy8gICAgICAgbGV0IHNlcmNoZWRUcmFuc2Zvcm0gPSBkMy56b29tSWRlbnRpdHlcbiAgLy8gICAgICAgICAgIC50cmFuc2xhdGUoLXNlbGVjdE5vZGVYICogc2NhbGVWYWwgKyB3aWR0aCAvIDIsIC1zZWxlY3ROb2RlWSAqIHNjYWxlVmFsICsgaGVpZ2h0IC8gMilcbiAgLy8gICAgICAgICAgIC5zY2FsZShzY2FsZVZhbCk7XG4gIC8vXG4gIC8vICAgICAgIHN2Zy5jYWxsKHpvb21faGFuZGxlci50cmFuc2Zvcm0sIHNlcmNoZWRUcmFuc2Zvcm0pO1xuICAvLyAgICAgfVxuICAvLyAgIH1cbiAgLy8gfVxuXG5cbiAgc3RhdGljIG1ha2VOb2RlTGlzdChub2RlSW5kZXgsIGxpbmtEYXRhKSB7XG5cbiAgICBsZXQgc2FtZU5vZGVzID0gW107XG4gICAgbGV0IGRpZmZOb2RlcyA9IFtdO1xuXG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBsaW5rRGF0YS5sZW5ndGg7IGwgPiBpOyBpKyspIHtcbiAgICAgIGlmIChsaW5rRGF0YVtpXS50YXJnZXQuaW5kZXggPT09IG5vZGVJbmRleCkge1xuICAgICAgICBpZiAobGlua0RhdGFbaV0uc291cmNlLmdyb3VwX2lkID09PVxuICAgICAgICAgICAgbGlua0RhdGFbaV0udGFyZ2V0Lmdyb3VwX2lkKSB7XG4gICAgICAgICAgc2FtZU5vZGVzLnB1c2gobGlua0RhdGFbaV0uc291cmNlLm5hbWUpO1xuICAgICAgICAgIC8vY29uc29sZS5sb2cobGlua0RhdGFbaV0uc291cmNlLm5hbWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZGlmZk5vZGVzLnB1c2gobGlua0RhdGFbaV0uc291cmNlLm5hbWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobGlua0RhdGFbaV0uc291cmNlLmluZGV4ID09PSBub2RlSW5kZXgpIHtcbiAgICAgICAgaWYgKGxpbmtEYXRhW2ldLnNvdXJjZS5ncm91cF9pZCA9PT1cbiAgICAgICAgICAgIGxpbmtEYXRhW2ldLnRhcmdldC5ncm91cF9pZCkge1xuICAgICAgICAgIHNhbWVOb2Rlcy5wdXNoKGxpbmtEYXRhW2ldLnRhcmdldC5uYW1lKTtcbiAgICAgICAgICAvL2NvbnNvbGUubG9nKGxpbmtEYXRhW2ldLnNvdXJjZS5uYW1lKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRpZmZOb2Rlcy5wdXNoKGxpbmtEYXRhW2ldLnRhcmdldC5uYW1lKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHNhbWVOb2RlcyA9IHNhbWVOb2Rlcy5zb3J0KCk7XG4gICAgZGlmZk5vZGVzID0gZGlmZk5vZGVzLnNvcnQoKTtcbiAgICByZXR1cm4ge3NhbWVOb2Rlczogc2FtZU5vZGVzLCBkaWZmTm9kZXM6IGRpZmZOb2Rlc31cbiAgfVxuXG5cbiAgc3RhdGljIG1ha2VOb2RlTGlzdDJuZChub2RlSW5kZXgsIGxpbmtEYXRhLCBjbGlja2VkTm9kZUNhdGVnb3J5KSB7XG5cbiAgICBsZXQgc2FtZU5vZGVzID0gW107XG4gICAgbGV0IGRpZmZOb2RlcyA9IFtdO1xuXG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBsaW5rRGF0YS5sZW5ndGg7IGwgPiBpOyBpKyspIHtcbiAgICAgIGlmIChsaW5rRGF0YVtpXS50YXJnZXQuaW5kZXggPT09IG5vZGVJbmRleCkge1xuICAgICAgICBpZiAobGlua0RhdGFbaV0uc291cmNlLmdyb3VwX2lkID09PVxuICAgICAgICAgICAgY2xpY2tlZE5vZGVDYXRlZ29yeSkge1xuICAgICAgICAgIHNhbWVOb2Rlcy5wdXNoKGxpbmtEYXRhW2ldLnNvdXJjZS5uYW1lKTtcbiAgICAgICAgICAvL2NvbnNvbGUubG9nKGxpbmtEYXRhW2ldLnNvdXJjZS5uYW1lKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRpZmZOb2Rlcy5wdXNoKGxpbmtEYXRhW2ldLnNvdXJjZS5uYW1lKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGxpbmtEYXRhW2ldLnNvdXJjZS5pbmRleCA9PT0gbm9kZUluZGV4KSB7XG4gICAgICAgIGlmIChsaW5rRGF0YVtpXS50YXJnZXQuZ3JvdXBfaWQgPT09XG4gICAgICAgICAgICBjbGlja2VkTm9kZUNhdGVnb3J5KSB7XG4gICAgICAgICAgc2FtZU5vZGVzLnB1c2gobGlua0RhdGFbaV0udGFyZ2V0Lm5hbWUpO1xuICAgICAgICAgIC8vY29uc29sZS5sb2cobGlua0RhdGFbaV0uc291cmNlLm5hbWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZGlmZk5vZGVzLnB1c2gobGlua0RhdGFbaV0udGFyZ2V0Lm5hbWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgc2FtZU5vZGVzID0gc2FtZU5vZGVzLnNvcnQoKTtcbiAgICBkaWZmTm9kZXMgPSBkaWZmTm9kZXMuc29ydCgpO1xuICAgIHJldHVybiB7c2FtZU5vZGVzOiBzYW1lTm9kZXMsIGRpZmZOb2RlczogZGlmZk5vZGVzfVxuICB9XG5cblxuICBzdGF0aWMgZGlzcGxheURldGFpbChub2RlTmFtZSwgc2FtZU5vZGVzLCBkaWZmTm9kZXMsIGFyZWFJRCkge1xuICAgIENvbm5lY3Rpb24ucmVtb3ZlRGV0YWlsKGFyZWFJRCk7XG5cbiAgICBjb25zdCBkZXRhaWxCb3ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChhcmVhSUQpO1xuICAgIGxldCBlbGVtZW50cyA9IFtdO1xuICAgIC8vIHRpdGxlXG4gICAgZWxlbWVudHMucHVzaCgnPHAgY2xhc3M9XCJkZXRhaWxTZWxlY3RlZFwiID4nICsgbm9kZU5hbWUgKyAnPC9wPicpO1xuXG4gICAgLy8gc2FtZSBjYXRlZ29yeVxuICAgIGVsZW1lbnRzLnB1c2goJzxwIGNsYXNzPVwiZGV0YWlsVGl0bGVcIiA+JyArIGBzYW1lIGNhdGVnb3J5KCR7c2FtZU5vZGVzLmxlbmd0aH0pYCArICc8L3A+Jyk7XG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBzYW1lTm9kZXMubGVuZ3RoOyBsID4gaTsgaSsrKSB7XG4gICAgICBlbGVtZW50cy5wdXNoKCc8cCBjbGFzcz1cImRldGFpbFRleHRcIiA+JyArIHNhbWVOb2Rlc1tpXSArICc8L3A+Jyk7XG4gICAgfVxuICAgIGVsZW1lbnRzLnB1c2goJzwvYnI+Jyk7XG5cbiAgICAvLyBkaWZmZXJlbnQgY2F0ZWdvcnlcbiAgICBlbGVtZW50cy5wdXNoKCc8cCBjbGFzcz1cImRldGFpbFRpdGxlXCIgPicgKyBgZGlmZmVyZW50IGNhdGVnb3J5KCR7ZGlmZk5vZGVzLmxlbmd0aH0pYCArICc8L3A+Jyk7XG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBkaWZmTm9kZXMubGVuZ3RoOyBsID4gaTsgaSsrKSB7XG4gICAgICBlbGVtZW50cy5wdXNoKCc8cCBjbGFzcz1cImRldGFpbFRleHRcIiA+JyArIGRpZmZOb2Rlc1tpXSArICc8L3A+Jyk7XG4gICAgfVxuICAgIGVsZW1lbnRzLnB1c2goJzwvYnI+Jyk7XG5cbiAgICBkZXRhaWxCb3guaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVFbmQnLCBlbGVtZW50cy5qb2luKCcnKSk7XG5cbiAgfVxuXG5cbiAgc3RhdGljIHJlbW92ZURldGFpbChhcmVhSUQpIHtcbiAgICBjb25zdCBkZXRhaWxCb3ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChhcmVhSUQpO1xuICAgIGRldGFpbEJveC5pbm5lckhUTUwgPSAnJztcbiAgfVxuXG59IiwiaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb3VzZSB7XG5cbiAgc3RhdGljIG1vdXNlb3Zlcihub2RlSW5kZXgsIGxpbmtEYXRhLCBsaW5rTGluZSwgbm9kZUNpcmNsZSwgbm9kZVRleHQpIHtcbiAgICAvLyBhdCBmaXJzdCwgbWFrZSBhbGwgbm9kZSAmIGxpbmUgZmFkZVxuICAgIGQzLnNlbGVjdEFsbChub2RlQ2lyY2xlKVsnX2dyb3VwcyddWzBdLmF0dHIoXCJjbGFzc1wiLCBcIm5vZGVDb2xvckZhZGVcIik7XG4gICAgZDMuc2VsZWN0QWxsKGxpbmtMaW5lKVsnX2dyb3VwcyddWzBdLmF0dHIoXCJjbGFzc1wiLCBcImxpbmVDb2xvckZhZGVcIik7XG4gICAgZDMuc2VsZWN0QWxsKG5vZGVUZXh0KVsnX2dyb3VwcyddWzBdLmF0dHIoXCJjbGFzc1wiLCBcIm5vZGVUZXh0RmFkZVwiKTtcblxuICAgIGZvciAobGV0IGkgPSAwLCBsID0gbGlua0RhdGEubGVuZ3RoOyBsID4gaTsgaSsrKSB7XG4gICAgICBpZiAobGlua0RhdGFbaV0uc291cmNlLmluZGV4ID09PSBub2RlSW5kZXggfHxcbiAgICAgICAgICBsaW5rRGF0YVtpXS50YXJnZXQuaW5kZXggPT09IG5vZGVJbmRleCkge1xuXG4gICAgICAgIGNvbnN0IGxpbmVJbmRleCA9IGk7XG4gICAgICAgIGNvbnN0IG5vZGVTb3VyY2UgPSBsaW5rRGF0YVtsaW5lSW5kZXhdLnNvdXJjZS5pbmRleDtcbiAgICAgICAgY29uc3Qgbm9kZVRhcmdldCA9IGxpbmtEYXRhW2xpbmVJbmRleF0udGFyZ2V0LmluZGV4O1xuXG4gICAgICAgIC8vIGxpbmVcbiAgICAgICAgY29uc3Qgc2VsZWN0TGluZSA9IGxpbmtMaW5lWydfZ3JvdXBzJ11bMF1bbGluZUluZGV4XTtcbiAgICAgICAgc2VsZWN0TGluZS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2xpbmVDb2xvcicpO1xuICAgICAgICAvLyBub2RlXG4gICAgICAgIG5vZGVDaXJjbGVbJ19ncm91cHMnXVswXVtub2RlU291cmNlXS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcIm5vZGVDb2xvclwiKTtcbiAgICAgICAgbm9kZUNpcmNsZVsnX2dyb3VwcyddWzBdW25vZGVUYXJnZXRdLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibm9kZUNvbG9yXCIpO1xuICAgICAgICAvLyB0ZXh0XG4gICAgICAgIG5vZGVUZXh0WydfZ3JvdXBzJ11bMF1bbm9kZVNvdXJjZV0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJsaW5rZWROb2RlVGV4dFwiKTtcbiAgICAgICAgbm9kZVRleHRbJ19ncm91cHMnXVswXVtub2RlVGFyZ2V0XS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImxpbmtlZE5vZGVUZXh0XCIpO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBzZWxlY3ROb2RlXG4gICAgbm9kZUNpcmNsZVsnX2dyb3VwcyddWzBdW25vZGVJbmRleF0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJub2RlQ29sb3JcIik7XG4gICAgLy8gc2VsZWN0Tm9kZVRleHRcbiAgICBub2RlVGV4dFsnX2dyb3VwcyddWzBdW25vZGVJbmRleF0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJsaW5rZWROb2RlVGV4dFwiKTtcbiAgfVxuXG5cbiAgc3RhdGljIG1vdXNlb3V0KGxpbmtEYXRhLCBsaW5rTGluZSwgbm9kZUNpcmNsZSwgbm9kZVRleHQpIHtcbiAgICBNb3VzZS5yZXNldChsaW5rRGF0YSwgbGlua0xpbmUsIG5vZGVDaXJjbGUsIG5vZGVUZXh0KVxuICB9XG5cblxuICBzdGF0aWMgbW91c2Vkb3duKG5vZGVJbmRleCwgbGlua0RhdGEsIGxpbmtMaW5lLCBub2RlQ2lyY2xlLCBub2RlVGV4dCkge1xuICAgIC8vIG1ha2Ugbm9kZSBub24tZHJhZ1xuICAgIGQzLnNlbGVjdEFsbChub2RlQ2lyY2xlKVsnX2dyb3VwcyddWzBdLmF0dHIoXCJjbGFzc1wiLCBcIm5vZGVDb2xvckZhZGVOb25EcmFnXCIpO1xuXG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBsaW5rRGF0YS5sZW5ndGg7IGwgPiBpOyBpKyspIHtcbiAgICAgIGlmIChsaW5rRGF0YVtpXS5zb3VyY2UuaW5kZXggPT09IG5vZGVJbmRleCB8fFxuICAgICAgICAgIGxpbmtEYXRhW2ldLnRhcmdldC5pbmRleCA9PT0gbm9kZUluZGV4KSB7XG5cbiAgICAgICAgY29uc3QgbGluZUluZGV4ID0gaTtcbiAgICAgICAgY29uc3Qgbm9kZVNvdXJjZSA9IGxpbmtEYXRhW2xpbmVJbmRleF0uc291cmNlLmluZGV4O1xuICAgICAgICBjb25zdCBub2RlVGFyZ2V0ID0gbGlua0RhdGFbbGluZUluZGV4XS50YXJnZXQuaW5kZXg7XG5cbiAgICAgICAgbm9kZUNpcmNsZVsnX2dyb3VwcyddWzBdW25vZGVTb3VyY2VdLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibm9kZUNvbG9yXCIpO1xuICAgICAgICBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1bbm9kZVRhcmdldF0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJub2RlQ29sb3JcIik7XG4gICAgICB9XG4gICAgfVxuICAgIC8vIHNlbGVjdE5vZGVcbiAgICBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1bbm9kZUluZGV4XS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcIm5vZGVDb2xvclwiKTtcbiAgfVxuXG5cbiAgc3RhdGljIG1vdXNldXAobm9kZUluZGV4LCBsaW5rRGF0YSwgbGlua0xpbmUsIG5vZGVDaXJjbGUsIG5vZGVUZXh0KSB7XG4gICAgIE1vdXNlLnJlc2V0KGxpbmtEYXRhLCBsaW5rTGluZSwgbm9kZUNpcmNsZSwgbm9kZVRleHQpO1xuICAgICBNb3VzZS5tb3VzZW92ZXIobm9kZUluZGV4LCBsaW5rRGF0YSwgbGlua0xpbmUsIG5vZGVDaXJjbGUsIG5vZGVUZXh0KTtcbiAgfVxuXG5cbiAgc3RhdGljIHJlc2V0KGxpbmtEYXRhLCBsaW5rTGluZSwgbm9kZUNpcmNsZSwgbm9kZVRleHQpIHtcbiAgICBkMy5zZWxlY3RBbGwobm9kZUNpcmNsZSlbJ19ncm91cHMnXVswXS5hdHRyKFwiY2xhc3NcIiwgXCJub2RlUmV0dXJuRmFkZVwiKTtcbiAgICBkMy5zZWxlY3RBbGwobGlua0xpbmUpWydfZ3JvdXBzJ11bMF0uYXR0cihcImNsYXNzXCIsIFwibGluZVJldHVybkZhZGVcIik7XG4gICAgZDMuc2VsZWN0QWxsKG5vZGVUZXh0KVsnX2dyb3VwcyddWzBdLmF0dHIoXCJjbGFzc1wiLCBcIm5vZGVUZXh0UmV0dXJuRmFkZVwiKTtcbiAgfVxuXG5cbiAgc3RhdGljIGN1cnNvcih0eXBlLCBib2R5LCBjaXJjbGUpIHtcbiAgICBsZXQgZ3JhYlR5cGVDaXJjbGU7XG4gICAgbGV0IGdyYWJUeXBlQm9keTtcbiAgICBpZiAodHlwZSA9PT0gJ2dyYWJiaW5nJykge1xuICAgICAgZ3JhYlR5cGVDaXJjbGUgPSBcImdyYWJiaW5nXCI7XG4gICAgICBncmFiVHlwZUJvZHkgPSBcImdyYWJiaW5nXCI7XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSAnZ3JhYicpIHtcbiAgICAgIGdyYWJUeXBlQ2lyY2xlID0gXCJncmFiXCI7XG4gICAgICBncmFiVHlwZUJvZHkgPSBcImF1dG9cIjtcbiAgICB9ZWxzZSBpZiAodHlwZSA9PT0gJ3BvaW50ZXInKSB7XG4gICAgICBncmFiVHlwZUNpcmNsZSA9IFwicG9pbnRlclwiO1xuICAgICAgZ3JhYlR5cGVCb2R5ID0gXCJhdXRvXCI7XG4gICAgfVxuXG4gICAgLy9ncmFiYmluZ1xuICAgIGNpcmNsZS5zdHlsZShcImN1cnNvclwiLCBcIi13ZWJraXQtXCIgKyBncmFiVHlwZUNpcmNsZSk7XG4gICAgY2lyY2xlLnN0eWxlKFwiY3Vyc29yXCIsIFwiLW1vei1cIiArIGdyYWJUeXBlQ2lyY2xlKTtcbiAgICBjaXJjbGUuc3R5bGUoXCJjdXJzb3JcIiwgZ3JhYlR5cGVDaXJjbGUpO1xuXG4gICAgYm9keS5zdHlsZShcImN1cnNvclwiLCBcIi13ZWJraXQtXCIgKyBncmFiVHlwZUJvZHkpO1xuICAgIGJvZHkuc3R5bGUoXCJjdXJzb3JcIiwgXCItbW96LVwiICsgZ3JhYlR5cGVCb2R5KTtcbiAgICBib2R5LnN0eWxlKFwiY3Vyc29yXCIsIGdyYWJUeXBlQm9keSk7XG4gIH1cblxufSIsImltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJztcblxuaW1wb3J0IE1vdXNlIGZyb20gJy4vTW91c2UnO1xuaW1wb3J0IFVwZGF0ZSBmcm9tICcuL1VwZGF0ZSdcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZXR3b3JrIHtcbiAgY29uc3RydWN0b3IoZmxhdm9yRGF0YSwgdW1hbWlEYXRhLCBpc1NwLCBzdmdJRCwgZGF0YVR5cGUsIHZpek1vZGUsIHZpeklELCBub2RlSW5mbykge1xuICAgIHRoaXMuZmxhdm9yRGF0YSA9IGZsYXZvckRhdGE7XG4gICAgdGhpcy51bWFtaURhdGEgPSB1bWFtaURhdGE7XG5cbiAgICB0aGlzLmRhdGFUeXBlID0gZGF0YVR5cGU7XG4gICAgdGhpcy52aXpNb2RlID0gdml6TW9kZTtcbiAgICB0aGlzLnZpeklEID0gdml6SUQ7XG5cbiAgICB0aGlzLmxpbmtEYXRhID0gZGF0YVR5cGUgPT09ICdGbGF2b3InID8gdGhpcy5mbGF2b3JEYXRhLmxpbmtzIDogdGhpcy51bWFtaURhdGEubGlua3M7XG4gICAgdGhpcy5ub2RlRGF0YSA9IGRhdGFUeXBlID09PSAnRmxhdm9yJyA/IHRoaXMuZmxhdm9yRGF0YS5ub2RlcyA6IHRoaXMudW1hbWlEYXRhLm5vZGVzO1xuXG4gICAgdGhpcy53aWR0aCA9IDEwMDA7XG4gICAgdGhpcy5oZWlnaHQgPSA2NTA7XG5cbiAgICB0aGlzLmNlbnRlclggPSB0aGlzLndpZHRoIC8gMiArIDMwO1xuICAgIHRoaXMuY2VudGVyWSA9IHRoaXMuaGVpZ2h0IC8gMiArIDE1O1xuXG4gICAgdGhpcy5ib2R5ID0gZDMuc2VsZWN0KFwiYm9keVwiKTtcbiAgICB0aGlzLnN2ZyA9IGQzLnNlbGVjdChzdmdJRCk7XG4gICAgLy8gdGhpcy5zY2FsZVJhdGlvID0gMS4wO1xuICAgIHRoaXMuem9vbVNjYWxlID0geydzY2FsZSc6IDEuMCwgJ1gnOiAwLCAnWSc6IDB9O1xuXG4gICAgdGhpcy5zdmdcbiAgICAgICAgLmF0dHIoXCJzdHlsZVwiLCBcIm91dGxpbmU6IDFweCBzb2xpZCAjZmY4ZTFlO1wiKVxuICAgICAgICAvLyAuYXR0cihcIndpZHRoXCIsIHRoaXMud2lkdGggLyB0aGlzLnNjYWxlUmF0aW8pXG4gICAgICAgIC8vIC5hdHRyKFwiaGVpZ2h0XCIsIHRoaXMuaGVpZ2h0IC8gdGhpcy5zY2FsZVJhdGlvKVxuICAgICAgICAuYXR0cihcIndpZHRoXCIsIHZpek1vZGUgPT09ICdTaW5nbGUnID8gdGhpcy53aWR0aCA6IDApXG4gICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIHZpek1vZGUgPT09ICdTaW5nbGUnID8gdGhpcy5oZWlnaHQgOiAwKVxuICAgICAgICAuYXR0cihcInZpZXdCb3hcIiwgXCIwIDAgMTAwMCA2NTBcIik7XG5cblxuICAgIHRoaXMubGluayA9ICcnO1xuICAgIHRoaXMubm9kZSA9ICcnO1xuICAgIHRoaXMubGFiZWwgPSAnJztcbiAgICB0aGlzLnNpbXVsYXRpb24gPSBkMy5mb3JjZVNpbXVsYXRpb24oKTtcblxuICAgIHRoaXMubm9kZUluZm8gPSBub2RlSW5mbztcbiAgICB0aGlzLmlzRHJhZ2dpbmcgPSAwO1xuXG5cbiAgICB0aGlzLmxlZ2VuZCA9ICcnO1xuICAgIHRoaXMubGVnZW5kTmFtZSA9IFtcInBsYW50XCIsIFwiZnJ1aXRcIiwgXCJtZWF0XCIsIFwidmVnZXRhYmxlXCIsIFwiY2VyZWFsL2Nyb3BcIixcbiAgICAgIFwiYWxjb2hvbGljIGJldmVyYWdlXCIsIFwiaGVyYlwiLCBcImRhaXJ5XCIsIFwibnV0L3NlZWQvcHVsc2VcIiwgXCJzcGljZVwiLFxuICAgICAgXCJmaXNoL3NlYWZvb2RcIiwgXCJwbGFudCBkZXJpdmF0aXZlXCIsIFwiZmxvd2VyXCIsIFwiYW5pbWFsIHByb2R1Y3RcIl07XG5cbiAgICB0aGlzLmxlZ2VuZENvbG9yID0gW1wiIzBmZmYwZlwiLCBcIiNmYzc4M2ZcIiwgXCIjZmY0YzRjXCIsIFwiIzNjYjM3YVwiLCBcIiNlOGM1OWNcIixcbiAgICAgIFwiI2U3MzU1MlwiLCBcIiNhZDVkODhcIiwgXCIjZGI4MzBkXCIsIFwiIzk2NWQyMVwiLCBcIiMwMGFmY2NcIixcbiAgICAgIFwiIzQzNGRhMlwiLCBcIiNiM2U1MDBcIiwgXCIjZmYwMGFlXCIsIFwiI2ZmN2ZiZlwiXTtcblxuICAgIHRoaXMud2FsbE1hcmdpbiA9IDcuNTtcblxuXG4gICAgdGhpcy5pc1NwID0gaXNTcDtcblxuICAgIHRoaXMuem9vbUdyb3VwID0gdGhpcy5zdmcuYXBwZW5kKFwiZ1wiKTtcbiAgICB0aGlzLnpvb21faGFuZGxlciA9IGQzLnpvb20oKVxuICAgICAgICAuc2NhbGVFeHRlbnQoWzAuNSwgMl0pXG4gICAgICAgIC8vIC50cmFuc2xhdGVFeHRlbnQoW1xuICAgICAgICAvLyAgIFstdGhpcy53aWR0aCAvIDIsIC10aGlzLmhlaWdodCAvIDJdLCBbdGhpcy53aWR0aCArIHRoaXMud2lkdGggLyAyLCB0aGlzLmhlaWdodCArIHRoaXMuaGVpZ2h0IC8gMl1cbiAgICAgICAgLy8gXSlcbiAgICAgICAgLm9uKFwiem9vbVwiLCB0aGlzLnpvb21fYWN0aW9ucy5iaW5kKHRoaXMpKVxuICAgICAgICAub24oXCJzdGFydFwiLCB0aGlzLnpvb21fc3RhcnQuYmluZCh0aGlzKSlcbiAgICAgICAgLm9uKFwiZW5kXCIsIHRoaXMuem9vbV9lbmQuYmluZCh0aGlzKSk7XG5cbiAgICAvL3pvb20gaW5pdGlhbGlzZXNcbiAgICAvLyB0aGlzLmluaXRpYWxUcmFuc2Zvcm0gPSBkMy56b29tSWRlbnRpdHlcbiAgICAvLyAgICAgLnRyYW5zbGF0ZSh0aGlzLndpZHRoIC8gMiwgdGhpcy5oZWlnaHQgLyAyKVxuICAgIC8vICAgICAuc2NhbGUoMC4yNSk7XG5cbiAgICB0aGlzLnN2Zy5jYWxsKHRoaXMuem9vbV9oYW5kbGVyKTtcbiAgICAvLyB0aGlzLnN2Zy5jYWxsKHRoaXMuem9vbV9oYW5kbGVyLnRyYW5zZm9ybSwgdGhpcy5pbml0aWFsVHJhbnNmb3JtKTtcbiAgfVxuXG5cbiAgc2V0Vml6TW9kZSh2aXpNb2RlKXtcbiAgICB0aGlzLnZpek1vZGUgPSB2aXpNb2RlO1xuICB9XG5cbiAgY29sb3Iobikge1xuICAgIHJldHVybiB0aGlzLmxlZ2VuZENvbG9yW25dO1xuICB9O1xuXG5cbiAgc2V0TGVnZW5kKCkge1xuICAgIHRoaXMubGVnZW5kID0gdGhpcy5zdmdcbiAgICAgICAgLnNlbGVjdEFsbCgnLmxlZ2VuZHMnKVxuICAgICAgICAuZGF0YSh0aGlzLmxlZ2VuZE5hbWUpXG4gICAgICAgIC5lbnRlcigpXG4gICAgICAgIC5hcHBlbmQoJ2cnKVxuICAgICAgICAuYXR0cihcImNsYXNzXCIsIFwibGVnZW5kc1wiKVxuICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCAoZCwgaSkgPT4ge1xuICAgICAgICAgIHJldHVybiBcInRyYW5zbGF0ZSgyMCxcIiArIChpICsgMSkgKiAyMCArIFwiKVwiXG4gICAgICAgIH0pXG4gICAgICAgIC5hdHRyKFwid2lkdGhcIiwgMjAwKVxuICAgICAgICAuYXR0cihcImhlaWdodFwiLCAyMCk7XG5cbiAgICAvLyAkKFwiLmxlZ2VuZHNcIikuY3NzKHtcImN1cnNvclwiOiBbXCJwb2ludGVyXCJdfSk7XG4gICAgZDMuc2VsZWN0QWxsKFwiLmxlZ2VuZHNcIikuc3R5bGUoXCJjdXJzb3JcIiwgXCJwb2ludGVyXCIpO1xuXG4gICAgdGhpcy5sZWdlbmQuYXBwZW5kKCdjaXJjbGUnKSAvLyDlh6Hkvovjga7oibLku5jjgZHlm5vop5JcbiAgICAgICAgLmF0dHIoXCJjeFwiLCA1KVxuICAgICAgICAuYXR0cihcImN5XCIsIDUpXG4gICAgICAgIC5hdHRyKFwiclwiLCA5KVxuICAgICAgICAuYXR0cihcIm9wYWNpdHlcIiwgMC42KVxuICAgICAgICAuYXR0cihcImNsYXNzXCIsIFwibGVnZW5kQ2lyY2xlXCIpXG4gICAgICAgIC5hdHRyKFwiZmlsbFwiLCAoZCwgaSkgPT4ge1xuICAgICAgICAgIHJldHVybiB0aGlzLmNvbG9yKGkpO1xuICAgICAgICB9KTtcblxuICAgIHRoaXMubGVnZW5kLmFwcGVuZCgndGV4dCcpICAvLyDlh6Hkvovjga7mlofoqIBcbiAgICAgICAgLmF0dHIoXCJ4XCIsIDIwKVxuICAgICAgICAuYXR0cihcInlcIiwgMTApXG4gICAgICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJsZWdlbmRUZXh0XCIpXG4gICAgICAgIC50ZXh0KChkKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIGQ7XG4gICAgICAgIH0pXG4gICAgICAgIC8vIC5hdHRyKFwiY2xhc3NcIiwgXCJ0ZXh0c2VsZWN0ZWRcIilcbiAgICAgICAgLnN0eWxlKFwidGV4dC1hbmNob3JcIiwgXCJzdGFydFwiKVxuICAgICAgICAuc3R5bGUoXCJmb250LXNpemVcIiwgMTUpO1xuICB9XG5cblxuICByZW5kZXIoKXtcbiAgICB0aGlzLnNldExpbmsoKTtcbiAgICB0aGlzLnNldE5vZGUoKTtcbiAgICB0aGlzLnNldExhYmVsKCk7XG4gICAgdGhpcy5zZXRTaW11bGF0aW9uKCk7XG4gIH1cblxuXG4gIHNldExpbmsoKSB7XG4gICAgdGhpcy5saW5rID0gdGhpcy56b29tR3JvdXAuYXBwZW5kKFwiZ1wiKVxuICAgICAgICAuc2VsZWN0QWxsKFwibGluZVwiKVxuICAgICAgICAuZGF0YSh0aGlzLmxpbmtEYXRhKVxuICAgICAgICAuZW50ZXIoKVxuICAgICAgICAuYXBwZW5kKFwibGluZVwiKVxuICAgICAgICAuYXR0cihcIm9wYWNpdHlcIiwgXCIwLjVcIilcbiAgICAgICAgLmF0dHIoXCJzdHJva2Utd2lkdGhcIiwgKGQpID0+IHtcbiAgICAgICAgICByZXR1cm4gTWF0aC5zcXJ0KGQud2VpZ2h0KSAqIDAuMSArIGQud2VpZ2h0ICogMC4wMTU7XG4gICAgICAgIH0pXG4gICAgICAgIC5hdHRyKFwic3Ryb2tlXCIsIChkKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuY29sb3IoZC5ncm91cF9pZF9zKVxuICAgICAgICB9KTtcbiAgfVxuXG5cbiAgc2V0Tm9kZSgpIHtcbiAgICB0aGlzLm5vZGUgPSB0aGlzLnpvb21Hcm91cC5hcHBlbmQoXCJnXCIpXG4gICAgICAgIC5zZWxlY3RBbGwoXCJjaXJjbGVcIilcbiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuICF0aGlzLmNsYXNzTGlzdC5jb250YWlucygnbGVnZW5kQ2lyY2xlJylcbiAgICAgICAgfSlcbiAgICAgICAgLmRhdGEodGhpcy5ub2RlRGF0YSlcbiAgICAgICAgLmVudGVyKClcbiAgICAgICAgLmFwcGVuZChcImNpcmNsZVwiKVxuICAgICAgICAvLyAuYXR0cihcIm9wYWNpdHlcIiwgXCIwLjZcIilcbiAgICAgICAgLmF0dHIoXCJyXCIsIChkKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIE1hdGguc3FydChkLnNpemUpICogNCArIDIuNTtcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIChkKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuY29sb3IoZC5ncm91cF9pZClcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoXCJzdHJva2VcIiwgXCIjZmZmY2Y5XCIpXG4gICAgICAgIC5jYWxsKGQzLmRyYWcoKVxuICAgICAgICAgICAgLm9uKFwic3RhcnRcIiwgdGhpcy5kcmFnc3RhcnRlZC5iaW5kKHRoaXMpKVxuICAgICAgICAgICAgLm9uKFwiZHJhZ1wiLCB0aGlzLmRyYWdnaW5nLmJpbmQodGhpcykpXG4gICAgICAgICAgICAub24oXCJlbmRcIiwgdGhpcy5kcmFnZW5kZWQuYmluZCh0aGlzKSkpO1xuXG4gICAgaWYgKHRoaXMuZGF0YVR5cGUgPT09ICdGbGF2b3InKSB7XG4gICAgICB0aGlzLm5vZGUuYXR0cihcIm9wYWNpdHlcIiwgXCIwLjZcIilcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5ub2RlLmF0dHIoXCJvcGFjaXR5XCIsIChkKSA9PiB7XG4gICAgICAgIHJldHVybiBkLnVtYW1pID09PSAxID8gXCIwLjZcIiA6IFwiMC4yXCI7XG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG5cbiAgc2V0TGFiZWwoKSB7XG4gICAgdGhpcy5sYWJlbCA9IHRoaXMuem9vbUdyb3VwLmFwcGVuZChcImdcIilcbiAgICAgICAgLnNlbGVjdEFsbChcInRleHRcIilcbiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuICF0aGlzLmNsYXNzTGlzdC5jb250YWlucygnbGVnZW5kVGV4dCcpXG4gICAgICAgIH0pXG4gICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiAhdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoJ25vZGVfbGluaycpXG4gICAgICAgIH0pXG4gICAgICAgIC5kYXRhKHRoaXMubm9kZURhdGEpXG4gICAgICAgIC5lbnRlcigpXG4gICAgICAgIC5hcHBlbmQoXCJ0ZXh0XCIpXG4gICAgICAgIC50ZXh0KChkKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIGQubmFtZTtcbiAgICAgICAgfSk7XG5cbiAgICB0aGlzLmxhYmVsXG4gICAgICAgIC5hdHRyKFwiZm9udC1zaXplXCIsIFwiLjdlbVwiKVxuICAgICAgICAuYXR0cihcImZvbnQtd2VpZ2h0XCIsIFwiMzAwXCIpXG4gICAgICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJub25EcmFnXCIpXG4gICAgICAgIC5hdHRyKFwiZmlsbFwiLCBcIiMzNTI2MjJcIilcbiAgICAgICAgLmF0dHIoe1wiZm9udC1mYW1pbHlcIjogW1wiRnV0dXJhXCIsIFwiTnVuaXRvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJBcmlhbFwiLCBcInNhbnMtc2VyaWZcIl19KTtcblxuICAgIGlmICh0aGlzLmRhdGFUeXBlID09PSAnRmxhdm9yJykge1xuICAgICAgdGhpcy5sYWJlbC5hdHRyKFwib3BhY2l0eVwiLCBcIjEuMFwiKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmxhYmVsLmF0dHIoXCJvcGFjaXR5XCIsIChkKSA9PiB7XG4gICAgICAgIHJldHVybiBkLnVtYW1pID09PSAxID8gXCIxLjBcIiA6IFwiMC41XCI7XG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG5cbiAgc2V0U2ltdWxhdGlvbigpIHtcbiAgICB0aGlzLnNpbXVsYXRpb24uZm9yY2UoXCJsaW5rXCIsXG4gICAgICAgIGQzLmZvcmNlTGluaygpXG4gICAgICAgICAgICAuZGlzdGFuY2UoODApXG4gICAgICAgICAgICAvLyAgICAgLmRpc3RhbmNlKGZ1bmN0aW9uKGQpIHsgcmV0dXJuICBNYXRoLnNxcnQoZC53ZWlnaHQpICogMC4xICsgZC53ZWlnaHQgKiAwLjU7IH0pXG4gICAgICAgICAgICAuc3RyZW5ndGgoMC44KVxuICAgICAgICAgICAgLml0ZXJhdGlvbnMoMS4wKVxuICAgICAgICAgICAgLmlkKChkKSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiBkLm5hbWU7XG4gICAgICAgICAgICB9KVxuICAgICkuZm9yY2UoXCJjb2xsaWRlXCIsXG4gICAgICAgIGQzLmZvcmNlQ29sbGlkZSgpXG4gICAgICAgICAgICAucmFkaXVzKChkKSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiBNYXRoLnNxcnQoZC5zaXplKSAqIDQgKyAyLjU7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnN0cmVuZ3RoKDAuNylcbiAgICAgICAgICAgIC5pdGVyYXRpb25zKDEuMClcbiAgICApLmZvcmNlKFwiY2hhcmdlXCIsIGQzLmZvcmNlTWFueUJvZHkoKS5zdHJlbmd0aCgtMzAwKSlcbiAgICAgICAgLmZvcmNlKFwiY2VudGVyXCIsIGQzLmZvcmNlQ2VudGVyKHRoaXMuY2VudGVyWCwgdGhpcy5jZW50ZXJZKSlcbiAgICAgICAgLmZvcmNlKFwieFwiLCBkMy5mb3JjZVgoKS5zdHJlbmd0aCgwLjI1KS54KHRoaXMuY2VudGVyWCkpXG4gICAgICAgIC5mb3JjZShcInlcIiwgZDMuZm9yY2VZKCkuc3RyZW5ndGgoMC4zNSkueSh0aGlzLmNlbnRlclkpKTtcblxuXG4gICAgaWYgKHRoaXMuZGF0YVR5cGUgPT09ICdVbWFtaScgKSB7XG4gICAgICBVcGRhdGUudW1hbWlTaW11bGF0aW9uKHRoaXMuc2ltdWxhdGlvbiwgdGhpcy5jZW50ZXJYLCB0aGlzLmNlbnRlclkpO1xuICAgIH1cblxuICAgIHRoaXMuc2ltdWxhdGlvblxuICAgICAgICAubm9kZXModGhpcy5ub2RlRGF0YSlcbiAgICAgICAgLm9uKFwidGlja1wiLCB0aGlzLnRpY2tlZC5iaW5kKHRoaXMpKTtcblxuICAgIHRoaXMuc2ltdWxhdGlvblxuICAgICAgICAuZm9yY2UoXCJsaW5rXCIpXG4gICAgICAgIC5saW5rcyh0aGlzLmxpbmtEYXRhKTtcblxuICB9XG5cblxuICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAvLyB0aWNrIGV2ZW50XG4gIHRpY2tlZCgpIHtcbiAgICBpZiAodGhpcy56b29tU2NhbGUuc2NhbGUgPD0gMSkge1xuICAgICAgY29uc3QgbWFyZ2luWHJpZ2h0ID0gdGhpcy53YWxsTWFyZ2luIC0gdGhpcy56b29tU2NhbGUuWCAvIHRoaXMuem9vbVNjYWxlLnNjYWxlO1xuICAgICAgY29uc3QgbWFyZ2luWXVwID0gdGhpcy53YWxsTWFyZ2luIC0gdGhpcy56b29tU2NhbGUuWSAvIHRoaXMuem9vbVNjYWxlLnNjYWxlO1xuXG4gICAgICBjb25zdCBtYXJnaW5YbGVmdCA9ICh0aGlzLndpZHRoIC0gdGhpcy56b29tU2NhbGUuWCkgLyB0aGlzLnpvb21TY2FsZS5zY2FsZSAtIHRoaXMud2FsbE1hcmdpbjtcbiAgICAgIGNvbnN0IG1hcmdpbllkb3duID0gKHRoaXMuaGVpZ2h0IC0gdGhpcy56b29tU2NhbGUuWSkgLyB0aGlzLnpvb21TY2FsZS5zY2FsZSAtIHRoaXMud2FsbE1hcmdpbjtcblxuICAgICAgdGhpcy5saW5rXG4gICAgICAgICAgLmF0dHIoXCJ4MVwiLCAoZCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIE1hdGgubWF4KG1hcmdpblhyaWdodCwgTWF0aC5taW4obWFyZ2luWGxlZnQsIGQuc291cmNlLngpKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5hdHRyKFwieTFcIiwgKGQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBNYXRoLm1heChtYXJnaW5ZdXAsIE1hdGgubWluKG1hcmdpbllkb3duLCBkLnNvdXJjZS55KSk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuYXR0cihcIngyXCIsIChkKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5tYXgobWFyZ2luWHJpZ2h0LCBNYXRoLm1pbihtYXJnaW5YbGVmdCwgZC50YXJnZXQueCkpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmF0dHIoXCJ5MlwiLCAoZCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIE1hdGgubWF4KG1hcmdpbll1cCwgTWF0aC5taW4obWFyZ2luWWRvd24sIGQudGFyZ2V0LnkpKTtcbiAgICAgICAgICB9KTtcbiAgICAgIHRoaXMubm9kZVxuICAgICAgICAgIC5hdHRyKFwiY3hcIiwgKGQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBNYXRoLm1heChtYXJnaW5YcmlnaHQsIE1hdGgubWluKG1hcmdpblhsZWZ0LCBkLngpKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5hdHRyKFwiY3lcIiwgKGQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBNYXRoLm1heChtYXJnaW5ZdXAsIE1hdGgubWluKG1hcmdpbllkb3duLCBkLnkpKTtcbiAgICAgICAgICB9KTtcblxuICAgICAgdGhpcy5sYWJlbFxuICAgICAgICAgIC5hdHRyKFwieFwiLCAoZCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIE1hdGgubWF4KG1hcmdpblhyaWdodCwgTWF0aC5taW4obWFyZ2luWGxlZnQsIGQueCkpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmF0dHIoXCJ5XCIsIChkKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5tYXgobWFyZ2luWXVwLCBNYXRoLm1pbihtYXJnaW5ZZG93biwgZC55KSk7XG4gICAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubGlua1xuICAgICAgICAgIC5hdHRyKFwieDFcIiwgKGQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBkLnNvdXJjZS54O1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmF0dHIoXCJ5MVwiLCAoZCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGQuc291cmNlLnk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuYXR0cihcIngyXCIsIChkKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gZC50YXJnZXQueDtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5hdHRyKFwieTJcIiwgKGQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBkLnRhcmdldC55O1xuICAgICAgICAgIH0pO1xuICAgICAgdGhpcy5ub2RlXG4gICAgICAgICAgLmF0dHIoXCJjeFwiLCAoZCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGQueDtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5hdHRyKFwiY3lcIiwgKGQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBkLnk7XG4gICAgICAgICAgfSk7XG5cbiAgICAgIHRoaXMubGFiZWxcbiAgICAgICAgICAuYXR0cihcInhcIiwgKGQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBkLng7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuYXR0cihcInlcIiwgKGQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBkLnk7XG4gICAgICAgICAgfSk7XG4gICAgfVxuICB9XG5cblxuICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAvLyBkcmFnIGV2ZW50XG4gIGRyYWdzdGFydGVkKGQpIHtcbiAgICBpZiAodGhpcy52aXpNb2RlID09PSAnU2luZ2xlJykge1xuICAgICAgaWYgKCFkMy5ldmVudC5hY3RpdmUpIHRoaXMuc2ltdWxhdGlvbi5hbHBoYVRhcmdldCgwLjMpLnJlc3RhcnQoKTtcbiAgICAgIGQuZnggPSBkLng7XG4gICAgICBkLmZ5ID0gZC55O1xuXG4gICAgICBNb3VzZS5tb3VzZWRvd24oZC5pbmRleCwgdGhpcy5saW5rRGF0YSwgdGhpcy5saW5rLCB0aGlzLm5vZGUsIHRoaXMubGFiZWwpO1xuICAgICAgTW91c2UuY3Vyc29yKCdncmFiYmluZycsIHRoaXMuYm9keSwgdGhpcy5ub2RlKTtcbiAgICB9XG5cbiAgICB0aGlzLmlzRHJhZ2dpbmcgPSAxO1xuICB9XG5cbiAgZHJhZ2dpbmcoZCkge1xuICAgIGlmICh0aGlzLnZpek1vZGUgPT09ICdTaW5nbGUnKSB7XG4gICAgICBkLmZ4ID0gZDMuZXZlbnQueDtcbiAgICAgIGQuZnkgPSBkMy5ldmVudC55O1xuICAgIH1cbiAgfVxuXG4gIGRyYWdlbmRlZChkKSB7XG4gICAgaWYgKHRoaXMudml6TW9kZSA9PT0gJ1NpbmdsZScpIHtcbiAgICAgIGlmICghZDMuZXZlbnQuYWN0aXZlKSB0aGlzLnNpbXVsYXRpb24uYWxwaGFUYXJnZXQoMCk7XG4gICAgICBkLmZ4ID0gbnVsbDtcbiAgICAgIGQuZnkgPSBudWxsO1xuXG4gICAgICBNb3VzZS5tb3VzZXVwKGQuaW5kZXgsIHRoaXMubGlua0RhdGEsIHRoaXMubGluaywgdGhpcy5ub2RlLCB0aGlzLmxhYmVsKTtcbiAgICAgIE1vdXNlLmN1cnNvcignZ3JhYicsIHRoaXMuYm9keSwgdGhpcy5ub2RlKTtcbiAgICB9XG5cbiAgICB0aGlzLmlzRHJhZ2dpbmcgPSAwO1xuICB9XG5cblxuICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAvLyB6b29tIGV2ZW50XG4gIHpvb21fYWN0aW9ucygpIHtcbiAgICB0aGlzLnpvb21Hcm91cC5hdHRyKFwidHJhbnNmb3JtXCIsIGQzLmV2ZW50LnRyYW5zZm9ybSk7XG4gICAgdGhpcy56b29tU2NhbGUgPSB0aGlzLmdldFNjYWxlKCk7XG4gIH1cblxuICB6b29tX3N0YXJ0KCkge1xuICAgIGlmICh0aGlzLnZpek1vZGUgPT09ICdTaW5nbGUnKSB7XG4gICAgICB0aGlzLnNpbXVsYXRpb24uYWxwaGFUYXJnZXQoMC41KS5yZXN0YXJ0KCk7XG4gICAgfVxuICB9XG5cbiAgem9vbV9lbmQoKSB7XG4gICAgaWYgKHRoaXMudml6TW9kZSA9PT0gJ1NpbmdsZScpIHtcbiAgICAgIHRoaXMuc2ltdWxhdGlvbi5hbHBoYVRhcmdldCgwKTtcbiAgICB9XG4gIH1cblxuXG4gIGdldFNjYWxlKCkge1xuICAgIGxldCBzY2FsZSwgWCwgWTtcbiAgICBsZXQgc2NhbGVfID0gdGhpcy56b29tR3JvdXAuYXR0cigndHJhbnNmb3JtJyk7XG4gICAgaWYgKHNjYWxlXyA9PT0gXCJub25lXCIpIHtcbiAgICAgIHNjYWxlID0gMS4wO1xuICAgIH0gZWxzZSB7XG4gICAgICBsZXQgdmFsdWVzID0gc2NhbGVfLnNwbGl0KFwic2NhbGUoXCIpWzFdO1xuICAgICAgc2NhbGUgPSB2YWx1ZXMuc3BsaXQoXCIpXCIpWzBdO1xuXG4gICAgICBsZXQgdmFsdWVzXyA9IHNjYWxlXy5zcGxpdChcIihcIilbMV07XG4gICAgICB2YWx1ZXNfID0gdmFsdWVzXy5zcGxpdChcIilcIilbMF07XG4gICAgICB2YWx1ZXNfID0gdmFsdWVzXy5zcGxpdChcIixcIik7XG4gICAgICBYID0gdmFsdWVzX1swXTtcbiAgICAgIFkgPSB2YWx1ZXNfWzFdO1xuICAgIH1cbiAgICByZXR1cm4ge3NjYWxlLCBYLCBZfTtcbiAgfVxuXG5cbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgLy8gdXBkYXRlIG5ldHdvcmsgZGF0YVxuICB1cGRhdGUoc2VsZWN0ZWRUeXBlKSB7XG4gICAgdGhpcy5kYXRhVHlwZSA9IHNlbGVjdGVkVHlwZTtcblxuICAgIGxldCBwcmV2Tm9kZVBvc2l0aW9uID0gW107XG4gICAgaWYgKHNlbGVjdGVkVHlwZSA9PT0gJ0ZsYXZvcicpIHtcbiAgICAgIFVwZGF0ZS5mbGF2b3JTaW11bGF0aW9uKHRoaXMuc2ltdWxhdGlvbiwgdGhpcy5jZW50ZXJYLCB0aGlzLmNlbnRlclkpO1xuICAgICAgdGhpcy5ub2RlRGF0YSA9IHRoaXMuZmxhdm9yRGF0YS5ub2RlcztcbiAgICAgIHRoaXMubGlua0RhdGEgPSB0aGlzLmZsYXZvckRhdGEubGlua3M7XG4gICAgfSBlbHNlIGlmIChzZWxlY3RlZFR5cGUgPT09ICdVbWFtaScpIHtcbiAgICAgIFVwZGF0ZS51bWFtaVNpbXVsYXRpb24odGhpcy5zaW11bGF0aW9uLCB0aGlzLmNlbnRlclgsIHRoaXMuY2VudGVyWSk7XG4gICAgICB0aGlzLm5vZGVEYXRhID0gdGhpcy51bWFtaURhdGEubm9kZXM7XG4gICAgICB0aGlzLmxpbmtEYXRhID0gdGhpcy51bWFtaURhdGEubGlua3M7XG4gICAgfVxuXG5cbiAgICB0aGlzLnNpbXVsYXRpb24uc3RvcCgpO1xuICAgIGxldCByZXNEZWxldGVPYmo7XG4gICAgbGV0IHJlc0FkZE9iajtcbiAgICBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuXG4gICAgICByZXNEZWxldGVPYmogPSBVcGRhdGUuZGVsZXRlT2JqKHRoaXMubGluaywgdGhpcy5ub2RlLCB0aGlzLmxhYmVsLCB0aGlzLmxpbmtEYXRhLCB0aGlzLm5vZGVEYXRhKTtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICByZXNvbHZlKFxuICAgICAgICAgICAgdGhpcy5saW5rID0gcmVzRGVsZXRlT2JqLmxpbmssXG4gICAgICAgICAgICB0aGlzLm5vZGUgPSByZXNEZWxldGVPYmoubm9kZSxcbiAgICAgICAgICAgIHRoaXMubGFiZWwgPSByZXNEZWxldGVPYmoubGFiZWwsXG4gICAgICAgICAgICBjb25zb2xlLmxvZygxKVxuICAgICAgICApO1xuICAgICAgfSwgNTAwKTtcblxuICAgIH0pLnRoZW4oKCkgPT4ge1xuXG4gICAgICByZXNBZGRPYmogPSBVcGRhdGUuYWRkT2JqKHRoaXMubGluaywgdGhpcy5ub2RlLCB0aGlzLmxhYmVsLCB0aGlzLm5vZGVEYXRhLCB0aGlzLmxpbmtEYXRhLCB0aGlzLmxlZ2VuZENvbG9yLCB0aGlzLmRyYWdzdGFydGVkLCB0aGlzLmRyYWdnaW5nLCB0aGlzLmRyYWdlbmRlZCk7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgcmVzb2x2ZShcbiAgICAgICAgICAgICAgdGhpcy5saW5rID0gcmVzQWRkT2JqLmxpbmssXG4gICAgICAgICAgICAgIHRoaXMubm9kZSA9IHJlc0FkZE9iai5ub2RlLFxuICAgICAgICAgICAgICB0aGlzLmxhYmVsID0gcmVzQWRkT2JqLmxhYmVsLFxuICAgICAgICAgICAgICBjb25zb2xlLmxvZygyKVxuICAgICAgICAgIClcbiAgICAgICAgfSwgNTAwKTtcbiAgICAgIH0pO1xuXG4gICAgfSkudGhlbigoKSA9PiB7XG5cbiAgICAgIHByZXZOb2RlUG9zaXRpb24gPSBVcGRhdGUuc3RvcmVQcmV2aW91c05vZGVQb3NpdGlvbih0aGlzLm5vZGUsIHRoaXMubm9kZURhdGEsIHByZXZOb2RlUG9zaXRpb24pO1xuICAgICAgVXBkYXRlLnNpbXVsYXRpb24odGhpcy5saW5rRGF0YSwgdGhpcy5ub2RlRGF0YSwgdGhpcy5zaW11bGF0aW9uLCB0aGlzLnRpY2tlZC5iaW5kKHRoaXMpKTtcbiAgICAgIGNvbnNvbGUubG9nKDMpO1xuXG4gICAgfSkudGhlbigoKSA9PiB7XG5cbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBVcGRhdGUubm9kZUxhYmVsT3BhY2l0eShzZWxlY3RlZFR5cGUsIHRoaXMubm9kZSwgdGhpcy5sYWJlbCwgdGhpcy5ub2RlRGF0YSk7XG4gICAgICB9LCA1MDApO1xuXG5cbiAgICAgIHRoaXMuc2ltdWxhdGlvbi50aWNrKDMwKTtcbiAgICAgIGNvbnN0IHQgPSAzMDAwO1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHJlc29sdmUoXG4gICAgICAgICAgICAgIFVwZGF0ZS50cmFuc2l0Tm9kZVBvc2l0aW9uKHRoaXMubm9kZSwgdGhpcy5sYWJlbCwgdGhpcy5ub2RlRGF0YSwgcHJldk5vZGVQb3NpdGlvbiwgdCksXG4gICAgICAgICAgICAgIFVwZGF0ZS50cmFuc2l0TGlua1Bvc2l0aW9uKHRoaXMubGluaywgdGhpcy5saW5rRGF0YSwgcHJldk5vZGVQb3NpdGlvbiwgdCksXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKDQpXG4gICAgICAgICAgKVxuICAgICAgICB9LCA1MCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG5cbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgLy8gc2V0IG1vdXNlIGFjdGlvbiAodXRpbGl0eSlcbiAgc2V0TW91c2VBY3Rpb24oKSB7XG4gICAgaWYgKCF0aGlzLmlzU3ApIHtcbiAgICAgIHRoaXMubm9kZS5vbihcIm1vdXNlb3ZlclwiLCAoZCkgPT4ge1xuICAgICAgICAvLyBNb3VzZS5tb3VzZW92ZXIoZC5pbmRleCwgdGhpcy5saW5rRGF0YSwgdGhpcy5saW5rLCB0aGlzLm5vZGUsIHRoaXMubGFiZWwpO1xuXG4gICAgICAgIGlmICh0aGlzLmlzRHJhZ2dpbmcgPT09IDApIHtcbiAgICAgICAgICBNb3VzZS5tb3VzZW92ZXIoZC5pbmRleCwgdGhpcy5saW5rRGF0YSwgdGhpcy5saW5rLCB0aGlzLm5vZGUsIHRoaXMubGFiZWwpO1xuXG4gICAgICAgICAgLy8g5YaF5a6544GM5aSJ44KP44Gj44Gf44Go44GN44Gg44GR5aSJ5pu044GZ44KL5b+F6KaB44Gv44Gq44GEXG4gICAgICAgICAgLy8gaWYodGhpcy5ub2RlSW5mby5uYW1lICE9PSBkLm5hbWUpe1xuICAgICAgICAgIC8vICAgdGhpcy5ub2RlSW5mby5uYW1lID0gZC5uYW1lO1xuICAgICAgICAgIC8vIH1cbiAgICAgICAgICB0aGlzLm5vZGVJbmZvLm5ldHdvcmsgPSB0aGlzLnZpeklEO1xuICAgICAgICAgIHRoaXMubm9kZUluZm8ubmFtZSA9IGQubmFtZTtcbiAgICAgICAgICB0aGlzLm5vZGVJbmZvLm1vdXNlQWN0aW9uID0gJ21vdXNlb3Zlcic7ICAvLyBldmVudCB0cmlnZ2VyXG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLm5vZGUub24oXCJtb3VzZW91dFwiLCAoKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLmlzRHJhZ2dpbmcgPT09IDApe1xuICAgICAgICAgIE1vdXNlLm1vdXNlb3V0KHRoaXMubGlua0RhdGEsIHRoaXMubGluaywgdGhpcy5ub2RlLCB0aGlzLmxhYmVsKTtcbiAgICAgICAgICB0aGlzLm5vZGVJbmZvLm1vdXNlQWN0aW9uID0gJ21vdXNlb3V0JzsgIC8vIGV2ZW50IHRyaWdnZXJcbiAgICAgICAgfVxuICAgICAgfSk7XG5cblxuICAgICAgdGhpcy5ub2RlLm9uKFwiY2xpY2tcIiwgKGQpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ2NsaWNrJywgZC5uYW1lKTtcbiAgICAgICAgdGhpcy5ub2RlSW5mby5tb3VzZUFjdGlvbiA9ICdjbGljayc7ICAvLyBldmVudCB0cmlnZ2VyXG4gICAgICB9KTtcblxuXG4gICAgICAvLyBkMy5zZWxlY3QoXCJib2R5XCIpLm9uKFwibW91c2V1cFwiLCAoKSA9PiB7XG4gICAgICAvLyAgIGNvbnNvbGUubG9nKCdtb3VzZXVwJylcbiAgICAgIC8vICAgTW91c2UucmVzZXQodGhpcy5saW5rRGF0YSwgdGhpcy5saW5rLCB0aGlzLm5vZGUsIHRoaXMubGFiZWwpO1xuICAgICAgLy8gICBNb3VzZS5jdXJzb3IoJ2dyYWInLCB0aGlzLmJvZHksIHRoaXMubm9kZSk7XG4gICAgICAvL1xuICAgICAgLy8gfSk7XG5cbiAgICAgIHRoaXMuc3ZnLm9uKFwibW91c2VlbnRlclwiLCAoKSA9PiB7XG4gICAgICAgIE1vdXNlLnJlc2V0KHRoaXMubGlua0RhdGEsIHRoaXMubGluaywgdGhpcy5ub2RlLCB0aGlzLmxhYmVsKTtcbiAgICAgICAgTW91c2UuY3Vyc29yKHRoaXMudml6TW9kZSA9PT0gJ1NpbmdsZScgPydncmFiJyA6ICdwb2ludGVyJywgdGhpcy5ib2R5LCB0aGlzLm5vZGUpO1xuICAgICAgICB0aGlzLm5vZGVJbmZvLm1vdXNlQWN0aW9uID0gJ21vdXNlZW50ZXInOyAgLy8gZXZlbnQgdHJpZ2dlclxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAgIC8vIGZvciBTbWFydFBob25lXG5cbiAgICAvLyBpZiAodGhpcy5pc1NwKSB7XG4gICAgLy8gICBsZXQgdG91Y2hDb2xvcmVkID0gMDtcbiAgICAvLyAgIGxldCB0b3VjaG1vdmUgPSAwO1xuICAgIC8vICAgdGhpcy5zdmcub24oXCJ0b3VjaG1vdmVcIiwgKCkgPT4ge1xuICAgIC8vICAgICB0b3VjaG1vdmUgPSAxXG4gICAgLy8gICB9KTtcbiAgICAvL1xuICAgIC8vICAgdGhpcy5ub2RlLm9uKFwidG91Y2hzdGFydFwiLCAoZCkgPT4ge1xuICAgIC8vICAgICBNb3VzZS50b3VjaFN0YXJ0KGQuaW5kZXgsIHRoaXMubGlua0RhdGEsIHRoaXMubGluaywgdGhpcy5ub2RlLCB0aGlzLmxhYmVsKTtcbiAgICAvLyAgIH0pO1xuICAgIC8vXG4gICAgLy8gICBub2RlLm9uKFwidG91Y2hlbmRcIiwgKCkgPT4ge1xuICAgIC8vICAgICB0b3VjaENvbG9yZWQgPSAwO1xuICAgIC8vICAgfSk7XG4gICAgLy9cbiAgICAvLyAgIHRoaXMuc3ZnLm9uKFwidG91Y2hzdGFydFwiLCAoKSA9PiB7XG4gICAgLy8gICAgIHRvdWNoQ29sb3JlZCA9IDE7XG4gICAgLy8gICB9KTtcbiAgICAvL1xuICAgIC8vICAgdGhpcy5zdmcub24oXCJ0b3VjaGVuZFwiLCAoKSA9PiB7XG4gICAgLy8gICAgIGlmICh0b3VjaG1vdmUgPT09IDApIHtcbiAgICAvLyAgICAgICBpZiAodG91Y2hDb2xvcmVkID09PSAxKSB7XG4gICAgLy8gICAgICAgICB0aGlzLm5vZGUuYXR0cihcImNsYXNzXCIsIFwibm9kZVJldHVybkZhZGVcIik7XG4gICAgLy8gICAgICAgICB0aGlzLmxpbmsuYXR0cihcImNsYXNzXCIsIFwibGluZVJldHVybkZhZGVcIik7XG4gICAgLy8gICAgICAgICB0aGlzLmxhYmVsLmF0dHIoXCJjbGFzc1wiLCBcIm5vZGVUZXh0UmV0dXJuRmFkZVwiKTtcbiAgICAvLyAgICAgICB9XG4gICAgLy8gICAgIH1cbiAgICAvLyAgICAgdG91Y2htb3ZlID0gMFxuICAgIC8vICAgfSk7XG4gICAgLy8gfVxuICB9XG5cblxuICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAvLyBjb21wYXJpc2lvbiBtb2RlXG4gIC8vIGdldE5vZGVOYW1lKCkge1xuICAvLyAgIGNvbnNvbGUubG9nKHRoaXMubm9kZUluZm8ubmFtZSk7XG4gIC8vICAgcmV0dXJuIHRoaXMubm9kZUluZm8ubmFtZTtcbiAgLy8gfVxuXG4gIGRldGVjdE5vZGVJbmRleChub2RlTmFtZSkge1xuICAgIGZvciAobGV0IGkgPSAwLCBsID0gdGhpcy5ub2RlRGF0YS5sZW5ndGg7IGwgPiBpOyBpKyspIHtcbiAgICAgIGlmICh0aGlzLm5vZGVEYXRhW2ldLm5hbWUgPT09IG5vZGVOYW1lKSB7XG4gICAgICAgIHJldHVybiBpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG5cbiAgLypcbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4gIExlZ2VuZC5wdXRJZDJMZWdlbmQoY2VsbCwgbGVnZW5kTmFtZSk7XG4gIC8vIOODjuODvOODieOCkuabtOaWsOOBmeOCi+WgtOWQiOOBr+WGjeW6puOCr+ODqeOCueOCkuS7mOS4juOBmeOCi+W/heimgeOBguOCilxuICBMZWdlbmQucHV0Q2xhc3MyTm9kZShub2RlcywgY2lyY2xlKTtcblxuXG4gIGxldCBsZWdlbmRGaWx0ZXIgPSBkMy5zZWxlY3RBbGwoXCIuY2VsbFwiKTtcbiAgaWYgKCFpc1NwKSB7XG4gICAgbGVnZW5kRmlsdGVyLm9uKFwibW91c2VvdmVyXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNvbnN0IGxlZ2VuZElkID0gdGhpcy5pZC5zbGljZSg5KTtcbiAgICAgIExlZ2VuZC5tb3VzZW92ZXJGaWx0ZXIobGVnZW5kSWQsIGNpcmNsZSwgY2VsbCwgdGhpcy5jb2xvcik7XG5cbiAgICB9KTtcblxuICAgIGxlZ2VuZEZpbHRlci5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNvbnN0IGxlZ2VuZElkID0gdGhpcy5pZC5zbGljZSg5KTtcbiAgICAgIExlZ2VuZC5tb3VzZW92ZXJDbGljayhsZWdlbmRJZCwgY2lyY2xlLCBjZWxsLCB0aGlzLmNvbG9yKTtcblxuICAgIH0pO1xuXG4gICAgLy8gbGVnZW5kIGZpbHRlcihtb3VzZSBvdXQpXG4gICAgbGVnZW5kRmlsdGVyLm9uKFwibW91c2VvdXRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgY29uc3QgbGVnZW5kSWQgPSB0aGlzLmlkLnNsaWNlKDkpO1xuICAgICAgTGVnZW5kLm1vdXNlb3V0RmlsdGVyKGxlZ2VuZElkLCBjaXJjbGUsIGNlbGwpO1xuICAgIH0pO1xuICB9XG4qL1xufSIsImltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXBkYXRlIHtcblxuICBzdGF0aWMgZGVsZXRlT2JqKGxpbmtMaW5lLCBub2RlQ2lyY2xlLCBub2RlVGV4dCwgbGlua0RhdGEsIG5vZGVEYXRhKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGxpbms6IFVwZGF0ZS5kZWxldGVMaW5rRGF0YShsaW5rTGluZSwgbGlua0RhdGEpLFxuICAgICAgbm9kZTogVXBkYXRlLmRlbGV0ZU5vZGVEYXRhKG5vZGVDaXJjbGUsIG5vZGVEYXRhKSxcbiAgICAgIGxhYmVsOiBVcGRhdGUuZGVsZXRlTGFiZWxEYXRhKG5vZGVUZXh0LCBub2RlRGF0YSlcbiAgICB9XG4gIH1cblxuXG4gIHN0YXRpYyBhZGRPYmoobGlua0xpbmUsIG5vZGVDaXJjbGUsIG5vZGVUZXh0LCBub2RlRGF0YSwgbGlua0RhdGEsIGNvbG9yLCBkcmFnc3RhcnRlZCwgZHJhZ2dpbmcsIGRyYWdlbmRlZCkge1xuICAgIHJldHVybiB7XG4gICAgICBsaW5rOiBVcGRhdGUuYWRkTGlua0RhdGEobGlua0xpbmUsIGxpbmtEYXRhLCBjb2xvciksXG4gICAgICBub2RlOiBVcGRhdGUuYWRkTm9kZURhdGEobm9kZUNpcmNsZSwgbm9kZURhdGEsIGNvbG9yLCBkcmFnc3RhcnRlZCwgZHJhZ2dpbmcsIGRyYWdlbmRlZCksXG4gICAgICBsYWJlbDogVXBkYXRlLmFkZExhYmVsRGF0YShub2RlVGV4dClcbiAgICB9XG4gIH1cblxuXG4gIHN0YXRpYyBkZWxldGVMaW5rRGF0YSAobGlua0xpbmUsIGxpbmtEYXRhKSB7XG4gICAgbGlua0xpbmUgPSBsaW5rTGluZS5kYXRhKGxpbmtEYXRhLCAoZCkgPT4ge1xuICAgICAgcmV0dXJuIGQubmFtZTtcbiAgICB9KTtcbiAgICBsaW5rTGluZVxuICAgICAgICAuZXhpdCgpXG4gICAgICAgIC8vIC50cmFuc2l0aW9uKClcbiAgICAgICAgLy8gLmR1cmF0aW9uKDEwMDApXG4gICAgICAgIC8vIC5lYXNlKGQzLmVhc2VMaW5lYXIpXG4gICAgICAgIC8vIC5hdHRyKFwib3BhY2l0eVwiLCAwLjApXG4gICAgICAgIC5yZW1vdmUoKTtcblxuICAgIHJldHVybiBsaW5rTGluZTtcbiAgfVxuXG5cbiAgc3RhdGljIGFkZExpbmtEYXRhIChsaW5rTGluZSwgbGlua0RhdGEsIGNvbG9yKSB7XG4gICAgbGV0IGxpbmtMaW5lRW50ZXIgPSBsaW5rTGluZVxuICAgICAgICAuZW50ZXIoKVxuICAgICAgICAuYXBwZW5kKFwibGluZVwiKVxuICAgICAgICAvLyAuYXR0cihcIm9wYWNpdHlcIiwgMC4wKVxuICAgICAgICAuYXR0cihcInN0cm9rZS13aWR0aFwiLCAgKGQpID0+IHtcbiAgICAgICAgICByZXR1cm4gTWF0aC5zcXJ0KGQud2VpZ2h0KSAqIDAuMSArIGQud2VpZ2h0ICogMC4wMTU7XG4gICAgICAgIH0pXG4gICAgICAgIC5hdHRyKFwic3Ryb2tlXCIsICAoZCkgPT4ge1xuICAgICAgICAgIHJldHVybiBjb2xvcltkLmdyb3VwX2lkX3NdXG4gICAgICAgIH0pO1xuXG4gICAgbGlua0xpbmUgPSBsaW5rTGluZUVudGVyLm1lcmdlKGxpbmtMaW5lKTtcbiAgICBsaW5rTGluZVxuICAgICAgICAvLyAudHJhbnNpdGlvbigpXG4gICAgICAgIC8vIC5kdXJhdGlvbigxMDAwKVxuICAgICAgICAvLyAuZWFzZShkMy5lYXNlTGluZWFyKVxuICAgICAgICAuYXR0cihcIm9wYWNpdHlcIiwgMC41KTtcblxuXG4gICAgLy8gY2hhbmdlIGxpbmUgZGlzcGxheSBvcmRlciB0byBiYWNrIG9mIG5vZGVcbiAgICBmb3IgKGxldCBpID0gbGlua0RhdGEubGVuZ3RoIC0gMTsgMCA8PSBpOyBpLS0pIHtcbiAgICAgIGNvbnN0IGxpbmtTVkcgPSBsaW5rTGluZVsnX2dyb3VwcyddWzBdW2ldO1xuICAgICAgY29uc3QgZmlyc3RTVkcgPSBsaW5rU1ZHLnBhcmVudE5vZGUuZmlyc3RDaGlsZDtcbiAgICAgIGlmIChmaXJzdFNWRykge1xuICAgICAgICBsaW5rU1ZHLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGxpbmtTVkcsIGZpcnN0U1ZHKTtcbiAgICAgIH1cbiAgICB9XG5cblxuICAgIHJldHVybiBsaW5rTGluZTtcbiAgfVxuXG5cbiAgc3RhdGljIGRlbGV0ZU5vZGVEYXRhIChub2RlQ2lyY2xlLCBub2RlRGF0YSkge1xuICAgIG5vZGVDaXJjbGUgPSBub2RlQ2lyY2xlLmRhdGEobm9kZURhdGEsICAoZCkgPT4ge1xuICAgICAgcmV0dXJuIGQubmFtZTtcbiAgICB9KTtcbiAgICBub2RlQ2lyY2xlXG4gICAgICAgIC5leGl0KClcbiAgICAgICAgLy8gLnRyYW5zaXRpb24oKVxuICAgICAgICAvLyAuZHVyYXRpb24oMTAwMClcbiAgICAgICAgLy8gLmVhc2UoZDMuZWFzZUxpbmVhcilcbiAgICAgICAgLy8gLmF0dHIoXCJvcGFjaXR5XCIsIDAuMClcbiAgICAgICAgLnJlbW92ZSgpO1xuXG4gICAgcmV0dXJuIG5vZGVDaXJjbGU7XG4gIH1cblxuXG4gICBzdGF0aWMgYWRkTm9kZURhdGEgKG5vZGVDaXJjbGUsIG5vZGVEYXRhLCBjb2xvciwgZHJhZ3N0YXJ0ZWQsIGRyYWdnaW5nLCBkcmFnZW5kZWQpIHtcbiAgICBub2RlQ2lyY2xlID0gbm9kZUNpcmNsZVxuICAgICAgICAuZW50ZXIoKVxuICAgICAgICAuYXBwZW5kKFwiY2lyY2xlXCIpXG4gICAgICAgIC8vIC5hdHRyKFwib3BhY2l0eVwiLCBcIjAuMFwiKVxuICAgICAgICAuYXR0cihcInJcIiwgIChkKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIE1hdGguc3FydChkLnNpemUpICogNCArIDIuNTtcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsICAoZCkgPT4ge1xuICAgICAgICAgIHJldHVybiBjb2xvcltkLmdyb3VwX2lkXVxuICAgICAgICB9KVxuICAgICAgICAuYXR0cihcInN0cm9rZVwiLCBcIiNmZmZjZjlcIilcbiAgICAgICAgLmNhbGwoZDMuZHJhZygpXG4gICAgICAgICAgICAub24oXCJzdGFydFwiLCBkcmFnc3RhcnRlZClcbiAgICAgICAgICAgIC5vbihcImRyYWdcIiwgZHJhZ2dpbmcpXG4gICAgICAgICAgICAub24oXCJlbmRcIiwgZHJhZ2VuZGVkKSlcbiAgICAgICAgLm1lcmdlKG5vZGVDaXJjbGUpO1xuXG4gICAgbm9kZUNpcmNsZVxuICAgICAgICAvLyAudHJhbnNpdGlvbigpXG4gICAgICAgIC8vIC5kdXJhdGlvbigxMDAwKVxuICAgICAgICAvLyAuZWFzZShkMy5lYXNlTGluZWFyKVxuICAgICAgICAvLyAuYXR0cihcIm9wYWNpdHlcIiwgMC42KTtcblxuICAgIHJldHVybiBub2RlQ2lyY2xlO1xuICB9XG5cblxuICBzdGF0aWMgZGVsZXRlTGFiZWxEYXRhIChub2RlVGV4dCwgbm9kZURhdGEpIHtcbiAgICBub2RlVGV4dCA9IG5vZGVUZXh0LmRhdGEobm9kZURhdGEsICAoZCkgPT4ge1xuICAgICAgcmV0dXJuIGQubmFtZTtcbiAgICB9KTtcbiAgICBub2RlVGV4dFxuICAgICAgICAuZXhpdCgpXG4gICAgICAgIC8vIC50cmFuc2l0aW9uKClcbiAgICAgICAgLy8gLmR1cmF0aW9uKDEwMDApXG4gICAgICAgIC8vIC5lYXNlKGQzLmVhc2VMaW5lYXIpXG4gICAgICAgIC8vIC5hdHRyKFwib3BhY2l0eVwiLCAwLjApXG4gICAgICAgIC5yZW1vdmUoKTtcblxuICAgIHJldHVybiBub2RlVGV4dDtcbiAgfVxuXG5cbiAgc3RhdGljIGFkZExhYmVsRGF0YShub2RlVGV4dCkge1xuICAgIG5vZGVUZXh0ID0gbm9kZVRleHQuZW50ZXIoKS5hcHBlbmQoXCJ0ZXh0XCIpLm1lcmdlKG5vZGVUZXh0KVxuICAgICAgICAudGV4dCgoZCkgPT4ge1xuICAgICAgICAgIHJldHVybiBkLm5hbWU7XG4gICAgICAgIH0pO1xuXG4gICAgbm9kZVRleHRcbiAgICAgICAgLy8gLmF0dHIoXCJvcGFjaXR5XCIsIDEuMClcbiAgICAgICAgLmF0dHIoXCJmb250LXNpemVcIiwgXCIuN2VtXCIpXG4gICAgICAgIC5hdHRyKFwiZm9udC13ZWlnaHRcIiwgXCIzMDBcIilcbiAgICAgICAgLmF0dHIoXCJjbGFzc1wiLCBcIm5vbkRyYWdcIilcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIFwiIzM1MjYyMlwiKVxuICAgICAgICAuYXR0cih7XCJmb250LWZhbWlseVwiOiBbXCJGdXR1cmFcIiwgXCJOdW5pdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkFyaWFsXCIsIFwic2Fucy1zZXJpZlwiXX0pXG5cbiAgICAgLy8gbm9kZVRleHQudHJhbnNpdGlvbigpXG4gICAgIC8vICAgIC5kdXJhdGlvbigxMDAwKVxuICAgICAvLyAgICAuZWFzZShkMy5lYXNlTGluZWFyKVxuICAgICAvLyAgICAuc3R5bGUoXCJvcGFjaXR5XCIsIDAuNik7XG5cbiAgICByZXR1cm4gbm9kZVRleHQ7XG4gIH1cblxuXG4gIHN0YXRpYyBub2RlTGFiZWxPcGFjaXR5KHNlbGVjdGVkVHlwZSwgbm9kZUNpcmNsZSwgbm9kZVRleHQsIG5vZGVEYXRhKSB7XG4gICAgaWYgKHNlbGVjdGVkVHlwZSA9PT0gJ1VtYW1pJykge1xuICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSBub2RlRGF0YS5sZW5ndGg7IGwgPiBpOyBpKyspIHtcbiAgICAgICAgbm9kZUNpcmNsZVsnX2dyb3VwcyddWzBdW2ldLnNldEF0dHJpYnV0ZShcIm9wYWNpdHlcIiwgbm9kZURhdGFbaV0udW1hbWkgPT09IDEgPyBcIjAuNlwiIDogXCIwLjJcIik7XG4gICAgICAgIG5vZGVUZXh0WydfZ3JvdXBzJ11bMF1baV0uc2V0QXR0cmlidXRlKFwib3BhY2l0eVwiLCBub2RlRGF0YVtpXS51bWFtaSA9PT0gMSA/IFwiMS4wXCIgOiBcIjAuNVwiKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbm9kZUNpcmNsZS5hdHRyKFwib3BhY2l0eVwiLCAwLjYpO1xuICAgICAgbm9kZVRleHQuYXR0cihcIm9wYWNpdHlcIiwgMS4wKTtcbiAgICB9XG4gIH1cblxuXG4gIHN0YXRpYyBzdG9yZVByZXZpb3VzTm9kZVBvc2l0aW9uKG5vZGVDaXJjbGUsIG5vZGVEYXRhLCBwcmV2Tm9kZVBvc2l0aW9uKSB7XG4gICAgLy8gZ2V0IHByZXZpb3VzIG5vZGUgcG9zaXRpb25cbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IG5vZGVEYXRhLmxlbmd0aDsgbCA+IGk7IGkrKykge1xuICAgICAgcHJldk5vZGVQb3NpdGlvbi5wdXNoKHtcbiAgICAgICAgJ25hbWUnOiBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1baV1bJ19fZGF0YV9fJ11bJ25hbWUnXSxcbiAgICAgICAgJ3gnOiBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1baV1bJ2N4J11bJ2Jhc2VWYWwnXVsndmFsdWUnXSxcbiAgICAgICAgJ3knOiBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1baV1bJ2N5J11bJ2Jhc2VWYWwnXVsndmFsdWUnXVxuICAgICAgfSlcbiAgICB9XG5cbiAgICByZXR1cm4gcHJldk5vZGVQb3NpdGlvbjtcbiAgfVxuXG4gIHN0YXRpYyBzaW11bGF0aW9uKGxpbmtEYXRhLCBub2RlRGF0YSwgc2ltdWxhdGlvbiwgdGlja2VkKSB7XG4gICAgc2ltdWxhdGlvblxuICAgICAgICAubm9kZXMobm9kZURhdGEpXG4gICAgICAgIC5vbihcInRpY2tcIiwgdGlja2VkKTtcbiAgICBzaW11bGF0aW9uLmZvcmNlKFwibGlua1wiKVxuICAgICAgICAubGlua3MobGlua0RhdGEpO1xuICAgIHNpbXVsYXRpb24uc3RvcCgpO1xuICB9XG5cblxuICBzdGF0aWMgdHJhbnNpdE5vZGVQb3NpdGlvbiAobm9kZUNpcmNsZSwgbm9kZVRleHQsIG5vZGVEYXRhLCBwcmV2Tm9kZVBvc2l0aW9uLCBkdXJhdGlvblRpbWUpIHtcbiAgICBjb25zdCB0ID0gZDMudHJhbnNpdGlvbigpLmR1cmF0aW9uKGR1cmF0aW9uVGltZSk7XG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBub2RlRGF0YS5sZW5ndGg7IGwgPiBpOyBpKyspIHtcbiAgICAgIC8vIG5ldyBub2RlIC0+IG5ldyBwb3NpdGlvbiwgZXhpc3Rpbmcgbm9kZSAtPiBwcmV2aW91cyBwb3NpdGlvblxuICAgICAgaWYgKHByZXZOb2RlUG9zaXRpb25baV1bJ3gnXSA9PT0gMCkge1xuICAgICAgICBwcmV2Tm9kZVBvc2l0aW9uW2ldWyd4J10gPSBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1baV1bJ19fZGF0YV9fJ11bJ3gnXTtcbiAgICAgICAgcHJldk5vZGVQb3NpdGlvbltpXVsneSddID0gbm9kZUNpcmNsZVsnX2dyb3VwcyddWzBdW2ldWydfX2RhdGFfXyddWyd5J107XG4gICAgICB9XG4gICAgICAvLyBub2RlXG4gICAgICBub2RlQ2lyY2xlWydfZ3JvdXBzJ11bMF1baV0uc2V0QXR0cmlidXRlKFwiY3hcIiwgcHJldk5vZGVQb3NpdGlvbltpXVsneCddKTtcbiAgICAgIG5vZGVDaXJjbGVbJ19ncm91cHMnXVswXVtpXS5zZXRBdHRyaWJ1dGUoXCJjeVwiLCBwcmV2Tm9kZVBvc2l0aW9uW2ldWyd5J10pO1xuICAgICAgLy8gbGFiZWxcbiAgICAgIG5vZGVUZXh0WydfZ3JvdXBzJ11bMF1baV0uc2V0QXR0cmlidXRlKFwieFwiLCBwcmV2Tm9kZVBvc2l0aW9uW2ldWyd4J10pO1xuICAgICAgbm9kZVRleHRbJ19ncm91cHMnXVswXVtpXS5zZXRBdHRyaWJ1dGUoXCJ5XCIsIHByZXZOb2RlUG9zaXRpb25baV1bJ3knXSk7XG4gICAgfVxuXG4gICAgbm9kZUNpcmNsZS50cmFuc2l0aW9uKHQpXG4gICAgICAgIC5hdHRyKFwiY3hcIiwgZCA9PiBkLngpXG4gICAgICAgIC5hdHRyKFwiY3lcIiwgZCA9PiBkLnkpO1xuXG4gICAgbm9kZVRleHQudHJhbnNpdGlvbih0KVxuICAgICAgICAuYXR0cihcInhcIiwgZCA9PiBkLngpXG4gICAgICAgIC5hdHRyKFwieVwiLCBkID0+IGQueSk7XG4gIH07XG5cblxuICBzdGF0aWMgdHJhbnNpdExpbmtQb3NpdGlvbiAobGlua0xpbmUsIGxpbmtEYXRhLCBwcmV2Tm9kZVBvc2l0aW9uLCBkdXJhdGlvblRpbWUpIHtcbiAgICBjb25zdCB0ID0gZDMudHJhbnNpdGlvbigpLmR1cmF0aW9uKGR1cmF0aW9uVGltZSk7XG5cbiAgICBsZXQgbm9kZVBvc2l0aW9uSW5kZXggPSB7fTtcbiAgICBmb3IgKGxldCBpMSA9IDAsIGwxID0gcHJldk5vZGVQb3NpdGlvbi5sZW5ndGg7IGwxID4gaTE7IGkxKyspIHtcbiAgICAgIG5vZGVQb3NpdGlvbkluZGV4W3ByZXZOb2RlUG9zaXRpb25baTFdWyduYW1lJ11dID0gaTE7XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaTIgPSAwLCBsMiA9IGxpbmtEYXRhLmxlbmd0aDsgbDIgPiBpMjsgaTIrKykge1xuICAgICAgY29uc3Qgc291cmNlTmFtZSA9IGxpbmtMaW5lWydfZ3JvdXBzJ11bMF1baTJdWydfX2RhdGFfXyddWydzb3VyY2UnXVsnbmFtZSddO1xuICAgICAgY29uc3QgdGFyZ2V0TmFtZSA9IGxpbmtMaW5lWydfZ3JvdXBzJ11bMF1baTJdWydfX2RhdGFfXyddWyd0YXJnZXQnXVsnbmFtZSddO1xuXG4gICAgICBsaW5rTGluZVsnX2dyb3VwcyddWzBdW2kyXS5zZXRBdHRyaWJ1dGUoXCJ4MVwiLCBwcmV2Tm9kZVBvc2l0aW9uW25vZGVQb3NpdGlvbkluZGV4W3NvdXJjZU5hbWVdXVsneCddKTtcbiAgICAgIGxpbmtMaW5lWydfZ3JvdXBzJ11bMF1baTJdLnNldEF0dHJpYnV0ZShcInkxXCIsIHByZXZOb2RlUG9zaXRpb25bbm9kZVBvc2l0aW9uSW5kZXhbc291cmNlTmFtZV1dWyd5J10pO1xuICAgICAgbGlua0xpbmVbJ19ncm91cHMnXVswXVtpMl0uc2V0QXR0cmlidXRlKFwieDJcIiwgcHJldk5vZGVQb3NpdGlvbltub2RlUG9zaXRpb25JbmRleFt0YXJnZXROYW1lXV1bJ3gnXSk7XG4gICAgICBsaW5rTGluZVsnX2dyb3VwcyddWzBdW2kyXS5zZXRBdHRyaWJ1dGUoXCJ5MlwiLCBwcmV2Tm9kZVBvc2l0aW9uW25vZGVQb3NpdGlvbkluZGV4W3RhcmdldE5hbWVdXVsneSddKTtcbiAgICB9XG5cbiAgICBsaW5rTGluZS50cmFuc2l0aW9uKHQpXG4gICAgICAgIC5hdHRyKFwieDFcIiwgZCA9PiBkLnNvdXJjZS54KVxuICAgICAgICAuYXR0cihcInkxXCIsIGQgPT4gZC5zb3VyY2UueSlcbiAgICAgICAgLmF0dHIoXCJ4MlwiLCBkID0+IGQudGFyZ2V0LngpXG4gICAgICAgIC5hdHRyKFwieTJcIiwgZCA9PiBkLnRhcmdldC55KVxuICB9O1xuXG5cbiAgc3RhdGljIGZsYXZvclNpbXVsYXRpb24oc2ltdWxhdGlvbiwgY2VudGVyWCwgY2VudGVyWSkge1xuICAgIHNpbXVsYXRpb25cbiAgICAgICAgLmZvcmNlKFwibGlua1wiLCBkMy5mb3JjZUxpbmsoKS5kaXN0YW5jZSg4MCkpXG4gICAgICAgIC5mb3JjZShcImNoYXJnZVwiLCBkMy5mb3JjZU1hbnlCb2R5KCkuc3RyZW5ndGgoLTMwMCkpXG4gICAgICAgIC5mb3JjZShcInhcIiwgZDMuZm9yY2VYKCkuc3RyZW5ndGgoMC4yNSkueChjZW50ZXJYKSlcbiAgICAgICAgLmZvcmNlKFwieVwiLCBkMy5mb3JjZVkoKS5zdHJlbmd0aCgwLjM1KS55KGNlbnRlclkpKTtcbiAgfVxuXG5cbiAgc3RhdGljIHVtYW1pU2ltdWxhdGlvbihzaW11bGF0aW9uLCBjZW50ZXJYLCBjZW50ZXJZKSB7XG4gICAgc2ltdWxhdGlvblxuICAgICAgICAuZm9yY2UoXCJsaW5rXCIsXG4gICAgICAgICAgICBkMy5mb3JjZUxpbmsoKS5kaXN0YW5jZSgyNTApXG4gICAgICAgICAgICAgICAgLmlkKCAoZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGQubmFtZTtcbiAgICAgICAgICAgICAgICB9KSlcbiAgICAgICAgLmZvcmNlKFwiY2hhcmdlXCIsIGQzLmZvcmNlTWFueUJvZHkoKS5zdHJlbmd0aCgtMjAwMCkpXG4gICAgICAgIC5mb3JjZShcInhcIiwgZDMuZm9yY2VYKCkuc3RyZW5ndGgoMS41KS54KGNlbnRlclgpKVxuICAgICAgICAuZm9yY2UoXCJ5XCIsIGQzLmZvcmNlWSgpLnN0cmVuZ3RoKDIuMjUpLnkoY2VudGVyWSkpO1xuICB9XG5cbn0iLCJjb25zdCBmbGF2b3JEYXRhID0ge1wibGlua3NcIjogW3tcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAzMjAsIFwic291cmNlXCI6IFwiY2l0cnVzXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlXCIsIFwid2VpZ2h0XCI6IDUxLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTcxLCBcInNvdXJjZVwiOiBcIm1hbmRhcmluXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlXCIsIFwid2VpZ2h0XCI6IDU3LjB9LCB7XCJncm91cF9pZF9zXCI6IDAsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTQ4LCBcInNvdXJjZVwiOiBcImxlbW9uX3BlZWxcIiwgXCJ0YXJnZXRcIjogXCJvcmFuZ2VcIiwgXCJ3ZWlnaHRcIjogOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDU1MywgXCJzb3VyY2VcIjogXCJsaW1lXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlXCIsIFwid2VpZ2h0XCI6IDU2LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNDk5LCBcInNvdXJjZVwiOiBcImdyYXBlZnJ1aXRcIiwgXCJ0YXJnZXRcIjogXCJvcmFuZ2VcIiwgXCJ3ZWlnaHRcIjogMzAuMH0sIHtcImdyb3VwX2lkX3NcIjogNiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA2MywgXCJzb3VyY2VcIjogXCJiYXNpbFwiLCBcInRhcmdldFwiOiBcIm9yYW5nZVwiLCBcIndlaWdodFwiOiAxMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDMxOSwgXCJzb3VyY2VcIjogXCJjaXRydXNcIiwgXCJ0YXJnZXRcIjogXCJtYW5kYXJpblwiLCBcIndlaWdodFwiOiA1MS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDMxNywgXCJzb3VyY2VcIjogXCJjaXRydXNcIiwgXCJ0YXJnZXRcIjogXCJsZW1vblwiLCBcIndlaWdodFwiOiA1MS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDMxOCwgXCJzb3VyY2VcIjogXCJjaXRydXNcIiwgXCJ0YXJnZXRcIjogXCJsaW1lXCIsIFwid2VpZ2h0XCI6IDUxLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTc2LCBcInNvdXJjZVwiOiBcIm1hbmRhcmluXCIsIFwidGFyZ2V0XCI6IFwidGFuZ2VyaW5lXCIsIFwid2VpZ2h0XCI6IDUzLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTU0LCBcInNvdXJjZVwiOiBcImxpbWVcIiwgXCJ0YXJnZXRcIjogXCJ0YW5nZXJpbmVcIiwgXCJ3ZWlnaHRcIjogNTMuMH0sIHtcImdyb3VwX2lkX3NcIjogMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAzMjEsIFwic291cmNlXCI6IFwiY2l0cnVzX3BlZWxcIiwgXCJ0YXJnZXRcIjogXCJ0YW5nZXJpbmVcIiwgXCJ3ZWlnaHRcIjogMzIuMH0sIHtcImdyb3VwX2lkX3NcIjogMCwgXCJncm91cF9pZF90XCI6IDExLCBcIm5hbWVcIjogNTQ3LCBcInNvdXJjZVwiOiBcImxlbW9uX3BlZWxcIiwgXCJ0YXJnZXRcIjogXCJsaW1lX3BlZWxfb2lsXCIsIFwid2VpZ2h0XCI6IDYuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAxNywgXCJzb3VyY2VcIjogXCJhcHBsZV9icmFuZHlcIiwgXCJ0YXJnZXRcIjogXCJyZWRfd2luZVwiLCBcIndlaWdodFwiOiAxNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDMwOSwgXCJzb3VyY2VcIjogXCJjaWRlclwiLCBcInRhcmdldFwiOiBcInJlZF93aW5lXCIsIFwid2VpZ2h0XCI6IDUyLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMzc2LCBcInNvdXJjZVwiOiBcImNvZ25hY1wiLCBcInRhcmdldFwiOiBcInJlZF93aW5lXCIsIFwid2VpZ2h0XCI6IDk0LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMjEzLCBcInNvdXJjZVwiOiBcImNoYW1wYWduZV93aW5lXCIsIFwidGFyZ2V0XCI6IFwicmVkX3dpbmVcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTY4LCBcInNvdXJjZVwiOiBcImJyYW5keVwiLCBcInRhcmdldFwiOiBcInJlZF93aW5lXCIsIFwid2VpZ2h0XCI6IDE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTI2LCBcInNvdXJjZVwiOiBcImJlZXJcIiwgXCJ0YXJnZXRcIjogXCJyZWRfd2luZVwiLCBcIndlaWdodFwiOiAxMDYuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAzMTAsIFwic291cmNlXCI6IFwiY2lkZXJcIiwgXCJ0YXJnZXRcIjogXCJydW1cIiwgXCJ3ZWlnaHRcIjogNTQuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAzNzcsIFwic291cmNlXCI6IFwiY29nbmFjXCIsIFwidGFyZ2V0XCI6IFwicnVtXCIsIFwid2VpZ2h0XCI6IDk0LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTYsIFwic291cmNlXCI6IFwiYXBwbGVfYnJhbmR5XCIsIFwidGFyZ2V0XCI6IFwiY2lkZXJcIiwgXCJ3ZWlnaHRcIjogMTUuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAxNjcsIFwic291cmNlXCI6IFwiYnJhbmR5XCIsIFwidGFyZ2V0XCI6IFwicG9ydF93aW5lXCIsIFwid2VpZ2h0XCI6IDE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogNjgwLCBcInNvdXJjZVwiOiBcInJ1bVwiLCBcInRhcmdldFwiOiBcIndoaXNrZXlcIiwgXCJ3ZWlnaHRcIjogNzYuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA4MiwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiYmVlclwiLCBcIndlaWdodFwiOiAxMDIuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAzMTEsIFwic291cmNlXCI6IFwiY2lkZXJcIiwgXCJ0YXJnZXRcIjogXCJzaGVycnlcIiwgXCJ3ZWlnaHRcIjogNTIuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAzNzgsIFwic291cmNlXCI6IFwiY29nbmFjXCIsIFwidGFyZ2V0XCI6IFwic2hlcnJ5XCIsIFwid2VpZ2h0XCI6IDkwLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTY5LCBcInNvdXJjZVwiOiBcImJyYW5keVwiLCBcInRhcmdldFwiOiBcInNoZXJyeVwiLCBcIndlaWdodFwiOiAxOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDY3MSwgXCJzb3VyY2VcIjogXCJyZWRfd2luZVwiLCBcInRhcmdldFwiOiBcInNoZXJyeVwiLCBcIndlaWdodFwiOiAxMzguMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA2NTksIFwic291cmNlXCI6IFwicG9ydF93aW5lXCIsIFwidGFyZ2V0XCI6IFwic2hlcnJ5XCIsIFwid2VpZ2h0XCI6IDEzMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDY3OSwgXCJzb3VyY2VcIjogXCJydW1cIiwgXCJ0YXJnZXRcIjogXCJzaGVycnlcIiwgXCJ3ZWlnaHRcIjogODcuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA3MDYsIFwic291cmNlXCI6IFwid2hpdGVfd2luZVwiLCBcInRhcmdldFwiOiBcIndpbmVcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMzgwLCBcInNvdXJjZVwiOiBcImNvZ25hY1wiLCBcInRhcmdldFwiOiBcIndpbmVcIiwgXCJ3ZWlnaHRcIjogODIuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAyMTUsIFwic291cmNlXCI6IFwiY2hhbXBhZ25lX3dpbmVcIiwgXCJ0YXJnZXRcIjogXCJ3aW5lXCIsIFwid2VpZ2h0XCI6IDEyOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDE3MSwgXCJzb3VyY2VcIjogXCJicmFuZHlcIiwgXCJ0YXJnZXRcIjogXCJ3aW5lXCIsIFwid2VpZ2h0XCI6IDE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTMwLCBcInNvdXJjZVwiOiBcImJlZXJcIiwgXCJ0YXJnZXRcIjogXCJ3aW5lXCIsIFwid2VpZ2h0XCI6IDg2LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogNjczLCBcInNvdXJjZVwiOiBcInJlZF93aW5lXCIsIFwidGFyZ2V0XCI6IFwid2luZVwiLCBcIndlaWdodFwiOiAxMjguMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA2NjEsIFwic291cmNlXCI6IFwicG9ydF93aW5lXCIsIFwidGFyZ2V0XCI6IFwid2luZVwiLCBcIndlaWdodFwiOiAxMjguMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA2OTQsIFwic291cmNlXCI6IFwic2hlcnJ5XCIsIFwidGFyZ2V0XCI6IFwid2luZVwiLCBcIndlaWdodFwiOiAxMjguMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAxOTEsIFwic291cmNlXCI6IFwiY2FiZXJuZXRfc2F1dmlnbm9uX3dpbmVcIiwgXCJ0YXJnZXRcIjogXCJ3aW5lXCIsIFwid2VpZ2h0XCI6IDEyOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDYzNywgXCJzb3VyY2VcIjogXCJwaW5lYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDY3LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTg0LCBcInNvdXJjZVwiOiBcIm1lbG9uXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiA2Ny4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDYzMywgXCJzb3VyY2VcIjogXCJwZWFyXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAzOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDYzOSwgXCJzb3VyY2VcIjogXCJwbHVtXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiA2My4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDY2OCwgXCJzb3VyY2VcIjogXCJyYXNwYmVycnlcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDg5LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMTQsIFwic291cmNlXCI6IFwiYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDExNC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDU0MCwgXCJzb3VyY2VcIjogXCJraXdpXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAzOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDYyMSwgXCJzb3VyY2VcIjogXCJvcmFuZ2VcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDY5LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNjA3LCBcInNvdXJjZVwiOiBcIm9saXZlXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiA0Ny4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDE5LCBcInNvdXJjZVwiOiBcImFwcmljb3RcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDcwLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNjAsIFwic291cmNlXCI6IFwiYmFuYW5hXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiA2OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDYxLCBcInNvdXJjZVwiOiBcImJhcnRsZXR0X3BlYXJcIiwgXCJ0YXJnZXRcIjogXCJwZWFyXCIsIFwid2VpZ2h0XCI6IDQ5LjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogMjg0LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDgwLjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogMjEsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJiZWVmXCIsIFwid2VpZ2h0XCI6IDEwMi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDI2OCwgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwiY3VyZWRfcG9ya1wiLCBcIndlaWdodFwiOiA4My4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDMxLCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiY3VyZWRfcG9ya1wiLCBcIndlaWdodFwiOiAxMTUuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA5MSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiY3VyZWRfcG9ya1wiLCBcIndlaWdodFwiOiAxMDMuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAyODUsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcInBvcmtfc2F1c2FnZVwiLCBcIndlaWdodFwiOiA4NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDY0NSwgXCJzb3VyY2VcIjogXCJwb3JrXCIsIFwidGFyZ2V0XCI6IFwicG9ya19zYXVzYWdlXCIsIFwid2VpZ2h0XCI6IDExNS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQ5LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwicG9ya19zYXVzYWdlXCIsIFwid2VpZ2h0XCI6IDExOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDExMSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicG9ya19zYXVzYWdlXCIsIFwid2VpZ2h0XCI6IDEwMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQwMywgXCJzb3VyY2VcIjogXCJjdXJlZF9wb3JrXCIsIFwidGFyZ2V0XCI6IFwicG9ya19zYXVzYWdlXCIsIFwid2VpZ2h0XCI6IDExNS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDYwNCwgXCJzb3VyY2VcIjogXCJtdXR0b25cIiwgXCJ0YXJnZXRcIjogXCJwb3JrX3NhdXNhZ2VcIiwgXCJ3ZWlnaHRcIjogNTIuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAyODcsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfYmVlZlwiLCBcIndlaWdodFwiOiA5OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA4LCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDYyOSwgXCJzb3VyY2VcIjogXCJwZWFudXRcIiwgXCJ0YXJnZXRcIjogXCJyb2FzdGVkX2JlZWZcIiwgXCJ3ZWlnaHRcIjogNzQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogMzY5LCBcInNvdXJjZVwiOiBcImNvZmZlZVwiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfYmVlZlwiLCBcIndlaWdodFwiOiAxMDUuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA2MDksIFwic291cmNlXCI6IFwib25pb25cIiwgXCJ0YXJnZXRcIjogXCJyb2FzdGVkX2JlZWZcIiwgXCJ3ZWlnaHRcIjogMzIuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA2NDcsIFwic291cmNlXCI6IFwicG9ya1wiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfYmVlZlwiLCBcIndlaWdodFwiOiA5Ny4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDUxLCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDEwMi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDExMywgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDE5OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQwNCwgXCJzb3VyY2VcIjogXCJjdXJlZF9wb3JrXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDEwNS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDEyNywgXCJzb3VyY2VcIjogXCJiZWVyXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDEwNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDU4NywgXCJzb3VyY2VcIjogXCJtaWxrXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDc3LjB9LCB7XCJncm91cF9pZF9zXCI6IDgsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDYyOCwgXCJzb3VyY2VcIjogXCJwZWFudXRcIiwgXCJ0YXJnZXRcIjogXCJwZWFudXRfYnV0dGVyXCIsIFwid2VpZ2h0XCI6IDk3LjB9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMTEsIFwibmFtZVwiOiAzNjYsIFwic291cmNlXCI6IFwiY29mZmVlXCIsIFwidGFyZ2V0XCI6IFwicGVhbnV0X2J1dHRlclwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiA4LCBcImdyb3VwX2lkX3RcIjogOCwgXCJuYW1lXCI6IDYzMCwgXCJzb3VyY2VcIjogXCJwZWFudXRcIiwgXCJ0YXJnZXRcIjogXCJyb2FzdGVkX3BlYW51dFwiLCBcIndlaWdodFwiOiA5Ny4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDgsIFwibmFtZVwiOiAzNzAsIFwic291cmNlXCI6IFwiY29mZmVlXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9wZWFudXRcIiwgXCJ3ZWlnaHRcIjogODYuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiA4LCBcIm5hbWVcIjogNjMxLCBcInNvdXJjZVwiOiBcInBlYW51dF9idXR0ZXJcIiwgXCJ0YXJnZXRcIjogXCJyb2FzdGVkX3BlYW51dFwiLCBcIndlaWdodFwiOiAxNDQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDM3NCwgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJ0ZWFcIiwgXCJ3ZWlnaHRcIjogODYuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDM2MywgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJncmVlbl90ZWFcIiwgXCJ3ZWlnaHRcIjogOTMuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiA0LCBcIm5hbWVcIjogMzY3LCBcInNvdXJjZVwiOiBcImNvZmZlZVwiLCBcInRhcmdldFwiOiBcInBvcGNvcm5cIiwgXCJ3ZWlnaHRcIjogMjUuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjMyLCBcInNvdXJjZVwiOiBcInBlYW51dF9idXR0ZXJcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDg4LjB9LCB7XCJncm91cF9pZF9zXCI6IDgsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjc3LCBcInNvdXJjZVwiOiBcInJvYXN0ZWRfcGVhbnV0XCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA4OC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY2OSwgXCJzb3VyY2VcIjogXCJyYXdfYmVlZlwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogOTYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1OTIsIFwic291cmNlXCI6IFwibXVuZ19iZWFuXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU1MSwgXCJzb3VyY2VcIjogXCJsaW1hX2JlYW5cIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDg2LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogODAsIFwic291cmNlXCI6IFwiYmVhblwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogODYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1MzksIFwic291cmNlXCI6IFwia2lkbmV5X2JlYW5cIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDg2LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjcwLCBcInNvdXJjZVwiOiBcInJlZF9iZWFuXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDE0MSwgXCJzb3VyY2VcIjogXCJibGFja19iZWFuXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDYxMSwgXCJzb3VyY2VcIjogXCJvbmlvblwiLCBcInRhcmdldFwiOiBcInNoYWxsb3RcIiwgXCJ3ZWlnaHRcIjogMTIuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2NzUsIFwic291cmNlXCI6IFwicm9hc3RlZF9iZWVmXCIsIFwidGFyZ2V0XCI6IFwic2hhbGxvdFwiLCBcIndlaWdodFwiOiAxMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQ0LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwibXV0dG9uXCIsIFwid2VpZ2h0XCI6IDUyLjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogOTksIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImxhbWJcIiwgXCJ3ZWlnaHRcIjogNTguMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAxMTAsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcInBvcmtfbGl2ZXJcIiwgXCJ3ZWlnaHRcIjogMTYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1NzksIFwic291cmNlXCI6IFwibWF0c3V0YWtlXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMTE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjQyLCBcInNvdXJjZVwiOiBcInBvcmNpbmlcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAxMTcuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1NzgsIFwic291cmNlXCI6IFwibWF0c3V0YWtlXCIsIFwidGFyZ2V0XCI6IFwibXVzaHJvb21cIiwgXCJ3ZWlnaHRcIjogMTE3LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDEyNCwgXCJzb3VyY2VcIjogXCJiZWVyXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMjMuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDMzMywgXCJzb3VyY2VcIjogXCJjb2NvYVwiLCBcInRhcmdldFwiOiBcImthdHN1b2J1c2hpXCIsIFwid2VpZ2h0XCI6IDIzLjB9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAxNDgsIFwic291cmNlXCI6IFwiYmxhY2tfdGVhXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMjYuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA1ODYsIFwic291cmNlXCI6IFwibWlsa1wiLCBcInRhcmdldFwiOiBcInBhcm1lc2FuX2NoZWVzZVwiLCBcIndlaWdodFwiOiA3OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE5MywgXCJzb3VyY2VcIjogXCJjYW1lbWJlcnRfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE2MiwgXCJzb3VyY2VcIjogXCJibHVlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInBhcm1lc2FuX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMzcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMzEsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwYXJtZXNhbl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTM0LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjU0LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcInBhcm1lc2FuX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAzOTcsIFwic291cmNlXCI6IFwiY3JlYW1fY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDUxOCwgXCJzb3VyY2VcIjogXCJncnV5ZXJlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInBhcm1lc2FuX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMzQuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDgsIFwibmFtZVwiOiA2MDYsIFwic291cmNlXCI6IFwibnV0bWVnXCIsIFwidGFyZ2V0XCI6IFwic2VlZFwiLCBcIndlaWdodFwiOiAxMi4wfSwge1wiZ3JvdXBfaWRfc1wiOiA5LCBcImdyb3VwX2lkX3RcIjogOCwgXCJuYW1lXCI6IDQ4OCwgXCJzb3VyY2VcIjogXCJnaW5nZXJcIiwgXCJ0YXJnZXRcIjogXCJzZWVkXCIsIFwid2VpZ2h0XCI6IDEwLjB9LCB7XCJncm91cF9pZF9zXCI6IDgsIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMTQ3LCBcInNvdXJjZVwiOiBcImJsYWNrX3Nlc2FtZV9zZWVkXCIsIFwidGFyZ2V0XCI6IFwiZ2luZ2VyXCIsIFwid2VpZ2h0XCI6IDEwLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMiwgXCJzb3VyY2VcIjogXCJhcHBsZVwiLCBcInRhcmdldFwiOiBcImFwcmljb3RcIiwgXCJ3ZWlnaHRcIjogNzQuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEzLCBcIm5hbWVcIjogNywgXCJzb3VyY2VcIjogXCJhcHBsZVwiLCBcInRhcmdldFwiOiBcImhvbmV5XCIsIFwid2VpZ2h0XCI6IDQxLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMywgXCJzb3VyY2VcIjogXCJhcHBsZVwiLCBcInRhcmdldFwiOiBcImJhbmFuYVwiLCBcIndlaWdodFwiOiA4NS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE5MiwgXCJzb3VyY2VcIjogXCJjYW1lbWJlcnRfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE1NSwgXCJzb3VyY2VcIjogXCJibHVlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImNoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMTYsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJjaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMTYzLCBcInNvdXJjZVwiOiBcImJsdWVfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicHJvdm9sb25lX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMzMuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMzMsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwcm92b2xvbmVfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI1NiwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwcm92b2xvbmVfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE1NywgXCJzb3VyY2VcIjogXCJibHVlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImNyZWFtXCIsIFwid2VpZ2h0XCI6IDI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjIwLCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiY3JlYW1cIiwgXCJ3ZWlnaHRcIjogMjguMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAxNjQsIFwic291cmNlXCI6IFwiYmx1ZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJyb21hbm9fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDIzNCwgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInJvbWFub19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI5LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjU3LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcInJvbWFub19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNjY2LCBcInNvdXJjZVwiOiBcInByb3ZvbG9uZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJyb21hbm9fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE1OSwgXCJzb3VyY2VcIjogXCJibHVlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImZldGFfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDIyMywgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImZldGFfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI0NiwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJmZXRhX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAzOTIsIFwic291cmNlXCI6IFwiY3JlYW1fY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZmV0YV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzgzLCBcInNvdXJjZVwiOiBcImNvdHRhZ2VfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZmV0YV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMTU2LCBcInNvdXJjZVwiOiBcImJsdWVfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiY290dGFnZV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTMxLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjE5LCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiY290dGFnZV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTMxLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjQzLCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcImNvdHRhZ2VfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE1OCwgXCJzb3VyY2VcIjogXCJibHVlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImNyZWFtX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMzAuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMjEsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJjcmVhbV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTMwLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjQ0LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcImNyZWFtX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAxNjEsIFwic291cmNlXCI6IFwiYmx1ZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJtb3p6YXJlbGxhX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMjksIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJtb3p6YXJlbGxhX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyNTIsIFwic291cmNlXCI6IFwiY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwibW96emFyZWxsYV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzk1LCBcInNvdXJjZVwiOiBcImNyZWFtX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcIm1venphcmVsbGFfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDUxNywgXCJzb3VyY2VcIjogXCJncnV5ZXJlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcIm1venphcmVsbGFfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDM4NSwgXCJzb3VyY2VcIjogXCJjb3R0YWdlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcIm1venphcmVsbGFfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDQ5MiwgXCJzb3VyY2VcIjogXCJnb2F0X2NoZWVzZVwiLCBcInRhcmdldFwiOiBcIm1venphcmVsbGFfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDIzMCwgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcIm11bnN0ZXJfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI1MywgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJtdW5zdGVyX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAzOTYsIFwic291cmNlXCI6IFwiY3JlYW1fY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwibXVuc3Rlcl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDQzLCBcInNvdXJjZVwiOiBcImZldGFfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwibXVuc3Rlcl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMTU0LCBcInNvdXJjZVwiOiBcImJsdWVfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTQyLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjI2LCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZ3J1eWVyZV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjQ5LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcImdydXllcmVfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDM5NCwgXCJzb3VyY2VcIjogXCJjcmVhbV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJncnV5ZXJlX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAxNTMsIFwic291cmNlXCI6IFwiYmx1ZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJidXR0ZXJtaWxrXCIsIFwid2VpZ2h0XCI6IDEyLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMTYwLCBcInNvdXJjZVwiOiBcImJsdWVfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZ29hdF9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjI1LCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZ29hdF9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMjQ4LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcImdvYXRfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDM5MywgXCJzb3VyY2VcIjogXCJjcmVhbV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJnb2F0X2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAzODQsIFwic291cmNlXCI6IFwiY290dGFnZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJnb2F0X2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMzUsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJyb3F1ZWZvcnRfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI1OCwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJyb3F1ZWZvcnRfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY2LCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJibGFja19iZWFuXCIsIFwid2VpZ2h0XCI6IDg2LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTUwLCBcInNvdXJjZVwiOiBcImxpbWFfYmVhblwiLCBcInRhcmdldFwiOiBcInJlZF9raWRuZXlfYmVhblwiLCBcIndlaWdodFwiOiA5MC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDc3LCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJyZWRfa2lkbmV5X2JlYW5cIiwgXCJ3ZWlnaHRcIjogODYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAxNDAsIFwic291cmNlXCI6IFwiYmxhY2tfYmVhblwiLCBcInRhcmdldFwiOiBcInJlZF9raWRuZXlfYmVhblwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDcyLCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJraWRuZXlfYmVhblwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQ5NiwgXCJzb3VyY2VcIjogXCJncmFwZVwiLCBcInRhcmdldFwiOiBcInJodWJhcmJcIiwgXCJ3ZWlnaHRcIjogOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA5LCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDIwOSwgXCJzb3VyY2VcIjogXCJjYXllbm5lXCIsIFwidGFyZ2V0XCI6IFwicGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMTQ0LCBcInNvdXJjZVwiOiBcImJsYWNrX3BlcHBlclwiLCBcInRhcmdldFwiOiBcInBlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiA5LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDIwOCwgXCJzb3VyY2VcIjogXCJjYXllbm5lXCIsIFwidGFyZ2V0XCI6IFwiZ3JlZW5fYmVsbF9wZXBwZXJcIiwgXCJ3ZWlnaHRcIjogMzYuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAxNDMsIFwic291cmNlXCI6IFwiYmxhY2tfcGVwcGVyXCIsIFwidGFyZ2V0XCI6IFwiZ3JlZW5fYmVsbF9wZXBwZXJcIiwgXCJ3ZWlnaHRcIjogMzYuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiAyMTAsIFwic291cmNlXCI6IFwiY2F5ZW5uZVwiLCBcInRhcmdldFwiOiBcInRhYmFzY29fcGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMTQ1LCBcInNvdXJjZVwiOiBcImJsYWNrX3BlcHBlclwiLCBcInRhcmdldFwiOiBcInRhYmFzY29fcGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogNjM0LCBcInNvdXJjZVwiOiBcInBlcHBlclwiLCBcInRhcmdldFwiOiBcInRhYmFzY29fcGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMjExLCBcInNvdXJjZVwiOiBcImNheWVubmVcIiwgXCJ0YXJnZXRcIjogXCJ0aGFpX3BlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAxNTEsIFwic291cmNlXCI6IFwiYmxhY2tfdGVhXCIsIFwidGFyZ2V0XCI6IFwidG9tYXRvXCIsIFwid2VpZ2h0XCI6IDg0LjB9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogNiwgXCJuYW1lXCI6IDE0OSwgXCJzb3VyY2VcIjogXCJibGFja190ZWFcIiwgXCJ0YXJnZXRcIjogXCJtaW50XCIsIFwid2VpZ2h0XCI6IDI0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1NjMsIFwic291cmNlXCI6IFwibWFja2VyZWxcIiwgXCJ0YXJnZXRcIjogXCJzYWxtb25cIiwgXCJ3ZWlnaHRcIjogNjQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ2MywgXCJzb3VyY2VcIjogXCJmaXNoXCIsIFwidGFyZ2V0XCI6IFwic2FsbW9uXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1MjAsIFwic291cmNlXCI6IFwiaGFkZG9ja1wiLCBcInRhcmdldFwiOiBcInNhbG1vblwiLCBcIndlaWdodFwiOiA2NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTY5LCBcInNvdXJjZVwiOiBcIm1hY2tlcmVsXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA2NS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDcwLCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2ODYsIFwic291cmNlXCI6IFwic2FsbW9uXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA4NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjkyLCBcInNvdXJjZVwiOiBcInNhcmRpbmVcIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDY1LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0NTIsIFwic291cmNlXCI6IFwiZmlzaFwiLCBcInRhcmdldFwiOiBcImhhZGRvY2tcIiwgXCJ3ZWlnaHRcIjogNjQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ1MywgXCJzb3VyY2VcIjogXCJmaXNoXCIsIFwidGFyZ2V0XCI6IFwiaGVycmluZ1wiLCBcIndlaWdodFwiOiA2NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDY2LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJzbW9rZWRfc2FsbW9uXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDQsIFwiZ3JvdXBfaWRfdFwiOiA0LCBcIm5hbWVcIjogMTc0LCBcInNvdXJjZVwiOiBcImJyZWFkXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfYnJlYWRcIiwgXCJ3ZWlnaHRcIjogNTEuMH0sIHtcImdyb3VwX2lkX3NcIjogNCwgXCJncm91cF9pZF90XCI6IDQsIFwibmFtZVwiOiAxNzMsIFwic291cmNlXCI6IFwiYnJlYWRcIiwgXCJ0YXJnZXRcIjogXCJ3aGVhdF9icmVhZFwiLCBcIndlaWdodFwiOiA1MS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDYyNiwgXCJzb3VyY2VcIjogXCJwYXJtZXNhbl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzaGVlcF9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiA2LCBcIm5hbWVcIjogMzE2LCBcInNvdXJjZVwiOiBcImNpbm5hbW9uXCIsIFwidGFyZ2V0XCI6IFwidGFycmFnb25cIiwgXCJ3ZWlnaHRcIjogNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA4LCBcImdyb3VwX2lkX3RcIjogMTEsIFwibmFtZVwiOiAzMzUsIFwic291cmNlXCI6IFwiY29jb251dFwiLCBcInRhcmdldFwiOiBcImNvY29udXRfb2lsXCIsIFwid2VpZ2h0XCI6IDE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAwLCBcIm5hbWVcIjogNjE2LCBcInNvdXJjZVwiOiBcIm9yYW5nZVwiLCBcInRhcmdldFwiOiBcIm9yYW5nZV9wZWVsXCIsIFwid2VpZ2h0XCI6IDE0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNjE1LCBcInNvdXJjZVwiOiBcIm9yYW5nZVwiLCBcInRhcmdldFwiOiBcIm9yYW5nZV9qdWljZVwiLCBcIndlaWdodFwiOiA1NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDYyMiwgXCJzb3VyY2VcIjogXCJvcmFuZ2VcIiwgXCJ0YXJnZXRcIjogXCJ0YW5nZXJpbmVcIiwgXCJ3ZWlnaHRcIjogNjIuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA5LCBcInNvdXJjZVwiOiBcImFwcGxlXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlX2p1aWNlXCIsIFwid2VpZ2h0XCI6IDMwLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNSwgXCJzb3VyY2VcIjogXCJhcHBsZVwiLCBcInRhcmdldFwiOiBcImNoZXJyeVwiLCBcIndlaWdodFwiOiAzMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDE1LCBcInNvdXJjZVwiOiBcImFwcGxlXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiAxMDUuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAxMSwgXCJzb3VyY2VcIjogXCJhcHBsZVwiLCBcInRhcmdldFwiOiBcInBpbmVhcHBsZVwiLCBcIndlaWdodFwiOiA2NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDgsIFwic291cmNlXCI6IFwiYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJtZWxvblwiLCBcIndlaWdodFwiOiA3MS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDEsIFwic291cmNlXCI6IFwiYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJhcHBsZV9icmFuZHlcIiwgXCJ3ZWlnaHRcIjogMTQuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA2LCBcInNvdXJjZVwiOiBcImFwcGxlXCIsIFwidGFyZ2V0XCI6IFwiY2lkZXJcIiwgXCJ3ZWlnaHRcIjogNTkuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAxMywgXCJzb3VyY2VcIjogXCJhcHBsZVwiLCBcInRhcmdldFwiOiBcInF1aW5jZVwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQsIFwic291cmNlXCI6IFwiYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJiYXJ0bGV0dF9wZWFyXCIsIFwid2VpZ2h0XCI6IDQ0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMTAsIFwic291cmNlXCI6IFwiYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJwZWFyXCIsIFwid2VpZ2h0XCI6IDQ0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMTIsIFwic291cmNlXCI6IFwiYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJwbHVtXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTQ0LCBcInNvdXJjZVwiOiBcImxlbW9uXCIsIFwidGFyZ2V0XCI6IFwibWFuZGFyaW5cIiwgXCJ3ZWlnaHRcIjogNTYuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA1NDMsIFwic291cmNlXCI6IFwibGVtb25cIiwgXCJ0YXJnZXRcIjogXCJsaW1lXCIsIFwid2VpZ2h0XCI6IDU4LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTQ2LCBcInNvdXJjZVwiOiBcImxlbW9uXCIsIFwidGFyZ2V0XCI6IFwidGFuZ2VyaW5lXCIsIFwid2VpZ2h0XCI6IDU1LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTQ1LCBcInNvdXJjZVwiOiBcImxlbW9uXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlXCIsIFwid2VpZ2h0XCI6IDY5LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiA2LCBcIm5hbWVcIjogNTQyLCBcInNvdXJjZVwiOiBcImxlbW9uXCIsIFwidGFyZ2V0XCI6IFwibGVtb25ncmFzc1wiLCBcIndlaWdodFwiOiAxMy4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDU1MiwgXCJzb3VyY2VcIjogXCJsaW1lXCIsIFwidGFyZ2V0XCI6IFwibWFuZGFyaW5cIiwgXCJ3ZWlnaHRcIjogNTMuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMzM0LCBcInNvdXJjZVwiOiBcImNvY29hXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiA4Ni4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDExLCBcIm5hbWVcIjogMzMyLCBcInNvdXJjZVwiOiBcImNvY29hXCIsIFwidGFyZ2V0XCI6IFwiY29mZmVlXCIsIFwid2VpZ2h0XCI6IDk1LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogNjcyLCBcInNvdXJjZVwiOiBcInJlZF93aW5lXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiAxNTUuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA2ODEsIFwic291cmNlXCI6IFwicnVtXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiA5OC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDE5MCwgXCJzb3VyY2VcIjogXCJjYWJlcm5ldF9zYXV2aWdub25fd2luZVwiLCBcInRhcmdldFwiOiBcIndoaXRlX3dpbmVcIiwgXCJ3ZWlnaHRcIjogMTU1LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTg5LCBcInNvdXJjZVwiOiBcImNhYmVybmV0X3NhdXZpZ25vbl93aW5lXCIsIFwidGFyZ2V0XCI6IFwicmVkX3dpbmVcIiwgXCJ3ZWlnaHRcIjogMTY1LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTg4LCBcInNvdXJjZVwiOiBcImNhYmVybmV0X3NhdXZpZ25vbl93aW5lXCIsIFwidGFyZ2V0XCI6IFwicG9ydF93aW5lXCIsIFwid2VpZ2h0XCI6IDEzMy4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDYzOCwgXCJzb3VyY2VcIjogXCJwaW5lYXBwbGVcIiwgXCJ0YXJnZXRcIjogXCJ3aGl0ZV93aW5lXCIsIFwid2VpZ2h0XCI6IDYyLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMzEyLCBcInNvdXJjZVwiOiBcImNpZGVyXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiA1OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDMwOCwgXCJzb3VyY2VcIjogXCJjaWRlclwiLCBcInRhcmdldFwiOiBcImNvZ25hY1wiLCBcIndlaWdodFwiOiA1NS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDE3MCwgXCJzb3VyY2VcIjogXCJicmFuZHlcIiwgXCJ0YXJnZXRcIjogXCJ3aGl0ZV93aW5lXCIsIFwid2VpZ2h0XCI6IDE5LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTY2LCBcInNvdXJjZVwiOiBcImJyYW5keVwiLCBcInRhcmdldFwiOiBcImNoYW1wYWduZV93aW5lXCIsIFwid2VpZ2h0XCI6IDE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogNjYwLCBcInNvdXJjZVwiOiBcInBvcnRfd2luZVwiLCBcInRhcmdldFwiOiBcIndoaXRlX3dpbmVcIiwgXCJ3ZWlnaHRcIjogMTM1LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogNjU4LCBcInNvdXJjZVwiOiBcInBvcnRfd2luZVwiLCBcInRhcmdldFwiOiBcInJlZF93aW5lXCIsIFwid2VpZ2h0XCI6IDEzMy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDIxNCwgXCJzb3VyY2VcIjogXCJjaGFtcGFnbmVfd2luZVwiLCBcInRhcmdldFwiOiBcIndoaXRlX3dpbmVcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMjEyLCBcInNvdXJjZVwiOiBcImNoYW1wYWduZV93aW5lXCIsIFwidGFyZ2V0XCI6IFwiY29nbmFjXCIsIFwid2VpZ2h0XCI6IDgyLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogNzA1LCBcInNvdXJjZVwiOiBcIndoaXNrZXlcIiwgXCJ0YXJnZXRcIjogXCJ3aGl0ZV93aW5lXCIsIFwid2VpZ2h0XCI6IDcyLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTI5LCBcInNvdXJjZVwiOiBcImJlZXJcIiwgXCJ0YXJnZXRcIjogXCJ3aGl0ZV93aW5lXCIsIFwid2VpZ2h0XCI6IDExOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDEyMSwgXCJzb3VyY2VcIjogXCJiZWVyXCIsIFwidGFyZ2V0XCI6IFwiY2lkZXJcIiwgXCJ3ZWlnaHRcIjogNTAuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDExLCBcIm5hbWVcIjogMTIzLCBcInNvdXJjZVwiOiBcImJlZXJcIiwgXCJ0YXJnZXRcIjogXCJjb2ZmZWVcIiwgXCJ3ZWlnaHRcIjogMTAxLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA1LCBcIm5hbWVcIjogMTI4LCBcInNvdXJjZVwiOiBcImJlZXJcIiwgXCJ0YXJnZXRcIjogXCJydW1cIiwgXCJ3ZWlnaHRcIjogMTAzLjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMTI1LCBcInNvdXJjZVwiOiBcImJlZXJcIiwgXCJ0YXJnZXRcIjogXCJtaWxrXCIsIFwid2VpZ2h0XCI6IDc4LjB9LCB7XCJncm91cF9pZF9zXCI6IDUsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDEyMiwgXCJzb3VyY2VcIjogXCJiZWVyXCIsIFwidGFyZ2V0XCI6IFwiY29jb2FcIiwgXCJ3ZWlnaHRcIjogOTQuMH0sIHtcImdyb3VwX2lkX3NcIjogNSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiAzNzksIFwic291cmNlXCI6IFwiY29nbmFjXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiAxMDcuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDUsIFwibmFtZVwiOiA1OTYsIFwic291cmNlXCI6IFwibXVzY2F0X2dyYXBlXCIsIFwidGFyZ2V0XCI6IFwid2hpdGVfd2luZVwiLCBcIndlaWdodFwiOiA4MC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDY5MywgXCJzb3VyY2VcIjogXCJzaGVycnlcIiwgXCJ0YXJnZXRcIjogXCJ3aGl0ZV93aW5lXCIsIFwid2VpZ2h0XCI6IDEzOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA1LCBcImdyb3VwX2lkX3RcIjogNSwgXCJuYW1lXCI6IDE4LCBcInNvdXJjZVwiOiBcImFwcGxlX2JyYW5keVwiLCBcInRhcmdldFwiOiBcIndoaXRlX3dpbmVcIiwgXCJ3ZWlnaHRcIjogMTcuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA2NDgsIFwic291cmNlXCI6IFwicG9ya1wiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfcG9ya1wiLCBcIndlaWdodFwiOiAxMTUuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAxMTUsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfcG9ya1wiLCBcIndlaWdodFwiOiAxMDAuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA4NywgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiY2hpY2tlblwiLCBcIndlaWdodFwiOiA5OC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogOCwgXCJuYW1lXCI6IDEwNiwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicGVhbnV0XCIsIFwid2VpZ2h0XCI6IDcyLjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDkwLCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJjb2ZmZWVcIiwgXCJ3ZWlnaHRcIjogMTAyLjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDEwNywgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicGVhbnV0X2J1dHRlclwiLCBcIndlaWdodFwiOiA5OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA4OSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiY2xhbVwiLCBcIndlaWdodFwiOiA0OC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDEwNCwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwib25pb25cIiwgXCJ3ZWlnaHRcIjogMzAuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogOTIsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImVlbFwiLCBcIndlaWdodFwiOiA0OS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDEwOSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiA5Ny4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogOCwgXCJuYW1lXCI6IDExNCwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9wZWFudXRcIiwgXCJ3ZWlnaHRcIjogOTkuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA1MiwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfcG9ya1wiLCBcIndlaWdodFwiOiAxMTUuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAyNiwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcImNoaWNrZW5cIiwgXCJ3ZWlnaHRcIjogODQuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA0OCwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogMTE1LjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNDA1LCBcInNvdXJjZVwiOiBcImN1cmVkX3BvcmtcIiwgXCJ0YXJnZXRcIjogXCJyb2FzdGVkX3BvcmtcIiwgXCJ3ZWlnaHRcIjogMTE1LjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNDAyLCBcInNvdXJjZVwiOiBcImN1cmVkX3BvcmtcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDExNS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDI4OCwgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9wb3JrXCIsIFwid2VpZ2h0XCI6IDgxLjB9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNjU3LCBcInNvdXJjZVwiOiBcInBvcmtfc2F1c2FnZVwiLCBcInRhcmdldFwiOiBcInJvYXN0ZWRfcG9ya1wiLCBcIndlaWdodFwiOiAxMTUuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA2NTYsIFwic291cmNlXCI6IFwicG9ya19zYXVzYWdlXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDEwMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY3NiwgXCJzb3VyY2VcIjogXCJyb2FzdGVkX2JlZWZcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDEwMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2NzQsIFwic291cmNlXCI6IFwicm9hc3RlZF9iZWVmXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiA1MC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiA1MTYsIFwic291cmNlXCI6IFwiZ3JlZW5fdGVhXCIsIFwidGFyZ2V0XCI6IFwidmFuaWxsYVwiLCBcIndlaWdodFwiOiA0NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDYsIFwibmFtZVwiOiA1MTAsIFwic291cmNlXCI6IFwiZ3JlZW5fdGVhXCIsIFwidGFyZ2V0XCI6IFwicGVwcGVybWludFwiLCBcIndlaWdodFwiOiAzMy4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDMwMiwgXCJzb3VyY2VcIjogXCJjaGl2ZVwiLCBcInRhcmdldFwiOiBcIm9uaW9uXCIsIFwid2VpZ2h0XCI6IDE3LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzAwLCBcInNvdXJjZVwiOiBcImNoaXZlXCIsIFwidGFyZ2V0XCI6IFwibGVla1wiLCBcIndlaWdodFwiOiAxMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQ3NCwgXCJzb3VyY2VcIjogXCJnYXJsaWNcIiwgXCJ0YXJnZXRcIjogXCJvbmlvblwiLCBcIndlaWdodFwiOiAxNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQ3NiwgXCJzb3VyY2VcIjogXCJnYXJsaWNcIiwgXCJ0YXJnZXRcIjogXCJyb2FzdGVkX2JlZWZcIiwgXCJ3ZWlnaHRcIjogMTEuMH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA2MDMsIFwic291cmNlXCI6IFwibXV0dG9uXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiA1Mi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA0MTIsIFwic291cmNlXCI6IFwiZWdnXCIsIFwidGFyZ2V0XCI6IFwicm9hc3RlZF9iZWVmXCIsIFwid2VpZ2h0XCI6IDQyLjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDI2LCBcInNvdXJjZVwiOiBcImVub2tpZGFrZVwiLCBcInRhcmdldFwiOiBcIm1hdHN1dGFrZVwiLCBcIndlaWdodFwiOiAxMTcuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0MzYsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMTE3LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDI4LCBcInNvdXJjZVwiOiBcImVub2tpZGFrZVwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDExNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU5NywgXCJzb3VyY2VcIjogXCJtdXNocm9vbVwiLCBcInRhcmdldFwiOiBcInBvcmNpbmlcIiwgXCJ3ZWlnaHRcIjogMTE3LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjAwLCBcInNvdXJjZVwiOiBcIm11c2hyb29tXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMTE3LjB9LCB7XCJncm91cF9pZF9zXCI6IDQsIFwiZ3JvdXBfaWRfdFwiOiA0LCBcIm5hbWVcIjogMTcyLCBcInNvdXJjZVwiOiBcImJyZWFkXCIsIFwidGFyZ2V0XCI6IFwicnllX2JyZWFkXCIsIFwid2VpZ2h0XCI6IDUxLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNjI3LCBcInNvdXJjZVwiOiBcInBhcm1lc2FuX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInN3aXNzX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjkuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA2MjQsIFwic291cmNlXCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicHJvdm9sb25lX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjkuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA2MjUsIFwic291cmNlXCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicm9tYW5vX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMzEuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDYsIFwibmFtZVwiOiAzMTMsIFwic291cmNlXCI6IFwiY2lubmFtb25cIiwgXCJ0YXJnZXRcIjogXCJmZW5uZWxcIiwgXCJ3ZWlnaHRcIjogMTAuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiAzMTUsIFwic291cmNlXCI6IFwiY2lubmFtb25cIiwgXCJ0YXJnZXRcIjogXCJudXRtZWdcIiwgXCJ3ZWlnaHRcIjogMjAuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAzMTQsIFwic291cmNlXCI6IFwiY2lubmFtb25cIiwgXCJ0YXJnZXRcIjogXCJndWF2YVwiLCBcIndlaWdodFwiOiAyNS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA5LCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDQ4NCwgXCJzb3VyY2VcIjogXCJnaW5nZXJcIiwgXCJ0YXJnZXRcIjogXCJudXRtZWdcIiwgXCJ3ZWlnaHRcIjogMjIuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDYsIFwibmFtZVwiOiA0ODYsIFwic291cmNlXCI6IFwiZ2luZ2VyXCIsIFwidGFyZ2V0XCI6IFwicm9zZW1hcnlcIiwgXCJ3ZWlnaHRcIjogMTcuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDYsIFwibmFtZVwiOiA0ODMsIFwic291cmNlXCI6IFwiZ2luZ2VyXCIsIFwidGFyZ2V0XCI6IFwibWFyam9yYW1cIiwgXCJ3ZWlnaHRcIjogMTguMH0sIHtcImdyb3VwX2lkX3NcIjogMTMsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTIzLCBcInNvdXJjZVwiOiBcImhvbmV5XCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiA0MC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU3MCwgXCJzb3VyY2VcIjogXCJtYWx0XCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA1OC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI2MiwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzd2lzc19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNjY3LCBcInNvdXJjZVwiOiBcInByb3ZvbG9uZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzd2lzc19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzkxLCBcInNvdXJjZVwiOiBcImNyZWFtXCIsIFwidGFyZ2V0XCI6IFwic3dpc3NfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNjc4LCBcInNvdXJjZVwiOiBcInJvbWFub19jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzd2lzc19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDQ3LCBcInNvdXJjZVwiOiBcImZldGFfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwic3dpc3NfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDQ0NSwgXCJzb3VyY2VcIjogXCJmZXRhX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInByb3ZvbG9uZV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDQ2LCBcInNvdXJjZVwiOiBcImZldGFfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicm9tYW5vX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjguMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA0NDQsIFwic291cmNlXCI6IFwiZmV0YV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwYXJtZXNhbl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDQxLCBcInNvdXJjZVwiOiBcImZldGFfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZ29hdF9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDQyLCBcInNvdXJjZVwiOiBcImZldGFfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwibW96emFyZWxsYV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzg5LCBcInNvdXJjZVwiOiBcImNvdHRhZ2VfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwic3dpc3NfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDM4NywgXCJzb3VyY2VcIjogXCJjb3R0YWdlX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInByb3ZvbG9uZV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI4LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzg4LCBcInNvdXJjZVwiOiBcImNvdHRhZ2VfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicm9tYW5vX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAzODIsIFwic291cmNlXCI6IFwiY290dGFnZV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJjcmVhbV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTMwLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzg2LCBcInNvdXJjZVwiOiBcImNvdHRhZ2VfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDQwMSwgXCJzb3VyY2VcIjogXCJjcmVhbV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzd2lzc19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzk4LCBcInNvdXJjZVwiOiBcImNyZWFtX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInByb3ZvbG9uZV9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMzk5LCBcInNvdXJjZVwiOiBcImNyZWFtX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInJvbWFub19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDAwLCBcInNvdXJjZVwiOiBcImNyZWFtX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInJvcXVlZm9ydF9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogMTY1LCBcInNvdXJjZVwiOiBcImJsdWVfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwic3dpc3NfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzNC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDU5MSwgXCJzb3VyY2VcIjogXCJtb3p6YXJlbGxhX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInN3aXNzX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjkuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA1ODksIFwic291cmNlXCI6IFwibW96emFyZWxsYV9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwcm92b2xvbmVfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDU5MCwgXCJzb3VyY2VcIjogXCJtb3p6YXJlbGxhX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInJvbWFub19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTI3LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNTg4LCBcInNvdXJjZVwiOiBcIm1venphcmVsbGFfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDU5NSwgXCJzb3VyY2VcIjogXCJtdW5zdGVyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInN3aXNzX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA1OTQsIFwic291cmNlXCI6IFwibXVuc3Rlcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwcm92b2xvbmVfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyNy4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDU5MywgXCJzb3VyY2VcIjogXCJtdW5zdGVyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInBhcm1lc2FuX2NoZWVzZVwiLCBcIndlaWdodFwiOiAxMjcuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiAyMzksIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzd2lzc19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNTE5LCBcInNvdXJjZVwiOiBcImdydXllcmVfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwic3dpc3NfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEzMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDE4NywgXCJzb3VyY2VcIjogXCJidXR0ZXJtaWxrXCIsIFwidGFyZ2V0XCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTIuMH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA0OTQsIFwic291cmNlXCI6IFwiZ29hdF9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwcm92b2xvbmVfY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDQ5NSwgXCJzb3VyY2VcIjogXCJnb2F0X2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInJvbWFub19jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMTMwLjB9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogNDkzLCBcInNvdXJjZVwiOiBcImdvYXRfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicGFybWVzYW5fY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDEyOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDc1LCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJtdW5nX2JlYW5cIiwgXCJ3ZWlnaHRcIjogODYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA3MywgXCJzb3VyY2VcIjogXCJiZWFuXCIsIFwidGFyZ2V0XCI6IFwibGltYV9iZWFuXCIsIFwid2VpZ2h0XCI6IDg2LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMTM5LCBcInNvdXJjZVwiOiBcImJsYWNrX2JlYW5cIiwgXCJ0YXJnZXRcIjogXCJsaW1hX2JlYW5cIiwgXCJ3ZWlnaHRcIjogODYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAxMzgsIFwic291cmNlXCI6IFwiYmxhY2tfYmVhblwiLCBcInRhcmdldFwiOiBcImtpZG5leV9iZWFuXCIsIFwid2VpZ2h0XCI6IDg2LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTM4LCBcInNvdXJjZVwiOiBcImtpZG5leV9iZWFuXCIsIFwidGFyZ2V0XCI6IFwibGltYV9iZWFuXCIsIFwid2VpZ2h0XCI6IDg3LjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMzgxLCBcInNvdXJjZVwiOiBcImNvbmNvcmRfZ3JhcGVcIiwgXCJ0YXJnZXRcIjogXCJncmFwZVwiLCBcIndlaWdodFwiOiAxMjUuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiA2MzUsIFwic291cmNlXCI6IFwicGVwcGVyXCIsIFwidGFyZ2V0XCI6IFwidGhhaV9wZXBwZXJcIiwgXCJ3ZWlnaHRcIjogMzYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiA1MDcsIFwic291cmNlXCI6IFwiZ3JlZW5fYmVsbF9wZXBwZXJcIiwgXCJ0YXJnZXRcIjogXCJ0aGFpX3BlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDUwNSwgXCJzb3VyY2VcIjogXCJncmVlbl9iZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcInBlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDUwNiwgXCJzb3VyY2VcIjogXCJncmVlbl9iZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcInRhYmFzY29fcGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMTQyLCBcInNvdXJjZVwiOiBcImJsYWNrX3BlcHBlclwiLCBcInRhcmdldFwiOiBcImNheWVubmVcIiwgXCJ3ZWlnaHRcIjogMzYuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiAxNDYsIFwic291cmNlXCI6IFwiYmxhY2tfcGVwcGVyXCIsIFwidGFyZ2V0XCI6IFwidGhhaV9wZXBwZXJcIiwgXCJ3ZWlnaHRcIjogMzYuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiA3MDMsIFwic291cmNlXCI6IFwidGFiYXNjb19wZXBwZXJcIiwgXCJ0YXJnZXRcIjogXCJ0aGFpX3BlcHBlclwiLCBcIndlaWdodFwiOiAzOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDEzMywgXCJzb3VyY2VcIjogXCJiZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcImNheWVubmVcIiwgXCJ3ZWlnaHRcIjogMzYuMH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiAxMzcsIFwic291cmNlXCI6IFwiYmVsbF9wZXBwZXJcIiwgXCJ0YXJnZXRcIjogXCJ0aGFpX3BlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDEzMSwgXCJzb3VyY2VcIjogXCJiZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcImJsYWNrX3BlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDEzNSwgXCJzb3VyY2VcIjogXCJiZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcInBlcHBlclwiLCBcIndlaWdodFwiOiAzNi4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDEzNiwgXCJzb3VyY2VcIjogXCJiZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcInRhYmFzY29fcGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM3LjB9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDEzMiwgXCJzb3VyY2VcIjogXCJiZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcImJsYWNrX3RlYVwiLCBcIndlaWdodFwiOiA0MS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDEzNCwgXCJzb3VyY2VcIjogXCJiZWxsX3BlcHBlclwiLCBcInRhcmdldFwiOiBcImdyZWVuX2JlbGxfcGVwcGVyXCIsIFwid2VpZ2h0XCI6IDM2LjB9LCB7XCJncm91cF9pZF9zXCI6IDYsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDYyLCBcInNvdXJjZVwiOiBcImJhc2lsXCIsIFwidGFyZ2V0XCI6IFwiYmxhY2tfdGVhXCIsIFwid2VpZ2h0XCI6IDExLjB9LCB7XCJncm91cF9pZF9zXCI6IDYsIFwiZ3JvdXBfaWRfdFwiOiA2LCBcIm5hbWVcIjogNjQsIFwic291cmNlXCI6IFwiYmFzaWxcIiwgXCJ0YXJnZXRcIjogXCJyb3NlbWFyeVwiLCBcIndlaWdodFwiOiAxMC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogNCwgXCJuYW1lXCI6IDE4MiwgXCJzb3VyY2VcIjogXCJicm93bl9yaWNlXCIsIFwidGFyZ2V0XCI6IFwicmljZVwiLCBcIndlaWdodFwiOiA3NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDU0LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiA2NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDY0LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2ODQsIFwic291cmNlXCI6IFwic2FsbW9uXCIsIFwidGFyZ2V0XCI6IFwic21va2VkX3NhbG1vblwiLCBcIndlaWdodFwiOiA4NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjgyLCBcInNvdXJjZVwiOiBcInNhbG1vblwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNjQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDMzOSwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJmaXNoXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzNDQsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwiaGFkZG9ja1wiLCBcIndlaWdodFwiOiA2NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMzU3LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcInNtb2tlZF9zYWxtb25cIiwgXCJ3ZWlnaHRcIjogNjUuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDM1NCwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJzYWxtb25cIiwgXCJ3ZWlnaHRcIjogNjUuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDM1NSwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1MjEsIFwic291cmNlXCI6IFwiaGFkZG9ja1wiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNjQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDE5NCwgXCJzb3VyY2VcIjogXCJjYXRmaXNoXCIsIFwidGFyZ2V0XCI6IFwiZmlzaFwiLCBcIndlaWdodFwiOiA2NC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMTk1LCBcInNvdXJjZVwiOiBcImNhdGZpc2hcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDY0LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1MjIsIFwic291cmNlXCI6IFwiaGVycmluZ1wiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNjQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDIwNSwgXCJzb3VyY2VcIjogXCJjYXZpYXJcIiwgXCJ0YXJnZXRcIjogXCJzbW9rZWRfc2FsbW9uXCIsIFwid2VpZ2h0XCI6IDE4LjB9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2ODgsIFwic291cmNlXCI6IFwic2FyZGluZVwiLCBcInRhcmdldFwiOiBcInNtb2tlZF9zYWxtb25cIiwgXCJ3ZWlnaHRcIjogNjQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMTUyLCBcInNvdXJjZVwiOiBcImJsYWNrX3RlYVwiLCBcInRhcmdldFwiOiBcInZhbmlsbGFcIiwgXCJ3ZWlnaHRcIjogNDUuMH0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDE1MCwgXCJzb3VyY2VcIjogXCJibGFja190ZWFcIiwgXCJ0YXJnZXRcIjogXCJ0ZWFcIiwgXCJ3ZWlnaHRcIjogMTcxLjB9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMzkwLCBcInNvdXJjZVwiOiBcImNyYW5iZXJyeVwiLCBcInRhcmdldFwiOiBcImp1bmlwZXJfYmVycnlcIiwgXCJ3ZWlnaHRcIjogNTQuMH0sIHtcImdyb3VwX2lkX3NcIjogMCwgXCJncm91cF9pZF90XCI6IDExLCBcIm5hbWVcIjogNTQ5LCBcInNvdXJjZVwiOiBcImxlbW9uX3BlZWxcIiwgXCJ0YXJnZXRcIjogXCJ0ZWFcIiwgXCJ3ZWlnaHRcIjogOC4wfSwge1wiZ3JvdXBfaWRfc1wiOiA2LCBcImdyb3VwX2lkX3RcIjogMTEsIFwibmFtZVwiOiA2MzYsIFwic291cmNlXCI6IFwicGVwcGVybWludFwiLCBcInRhcmdldFwiOiBcInRlYVwiLCBcIndlaWdodFwiOiAyOS4wfSwge1wiZ3JvdXBfaWRfc1wiOiAxMiwgXCJncm91cF9pZF90XCI6IDEyLCBcIm5hbWVcIjogNDcxLCBcInNvdXJjZVwiOiBcImZsb3dlclwiLCBcInRhcmdldFwiOiBcImxhdmVuZGVyXCIsIFwid2VpZ2h0XCI6IDUuMH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiAwLCBcInNvdXJjZVwiOiBcImFuaXNlXCIsIFwidGFyZ2V0XCI6IFwiY2lubmFtb25cIiwgXCJ3ZWlnaHRcIjogMTAuMH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA2MDUsIFwic291cmNlXCI6IFwibmVjdGFyaW5lXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiA0MC4wfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU0MSwgXCJzb3VyY2VcIjogXCJsZWVrXCIsIFwidGFyZ2V0XCI6IFwic2hhbGxvdFwiLCBcIndlaWdodFwiOiAxMS4wfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQxNywgXCJzb3VyY2VcIjogXCJlbW1lbnRhbF9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJwb3RhdG9cIiwgXCJ3ZWlnaHRcIjogNDQuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDU2NCwgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNjUuMH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQwNiwgXCJzb3VyY2VcIjogXCJlZWxcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDY1LjB9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzNjQsIFwic291cmNlXCI6IFwiY29mZmVlXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMzIuMH1dLCBcIm5vZGVzXCI6IFt7XCJncm91cF9pZFwiOiAwLCBcIm5hbWVcIjogXCJvcmFuZ2VfcGVlbFwiLCBcInNpemVcIjogMS4wMTI0MjUyMTg1OTE4MDg2fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY2hlcnJ5XCIsIFwic2l6ZVwiOiAxLjkxODY1MTk4NzY4MDk3OTh9LCB7XCJncm91cF9pZFwiOiAyLCBcIm5hbWVcIjogXCJyb2FzdGVkX3BvcmtcIiwgXCJzaXplXCI6IDAuMjIxMjQ2NzY5Nzk3MTYwOTN9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJtYXRzdXRha2VcIiwgXCJzaXplXCI6IDAuMDk5MTE4NTUyODY5MTI4MTJ9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJvcmFuZ2VfanVpY2VcIiwgXCJzaXplXCI6IDMuMDA4OTU2MDY5MjQxMzg5fSwge1wiZ3JvdXBfaWRcIjogNCwgXCJuYW1lXCI6IFwicnllX2JyZWFkXCIsIFwic2l6ZVwiOiAwLjE2MTA2NzY0ODQxMjMzMzE4fSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwid2hpdGVfd2luZVwiLCBcInNpemVcIjogMy44MzM3NjQwMjcwNDUyMDQ3fSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwiZmVubmVsXCIsIFwic2l6ZVwiOiAxLjYwNTM2NjU2MTY0ODJ9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJwaW5lYXBwbGVcIiwgXCJzaXplXCI6IDIuODYwMjc4MjM5OTM3Njk3fSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwiY2hpY2tlblwiLCBcInNpemVcIjogOS4zNzAyNDMxOTQ0NDkzNjJ9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJwb3JjaW5pXCIsIFwic2l6ZVwiOiAwLjE4NzYxNzI2MDc4Nzk5MjQ4fSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwibWlsa1wiLCBcInNpemVcIjogMjIuODIzODE2NzcyMjc1MTIzfSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwicmF3X2JlZWZcIiwgXCJzaXplXCI6IDAuMDAzNTM5OTQ4MzE2NzU0NTc1fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiZ3JhcGVcIiwgXCJzaXplXCI6IDAuNjEwNjQxMDg0NjQwMTY0M30sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImNhbWVtYmVydF9jaGVlc2VcIiwgXCJzaXplXCI6IDAuMDIxMjM5Njg5OTAwNTI3NDU0fSwge1wiZ3JvdXBfaWRcIjogOCwgXCJuYW1lXCI6IFwicGVhbnV0XCIsIFwic2l6ZVwiOiAwLjgwMTc5ODI5Mzc0NDkxMTN9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJjYXllbm5lXCIsIFwic2l6ZVwiOiAxNC4wNzEyOTQ1NTkwOTk0Mzd9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJjb2duYWNcIiwgXCJzaXplXCI6IDAuMTE2ODE4Mjk0NDUyOTAxfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwibWVsb25cIiwgXCJzaXplXCI6IDAuMjc3ODg1OTQyODY1MjM0MTZ9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJtdW5nX2JlYW5cIiwgXCJzaXplXCI6IDAuMDMzNjI5NTA5MDA5MTY4NDY2fSwge1wiZ3JvdXBfaWRcIjogNCwgXCJuYW1lXCI6IFwicmljZVwiLCBcInNpemVcIjogNi4wMDkwNjIyNjc2OTA4OTJ9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwibWFja2VyZWxcIiwgXCJzaXplXCI6IDAuMDc3ODc4ODYyOTY4NjAwNjV9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJ0aGFpX3BlcHBlclwiLCBcInNpemVcIjogMC4xNTM5ODc3NTE3Nzg4MjQwNH0sIHtcImdyb3VwX2lkXCI6IDExLCBcIm5hbWVcIjogXCJjb2ZmZWVcIiwgXCJzaXplXCI6IDEuMjY3MzAxNDk3Mzk4MTM4fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY2l0cnVzXCIsIFwic2l6ZVwiOiAwLjI4ODUwNTc4NzgxNTQ5Nzg1fSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwibGltYV9iZWFuXCIsIFwic2l6ZVwiOiAwLjI2MzcyNjE0OTU5ODIxNTl9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJibGFja19wZXBwZXJcIiwgXCJzaXplXCI6IDE3LjI2MDc4Nzk5MjQ5NTMxfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwiYmVhblwiLCBcInNpemVcIjogMy4zNjgyNjA4MjMzOTE5Nzg0fSwge1wiZ3JvdXBfaWRcIjogMTEsIFwibmFtZVwiOiBcInBlYW51dF9idXR0ZXJcIiwgXCJzaXplXCI6IDEuNzYxMTI0Mjg3NTg1NDAxNH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcImtpZG5leV9iZWFuXCIsIFwic2l6ZVwiOiAwLjc4MjMyODU3ODAwMjc2MTF9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJhcHBsZV9icmFuZHlcIiwgXCJzaXplXCI6IDAuMDY1NDg5MDQzODU5OTU5NjR9LCB7XCJncm91cF9pZFwiOiA0LCBcIm5hbWVcIjogXCJicmVhZFwiLCBcInNpemVcIjogOC4wNTg2OTIzNDMwOTE3OX0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImp1bmlwZXJfYmVycnlcIiwgXCJzaXplXCI6IDAuMDU4NDA5MTQ3MjI2NDUwNX0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJjbGFtXCIsIFwic2l6ZVwiOiAwLjgxNTk1ODA4NzAxMTkyOTZ9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJvbmlvblwiLCBcInNpemVcIjogMzEuOTE0NDA0MDQ5NzAwODc0fSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwiY2lkZXJcIiwgXCJzaXplXCI6IDEuOTgyMzcxMDU3MzgyNTYyNH0sIHtcImdyb3VwX2lkXCI6IDAsIFwibmFtZVwiOiBcImNpdHJ1c19wZWVsXCIsIFwic2l6ZVwiOiAwLjAwNzA3OTg5NjYzMzUwOTE1fSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcImVlbFwiLCBcInNpemVcIjogMC4wMzUzOTk0ODMxNjc1NDU3Nn0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcIm51dG1lZ1wiLCBcInNpemVcIjogNC40NDYxNzUwODU4NDM3NDY1fSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwicm9zZW1hcnlcIiwgXCJzaXplXCI6IDMuMzQ1MjUxMTU5MzMzMDczNn0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcInZhbmlsbGFcIiwgXCJzaXplXCI6IDE1Ljk3NDAxNjc3OTM1NTAyMn0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcInBvcmtcIiwgXCJzaXplXCI6IDMuNDc2MjI5MjQ3MDUyOTkyN30sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInJlZF9iZWFuXCIsIFwic2l6ZVwiOiAwLjA1ODQwOTE0NzIyNjQ1MDV9LCB7XCJncm91cF9pZFwiOiAxMSwgXCJuYW1lXCI6IFwidGVhXCIsIFwic2l6ZVwiOiAwLjE3ODc2NzM4OTk5NjEwNjA2fSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcImZpc2hcIiwgXCJzaXplXCI6IDMuMzI1NzgxNDQzNTkwOTIzNn0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcImJhY29uXCIsIFwic2l6ZVwiOiAzLjgxNjA2NDI4NTQ2MTQzMjZ9LCB7XCJncm91cF9pZFwiOiAxMiwgXCJuYW1lXCI6IFwibGF2ZW5kZXJcIiwgXCJzaXplXCI6IDAuMTA5NzM4Mzk3ODE5MzkxODN9LCB7XCJncm91cF9pZFwiOiA2LCBcIm5hbWVcIjogXCJwZXBwZXJtaW50XCIsIFwic2l6ZVwiOiAwLjI1MTMzNjMzMDQ4OTU3NDl9LCB7XCJncm91cF9pZFwiOiA4LCBcIm5hbWVcIjogXCJibGFja19zZXNhbWVfc2VlZFwiLCBcInNpemVcIjogMC4wNDYwMTkzMjgxMTc4MDk0OH0sIHtcImdyb3VwX2lkXCI6IDYsIFwibmFtZVwiOiBcImxlbW9uZ3Jhc3NcIiwgXCJzaXplXCI6IDAuMjQyNDg2NDU5Njk3Njg4NDJ9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJndWF2YVwiLCBcInNpemVcIjogMC4wMjMwMDk2NjQwNTg5MDQ3NH0sIHtcImdyb3VwX2lkXCI6IDgsIFwibmFtZVwiOiBcInJvYXN0ZWRfcGVhbnV0XCIsIFwic2l6ZVwiOiAwLjI5MjA0NTczNjEzMjI1MjV9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwiaGFkZG9ja1wiLCBcInNpemVcIjogMC4wNTQ4NjkxOTg5MDk2OTU5Mn0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcIm1hbmRhcmluXCIsIFwic2l6ZVwiOiAwLjQ5MjA1MjgxNjAyODg4Nn0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcInF1aW5jZVwiLCBcInNpemVcIjogMC4wNDk1NTkyNzY0MzQ1NjQwNn0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImJhcnRsZXR0X3BlYXJcIiwgXCJzaXplXCI6IDAuMDQwNzA5NDA1NjQyNjc3NjJ9LCB7XCJncm91cF9pZFwiOiAwLCBcIm5hbWVcIjogXCJsZW1vbl9wZWVsXCIsIFwic2l6ZVwiOiAxLjI2NTUzMTUyMzIzOTc2MDZ9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJwZXBwZXJcIiwgXCJzaXplXCI6IDE2LjAzNTk2NTg3NDg5ODIyNH0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcInJ1bVwiLCBcInNpemVcIjogMS4wNjU1MjQ0NDMzNDMxMjd9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJwZWFyXCIsIFwic2l6ZVwiOiAwLjgyODM0NzkwNjEyMDU3MDd9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJjaGFtcGFnbmVfd2luZVwiLCBcInNpemVcIjogMC4xNzUyMjc0NDE2NzkzNTE1fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwicmFzcGJlcnJ5XCIsIFwic2l6ZVwiOiAxLjM4NzY1OTc0MDE2Nzc5MzV9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwic21va2VkX3NhbG1vblwiLCBcInNpemVcIjogMC4xNzE2ODc0OTMzNjI1OTY5fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY29uY29yZF9ncmFwZVwiLCBcInNpemVcIjogMC4wMjEyMzk2ODk5MDA1Mjc0NTR9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJibGFja19iZWFuXCIsIFwic2l6ZVwiOiAwLjgzODk2Nzc1MTA3MDgzNDN9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJwbHVtXCIsIFwic2l6ZVwiOiAwLjQ5MDI4Mjg0MTg3MDUwODd9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJicmFuZHlcIiwgXCJzaXplXCI6IDAuNjk5MTM5NzkyNTU5MDI4N30sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcInN3aXNzX2NoZWVzZVwiLCBcInNpemVcIjogMC45MjM5MjY1MTA2NzI5NDQyfSwge1wiZ3JvdXBfaWRcIjogOSwgXCJuYW1lXCI6IFwiY2lubmFtb25cIiwgXCJzaXplXCI6IDkuOTE3MTY1MjA5Mzg3OTQyfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwiYmx1ZV9jaGVlc2VcIiwgXCJzaXplXCI6IDAuNjk5MTM5NzkyNTU5MDI4N30sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcInBvcGNvcm5cIiwgXCJzaXplXCI6IDAuMTcxNjg3NDkzMzYyNTk2OX0sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwic2l6ZVwiOiA1LjM2MTI1MTcyNTcyNDgwNH0sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImNoZWVzZVwiLCBcInNpemVcIjogNS44MDkwNTUxODc3OTQyNTh9LCB7XCJncm91cF9pZFwiOiA2LCBcIm5hbWVcIjogXCJtYXJqb3JhbVwiLCBcInNpemVcIjogMC45MzQ1NDYzNTU2MjMyMDh9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJhcHBsZVwiLCBcInNpemVcIjogNC4yNzk3OTc1MTQ5NTYyODE1fSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwicm9xdWVmb3J0X2NoZWVzZVwiLCBcInNpemVcIjogMC4wNDA3MDk0MDU2NDI2Nzc2Mn0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcInRhYmFzY29fcGVwcGVyXCIsIFwic2l6ZVwiOiAxLjcwODAyNTA2MjgzNDA4MjV9LCB7XCJncm91cF9pZFwiOiAxMSwgXCJuYW1lXCI6IFwiY29jb2FcIiwgXCJzaXplXCI6IDguNDk3NjQ1OTM0MzY5MzU3fSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwic295YmVhblwiLCBcInNpemVcIjogMS44MzAxNTMyNzk3NjIxMTU2fSwge1wiZ3JvdXBfaWRcIjogMTEsIFwibmFtZVwiOiBcImJsYWNrX3RlYVwiLCBcInNpemVcIjogMC4wNjcyNTkwMTgwMTgzMzY5M30sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcIndoaXRlX2JyZWFkXCIsIFwic2l6ZVwiOiAwLjY1NDg5MDQzODU5OTU5NjV9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwiaGVycmluZ1wiLCBcInNpemVcIjogMC4wMTc2OTk3NDE1ODM3NzI4OH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImxpbWVcIiwgXCJzaXplXCI6IDEuOTE2ODgyMDEzNTIyNjAyM30sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcInByb3ZvbG9uZV9jaGVlc2VcIiwgXCJzaXplXCI6IDAuMjk1NTg1Njg0NDQ5MDA3MDd9LCB7XCJncm91cF9pZFwiOiAyLCBcIm5hbWVcIjogXCJiZWVmXCIsIFwic2l6ZVwiOiA4LjUzNDgxNTM5MTY5NTI4fSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwicm9tYW5vX2NoZWVzZVwiLCBcInNpemVcIjogMC40ODY3NDI4OTM1NTM3NTQxNn0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInNoaWl0YWtlXCIsIFwic2l6ZVwiOiAwLjkwNDQ1Njc5NDkzMDc5Mzl9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJhbmlzZVwiLCBcInNpemVcIjogMC4zOTQ3MDQyMzczMTgxMzUyfSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcImNhdmlhclwiLCBcInNpemVcIjogMC4wNDYwMTkzMjgxMTc4MDk0OH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcImN1cmVkX3BvcmtcIiwgXCJzaXplXCI6IDAuNTU1NzcxODg1NzMwNDY4M30sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImJ1dHRlcm1pbGtcIiwgXCJzaXplXCI6IDIuODkwMzY3ODAwNjMwMTEwNn0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcImJlZXJcIiwgXCJzaXplXCI6IDAuNTM2MzAyMTY5OTg4MzE4MX0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImdyYXBlZnJ1aXRcIiwgXCJzaXplXCI6IDAuMjA3MDg2OTc2NTMwMTQyNjl9LCB7XCJncm91cF9pZFwiOiA0LCBcIm5hbWVcIjogXCJicm93bl9yaWNlXCIsIFwic2l6ZVwiOiAwLjU5NjQ4MTI5MTM3MzE0Nn0sIHtcImdyb3VwX2lkXCI6IDYsIFwibmFtZVwiOiBcImJhc2lsXCIsIFwic2l6ZVwiOiA2LjY4ODczMjM0NDUwNzc3fSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwicm9hc3RlZF9iZWVmXCIsIFwic2l6ZVwiOiAwLjM5MjkzNDI2MzE1OTc1Nzl9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJraXdpXCIsIFwic2l6ZVwiOiAwLjE4NTg0NzI4NjYyOTYxNTIyfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwiZ3JlZW5fYmVsbF9wZXBwZXJcIiwgXCJzaXplXCI6IDQuNTYyOTkzMzgwMjk2NjQ3fSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwibXVzaHJvb21cIiwgXCJzaXplXCI6IDUuODcxMDA0MjgzMzM3NDYzfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwic2hhbGxvdFwiLCBcInNpemVcIjogMi4xMDA5NTkzMjU5OTM4NDA0fSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwicmVkX3dpbmVcIiwgXCJzaXplXCI6IDIuNDY1NTc0MDAyNjE5NTYxNn0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcInRhbmdlcmluZVwiLCBcInNpemVcIjogMC4wNzc4Nzg4NjI5Njg2MDA2NX0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcIm9yYW5nZVwiLCBcInNpemVcIjogMy4wMjQ4ODU4MzY2NjY3ODQ2fSwge1wiZ3JvdXBfaWRcIjogOSwgXCJuYW1lXCI6IFwiZ2luZ2VyXCIsIFwic2l6ZVwiOiA2Ljc1NDIyMTM4ODM2NzczfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwiY3JlYW1fY2hlZXNlXCIsIFwic2l6ZVwiOiA1LjAyNDk1NjYzNTYzMzEyfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwib2xpdmVcIiwgXCJzaXplXCI6IDMuMTgwNjQzNTYyNjAzOTg2fSwge1wiZ3JvdXBfaWRcIjogMTEsIFwibmFtZVwiOiBcImxpbWVfcGVlbF9vaWxcIiwgXCJzaXplXCI6IDAuMTc2OTk3NDE1ODM3NzI4Nzd9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJncnV5ZXJlX2NoZWVzZVwiLCBcInNpemVcIjogMC4wNzc4Nzg4NjI5Njg2MDA2NX0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImFwcmljb3RcIiwgXCJzaXplXCI6IDEuMDk3MzgzOTc4MTkzOTE4NX0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcIm1hbHRcIiwgXCJzaXplXCI6IDAuMDY1NDg5MDQzODU5OTU5NjR9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJlbm9raWRha2VcIiwgXCJzaXplXCI6IDAuMTg3NjE3MjYwNzg3OTkyNDh9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJwYXJtZXNhbl9jaGVlc2VcIiwgXCJzaXplXCI6IDUuNjA1NTA4MTU5NTgwODd9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJiYW5hbmFcIiwgXCJzaXplXCI6IDEuNzQxNjU0NTcxODQzMjUxfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwic3RyYXdiZXJyeVwiLCBcInNpemVcIjogMS45MDgwMzIxNDI3MzA3MTYzfSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwicG9ya19saXZlclwiLCBcInNpemVcIjogMC4wMDg4NDk4NzA3OTE4ODY0NH0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcIndoaXNrZXlcIiwgXCJzaXplXCI6IDAuMjYxOTU2MTc1NDM5ODM4NTd9LCB7XCJncm91cF9pZFwiOiA4LCBcIm5hbWVcIjogXCJjb2NvbnV0XCIsIFwic2l6ZVwiOiAzLjAyNjY1NTgxMDgyNTE2Mn0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcIm11dHRvblwiLCBcInNpemVcIjogMC4wMDUzMDk5MjI0NzUxMzE4NjM0fSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwicG9ydF93aW5lXCIsIFwic2l6ZVwiOiAwLjA4NjcyODczMzc2MDQ4NzA5fSwge1wiZ3JvdXBfaWRcIjogMTMsIFwibmFtZVwiOiBcImhvbmV5XCIsIFwic2l6ZVwiOiA0LjM5NDg0NTgzNTI1MDgwNTV9LCB7XCJncm91cF9pZFwiOiA4LCBcIm5hbWVcIjogXCJzZWVkXCIsIFwic2l6ZVwiOiAyLjMyMzk3NjA2OTk0OTM3ODh9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJyZWRfa2lkbmV5X2JlYW5cIiwgXCJzaXplXCI6IDAuMTA0NDI4NDc1MzQ0MjU5OTd9LCB7XCJncm91cF9pZFwiOiA2LCBcIm5hbWVcIjogXCJtaW50XCIsIFwic2l6ZVwiOiAxLjY0OTYxNTkxNTYwNzYzMjJ9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJjcmVhbVwiLCBcInNpemVcIjogMTcuOTY4Nzc3NjU1ODQ2MjI1fSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwibGFtYlwiLCBcInNpemVcIjogMC44MzU0Mjc4MDI3NTQwNzk4fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwibGVtb25cIiwgXCJzaXplXCI6IDUuMzkxMzQxMjg2NDE3MjE4NX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInJodWJhcmJcIiwgXCJzaXplXCI6IDAuMjk5MTI1NjMyNzY1NzYxNn0sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImNvdHRhZ2VfY2hlZXNlXCIsIFwic2l6ZVwiOiAwLjYxNTk1MTAwNzExNTI5NjJ9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwiY2F0ZmlzaFwiLCBcInNpemVcIjogMC4xMjAzNTgyNDI3Njk2NTU1N30sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImdvYXRfY2hlZXNlXCIsIFwic2l6ZVwiOiAwLjQ1ODQyMzMwNzAxOTcxNzU2fSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwic2hlcnJ5XCIsIFwic2l6ZVwiOiAxLjExNTA4MzcxOTc3NzY5MTN9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJsZWVrXCIsIFwic2l6ZVwiOiAwLjcyNzQ1OTM3OTA5MzA2NTJ9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJiZWxsX3BlcHBlclwiLCBcInNpemVcIjogMTAuMzQ5MDM4OTA0MDMyMDAxfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY3JhbmJlcnJ5XCIsIFwic2l6ZVwiOiAxLjYyMTI5NjMyOTA3MzU5NTZ9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwic2FsbW9uXCIsIFwic2l6ZVwiOiAwLjc2ODE2ODc4NDczNTc0Mjl9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJjaGl2ZVwiLCBcInNpemVcIjogMi4zMjc1MTYwMTgyNjYxMzN9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJzaGVlcF9jaGVlc2VcIiwgXCJzaXplXCI6IDAuMDAzNTM5OTQ4MzE2NzU0NTc1fSwge1wiZ3JvdXBfaWRcIjogMTIsIFwibmFtZVwiOiBcImZsb3dlclwiLCBcInNpemVcIjogMC4wNTMwOTkyMjQ3NTEzMTg2MjZ9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJnYXJsaWNcIiwgXCJzaXplXCI6IDI5LjkwMDE3MzQ1NzQ2NzUyfSwge1wiZ3JvdXBfaWRcIjogMTEsIFwibmFtZVwiOiBcImdyZWVuX3RlYVwiLCBcInNpemVcIjogMC4wNTY2MzkxNzMwNjgwNzMyfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwibW96emFyZWxsYV9jaGVlc2VcIiwgXCJzaXplXCI6IDIuMjgzMjY2NjY0MzA2NzAxfSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcInR1bmFcIiwgXCJzaXplXCI6IDAuNzg0MDk4NTUyMTYxMTM4NH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcIm5lY3RhcmluZVwiLCBcInNpemVcIjogMC4wODg0OTg3MDc5MTg4NjQzOH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcInBvcmtfc2F1c2FnZVwiLCBcInNpemVcIjogMi40MTA3MDQ4MDM3MDk4NjZ9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJ0b21hdG9cIiwgXCJzaXplXCI6IDE3LjUzODY3MzkzNTM2MDU0Mn0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJjb2RcIiwgXCJzaXplXCI6IDAuMzA3OTc1NTAzNTU3NjQ4MX0sIHtcImdyb3VwX2lkXCI6IDYsIFwibmFtZVwiOiBcInRhcnJhZ29uXCIsIFwic2l6ZVwiOiAwLjg0MjUwNzY5OTM4NzU4OX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInBvdGF0b1wiLCBcInNpemVcIjogNi4yNzQ1NTgzOTE0NDc0ODV9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJmZXRhX2NoZWVzZVwiLCBcInNpemVcIjogMS4wOTkxNTM5NTIzNTIyOTU1fSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwiZW1tZW50YWxfY2hlZXNlXCIsIFwic2l6ZVwiOiAwLjAwMTc2OTk3NDE1ODM3NzI4NzV9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJjYWJlcm5ldF9zYXV2aWdub25fd2luZVwiLCBcInNpemVcIjogMC4wMzAwODk1NjA2OTI0MTM4OX0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcIndoZWF0X2JyZWFkXCIsIFwic2l6ZVwiOiAwLjE0NjkwNzg1NTE0NTMxNDg4fSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwibXVzY2F0X2dyYXBlXCIsIFwic2l6ZVwiOiAwLjAwMTc2OTk3NDE1ODM3NzI4NzV9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJtdW5zdGVyX2NoZWVzZVwiLCBcInNpemVcIjogMC4wNDc3ODkzMDIyNzYxODY3N30sIHtcImdyb3VwX2lkXCI6IDExLCBcIm5hbWVcIjogXCJjb2NvbnV0X29pbFwiLCBcInNpemVcIjogMC4wMzAwODk1NjA2OTI0MTM4OX0sIHtcImdyb3VwX2lkXCI6IDEzLCBcIm5hbWVcIjogXCJlZ2dcIiwgXCJzaXplXCI6IDM3LjA4MjcyODU5MjE2MjU1fSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwid2luZVwiLCBcInNpemVcIjogMS41NTIyNjczMzY4OTY4ODEzfSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcImthdHN1b2J1c2hpXCIsIFwic2l6ZVwiOiAwLjA4NjcyODczMzc2MDQ5OTk3fSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcInNhcmRpbmVcIiwgXCJzaXplXCI6IDAuMH1dfVxuZXhwb3J0IGRlZmF1bHQgZmxhdm9yRGF0YTsiLCJjb25zdCB1bWFtaURhdGEgPSB7XCJsaW5rc1wiOiBbe1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDIwLCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiYmVhblwiLCBcIndlaWdodFwiOiAwLjkxNTEyMDY0NzU2NTIwNjN9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogMjEsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJiZWVmXCIsIFwid2VpZ2h0XCI6IDE3LjE4MDk4NTg2OTI2MDE5OH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDQsIFwibmFtZVwiOiAyMiwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcImJyb3duX3JpY2VcIiwgXCJ3ZWlnaHRcIjogMC4yMDcxMTYwMjIwOTk0NDc1Mn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjMsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJjYXZpYXJcIiwgXCJ3ZWlnaHRcIjogMS4wNTU3MzQ4MDY2Mjk4MzQ0fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI0LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogMS4xODE5ODc5OTU4MTUwNTQ4fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogNywgXCJuYW1lXCI6IDI1LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiY2hlZXNlXCIsIFwid2VpZ2h0XCI6IDQuMjE4MTkzNDE5NTgzMTE2fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDI2LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiY2hpY2tlblwiLCBcIndlaWdodFwiOiAxOC4xOTM5Njk1NjUyMjAwM30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyNywgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcImNoaXZlXCIsIFwid2VpZ2h0XCI6IDAuMzUzODk3NDY4ODQyMzQ4NzR9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDI4LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiY2xhbVwiLCBcIndlaWdodFwiOiAyLjU0ODIxODQyNDc3MTkzOX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjksIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJjb2RcIiwgXCJ3ZWlnaHRcIjogNDQuNzc2NTU1OTQ0MzYxMX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDExLCBcIm5hbWVcIjogMzAsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJjb2ZmZWVcIiwgXCJ3ZWlnaHRcIjogMC4zNDg5NjM2Mzg2OTk3MzAyNH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEzLCBcIm5hbWVcIjogMzIsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJlZ2dcIiwgXCJ3ZWlnaHRcIjogMC4yOTY3NDcyNjk2OTAzNTA3Nn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzMywgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcImVub2tpZGFrZVwiLCBcIndlaWdodFwiOiA2Ni42MjA4NjY3NzcxMjY0Mn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMzQsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJmaXNoXCIsIFwid2VpZ2h0XCI6IDIxLjQzNjc1MjczODI2MjE3NX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzNSwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcImdhcmxpY1wiLCBcIndlaWdodFwiOiAyLjUzMzk4NjIyMjQzNzQ2MjN9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogMzYsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJnaW5nZXJcIiwgXCJ3ZWlnaHRcIjogMC4yMjU2MTc4ODUxMzQyNjd9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMzcsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJncmFwZWZydWl0XCIsIFwid2VpZ2h0XCI6IDAuMzQwMzI5NDM1OTUwMTQ3NzV9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDM4LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwiZ3JlZW5fdGVhXCIsIFwid2VpZ2h0XCI6IDMuMTUyNjEyNjE3MjQyNzA5fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzOSwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcImthdHN1b2J1c2hpXCIsIFwid2VpZ2h0XCI6IDEwLjEzODU5ODc2NTI3OTI4fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0MCwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcIm1hY2tlcmVsXCIsIFwid2VpZ2h0XCI6IDMyLjE5NjYxNjE0MjkwODY5NX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA0MSwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcIm1hbmRhcmluXCIsIFwid2VpZ2h0XCI6IDAuMTcxMzQ1NzUzNTY1NDYzMjJ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNDIsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJtZWxvblwiLCBcIndlaWdodFwiOiAxLjE5NzU4MjQyMzIzMDExN30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0MywgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDEuOTkwNjk1NjE4NjU2MDQ1Nn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0NSwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcIm9uaW9uXCIsIFwid2VpZ2h0XCI6IDAuNDAzNjQ2OTIyNzgwNDE4OX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA0NiwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcIm9yYW5nZVwiLCBcIndlaWdodFwiOiAwLjI3OTg5MDAxNjcwMzA3MDh9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDcsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJwb3JjaW5pXCIsIFwid2VpZ2h0XCI6IDEuMzk4NjM2MDAxNTQxODIyfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQ4LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAzNi40NjQ5Nzg2OTYzMTc2NDR9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTAsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJwb3RhdG9cIiwgXCJ3ZWlnaHRcIjogMC41MDExNzIyOTg1OTk1MTE3fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1MywgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcInNhbG1vblwiLCBcIndlaWdodFwiOiAwLjMwMzk0MjQzODY0ODMzNjF9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDU0LCBcInNvdXJjZVwiOiBcImJhY29uXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiAyNTEuMTQxMTAwMzQ2OTA5OTh9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTUsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAyNTEuMTQxMTAwMzQ2OTA5OTh9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTYsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDUuOTcyMTA2NDg0MzU1MzZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTcsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDAuMTkzNTQ3OTg5MjA3MjQ2NTZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTgsIFwic291cmNlXCI6IFwiYmFjb25cIiwgXCJ0YXJnZXRcIjogXCJ0b21hdG9cIiwgXCJ3ZWlnaHRcIjogMS45MzE5ODMwMzk5NTg4ODQ3fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1OSwgXCJzb3VyY2VcIjogXCJiYWNvblwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogOTEuNjE2NzU3MzMyNzQ3NjV9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNjUsIFwic291cmNlXCI6IFwiYmVhblwiLCBcInRhcmdldFwiOiBcImJlZWZcIiwgXCJ3ZWlnaHRcIjogNi4zMjMwOTk1MDEzMTQzNzl9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNjcsIFwic291cmNlXCI6IFwiYmVhblwiLCBcInRhcmdldFwiOiBcImNoaWNrZW5cIiwgXCJ3ZWlnaHRcIjogNi42OTU5MDY3ODY3MzQ2Njc1fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2OCwgXCJzb3VyY2VcIjogXCJiZWFuXCIsIFwidGFyZ2V0XCI6IFwiY29kXCIsIFwid2VpZ2h0XCI6IDE2LjQ3OTA2NzA3NTQ3NzIxOH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2OSwgXCJzb3VyY2VcIjogXCJiZWFuXCIsIFwidGFyZ2V0XCI6IFwiZW5va2lkYWtlXCIsIFwid2VpZ2h0XCI6IDI0LjUxODQwNDk3OTg0ODcyNX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNzAsIFwic291cmNlXCI6IFwiYmVhblwiLCBcInRhcmdldFwiOiBcImZpc2hcIiwgXCJ3ZWlnaHRcIjogNy44ODkzNDQ3NDMxMTA1ODh9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDcxLCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiAzLjczMTI5NzQ1MTk5NjgyMjd9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDc0LCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiAxMS44NDkyODU1NDMxMjM2NDJ9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNzYsIFwic291cmNlXCI6IFwiYmVhblwiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogMTMuNDIwMTY2MzYwOTIyMjExfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA3OCwgXCJzb3VyY2VcIjogXCJiZWFuXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiA5Mi40MjcxODU0MDQwODU4Mn0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA3OSwgXCJzb3VyY2VcIjogXCJiZWFuXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogOTIuNDI3MTg1NDA0MDg1ODJ9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogODAsIFwic291cmNlXCI6IFwiYmVhblwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMi4xOTc5MDc4Mzk1MzcxMzZ9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDgxLCBcInNvdXJjZVwiOiBcImJlYW5cIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDMzLjcxNzYxNTMzNDI0MDUxfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogNCwgXCJuYW1lXCI6IDgzLCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJicm93bl9yaWNlXCIsIFwid2VpZ2h0XCI6IDEuNDMxMDg0NzY0MTA4MDIzM30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogODQsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImNhdmlhclwiLCBcIndlaWdodFwiOiA3LjI5NDY4NDMwOTc0OTA5MX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDcsIFwibmFtZVwiOiA4NSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ3ZWlnaHRcIjogOC4xNjcwNDA4NDUxNDE5MTJ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiA3LCBcIm5hbWVcIjogODYsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImNoZWVzZVwiLCBcIndlaWdodFwiOiAyOS4xNDU5NDU3MDUzODY0NTZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogODcsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImNoaWNrZW5cIiwgXCJ3ZWlnaHRcIjogNS4wNTg0NjU4MzM2NTU0MzN9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogODgsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImNoaXZlXCIsIFwid2VpZ2h0XCI6IDIuNDQ1MjgyOTQxMzMzNzMxfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA4OSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiY2xhbVwiLCBcIndlaWdodFwiOiAxNy42MDcxMTk1NTcxNzAxNTh9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDkwLCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJjb2ZmZWVcIiwgXCJ3ZWlnaHRcIjogMi40MTExOTIyNDYzMDA5MzQ1fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTMsIFwibmFtZVwiOiA5MywgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiZWdnXCIsIFwid2VpZ2h0XCI6IDIuMDUwMzk5MDU3MjAzODMzM30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA5NCwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiZW5va2lkYWtlXCIsIFwid2VpZ2h0XCI6IDYuODY4NTUwNjIxODM5MTN9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogOTUsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImdhcmxpY1wiLCBcIndlaWdodFwiOiAxNy41MDg3ODEwMTM4MDYzMTd9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiA5LCBcIm5hbWVcIjogOTYsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImdpbmdlclwiLCBcIndlaWdodFwiOiAxLjU1ODkyNDg3MDQ4MTAxMTV9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogOTcsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcImdyYXBlZnJ1aXRcIiwgXCJ3ZWlnaHRcIjogMi4zNTE1MzM1Mjk5OTM1Mzk2fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTEsIFwibmFtZVwiOiA5OCwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwiZ3JlZW5fdGVhXCIsIFwid2VpZ2h0XCI6IDIxLjc4MzIyOTY5ODY4Nzc4fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAxMDAsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcIm1hY2tlcmVsXCIsIFwid2VpZ2h0XCI6IDEuNTg0NDkyODkxNzU1NjA5NH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAxMDEsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcIm1hbmRhcmluXCIsIFwid2VpZ2h0XCI6IDEuMTgzOTI3MjI1MTIwMjQ1N30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAxMDIsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcIm1lbG9uXCIsIFwid2VpZ2h0XCI6IDguMjc0NzkxNzkxOTQyMDAyfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDEwMywgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwibXVzaHJvb21cIiwgXCJ3ZWlnaHRcIjogMTMuNzU0ODcxMDE4NDY0MTA1fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDEwNCwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwib25pb25cIiwgXCJ3ZWlnaHRcIjogMi43ODkwMzA3ODI5MTQ0MzN9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMTA1LCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJvcmFuZ2VcIiwgXCJ3ZWlnaHRcIjogMS45MzM5MjI1MTU4NDE3Nzc3fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDEwOCwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicG9yY2luaVwiLCBcIndlaWdodFwiOiA5LjY2Mzk4NzYxNDUyODQ3NX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAxMDksIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogMS43NzkwMTAzODY5NDI3NDQ3fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDExMiwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwicG90YXRvXCIsIFwid2VpZ2h0XCI6IDMuNDYyODkwMTg4MDYyNzE4NX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMTE2LCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJzYWxtb25cIiwgXCJ3ZWlnaHRcIjogMi4xMDAxMTQ2NTQxMjY2NjJ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMTE3LCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAzMy40OTc2NDQ3NzkzMzI2Mn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAxMTgsIFwic291cmNlXCI6IFwiYmVlZlwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogNC41MjkwNzY2NzUyMTM0NDE1fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDExOSwgXCJzb3VyY2VcIjogXCJiZWVmXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAxLjMzNzMzNTM1Mjc2NzgzMTh9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMTIwLCBcInNvdXJjZVwiOiBcImJlZWZcIiwgXCJ0YXJnZXRcIjogXCJ0b21hdG9cIiwgXCJ3ZWlnaHRcIjogMTMuMzQ5MTkxNzQ3NTczODJ9LCB7XCJncm91cF9pZF9zXCI6IDQsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogMTc1LCBcInNvdXJjZVwiOiBcImJyb3duX3JpY2VcIiwgXCJ0YXJnZXRcIjogXCJjaGlja2VuXCIsIFwid2VpZ2h0XCI6IDEuNTE1NDYwOTE5NTA0OTk5NX0sIHtcImdyb3VwX2lkX3NcIjogNCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMTc2LCBcInNvdXJjZVwiOiBcImJyb3duX3JpY2VcIiwgXCJ0YXJnZXRcIjogXCJjb2RcIiwgXCJ3ZWlnaHRcIjogMy43Mjk2NDkwMTM2NzIzOTc3fSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDE3NywgXCJzb3VyY2VcIjogXCJicm93bl9yaWNlXCIsIFwidGFyZ2V0XCI6IFwiZW5va2lkYWtlXCIsIFwid2VpZ2h0XCI6IDUuNTQ5MTYzOTUwMzA2MDN9LCB7XCJncm91cF9pZF9zXCI6IDQsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDE3OCwgXCJzb3VyY2VcIjogXCJicm93bl9yaWNlXCIsIFwidGFyZ2V0XCI6IFwiZmlzaFwiLCBcIndlaWdodFwiOiAxLjc4NTU2NzUxNDUyNTgwNzJ9LCB7XCJncm91cF9pZF9zXCI6IDQsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDE3OSwgXCJzb3VyY2VcIjogXCJicm93bl9yaWNlXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMC44NDQ0OTEzNjU3OTI2NDAxfSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAxODAsIFwic291cmNlXCI6IFwiYnJvd25fcmljZVwiLCBcInRhcmdldFwiOiBcIm1hY2tlcmVsXCIsIFwid2VpZ2h0XCI6IDIuNjgxODA2OTIxMjQyNDY5fSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDE4MSwgXCJzb3VyY2VcIjogXCJicm93bl9yaWNlXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAzLjAzNzMzODgyNTE5NDYwMn0sIHtcImdyb3VwX2lkX3NcIjogNCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMTgzLCBcInNvdXJjZVwiOiBcImJyb3duX3JpY2VcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDIwLjkxODcxODIzMjA0NDJ9LCB7XCJncm91cF9pZF9zXCI6IDQsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMTg0LCBcInNvdXJjZVwiOiBcImJyb3duX3JpY2VcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAyMC45MTg3MTgyMzIwNDQyfSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDE4NSwgXCJzb3VyY2VcIjogXCJicm93bl9yaWNlXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiAwLjQ5NzQ0NDcxMzg0OTgwNTI2fSwge1wiZ3JvdXBfaWRfc1wiOiA0LCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAxODYsIFwic291cmNlXCI6IFwiYnJvd25fcmljZVwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogNy42MzExODg3MTk1Mjg1MTF9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDE5NiwgXCJzb3VyY2VcIjogXCJjYXZpYXJcIiwgXCJ0YXJnZXRcIjogXCJjaGlja2VuXCIsIFwid2VpZ2h0XCI6IDcuNzI0Nzc1ODI2NTY3NzM4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMTk3LCBcInNvdXJjZVwiOiBcImNhdmlhclwiLCBcInRhcmdldFwiOiBcImNvZFwiLCBcIndlaWdodFwiOiAxOS4wMTExODE0NjQwNTg2NjZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDE5OCwgXCJzb3VyY2VcIjogXCJjYXZpYXJcIiwgXCJ0YXJnZXRcIjogXCJlbm9raWRha2VcIiwgXCJ3ZWlnaHRcIjogMjguMjg1ODE1MjE5MTY1NTd9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAxOTksIFwic291cmNlXCI6IFwiY2F2aWFyXCIsIFwidGFyZ2V0XCI6IFwiZmlzaFwiLCBcIndlaWdodFwiOiA5LjEwMTU5MzE4MjIzNzE4MX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDIwMCwgXCJzb3VyY2VcIjogXCJjYXZpYXJcIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiA0LjMwNDYzNTI0NjEyMDk5ODV9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyMDEsIFwic291cmNlXCI6IFwiY2F2aWFyXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogMTMuNjcwMDA0MjkzODEwODQzfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAyMDIsIFwic291cmNlXCI6IFwiY2F2aWFyXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAxNS40ODIyNjEwMjgyOTY2ODN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyMDMsIFwic291cmNlXCI6IFwiY2F2aWFyXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiAxMDYuNjI5MjE1NDY5NjEzMjZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDIwNCwgXCJzb3VyY2VcIjogXCJjYXZpYXJcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAxMDYuNjI5MjE1NDY5NjEzMjZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDIwNiwgXCJzb3VyY2VcIjogXCJjYXZpYXJcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDIuNTM1NjMwNDgxMjI0MTY3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjA3LCBcInNvdXJjZVwiOiBcImNhdmlhclwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogMzguODk4NTQzMjY4MTcyODY1fSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDIxNywgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImNoaWNrZW5cIiwgXCJ3ZWlnaHRcIjogOC42NDg1NjYxMzYxNDIxNjd9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDIxOCwgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImNvZFwiLCBcIndlaWdodFwiOiAyMS4yODQ2OTAxODUxMzQ2MDh9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjIyLCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZW5va2lkYWtlXCIsIFwid2VpZ2h0XCI6IDMxLjY2ODQ1ODYyMzI2Mzk1NX0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjI0LCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZmlzaFwiLCBcIndlaWdodFwiOiAxMC4xOTAwMzQyOTMzMDc2MTJ9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDIyNywgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcImthdHN1b2J1c2hpXCIsIFwid2VpZ2h0XCI6IDQuODE5NDE3ODY0NTI5NDg0fSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyMjgsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiAxNS4zMDQ3NzI0NDUyNzM3MjN9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogMjMyLCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAxNy4zMzM3NTMyOTU0MzE3ODR9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDIzNiwgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMTE5LjM4MDc4NzU3NzMyMDUyfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDIzNywgXCJzb3VyY2VcIjogXCJjaGVkZGFyX2NoZWVzZVwiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDExOS4zODA3ODc1NzczMjA1Mn0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyMzgsIFwic291cmNlXCI6IFwiY2hlZGRhcl9jaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDIuODM4ODYxMzk5NDgwNzU1N30sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjQwLCBcInNvdXJjZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA0My41NTAzNDEzNDQxOTEwN30sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAyNDEsIFwic291cmNlXCI6IFwiY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiY2hpY2tlblwiLCBcIndlaWdodFwiOiAzMC44NjQzNzgzOTc2NDAyNH0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjQyLCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcImNvZFwiLCBcIndlaWdodFwiOiA3NS45NTkyNjU1NzE4MDQwMn0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyNDUsIFwic291cmNlXCI6IFwiY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwiZW5va2lkYWtlXCIsIFwid2VpZ2h0XCI6IDExMy4wMTYxMDg2NjI2NTg1Mn0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjQ3LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcImZpc2hcIiwgXCJ3ZWlnaHRcIjogMzYuMzY1NDU4NjYyNDc3MDR9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDI1MCwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiAxNy4xOTkxOTA1MTE1NDI2MzJ9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDI1MSwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiA1NC42MTg1NjY4OTM2MTE3Mn0sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAyNTUsIFwic291cmNlXCI6IFwiY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiA2MS44NTk0NDcyNTg2NDA0M30sIHtcImdyb3VwX2lkX3NcIjogNywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjU5LCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNDI2LjAzNzUzNTM3Nzg5NDY0fSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDI2MCwgXCJzb3VyY2VcIjogXCJjaGVlc2VcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiA0MjYuMDM3NTM1Mzc3ODk0NjR9LCB7XCJncm91cF9pZF9zXCI6IDcsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjYxLCBcInNvdXJjZVwiOiBcImNoZWVzZVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMTAuMTMxMTIzNTk1ODM3MjEzfSwge1wiZ3JvdXBfaWRfc1wiOiA3LCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyNjMsIFwic291cmNlXCI6IFwiY2hlZXNlXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiAxNTUuNDE5MzEzODQxNjY4OTJ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjY0LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJjaGl2ZVwiLCBcIndlaWdodFwiOiAyLjU4OTQ1NTc5NDQxODQ2N30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjY1LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJjbGFtXCIsIFwid2VpZ2h0XCI6IDE4LjY0NTIyNzkxNjAyNDAxfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyNjYsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcImNvZFwiLCBcIndlaWdodFwiOiAxMy4xODMyMTc3ODAyMTgzNzZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDI2NywgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwiY29mZmVlXCIsIFwid2VpZ2h0XCI6IDIuNTUzMzU1MTI2MzU0MTQ5fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTMsIFwibmFtZVwiOiAyNjksIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcImVnZ1wiLCBcIndlaWdodFwiOiAyLjE3MTI4OTcyMjY3MzQ0NzZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjcwLCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJlbm9raWRha2VcIiwgXCJ3ZWlnaHRcIjogMTkuNjE0NjcwNTk5NTIzMzY1fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyNzEsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcImZpc2hcIiwgXCJ3ZWlnaHRcIjogNi4zMTE0NTg2MTY4NzkwMDl9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjcyLCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJnYXJsaWNcIiwgXCJ3ZWlnaHRcIjogMTguNTQxMDkxMzczNTMwNzgzfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogOSwgXCJuYW1lXCI6IDI3MywgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwiZ2luZ2VyXCIsIFwid2VpZ2h0XCI6IDEuNjUwODM4NDI0NzQ2MTkzMX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAyNzQsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcImdyYXBlZnJ1aXRcIiwgXCJ3ZWlnaHRcIjogMi40OTAxNzg5NTcyNDE1OTJ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDI3NSwgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwiZ3JlZW5fdGVhXCIsIFwid2VpZ2h0XCI6IDIzLjA2NzU1OTc1MzkwMjk5NH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjc2LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiAyLjk4NTAyOTgzNzM3NzcwMzZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDI3NywgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogOS40Nzk0MDI2MzQ4NDA1MDZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMjc4LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJtYW5kYXJpblwiLCBcIndlaWdodFwiOiAxLjI1MzczMTA3NjAzODY5MjR9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogMjc5LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJtZWxvblwiLCBcIndlaWdodFwiOiA4Ljc2MjY3MDAzMzQxNjg4N30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyODAsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDE0LjU2NTg1MjQyNDc1NjA0N30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyODEsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcIm9uaW9uXCIsIFwid2VpZ2h0XCI6IDIuOTUzNDcwODY0MDY3MDA5OH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAyODIsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcIm9yYW5nZVwiLCBcIndlaWdodFwiOiAyLjA0Nzk0NTc3MzQ1MzY5NH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyODMsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcInBvcmNpbmlcIiwgXCJ3ZWlnaHRcIjogMTAuMjMzNzcyMjU3MDM3ODU0fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDI4NCwgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAxMC43MzYxMDM4Njg3NzI4NDd9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjg2LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJwb3RhdG9cIiwgXCJ3ZWlnaHRcIjogMy42NjcwNjA3MzYxMzgzNjd9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDI4OSwgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwic2FsbW9uXCIsIFwid2VpZ2h0XCI6IDIuMjIzOTM2NTMwMjY3MjQ1fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyOTAsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNzMuOTQxNTQ3MDc5OTI3Njd9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMjkxLCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiA3My45NDE1NDcwNzk5Mjc2N30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAyOTIsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogNC43OTYxMDkxMjk4NDk5Mn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAyOTMsIFwic291cmNlXCI6IFwiY2hpY2tlblwiLCBcInRhcmdldFwiOiBcInN0cmF3YmVycnlcIiwgXCJ3ZWlnaHRcIjogMS40MTYxODQwODIzMjgxMjQ0fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDI5NCwgXCJzb3VyY2VcIjogXCJjaGlja2VuXCIsIFwidGFyZ2V0XCI6IFwidG9tYXRvXCIsIFwid2VpZ2h0XCI6IDE0LjEzNjI1NDQ3NDc5MDY1Nn0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjk1LCBcInNvdXJjZVwiOiBcImNoaWNrZW5cIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDI2Ljk3NDAxODg1MzQzMzgzN30sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjk2LCBcInNvdXJjZVwiOiBcImNoaXZlXCIsIFwidGFyZ2V0XCI6IFwiY29kXCIsIFwid2VpZ2h0XCI6IDYuMzcyODIxMDUwODc1ODM2fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDI5NywgXCJzb3VyY2VcIjogXCJjaGl2ZVwiLCBcInRhcmdldFwiOiBcImVub2tpZGFrZVwiLCBcIndlaWdodFwiOiA5LjQ4MTgxMTQ4MDgyMDk4fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAyOTgsIFwic291cmNlXCI6IFwiY2hpdmVcIiwgXCJ0YXJnZXRcIjogXCJmaXNoXCIsIFwid2VpZ2h0XCI6IDMuMDUwOTg0NzQ0ODQyMTYzNn0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMjk5LCBcInNvdXJjZVwiOiBcImNoaXZlXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMS40NDI5NzU1NTQzOTU5NDYyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzMDEsIFwic291cmNlXCI6IFwiY2hpdmVcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiA0LjU4MjM4MTc1NzQ4NjEyN30sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiAzMDMsIFwic291cmNlXCI6IFwiY2hpdmVcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDUuMTg5ODc2MjQxMTM4MTMxfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzMDQsIFwic291cmNlXCI6IFwiY2hpdmVcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDM1Ljc0MzY0NDM1MzA3NzIyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDMwNSwgXCJzb3VyY2VcIjogXCJjaGl2ZVwiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDM1Ljc0MzY0NDM1MzA3NzIyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDMwNiwgXCJzb3VyY2VcIjogXCJjaGl2ZVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMC44NDk5Nzk3NTIxMDIwNTY5fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzMDcsIFwic291cmNlXCI6IFwiY2hpdmVcIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDEzLjAzOTM1MDMzNDc3MzY4M30sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDMyMiwgXCJzb3VyY2VcIjogXCJjbGFtXCIsIFwidGFyZ2V0XCI6IFwiY29kXCIsIFwid2VpZ2h0XCI6IDQ1Ljg4NzEzMjQzMDU4MTAyNn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzIzLCBcInNvdXJjZVwiOiBcImNsYW1cIiwgXCJ0YXJnZXRcIjogXCJlbm9raWRha2VcIiwgXCJ3ZWlnaHRcIjogNjguMjczMjM5Njg5MTA3NX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDMyNCwgXCJzb3VyY2VcIjogXCJjbGFtXCIsIFwidGFyZ2V0XCI6IFwiZmlzaFwiLCBcIndlaWdodFwiOiAyMS45Njg0NDA2NTAxNTk4MDN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzMjUsIFwic291cmNlXCI6IFwiY2xhbVwiLCBcInRhcmdldFwiOiBcImthdHN1b2J1c2hpXCIsIFwid2VpZ2h0XCI6IDEwLjM5MDA2MjcxMDA3MDU4Mn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDMyNiwgXCJzb3VyY2VcIjogXCJjbGFtXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogMzIuOTk1MTc2OTk4NDczMjV9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDMyNywgXCJzb3VyY2VcIjogXCJjbGFtXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAzNy4zNjk0MDYxODIwMDgyfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMzI4LCBcInNvdXJjZVwiOiBcImNsYW1cIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDI1Ny4zNzAwNjA5MDE5NjU4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzMjksIFwic291cmNlXCI6IFwiY2xhbVwiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDI1Ny4zNzAwNjA5MDE5NjU4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzMzAsIFwic291cmNlXCI6IFwiY2xhbVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogNi4xMjAyMzA0NTAwMDc1Njd9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzMzEsIFwic291cmNlXCI6IFwiY2xhbVwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogOTMuODg5MDk0MTQ1ODc1ODd9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTEsIFwibmFtZVwiOiAzMzYsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwiY29mZmVlXCIsIFwid2VpZ2h0XCI6IDYuMjgzOTc0OTMxOTc4MjQzfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEzLCBcIm5hbWVcIjogMzM3LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcImVnZ1wiLCBcIndlaWdodFwiOiA1LjM0MzY4Njg0MDMxMjAzMn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzM4LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcImVub2tpZGFrZVwiLCBcIndlaWdodFwiOiAxNy45MDA2MDQ5Nzc4Mzg3MzJ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDM0MCwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJnYXJsaWNcIiwgXCJ3ZWlnaHRcIjogNDUuNjMwODQ1NTQ5MTQ1NjU0fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiAzNDEsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwiZ2luZ2VyXCIsIFwid2VpZ2h0XCI6IDQuMDYyODIxOTU5NTM4Mzc4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAzNDIsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwiZ3JhcGVmcnVpdFwiLCBcIndlaWdodFwiOiA2LjEyODQ5NDIyMzkwNzQ1MX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMSwgXCJuYW1lXCI6IDM0MywgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJncmVlbl90ZWFcIiwgXCJ3ZWlnaHRcIjogNTYuNzcwNzgxOTk1NTM2MzZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiAzNDUsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogNC4xMjk0NTY1NDg3MTE1NzN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDM0NiwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJtYW5kYXJpblwiLCBcIndlaWdodFwiOiAzLjA4NTUxNDY1MTY2NDgzNzV9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDM0NywgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJtZWxvblwiLCBcIndlaWdodFwiOiAyMS41NjU1MDczODIzNjQ1MX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzQ4LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDM1Ljg0NzUyMDk5NTE1MjgzNH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzQ5LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcIm9uaW9uXCIsIFwid2VpZ2h0XCI6IDcuMjY4Njg2MDgzMDkzMjQ5fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiAzNTAsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlXCIsIFwid2VpZ2h0XCI6IDUuMDQwMTI5MjY3NDExOTE5fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzNTEsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwicG9yY2luaVwiLCBcIndlaWdodFwiOiAyNS4xODU5ODY3Mjc0NDE0ODV9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDM1MiwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDQuNjM2NDAyMDUwNjU2NjcyfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzNTMsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwicG90YXRvXCIsIFwid2VpZ2h0XCI6IDkuMDI0ODc3Njk5OTY5MDM0fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMzU0LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcInNhbG1vblwiLCBcIndlaWdodFwiOiA1LjQ3MzI1NDA5NzAzNzY5MX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzU2LCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDg3LjMwMDUyOTYwMTcyMjI3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiAzNTgsIFwic291cmNlXCI6IFwiY29kXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiAxMS44MDM1NDAwNjg0OTEzMDF9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDM1OSwgXCJzb3VyY2VcIjogXCJjb2RcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDMuNDg1MzIyMTg2NzA0MDEyN30sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzYwLCBcInNvdXJjZVwiOiBcImNvZFwiLCBcInRhcmdldFwiOiBcInRvbWF0b1wiLCBcIndlaWdodFwiOiAzNC43OTAyNTIxODAyNzE0Nn0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzYxLCBcInNvdXJjZVwiOiBcImNvZmZlZVwiLCBcInRhcmdldFwiOiBcImVub2tpZGFrZVwiLCBcIndlaWdodFwiOiA5LjM0OTYyMTY0Nzg2MjQ5NX0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDM2MiwgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJmaXNoXCIsIFwid2VpZ2h0XCI6IDMuMDA4NDQ5NzExODkwMzUzNX0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDM2NCwgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiAxLjQyMjg1ODQzODgxMjY0Mn0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDM2NSwgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiA0LjUxODQ5Njg4OTA0MDk2MjV9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDM2OCwgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDUuMTE3NTIyMDQyMjgyODg3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMzcxLCBcInNvdXJjZVwiOiBcImNvZmZlZVwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMzUuMjQ1MzI3NTA4NjcyNzV9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDM3MiwgXCJzb3VyY2VcIjogXCJjb2ZmZWVcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAzNS4yNDUzMjc1MDg2NzI3NX0sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogMzczLCBcInNvdXJjZVwiOiBcImNvZmZlZVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMC44MzgxMjk4MzQ4NDk4ODA0fSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogMzc1LCBcInNvdXJjZVwiOiBcImNvZmZlZVwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogMTIuODU3NTYzMzg5NzIzNDI2fSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0MDcsIFwic291cmNlXCI6IFwiZWdnXCIsIFwidGFyZ2V0XCI6IFwiZW5va2lkYWtlXCIsIFwid2VpZ2h0XCI6IDcuOTUwNjEyNTgyMzg1MTg3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDA4LCBcInNvdXJjZVwiOiBcImVnZ1wiLCBcInRhcmdldFwiOiBcImZpc2hcIiwgXCJ3ZWlnaHRcIjogMi41NTgyODcyNzk4MTcwMjc3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDA5LCBcInNvdXJjZVwiOiBcImVnZ1wiLCBcInRhcmdldFwiOiBcImthdHN1b2J1c2hpXCIsIFwid2VpZ2h0XCI6IDEuMjA5OTUyMjk4ODg5MzM2OH0sIHtcImdyb3VwX2lkX3NcIjogMTMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQxMCwgXCJzb3VyY2VcIjogXCJlZ2dcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiAzLjg0MjM4MjAzMTMyOTYzMjR9LCB7XCJncm91cF9pZF9zXCI6IDEzLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDQxMSwgXCJzb3VyY2VcIjogXCJlZ2dcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDQuMzUxNzczNDM3NzMxNTQ3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDEzLCBcInNvdXJjZVwiOiBcImVnZ1wiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMjkuOTcxNDc0MjM4NzI1NDI4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0MTQsIFwic291cmNlXCI6IFwiZWdnXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMjkuOTcxNDc0MjM4NzI1NDI4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0MTUsIFwic291cmNlXCI6IFwiZWdnXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiAwLjcxMjcxODIxMDU5NzY3ODd9LCB7XCJncm91cF9pZF9zXCI6IDEzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0MTYsIFwic291cmNlXCI6IFwiZWdnXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiAxMC45MzM2NTE1NTQ2MDgxOTd9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQxOCwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJmaXNoXCIsIFwid2VpZ2h0XCI6IDguNTY5OTA1MjcwMzM5NTU0fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQxOSwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJnYXJsaWNcIiwgXCJ3ZWlnaHRcIjogNjcuODkxOTIyODYzMjY1N30sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiA0MjAsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwiZ2luZ2VyXCIsIFwid2VpZ2h0XCI6IDYuMDQ0ODc1ODIzOTAwMzUzfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQyMSwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJncmFwZWZydWl0XCIsIFwid2VpZ2h0XCI6IDkuMTE4Mjg5NDQwMTg1MTQyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTEsIFwibmFtZVwiOiA0MjIsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwiZ3JlZW5fdGVhXCIsIFwid2VpZ2h0XCI6IDg0LjQ2NjQ5NDIyNjUyMTk5fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0MjMsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogNC4wNTMxNzEzMDEzMjk2OTM1fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0MjQsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogMTIuODcxNDQzNDM4MjQ2MjgzfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQyNSwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJtYW5kYXJpblwiLCBcIndlaWdodFwiOiA0LjU5MDc4NzY2MTM1NzAxMX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA0MjcsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwibWVsb25cIiwgXCJ3ZWlnaHRcIjogMzIuMDg2MjcyOTE2NzIyMDN9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDI4LCBcInNvdXJjZVwiOiBcImVub2tpZGFrZVwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDUzLjMzNTc4ODU2NDc5ODYwNX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0MjksIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwib25pb25cIiwgXCJ3ZWlnaHRcIjogMTAuODE0NzI1NjI5ODE5MDQ0fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQzMCwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJvcmFuZ2VcIiwgXCJ3ZWlnaHRcIjogNy40OTg5NjM5ODY0NDM2OTQ2fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQzMSwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJwb3JjaW5pXCIsIFwid2VpZ2h0XCI6IDM3LjQ3MzAwODYwOTc4MDMxNX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA0MzIsIFwic291cmNlXCI6IFwiZW5va2lkYWtlXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAxNC41Nzc4MzM1NDI2MDYxMjV9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDMzLCBcInNvdXJjZVwiOiBcImVub2tpZGFrZVwiLCBcInRhcmdldFwiOiBcInBvdGF0b1wiLCBcIndlaWdodFwiOiAxMy40Mjc2Nzc5OTQ2MzE3Nzd9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQzNCwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJzYWxtb25cIiwgXCJ3ZWlnaHRcIjogOC4xNDMzODk0MjIxMTYzMX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDM1LCBcInNvdXJjZVwiOiBcImVub2tpZGFrZVwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMTAwLjQwMDI1NDkxNDU1NzM3fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQzNiwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAxMjkuODkwMjI1NTc2ODgxNjJ9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDM3LCBcInNvdXJjZVwiOiBcImVub2tpZGFrZVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMTcuNTYxOTE1MDIwNDA4NDE0fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQzOCwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDUuMTg1NjQxOTA5NjcwMTk1fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQzOSwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJ0b21hdG9cIiwgXCJ3ZWlnaHRcIjogNTEuNzYyNzI5NTUyNTkyNjJ9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ0MCwgXCJzb3VyY2VcIjogXCJlbm9raWRha2VcIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDM2LjYyNjIwNjQ1NTA0NDY0NX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDQ4LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJnYXJsaWNcIiwgXCJ3ZWlnaHRcIjogMjEuODQ1NzQzNDM5NzIxODg2fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDksIFwibmFtZVwiOiA0NDksIFwic291cmNlXCI6IFwiZmlzaFwiLCBcInRhcmdldFwiOiBcImdpbmdlclwiLCBcIndlaWdodFwiOiAxLjk0NTA3Mzg4ODA5NTA5Nn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNDUwLCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJncmFwZWZydWl0XCIsIFwid2VpZ2h0XCI6IDIuOTM0MDEzNDA0MjI0Njg1fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDExLCBcIm5hbWVcIjogNDUxLCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJncmVlbl90ZWFcIiwgXCJ3ZWlnaHRcIjogMjcuMTc4OTgyMTg2NzU2NTY3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDU0LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiAxLjk3Njk3NTE2MjgwODk1MzZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQ1NSwgXCJzb3VyY2VcIjogXCJmaXNoXCIsIFwidGFyZ2V0XCI6IFwibWFuZGFyaW5cIiwgXCJ3ZWlnaHRcIjogMS40NzcxODg1MjU2MjUxODI3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA0NTYsIFwic291cmNlXCI6IFwiZmlzaFwiLCBcInRhcmdldFwiOiBcIm1lbG9uXCIsIFwid2VpZ2h0XCI6IDEwLjMyNDQ3NTM3OTYwMTczfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0NTcsIFwic291cmNlXCI6IFwiZmlzaFwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDE3LjE2MTk4MTkyNjYwNTIzNn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDU4LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJvbmlvblwiLCBcIndlaWdodFwiOiAzLjQ3OTg3OTY2MDQzOTU4NDd9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDQ1OSwgXCJzb3VyY2VcIjogXCJmaXNoXCIsIFwidGFyZ2V0XCI6IFwib3JhbmdlXCIsIFwid2VpZ2h0XCI6IDIuNDEyOTU5MjUwNTY1MDA5NX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDYwLCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJwb3JjaW5pXCIsIFwid2VpZ2h0XCI6IDEyLjA1Nzc3Nzk3MjM4Nzk5N30sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNDYxLCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDIuMjE5Njc1MDU2NzEwNDU5NX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDYyLCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJwb3RhdG9cIiwgXCJ3ZWlnaHRcIjogNC4zMjA2NTU0Nzg0NTM3MDJ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0NjMsIFwic291cmNlXCI6IFwiZmlzaFwiLCBcInRhcmdldFwiOiBcInNhbG1vblwiLCBcIndlaWdodFwiOiAyLjYyMDMxNzUzNjIwNTA4NX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDY1LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiA0MS43OTUwODI4ODQ4MjIzODV9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQ2NywgXCJzb3VyY2VcIjogXCJmaXNoXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA1LjY1MDkzODYzNDAyMTU2OX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNDY4LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDEuNjY4NTk2MTczOTA4MzI4OH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDY5LCBcInNvdXJjZVwiOiBcImZpc2hcIiwgXCJ0YXJnZXRcIjogXCJ0b21hdG9cIiwgXCJ3ZWlnaHRcIjogMTYuNjU1ODE1MDM0NDc4NjkyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0NzIsIFwic291cmNlXCI6IFwiZ2FybGljXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMTAuMzMyMDMyNTY4OTY0ODk2fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0NzMsIFwic291cmNlXCI6IFwiZ2FybGljXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogMzIuODEwODkzNzI0MTEyMTl9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNDc1LCBcInNvdXJjZVwiOiBcImdhcmxpY1wiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogMzcuMTYwNjkyMTQ2ODQ4ODR9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ3NywgXCJzb3VyY2VcIjogXCJnYXJsaWNcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDI1NS45MzI2MDg0NjYxODM3fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQ3OCwgXCJzb3VyY2VcIjogXCJnYXJsaWNcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAyNTUuOTMyNjA4NDY2MTgzN30sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA0NzksIFwic291cmNlXCI6IFwiZ2FybGljXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA2LjA4NjA0Nzk5NjM5NTUxOH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDgwLCBcInNvdXJjZVwiOiBcImdhcmxpY1wiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogOTMuMzY0NzA4NzI3NDYxNjZ9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ4MSwgXCJzb3VyY2VcIjogXCJnaW5nZXJcIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiAwLjkxOTkzMDU0OTIzMDAzMTV9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ4MiwgXCJzb3VyY2VcIjogXCJnaW5nZXJcIiwgXCJ0YXJnZXRcIjogXCJtYWNrZXJlbFwiLCBcIndlaWdodFwiOiAyLjkyMTM3NTE3NzkxMTgzOH0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA0ODUsIFwic291cmNlXCI6IFwiZ2luZ2VyXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAzLjMwODY2NzA3MDkwMTc2OX0sIHtcImdyb3VwX2lkX3NcIjogOSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDg3LCBcInNvdXJjZVwiOiBcImdpbmdlclwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMjIuNzg3NDA2Mzk4NTYwOTY1fSwge1wiZ3JvdXBfaWRfc1wiOiA5LCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDQ4OSwgXCJzb3VyY2VcIjogXCJnaW5nZXJcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAyMi43ODc0MDYzOTg1NjA5NjV9LCB7XCJncm91cF9pZF9zXCI6IDksIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNDkwLCBcInNvdXJjZVwiOiBcImdpbmdlclwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMC41NDE4ODE5MDM1NDU0NjcyfSwge1wiZ3JvdXBfaWRfc1wiOiA5LCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA0OTEsIFwic291cmNlXCI6IFwiZ2luZ2VyXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA4LjMxMjg4OTc2MzQ2Njk3OX0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNDk3LCBcInNvdXJjZVwiOiBcImdyYXBlZnJ1aXRcIiwgXCJ0YXJnZXRcIjogXCJrYXRzdW9idXNoaVwiLCBcIndlaWdodFwiOiAxLjM4NzY1MzQ4NjU0MTg1ODh9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDQ5OCwgXCJzb3VyY2VcIjogXCJncmFwZWZydWl0XCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogNC40MDY2OTgzNjkyNjE5MjN9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNTAwLCBcInNvdXJjZVwiOiBcImdyYXBlZnJ1aXRcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDQuOTkwOTAyMTk0Mjg2MjA4fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1MDEsIFwic291cmNlXCI6IFwiZ3JhcGVmcnVpdFwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMzQuMzczMjczMDMwOTY0OTI0fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDUwMiwgXCJzb3VyY2VcIjogXCJncmFwZWZydWl0XCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMzQuMzczMjczMDMwOTY0OTI0fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDUwMywgXCJzb3VyY2VcIjogXCJncmFwZWZydWl0XCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiAwLjgxNzM5MjQ3OTY1ODU3MTN9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDUwNCwgXCJzb3VyY2VcIjogXCJncmFwZWZydWl0XCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiAxMi41Mzk0MzYyMzU4ODU0NzN9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1MDgsIFwic291cmNlXCI6IFwiZ3JlZW5fdGVhXCIsIFwidGFyZ2V0XCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ3ZWlnaHRcIjogMTIuODU0NDA5MzY5MDI1MzcyfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTA5LCBcInNvdXJjZVwiOiBcImdyZWVuX3RlYVwiLCBcInRhcmdldFwiOiBcIm1hY2tlcmVsXCIsIFwid2VpZ2h0XCI6IDQwLjgyMTA3MzM4MzAwNTk2fSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA1MTEsIFwic291cmNlXCI6IFwiZ3JlZW5fdGVhXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiA0Ni4yMzI3OTU1NDE3NzU2N30sIHtcImdyb3VwX2lkX3NcIjogMTEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDUxMiwgXCJzb3VyY2VcIjogXCJncmVlbl90ZWFcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDMxOC40MTM4NzQzNDE1MTM2fSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1MTMsIFwic291cmNlXCI6IFwiZ3JlZW5fdGVhXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMzE4LjQxMzg3NDM0MTUxMzZ9LCB7XCJncm91cF9pZF9zXCI6IDExLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDUxNCwgXCJzb3VyY2VcIjogXCJncmVlbl90ZWFcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDcuNTcxODQ1MzEzMzk5MTkxfSwge1wiZ3JvdXBfaWRfc1wiOiAxMSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTE1LCBcInNvdXJjZVwiOiBcImdyZWVuX3RlYVwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogMTE2LjE1Nzk5NDkxNDUzMjQ3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTI0LCBcInNvdXJjZVwiOiBcImthdHN1b2J1c2hpXCIsIFwidGFyZ2V0XCI6IFwibWFja2VyZWxcIiwgXCJ3ZWlnaHRcIjogMC45MzUwMTgzODU5MTc1MDk5fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA1MjUsIFwic291cmNlXCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ0YXJnZXRcIjogXCJtYW5kYXJpblwiLCBcIndlaWdodFwiOiAwLjY5ODY0MjI3NzgxMzY4M30sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTI2LCBcInNvdXJjZVwiOiBcImthdHN1b2J1c2hpXCIsIFwidGFyZ2V0XCI6IFwibWVsb25cIiwgXCJ3ZWlnaHRcIjogNC44ODMwMDIzMTkxNDF9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDUyNywgXCJzb3VyY2VcIjogXCJrYXRzdW9idXNoaVwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDguMTE2ODI4NjQ5MTU3MTg1fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1MjgsIFwic291cmNlXCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ0YXJnZXRcIjogXCJvbmlvblwiLCBcIndlaWdodFwiOiAxLjY0NTgyMzEzNjUyNzU5OTN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDUyOSwgXCJzb3VyY2VcIjogXCJrYXRzdW9idXNoaVwiLCBcInRhcmdldFwiOiBcIm9yYW5nZVwiLCBcIndlaWdodFwiOiAxLjE0MTIxODgyMDY0NjM4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1MzAsIFwic291cmNlXCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ0YXJnZXRcIjogXCJwb3JjaW5pXCIsIFwid2VpZ2h0XCI6IDUuNzAyNzc0Nzc5MTYwNjU1fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA1MzEsIFwic291cmNlXCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDEuMDQ5ODA0MjgwNzE2MzY0Nn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTMyLCBcInNvdXJjZVwiOiBcImthdHN1b2J1c2hpXCIsIFwidGFyZ2V0XCI6IFwicG90YXRvXCIsIFwid2VpZ2h0XCI6IDIuMDQzNDcxNDU0NTU3NTgzfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTMzLCBcInNvdXJjZVwiOiBcImthdHN1b2J1c2hpXCIsIFwidGFyZ2V0XCI6IFwic2FsbW9uXCIsIFwid2VpZ2h0XCI6IDEuMjM5Mjg5NzU5MTE0OTg5fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1MzQsIFwic291cmNlXCI6IFwia2F0c3VvYnVzaGlcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAxOS43NjcxNTMyMTEzMzgzNX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTM1LCBcInNvdXJjZVwiOiBcImthdHN1b2J1c2hpXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiAyLjY3MjYzNDI0NDQyNTQyOH0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTM2LCBcInNvdXJjZVwiOiBcImthdHN1b2J1c2hpXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAwLjc4OTE2OTI5NzkzODU1Mjh9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDUzNywgXCJzb3VyY2VcIjogXCJrYXRzdW9idXNoaVwiLCBcInRhcmdldFwiOiBcInRvbWF0b1wiLCBcIndlaWdodFwiOiA3Ljg3NzQzNDk3MzcxNTg2MX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxLCBcIm5hbWVcIjogNTU1LCBcInNvdXJjZVwiOiBcIm1hY2tlcmVsXCIsIFwidGFyZ2V0XCI6IFwibWFuZGFyaW5cIiwgXCJ3ZWlnaHRcIjogMi4yMTg2NDE2MjUwMTUwMjM2fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA1NTYsIFwic291cmNlXCI6IFwibWFja2VyZWxcIiwgXCJ0YXJnZXRcIjogXCJtZWxvblwiLCBcIndlaWdodFwiOiAxNS41MDY2OTQyNjE2MDkzMzZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU1NywgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcIm11c2hyb29tXCIsIFwid2VpZ2h0XCI6IDI1Ljc3NjE4Njg2NDE2OTYwNn0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTU4LCBcInNvdXJjZVwiOiBcIm1hY2tlcmVsXCIsIFwidGFyZ2V0XCI6IFwib25pb25cIiwgXCJ3ZWlnaHRcIjogNS4yMjY1NTQxODA5NzQ4NzR9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDU1OSwgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcIm9yYW5nZVwiLCBcIndlaWdodFwiOiAzLjYyNDEwODczMDgwODY1M30sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTYwLCBcInNvdXJjZVwiOiBcIm1hY2tlcmVsXCIsIFwidGFyZ2V0XCI6IFwicG9yY2luaVwiLCBcIndlaWdodFwiOiAxOC4xMTAwMDI2NTA3NDk4MDZ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDU2MSwgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogMy4zNjI5MzI3MjAwNDMyMDN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU2MiwgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcInBvdGF0b1wiLCBcIndlaWdodFwiOiA2LjQ4OTM0NTA4MDU3NDMwMX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDU2MywgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcInNhbG1vblwiLCBcIndlaWdodFwiOiAzLjkzNTU0NzQ2NDQ3ODgzMX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDU2NCwgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMjMuMTYxMTQ0MDMxODY0MzJ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU2NSwgXCJzb3VyY2VcIjogXCJtYWNrZXJlbFwiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDYyLjc3MzUxMTMwMjQ3NTc3fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1NjYsIFwic291cmNlXCI6IFwibWFja2VyZWxcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDguNDg3MzQ0MzQxMTk2ODM1fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEsIFwibmFtZVwiOiA1NjcsIFwic291cmNlXCI6IFwibWFja2VyZWxcIiwgXCJ0YXJnZXRcIjogXCJzdHJhd2JlcnJ5XCIsIFwid2VpZ2h0XCI6IDIuNTA2MTIzNTMzMDE4MjY1fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA1NjgsIFwic291cmNlXCI6IFwibWFja2VyZWxcIiwgXCJ0YXJnZXRcIjogXCJ0b21hdG9cIiwgXCJ3ZWlnaHRcIjogMjUuMDE1OTU2OTI5NjcyMTQzfSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTY5LCBcInNvdXJjZVwiOiBcIm1hY2tlcmVsXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA4LjQ0OTIyOTk3MjI1NDY3NH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDIsIFwibmFtZVwiOiA1NzIsIFwic291cmNlXCI6IFwibWFuZGFyaW5cIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDIuNTEyNzcwODgzNDk0MDc4NX0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTczLCBcInNvdXJjZVwiOiBcIm1hbmRhcmluXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiAxNy4zMDU5MjExMTAxMTE3ODJ9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTc0LCBcInNvdXJjZVwiOiBcIm1hbmRhcmluXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMTcuMzA1OTIxMTEwMTExNzgyfSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDU3NSwgXCJzb3VyY2VcIjogXCJtYW5kYXJpblwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogMC40MTE1MzI4MTM3NzE1MjU1fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA1NzcsIFwic291cmNlXCI6IFwibWFuZGFyaW5cIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDYuMzEzMjMzMzY3OTE0MTQ0fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMiwgXCJuYW1lXCI6IDU4MCwgXCJzb3VyY2VcIjogXCJtZWxvblwiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogMTcuNTYyNDQ0MjQ1Mzg0OTd9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDU4MSwgXCJzb3VyY2VcIjogXCJtZWxvblwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMTIwLjk1NTgyNDc0NjI0MTh9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTgyLCBcInNvdXJjZVwiOiBcIm1lbG9uXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMTIwLjk1NTgyNDc0NjI0MTh9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNTgzLCBcInNvdXJjZVwiOiBcIm1lbG9uXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiAyLjg3NjMxNTYwMjIyNDI0MjR9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDU4NSwgXCJzb3VyY2VcIjogXCJtZWxvblwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogNDQuMTI0OTE3OTM4MzY3Nzh9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNTk4LCBcInNvdXJjZVwiOiBcIm11c2hyb29tXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiAyOS4xOTMzODE3MTEzNjU1NX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNTk5LCBcInNvdXJjZVwiOiBcIm11c2hyb29tXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiAyMDEuMDYwMjU3NDg0MjYwNTd9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjAwLCBcInNvdXJjZVwiOiBcIm11c2hyb29tXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMjAxLjA2MDI1NzQ4NDI2MDU3fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDYwMSwgXCJzb3VyY2VcIjogXCJtdXNocm9vbVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogNC43ODExODk4MDA1MTE2MTl9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDYwMiwgXCJzb3VyY2VcIjogXCJtdXNocm9vbVwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogNzMuMzQ3MTY5MzU1MTk2NzR9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNjA4LCBcInNvdXJjZVwiOiBcIm9uaW9uXCIsIFwidGFyZ2V0XCI6IFwicG9ya1wiLCBcIndlaWdodFwiOiA1LjkxOTQ0Nzc0NjI2MTg0OX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjEwLCBcInNvdXJjZVwiOiBcIm9uaW9uXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiA0MC43NjgzMzkyMDA4MjIzMX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2MTIsIFwic291cmNlXCI6IFwib25pb25cIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiA0MC43NjgzMzkyMDA4MjIzMX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2MTMsIFwic291cmNlXCI6IFwib25pb25cIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDAuOTY5NDY2NDE3NzI4MTcwMn0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjE0LCBcInNvdXJjZVwiOiBcIm9uaW9uXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiAxNC44NzIzNjg2OTczNjM3ODZ9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNjE3LCBcInNvdXJjZVwiOiBcIm9yYW5nZVwiLCBcInRhcmdldFwiOiBcInBvcmtcIiwgXCJ3ZWlnaHRcIjogNC4xMDQ1NjMyNTgzMDk0NjF9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDYxOCwgXCJzb3VyY2VcIjogXCJvcmFuZ2VcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDI4LjI2ODg5MTY4NzAxMDE1NH0sIHtcImdyb3VwX2lkX3NcIjogMSwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2MTksIFwic291cmNlXCI6IFwib3JhbmdlXCIsIFwidGFyZ2V0XCI6IFwic2hpaXRha2VcIiwgXCJ3ZWlnaHRcIjogMjguMjY4ODkxNjg3MDEwMTU0fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDYyMCwgXCJzb3VyY2VcIjogXCJvcmFuZ2VcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDAuNjcyMjMwOTkzMzE5NDA5fSwge1wiZ3JvdXBfaWRfc1wiOiAxLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2MjMsIFwic291cmNlXCI6IFwib3JhbmdlXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiAxMC4zMTI1NDYxNTkwMTk4MTd9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAyLCBcIm5hbWVcIjogNjQwLCBcInNvdXJjZVwiOiBcInBvcmNpbmlcIiwgXCJ0YXJnZXRcIjogXCJwb3JrXCIsIFwid2VpZ2h0XCI6IDIwLjUxMDg3Nzg0ODczNjE5fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2NDEsIFwic291cmNlXCI6IFwicG9yY2luaVwiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogMTQxLjI2MjIzNjE1NTcyNH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2NDIsIFwic291cmNlXCI6IFwicG9yY2luaVwiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDE0MS4yNjIyMzYxNTU3MjR9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjQzLCBcInNvdXJjZVwiOiBcInBvcmNpbmlcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDMuMzU5MTk5NzMwMjUwNDM1NX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjQ0LCBcInNvdXJjZVwiOiBcInBvcmNpbmlcIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDUxLjUzMjczNTk0OTE2NTc4fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY0NiwgXCJzb3VyY2VcIjogXCJwb3JrXCIsIFwidGFyZ2V0XCI6IFwicG90YXRvXCIsIFwid2VpZ2h0XCI6IDcuMzQ5NjQ5MDc2OTY3MTg0fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2NDksIFwic291cmNlXCI6IFwicG9ya1wiLCBcInRhcmdldFwiOiBcInNhbG1vblwiLCBcIndlaWdodFwiOiA0LjQ1NzI4OTk3NzcyODc3OH0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjUwLCBcInNvdXJjZVwiOiBcInBvcmtcIiwgXCJ0YXJnZXRcIjogXCJzYXJkaW5lXCIsIFwid2VpZ2h0XCI6IDI2LjAwNDQ4MTMyMDUyNTEyN30sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2NTEsIFwic291cmNlXCI6IFwicG9ya1wiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDcxLjA5NTUwNzEyMzQwOTEyfSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY1MiwgXCJzb3VyY2VcIjogXCJwb3JrXCIsIFwidGFyZ2V0XCI6IFwic295YmVhblwiLCBcIndlaWdodFwiOiA5LjYxMjUyNjY0NjE2NDk2fSwge1wiZ3JvdXBfaWRfc1wiOiAyLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDY1MywgXCJzb3VyY2VcIjogXCJwb3JrXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAyLjgzODM2NDc3ODM0MjY3OX0sIHtcImdyb3VwX2lkX3NcIjogMiwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2NTQsIFwic291cmNlXCI6IFwicG9ya1wiLCBcInRhcmdldFwiOiBcInRvbWF0b1wiLCBcIndlaWdodFwiOiAyOC4zMzIzNjY3NDQ5ODgxMzZ9LCB7XCJncm91cF9pZF9zXCI6IDIsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDY1NSwgXCJzb3VyY2VcIjogXCJwb3JrXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA5LjQ4NjQ4NDg5NDAxMjAyOH0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjYyLCBcInNvdXJjZVwiOiBcInBvdGF0b1wiLCBcInRhcmdldFwiOiBcInNhcmRpbmVcIiwgXCJ3ZWlnaHRcIjogNTAuNjE4NDAyMTU4NTUwNjl9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjYzLCBcInNvdXJjZVwiOiBcInBvdGF0b1wiLCBcInRhcmdldFwiOiBcInNoaWl0YWtlXCIsIFwid2VpZ2h0XCI6IDUwLjYxODQwMjE1ODU1MDY5fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY2NCwgXCJzb3VyY2VcIjogXCJwb3RhdG9cIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDEuMjAzNjk5NzgyMDc5NTI1OX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNjY1LCBcInNvdXJjZVwiOiBcInBvdGF0b1wiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogMTguNDY1NjkwNjQ0NTIzODh9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMTAsIFwibmFtZVwiOiA2ODIsIFwic291cmNlXCI6IFwic2FsbW9uXCIsIFwidGFyZ2V0XCI6IFwic2FyZGluZVwiLCBcIndlaWdodFwiOiAzMC42OTgxODYzMDM0ODE5NDN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY4MywgXCJzb3VyY2VcIjogXCJzYWxtb25cIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiAzMC42OTgxODYzMDM0ODE5NDN9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY4NSwgXCJzb3VyY2VcIjogXCJzYWxtb25cIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDAuNzI5OTk5MzM5OTIzNzY5NX0sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDY4NiwgXCJzb3VyY2VcIjogXCJzYWxtb25cIiwgXCJ0YXJnZXRcIjogXCJ0dW5hXCIsIFwid2VpZ2h0XCI6IDExLjE5ODc1NzUxNjEzOTgyM30sIHtcImdyb3VwX2lkX3NcIjogMTAsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNjg3LCBcInNvdXJjZVwiOiBcInNhcmRpbmVcIiwgXCJ0YXJnZXRcIjogXCJzaGlpdGFrZVwiLCBcIndlaWdodFwiOiA0ODkuNjQ4fSwge1wiZ3JvdXBfaWRfc1wiOiAxMCwgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2ODksIFwic291cmNlXCI6IFwic2FyZGluZVwiLCBcInRhcmdldFwiOiBcInNveWJlYW5cIiwgXCJ3ZWlnaHRcIjogNjYuMjAzMjYxNDY3MzAwNTJ9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDY5MCwgXCJzb3VyY2VcIjogXCJzYXJkaW5lXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAxOS41NDgzNDY5MDk5MzE5MDR9LCB7XCJncm91cF9pZF9zXCI6IDEwLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY5MSwgXCJzb3VyY2VcIjogXCJzYXJkaW5lXCIsIFwidGFyZ2V0XCI6IFwidG9tYXRvXCIsIFwid2VpZ2h0XCI6IDE5NS4xMzAyODcwMzU4NDczNX0sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDMsIFwibmFtZVwiOiA2OTUsIFwic291cmNlXCI6IFwic2hpaXRha2VcIiwgXCJ0YXJnZXRcIjogXCJzb3liZWFuXCIsIFwid2VpZ2h0XCI6IDY2LjIwMzI2MTQ2NzMwMDUyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDY5NiwgXCJzb3VyY2VcIjogXCJzaGlpdGFrZVwiLCBcInRhcmdldFwiOiBcInN0cmF3YmVycnlcIiwgXCJ3ZWlnaHRcIjogMTkuNTQ4MzQ2OTA5OTMxOTA0fSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMywgXCJuYW1lXCI6IDY5NywgXCJzb3VyY2VcIjogXCJzaGlpdGFrZVwiLCBcInRhcmdldFwiOiBcInRvbWF0b1wiLCBcIndlaWdodFwiOiAxOTUuMTMwMjg3MDM1ODQ3MzV9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDY5OCwgXCJzb3VyY2VcIjogXCJzaGlpdGFrZVwiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogMTc4LjYyNDUzMzkwNzQyNzMyfSwge1wiZ3JvdXBfaWRfc1wiOiAzLCBcImdyb3VwX2lkX3RcIjogMSwgXCJuYW1lXCI6IDY5OSwgXCJzb3VyY2VcIjogXCJzb3liZWFuXCIsIFwidGFyZ2V0XCI6IFwic3RyYXdiZXJyeVwiLCBcIndlaWdodFwiOiAwLjQ2NDg1NzQ0MTQwNjMxOTh9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAzLCBcIm5hbWVcIjogNzAwLCBcInNvdXJjZVwiOiBcInNveWJlYW5cIiwgXCJ0YXJnZXRcIjogXCJ0b21hdG9cIiwgXCJ3ZWlnaHRcIjogNC42NDAxNzU3ODUyMTA3MTh9LCB7XCJncm91cF9pZF9zXCI6IDMsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDcwMSwgXCJzb3VyY2VcIjogXCJzb3liZWFuXCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiAyNC4xNTEwNzczNTA5NzA2OTV9LCB7XCJncm91cF9pZF9zXCI6IDEsIFwiZ3JvdXBfaWRfdFwiOiAxMCwgXCJuYW1lXCI6IDcwMiwgXCJzb3VyY2VcIjogXCJzdHJhd2JlcnJ5XCIsIFwidGFyZ2V0XCI6IFwidHVuYVwiLCBcIndlaWdodFwiOiA3LjEzMTI3NDYyMDY0MDMwM30sIHtcImdyb3VwX2lkX3NcIjogMywgXCJncm91cF9pZF90XCI6IDEwLCBcIm5hbWVcIjogNzA0LCBcInNvdXJjZVwiOiBcInRvbWF0b1wiLCBcInRhcmdldFwiOiBcInR1bmFcIiwgXCJ3ZWlnaHRcIjogNzEuMTgzOTA0NzA5MDk4NjZ9XSwgXCJub2Rlc1wiOiBbe1wiZ3JvdXBfaWRcIjogMCwgXCJuYW1lXCI6IFwib3JhbmdlX3BlZWxcIiwgXCJzaXplXCI6IDEuMDEyNDI1MjE4NTkxODA4NiwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY2hlcnJ5XCIsIFwic2l6ZVwiOiAxLjkxODY1MTk4NzY4MDk3OTgsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcInJvYXN0ZWRfcG9ya1wiLCBcInNpemVcIjogMC4yMjEyNDY3Njk3OTcxNjA5MywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwibWF0c3V0YWtlXCIsIFwic2l6ZVwiOiAwLjA5OTExODU1Mjg2OTEyODEyLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJvcmFuZ2VfanVpY2VcIiwgXCJzaXplXCI6IDMuMDA4OTU2MDY5MjQxMzg5LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA0LCBcIm5hbWVcIjogXCJyeWVfYnJlYWRcIiwgXCJzaXplXCI6IDAuMTYxMDY3NjQ4NDEyMzMzMTgsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcIndoaXRlX3dpbmVcIiwgXCJzaXplXCI6IDMuODMzNzY0MDI3MDQ1MjA0NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwiZmVubmVsXCIsIFwic2l6ZVwiOiAxLjYwNTM2NjU2MTY0ODIsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcInBpbmVhcHBsZVwiLCBcInNpemVcIjogMi44NjAyNzgyMzk5Mzc2OTcsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcImNoaWNrZW5cIiwgXCJzaXplXCI6IDkuMzcwMjQzMTk0NDQ5MzYyLCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJwb3JjaW5pXCIsIFwic2l6ZVwiOiAwLjE4NzYxNzI2MDc4Nzk5MjQ4LCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJtaWxrXCIsIFwic2l6ZVwiOiAyMi44MjM4MTY3NzIyNzUxMjMsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcInJhd19iZWVmXCIsIFwic2l6ZVwiOiAwLjAwMzUzOTk0ODMxNjc1NDU3NSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiZ3JhcGVcIiwgXCJzaXplXCI6IDAuNjEwNjQxMDg0NjQwMTY0MywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogOCwgXCJuYW1lXCI6IFwicGVhbnV0XCIsIFwic2l6ZVwiOiAwLjgwMTc5ODI5Mzc0NDkxMTMsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcImNheWVubmVcIiwgXCJzaXplXCI6IDE0LjA3MTI5NDU1OTA5OTQzNywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwiY29nbmFjXCIsIFwic2l6ZVwiOiAwLjExNjgxODI5NDQ1MjkwMSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwibWVsb25cIiwgXCJzaXplXCI6IDAuMjc3ODg1OTQyODY1MjM0MTYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcIm11bmdfYmVhblwiLCBcInNpemVcIjogMC4wMzM2Mjk1MDkwMDkxNjg0NjYsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcInJpY2VcIiwgXCJzaXplXCI6IDYuMDA5MDYyMjY3NjkwODkyLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwibWFja2VyZWxcIiwgXCJzaXplXCI6IDAuMDc3ODc4ODYyOTY4NjAwNjUsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcInRoYWlfcGVwcGVyXCIsIFwic2l6ZVwiOiAwLjE1Mzk4Nzc1MTc3ODgyNDA0LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMSwgXCJuYW1lXCI6IFwiY29mZmVlXCIsIFwic2l6ZVwiOiAxLjI2NzMwMTQ5NzM5ODEzOCwgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY2l0cnVzXCIsIFwic2l6ZVwiOiAwLjI4ODUwNTc4NzgxNTQ5Nzg1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJsaW1hX2JlYW5cIiwgXCJzaXplXCI6IDAuMjYzNzI2MTQ5NTk4MjE1OSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogOSwgXCJuYW1lXCI6IFwiYmxhY2tfcGVwcGVyXCIsIFwic2l6ZVwiOiAxNy4yNjA3ODc5OTI0OTUzMSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwiYmVhblwiLCBcInNpemVcIjogMy4zNjgyNjA4MjMzOTE5Nzg0LCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiAxMSwgXCJuYW1lXCI6IFwicGVhbnV0X2J1dHRlclwiLCBcInNpemVcIjogMS43NjExMjQyODc1ODU0MDE0LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJraWRuZXlfYmVhblwiLCBcInNpemVcIjogMC43ODIzMjg1NzgwMDI3NjExLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJhcHBsZV9icmFuZHlcIiwgXCJzaXplXCI6IDAuMDY1NDg5MDQzODU5OTU5NjQsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcImJyZWFkXCIsIFwic2l6ZVwiOiA4LjA1ODY5MjM0MzA5MTc5LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJqdW5pcGVyX2JlcnJ5XCIsIFwic2l6ZVwiOiAwLjA1ODQwOTE0NzIyNjQ1MDUsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJjbGFtXCIsIFwic2l6ZVwiOiAwLjgxNTk1ODA4NzAxMTkyOTYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcIm9uaW9uXCIsIFwic2l6ZVwiOiAzMS45MTQ0MDQwNDk3MDA4NzQsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcImNpZGVyXCIsIFwic2l6ZVwiOiAxLjk4MjM3MTA1NzM4MjU2MjQsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDAsIFwibmFtZVwiOiBcImNpdHJ1c19wZWVsXCIsIFwic2l6ZVwiOiAwLjAwNzA3OTg5NjYzMzUwOTE1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwiZWVsXCIsIFwic2l6ZVwiOiAwLjAzNTM5OTQ4MzE2NzU0NTc2LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJudXRtZWdcIiwgXCJzaXplXCI6IDQuNDQ2MTc1MDg1ODQzNzQ2NSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwicm9zZW1hcnlcIiwgXCJzaXplXCI6IDMuMzQ1MjUxMTU5MzMzMDczNiwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogOSwgXCJuYW1lXCI6IFwidmFuaWxsYVwiLCBcInNpemVcIjogMTUuOTc0MDE2Nzc5MzU1MDIyLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAyLCBcIm5hbWVcIjogXCJwb3JrXCIsIFwic2l6ZVwiOiAzLjQ3NjIyOTI0NzA1Mjk5MjcsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInJlZF9iZWFuXCIsIFwic2l6ZVwiOiAwLjA1ODQwOTE0NzIyNjQ1MDUsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDExLCBcIm5hbWVcIjogXCJ0ZWFcIiwgXCJzaXplXCI6IDAuMTc4NzY3Mzg5OTk2MTA2MDYsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJmaXNoXCIsIFwic2l6ZVwiOiAzLjMyNTc4MTQ0MzU5MDkyMzYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcImJhY29uXCIsIFwic2l6ZVwiOiAzLjgxNjA2NDI4NTQ2MTQzMjYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDEyLCBcIm5hbWVcIjogXCJsYXZlbmRlclwiLCBcInNpemVcIjogMC4xMDk3MzgzOTc4MTkzOTE4MywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwicGVwcGVybWludFwiLCBcInNpemVcIjogMC4yNTEzMzYzMzA0ODk1NzQ5LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA4LCBcIm5hbWVcIjogXCJibGFja19zZXNhbWVfc2VlZFwiLCBcInNpemVcIjogMC4wNDYwMTkzMjgxMTc4MDk0OCwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwibGVtb25ncmFzc1wiLCBcInNpemVcIjogMC4yNDI0ODY0NTk2OTc2ODg0MiwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiZ3VhdmFcIiwgXCJzaXplXCI6IDAuMDIzMDA5NjY0MDU4OTA0NzQsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDgsIFwibmFtZVwiOiBcInJvYXN0ZWRfcGVhbnV0XCIsIFwic2l6ZVwiOiAwLjI5MjA0NTczNjEzMjI1MjUsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJoYWRkb2NrXCIsIFwic2l6ZVwiOiAwLjA1NDg2OTE5ODkwOTY5NTkyLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJtYW5kYXJpblwiLCBcInNpemVcIjogMC40OTIwNTI4MTYwMjg4ODYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcInF1aW5jZVwiLCBcInNpemVcIjogMC4wNDk1NTkyNzY0MzQ1NjQwNiwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiYmFydGxldHRfcGVhclwiLCBcInNpemVcIjogMC4wNDA3MDk0MDU2NDI2Nzc2MiwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMCwgXCJuYW1lXCI6IFwibGVtb25fcGVlbFwiLCBcInNpemVcIjogMS4yNjU1MzE1MjMyMzk3NjA2LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJwZXBwZXJcIiwgXCJzaXplXCI6IDE2LjAzNTk2NTg3NDg5ODIyNCwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwicnVtXCIsIFwic2l6ZVwiOiAxLjA2NTUyNDQ0MzM0MzEyNywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwicGVhclwiLCBcInNpemVcIjogMC44MjgzNDc5MDYxMjA1NzA3LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJjaGFtcGFnbmVfd2luZVwiLCBcInNpemVcIjogMC4xNzUyMjc0NDE2NzkzNTE1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJyYXNwYmVycnlcIiwgXCJzaXplXCI6IDEuMzg3NjU5NzQwMTY3NzkzNSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcInNtb2tlZF9zYWxtb25cIiwgXCJzaXplXCI6IDAuMTcxNjg3NDkzMzYyNTk2OSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiY29uY29yZF9ncmFwZVwiLCBcInNpemVcIjogMC4wMjEyMzk2ODk5MDA1Mjc0NTQsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcImJsYWNrX2JlYW5cIiwgXCJzaXplXCI6IDAuODM4OTY3NzUxMDcwODM0MywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwicGx1bVwiLCBcInNpemVcIjogMC40OTAyODI4NDE4NzA1MDg3LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJicmFuZHlcIiwgXCJzaXplXCI6IDAuNjk5MTM5NzkyNTU5MDI4NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogOSwgXCJuYW1lXCI6IFwiY2lubmFtb25cIiwgXCJzaXplXCI6IDkuOTE3MTY1MjA5Mzg3OTQyLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA0LCBcIm5hbWVcIjogXCJwb3Bjb3JuXCIsIFwic2l6ZVwiOiAwLjE3MTY4NzQ5MzM2MjU5NjksIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDcsIFwibmFtZVwiOiBcImNoZWRkYXJfY2hlZXNlXCIsIFwic2l6ZVwiOiA1LjM2MTI1MTcyNTcyNDgwNCwgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwiY2hlZXNlXCIsIFwic2l6ZVwiOiA1LjgwOTA1NTE4Nzc5NDI1OCwgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwibWFyam9yYW1cIiwgXCJzaXplXCI6IDAuOTM0NTQ2MzU1NjIzMjA4LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJhcHBsZVwiLCBcInNpemVcIjogNC4yNzk3OTc1MTQ5NTYyODE1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA5LCBcIm5hbWVcIjogXCJ0YWJhc2NvX3BlcHBlclwiLCBcInNpemVcIjogMS43MDgwMjUwNjI4MzQwODI1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMSwgXCJuYW1lXCI6IFwiY29jb2FcIiwgXCJzaXplXCI6IDguNDk3NjQ1OTM0MzY5MzU3LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJzb3liZWFuXCIsIFwic2l6ZVwiOiAxLjgzMDE1MzI3OTc2MjExNTYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDExLCBcIm5hbWVcIjogXCJibGFja190ZWFcIiwgXCJzaXplXCI6IDAuMDY3MjU5MDE4MDE4MzM2OTMsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcIndoaXRlX2JyZWFkXCIsIFwic2l6ZVwiOiAwLjY1NDg5MDQzODU5OTU5NjUsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJoZXJyaW5nXCIsIFwic2l6ZVwiOiAwLjAxNzY5OTc0MTU4Mzc3Mjg4LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJsaW1lXCIsIFwic2l6ZVwiOiAxLjkxNjg4MjAxMzUyMjYwMjMsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcImJlZWZcIiwgXCJzaXplXCI6IDguNTM0ODE1MzkxNjk1MjgsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInNoaWl0YWtlXCIsIFwic2l6ZVwiOiAwLjkwNDQ1Njc5NDkzMDc5MzksIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcImFuaXNlXCIsIFwic2l6ZVwiOiAwLjM5NDcwNDIzNzMxODEzNTIsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJjYXZpYXJcIiwgXCJzaXplXCI6IDAuMDQ2MDE5MzI4MTE3ODA5NDgsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcImN1cmVkX3BvcmtcIiwgXCJzaXplXCI6IDAuNTU1NzcxODg1NzMwNDY4MywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwiYnV0dGVybWlsa1wiLCBcInNpemVcIjogMi44OTAzNjc4MDA2MzAxMTA2LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJiZWVyXCIsIFwic2l6ZVwiOiAwLjUzNjMwMjE2OTk4ODMxODEsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImdyYXBlZnJ1aXRcIiwgXCJzaXplXCI6IDAuMjA3MDg2OTc2NTMwMTQyNjksIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcImJyb3duX3JpY2VcIiwgXCJzaXplXCI6IDAuNTk2NDgxMjkxMzczMTQ2LCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiA2LCBcIm5hbWVcIjogXCJiYXNpbFwiLCBcInNpemVcIjogNi42ODg3MzIzNDQ1MDc3NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwicm9hc3RlZF9iZWVmXCIsIFwic2l6ZVwiOiAwLjM5MjkzNDI2MzE1OTc1NzksIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImtpd2lcIiwgXCJzaXplXCI6IDAuMTg1ODQ3Mjg2NjI5NjE1MjIsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcImdyZWVuX2JlbGxfcGVwcGVyXCIsIFwic2l6ZVwiOiA0LjU2Mjk5MzM4MDI5NjY0NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwibXVzaHJvb21cIiwgXCJzaXplXCI6IDUuODcxMDA0MjgzMzM3NDYzLCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJzaGFsbG90XCIsIFwic2l6ZVwiOiAyLjEwMDk1OTMyNTk5Mzg0MDQsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcInJlZF93aW5lXCIsIFwic2l6ZVwiOiAyLjQ2NTU3NDAwMjYxOTU2MTYsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcInRhbmdlcmluZVwiLCBcInNpemVcIjogMC4wNzc4Nzg4NjI5Njg2MDA2NSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwib3JhbmdlXCIsIFwic2l6ZVwiOiAzLjAyNDg4NTgzNjY2Njc4NDYsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDksIFwibmFtZVwiOiBcImdpbmdlclwiLCBcInNpemVcIjogNi43NTQyMjEzODgzNjc3MywgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwib2xpdmVcIiwgXCJzaXplXCI6IDMuMTgwNjQzNTYyNjAzOTg2LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMSwgXCJuYW1lXCI6IFwibGltZV9wZWVsX29pbFwiLCBcInNpemVcIjogMC4xNzY5OTc0MTU4Mzc3Mjg3NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMSwgXCJuYW1lXCI6IFwiYXByaWNvdFwiLCBcInNpemVcIjogMS4wOTczODM5NzgxOTM5MTg1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA0LCBcIm5hbWVcIjogXCJtYWx0XCIsIFwic2l6ZVwiOiAwLjA2NTQ4OTA0Mzg1OTk1OTY0LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJlbm9raWRha2VcIiwgXCJzaXplXCI6IDAuMTg3NjE3MjYwNzg3OTkyNDgsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImJhbmFuYVwiLCBcInNpemVcIjogMS43NDE2NTQ1NzE4NDMyNTEsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcInN0cmF3YmVycnlcIiwgXCJzaXplXCI6IDEuOTA4MDMyMTQyNzMwNzE2MywgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogMiwgXCJuYW1lXCI6IFwicG9ya19saXZlclwiLCBcInNpemVcIjogMC4wMDg4NDk4NzA3OTE4ODY0NCwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwid2hpc2tleVwiLCBcInNpemVcIjogMC4yNjE5NTYxNzU0Mzk4Mzg1NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogOCwgXCJuYW1lXCI6IFwiY29jb251dFwiLCBcInNpemVcIjogMy4wMjY2NTU4MTA4MjUxNjIsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcIm11dHRvblwiLCBcInNpemVcIjogMC4wMDUzMDk5MjI0NzUxMzE4NjM0LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA1LCBcIm5hbWVcIjogXCJwb3J0X3dpbmVcIiwgXCJzaXplXCI6IDAuMDg2NzI4NzMzNzYwNDg3MDksIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEzLCBcIm5hbWVcIjogXCJob25leVwiLCBcInNpemVcIjogNC4zOTQ4NDU4MzUyNTA4MDU1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA4LCBcIm5hbWVcIjogXCJzZWVkXCIsIFwic2l6ZVwiOiAyLjMyMzk3NjA2OTk0OTM3ODgsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInJlZF9raWRuZXlfYmVhblwiLCBcInNpemVcIjogMC4xMDQ0Mjg0NzUzNDQyNTk5NywgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNiwgXCJuYW1lXCI6IFwibWludFwiLCBcInNpemVcIjogMS42NDk2MTU5MTU2MDc2MzIyLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiA3LCBcIm5hbWVcIjogXCJjcmVhbVwiLCBcInNpemVcIjogMTcuOTY4Nzc3NjU1ODQ2MjI1LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAyLCBcIm5hbWVcIjogXCJsYW1iXCIsIFwic2l6ZVwiOiAwLjgzNTQyNzgwMjc1NDA3OTgsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImxlbW9uXCIsIFwic2l6ZVwiOiA1LjM5MTM0MTI4NjQxNzIxODUsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInJodWJhcmJcIiwgXCJzaXplXCI6IDAuMjk5MTI1NjMyNzY1NzYxNiwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMTAsIFwibmFtZVwiOiBcImNhdGZpc2hcIiwgXCJzaXplXCI6IDAuMTIwMzU4MjQyNzY5NjU1NTcsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDUsIFwibmFtZVwiOiBcInNoZXJyeVwiLCBcInNpemVcIjogMS4xMTUwODM3MTk3Nzc2OTEzLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAzLCBcIm5hbWVcIjogXCJsZWVrXCIsIFwic2l6ZVwiOiAwLjcyNzQ1OTM3OTA5MzA2NTIsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcImJlbGxfcGVwcGVyXCIsIFwic2l6ZVwiOiAxMC4zNDkwMzg5MDQwMzIwMDEsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDEsIFwibmFtZVwiOiBcImNyYW5iZXJyeVwiLCBcInNpemVcIjogMS42MjEyOTYzMjkwNzM1OTU2LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwic2FsbW9uXCIsIFwic2l6ZVwiOiAwLjc2ODE2ODc4NDczNTc0MjksIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcImNoaXZlXCIsIFwic2l6ZVwiOiAyLjMyNzUxNjAxODI2NjEzMywgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogMTIsIFwibmFtZVwiOiBcImZsb3dlclwiLCBcInNpemVcIjogMC4wNTMwOTkyMjQ3NTEzMTg2MjYsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcImdhcmxpY1wiLCBcInNpemVcIjogMjkuOTAwMTczNDU3NDY3NTIsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDExLCBcIm5hbWVcIjogXCJncmVlbl90ZWFcIiwgXCJzaXplXCI6IDAuMDU2NjM5MTczMDY4MDczMiwgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwibW96emFyZWxsYV9jaGVlc2VcIiwgXCJzaXplXCI6IDIuMjgzMjY2NjY0MzA2NzAxLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwidHVuYVwiLCBcInNpemVcIjogMC43ODQwOTg1NTIxNjExMzg0LCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJuZWN0YXJpbmVcIiwgXCJzaXplXCI6IDAuMDg4NDk4NzA3OTE4ODY0MzgsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDIsIFwibmFtZVwiOiBcInBvcmtfc2F1c2FnZVwiLCBcInNpemVcIjogMi40MTA3MDQ4MDM3MDk4NjYsIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDMsIFwibmFtZVwiOiBcInRvbWF0b1wiLCBcInNpemVcIjogMTcuNTM4NjczOTM1MzYwNTQyLCBcInVtYW1pXCI6IDF9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwiY29kXCIsIFwic2l6ZVwiOiAwLjMwNzk3NTUwMzU1NzY0ODEsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDYsIFwibmFtZVwiOiBcInRhcnJhZ29uXCIsIFwic2l6ZVwiOiAwLjg0MjUwNzY5OTM4NzU4OSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMywgXCJuYW1lXCI6IFwicG90YXRvXCIsIFwic2l6ZVwiOiA2LjI3NDU1ODM5MTQ0NzQ4NSwgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogNywgXCJuYW1lXCI6IFwiZmV0YV9jaGVlc2VcIiwgXCJzaXplXCI6IDEuMDk5MTUzOTUyMzUyMjk1NSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwiY2FiZXJuZXRfc2F1dmlnbm9uX3dpbmVcIiwgXCJzaXplXCI6IDAuMDMwMDg5NTYwNjkyNDEzODksIFwidW1hbWlcIjogMH0sIHtcImdyb3VwX2lkXCI6IDQsIFwibmFtZVwiOiBcIndoZWF0X2JyZWFkXCIsIFwic2l6ZVwiOiAwLjE0NjkwNzg1NTE0NTMxNDg4LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxLCBcIm5hbWVcIjogXCJtdXNjYXRfZ3JhcGVcIiwgXCJzaXplXCI6IDAuMDAxNzY5OTc0MTU4Mzc3Mjg3NSwgXCJ1bWFtaVwiOiAwfSwge1wiZ3JvdXBfaWRcIjogMTEsIFwibmFtZVwiOiBcImNvY29udXRfb2lsXCIsIFwic2l6ZVwiOiAwLjAzMDA4OTU2MDY5MjQxMzg5LCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMywgXCJuYW1lXCI6IFwiZWdnXCIsIFwic2l6ZVwiOiAzNy4wODI3Mjg1OTIxNjI1NSwgXCJ1bWFtaVwiOiAxfSwge1wiZ3JvdXBfaWRcIjogNSwgXCJuYW1lXCI6IFwid2luZVwiLCBcInNpemVcIjogMS41NTIyNjczMzY4OTY4ODEzLCBcInVtYW1pXCI6IDB9LCB7XCJncm91cF9pZFwiOiAxMCwgXCJuYW1lXCI6IFwia2F0c3VvYnVzaGlcIiwgXCJzaXplXCI6IDAuMDg2NzI4NzMzNzYwNDk5OTcsIFwidW1hbWlcIjogMX0sIHtcImdyb3VwX2lkXCI6IDEwLCBcIm5hbWVcIjogXCJzYXJkaW5lXCIsIFwic2l6ZVwiOiAwLjAsIFwidW1hbWlcIjogMX1dfVxuZXhwb3J0IGRlZmF1bHQgdW1hbWlEYXRhOyIsImltcG9ydCAqIGFzIGQzIGZyb20gXCJkM1wiO1xuXG5pbXBvcnQgZmxhdm9yRGF0YSBmcm9tICcuL2RhdGEvZmxhdm9yX2RhdGEnO1xuaW1wb3J0IHVtYW1pRGF0YSBmcm9tICcuL2RhdGEvdW1hbWlfZGF0YSc7XG5cbmltcG9ydCBOZXR3b3JrIGZyb20gJy4vTmV0d29yayc7XG5pbXBvcnQgTW91c2UgZnJvbSBcIi4vTW91c2VcIjtcbmltcG9ydCBDb25uZWN0aW9uIGZyb20gXCIuL0Nvbm5lY3Rpb25cIjtcblxuXG4oKCkgPT4ge1xuXG4gIC8vIGluaXRpYWwgc3ZnIHNldHRpbmdcbiAgZDMuc2VsZWN0QWxsKCcuZ3JhcGgnKVxuICAgICAgLmF0dHIoXCJ3aWR0aFwiLCAwKVxuICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgMCk7XG5cbiAgLy8gbW9iaWxlIGNoZWNrXG4gIGxldCBpc1NwID0gKChuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ2lQaG9uZScpID4gMCB8fFxuICAgICAgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdpUGFkJykgPiAwKSB8fFxuICAgICAgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdpUG9kJykgPiAwIHx8XG4gICAgICBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0FuZHJvaWQnKSA+IDApO1xuICBjb25zb2xlLmxvZyhpc1NwKTtcblxuICAvLyBuYW1lOiBub2RlIG5hbWVcbiAgLy8gbmV0d29yazogbmV0d29yayBvYmplY3QgaXMgYmVpbmcgbWFuaXB1bGF0ZWRcbiAgLy8gbmV0d29yazogbW91c2VBY3Rpb24gd2hpY2ggaXMgZXZlbnQgdHJpZ2dlclxuICBsZXQgbm9kZUluZm8gPSB7J25hbWUnOiAnJywgJ25ldHdvcmsnOiAnJywgJ21vdXNlQWN0aW9uJzogJyd9O1xuXG5cbiAgbGV0IG5ldHdvcmtNYWluLCBuZXR3b3JrU3ViO1xuXG4gIC8vIEJhc2UgZ3JhcGhcbiAgbmV0d29ya01haW4gPSBuZXcgTmV0d29yayhmbGF2b3JEYXRhLCB1bWFtaURhdGEsIGlzU3AsICcjZ3JhcGhNYWluJywgJ0ZsYXZvcicsICdTaW5nbGUnLCAnTWFpbicsIG5vZGVJbmZvKTtcbiAgbmV0d29ya01haW4uc2V0TGVnZW5kKCk7XG4gIG5ldHdvcmtNYWluLnJlbmRlcigpO1xuICBuZXR3b3JrTWFpbi5zZXRNb3VzZUFjdGlvbigpO1xuXG5cbiAgZnVuY3Rpb24gd2F0Y2hNb3VzZUFjdGlvbihvYmosIHByb3BOYW1lLCBmdW5jKSB7XG4gICAgbGV0IHZhbHVlID0gb2JqW3Byb3BOYW1lXTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBwcm9wTmFtZSwge1xuICAgICAgZ2V0OiAoKSA9PiB2YWx1ZSxcbiAgICAgIHNldDogbmV3VmFsdWUgPT4ge1xuICAgICAgICBjb25zdCBvbGRWYWx1ZSA9IHZhbHVlO1xuICAgICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgICBmdW5jKG9sZFZhbHVlLCBvYmopO1xuICAgICAgfSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9XG5cbiAgd2F0Y2hNb3VzZUFjdGlvbihub2RlSW5mbywgJ21vdXNlQWN0aW9uJywgb25DaGFuZ2UpO1xuICBmdW5jdGlvbiBvbkNoYW5nZShvbGRWYWwsIG9iaikge1xuICAgIGlmIChuZXR3b3JrTWFpbi52aXpNb2RlID09PSAnU2luZ2xlJykgcmV0dXJuO1xuICAgIGxldCBOO1xuICAgIGlmKG9iai5uZXR3b3JrID09PSAnTWFpbicpe1xuICAgICAgTiA9IG5ldHdvcmtTdWI7XG4gICAgfWVsc2V7XG4gICAgICBOID0gbmV0d29ya01haW47XG4gICAgfVxuXG4gICAgaWYgKG9iai5tb3VzZUFjdGlvbiA9PT0gJ21vdXNlZW50ZXInKSB7XG4gICAgICBNb3VzZS5yZXNldChOLmxpbmtEYXRhLCBOLmxpbmssIE4ubm9kZSwgTi5sYWJlbCk7XG4gICAgICBNb3VzZS5jdXJzb3IoTi52aXpNb2RlID09PSAnU2luZ2xlJyA/J2dyYWInIDogJ3BvaW50ZXInLCBOLmJvZHksIE4ubm9kZSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgaW5kZXggPSBOLmRldGVjdE5vZGVJbmRleChvYmoubmFtZSk7XG4gICAgaWYgKG9iai5tb3VzZUFjdGlvbiA9PT0gJ21vdXNlb3ZlcicpIHtcbiAgICAgIE1vdXNlLm1vdXNlb3ZlcihpbmRleCwgTi5saW5rRGF0YSwgTi5saW5rLCBOLm5vZGUsIE4ubGFiZWwpO1xuXG4gICAgICBsZXQgRiA9IENvbm5lY3Rpb24ubWFrZU5vZGVMaXN0KG5ldHdvcmtNYWluLmRldGVjdE5vZGVJbmRleChvYmoubmFtZSksIG5ldHdvcmtNYWluLmxpbmtEYXRhKTtcbiAgICAgIGxldCBVID0gQ29ubmVjdGlvbi5tYWtlTm9kZUxpc3QobmV0d29ya1N1Yi5kZXRlY3ROb2RlSW5kZXgob2JqLm5hbWUpLCBuZXR3b3JrU3ViLmxpbmtEYXRhKTtcbiAgICAgIGNvbnNvbGUubG9nKEYpO1xuICAgICAgY29uc29sZS5sb2coVSk7XG5cblxuICAgICAgQ29ubmVjdGlvbi5kaXNwbGF5RGV0YWlsKG9iai5uYW1lLCBGLnNhbWVOb2RlcywgRi5kaWZmTm9kZXMsICdkZXRhaWxGbGF2b3InKTtcbiAgICAgIENvbm5lY3Rpb24uZGlzcGxheURldGFpbChvYmoubmFtZSwgVS5zYW1lTm9kZXMsIFUuZGlmZk5vZGVzLCAnZGV0YWlsVW1hbWknKTtcblxuXG4gICAgfSBlbHNlIGlmIChvYmoubW91c2VBY3Rpb24gPT09ICdtb3VzZW91dCcpIHtcbiAgICAgIE1vdXNlLm1vdXNlb3V0KE4ubGlua0RhdGEsIE4ubGluaywgTi5ub2RlLCBOLmxhYmVsKTtcbiAgICB9XG4gIH1cblxuXG5cbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImRibGNsaWNrXCIsIGZ1bmN0aW9uKCl7XG4gICAgbmV0d29ya01haW4uc3ZnXG4gICAgICAudHJhbnNpdGlvbigpXG4gICAgICAuZHVyYXRpb24oMTAwMClcbiAgICAgIC5lYXNlKGQzLmVhc2VMaW5lYXIpXG4gICAgICAuYXR0cihcIndpZHRoXCIsIDUwMClcbiAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIDMyNSk7XG5cbiAgICBuZXR3b3JrTWFpbi5zZXRWaXpNb2RlKCdNdWx0aScpO1xuXG5cbiAgICBuZXR3b3JrU3ViID0gbmV3IE5ldHdvcmsoZmxhdm9yRGF0YSwgdW1hbWlEYXRhLCBpc1NwLCAnI2dyYXBoU3ViMicsICdVbWFtaScsICdNdWx0aScsICdTdWInLCBub2RlSW5mbyk7XG4gICAgbmV0d29ya1N1Yi5zZXRMZWdlbmQoKTtcbiAgICBuZXR3b3JrU3ViLnJlbmRlcigpO1xuICAgIG5ldHdvcmtTdWIuc2V0TW91c2VBY3Rpb24oKTtcblxuICAgIG5ldHdvcmtTdWIuc3ZnXG4gICAgICAgIC50cmFuc2l0aW9uKClcbiAgICAgICAgLmR1cmF0aW9uKDEwMDApXG4gICAgICAgIC5lYXNlKGQzLmVhc2VMaW5lYXIpXG4gICAgICAgIC5hdHRyKFwid2lkdGhcIiwgNTAwKVxuICAgICAgICAuYXR0cihcImhlaWdodFwiLCAzMjUpO1xuXG5cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRldGFpbEZsYXZvclwiKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRldGFpbFVtYW1pXCIpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXG5cbiAgfSwgZmFsc2UpO1xuXG5cblxuXG4gIGNvbnN0IGRhdGFUeXBlU2VsZWN0b3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGF0YVR5cGUnKTtcbiAgZGF0YVR5cGVTZWxlY3Rvci5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBzZWxlY3RlZFR5cGUgPSB0aGlzLm9wdGlvbnNbdGhpcy5zZWxlY3RlZEluZGV4XS52YWx1ZTtcbiAgICBuZXR3b3JrTWFpbi51cGRhdGUoc2VsZWN0ZWRUeXBlKTtcbiAgICBuZXR3b3JrTWFpbi5zZXRNb3VzZUFjdGlvbigpO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoMScpLnRleHRDb250ZW50ID0gc2VsZWN0ZWRUeXBlICsgJyBOZXR3b3JrJztcbiAgfTtcblxuXG59KSgpO1xuXG4iXSwic291cmNlUm9vdCI6IiJ9